var u8=Object.defineProperty;var L=(E,A)=>u8(E,"name",{value:A,configurable:!0});import{i as D,B as wb,I as D8,M as t,f as Et,g as HR,r as vb,a as _e,b as ph,c as JA,d as b,e as NE,h as Ve,t as wn,N as Rt,p as Ln,j as uE,k as IO,l as Go,m as ll,n as CR,o as UR,q as Wh,s as tM,u as hA,v as $d,w as M8,x as AA,y as UL,z as zd,A as za,C as qd,R as h8,D as Yh,E as Ho,F as c8,G as Lt,H as ZE,P as EE,J as hs,K as ML,L as _8,O as P8,Q as or,S as OO,T as qa,U as Vb,V as Il,W as ca,X as aO,Y as lr,Z as Cl,_ as SM,$ as G8,a0 as H8,a1 as d8,a2 as al,a3 as uL,a4 as f8,a5 as B8,a6 as g8,a7 as K8,a8 as m8,a9 as fV,aa as F8,ab as p8,ac as W8,ad as Yt,ae as yh,af as Y8,ag as y8,ah as xb,ai as wo,aj as w8,ak as v8,al as V8,am as BV,an as x8,ao as b8,ap as k8}from"./index-ac1flUqL.js";const Ul=Object.freeze(Object.defineProperty({__proto__:null,get AddPokeballModifier(){return rD},get AddVoucherModifier(){return LD},get AttackTypeBoosterModifier(){return Sn},get BaseStatModifier(){return qS},get BerryModifier(){return lE},get BoostBugSpawnModifier(){return Uo},get BypassSpeedChanceModifier(){return Na},get ConsumableModifier(){return $i},get ConsumablePokemonModifier(){return KR},get ConsumablePokemonMoveModifier(){return Ro},get ContactHeldItemTransferChanceModifier(){return Ua},get CritBoosterModifier(){return eL},get CriticalCatchChanceBoosterModifier(){return lo},get DamageMoneyRewardModifier(){return $n},get DoubleBattleChanceBoosterModifier(){return Qr},get EnemyAttackStatusEffectChanceModifier(){return sL},get EnemyDamageBoosterModifier(){return Do},get EnemyDamageReducerModifier(){return Mo},get EnemyEndureChanceModifier(){return _o},get EnemyFusionChanceModifier(){return Po},get EnemyPersistentModifier(){return Un},get EnemyStatusEffectHealChanceModifier(){return co},get EnemyTurnHealModifier(){return ho},get EvoTrackerModifier(){return jS},get EvolutionItemModifier(){return uD},get EvolutionStatBoosterModifier(){return ND},get ExpBalanceModifier(){return Lo},get ExpBoosterModifier(){return EL},get ExpShareModifier(){return ro},get ExtraModifierModifier(){return qn},get FlinchChanceModifier(){return so},get FusePokemonModifier(){return io},get GigantamaxAccessModifier(){return zr},get HealShopCostModifier(){return AI},get HealingBoosterModifier(){return oa},get HeldItemTransferModifier(){return uo},get HiddenAbilityRateBoosterModifier(){return zn},get HitHealModifier(){return ji},get IvScannerModifier(){return ua},get LapsingPersistentModifier(){return zi},get LapsingPokemonHeldItemModifier(){return qr},get LevelIncrementBoosterModifier(){return eI},get LockModifierTiersModifier(){return Co},get MapModifier(){return $S},get MegaEvolutionAccessModifier(){return $r},get Modifier(){return QS},get ModifierBar(){return XS},get MoneyInterestModifier(){return oo},get MoneyMultiplierModifier(){return mR},get MoneyRewardModifier(){return DD},get MultipleParticipantExpBonusModifier(){return Io},get PersistentModifier(){return VA},get PokemonAllMovePpRestoreModifier(){return oD},get PokemonBaseStatFlatModifier(){return to},get PokemonBaseStatTotalModifier(){return eo},get PokemonExpBoosterModifier(){return ao},get PokemonFormChangeItemModifier(){return IR},get PokemonFriendshipBoosterModifier(){return No},get PokemonHeldItemModifier(){return Ht},get PokemonHpRestoreModifier(){return tI},get PokemonIncrementingStatModifier(){return ra},get PokemonInstantReviveModifier(){return tL},get PokemonLevelIncrementModifier(){return Oo},get PokemonMoveAccuracyBoosterModifier(){return So},get PokemonMultiHitModifier(){return Jn},get PokemonNatureChangeModifier(){return CD},get PokemonNatureWeightModifier(){return To},get PokemonPpRestoreModifier(){return SD},get PokemonPpUpModifier(){return lD},get PokemonStatusHealModifier(){return TD},get PreserveBerryModifier(){return Sa},get RememberMoveModifier(){return no},get ResetNegativeStatStageModifier(){return AL},get ShinyRateBoosterModifier(){return la},get SpeciesCritBoosterModifier(){return Ao},get SpeciesStatBoosterModifier(){return La},get StatBoosterModifier(){return jr},get SurviveDamageModifier(){return Eo},get SwitchEffectTransferModifier(){return Fi},get TempCritBoosterModifier(){return JS},get TempExtraModifierModifier(){return jn},get TempStatStageBoosterModifier(){return Jr},get TerastallizeAccessModifier(){return zS},get TerastallizeModifier(){return OR},get TmModifier(){return UD},get TurnHealModifier(){return Ta},get TurnHeldItemTransferModifier(){return Ca},get TurnStatusEffectModifier(){return qi},get modifierSortFunc(){return ZS},get overrideHeldItems(){return M1},get overrideModifiers(){return D1}},Symbol.toStringTag,{value:"Module"}));var Pn=(E=>(E[E.MOVE=0]="MOVE",E[E.LEGENDARY=1]="LEGENDARY",E[E.SHINY=2]="SHINY",E))(Pn||{}),i=(E=>(E[E.UNKNOWN=-1]="UNKNOWN",E[E.NORMAL=0]="NORMAL",E[E.FIGHTING=1]="FIGHTING",E[E.FLYING=2]="FLYING",E[E.POISON=3]="POISON",E[E.GROUND=4]="GROUND",E[E.ROCK=5]="ROCK",E[E.BUG=6]="BUG",E[E.GHOST=7]="GHOST",E[E.STEEL=8]="STEEL",E[E.FIRE=9]="FIRE",E[E.WATER=10]="WATER",E[E.GRASS=11]="GRASS",E[E.ELECTRIC=12]="ELECTRIC",E[E.PSYCHIC=13]="PSYCHIC",E[E.ICE=14]="ICE",E[E.DRAGON=15]="DRAGON",E[E.DARK=16]="DARK",E[E.FAIRY=17]="FAIRY",E[E.STELLAR=18]="STELLAR",E))(i||{}),je=(E=>(E[E.GENDERLESS=-1]="GENDERLESS",E[E.MALE=0]="MALE",E[E.FEMALE=1]="FEMALE",E))(je||{});function OL(E){switch(E){case 0:return"♂";case 1:return"♀"}return""}L(OL,"getGenderSymbol");function vn(E,A){switch(E){case 0:return A?"#006090":"#40c8f8";case 1:return A?"#984038":"#f89890"}return"#ffffff"}L(vn,"getGenderColor");var be=(E=>(E[E.POKEBALL=0]="POKEBALL",E[E.GREAT_BALL=1]="GREAT_BALL",E[E.ULTRA_BALL=2]="ULTRA_BALL",E[E.ROGUE_BALL=3]="ROGUE_BALL",E[E.MASTER_BALL=4]="MASTER_BALL",E[E.LUXURY_BALL=5]="LUXURY_BALL",E))(be||{}),se=(E=>(E[E.NONE=0]="NONE",E[E.SUNNY=1]="SUNNY",E[E.RAIN=2]="RAIN",E[E.SANDSTORM=3]="SANDSTORM",E[E.HAIL=4]="HAIL",E[E.SNOW=5]="SNOW",E[E.FOG=6]="FOG",E[E.HEAVY_RAIN=7]="HEAVY_RAIN",E[E.HARSH_SUN=8]="HARSH_SUN",E[E.STRONG_WINDS=9]="STRONG_WINDS",E))(se||{}),At=(E=>(E[E.HARDY=0]="HARDY",E[E.LONELY=1]="LONELY",E[E.BRAVE=2]="BRAVE",E[E.ADAMANT=3]="ADAMANT",E[E.NAUGHTY=4]="NAUGHTY",E[E.BOLD=5]="BOLD",E[E.DOCILE=6]="DOCILE",E[E.RELAXED=7]="RELAXED",E[E.IMPISH=8]="IMPISH",E[E.LAX=9]="LAX",E[E.TIMID=10]="TIMID",E[E.HASTY=11]="HASTY",E[E.SERIOUS=12]="SERIOUS",E[E.JOLLY=13]="JOLLY",E[E.NAIVE=14]="NAIVE",E[E.MODEST=15]="MODEST",E[E.MILD=16]="MILD",E[E.QUIET=17]="QUIET",E[E.BASHFUL=18]="BASHFUL",E[E.RASH=19]="RASH",E[E.CALM=20]="CALM",E[E.GENTLE=21]="GENTLE",E[E.SASSY=22]="SASSY",E[E.CAREFUL=23]="CAREFUL",E[E.QUIRKY=24]="QUIRKY",E))(At||{}),N=(E=>(E[E.TOWN=0]="TOWN",E[E.PLAINS=1]="PLAINS",E[E.GRASS=2]="GRASS",E[E.TALL_GRASS=3]="TALL_GRASS",E[E.METROPOLIS=4]="METROPOLIS",E[E.FOREST=5]="FOREST",E[E.SEA=6]="SEA",E[E.SWAMP=7]="SWAMP",E[E.BEACH=8]="BEACH",E[E.LAKE=9]="LAKE",E[E.SEABED=10]="SEABED",E[E.MOUNTAIN=11]="MOUNTAIN",E[E.BADLANDS=12]="BADLANDS",E[E.CAVE=13]="CAVE",E[E.DESERT=14]="DESERT",E[E.ICE_CAVE=15]="ICE_CAVE",E[E.MEADOW=16]="MEADOW",E[E.POWER_PLANT=17]="POWER_PLANT",E[E.VOLCANO=18]="VOLCANO",E[E.GRAVEYARD=19]="GRAVEYARD",E[E.DOJO=20]="DOJO",E[E.FACTORY=21]="FACTORY",E[E.RUINS=22]="RUINS",E[E.WASTELAND=23]="WASTELAND",E[E.ABYSS=24]="ABYSS",E[E.SPACE=25]="SPACE",E[E.CONSTRUCTION_SITE=26]="CONSTRUCTION_SITE",E[E.JUNGLE=27]="JUNGLE",E[E.FAIRY_CAVE=28]="FAIRY_CAVE",E[E.TEMPLE=29]="TEMPLE",E[E.SLUM=30]="SLUM",E[E.SNOWY_FOREST=31]="SNOWY_FOREST",E[E.ISLAND=40]="ISLAND",E[E.LABORATORY=41]="LABORATORY",E[E.END=50]="END",E))(N||{}),e=(E=>(E[E.BULBASAUR=1]="BULBASAUR",E[E.IVYSAUR=2]="IVYSAUR",E[E.VENUSAUR=3]="VENUSAUR",E[E.CHARMANDER=4]="CHARMANDER",E[E.CHARMELEON=5]="CHARMELEON",E[E.CHARIZARD=6]="CHARIZARD",E[E.SQUIRTLE=7]="SQUIRTLE",E[E.WARTORTLE=8]="WARTORTLE",E[E.BLASTOISE=9]="BLASTOISE",E[E.CATERPIE=10]="CATERPIE",E[E.METAPOD=11]="METAPOD",E[E.BUTTERFREE=12]="BUTTERFREE",E[E.WEEDLE=13]="WEEDLE",E[E.KAKUNA=14]="KAKUNA",E[E.BEEDRILL=15]="BEEDRILL",E[E.PIDGEY=16]="PIDGEY",E[E.PIDGEOTTO=17]="PIDGEOTTO",E[E.PIDGEOT=18]="PIDGEOT",E[E.RATTATA=19]="RATTATA",E[E.RATICATE=20]="RATICATE",E[E.SPEAROW=21]="SPEAROW",E[E.FEAROW=22]="FEAROW",E[E.EKANS=23]="EKANS",E[E.ARBOK=24]="ARBOK",E[E.PIKACHU=25]="PIKACHU",E[E.RAICHU=26]="RAICHU",E[E.SANDSHREW=27]="SANDSHREW",E[E.SANDSLASH=28]="SANDSLASH",E[E.NIDORAN_F=29]="NIDORAN_F",E[E.NIDORINA=30]="NIDORINA",E[E.NIDOQUEEN=31]="NIDOQUEEN",E[E.NIDORAN_M=32]="NIDORAN_M",E[E.NIDORINO=33]="NIDORINO",E[E.NIDOKING=34]="NIDOKING",E[E.CLEFAIRY=35]="CLEFAIRY",E[E.CLEFABLE=36]="CLEFABLE",E[E.VULPIX=37]="VULPIX",E[E.NINETALES=38]="NINETALES",E[E.JIGGLYPUFF=39]="JIGGLYPUFF",E[E.WIGGLYTUFF=40]="WIGGLYTUFF",E[E.ZUBAT=41]="ZUBAT",E[E.GOLBAT=42]="GOLBAT",E[E.ODDISH=43]="ODDISH",E[E.GLOOM=44]="GLOOM",E[E.VILEPLUME=45]="VILEPLUME",E[E.PARAS=46]="PARAS",E[E.PARASECT=47]="PARASECT",E[E.VENONAT=48]="VENONAT",E[E.VENOMOTH=49]="VENOMOTH",E[E.DIGLETT=50]="DIGLETT",E[E.DUGTRIO=51]="DUGTRIO",E[E.MEOWTH=52]="MEOWTH",E[E.PERSIAN=53]="PERSIAN",E[E.PSYDUCK=54]="PSYDUCK",E[E.GOLDUCK=55]="GOLDUCK",E[E.MANKEY=56]="MANKEY",E[E.PRIMEAPE=57]="PRIMEAPE",E[E.GROWLITHE=58]="GROWLITHE",E[E.ARCANINE=59]="ARCANINE",E[E.POLIWAG=60]="POLIWAG",E[E.POLIWHIRL=61]="POLIWHIRL",E[E.POLIWRATH=62]="POLIWRATH",E[E.ABRA=63]="ABRA",E[E.KADABRA=64]="KADABRA",E[E.ALAKAZAM=65]="ALAKAZAM",E[E.MACHOP=66]="MACHOP",E[E.MACHOKE=67]="MACHOKE",E[E.MACHAMP=68]="MACHAMP",E[E.BELLSPROUT=69]="BELLSPROUT",E[E.WEEPINBELL=70]="WEEPINBELL",E[E.VICTREEBEL=71]="VICTREEBEL",E[E.TENTACOOL=72]="TENTACOOL",E[E.TENTACRUEL=73]="TENTACRUEL",E[E.GEODUDE=74]="GEODUDE",E[E.GRAVELER=75]="GRAVELER",E[E.GOLEM=76]="GOLEM",E[E.PONYTA=77]="PONYTA",E[E.RAPIDASH=78]="RAPIDASH",E[E.SLOWPOKE=79]="SLOWPOKE",E[E.SLOWBRO=80]="SLOWBRO",E[E.MAGNEMITE=81]="MAGNEMITE",E[E.MAGNETON=82]="MAGNETON",E[E.FARFETCHD=83]="FARFETCHD",E[E.DODUO=84]="DODUO",E[E.DODRIO=85]="DODRIO",E[E.SEEL=86]="SEEL",E[E.DEWGONG=87]="DEWGONG",E[E.GRIMER=88]="GRIMER",E[E.MUK=89]="MUK",E[E.SHELLDER=90]="SHELLDER",E[E.CLOYSTER=91]="CLOYSTER",E[E.GASTLY=92]="GASTLY",E[E.HAUNTER=93]="HAUNTER",E[E.GENGAR=94]="GENGAR",E[E.ONIX=95]="ONIX",E[E.DROWZEE=96]="DROWZEE",E[E.HYPNO=97]="HYPNO",E[E.KRABBY=98]="KRABBY",E[E.KINGLER=99]="KINGLER",E[E.VOLTORB=100]="VOLTORB",E[E.ELECTRODE=101]="ELECTRODE",E[E.EXEGGCUTE=102]="EXEGGCUTE",E[E.EXEGGUTOR=103]="EXEGGUTOR",E[E.CUBONE=104]="CUBONE",E[E.MAROWAK=105]="MAROWAK",E[E.HITMONLEE=106]="HITMONLEE",E[E.HITMONCHAN=107]="HITMONCHAN",E[E.LICKITUNG=108]="LICKITUNG",E[E.KOFFING=109]="KOFFING",E[E.WEEZING=110]="WEEZING",E[E.RHYHORN=111]="RHYHORN",E[E.RHYDON=112]="RHYDON",E[E.CHANSEY=113]="CHANSEY",E[E.TANGELA=114]="TANGELA",E[E.KANGASKHAN=115]="KANGASKHAN",E[E.HORSEA=116]="HORSEA",E[E.SEADRA=117]="SEADRA",E[E.GOLDEEN=118]="GOLDEEN",E[E.SEAKING=119]="SEAKING",E[E.STARYU=120]="STARYU",E[E.STARMIE=121]="STARMIE",E[E.MR_MIME=122]="MR_MIME",E[E.SCYTHER=123]="SCYTHER",E[E.JYNX=124]="JYNX",E[E.ELECTABUZZ=125]="ELECTABUZZ",E[E.MAGMAR=126]="MAGMAR",E[E.PINSIR=127]="PINSIR",E[E.TAUROS=128]="TAUROS",E[E.MAGIKARP=129]="MAGIKARP",E[E.GYARADOS=130]="GYARADOS",E[E.LAPRAS=131]="LAPRAS",E[E.DITTO=132]="DITTO",E[E.EEVEE=133]="EEVEE",E[E.VAPOREON=134]="VAPOREON",E[E.JOLTEON=135]="JOLTEON",E[E.FLAREON=136]="FLAREON",E[E.PORYGON=137]="PORYGON",E[E.OMANYTE=138]="OMANYTE",E[E.OMASTAR=139]="OMASTAR",E[E.KABUTO=140]="KABUTO",E[E.KABUTOPS=141]="KABUTOPS",E[E.AERODACTYL=142]="AERODACTYL",E[E.SNORLAX=143]="SNORLAX",E[E.ARTICUNO=144]="ARTICUNO",E[E.ZAPDOS=145]="ZAPDOS",E[E.MOLTRES=146]="MOLTRES",E[E.DRATINI=147]="DRATINI",E[E.DRAGONAIR=148]="DRAGONAIR",E[E.DRAGONITE=149]="DRAGONITE",E[E.MEWTWO=150]="MEWTWO",E[E.MEW=151]="MEW",E[E.CHIKORITA=152]="CHIKORITA",E[E.BAYLEEF=153]="BAYLEEF",E[E.MEGANIUM=154]="MEGANIUM",E[E.CYNDAQUIL=155]="CYNDAQUIL",E[E.QUILAVA=156]="QUILAVA",E[E.TYPHLOSION=157]="TYPHLOSION",E[E.TOTODILE=158]="TOTODILE",E[E.CROCONAW=159]="CROCONAW",E[E.FERALIGATR=160]="FERALIGATR",E[E.SENTRET=161]="SENTRET",E[E.FURRET=162]="FURRET",E[E.HOOTHOOT=163]="HOOTHOOT",E[E.NOCTOWL=164]="NOCTOWL",E[E.LEDYBA=165]="LEDYBA",E[E.LEDIAN=166]="LEDIAN",E[E.SPINARAK=167]="SPINARAK",E[E.ARIADOS=168]="ARIADOS",E[E.CROBAT=169]="CROBAT",E[E.CHINCHOU=170]="CHINCHOU",E[E.LANTURN=171]="LANTURN",E[E.PICHU=172]="PICHU",E[E.CLEFFA=173]="CLEFFA",E[E.IGGLYBUFF=174]="IGGLYBUFF",E[E.TOGEPI=175]="TOGEPI",E[E.TOGETIC=176]="TOGETIC",E[E.NATU=177]="NATU",E[E.XATU=178]="XATU",E[E.MAREEP=179]="MAREEP",E[E.FLAAFFY=180]="FLAAFFY",E[E.AMPHAROS=181]="AMPHAROS",E[E.BELLOSSOM=182]="BELLOSSOM",E[E.MARILL=183]="MARILL",E[E.AZUMARILL=184]="AZUMARILL",E[E.SUDOWOODO=185]="SUDOWOODO",E[E.POLITOED=186]="POLITOED",E[E.HOPPIP=187]="HOPPIP",E[E.SKIPLOOM=188]="SKIPLOOM",E[E.JUMPLUFF=189]="JUMPLUFF",E[E.AIPOM=190]="AIPOM",E[E.SUNKERN=191]="SUNKERN",E[E.SUNFLORA=192]="SUNFLORA",E[E.YANMA=193]="YANMA",E[E.WOOPER=194]="WOOPER",E[E.QUAGSIRE=195]="QUAGSIRE",E[E.ESPEON=196]="ESPEON",E[E.UMBREON=197]="UMBREON",E[E.MURKROW=198]="MURKROW",E[E.SLOWKING=199]="SLOWKING",E[E.MISDREAVUS=200]="MISDREAVUS",E[E.UNOWN=201]="UNOWN",E[E.WOBBUFFET=202]="WOBBUFFET",E[E.GIRAFARIG=203]="GIRAFARIG",E[E.PINECO=204]="PINECO",E[E.FORRETRESS=205]="FORRETRESS",E[E.DUNSPARCE=206]="DUNSPARCE",E[E.GLIGAR=207]="GLIGAR",E[E.STEELIX=208]="STEELIX",E[E.SNUBBULL=209]="SNUBBULL",E[E.GRANBULL=210]="GRANBULL",E[E.QWILFISH=211]="QWILFISH",E[E.SCIZOR=212]="SCIZOR",E[E.SHUCKLE=213]="SHUCKLE",E[E.HERACROSS=214]="HERACROSS",E[E.SNEASEL=215]="SNEASEL",E[E.TEDDIURSA=216]="TEDDIURSA",E[E.URSARING=217]="URSARING",E[E.SLUGMA=218]="SLUGMA",E[E.MAGCARGO=219]="MAGCARGO",E[E.SWINUB=220]="SWINUB",E[E.PILOSWINE=221]="PILOSWINE",E[E.CORSOLA=222]="CORSOLA",E[E.REMORAID=223]="REMORAID",E[E.OCTILLERY=224]="OCTILLERY",E[E.DELIBIRD=225]="DELIBIRD",E[E.MANTINE=226]="MANTINE",E[E.SKARMORY=227]="SKARMORY",E[E.HOUNDOUR=228]="HOUNDOUR",E[E.HOUNDOOM=229]="HOUNDOOM",E[E.KINGDRA=230]="KINGDRA",E[E.PHANPY=231]="PHANPY",E[E.DONPHAN=232]="DONPHAN",E[E.PORYGON2=233]="PORYGON2",E[E.STANTLER=234]="STANTLER",E[E.SMEARGLE=235]="SMEARGLE",E[E.TYROGUE=236]="TYROGUE",E[E.HITMONTOP=237]="HITMONTOP",E[E.SMOOCHUM=238]="SMOOCHUM",E[E.ELEKID=239]="ELEKID",E[E.MAGBY=240]="MAGBY",E[E.MILTANK=241]="MILTANK",E[E.BLISSEY=242]="BLISSEY",E[E.RAIKOU=243]="RAIKOU",E[E.ENTEI=244]="ENTEI",E[E.SUICUNE=245]="SUICUNE",E[E.LARVITAR=246]="LARVITAR",E[E.PUPITAR=247]="PUPITAR",E[E.TYRANITAR=248]="TYRANITAR",E[E.LUGIA=249]="LUGIA",E[E.HO_OH=250]="HO_OH",E[E.CELEBI=251]="CELEBI",E[E.TREECKO=252]="TREECKO",E[E.GROVYLE=253]="GROVYLE",E[E.SCEPTILE=254]="SCEPTILE",E[E.TORCHIC=255]="TORCHIC",E[E.COMBUSKEN=256]="COMBUSKEN",E[E.BLAZIKEN=257]="BLAZIKEN",E[E.MUDKIP=258]="MUDKIP",E[E.MARSHTOMP=259]="MARSHTOMP",E[E.SWAMPERT=260]="SWAMPERT",E[E.POOCHYENA=261]="POOCHYENA",E[E.MIGHTYENA=262]="MIGHTYENA",E[E.ZIGZAGOON=263]="ZIGZAGOON",E[E.LINOONE=264]="LINOONE",E[E.WURMPLE=265]="WURMPLE",E[E.SILCOON=266]="SILCOON",E[E.BEAUTIFLY=267]="BEAUTIFLY",E[E.CASCOON=268]="CASCOON",E[E.DUSTOX=269]="DUSTOX",E[E.LOTAD=270]="LOTAD",E[E.LOMBRE=271]="LOMBRE",E[E.LUDICOLO=272]="LUDICOLO",E[E.SEEDOT=273]="SEEDOT",E[E.NUZLEAF=274]="NUZLEAF",E[E.SHIFTRY=275]="SHIFTRY",E[E.TAILLOW=276]="TAILLOW",E[E.SWELLOW=277]="SWELLOW",E[E.WINGULL=278]="WINGULL",E[E.PELIPPER=279]="PELIPPER",E[E.RALTS=280]="RALTS",E[E.KIRLIA=281]="KIRLIA",E[E.GARDEVOIR=282]="GARDEVOIR",E[E.SURSKIT=283]="SURSKIT",E[E.MASQUERAIN=284]="MASQUERAIN",E[E.SHROOMISH=285]="SHROOMISH",E[E.BRELOOM=286]="BRELOOM",E[E.SLAKOTH=287]="SLAKOTH",E[E.VIGOROTH=288]="VIGOROTH",E[E.SLAKING=289]="SLAKING",E[E.NINCADA=290]="NINCADA",E[E.NINJASK=291]="NINJASK",E[E.SHEDINJA=292]="SHEDINJA",E[E.WHISMUR=293]="WHISMUR",E[E.LOUDRED=294]="LOUDRED",E[E.EXPLOUD=295]="EXPLOUD",E[E.MAKUHITA=296]="MAKUHITA",E[E.HARIYAMA=297]="HARIYAMA",E[E.AZURILL=298]="AZURILL",E[E.NOSEPASS=299]="NOSEPASS",E[E.SKITTY=300]="SKITTY",E[E.DELCATTY=301]="DELCATTY",E[E.SABLEYE=302]="SABLEYE",E[E.MAWILE=303]="MAWILE",E[E.ARON=304]="ARON",E[E.LAIRON=305]="LAIRON",E[E.AGGRON=306]="AGGRON",E[E.MEDITITE=307]="MEDITITE",E[E.MEDICHAM=308]="MEDICHAM",E[E.ELECTRIKE=309]="ELECTRIKE",E[E.MANECTRIC=310]="MANECTRIC",E[E.PLUSLE=311]="PLUSLE",E[E.MINUN=312]="MINUN",E[E.VOLBEAT=313]="VOLBEAT",E[E.ILLUMISE=314]="ILLUMISE",E[E.ROSELIA=315]="ROSELIA",E[E.GULPIN=316]="GULPIN",E[E.SWALOT=317]="SWALOT",E[E.CARVANHA=318]="CARVANHA",E[E.SHARPEDO=319]="SHARPEDO",E[E.WAILMER=320]="WAILMER",E[E.WAILORD=321]="WAILORD",E[E.NUMEL=322]="NUMEL",E[E.CAMERUPT=323]="CAMERUPT",E[E.TORKOAL=324]="TORKOAL",E[E.SPOINK=325]="SPOINK",E[E.GRUMPIG=326]="GRUMPIG",E[E.SPINDA=327]="SPINDA",E[E.TRAPINCH=328]="TRAPINCH",E[E.VIBRAVA=329]="VIBRAVA",E[E.FLYGON=330]="FLYGON",E[E.CACNEA=331]="CACNEA",E[E.CACTURNE=332]="CACTURNE",E[E.SWABLU=333]="SWABLU",E[E.ALTARIA=334]="ALTARIA",E[E.ZANGOOSE=335]="ZANGOOSE",E[E.SEVIPER=336]="SEVIPER",E[E.LUNATONE=337]="LUNATONE",E[E.SOLROCK=338]="SOLROCK",E[E.BARBOACH=339]="BARBOACH",E[E.WHISCASH=340]="WHISCASH",E[E.CORPHISH=341]="CORPHISH",E[E.CRAWDAUNT=342]="CRAWDAUNT",E[E.BALTOY=343]="BALTOY",E[E.CLAYDOL=344]="CLAYDOL",E[E.LILEEP=345]="LILEEP",E[E.CRADILY=346]="CRADILY",E[E.ANORITH=347]="ANORITH",E[E.ARMALDO=348]="ARMALDO",E[E.FEEBAS=349]="FEEBAS",E[E.MILOTIC=350]="MILOTIC",E[E.CASTFORM=351]="CASTFORM",E[E.KECLEON=352]="KECLEON",E[E.SHUPPET=353]="SHUPPET",E[E.BANETTE=354]="BANETTE",E[E.DUSKULL=355]="DUSKULL",E[E.DUSCLOPS=356]="DUSCLOPS",E[E.TROPIUS=357]="TROPIUS",E[E.CHIMECHO=358]="CHIMECHO",E[E.ABSOL=359]="ABSOL",E[E.WYNAUT=360]="WYNAUT",E[E.SNORUNT=361]="SNORUNT",E[E.GLALIE=362]="GLALIE",E[E.SPHEAL=363]="SPHEAL",E[E.SEALEO=364]="SEALEO",E[E.WALREIN=365]="WALREIN",E[E.CLAMPERL=366]="CLAMPERL",E[E.HUNTAIL=367]="HUNTAIL",E[E.GOREBYSS=368]="GOREBYSS",E[E.RELICANTH=369]="RELICANTH",E[E.LUVDISC=370]="LUVDISC",E[E.BAGON=371]="BAGON",E[E.SHELGON=372]="SHELGON",E[E.SALAMENCE=373]="SALAMENCE",E[E.BELDUM=374]="BELDUM",E[E.METANG=375]="METANG",E[E.METAGROSS=376]="METAGROSS",E[E.REGIROCK=377]="REGIROCK",E[E.REGICE=378]="REGICE",E[E.REGISTEEL=379]="REGISTEEL",E[E.LATIAS=380]="LATIAS",E[E.LATIOS=381]="LATIOS",E[E.KYOGRE=382]="KYOGRE",E[E.GROUDON=383]="GROUDON",E[E.RAYQUAZA=384]="RAYQUAZA",E[E.JIRACHI=385]="JIRACHI",E[E.DEOXYS=386]="DEOXYS",E[E.TURTWIG=387]="TURTWIG",E[E.GROTLE=388]="GROTLE",E[E.TORTERRA=389]="TORTERRA",E[E.CHIMCHAR=390]="CHIMCHAR",E[E.MONFERNO=391]="MONFERNO",E[E.INFERNAPE=392]="INFERNAPE",E[E.PIPLUP=393]="PIPLUP",E[E.PRINPLUP=394]="PRINPLUP",E[E.EMPOLEON=395]="EMPOLEON",E[E.STARLY=396]="STARLY",E[E.STARAVIA=397]="STARAVIA",E[E.STARAPTOR=398]="STARAPTOR",E[E.BIDOOF=399]="BIDOOF",E[E.BIBAREL=400]="BIBAREL",E[E.KRICKETOT=401]="KRICKETOT",E[E.KRICKETUNE=402]="KRICKETUNE",E[E.SHINX=403]="SHINX",E[E.LUXIO=404]="LUXIO",E[E.LUXRAY=405]="LUXRAY",E[E.BUDEW=406]="BUDEW",E[E.ROSERADE=407]="ROSERADE",E[E.CRANIDOS=408]="CRANIDOS",E[E.RAMPARDOS=409]="RAMPARDOS",E[E.SHIELDON=410]="SHIELDON",E[E.BASTIODON=411]="BASTIODON",E[E.BURMY=412]="BURMY",E[E.WORMADAM=413]="WORMADAM",E[E.MOTHIM=414]="MOTHIM",E[E.COMBEE=415]="COMBEE",E[E.VESPIQUEN=416]="VESPIQUEN",E[E.PACHIRISU=417]="PACHIRISU",E[E.BUIZEL=418]="BUIZEL",E[E.FLOATZEL=419]="FLOATZEL",E[E.CHERUBI=420]="CHERUBI",E[E.CHERRIM=421]="CHERRIM",E[E.SHELLOS=422]="SHELLOS",E[E.GASTRODON=423]="GASTRODON",E[E.AMBIPOM=424]="AMBIPOM",E[E.DRIFLOON=425]="DRIFLOON",E[E.DRIFBLIM=426]="DRIFBLIM",E[E.BUNEARY=427]="BUNEARY",E[E.LOPUNNY=428]="LOPUNNY",E[E.MISMAGIUS=429]="MISMAGIUS",E[E.HONCHKROW=430]="HONCHKROW",E[E.GLAMEOW=431]="GLAMEOW",E[E.PURUGLY=432]="PURUGLY",E[E.CHINGLING=433]="CHINGLING",E[E.STUNKY=434]="STUNKY",E[E.SKUNTANK=435]="SKUNTANK",E[E.BRONZOR=436]="BRONZOR",E[E.BRONZONG=437]="BRONZONG",E[E.BONSLY=438]="BONSLY",E[E.MIME_JR=439]="MIME_JR",E[E.HAPPINY=440]="HAPPINY",E[E.CHATOT=441]="CHATOT",E[E.SPIRITOMB=442]="SPIRITOMB",E[E.GIBLE=443]="GIBLE",E[E.GABITE=444]="GABITE",E[E.GARCHOMP=445]="GARCHOMP",E[E.MUNCHLAX=446]="MUNCHLAX",E[E.RIOLU=447]="RIOLU",E[E.LUCARIO=448]="LUCARIO",E[E.HIPPOPOTAS=449]="HIPPOPOTAS",E[E.HIPPOWDON=450]="HIPPOWDON",E[E.SKORUPI=451]="SKORUPI",E[E.DRAPION=452]="DRAPION",E[E.CROAGUNK=453]="CROAGUNK",E[E.TOXICROAK=454]="TOXICROAK",E[E.CARNIVINE=455]="CARNIVINE",E[E.FINNEON=456]="FINNEON",E[E.LUMINEON=457]="LUMINEON",E[E.MANTYKE=458]="MANTYKE",E[E.SNOVER=459]="SNOVER",E[E.ABOMASNOW=460]="ABOMASNOW",E[E.WEAVILE=461]="WEAVILE",E[E.MAGNEZONE=462]="MAGNEZONE",E[E.LICKILICKY=463]="LICKILICKY",E[E.RHYPERIOR=464]="RHYPERIOR",E[E.TANGROWTH=465]="TANGROWTH",E[E.ELECTIVIRE=466]="ELECTIVIRE",E[E.MAGMORTAR=467]="MAGMORTAR",E[E.TOGEKISS=468]="TOGEKISS",E[E.YANMEGA=469]="YANMEGA",E[E.LEAFEON=470]="LEAFEON",E[E.GLACEON=471]="GLACEON",E[E.GLISCOR=472]="GLISCOR",E[E.MAMOSWINE=473]="MAMOSWINE",E[E.PORYGON_Z=474]="PORYGON_Z",E[E.GALLADE=475]="GALLADE",E[E.PROBOPASS=476]="PROBOPASS",E[E.DUSKNOIR=477]="DUSKNOIR",E[E.FROSLASS=478]="FROSLASS",E[E.ROTOM=479]="ROTOM",E[E.UXIE=480]="UXIE",E[E.MESPRIT=481]="MESPRIT",E[E.AZELF=482]="AZELF",E[E.DIALGA=483]="DIALGA",E[E.PALKIA=484]="PALKIA",E[E.HEATRAN=485]="HEATRAN",E[E.REGIGIGAS=486]="REGIGIGAS",E[E.GIRATINA=487]="GIRATINA",E[E.CRESSELIA=488]="CRESSELIA",E[E.PHIONE=489]="PHIONE",E[E.MANAPHY=490]="MANAPHY",E[E.DARKRAI=491]="DARKRAI",E[E.SHAYMIN=492]="SHAYMIN",E[E.ARCEUS=493]="ARCEUS",E[E.VICTINI=494]="VICTINI",E[E.SNIVY=495]="SNIVY",E[E.SERVINE=496]="SERVINE",E[E.SERPERIOR=497]="SERPERIOR",E[E.TEPIG=498]="TEPIG",E[E.PIGNITE=499]="PIGNITE",E[E.EMBOAR=500]="EMBOAR",E[E.OSHAWOTT=501]="OSHAWOTT",E[E.DEWOTT=502]="DEWOTT",E[E.SAMUROTT=503]="SAMUROTT",E[E.PATRAT=504]="PATRAT",E[E.WATCHOG=505]="WATCHOG",E[E.LILLIPUP=506]="LILLIPUP",E[E.HERDIER=507]="HERDIER",E[E.STOUTLAND=508]="STOUTLAND",E[E.PURRLOIN=509]="PURRLOIN",E[E.LIEPARD=510]="LIEPARD",E[E.PANSAGE=511]="PANSAGE",E[E.SIMISAGE=512]="SIMISAGE",E[E.PANSEAR=513]="PANSEAR",E[E.SIMISEAR=514]="SIMISEAR",E[E.PANPOUR=515]="PANPOUR",E[E.SIMIPOUR=516]="SIMIPOUR",E[E.MUNNA=517]="MUNNA",E[E.MUSHARNA=518]="MUSHARNA",E[E.PIDOVE=519]="PIDOVE",E[E.TRANQUILL=520]="TRANQUILL",E[E.UNFEZANT=521]="UNFEZANT",E[E.BLITZLE=522]="BLITZLE",E[E.ZEBSTRIKA=523]="ZEBSTRIKA",E[E.ROGGENROLA=524]="ROGGENROLA",E[E.BOLDORE=525]="BOLDORE",E[E.GIGALITH=526]="GIGALITH",E[E.WOOBAT=527]="WOOBAT",E[E.SWOOBAT=528]="SWOOBAT",E[E.DRILBUR=529]="DRILBUR",E[E.EXCADRILL=530]="EXCADRILL",E[E.AUDINO=531]="AUDINO",E[E.TIMBURR=532]="TIMBURR",E[E.GURDURR=533]="GURDURR",E[E.CONKELDURR=534]="CONKELDURR",E[E.TYMPOLE=535]="TYMPOLE",E[E.PALPITOAD=536]="PALPITOAD",E[E.SEISMITOAD=537]="SEISMITOAD",E[E.THROH=538]="THROH",E[E.SAWK=539]="SAWK",E[E.SEWADDLE=540]="SEWADDLE",E[E.SWADLOON=541]="SWADLOON",E[E.LEAVANNY=542]="LEAVANNY",E[E.VENIPEDE=543]="VENIPEDE",E[E.WHIRLIPEDE=544]="WHIRLIPEDE",E[E.SCOLIPEDE=545]="SCOLIPEDE",E[E.COTTONEE=546]="COTTONEE",E[E.WHIMSICOTT=547]="WHIMSICOTT",E[E.PETILIL=548]="PETILIL",E[E.LILLIGANT=549]="LILLIGANT",E[E.BASCULIN=550]="BASCULIN",E[E.SANDILE=551]="SANDILE",E[E.KROKOROK=552]="KROKOROK",E[E.KROOKODILE=553]="KROOKODILE",E[E.DARUMAKA=554]="DARUMAKA",E[E.DARMANITAN=555]="DARMANITAN",E[E.MARACTUS=556]="MARACTUS",E[E.DWEBBLE=557]="DWEBBLE",E[E.CRUSTLE=558]="CRUSTLE",E[E.SCRAGGY=559]="SCRAGGY",E[E.SCRAFTY=560]="SCRAFTY",E[E.SIGILYPH=561]="SIGILYPH",E[E.YAMASK=562]="YAMASK",E[E.COFAGRIGUS=563]="COFAGRIGUS",E[E.TIRTOUGA=564]="TIRTOUGA",E[E.CARRACOSTA=565]="CARRACOSTA",E[E.ARCHEN=566]="ARCHEN",E[E.ARCHEOPS=567]="ARCHEOPS",E[E.TRUBBISH=568]="TRUBBISH",E[E.GARBODOR=569]="GARBODOR",E[E.ZORUA=570]="ZORUA",E[E.ZOROARK=571]="ZOROARK",E[E.MINCCINO=572]="MINCCINO",E[E.CINCCINO=573]="CINCCINO",E[E.GOTHITA=574]="GOTHITA",E[E.GOTHORITA=575]="GOTHORITA",E[E.GOTHITELLE=576]="GOTHITELLE",E[E.SOLOSIS=577]="SOLOSIS",E[E.DUOSION=578]="DUOSION",E[E.REUNICLUS=579]="REUNICLUS",E[E.DUCKLETT=580]="DUCKLETT",E[E.SWANNA=581]="SWANNA",E[E.VANILLITE=582]="VANILLITE",E[E.VANILLISH=583]="VANILLISH",E[E.VANILLUXE=584]="VANILLUXE",E[E.DEERLING=585]="DEERLING",E[E.SAWSBUCK=586]="SAWSBUCK",E[E.EMOLGA=587]="EMOLGA",E[E.KARRABLAST=588]="KARRABLAST",E[E.ESCAVALIER=589]="ESCAVALIER",E[E.FOONGUS=590]="FOONGUS",E[E.AMOONGUSS=591]="AMOONGUSS",E[E.FRILLISH=592]="FRILLISH",E[E.JELLICENT=593]="JELLICENT",E[E.ALOMOMOLA=594]="ALOMOMOLA",E[E.JOLTIK=595]="JOLTIK",E[E.GALVANTULA=596]="GALVANTULA",E[E.FERROSEED=597]="FERROSEED",E[E.FERROTHORN=598]="FERROTHORN",E[E.KLINK=599]="KLINK",E[E.KLANG=600]="KLANG",E[E.KLINKLANG=601]="KLINKLANG",E[E.TYNAMO=602]="TYNAMO",E[E.EELEKTRIK=603]="EELEKTRIK",E[E.EELEKTROSS=604]="EELEKTROSS",E[E.ELGYEM=605]="ELGYEM",E[E.BEHEEYEM=606]="BEHEEYEM",E[E.LITWICK=607]="LITWICK",E[E.LAMPENT=608]="LAMPENT",E[E.CHANDELURE=609]="CHANDELURE",E[E.AXEW=610]="AXEW",E[E.FRAXURE=611]="FRAXURE",E[E.HAXORUS=612]="HAXORUS",E[E.CUBCHOO=613]="CUBCHOO",E[E.BEARTIC=614]="BEARTIC",E[E.CRYOGONAL=615]="CRYOGONAL",E[E.SHELMET=616]="SHELMET",E[E.ACCELGOR=617]="ACCELGOR",E[E.STUNFISK=618]="STUNFISK",E[E.MIENFOO=619]="MIENFOO",E[E.MIENSHAO=620]="MIENSHAO",E[E.DRUDDIGON=621]="DRUDDIGON",E[E.GOLETT=622]="GOLETT",E[E.GOLURK=623]="GOLURK",E[E.PAWNIARD=624]="PAWNIARD",E[E.BISHARP=625]="BISHARP",E[E.BOUFFALANT=626]="BOUFFALANT",E[E.RUFFLET=627]="RUFFLET",E[E.BRAVIARY=628]="BRAVIARY",E[E.VULLABY=629]="VULLABY",E[E.MANDIBUZZ=630]="MANDIBUZZ",E[E.HEATMOR=631]="HEATMOR",E[E.DURANT=632]="DURANT",E[E.DEINO=633]="DEINO",E[E.ZWEILOUS=634]="ZWEILOUS",E[E.HYDREIGON=635]="HYDREIGON",E[E.LARVESTA=636]="LARVESTA",E[E.VOLCARONA=637]="VOLCARONA",E[E.COBALION=638]="COBALION",E[E.TERRAKION=639]="TERRAKION",E[E.VIRIZION=640]="VIRIZION",E[E.TORNADUS=641]="TORNADUS",E[E.THUNDURUS=642]="THUNDURUS",E[E.RESHIRAM=643]="RESHIRAM",E[E.ZEKROM=644]="ZEKROM",E[E.LANDORUS=645]="LANDORUS",E[E.KYUREM=646]="KYUREM",E[E.KELDEO=647]="KELDEO",E[E.MELOETTA=648]="MELOETTA",E[E.GENESECT=649]="GENESECT",E[E.CHESPIN=650]="CHESPIN",E[E.QUILLADIN=651]="QUILLADIN",E[E.CHESNAUGHT=652]="CHESNAUGHT",E[E.FENNEKIN=653]="FENNEKIN",E[E.BRAIXEN=654]="BRAIXEN",E[E.DELPHOX=655]="DELPHOX",E[E.FROAKIE=656]="FROAKIE",E[E.FROGADIER=657]="FROGADIER",E[E.GRENINJA=658]="GRENINJA",E[E.BUNNELBY=659]="BUNNELBY",E[E.DIGGERSBY=660]="DIGGERSBY",E[E.FLETCHLING=661]="FLETCHLING",E[E.FLETCHINDER=662]="FLETCHINDER",E[E.TALONFLAME=663]="TALONFLAME",E[E.SCATTERBUG=664]="SCATTERBUG",E[E.SPEWPA=665]="SPEWPA",E[E.VIVILLON=666]="VIVILLON",E[E.LITLEO=667]="LITLEO",E[E.PYROAR=668]="PYROAR",E[E.FLABEBE=669]="FLABEBE",E[E.FLOETTE=670]="FLOETTE",E[E.FLORGES=671]="FLORGES",E[E.SKIDDO=672]="SKIDDO",E[E.GOGOAT=673]="GOGOAT",E[E.PANCHAM=674]="PANCHAM",E[E.PANGORO=675]="PANGORO",E[E.FURFROU=676]="FURFROU",E[E.ESPURR=677]="ESPURR",E[E.MEOWSTIC=678]="MEOWSTIC",E[E.HONEDGE=679]="HONEDGE",E[E.DOUBLADE=680]="DOUBLADE",E[E.AEGISLASH=681]="AEGISLASH",E[E.SPRITZEE=682]="SPRITZEE",E[E.AROMATISSE=683]="AROMATISSE",E[E.SWIRLIX=684]="SWIRLIX",E[E.SLURPUFF=685]="SLURPUFF",E[E.INKAY=686]="INKAY",E[E.MALAMAR=687]="MALAMAR",E[E.BINACLE=688]="BINACLE",E[E.BARBARACLE=689]="BARBARACLE",E[E.SKRELP=690]="SKRELP",E[E.DRAGALGE=691]="DRAGALGE",E[E.CLAUNCHER=692]="CLAUNCHER",E[E.CLAWITZER=693]="CLAWITZER",E[E.HELIOPTILE=694]="HELIOPTILE",E[E.HELIOLISK=695]="HELIOLISK",E[E.TYRUNT=696]="TYRUNT",E[E.TYRANTRUM=697]="TYRANTRUM",E[E.AMAURA=698]="AMAURA",E[E.AURORUS=699]="AURORUS",E[E.SYLVEON=700]="SYLVEON",E[E.HAWLUCHA=701]="HAWLUCHA",E[E.DEDENNE=702]="DEDENNE",E[E.CARBINK=703]="CARBINK",E[E.GOOMY=704]="GOOMY",E[E.SLIGGOO=705]="SLIGGOO",E[E.GOODRA=706]="GOODRA",E[E.KLEFKI=707]="KLEFKI",E[E.PHANTUMP=708]="PHANTUMP",E[E.TREVENANT=709]="TREVENANT",E[E.PUMPKABOO=710]="PUMPKABOO",E[E.GOURGEIST=711]="GOURGEIST",E[E.BERGMITE=712]="BERGMITE",E[E.AVALUGG=713]="AVALUGG",E[E.NOIBAT=714]="NOIBAT",E[E.NOIVERN=715]="NOIVERN",E[E.XERNEAS=716]="XERNEAS",E[E.YVELTAL=717]="YVELTAL",E[E.ZYGARDE=718]="ZYGARDE",E[E.DIANCIE=719]="DIANCIE",E[E.HOOPA=720]="HOOPA",E[E.VOLCANION=721]="VOLCANION",E[E.ROWLET=722]="ROWLET",E[E.DARTRIX=723]="DARTRIX",E[E.DECIDUEYE=724]="DECIDUEYE",E[E.LITTEN=725]="LITTEN",E[E.TORRACAT=726]="TORRACAT",E[E.INCINEROAR=727]="INCINEROAR",E[E.POPPLIO=728]="POPPLIO",E[E.BRIONNE=729]="BRIONNE",E[E.PRIMARINA=730]="PRIMARINA",E[E.PIKIPEK=731]="PIKIPEK",E[E.TRUMBEAK=732]="TRUMBEAK",E[E.TOUCANNON=733]="TOUCANNON",E[E.YUNGOOS=734]="YUNGOOS",E[E.GUMSHOOS=735]="GUMSHOOS",E[E.GRUBBIN=736]="GRUBBIN",E[E.CHARJABUG=737]="CHARJABUG",E[E.VIKAVOLT=738]="VIKAVOLT",E[E.CRABRAWLER=739]="CRABRAWLER",E[E.CRABOMINABLE=740]="CRABOMINABLE",E[E.ORICORIO=741]="ORICORIO",E[E.CUTIEFLY=742]="CUTIEFLY",E[E.RIBOMBEE=743]="RIBOMBEE",E[E.ROCKRUFF=744]="ROCKRUFF",E[E.LYCANROC=745]="LYCANROC",E[E.WISHIWASHI=746]="WISHIWASHI",E[E.MAREANIE=747]="MAREANIE",E[E.TOXAPEX=748]="TOXAPEX",E[E.MUDBRAY=749]="MUDBRAY",E[E.MUDSDALE=750]="MUDSDALE",E[E.DEWPIDER=751]="DEWPIDER",E[E.ARAQUANID=752]="ARAQUANID",E[E.FOMANTIS=753]="FOMANTIS",E[E.LURANTIS=754]="LURANTIS",E[E.MORELULL=755]="MORELULL",E[E.SHIINOTIC=756]="SHIINOTIC",E[E.SALANDIT=757]="SALANDIT",E[E.SALAZZLE=758]="SALAZZLE",E[E.STUFFUL=759]="STUFFUL",E[E.BEWEAR=760]="BEWEAR",E[E.BOUNSWEET=761]="BOUNSWEET",E[E.STEENEE=762]="STEENEE",E[E.TSAREENA=763]="TSAREENA",E[E.COMFEY=764]="COMFEY",E[E.ORANGURU=765]="ORANGURU",E[E.PASSIMIAN=766]="PASSIMIAN",E[E.WIMPOD=767]="WIMPOD",E[E.GOLISOPOD=768]="GOLISOPOD",E[E.SANDYGAST=769]="SANDYGAST",E[E.PALOSSAND=770]="PALOSSAND",E[E.PYUKUMUKU=771]="PYUKUMUKU",E[E.TYPE_NULL=772]="TYPE_NULL",E[E.SILVALLY=773]="SILVALLY",E[E.MINIOR=774]="MINIOR",E[E.KOMALA=775]="KOMALA",E[E.TURTONATOR=776]="TURTONATOR",E[E.TOGEDEMARU=777]="TOGEDEMARU",E[E.MIMIKYU=778]="MIMIKYU",E[E.BRUXISH=779]="BRUXISH",E[E.DRAMPA=780]="DRAMPA",E[E.DHELMISE=781]="DHELMISE",E[E.JANGMO_O=782]="JANGMO_O",E[E.HAKAMO_O=783]="HAKAMO_O",E[E.KOMMO_O=784]="KOMMO_O",E[E.TAPU_KOKO=785]="TAPU_KOKO",E[E.TAPU_LELE=786]="TAPU_LELE",E[E.TAPU_BULU=787]="TAPU_BULU",E[E.TAPU_FINI=788]="TAPU_FINI",E[E.COSMOG=789]="COSMOG",E[E.COSMOEM=790]="COSMOEM",E[E.SOLGALEO=791]="SOLGALEO",E[E.LUNALA=792]="LUNALA",E[E.NIHILEGO=793]="NIHILEGO",E[E.BUZZWOLE=794]="BUZZWOLE",E[E.PHEROMOSA=795]="PHEROMOSA",E[E.XURKITREE=796]="XURKITREE",E[E.CELESTEELA=797]="CELESTEELA",E[E.KARTANA=798]="KARTANA",E[E.GUZZLORD=799]="GUZZLORD",E[E.NECROZMA=800]="NECROZMA",E[E.MAGEARNA=801]="MAGEARNA",E[E.MARSHADOW=802]="MARSHADOW",E[E.POIPOLE=803]="POIPOLE",E[E.NAGANADEL=804]="NAGANADEL",E[E.STAKATAKA=805]="STAKATAKA",E[E.BLACEPHALON=806]="BLACEPHALON",E[E.ZERAORA=807]="ZERAORA",E[E.MELTAN=808]="MELTAN",E[E.MELMETAL=809]="MELMETAL",E[E.GROOKEY=810]="GROOKEY",E[E.THWACKEY=811]="THWACKEY",E[E.RILLABOOM=812]="RILLABOOM",E[E.SCORBUNNY=813]="SCORBUNNY",E[E.RABOOT=814]="RABOOT",E[E.CINDERACE=815]="CINDERACE",E[E.SOBBLE=816]="SOBBLE",E[E.DRIZZILE=817]="DRIZZILE",E[E.INTELEON=818]="INTELEON",E[E.SKWOVET=819]="SKWOVET",E[E.GREEDENT=820]="GREEDENT",E[E.ROOKIDEE=821]="ROOKIDEE",E[E.CORVISQUIRE=822]="CORVISQUIRE",E[E.CORVIKNIGHT=823]="CORVIKNIGHT",E[E.BLIPBUG=824]="BLIPBUG",E[E.DOTTLER=825]="DOTTLER",E[E.ORBEETLE=826]="ORBEETLE",E[E.NICKIT=827]="NICKIT",E[E.THIEVUL=828]="THIEVUL",E[E.GOSSIFLEUR=829]="GOSSIFLEUR",E[E.ELDEGOSS=830]="ELDEGOSS",E[E.WOOLOO=831]="WOOLOO",E[E.DUBWOOL=832]="DUBWOOL",E[E.CHEWTLE=833]="CHEWTLE",E[E.DREDNAW=834]="DREDNAW",E[E.YAMPER=835]="YAMPER",E[E.BOLTUND=836]="BOLTUND",E[E.ROLYCOLY=837]="ROLYCOLY",E[E.CARKOL=838]="CARKOL",E[E.COALOSSAL=839]="COALOSSAL",E[E.APPLIN=840]="APPLIN",E[E.FLAPPLE=841]="FLAPPLE",E[E.APPLETUN=842]="APPLETUN",E[E.SILICOBRA=843]="SILICOBRA",E[E.SANDACONDA=844]="SANDACONDA",E[E.CRAMORANT=845]="CRAMORANT",E[E.ARROKUDA=846]="ARROKUDA",E[E.BARRASKEWDA=847]="BARRASKEWDA",E[E.TOXEL=848]="TOXEL",E[E.TOXTRICITY=849]="TOXTRICITY",E[E.SIZZLIPEDE=850]="SIZZLIPEDE",E[E.CENTISKORCH=851]="CENTISKORCH",E[E.CLOBBOPUS=852]="CLOBBOPUS",E[E.GRAPPLOCT=853]="GRAPPLOCT",E[E.SINISTEA=854]="SINISTEA",E[E.POLTEAGEIST=855]="POLTEAGEIST",E[E.HATENNA=856]="HATENNA",E[E.HATTREM=857]="HATTREM",E[E.HATTERENE=858]="HATTERENE",E[E.IMPIDIMP=859]="IMPIDIMP",E[E.MORGREM=860]="MORGREM",E[E.GRIMMSNARL=861]="GRIMMSNARL",E[E.OBSTAGOON=862]="OBSTAGOON",E[E.PERRSERKER=863]="PERRSERKER",E[E.CURSOLA=864]="CURSOLA",E[E.SIRFETCHD=865]="SIRFETCHD",E[E.MR_RIME=866]="MR_RIME",E[E.RUNERIGUS=867]="RUNERIGUS",E[E.MILCERY=868]="MILCERY",E[E.ALCREMIE=869]="ALCREMIE",E[E.FALINKS=870]="FALINKS",E[E.PINCURCHIN=871]="PINCURCHIN",E[E.SNOM=872]="SNOM",E[E.FROSMOTH=873]="FROSMOTH",E[E.STONJOURNER=874]="STONJOURNER",E[E.EISCUE=875]="EISCUE",E[E.INDEEDEE=876]="INDEEDEE",E[E.MORPEKO=877]="MORPEKO",E[E.CUFANT=878]="CUFANT",E[E.COPPERAJAH=879]="COPPERAJAH",E[E.DRACOZOLT=880]="DRACOZOLT",E[E.ARCTOZOLT=881]="ARCTOZOLT",E[E.DRACOVISH=882]="DRACOVISH",E[E.ARCTOVISH=883]="ARCTOVISH",E[E.DURALUDON=884]="DURALUDON",E[E.DREEPY=885]="DREEPY",E[E.DRAKLOAK=886]="DRAKLOAK",E[E.DRAGAPULT=887]="DRAGAPULT",E[E.ZACIAN=888]="ZACIAN",E[E.ZAMAZENTA=889]="ZAMAZENTA",E[E.ETERNATUS=890]="ETERNATUS",E[E.KUBFU=891]="KUBFU",E[E.URSHIFU=892]="URSHIFU",E[E.ZARUDE=893]="ZARUDE",E[E.REGIELEKI=894]="REGIELEKI",E[E.REGIDRAGO=895]="REGIDRAGO",E[E.GLASTRIER=896]="GLASTRIER",E[E.SPECTRIER=897]="SPECTRIER",E[E.CALYREX=898]="CALYREX",E[E.WYRDEER=899]="WYRDEER",E[E.KLEAVOR=900]="KLEAVOR",E[E.URSALUNA=901]="URSALUNA",E[E.BASCULEGION=902]="BASCULEGION",E[E.SNEASLER=903]="SNEASLER",E[E.OVERQWIL=904]="OVERQWIL",E[E.ENAMORUS=905]="ENAMORUS",E[E.SPRIGATITO=906]="SPRIGATITO",E[E.FLORAGATO=907]="FLORAGATO",E[E.MEOWSCARADA=908]="MEOWSCARADA",E[E.FUECOCO=909]="FUECOCO",E[E.CROCALOR=910]="CROCALOR",E[E.SKELEDIRGE=911]="SKELEDIRGE",E[E.QUAXLY=912]="QUAXLY",E[E.QUAXWELL=913]="QUAXWELL",E[E.QUAQUAVAL=914]="QUAQUAVAL",E[E.LECHONK=915]="LECHONK",E[E.OINKOLOGNE=916]="OINKOLOGNE",E[E.TAROUNTULA=917]="TAROUNTULA",E[E.SPIDOPS=918]="SPIDOPS",E[E.NYMBLE=919]="NYMBLE",E[E.LOKIX=920]="LOKIX",E[E.PAWMI=921]="PAWMI",E[E.PAWMO=922]="PAWMO",E[E.PAWMOT=923]="PAWMOT",E[E.TANDEMAUS=924]="TANDEMAUS",E[E.MAUSHOLD=925]="MAUSHOLD",E[E.FIDOUGH=926]="FIDOUGH",E[E.DACHSBUN=927]="DACHSBUN",E[E.SMOLIV=928]="SMOLIV",E[E.DOLLIV=929]="DOLLIV",E[E.ARBOLIVA=930]="ARBOLIVA",E[E.SQUAWKABILLY=931]="SQUAWKABILLY",E[E.NACLI=932]="NACLI",E[E.NACLSTACK=933]="NACLSTACK",E[E.GARGANACL=934]="GARGANACL",E[E.CHARCADET=935]="CHARCADET",E[E.ARMAROUGE=936]="ARMAROUGE",E[E.CERULEDGE=937]="CERULEDGE",E[E.TADBULB=938]="TADBULB",E[E.BELLIBOLT=939]="BELLIBOLT",E[E.WATTREL=940]="WATTREL",E[E.KILOWATTREL=941]="KILOWATTREL",E[E.MASCHIFF=942]="MASCHIFF",E[E.MABOSSTIFF=943]="MABOSSTIFF",E[E.SHROODLE=944]="SHROODLE",E[E.GRAFAIAI=945]="GRAFAIAI",E[E.BRAMBLIN=946]="BRAMBLIN",E[E.BRAMBLEGHAST=947]="BRAMBLEGHAST",E[E.TOEDSCOOL=948]="TOEDSCOOL",E[E.TOEDSCRUEL=949]="TOEDSCRUEL",E[E.KLAWF=950]="KLAWF",E[E.CAPSAKID=951]="CAPSAKID",E[E.SCOVILLAIN=952]="SCOVILLAIN",E[E.RELLOR=953]="RELLOR",E[E.RABSCA=954]="RABSCA",E[E.FLITTLE=955]="FLITTLE",E[E.ESPATHRA=956]="ESPATHRA",E[E.TINKATINK=957]="TINKATINK",E[E.TINKATUFF=958]="TINKATUFF",E[E.TINKATON=959]="TINKATON",E[E.WIGLETT=960]="WIGLETT",E[E.WUGTRIO=961]="WUGTRIO",E[E.BOMBIRDIER=962]="BOMBIRDIER",E[E.FINIZEN=963]="FINIZEN",E[E.PALAFIN=964]="PALAFIN",E[E.VAROOM=965]="VAROOM",E[E.REVAVROOM=966]="REVAVROOM",E[E.CYCLIZAR=967]="CYCLIZAR",E[E.ORTHWORM=968]="ORTHWORM",E[E.GLIMMET=969]="GLIMMET",E[E.GLIMMORA=970]="GLIMMORA",E[E.GREAVARD=971]="GREAVARD",E[E.HOUNDSTONE=972]="HOUNDSTONE",E[E.FLAMIGO=973]="FLAMIGO",E[E.CETODDLE=974]="CETODDLE",E[E.CETITAN=975]="CETITAN",E[E.VELUZA=976]="VELUZA",E[E.DONDOZO=977]="DONDOZO",E[E.TATSUGIRI=978]="TATSUGIRI",E[E.ANNIHILAPE=979]="ANNIHILAPE",E[E.CLODSIRE=980]="CLODSIRE",E[E.FARIGIRAF=981]="FARIGIRAF",E[E.DUDUNSPARCE=982]="DUDUNSPARCE",E[E.KINGAMBIT=983]="KINGAMBIT",E[E.GREAT_TUSK=984]="GREAT_TUSK",E[E.SCREAM_TAIL=985]="SCREAM_TAIL",E[E.BRUTE_BONNET=986]="BRUTE_BONNET",E[E.FLUTTER_MANE=987]="FLUTTER_MANE",E[E.SLITHER_WING=988]="SLITHER_WING",E[E.SANDY_SHOCKS=989]="SANDY_SHOCKS",E[E.IRON_TREADS=990]="IRON_TREADS",E[E.IRON_BUNDLE=991]="IRON_BUNDLE",E[E.IRON_HANDS=992]="IRON_HANDS",E[E.IRON_JUGULIS=993]="IRON_JUGULIS",E[E.IRON_MOTH=994]="IRON_MOTH",E[E.IRON_THORNS=995]="IRON_THORNS",E[E.FRIGIBAX=996]="FRIGIBAX",E[E.ARCTIBAX=997]="ARCTIBAX",E[E.BAXCALIBUR=998]="BAXCALIBUR",E[E.GIMMIGHOUL=999]="GIMMIGHOUL",E[E.GHOLDENGO=1e3]="GHOLDENGO",E[E.WO_CHIEN=1001]="WO_CHIEN",E[E.CHIEN_PAO=1002]="CHIEN_PAO",E[E.TING_LU=1003]="TING_LU",E[E.CHI_YU=1004]="CHI_YU",E[E.ROARING_MOON=1005]="ROARING_MOON",E[E.IRON_VALIANT=1006]="IRON_VALIANT",E[E.KORAIDON=1007]="KORAIDON",E[E.MIRAIDON=1008]="MIRAIDON",E[E.WALKING_WAKE=1009]="WALKING_WAKE",E[E.IRON_LEAVES=1010]="IRON_LEAVES",E[E.DIPPLIN=1011]="DIPPLIN",E[E.POLTCHAGEIST=1012]="POLTCHAGEIST",E[E.SINISTCHA=1013]="SINISTCHA",E[E.OKIDOGI=1014]="OKIDOGI",E[E.MUNKIDORI=1015]="MUNKIDORI",E[E.FEZANDIPITI=1016]="FEZANDIPITI",E[E.OGERPON=1017]="OGERPON",E[E.ARCHALUDON=1018]="ARCHALUDON",E[E.HYDRAPPLE=1019]="HYDRAPPLE",E[E.GOUGING_FIRE=1020]="GOUGING_FIRE",E[E.RAGING_BOLT=1021]="RAGING_BOLT",E[E.IRON_BOULDER=1022]="IRON_BOULDER",E[E.IRON_CROWN=1023]="IRON_CROWN",E[E.TERAPAGOS=1024]="TERAPAGOS",E[E.PECHARUNT=1025]="PECHARUNT",E[E.ALOLA_RATTATA=2019]="ALOLA_RATTATA",E[E.ALOLA_RATICATE=2020]="ALOLA_RATICATE",E[E.ALOLA_RAICHU=2026]="ALOLA_RAICHU",E[E.ALOLA_SANDSHREW=2027]="ALOLA_SANDSHREW",E[E.ALOLA_SANDSLASH=2028]="ALOLA_SANDSLASH",E[E.ALOLA_VULPIX=2037]="ALOLA_VULPIX",E[E.ALOLA_NINETALES=2038]="ALOLA_NINETALES",E[E.ALOLA_DIGLETT=2050]="ALOLA_DIGLETT",E[E.ALOLA_DUGTRIO=2051]="ALOLA_DUGTRIO",E[E.ALOLA_MEOWTH=2052]="ALOLA_MEOWTH",E[E.ALOLA_PERSIAN=2053]="ALOLA_PERSIAN",E[E.ALOLA_GEODUDE=2074]="ALOLA_GEODUDE",E[E.ALOLA_GRAVELER=2075]="ALOLA_GRAVELER",E[E.ALOLA_GOLEM=2076]="ALOLA_GOLEM",E[E.ALOLA_GRIMER=2088]="ALOLA_GRIMER",E[E.ALOLA_MUK=2089]="ALOLA_MUK",E[E.ALOLA_EXEGGUTOR=2103]="ALOLA_EXEGGUTOR",E[E.ALOLA_MAROWAK=2105]="ALOLA_MAROWAK",E[E.ETERNAL_FLOETTE=2670]="ETERNAL_FLOETTE",E[E.GALAR_MEOWTH=4052]="GALAR_MEOWTH",E[E.GALAR_PONYTA=4077]="GALAR_PONYTA",E[E.GALAR_RAPIDASH=4078]="GALAR_RAPIDASH",E[E.GALAR_SLOWPOKE=4079]="GALAR_SLOWPOKE",E[E.GALAR_SLOWBRO=4080]="GALAR_SLOWBRO",E[E.GALAR_FARFETCHD=4083]="GALAR_FARFETCHD",E[E.GALAR_WEEZING=4110]="GALAR_WEEZING",E[E.GALAR_MR_MIME=4122]="GALAR_MR_MIME",E[E.GALAR_ARTICUNO=4144]="GALAR_ARTICUNO",E[E.GALAR_ZAPDOS=4145]="GALAR_ZAPDOS",E[E.GALAR_MOLTRES=4146]="GALAR_MOLTRES",E[E.GALAR_SLOWKING=4199]="GALAR_SLOWKING",E[E.GALAR_CORSOLA=4222]="GALAR_CORSOLA",E[E.GALAR_ZIGZAGOON=4263]="GALAR_ZIGZAGOON",E[E.GALAR_LINOONE=4264]="GALAR_LINOONE",E[E.GALAR_DARUMAKA=4554]="GALAR_DARUMAKA",E[E.GALAR_DARMANITAN=4555]="GALAR_DARMANITAN",E[E.GALAR_YAMASK=4562]="GALAR_YAMASK",E[E.GALAR_STUNFISK=4618]="GALAR_STUNFISK",E[E.HISUI_GROWLITHE=6058]="HISUI_GROWLITHE",E[E.HISUI_ARCANINE=6059]="HISUI_ARCANINE",E[E.HISUI_VOLTORB=6100]="HISUI_VOLTORB",E[E.HISUI_ELECTRODE=6101]="HISUI_ELECTRODE",E[E.HISUI_TYPHLOSION=6157]="HISUI_TYPHLOSION",E[E.HISUI_QWILFISH=6211]="HISUI_QWILFISH",E[E.HISUI_SNEASEL=6215]="HISUI_SNEASEL",E[E.HISUI_SAMUROTT=6503]="HISUI_SAMUROTT",E[E.HISUI_LILLIGANT=6549]="HISUI_LILLIGANT",E[E.HISUI_ZORUA=6570]="HISUI_ZORUA",E[E.HISUI_ZOROARK=6571]="HISUI_ZOROARK",E[E.HISUI_BRAVIARY=6628]="HISUI_BRAVIARY",E[E.HISUI_SLIGGOO=6705]="HISUI_SLIGGOO",E[E.HISUI_GOODRA=6706]="HISUI_GOODRA",E[E.HISUI_AVALUGG=6713]="HISUI_AVALUGG",E[E.HISUI_DECIDUEYE=6724]="HISUI_DECIDUEYE",E[E.PALDEA_TAUROS=8128]="PALDEA_TAUROS",E[E.PALDEA_WOOPER=8194]="PALDEA_WOOPER",E[E.BLOODMOON_URSALUNA=8901]="BLOODMOON_URSALUNA",E))(e||{}),T=(E=>(E[E.ALL=-1]="ALL",E[E.DAWN=0]="DAWN",E[E.DAY=1]="DAY",E[E.DUSK=2]="DUSK",E[E.NIGHT=3]="NIGHT",E))(T||{}),TE=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FINAL_BOSS=1]="FINAL_BOSS",E))(TE||{});function ee(E){if(!E)return"Missigno";switch(E.scene.currentBattle.battleSpec){case TE.DEFAULT:return E.isPlayer()?E.getNameToRender():E.hasTrainer()?D.t("battle:foePokemonWithAffix",{pokemonName:E.getNameToRender()}):D.t("battle:wildPokemonWithAffix",{pokemonName:E.getNameToRender()});case TE.FINAL_BOSS:return E.isPlayer()?E.getNameToRender():D.t("battle:foePokemonWithAffix",{pokemonName:E.getNameToRender()});default:return E.getNameToRender()}}L(ee,"getPokemonNameWithAffix");var mO=(E=>(E[E.STANDARD=0]="STANDARD",E[E.RARE=1]="RARE",E[E.EPIC=2]="EPIC",E))(mO||{});const Zs={},CI={};function YE(E){switch(E){case 0:return 16302112;case 1:return 2160880;case 2:return 15208520}}L(YE,"getVariantTint");function Ai(E){switch(E){case 0:return mO.STANDARD;case 1:return mO.RARE;case 2:return mO.EPIC}}L(Ai,"getVariantIcon");var _=(E=>(E[E.ERRATIC=0]="ERRATIC",E[E.FAST=1]="FAST",E[E.MEDIUM_FAST=2]="MEDIUM_FAST",E[E.MEDIUM_SLOW=3]="MEDIUM_SLOW",E[E.SLOW=4]="SLOW",E[E.FLUCTUATING=5]="FLUCTUATING",E))(_||{});const Z8=[[0,15,52,122,237,406,637,942,1326,1800,2369,3041,3822,4719,5737,6881,8155,9564,11111,12800,14632,16610,18737,21012,23437,26012,28737,31610,34632,37800,41111,44564,48155,51881,55737,59719,63822,68041,72369,76800,81326,85942,90637,95406,100237,105122,110052,115015,120001,125e3,131324,137795,144410,151165,158056,165079,172229,179503,186894,194400,202013,209728,217540,225443,233431,241496,249633,257834,267406,276458,286328,296358,305767,316074,326531,336255,346965,357812,367807,378880,390077,400293,411686,423190,433572,445239,457001,467489,479378,491346,501878,513934,526049,536557,548720,560922,571333,583539,591882,6e5],[0,6,21,51,100,172,274,409,583,800,1064,1382,1757,2195,2700,3276,3930,4665,5487,6400,7408,8518,9733,11059,12500,14060,15746,17561,19511,21600,23832,26214,28749,31443,34300,37324,40522,43897,47455,51200,55136,59270,63605,68147,72900,77868,83058,88473,94119,1e5,106120,112486,119101,125971,133100,140492,148154,156089,164303,172800,181584,190662,200037,209715,219700,229996,240610,251545,262807,274400,286328,298598,311213,324179,337500,351180,365226,379641,394431,409600,425152,441094,457429,474163,491300,508844,526802,545177,563975,583200,602856,622950,643485,664467,685900,707788,730138,752953,776239,8e5],[0,8,27,64,125,216,343,512,729,1e3,1331,1728,2197,2744,3375,4096,4913,5832,6859,8e3,9261,10648,12167,13824,15625,17576,19683,21952,24389,27e3,29791,32768,35937,39304,42875,46656,50653,54872,59319,64e3,68921,74088,79507,85184,91125,97336,103823,110592,117649,125e3,132651,140608,148877,157464,166375,175616,185193,195112,205379,216e3,226981,238328,250047,262144,274625,287496,300763,314432,328509,343e3,357911,373248,389017,405224,421875,438976,456533,474552,493039,512e3,531441,551368,571787,592704,614125,636056,658503,681472,704969,729e3,753571,778688,804357,830584,857375,884736,912673,941192,970299,1e6],[0,9,57,96,135,179,236,314,419,560,742,973,1261,1612,2035,2535,3120,3798,4575,5460,6458,7577,8825,10208,11735,13411,15244,17242,19411,21760,24294,27021,29949,33084,36435,40007,43808,47846,52127,56660,61450,66505,71833,77440,83335,89523,96012,102810,109923,117360,125126,133229,141677,150476,159635,169159,179056,189334,199999,211060,222522,234393,246681,259392,272535,286115,300140,314618,329555,344960,360838,377197,394045,411388,429235,447591,466464,485862,505791,526260,547274,568841,590969,613664,636935,660787,685228,710266,735907,762160,789030,816525,844653,873420,902835,932903,963632,995030,1027103,1059860],[0,10,33,80,156,270,428,640,911,1250,1663,2160,2746,3430,4218,5120,6141,7290,8573,1e4,11576,13310,15208,17280,19531,21970,24603,27440,30486,33750,37238,40960,44921,49130,53593,58320,63316,68590,74148,8e4,86151,92610,99383,106480,113906,121670,129778,138240,147061,156250,165813,175760,186096,196830,207968,219520,231491,243890,256723,27e4,283726,297910,312558,327680,343281,359370,375953,393040,410636,428750,447388,466560,486271,506530,527343,548720,570666,593190,616298,64e4,664301,689210,714733,740880,767656,795070,823128,851840,881211,911250,941963,973360,1005446,1038230,1071718,1105920,1140841,1176490,1212873,125e4],[0,4,13,32,65,112,178,276,393,540,745,967,1230,1591,1957,2457,3046,3732,4526,5440,6482,7666,9003,10506,12187,14060,16140,18439,20974,23760,26811,30146,33780,37731,42017,46656,50653,55969,60505,66560,71677,78533,84277,91998,98415,107069,114205,123863,131766,142500,151222,163105,172697,185807,196322,210739,222231,238036,250562,267840,281456,300293,315059,335544,351520,373744,390991,415050,433631,459620,479600,507617,529063,559209,582187,614566,639146,673863,700115,737280,765275,804997,834809,877201,908905,954084,987754,1035837,1071552,1122660,1160499,1214753,1254796,1312322,1354652,1415577,1460276,1524731,1571884,164e4]];function ZR(E,A){if(E<100){const R=Z8[A][E-1];return A!==2?Math.floor(R*.325+ZR(E,2)*.675):R}let s;switch(A){case 0:s=(Math.pow(E,4)+Math.pow(E,3)*2e3)/3500;break;case 1:s=Math.pow(E,3)*4/5;break;case 2:s=Math.pow(E,3);break;case 3:s=Math.pow(E,3)*6/5-15*Math.pow(E,2)+100*E-140;break;case 4:s=Math.pow(E,3)*5/4;break;case 5:s=Math.pow(E,3)*(E/2+8)*4/(100+E);break}return Math.floor(A!==2?s*.325+ZR(E,2)*.675:s)}L(ZR,"getLevelTotalExp");function bb(E,A){return ZR(E,A)-ZR(E-1,A)}L(bb,"getLevelRelExp");function gV(E,A){switch(E){case 0:return A?"#906060":"#f85888";case 1:return A?"#b8a038":"#f8d030";case 2:return A?"#588040":"#78c850";case 3:return A?"#807870":"#6890f0";case 4:return A?"#c03028":"#f08030";case 5:return A?"#483850":"#a040a0"}}L(gV,"getGrowthRateColor");var m=(E=>(E[E.COMMON=0]="COMMON",E[E.RARE=1]="RARE",E[E.EPIC=2]="EPIC",E[E.LEGENDARY=3]="LEGENDARY",E))(m||{}),NO=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.LEGACY=1]="LEGACY",E))(NO||{}),v=(E=>(E[E.COMMON=0]="COMMON",E[E.GREAT=1]="GREAT",E[E.ULTRA=2]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=4]="MASTER",E[E.LUXURY=5]="LUXURY",E))(v||{}),X=(E=>(E[E.MESSAGE=0]="MESSAGE",E[E.WINDOW=1]="WINDOW",E[E.WINDOW_ALT=2]="WINDOW_ALT",E[E.BATTLE_INFO=3]="BATTLE_INFO",E[E.PARTY=4]="PARTY",E[E.PARTY_RED=5]="PARTY_RED",E[E.SUMMARY=6]="SUMMARY",E[E.SUMMARY_ALT=7]="SUMMARY_ALT",E[E.SUMMARY_RED=8]="SUMMARY_RED",E[E.SUMMARY_BLUE=9]="SUMMARY_BLUE",E[E.SUMMARY_PINK=10]="SUMMARY_PINK",E[E.SUMMARY_GOLD=11]="SUMMARY_GOLD",E[E.SUMMARY_GRAY=12]="SUMMARY_GRAY",E[E.SUMMARY_GREEN=13]="SUMMARY_GREEN",E[E.MONEY=14]="MONEY",E[E.MONEY_WINDOW=15]="MONEY_WINDOW",E[E.STATS_LABEL=16]="STATS_LABEL",E[E.STATS_VALUE=17]="STATS_VALUE",E[E.SETTINGS_VALUE=18]="SETTINGS_VALUE",E[E.SETTINGS_LABEL=19]="SETTINGS_LABEL",E[E.SETTINGS_SELECTED=20]="SETTINGS_SELECTED",E[E.SETTINGS_LOCKED=21]="SETTINGS_LOCKED",E[E.TOOLTIP_TITLE=22]="TOOLTIP_TITLE",E[E.TOOLTIP_CONTENT=23]="TOOLTIP_CONTENT",E[E.MOVE_INFO_CONTENT=24]="MOVE_INFO_CONTENT",E[E.MOVE_PP_FULL=25]="MOVE_PP_FULL",E[E.MOVE_PP_HALF_FULL=26]="MOVE_PP_HALF_FULL",E[E.MOVE_PP_NEAR_EMPTY=27]="MOVE_PP_NEAR_EMPTY",E[E.MOVE_PP_EMPTY=28]="MOVE_PP_EMPTY",E[E.SMALLER_WINDOW_ALT=29]="SMALLER_WINDOW_ALT",E[E.BGM_BAR=30]="BGM_BAR",E[E.PERFECT_IV=31]="PERFECT_IV",E[E.ME_OPTION_DEFAULT=32]="ME_OPTION_DEFAULT",E[E.ME_OPTION_SPECIAL=33]="ME_OPTION_SPECIAL",E))(X||{});function le(E,A,s,R,n,I){const{scale:a,styleOptions:r,shadowColor:S,shadowXpos:o,shadowYpos:l}=un(n,E.uiTheme,I),C=E.add.text(A,s,R,r);return C.setScale(a),C.setShadow(o,l,S),r.lineSpacing||C.setLineSpacing(a*30),C.lineSpacing<12&&D.resolvedLanguage==="ja"&&C.setLineSpacing(C.lineSpacing+35),C}L(le,"addTextObject");function X8(E,A,s,R){const{scale:n,styleOptions:I,shadowColor:a,shadowXpos:r,shadowYpos:S}=un(s,A.uiTheme,R);E.setScale(n),E.setShadow(r,S,a),I.lineSpacing||E.setLineSpacing(n*30),E.lineSpacing<12&&D.resolvedLanguage==="ja"&&E.setLineSpacing(E.lineSpacing+35)}L(X8,"setTextStyle");function yE(E,A,s,R,n,I){const{scale:a,styleOptions:r,shadowColor:S,shadowXpos:o,shadowYpos:l}=un(n,E.uiTheme,I),C=new wb(E,A,s,R,r);return E.add.existing(C),C.setScale(a),C.setShadow(o,l,S),r.lineSpacing||C.setLineSpacing(a*60),C.lineSpacing<12&&D.resolvedLanguage==="ja"&&C.setLineSpacing(C.lineSpacing+35),C}L(yE,"addBBCodeTextObject");function Q8(E,A,s,R,n,I,a){const{scale:r,styleOptions:S}=un(I,E.uiTheme,a),o=new D8(E,A,s,R,n,S);return E.add.existing(o),o.setScale(r),o}L(Q8,"addTextInputObject");function un(E,A,s){var l;const R=D.resolvedLanguage;let n=4,I=5,a=.1666666667;const r=96;let S={fontFamily:"emerald",fontSize:96,color:IA(E,!1,A),padding:{bottom:6}};switch(D.resolvedLanguage==="ja"&&(a=.1388888889,S.padding={top:2,bottom:4}),E){case 6:case 7:case 9:case 8:case 10:case 11:case 12:case 13:case 1:case 2:case 32:case 33:n=3,I=3;break;case 16:let C="96px";switch(R){case"de":n=3,I=3,C="80px";break;default:C="96px";break}S.fontSize=C;break;case 17:n=3,I=3;let M="96px";switch(R){case"de":M="80px";break;default:M="96px";break}S.fontSize=M;break;case 0:case 19:case 21:case 20:break;case 3:case 14:case 15:case 22:S.fontSize=r-24,n=3.5,I=3.5;break;case 4:case 5:S.fontSize=r-30,S.fontFamily="pkmnems";break;case 23:S.fontSize=r-32,n=3,I=3;break;case 24:S.fontSize=r-40,n=3,I=3;break;case 29:S.fontSize=r-36,n=3,I=3;break;case 30:S.fontSize=r-24,n=3,I=3;break}const o=IA(E,!0,A);if(s){if(s.fontSize){const C=parseInt(s.fontSize.toString().slice(0,-2))/parseInt(((l=S.fontSize)==null?void 0:l.toString().slice(0,-2))??"1");n*=C}S=Object.assign(S,s)}return{scale:a,styleOptions:S,shadowColor:o,shadowXpos:n,shadowYpos:I}}L(un,"getTextStyleOptions");function RO(E,A,s=NO.DEFAULT){return`[color=${IA(A,!1,s)}][shadow=${IA(A,!0,s)}]${E}`}L(RO,"getBBCodeFrag");function J8(E,A,s,R){let n=RO(E,A,s)+"[/color][/shadow]";const I=[...n.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];return n=n.replace(/@\[MONEY\]/g,a=>"@[MONEY_WINDOW]"),n=n.replace(/@\[([^{]*)\]{([^}]*)}/gi,(a,r,S)=>"[/color][/shadow]"+RO(S,X[r],s)+"[/color][/shadow]"+I),n.replace(/\[color=[^\[]*\]\[shadow=[^\[]*\]\[\/color\]\[\/shadow\]/gi,"")}L(J8,"getTextWithColors");function IA(E,A,s=NO.DEFAULT){const R=s===NO.LEGACY;switch(E){case 0:return A?"#6b5a73":"#f8f8f8";case 1:case 24:case 25:case 23:case 18:return R?A?"#d0d0c8":"#484848":A?"#6b5a73":"#f8f8f8";case 26:return R?A?"#ebd773":"#a68e17":A?"#6e672c":"#ccbe00";case 27:return R?A?"#f7b18b":"#d64b00":A?"#69402a":"#d64b00";case 28:return R?A?"#fca2a2":"#e13d3d":A?"#632929":"#e13d3d";case 2:return A?"#d0d0c8":"#484848";case 3:return R?A?"#ded6b5":"#404040":A?"#6b5a73":"#f8f8f8";case 4:return A?"#707070":"#f8f8f8";case 5:return A?"#984038":"#f89890";case 6:return A?"#636363":"#f8f8f8";case 7:return R?A?"#636363":"#f8f8f8":A?"#d0d0c8":"#484848";case 8:case 22:return A?"#ffbd73":"#e70808";case 9:return A?"#006090":"#40c8f8";case 10:return A?"#984038":"#f89890";case 11:case 14:return A?"#a0a060":"#e8e8a8";case 15:return R?A?"#c07800":"#f8b050":A?"#a0a060":"#e8e8a8";case 21:case 12:return A?"#636363":"#a0a0a0";case 16:return A?"#c07800":"#f8b050";case 17:return R?A?"#d0d0c8":"#484848":A?"#6b5a73":"#f8f8f8";case 13:return A?"#306850":"#78c850";case 19:case 31:return A?"#c07800":"#f8b050";case 20:return A?"#f83018":"#f88880";case 29:return A?"#d0d0c8":"#484848";case 30:return A?"#6b5a73":"#f8f8f8";case 32:return A?"#6b5a73":"#f8f8f8";case 33:return R?A?"#c07800":"#f8b050":A?"#306850":"#78c850"}}L(IA,"getTextColor");function Fa(E){switch(E){case v.COMMON:return 16316664;case v.GREAT:return 4823288;case v.ULTRA:return 16306232;case v.ROGUE:return 14369603;case v.MASTER:return 14889413;case v.LUXURY:return 15158296}}L(Fa,"getModifierTierTextTint");function $8(E){switch(E){case m.COMMON:return Fa(v.COMMON);case m.RARE:return Fa(v.GREAT);case m.EPIC:return Fa(v.ULTRA);case m.LEGENDARY:return Fa(v.MASTER)}}L($8,"getEggTierTextTint");var Re=(E=>(E[E.NONE=0]="NONE",E[E.POISON=1]="POISON",E[E.TOXIC=2]="TOXIC",E[E.PARALYSIS=3]="PARALYSIS",E[E.SLEEP=4]="SLEEP",E[E.FREEZE=5]="FREEZE",E[E.BURN=6]="BURN",E[E.FAINT=7]="FAINT",E))(Re||{});function wh(E,A){if(E===i.UNKNOWN||A===i.UNKNOWN)return 1;switch(A){case i.NORMAL:switch(E){case i.FIGHTING:return 2;case i.GHOST:return 0;default:return 1}case i.FIGHTING:switch(E){case i.FLYING:case i.PSYCHIC:case i.FAIRY:return 2;case i.ROCK:case i.BUG:case i.DARK:return .5;default:return 1}case i.FLYING:switch(E){case i.ROCK:case i.ELECTRIC:case i.ICE:return 2;case i.FIGHTING:case i.BUG:case i.GRASS:return .5;case i.GROUND:return 0;default:return 1}case i.POISON:switch(E){case i.GROUND:case i.PSYCHIC:return 2;case i.FIGHTING:case i.POISON:case i.BUG:case i.GRASS:case i.FAIRY:return .5;default:return 1}case i.GROUND:switch(E){case i.WATER:case i.GRASS:case i.ICE:return 2;case i.POISON:case i.ROCK:return .5;case i.ELECTRIC:return 0;default:return 1}case i.ROCK:switch(E){case i.FIGHTING:case i.GROUND:case i.STEEL:case i.WATER:case i.GRASS:return 2;case i.NORMAL:case i.FLYING:case i.POISON:case i.FIRE:return .5;default:return 1}case i.BUG:switch(E){case i.FLYING:case i.ROCK:case i.FIRE:return 2;case i.FIGHTING:case i.GROUND:case i.GRASS:return .5;default:return 1}case i.GHOST:switch(E){case i.GHOST:case i.DARK:return 2;case i.POISON:case i.BUG:return .5;case i.NORMAL:case i.FIGHTING:return 0;default:return 1}case i.STEEL:switch(E){case i.FIGHTING:case i.GROUND:case i.FIRE:return 2;case i.NORMAL:case i.FLYING:case i.ROCK:case i.BUG:case i.STEEL:case i.GRASS:case i.PSYCHIC:case i.ICE:case i.DRAGON:case i.FAIRY:return .5;case i.POISON:return 0;default:return 1}case i.FIRE:switch(E){case i.GROUND:case i.ROCK:case i.WATER:return 2;case i.BUG:case i.STEEL:case i.FIRE:case i.GRASS:case i.ICE:case i.FAIRY:return .5;default:return 1}case i.WATER:switch(E){case i.GRASS:case i.ELECTRIC:return 2;case i.STEEL:case i.FIRE:case i.WATER:case i.ICE:return .5;default:return 1}case i.GRASS:switch(E){case i.FLYING:case i.POISON:case i.BUG:case i.FIRE:case i.ICE:return 2;case i.GROUND:case i.WATER:case i.GRASS:case i.ELECTRIC:return .5;default:return 1}case i.ELECTRIC:switch(E){case i.GROUND:return 2;case i.FLYING:case i.STEEL:case i.ELECTRIC:return .5;default:return 1}case i.PSYCHIC:switch(E){case i.BUG:case i.GHOST:case i.DARK:return 2;case i.FIGHTING:case i.PSYCHIC:return .5;default:return 1}case i.ICE:switch(E){case i.FIGHTING:case i.ROCK:case i.STEEL:case i.FIRE:return 2;case i.ICE:return .5;default:return 1}case i.DRAGON:switch(E){case i.ICE:case i.DRAGON:case i.FAIRY:return 2;case i.FIRE:case i.WATER:case i.GRASS:case i.ELECTRIC:return .5;default:return 1}case i.DARK:switch(E){case i.FIGHTING:case i.BUG:case i.FAIRY:return 2;case i.GHOST:case i.DARK:return .5;case i.PSYCHIC:return 0;default:return 1}case i.FAIRY:switch(E){case i.POISON:case i.STEEL:return 2;case i.FIGHTING:case i.BUG:case i.DARK:return .5;case i.DRAGON:return 0;default:return 1}case i.STELLAR:return 1}return 1}L(wh,"getTypeDamageMultiplier");function z8(E,A){switch(E){case 0:return"#929292";case .125:return"#FF5500";case .25:return"#FF7400";case .5:return"#FE8E00";case 1:return;case 2:return"#4AA500";case 4:return"#4BB400";case 8:return"#52C200"}}L(z8,"getTypeDamageMultiplierColor");function dR(E){switch(E){case i.NORMAL:return[168,168,120];case i.FIGHTING:return[192,48,40];case i.FLYING:return[168,144,240];case i.POISON:return[160,64,160];case i.GROUND:return[224,192,104];case i.ROCK:return[184,160,56];case i.BUG:return[168,184,32];case i.GHOST:return[112,88,152];case i.STEEL:return[184,184,208];case i.FIRE:return[240,128,48];case i.WATER:return[104,144,240];case i.GRASS:return[120,200,80];case i.ELECTRIC:return[248,208,48];case i.PSYCHIC:return[248,88,136];case i.ICE:return[152,216,216];case i.DRAGON:return[112,56,248];case i.DARK:return[112,88,72];case i.FAIRY:return[232,136,200];case i.STELLAR:return[255,255,255];default:return[0,0,0]}}L(dR,"getTypeRgb");var g=(E=>(E[E.HP=0]="HP",E[E.ATK=1]="ATK",E[E.DEF=2]="DEF",E[E.SPATK=3]="SPATK",E[E.SPDEF=4]="SPDEF",E[E.SPD=5]="SPD",E[E.ACC=6]="ACC",E[E.EVA=7]="EVA",E))(g||{});const FO=[0,1,2,3,4,5],Vn=[1,2,3,4,5],MO=[1,2,3,4,5,6,7],kb=[1,2,3,4,5,6];function KV(E,A){return E===1?A?"battle:statRose":"battle:statFell":E===2?A?"battle:statSharplyRose":"battle:statHarshlyFell":E>2&&E<=6?A?"battle:statRoseDrastically":"battle:statSeverelyFell":A?"battle:statWontGoAnyHigher":"battle:statWontGoAnyLower"}L(KV,"getStatStageChangeDescriptionKey");function _E(E){return`pokemonInfo:Stat.${g[E]}`}L(_E,"getStatKey");function pa(E){return`pokemonInfo:Stat.${g[E]}shortened`}L(pa,"getShortenedStatKey");var YO=(E=>(E.CANDY_UPGRADE_NOTIFICATION_CHANGED="onCandyUpgradeNotificationChanged",E.MOVE_USED="onMoveUsed",E.BERRY_USED="onBerryUsed",E.ENCOUNTER_PHASE="onEncounterPhase",E.TURN_INIT="onTurnInit",E.TURN_END="onTurnEnd",E.NEW_ARENA="onNewArena",E))(YO||{});const h1=class h1 extends Event{constructor(A){super("onCandyUpgradeNotificationChanged"),this.newValue=A}};L(h1,"CandyUpgradeNotificationChangedEvent");let vh=h1;const c1=class c1 extends Event{constructor(A,s,R){super("onMoveUsed"),this.pokemonId=A,this.move=s,this.ppUsed=R}};L(c1,"MoveUsedEvent");let DT=c1;const _1=class _1 extends Event{constructor(A){super("onBerryUsed"),this.berryModifier=A}};L(_1,"BerryUsedEvent");let Vh=_1;const P1=class P1 extends Event{constructor(){super("onEncounterPhase")}};L(P1,"EncounterPhaseEvent");let xh=P1;const G1=class G1 extends Event{constructor(){super("onTurnInit")}};L(G1,"TurnInitEvent");let bh=G1;const H1=class H1 extends Event{constructor(A){super("onTurnEnd"),this.turnCount=A}};L(H1,"TurnEndEvent");let kh=H1;const d1=class d1 extends Event{constructor(){super("onNewArena")}};L(d1,"NewArenaEvent");let Zh=d1;var Dt=(E=>(E[E.SITRUS=0]="SITRUS",E[E.LUM=1]="LUM",E[E.ENIGMA=2]="ENIGMA",E[E.LIECHI=3]="LIECHI",E[E.GANLON=4]="GANLON",E[E.PETAYA=5]="PETAYA",E[E.APICOT=6]="APICOT",E[E.SALAC=7]="SALAC",E[E.LANSAT=8]="LANSAT",E[E.STARF=9]="STARF",E[E.LEPPA=10]="LEPPA",E))(Dt||{});const f1=class f1 extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,0),this.flyoutWidth=118,this.flyoutHeight=23,this.flyoutText=new Array(4),this.moveInfo=new Array,this.flyoutVisible=!1,this.onMoveUsedEvent=R=>this.onMoveUsed(R),this.onBerryUsedEvent=R=>this.onBerryUsed(R),this.battleScene=A,this.player=s,this.translationX=this.player?-this.flyoutWidth:this.flyoutWidth,this.anchorX=this.player?-130:-40,this.anchorY=-2.5+(this.player?-18.5:-13),this.flyoutParent=this.scene.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutBackground=this.scene.add.sprite(0,0,"pbinfo_enemy_boss_stats"),this.flyoutBackground.setOrigin(0,0),this.flyoutParent.add(this.flyoutBackground),this.flyoutContainer=this.scene.add.container(44+(this.player?-this.flyoutWidth:0),2),this.flyoutParent.add(this.flyoutContainer);for(let R=0;R<4;R++)this.flyoutText[R]=le(this.scene,this.flyoutWidth/4+this.flyoutWidth/2*(R%2),this.flyoutHeight/4+this.flyoutHeight/2*(R<2?0:1),"???",X.BATTLE_INFO),this.flyoutText[R].setFontSize(45),this.flyoutText[R].setLineSpacing(-10),this.flyoutText[R].setAlign("center"),this.flyoutText[R].setOrigin();this.flyoutContainer.add(this.flyoutText),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(this.scene,this.flyoutWidth/2,0,1,this.flyoutHeight+(this.battleScene.uiTheme===NO.LEGACY?1:0),2171169).setOrigin(.5,0)),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(this.scene,0,this.flyoutHeight/2,this.flyoutWidth+6,1,2171169).setOrigin(0,.5))}initInfo(A){this.pokemon=A,this.name=`Flyout ${ee(this.pokemon)}`,this.flyoutParent.name=`Flyout Parent ${ee(this.pokemon)}`,this.battleScene.eventTarget.addEventListener(YO.MOVE_USED,this.onMoveUsedEvent),this.battleScene.eventTarget.addEventListener(YO.BERRY_USED,this.onBerryUsedEvent)}setText(){for(let A=0;A<this.flyoutText.length;A++){const s=this.flyoutText[A],R=this.moveInfo[A];if(!R)continue;const n=R.maxPp-R.ppUsed;s.text=`${R.move.name}  ${n}/${R.maxPp}`}}onMoveUsed(A){var n;const s=A;if(!s||s.pokemonId!==((n=this.pokemon)==null?void 0:n.id)||s.move.id===t.STRUGGLE)return;const R=this.moveInfo.find(I=>(I==null?void 0:I.move.id)===s.move.id);R?R.ppUsed=s.ppUsed:this.moveInfo.push({move:s.move,maxPp:s.move.pp,ppUsed:s.ppUsed}),this.setText()}onBerryUsed(A){var n;const s=A;if(!s||s.berryModifier.pokemonId!==((n=this.pokemon)==null?void 0:n.id)||s.berryModifier.berryType!==Dt.LEPPA)return;const R=this.moveInfo.find(I=>I.ppUsed===I.maxPp);R&&(R.ppUsed=Math.max(R.ppUsed-10,0),this.setText())}toggleFlyout(A){this.flyoutVisible=A,this.scene.tweens.add({targets:this.flyoutParent,x:A?this.anchorX:this.anchorX-this.translationX,duration:Et(125),ease:"Sine.easeInOut",alpha:A?1:0})}destroy(A){this.battleScene.eventTarget.removeEventListener(YO.MOVE_USED,this.onMoveUsedEvent),this.battleScene.eventTarget.removeEventListener(YO.BERRY_USED,this.onBerryUsedEvent),super.destroy(A)}};L(f1,"BattleFlyout");let Xh=f1;const ja=[],B1=class B1 extends Phaser.Scene{constructor(A){super(A),this.scaledCanvas={width:1920/6,height:1080/6}}getCachedUrl(A){const s=this.game.manifest;if(s){const R=s[`/${A}`];R&&(A+=`?t=${R}`)}return A}loadImage(A,s,R){R||(R=`${A}.png`),this.load.image(A,this.getCachedUrl(`images/${s}/${R}`)),s.startsWith("ui")&&(ja.push(A),s=s.replace("ui","ui/legacy"),this.load.image(`${A}_legacy`,this.getCachedUrl(`images/${s}/${R}`)))}loadSpritesheet(A,s,R,n){n||(n=`${A}.png`),this.load.spritesheet(A,this.getCachedUrl(`images/${s}/${n}`),{frameWidth:R,frameHeight:R}),s.startsWith("ui")&&(ja.push(A),s=s.replace("ui","ui/legacy"),this.load.spritesheet(`${A}_legacy`,this.getCachedUrl(`images/${s}/${n}`),{frameWidth:R,frameHeight:R}))}loadAtlas(A,s,R){R||(R=A),s&&(s+="/"),this.load.atlas(A,this.getCachedUrl(`images/${s}${R}.png`),this.getCachedUrl(`images/${s}${R}.json`)),s.startsWith("ui")&&(ja.push(A),s=s.replace("ui","ui/legacy"),this.load.atlas(`${A}_legacy`,this.getCachedUrl(`images/${s}${R}.png`),this.getCachedUrl(`images/${s}${R}.json`)))}loadSe(A,s,R){R||(R=`${A}.wav`),s?s+="/":s="se/",Array.isArray(R)||(R=[R]);for(const n of R)this.load.audio(s+A,this.getCachedUrl(`audio/${s}${n}`))}loadBgm(A,s){s||(s=`${A}.mp3`),this.load.audio(A,this.getCachedUrl(`audio/bgm/${s}`))}};L(B1,"SceneBase");let ul=B1;var qR=(E=>(E[E.NORMAL=0]="NORMAL",E[E.THIN=1]="THIN",E[E.XTHIN=2]="XTHIN",E))(qR||{});function hL(E){switch(E){case 1:return"_thin";case 2:return"_xthin";default:return""}}L(hL,"getWindowVariantSuffix");const q8={[NO.DEFAULT]:{0:["#6b5a73","#DD5748","#7E4955"],1:["#6b5a73","#48DDAA","#4D7574"],2:["#6b5a73","#C5C5C5","#766D7E"],3:["#6b5a73","#EBC07C","#836C66"],4:["#686868","#E8E8E8","#919191"]},[NO.LEGACY]:{0:["#706880","#8888c8","#484868"],1:["#d04028","#e0a028","#902008"],2:["#48b840","#88d880","#089040"],3:["#2068d0","#80b0e0","#104888"],4:["#706880","#8888c8","#484868"]}};function _t(E,A,s,R,n,I,a,r,S,o){o===void 0&&(o=0);const l=E.uiTheme?6:8,C=E.add.nineslice(A,s,`window_${E.windowType}${hL(o)}`,void 0,R,n,l,l,l,l);if(C.setOrigin(0,0),a||I||r||S){const M=new Phaser.GameObjects.Rectangle(E,6*(A-(a?2:0)-(r||0)),6*(s+(I?2:0)+(S||0)),R-(a?2:0),n-(I?2:0),16777215);M.setOrigin(0),M.setScale(6);const u=M.createGeometryMask();C.setMask(u)}return C}L(_t,"addWindow");function j8(E,A){const s=[],R=[],n=L(r=>{var S,o;if(r.hasOwnProperty("children")&&r.children instanceof Phaser.GameObjects.DisplayList){const l=r.children;for(const C of l.getAll())n(C)}else if(r instanceof Phaser.GameObjects.Container)for(const l of r.getAll())n(l);else r instanceof Phaser.GameObjects.NineSlice?r.texture.key.startsWith("window_")?s.push([r,r.texture.key.endsWith(hL(2))?2:r.texture.key.endsWith(hL(1))?1:0]):((S=r.texture)==null?void 0:S.key)==="namebox"&&R.push(r):r instanceof Phaser.GameObjects.Sprite&&((o=r.texture)==null?void 0:o.key)==="bg"&&R.push(r)},"traverse");n(E),E.windowType=A;const I=document.documentElement.style;["base","light","dark"].map((r,S)=>I.setProperty(`--color-${r}`,q8[E.uiTheme][A-1][S]));const a=`window_${A}`;for(const[r,S]of s)r.setTexture(`${a}${hL(S)}`);for(const r of R)r.setFrame(A)}L(j8,"updateWindowType");function e7(E){const A=E.add.image;E.add.image=function(n,I,a,r){let S=!1;typeof a=="string"&&E.uiTheme&&ja.includes(a)&&(S=!0,a+="_legacy");const o=A.apply(this,[n,I,a,r]);if(S){const l=o.setTexture;o.setTexture=function(C,M){return C+="_legacy",l.apply(this,[C,M])}}return o};const s=E.add.sprite;E.add.sprite=function(n,I,a,r){let S=!1;typeof a=="string"&&E.uiTheme&&ja.includes(a)&&(S=!0,a+="_legacy");const o=s.apply(this,[n,I,a,r]);if(S){const l=o.setTexture;o.setTexture=function(C,M){return C+="_legacy",l.apply(this,[C,M])}}return o};const R=E.add.nineslice;E.add.nineslice=function(n,I,a,r,S,o,l,C,M,u){let h=!1;typeof a=="string"&&E.uiTheme&&ja.includes(a)&&(h=!0,a+="_legacy");const P=R.apply(this,[n,I,a,r,S,o,l,C,M,u]);if(h){const G=P.setTexture;P.setTexture=function(d,H,f,K){return d+="_legacy",G.apply(this,[d,H,f,K])}}return P}}L(e7,"addUiThemeOverrides");var er=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FAST=1]="FAST",E[E.FASTER=2]="FASTER",E[E.SKIP=3]="SKIP",E))(er||{});const nN=class nN extends Phaser.GameObjects.Container{constructor(A,s,R,n){super(A,s,R),this.statOrderPlayer=[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.ACC,g.EVA,g.SPD],this.statOrderEnemy=[g.HP,g.ATK,g.DEF,g.SPATK,g.SPDEF,g.ACC,g.EVA,g.SPD],this.baseY=R,this.player=n,this.mini=!n,this.boss=!1,this.offset=!1,this.lastName=null,this.lastTeraType=i.UNKNOWN,this.lastStatus=Re.NONE,this.lastHp=-1,this.lastMaxHp=-1,this.lastHpFrame=null,this.lastExp=-1,this.lastLevelExp=-1,this.lastLevel=-1,this.setVisible(!1),this.box=this.scene.add.sprite(0,0,this.getTextureName()),this.box.setName("box"),this.box.setOrigin(1,.5),this.add(this.box),this.nameText=le(this.scene,n?-115:-124,n?-15.2:-11.2,"",X.BATTLE_INFO),this.nameText.setName("text_name"),this.nameText.setOrigin(0,0),this.add(this.nameText),this.genderText=le(this.scene,0,0,"",X.BATTLE_INFO),this.genderText.setName("text_gender"),this.genderText.setOrigin(0,0),this.genderText.setPositionRelative(this.nameText,0,2),this.add(this.genderText),this.player||(this.ownedIcon=this.scene.add.sprite(0,0,"icon_owned"),this.ownedIcon.setName("icon_owned"),this.ownedIcon.setVisible(!1),this.ownedIcon.setOrigin(0,0),this.ownedIcon.setPositionRelative(this.nameText,0,11.75),this.add(this.ownedIcon),this.championRibbon=this.scene.add.sprite(0,0,"champion_ribbon"),this.championRibbon.setName("icon_champion_ribbon"),this.championRibbon.setVisible(!1),this.championRibbon.setOrigin(0,0),this.championRibbon.setPositionRelative(this.nameText,8,11.75),this.add(this.championRibbon)),this.teraIcon=this.scene.add.sprite(0,0,"icon_tera"),this.teraIcon.setName("icon_tera"),this.teraIcon.setVisible(!1),this.teraIcon.setOrigin(0,0),this.teraIcon.setScale(.5),this.teraIcon.setPositionRelative(this.nameText,0,2),this.teraIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.teraIcon),this.shinyIcon=this.scene.add.sprite(0,0,"shiny_star"),this.shinyIcon.setName("icon_shiny"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.shinyIcon.setPositionRelative(this.nameText,0,2),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.shinyIcon),this.fusionShinyIcon=this.scene.add.sprite(0,0,"shiny_star_2"),this.fusionShinyIcon.setName("icon_fusion_shiny"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.5),this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.add(this.fusionShinyIcon),this.splicedIcon=this.scene.add.sprite(0,0,"icon_spliced"),this.splicedIcon.setName("icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.5),this.splicedIcon.setPositionRelative(this.nameText,0,2),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.splicedIcon),this.statusIndicator=this.scene.add.sprite(0,0,HR("statuses")),this.statusIndicator.setName("icon_status"),this.statusIndicator.setVisible(!1),this.statusIndicator.setOrigin(0,0),this.statusIndicator.setPositionRelative(this.nameText,0,11.5),this.add(this.statusIndicator),this.levelContainer=this.scene.add.container(n?-41:-50,n?-10:-5),this.levelContainer.setName("container_level"),this.add(this.levelContainer);const I=this.scene.add.image(0,0,"overlay_lv");if(this.levelContainer.add(I),this.hpBar=this.scene.add.image(n?-61:-71,n?-1:4.5,"overlay_hp"),this.hpBar.setName("hp_bar"),this.hpBar.setOrigin(0),this.add(this.hpBar),this.hpBarSegmentDividers=[],this.levelNumbersContainer=this.scene.add.container(9.5,this.scene.uiTheme?0:-.5),this.levelNumbersContainer.setName("container_level"),this.levelContainer.add(this.levelNumbersContainer),this.player){this.hpNumbersContainer=this.scene.add.container(-15,10),this.hpNumbersContainer.setName("container_hp"),this.add(this.hpNumbersContainer);const o=this.scene.add.image(-98,18,"overlay_exp");o.setName("overlay_exp"),o.setOrigin(0),this.add(o);const l=this.scene.make.graphics({});l.setScale(6),l.fillStyle(16777215),l.beginPath(),l.fillRect(127,126,85,2);const C=l.createGeometryMask();o.setMask(C),this.expBar=o,this.expMaskRect=l}this.statsContainer=this.scene.add.container(0,0),this.statsContainer.setName("container_stats"),this.statsContainer.setAlpha(0),this.add(this.statsContainer),this.statsBox=this.scene.add.sprite(0,0,`${this.getTextureName()}_stats`),this.statsBox.setName("box_stats"),this.statsBox.setOrigin(1,.5),this.statsContainer.add(this.statsBox),this.statNumbers=[],this.statValuesContainer=this.scene.add.container(0,0),this.statsContainer.add(this.statValuesContainer);const a=this.player?-this.statsBox.width+8:-this.statsBox.width+5,r=this.player?4:2,S=this.player?1:0;this.statOrder=this.player?this.statOrderPlayer:this.statOrderEnemy,this.statOrder.map((o,l)=>{const C=l>S?this.statNumbers[Math.max(l-2,0)].x+this.statNumbers[Math.max(l-2,0)].width+r:a,M=-this.statsBox.height/2+4;let u;this.statOrder[l]===g.SPD||this.statOrder[l]===g.HP?u=M+5:u=M+(!!(l%2)===this.player?10:0);const h=this.scene.add.sprite(C,u,"pbinfo_stat",g[o]);h.setName("icon_stat_label_"+l.toString()),h.setOrigin(0,0),this.statValuesContainer.add(h);const P=this.scene.add.sprite(C+h.width,u,"pbinfo_stat_numbers",this.statOrder[l]!==g.HP?"3":"empty");P.setName("icon_stat_number_"+l.toString()),P.setOrigin(0,0),this.statNumbers.push(P),this.statValuesContainer.add(P),this.statOrder[l]===g.HP&&(h.setVisible(!1),P.setVisible(!1))}),this.player||(this.flyoutMenu=new Xh(this.scene,this.player),this.add(this.flyoutMenu),this.moveBelow(this.flyoutMenu,this.box)),this.type1Icon=this.scene.add.sprite(n?-139:-15,n?-17:-15.5,`pbinfo_${n?"player":"enemy"}_type1`),this.type1Icon.setName("icon_type_1"),this.type1Icon.setOrigin(0,0),this.add(this.type1Icon),this.type2Icon=this.scene.add.sprite(n?-139:-15,n?-1:-2.5,`pbinfo_${n?"player":"enemy"}_type2`),this.type2Icon.setName("icon_type_2"),this.type2Icon.setOrigin(0,0),this.add(this.type2Icon),this.type3Icon=this.scene.add.sprite(n?-154:0,n?-17:-15.5,`pbinfo_${n?"player":"enemy"}_type`),this.type3Icon.setName("icon_type_3"),this.type3Icon.setOrigin(0,0),this.add(this.type3Icon),this.player||(this.effectivenessContainer=this.scene.add.container(0,0),this.effectivenessContainer.setPositionRelative(this.type1Icon,22,4),this.effectivenessContainer.setVisible(!1),this.add(this.effectivenessContainer),this.effectivenessText=le(this.scene,5,4.5,"",X.BATTLE_INFO),this.effectivenessWindow=_t(this.scene,0,0,0,20,void 0,!1,void 0,void 0,qR.XTHIN),this.effectivenessContainer.add(this.effectivenessWindow),this.effectivenessContainer.add(this.effectivenessText))}getStatsValueContainer(){return this.statValuesContainer}initInfo(A){var S;this.updateNameText(A);const s=this.nameText.displayWidth;this.name=A.getNameToRender(),this.box.name=A.getNameToRender(),(S=this.flyoutMenu)==null||S.initInfo(A),this.genderText.setText(OL(A.gender)),this.genderText.setColor(vn(A.gender)),this.genderText.setPositionRelative(this.nameText,s,0),this.lastTeraType=A.getTeraType(),this.teraIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1,2),this.teraIcon.setVisible(this.lastTeraType!==i.UNKNOWN),this.teraIcon.on("pointerover",()=>{this.lastTeraType!==i.UNKNOWN&&this.scene.ui.showTooltip("",D.t("fightUiHandler:teraHover",{type:D.t(`pokemonInfo:Type.${i[this.lastTeraType]}`)}))}),this.teraIcon.on("pointerout",()=>this.scene.ui.hideTooltip());const R=A.isFusion();this.splicedIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),2.5),this.splicedIcon.setVisible(R),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var o;return this.scene.ui.showTooltip("",`${A.species.getName(A.formIndex)}/${(o=A.fusionSpecies)==null?void 0:o.getName(A.fusionFormIndex)}`)}),this.splicedIcon.on("pointerout",()=>this.scene.ui.hideTooltip()));const n=R&&A.shiny&&A.fusionShiny,I=n?A.variant:A.getVariant();if(this.shinyIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5),this.shinyIcon.setTexture(`shiny_star${n?"_1":""}`),this.shinyIcon.setVisible(A.isShiny()),this.shinyIcon.setTint(YE(I)),this.shinyIcon.visible){const o=n||I?`${I===2?D.t("common:epicShiny"):I===1?D.t("common:rareShiny"):D.t("common:commonShiny")}${n?`/${A.fusionVariant===2?D.t("common:epicShiny"):A.fusionVariant===1?D.t("common:rareShiny"):D.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>this.scene.ui.showTooltip("",`${D.t("common:shinyOnHover")}${o?` (${o})`:""}`)),this.shinyIcon.on("pointerout",()=>this.scene.ui.hideTooltip())}if(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(n),R&&this.fusionShinyIcon.setTint(YE(A.fusionVariant)),!this.player){this.nameText.visible&&(this.nameText.on("pointerover",()=>this.scene.ui.showTooltip("",D.t("battleInfo:generation",{generation:D.t(`starterSelectUiHandler:gen${A.species.generation}`)}))),this.nameText.on("pointerout",()=>this.scene.ui.hideTooltip()));const o=A.scene.gameData.dexData[A.species.speciesId];this.ownedIcon.setVisible(!!o.caughtAttr);const l=A.getDexAttr();A.scene.gameMode.isClassic&&A.scene.gameData.starterData[A.species.getRootSpeciesId()].classicWinCount>0&&A.scene.gameData.starterData[A.species.getRootSpeciesId(!0)].classicWinCount>0&&this.championRibbon.setVisible(!0);const C=(o.caughtAttr&l)<l,M=A.scene.gameData.starterData[A.species.getRootSpeciesId()].abilityAttr,u=A.checkIfPlayerHasAbilityOfStarter(M);(C||!u)&&this.ownedIcon.setTint(8421504),this.boss&&this.updateBossSegmentDividers(A)}this.hpBar.setScale(A.getHpRatio(!0),1),this.lastHpFrame=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low",this.hpBar.setFrame(this.lastHpFrame),this.player&&this.setHpNumbers(A.hp,A.getMaxHp()),this.lastHp=A.hp,this.lastMaxHp=A.getMaxHp(),this.setLevel(A.level),this.lastLevel=A.level,this.shinyIcon.setVisible(A.isShiny());const a=A.getTypes(!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${a.length>1?"1":""}`),this.type1Icon.setFrame(i[a[0]].toLowerCase()),this.type2Icon.setVisible(a.length>1),this.type3Icon.setVisible(a.length>2),a.length>1&&this.type2Icon.setFrame(i[a[1]].toLowerCase()),a.length>2&&this.type3Icon.setFrame(i[a[2]].toLowerCase()),this.player&&(this.expMaskRect.x=A.levelExp/ZR(A.level,A.species.growthRate)*510,this.lastExp=A.exp,this.lastLevelExp=A.levelExp,this.statValuesContainer.setPosition(8,7));const r=this.statOrder.map(()=>0);this.lastStats=r.join(""),this.updateStats(r)}getTextureName(){return`pbinfo_${this.player?"player":"enemy"}${!this.player&&this.boss?"_boss":this.mini?"_mini":""}`}setMini(A){if(this.mini===A)return;this.mini=A,this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`),this.player&&(this.y-=12*(A?1:-1),this.baseY=this.y),[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.statusIndicator,this.levelContainer].forEach(n=>n.y+=1.5*(A?-1:1)),[this.type1Icon,this.type2Icon,this.type3Icon].forEach(n=>{n.x+=4*(A?1:-1),n.y+=-8*(A?1:-1)}),this.statValuesContainer.x+=2*(A?1:-1),this.statValuesContainer.y+=-7*(A?1:-1),[this.hpNumbersContainer,this.expBar].forEach(n=>n.setVisible(!A))}toggleStats(A){this.scene.tweens.add({targets:this.statsContainer,duration:Et(125),ease:"Sine.easeInOut",alpha:A?1:0})}updateBossSegments(A){const s=!!A.bossSegments;s!==this.boss&&(this.boss=s,[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.ownedIcon,this.championRibbon,this.statusIndicator,this.levelContainer,this.statValuesContainer].map(R=>R.x+=48*(s?-1:1)),this.hpBar.x+=38*(s?-1:1),this.hpBar.y+=2*(this.boss?-1:1),this.hpBar.setTexture(`overlay_hp${s?"_boss":""}`),this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`)),this.bossSegments=s?A.bossSegments:0,this.updateBossSegmentDividers(A)}updateBossSegmentDividers(A){var s;for(;this.hpBarSegmentDividers.length;)(s=this.hpBarSegmentDividers.pop())==null||s.destroy();if(this.boss&&this.bossSegments>1){const R=this.scene.uiTheme,n=A.getMaxHp();for(let I=1;I<this.bossSegments;I++){const a=Math.round(n/this.bossSegments*I)/n*this.hpBar.width,r=this.scene.add.rectangle(0,0,1,this.hpBar.height-(R?0:1),A.bossSegmentIndex>=I?16777215:4210752);r.setOrigin(.5,0),r.setName("hpBar_divider_"+I.toString()),this.add(r),this.moveBelow(r,this.statsContainer),r.setPositionRelative(this.hpBar,a,R?0:1),this.hpBarSegmentDividers.push(r)}}}setOffset(A){this.offset!==A&&(this.offset=A,this.x+=10*(this.offset===this.player?1:-1),this.y+=27*(this.offset?1:-1),this.baseY=this.y)}updateInfo(A,s){return new Promise(R=>{var M,u;if(!this.scene)return R();const n=this.lastName!==A.getNameToRender();n&&(this.updateNameText(A),this.genderText.setPositionRelative(this.nameText,this.nameText.displayWidth,0));const I=A.getTeraType(),a=this.lastTeraType!==I;if(a&&(this.teraIcon.setVisible(I!==i.UNKNOWN),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.teraIcon.setTintFill(Phaser.Display.Color.GetColor(...dR(I))),this.lastTeraType=I),(n||a)&&(this.splicedIcon.setVisible(!!A.fusionSpecies),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),1.5),this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5)),this.lastStatus!==(((M=A.status)==null?void 0:M.effect)||Re.NONE)){this.lastStatus=((u=A.status)==null?void 0:u.effect)||Re.NONE,this.lastStatus!==Re.NONE&&this.statusIndicator.setFrame(Re[this.lastStatus].toLowerCase());const h=this.player?0:(this.ownedIcon.visible?8:0)+(this.championRibbon.visible?8:0);this.statusIndicator.setPositionRelative(this.nameText,h,11.5),this.statusIndicator.setVisible(!!this.lastStatus)}const r=A.getTypes(!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${r.length>1?"1":""}`),this.type1Icon.setFrame(i[r[0]].toLowerCase()),this.type2Icon.setVisible(r.length>1),this.type3Icon.setVisible(r.length>2),r.length>1&&this.type2Icon.setFrame(i[r[1]].toLowerCase()),r.length>2&&this.type3Icon.setFrame(i[r[2]].toLowerCase());const S=L(()=>{const h=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low";h!==this.lastHpFrame&&(this.hpBar.setFrame(h),this.lastHpFrame=h)},"updateHpFrame"),o=L(()=>{let h=s?0:Phaser.Math.Clamp(Math.abs(this.lastHp-A.hp)*5,250,5e3);const P=this.scene.hpBarSpeed;P&&(h=P>=3?0:h/Math.pow(2,P)),this.scene.tweens.add({targets:this.hpBar,ease:"Sine.easeOut",scaleX:A.getHpRatio(!0),duration:h,onUpdate:L(()=>{if(this.player&&this.lastHp!==A.hp){const G=Math.ceil(this.hpBar.scaleX*A.getMaxHp());this.setHpNumbers(G,A.getMaxHp()),this.lastHp=G}S()},"onUpdate"),onComplete:L(()=>{S(),R()},"onComplete")}),this.player||(this.lastHp=A.hp),this.lastMaxHp=A.getMaxHp()},"updatePokemonHp");if(this.player){const h=A.level>=this.scene.getMaxExpLevel();if(this.lastExp!==A.exp||this.lastLevel!==A.level){const P=R,G=Math.max(Phaser.Tweens.Builders.GetEaseFunction("Cubic.easeIn")(1-Math.min(A.level-this.lastLevel,10)/10),.1);R=L(()=>this.updatePokemonExp(A,!1,G).then(()=>P()),"resolve")}else h!==this.lastLevelCapped&&this.setLevel(A.level);this.lastLevelCapped=h}if(this.lastHp!==A.hp||this.lastMaxHp!==A.getMaxHp())return o();!this.player&&this.lastLevel!==A.level&&(this.setLevel(A.level),this.lastLevel=A.level);const l=A.getStatStages(),C=l.join("");this.lastStats!==C&&(this.updateStats(l),this.lastStats=C),this.shinyIcon.setVisible(A.isShiny()),R()})}updateNameText(A){let s=A.getNameToRender().replace(/[♂♀]/g,""),R;const n=le(this.scene,0,0,s,X.BATTLE_INFO);for(R=n.displayWidth;R>(this.player||!this.boss?60:98)-((A.gender!==je.GENDERLESS?6:0)+(A.fusionSpecies?8:0)+(A.isShiny()?8:0)+(Math.min(A.level.toString().length,3)-3)*8);)s=`${s.slice(0,s.endsWith(".")?-2:-1).trimEnd()}.`,n.setText(s),R=n.displayWidth;n.destroy(),this.nameText.setText(s),this.lastName=A.getNameToRender(),this.nameText.visible&&this.nameText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.nameText.width,this.nameText.height),Phaser.Geom.Rectangle.Contains)}updatePokemonExp(A,s,R=1){return new Promise(n=>{const I=this.lastLevel<A.level,a=bb(this.lastLevel+1,A.species.growthRate),r=I?a:A.levelExp;let S=a?r/a:0;this.lastLevel>=this.scene.getMaxExpLevel(!0)&&(I?S=1:S=0,s=!0);const o=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.max(this.lastLevel-100,0)/150);let l=this.visible&&!s?(r-this.lastLevelExp)/a*nN.EXP_GAINS_DURATION_BASE*o*R:0;const C=this.scene.expGainsSpeed;C&&C>=er.DEFAULT&&(l=C>=er.SKIP?er.DEFAULT:l/Math.pow(2,C)),S===1?(this.lastLevelExp=0,this.lastLevel++):(this.lastExp=A.exp,this.lastLevelExp=A.levelExp),l&&this.scene.playSound("se/exp"),this.scene.tweens.add({targets:this.expMaskRect,ease:"Sine.easeIn",x:S*510,duration:l,onComplete:L(()=>{if(!this.scene)return n();if(l&&this.scene.sound.stopByKey("se/exp"),S===1){this.scene.playSound("se/level_up"),this.setLevel(this.lastLevel),this.scene.time.delayedCall(500*R,()=>{this.expMaskRect.x=0,this.updateInfo(A,s).then(()=>n())});return}n()},"onComplete")})})}setLevel(A){const s=A>=this.scene.getMaxExpLevel();this.levelNumbersContainer.removeAll(!0);const R=A.toString();for(let n=0;n<R.length;n++)this.levelNumbersContainer.add(this.scene.add.image(n*8,0,`numbers${s&&this.player?"_red":""}`,R[n]));this.levelContainer.setX((this.player?-41:-50)-8*Math.max(R.length-3,0))}setHpNumbers(A,s){if(!this.player||!this.scene)return;this.hpNumbersContainer.removeAll(!0);const R=A.toString(),n=s.toString();let I=0;for(let a=n.length-1;a>=0;a--)this.hpNumbersContainer.add(this.scene.add.image(I++*-8,0,"numbers",n[a]));this.hpNumbersContainer.add(this.scene.add.image(I++*-8,0,"numbers","/"));for(let a=R.length-1;a>=0;a--)this.hpNumbersContainer.add(this.scene.add.image(I++*-8,0,"numbers",R[a]))}updateStats(A){this.statOrder.map((s,R)=>{s!==g.HP&&this.statNumbers[R].setFrame(A[s-1].toString())})}toggleFlyout(A){var s,R;(s=this.flyoutMenu)==null||s.toggleFlyout(A),A?(R=this.effectivenessContainer)==null||R.setVisible(!1):this.updateEffectiveness(this.currentEffectiveness)}updateEffectiveness(A){var s;if(!this.player){if(this.currentEffectiveness=A,!this.scene.typeHints||A===void 0||(s=this.flyoutMenu)!=null&&s.flyoutVisible){this.effectivenessContainer.setVisible(!1);return}this.effectivenessText.setText(A),this.effectivenessWindow.width=10+this.effectivenessText.displayWidth,this.effectivenessContainer.setVisible(!0)}}getBaseY(){return this.baseY}resetY(){this.y=this.baseY}};L(nN,"BattleInfo"),nN.EXP_GAINS_DURATION_BASE=1650;let MT=nN;const g1=class g1 extends MT{constructor(A){super(A,Math.floor(A.game.canvas.width/6)-10,-72,!0)}};L(g1,"PlayerBattleInfo");let Dl=g1;const K1=class K1 extends MT{constructor(A){super(A,140,-141,!1)}setMini(A){}};L(K1,"EnemyBattleInfo");let Qh=K1;const m1=class m1{constructor(A,s=0,R){this.toxicTurnCount=0,this.effect=A,this.toxicTurnCount=s,this.sleepTurnsRemaining=R}incrementTurn(){this.toxicTurnCount++,this.sleepTurnsRemaining&&this.sleepTurnsRemaining--}isPostTurn(){return this.effect===Re.POISON||this.effect===Re.TOXIC||this.effect===Re.BURN}};L(m1,"Status");let VI=m1;function Cr(E){switch(E){case Re.POISON:return"statusEffect:poison";case Re.TOXIC:return"statusEffect:toxic";case Re.PARALYSIS:return"statusEffect:paralysis";case Re.SLEEP:return"statusEffect:sleep";case Re.FREEZE:return"statusEffect:freeze";case Re.BURN:return"statusEffect:burn";default:return"statusEffect:none"}}L(Cr,"getStatusEffectMessageKey");function t7(E,A,s){if(E===Re.NONE)return"";if(!s){const n=`${Cr(E)}.obtain`;return D.t(n,{pokemonNameWithAffix:A})}const R=`${Cr(E)}.obtainSource`;return D.t(R,{pokemonNameWithAffix:A,sourceText:s})}L(t7,"getStatusEffectObtainText");function Zb(E,A){if(E===Re.NONE)return"";const s=`${Cr(E)}.activation`;return D.t(s,{pokemonNameWithAffix:A})}L(Zb,"getStatusEffectActivationText");function A7(E,A){if(E===Re.NONE)return"";const s=`${Cr(E)}.overlap`;return D.t(s,{pokemonNameWithAffix:A})}L(A7,"getStatusEffectOverlapText");function EI(E,A){if(E===Re.NONE)return"";const s=`${Cr(E)}.heal`;return D.t(s,{pokemonNameWithAffix:A})}L(EI,"getStatusEffectHealText");function Xb(E){if(E===Re.NONE)return"";const A=`${Cr(E)}.description`;return D.t(A)}L(Xb,"getStatusEffectDescriptor");function Qb(E){switch(E){case Re.POISON:case Re.TOXIC:case Re.PARALYSIS:case Re.BURN:return 1.5;case Re.SLEEP:case Re.FREEZE:return 2.5}return 1}L(Qb,"getStatusEffectCatchRateMultiplier");function E7(E,A){return!E||E.effect===Re.NONE||E.effect===Re.FAINT?A:!A||A.effect===Re.NONE||A.effect===Re.FAINT||vb(0,2)?E:A}L(E7,"getRandomStatus");function cL(){return[Re.POISON,Re.TOXIC,Re.PARALYSIS,Re.SLEEP,Re.FREEZE,Re.BURN]}L(cL,"getNonVolatileStatusEffects");function mV(E){return cL().includes(E)}L(mV,"isNonVolatileStatusEffect");var O=(E=>(E[E.NONE=0]="NONE",E[E.STENCH=1]="STENCH",E[E.DRIZZLE=2]="DRIZZLE",E[E.SPEED_BOOST=3]="SPEED_BOOST",E[E.BATTLE_ARMOR=4]="BATTLE_ARMOR",E[E.STURDY=5]="STURDY",E[E.DAMP=6]="DAMP",E[E.LIMBER=7]="LIMBER",E[E.SAND_VEIL=8]="SAND_VEIL",E[E.STATIC=9]="STATIC",E[E.VOLT_ABSORB=10]="VOLT_ABSORB",E[E.WATER_ABSORB=11]="WATER_ABSORB",E[E.OBLIVIOUS=12]="OBLIVIOUS",E[E.CLOUD_NINE=13]="CLOUD_NINE",E[E.COMPOUND_EYES=14]="COMPOUND_EYES",E[E.INSOMNIA=15]="INSOMNIA",E[E.COLOR_CHANGE=16]="COLOR_CHANGE",E[E.IMMUNITY=17]="IMMUNITY",E[E.FLASH_FIRE=18]="FLASH_FIRE",E[E.SHIELD_DUST=19]="SHIELD_DUST",E[E.OWN_TEMPO=20]="OWN_TEMPO",E[E.SUCTION_CUPS=21]="SUCTION_CUPS",E[E.INTIMIDATE=22]="INTIMIDATE",E[E.SHADOW_TAG=23]="SHADOW_TAG",E[E.ROUGH_SKIN=24]="ROUGH_SKIN",E[E.WONDER_GUARD=25]="WONDER_GUARD",E[E.LEVITATE=26]="LEVITATE",E[E.EFFECT_SPORE=27]="EFFECT_SPORE",E[E.SYNCHRONIZE=28]="SYNCHRONIZE",E[E.CLEAR_BODY=29]="CLEAR_BODY",E[E.NATURAL_CURE=30]="NATURAL_CURE",E[E.LIGHTNING_ROD=31]="LIGHTNING_ROD",E[E.SERENE_GRACE=32]="SERENE_GRACE",E[E.SWIFT_SWIM=33]="SWIFT_SWIM",E[E.CHLOROPHYLL=34]="CHLOROPHYLL",E[E.ILLUMINATE=35]="ILLUMINATE",E[E.TRACE=36]="TRACE",E[E.HUGE_POWER=37]="HUGE_POWER",E[E.POISON_POINT=38]="POISON_POINT",E[E.INNER_FOCUS=39]="INNER_FOCUS",E[E.MAGMA_ARMOR=40]="MAGMA_ARMOR",E[E.WATER_VEIL=41]="WATER_VEIL",E[E.MAGNET_PULL=42]="MAGNET_PULL",E[E.SOUNDPROOF=43]="SOUNDPROOF",E[E.RAIN_DISH=44]="RAIN_DISH",E[E.SAND_STREAM=45]="SAND_STREAM",E[E.PRESSURE=46]="PRESSURE",E[E.THICK_FAT=47]="THICK_FAT",E[E.EARLY_BIRD=48]="EARLY_BIRD",E[E.FLAME_BODY=49]="FLAME_BODY",E[E.RUN_AWAY=50]="RUN_AWAY",E[E.KEEN_EYE=51]="KEEN_EYE",E[E.HYPER_CUTTER=52]="HYPER_CUTTER",E[E.PICKUP=53]="PICKUP",E[E.TRUANT=54]="TRUANT",E[E.HUSTLE=55]="HUSTLE",E[E.CUTE_CHARM=56]="CUTE_CHARM",E[E.PLUS=57]="PLUS",E[E.MINUS=58]="MINUS",E[E.FORECAST=59]="FORECAST",E[E.STICKY_HOLD=60]="STICKY_HOLD",E[E.SHED_SKIN=61]="SHED_SKIN",E[E.GUTS=62]="GUTS",E[E.MARVEL_SCALE=63]="MARVEL_SCALE",E[E.LIQUID_OOZE=64]="LIQUID_OOZE",E[E.OVERGROW=65]="OVERGROW",E[E.BLAZE=66]="BLAZE",E[E.TORRENT=67]="TORRENT",E[E.SWARM=68]="SWARM",E[E.ROCK_HEAD=69]="ROCK_HEAD",E[E.DROUGHT=70]="DROUGHT",E[E.ARENA_TRAP=71]="ARENA_TRAP",E[E.VITAL_SPIRIT=72]="VITAL_SPIRIT",E[E.WHITE_SMOKE=73]="WHITE_SMOKE",E[E.PURE_POWER=74]="PURE_POWER",E[E.SHELL_ARMOR=75]="SHELL_ARMOR",E[E.AIR_LOCK=76]="AIR_LOCK",E[E.TANGLED_FEET=77]="TANGLED_FEET",E[E.MOTOR_DRIVE=78]="MOTOR_DRIVE",E[E.RIVALRY=79]="RIVALRY",E[E.STEADFAST=80]="STEADFAST",E[E.SNOW_CLOAK=81]="SNOW_CLOAK",E[E.GLUTTONY=82]="GLUTTONY",E[E.ANGER_POINT=83]="ANGER_POINT",E[E.UNBURDEN=84]="UNBURDEN",E[E.HEATPROOF=85]="HEATPROOF",E[E.SIMPLE=86]="SIMPLE",E[E.DRY_SKIN=87]="DRY_SKIN",E[E.DOWNLOAD=88]="DOWNLOAD",E[E.IRON_FIST=89]="IRON_FIST",E[E.POISON_HEAL=90]="POISON_HEAL",E[E.ADAPTABILITY=91]="ADAPTABILITY",E[E.SKILL_LINK=92]="SKILL_LINK",E[E.HYDRATION=93]="HYDRATION",E[E.SOLAR_POWER=94]="SOLAR_POWER",E[E.QUICK_FEET=95]="QUICK_FEET",E[E.NORMALIZE=96]="NORMALIZE",E[E.SNIPER=97]="SNIPER",E[E.MAGIC_GUARD=98]="MAGIC_GUARD",E[E.NO_GUARD=99]="NO_GUARD",E[E.STALL=100]="STALL",E[E.TECHNICIAN=101]="TECHNICIAN",E[E.LEAF_GUARD=102]="LEAF_GUARD",E[E.KLUTZ=103]="KLUTZ",E[E.MOLD_BREAKER=104]="MOLD_BREAKER",E[E.SUPER_LUCK=105]="SUPER_LUCK",E[E.AFTERMATH=106]="AFTERMATH",E[E.ANTICIPATION=107]="ANTICIPATION",E[E.FOREWARN=108]="FOREWARN",E[E.UNAWARE=109]="UNAWARE",E[E.TINTED_LENS=110]="TINTED_LENS",E[E.FILTER=111]="FILTER",E[E.SLOW_START=112]="SLOW_START",E[E.SCRAPPY=113]="SCRAPPY",E[E.STORM_DRAIN=114]="STORM_DRAIN",E[E.ICE_BODY=115]="ICE_BODY",E[E.SOLID_ROCK=116]="SOLID_ROCK",E[E.SNOW_WARNING=117]="SNOW_WARNING",E[E.HONEY_GATHER=118]="HONEY_GATHER",E[E.FRISK=119]="FRISK",E[E.RECKLESS=120]="RECKLESS",E[E.MULTITYPE=121]="MULTITYPE",E[E.FLOWER_GIFT=122]="FLOWER_GIFT",E[E.BAD_DREAMS=123]="BAD_DREAMS",E[E.PICKPOCKET=124]="PICKPOCKET",E[E.SHEER_FORCE=125]="SHEER_FORCE",E[E.CONTRARY=126]="CONTRARY",E[E.UNNERVE=127]="UNNERVE",E[E.DEFIANT=128]="DEFIANT",E[E.DEFEATIST=129]="DEFEATIST",E[E.CURSED_BODY=130]="CURSED_BODY",E[E.HEALER=131]="HEALER",E[E.FRIEND_GUARD=132]="FRIEND_GUARD",E[E.WEAK_ARMOR=133]="WEAK_ARMOR",E[E.HEAVY_METAL=134]="HEAVY_METAL",E[E.LIGHT_METAL=135]="LIGHT_METAL",E[E.MULTISCALE=136]="MULTISCALE",E[E.TOXIC_BOOST=137]="TOXIC_BOOST",E[E.FLARE_BOOST=138]="FLARE_BOOST",E[E.HARVEST=139]="HARVEST",E[E.TELEPATHY=140]="TELEPATHY",E[E.MOODY=141]="MOODY",E[E.OVERCOAT=142]="OVERCOAT",E[E.POISON_TOUCH=143]="POISON_TOUCH",E[E.REGENERATOR=144]="REGENERATOR",E[E.BIG_PECKS=145]="BIG_PECKS",E[E.SAND_RUSH=146]="SAND_RUSH",E[E.WONDER_SKIN=147]="WONDER_SKIN",E[E.ANALYTIC=148]="ANALYTIC",E[E.ILLUSION=149]="ILLUSION",E[E.IMPOSTER=150]="IMPOSTER",E[E.INFILTRATOR=151]="INFILTRATOR",E[E.MUMMY=152]="MUMMY",E[E.MOXIE=153]="MOXIE",E[E.JUSTIFIED=154]="JUSTIFIED",E[E.RATTLED=155]="RATTLED",E[E.MAGIC_BOUNCE=156]="MAGIC_BOUNCE",E[E.SAP_SIPPER=157]="SAP_SIPPER",E[E.PRANKSTER=158]="PRANKSTER",E[E.SAND_FORCE=159]="SAND_FORCE",E[E.IRON_BARBS=160]="IRON_BARBS",E[E.ZEN_MODE=161]="ZEN_MODE",E[E.VICTORY_STAR=162]="VICTORY_STAR",E[E.TURBOBLAZE=163]="TURBOBLAZE",E[E.TERAVOLT=164]="TERAVOLT",E[E.AROMA_VEIL=165]="AROMA_VEIL",E[E.FLOWER_VEIL=166]="FLOWER_VEIL",E[E.CHEEK_POUCH=167]="CHEEK_POUCH",E[E.PROTEAN=168]="PROTEAN",E[E.FUR_COAT=169]="FUR_COAT",E[E.MAGICIAN=170]="MAGICIAN",E[E.BULLETPROOF=171]="BULLETPROOF",E[E.COMPETITIVE=172]="COMPETITIVE",E[E.STRONG_JAW=173]="STRONG_JAW",E[E.REFRIGERATE=174]="REFRIGERATE",E[E.SWEET_VEIL=175]="SWEET_VEIL",E[E.STANCE_CHANGE=176]="STANCE_CHANGE",E[E.GALE_WINGS=177]="GALE_WINGS",E[E.MEGA_LAUNCHER=178]="MEGA_LAUNCHER",E[E.GRASS_PELT=179]="GRASS_PELT",E[E.SYMBIOSIS=180]="SYMBIOSIS",E[E.TOUGH_CLAWS=181]="TOUGH_CLAWS",E[E.PIXILATE=182]="PIXILATE",E[E.GOOEY=183]="GOOEY",E[E.AERILATE=184]="AERILATE",E[E.PARENTAL_BOND=185]="PARENTAL_BOND",E[E.DARK_AURA=186]="DARK_AURA",E[E.FAIRY_AURA=187]="FAIRY_AURA",E[E.AURA_BREAK=188]="AURA_BREAK",E[E.PRIMORDIAL_SEA=189]="PRIMORDIAL_SEA",E[E.DESOLATE_LAND=190]="DESOLATE_LAND",E[E.DELTA_STREAM=191]="DELTA_STREAM",E[E.STAMINA=192]="STAMINA",E[E.WIMP_OUT=193]="WIMP_OUT",E[E.EMERGENCY_EXIT=194]="EMERGENCY_EXIT",E[E.WATER_COMPACTION=195]="WATER_COMPACTION",E[E.MERCILESS=196]="MERCILESS",E[E.SHIELDS_DOWN=197]="SHIELDS_DOWN",E[E.STAKEOUT=198]="STAKEOUT",E[E.WATER_BUBBLE=199]="WATER_BUBBLE",E[E.STEELWORKER=200]="STEELWORKER",E[E.BERSERK=201]="BERSERK",E[E.SLUSH_RUSH=202]="SLUSH_RUSH",E[E.LONG_REACH=203]="LONG_REACH",E[E.LIQUID_VOICE=204]="LIQUID_VOICE",E[E.TRIAGE=205]="TRIAGE",E[E.GALVANIZE=206]="GALVANIZE",E[E.SURGE_SURFER=207]="SURGE_SURFER",E[E.SCHOOLING=208]="SCHOOLING",E[E.DISGUISE=209]="DISGUISE",E[E.BATTLE_BOND=210]="BATTLE_BOND",E[E.POWER_CONSTRUCT=211]="POWER_CONSTRUCT",E[E.CORROSION=212]="CORROSION",E[E.COMATOSE=213]="COMATOSE",E[E.QUEENLY_MAJESTY=214]="QUEENLY_MAJESTY",E[E.INNARDS_OUT=215]="INNARDS_OUT",E[E.DANCER=216]="DANCER",E[E.BATTERY=217]="BATTERY",E[E.FLUFFY=218]="FLUFFY",E[E.DAZZLING=219]="DAZZLING",E[E.SOUL_HEART=220]="SOUL_HEART",E[E.TANGLING_HAIR=221]="TANGLING_HAIR",E[E.RECEIVER=222]="RECEIVER",E[E.POWER_OF_ALCHEMY=223]="POWER_OF_ALCHEMY",E[E.BEAST_BOOST=224]="BEAST_BOOST",E[E.RKS_SYSTEM=225]="RKS_SYSTEM",E[E.ELECTRIC_SURGE=226]="ELECTRIC_SURGE",E[E.PSYCHIC_SURGE=227]="PSYCHIC_SURGE",E[E.MISTY_SURGE=228]="MISTY_SURGE",E[E.GRASSY_SURGE=229]="GRASSY_SURGE",E[E.FULL_METAL_BODY=230]="FULL_METAL_BODY",E[E.SHADOW_SHIELD=231]="SHADOW_SHIELD",E[E.PRISM_ARMOR=232]="PRISM_ARMOR",E[E.NEUROFORCE=233]="NEUROFORCE",E[E.INTREPID_SWORD=234]="INTREPID_SWORD",E[E.DAUNTLESS_SHIELD=235]="DAUNTLESS_SHIELD",E[E.LIBERO=236]="LIBERO",E[E.BALL_FETCH=237]="BALL_FETCH",E[E.COTTON_DOWN=238]="COTTON_DOWN",E[E.PROPELLER_TAIL=239]="PROPELLER_TAIL",E[E.MIRROR_ARMOR=240]="MIRROR_ARMOR",E[E.GULP_MISSILE=241]="GULP_MISSILE",E[E.STALWART=242]="STALWART",E[E.STEAM_ENGINE=243]="STEAM_ENGINE",E[E.PUNK_ROCK=244]="PUNK_ROCK",E[E.SAND_SPIT=245]="SAND_SPIT",E[E.ICE_SCALES=246]="ICE_SCALES",E[E.RIPEN=247]="RIPEN",E[E.ICE_FACE=248]="ICE_FACE",E[E.POWER_SPOT=249]="POWER_SPOT",E[E.MIMICRY=250]="MIMICRY",E[E.SCREEN_CLEANER=251]="SCREEN_CLEANER",E[E.STEELY_SPIRIT=252]="STEELY_SPIRIT",E[E.PERISH_BODY=253]="PERISH_BODY",E[E.WANDERING_SPIRIT=254]="WANDERING_SPIRIT",E[E.GORILLA_TACTICS=255]="GORILLA_TACTICS",E[E.NEUTRALIZING_GAS=256]="NEUTRALIZING_GAS",E[E.PASTEL_VEIL=257]="PASTEL_VEIL",E[E.HUNGER_SWITCH=258]="HUNGER_SWITCH",E[E.QUICK_DRAW=259]="QUICK_DRAW",E[E.UNSEEN_FIST=260]="UNSEEN_FIST",E[E.CURIOUS_MEDICINE=261]="CURIOUS_MEDICINE",E[E.TRANSISTOR=262]="TRANSISTOR",E[E.DRAGONS_MAW=263]="DRAGONS_MAW",E[E.CHILLING_NEIGH=264]="CHILLING_NEIGH",E[E.GRIM_NEIGH=265]="GRIM_NEIGH",E[E.AS_ONE_GLASTRIER=266]="AS_ONE_GLASTRIER",E[E.AS_ONE_SPECTRIER=267]="AS_ONE_SPECTRIER",E[E.LINGERING_AROMA=268]="LINGERING_AROMA",E[E.SEED_SOWER=269]="SEED_SOWER",E[E.THERMAL_EXCHANGE=270]="THERMAL_EXCHANGE",E[E.ANGER_SHELL=271]="ANGER_SHELL",E[E.PURIFYING_SALT=272]="PURIFYING_SALT",E[E.WELL_BAKED_BODY=273]="WELL_BAKED_BODY",E[E.WIND_RIDER=274]="WIND_RIDER",E[E.GUARD_DOG=275]="GUARD_DOG",E[E.ROCKY_PAYLOAD=276]="ROCKY_PAYLOAD",E[E.WIND_POWER=277]="WIND_POWER",E[E.ZERO_TO_HERO=278]="ZERO_TO_HERO",E[E.COMMANDER=279]="COMMANDER",E[E.ELECTROMORPHOSIS=280]="ELECTROMORPHOSIS",E[E.PROTOSYNTHESIS=281]="PROTOSYNTHESIS",E[E.QUARK_DRIVE=282]="QUARK_DRIVE",E[E.GOOD_AS_GOLD=283]="GOOD_AS_GOLD",E[E.VESSEL_OF_RUIN=284]="VESSEL_OF_RUIN",E[E.SWORD_OF_RUIN=285]="SWORD_OF_RUIN",E[E.TABLETS_OF_RUIN=286]="TABLETS_OF_RUIN",E[E.BEADS_OF_RUIN=287]="BEADS_OF_RUIN",E[E.ORICHALCUM_PULSE=288]="ORICHALCUM_PULSE",E[E.HADRON_ENGINE=289]="HADRON_ENGINE",E[E.OPPORTUNIST=290]="OPPORTUNIST",E[E.CUD_CHEW=291]="CUD_CHEW",E[E.SHARPNESS=292]="SHARPNESS",E[E.SUPREME_OVERLORD=293]="SUPREME_OVERLORD",E[E.COSTAR=294]="COSTAR",E[E.TOXIC_DEBRIS=295]="TOXIC_DEBRIS",E[E.ARMOR_TAIL=296]="ARMOR_TAIL",E[E.EARTH_EATER=297]="EARTH_EATER",E[E.MYCELIUM_MIGHT=298]="MYCELIUM_MIGHT",E[E.MINDS_EYE=299]="MINDS_EYE",E[E.SUPERSWEET_SYRUP=300]="SUPERSWEET_SYRUP",E[E.HOSPITALITY=301]="HOSPITALITY",E[E.TOXIC_CHAIN=302]="TOXIC_CHAIN",E[E.EMBODY_ASPECT_TEAL=303]="EMBODY_ASPECT_TEAL",E[E.EMBODY_ASPECT_WELLSPRING=304]="EMBODY_ASPECT_WELLSPRING",E[E.EMBODY_ASPECT_HEARTHFLAME=305]="EMBODY_ASPECT_HEARTHFLAME",E[E.EMBODY_ASPECT_CORNERSTONE=306]="EMBODY_ASPECT_CORNERSTONE",E[E.TERA_SHIFT=307]="TERA_SHIFT",E[E.TERA_SHELL=308]="TERA_SHELL",E[E.TERAFORM_ZERO=309]="TERAFORM_ZERO",E[E.POISON_PUPPETEER=310]="POISON_PUPPETEER",E))(O||{}),ge=(E=>(E.NONE="NONE",E.MUD_SPORT="MUD_SPORT",E.WATER_SPORT="WATER_SPORT",E.SPIKES="SPIKES",E.TOXIC_SPIKES="TOXIC_SPIKES",E.MIST="MIST",E.FUTURE_SIGHT="FUTURE_SIGHT",E.DOOM_DESIRE="DOOM_DESIRE",E.WISH="WISH",E.STEALTH_ROCK="STEALTH_ROCK",E.STICKY_WEB="STICKY_WEB",E.TRICK_ROOM="TRICK_ROOM",E.GRAVITY="GRAVITY",E.REFLECT="REFLECT",E.LIGHT_SCREEN="LIGHT_SCREEN",E.AURORA_VEIL="AURORA_VEIL",E.QUICK_GUARD="QUICK_GUARD",E.WIDE_GUARD="WIDE_GUARD",E.MAT_BLOCK="MAT_BLOCK",E.CRAFTY_SHIELD="CRAFTY_SHIELD",E.TAILWIND="TAILWIND",E.HAPPY_HOUR="HAPPY_HOUR",E.SAFEGUARD="SAFEGUARD",E.NO_CRIT="NO_CRIT",E.IMPRISON="IMPRISON",E.ION_DELUGE="ION_DELUGE",E.FIRE_GRASS_PLEDGE="FIRE_GRASS_PLEDGE",E.WATER_FIRE_PLEDGE="WATER_FIRE_PLEDGE",E.GRASS_WATER_PLEDGE="GRASS_WATER_PLEDGE",E.FAIRY_LOCK="FAIRY_LOCK",E))(ge||{}),Y=(E=>(E.NONE="NONE",E.RECHARGING="RECHARGING",E.FLINCHED="FLINCHED",E.INTERRUPTED="INTERRUPTED",E.CONFUSED="CONFUSED",E.INFATUATED="INFATUATED",E.SEEDED="SEEDED",E.NIGHTMARE="NIGHTMARE",E.FRENZY="FRENZY",E.CHARGING="CHARGING",E.ENCORE="ENCORE",E.HELPING_HAND="HELPING_HAND",E.INGRAIN="INGRAIN",E.OCTOLOCK="OCTOLOCK",E.AQUA_RING="AQUA_RING",E.DROWSY="DROWSY",E.TRAPPED="TRAPPED",E.BIND="BIND",E.WRAP="WRAP",E.FIRE_SPIN="FIRE_SPIN",E.WHIRLPOOL="WHIRLPOOL",E.CLAMP="CLAMP",E.SAND_TOMB="SAND_TOMB",E.MAGMA_STORM="MAGMA_STORM",E.SNAP_TRAP="SNAP_TRAP",E.THUNDER_CAGE="THUNDER_CAGE",E.INFESTATION="INFESTATION",E.PROTECTED="PROTECTED",E.SPIKY_SHIELD="SPIKY_SHIELD",E.KINGS_SHIELD="KINGS_SHIELD",E.OBSTRUCT="OBSTRUCT",E.SILK_TRAP="SILK_TRAP",E.BANEFUL_BUNKER="BANEFUL_BUNKER",E.BURNING_BULWARK="BURNING_BULWARK",E.ENDURING="ENDURING",E.STURDY="STURDY",E.PERISH_SONG="PERISH_SONG",E.TRUANT="TRUANT",E.SLOW_START="SLOW_START",E.PROTOSYNTHESIS="PROTOSYNTHESIS",E.QUARK_DRIVE="QUARK_DRIVE",E.FLYING="FLYING",E.UNDERGROUND="UNDERGROUND",E.UNDERWATER="UNDERWATER",E.HIDDEN="HIDDEN",E.FIRE_BOOST="FIRE_BOOST",E.CRIT_BOOST="CRIT_BOOST",E.ALWAYS_CRIT="ALWAYS_CRIT",E.IGNORE_ACCURACY="IGNORE_ACCURACY",E.BYPASS_SLEEP="BYPASS_SLEEP",E.IGNORE_FLYING="IGNORE_FLYING",E.SALT_CURED="SALT_CURED",E.CURSED="CURSED",E.CHARGED="CHARGED",E.ROOSTED="ROOSTED",E.FLOATING="FLOATING",E.MINIMIZED="MINIMIZED",E.DESTINY_BOND="DESTINY_BOND",E.CENTER_OF_ATTENTION="CENTER_OF_ATTENTION",E.ICE_FACE="ICE_FACE",E.DISGUISE="DISGUISE",E.STOCKPILING="STOCKPILING",E.RECEIVE_DOUBLE_DAMAGE="RECEIVE_DOUBLE_DAMAGE",E.ALWAYS_GET_HIT="ALWAYS_GET_HIT",E.DISABLED="DISABLED",E.SUBSTITUTE="SUBSTITUTE",E.IGNORE_GHOST="IGNORE_GHOST",E.IGNORE_DARK="IGNORE_DARK",E.GULP_MISSILE_ARROKUDA="GULP_MISSILE_ARROKUDA",E.GULP_MISSILE_PIKACHU="GULP_MISSILE_PIKACHU",E.BEAK_BLAST_CHARGING="BEAK_BLAST_CHARGING",E.SHELL_TRAP="SHELL_TRAP",E.DRAGON_CHEER="DRAGON_CHEER",E.NO_RETREAT="NO_RETREAT",E.GORILLA_TACTICS="GORILLA_TACTICS",E.UNBURDEN="UNBURDEN",E.THROAT_CHOPPED="THROAT_CHOPPED",E.TAR_SHOT="TAR_SHOT",E.BURNED_UP="BURNED_UP",E.DOUBLE_SHOCKED="DOUBLE_SHOCKED",E.AUTOTOMIZED="AUTOTOMIZED",E.MYSTERY_ENCOUNTER_POST_SUMMON="MYSTERY_ENCOUNTER_POST_SUMMON",E.POWER_TRICK="POWER_TRICK",E.HEAL_BLOCK="HEAL_BLOCK",E.TORMENT="TORMENT",E.TAUNT="TAUNT",E.IMPRISON="IMPRISON",E.SYRUP_BOMB="SYRUP_BOMB",E.ELECTRIFIED="ELECTRIFIED",E.TELEKINESIS="TELEKINESIS",E.COMMANDED="COMMANDED",E.GRUDGE="GRUDGE",E.PSYCHO_SHIFT="PSYCHO_SHIFT",E.ENDURE_TOKEN="ENDURE_TOKEN",E.POWDER="POWDER",E))(Y||{}),we=(E=>(E[E.WEAKEST=0]="WEAKEST",E[E.WEAKER=1]="WEAKER",E[E.WEAK=2]="WEAK",E[E.AVERAGE=3]="AVERAGE",E[E.STRONG=4]="STRONG",E[E.STRONGER=5]="STRONGER",E))(we||{});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function uR(E){return E<0?-1:E===0?0:1}L(uR,"signum");function _L(E,A,s){return(1-s)*E+s*A}L(_L,"lerp");function s7(E,A,s){return s<E?E:s>A?A:s}L(s7,"clampInt");function Ml(E,A,s){return s<E?E:s>A?A:s}L(Ml,"clampDouble");function R7(E){return E=E%360,E<0&&(E=E+360),E}L(R7,"sanitizeDegreesDouble");function Jh(E,A){const s=E[0]*A[0][0]+E[1]*A[0][1]+E[2]*A[0][2],R=E[0]*A[1][0]+E[1]*A[1][1]+E[2]*A[1][2],n=E[0]*A[2][0]+E[1]*A[2][1]+E[2]*A[2][2];return[s,R,n]}L(Jh,"matrixMultiply");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Jb=[[.41233895,.35762064,.18051042],[.2126,.7152,.0722],[.01932141,.11916382,.95034478]],O7=[[3.2413774792388685,-1.5376652402851851,-.49885366846268053],[-.9691452513005321,1.8758853451067872,.04156585616912061],[.05562093689691305,-.20395524564742123,1.0571799111220335]],jd=[95.047,100,108.883];function e1(E,A,s){return(255<<24|(E&255)<<16|(A&255)<<8|s&255)>>>0}L(e1,"argbFromRgb");function FV(E){const A=KI(E[0]),s=KI(E[1]),R=KI(E[2]);return e1(A,s,R)}L(FV,"argbFromLinrgb");function $b(E){return E>>24&255}L($b,"alphaFromArgb");function AM(E){return E>>16&255}L(AM,"redFromArgb");function EM(E){return E>>8&255}L(EM,"greenFromArgb");function sM(E){return E&255}L(sM,"blueFromArgb");function zb(E,A,s){const R=O7,n=R[0][0]*E+R[0][1]*A+R[0][2]*s,I=R[1][0]*E+R[1][1]*A+R[1][2]*s,a=R[2][0]*E+R[2][1]*A+R[2][2]*s,r=KI(n),S=KI(I),o=KI(a);return e1(r,S,o)}L(zb,"argbFromXyz");function n7(E){const A=Wn(AM(E)),s=Wn(EM(E)),R=Wn(sM(E));return Jh([A,s,R],Jb)}L(n7,"xyzFromArgb");function i7(E,A,s){const R=jd,n=(E+16)/116,I=A/500+n,a=n-s/200,r=rl(I),S=rl(n),o=rl(a),l=r*R[0],C=S*R[1],M=o*R[2];return zb(l,C,M)}L(i7,"argbFromLab");function I7(E){const A=Wn(AM(E)),s=Wn(EM(E)),R=Wn(sM(E)),n=Jb,I=n[0][0]*A+n[0][1]*s+n[0][2]*R,a=n[1][0]*A+n[1][1]*s+n[1][2]*R,r=n[2][0]*A+n[2][1]*s+n[2][2]*R,S=jd,o=I/S[0],l=a/S[1],C=r/S[2],M=PL(o),u=PL(l),h=PL(C),P=116*u-16,G=500*(M-u),d=200*(u-h);return[P,G,d]}L(I7,"labFromArgb");function a7(E){const A=Gi(E),s=KI(A);return e1(s,s,s)}L(a7,"argbFromLstar");function pV(E){const A=n7(E)[1];return 116*PL(A/100)-16}L(pV,"lstarFromArgb");function Gi(E){return 100*rl((E+16)/116)}L(Gi,"yFromLstar");function $h(E){return PL(E/100)*116-16}L($h,"lstarFromY");function Wn(E){const A=E/255;return A<=.040449936?A/12.92*100:Math.pow((A+.055)/1.055,2.4)*100}L(Wn,"linearized");function KI(E){const A=E/100;let s=0;return A<=.0031308?s=A*12.92:s=1.055*Math.pow(A,1/2.4)-.055,s7(0,255,Math.round(s*255))}L(KI,"delinearized");function r7(){return jd}L(r7,"whitePointD65");function zh(E){const A=AM(E),s=EM(E),R=sM(E),n=$b(E);return{r:A,g:s,b:R,a:n}}L(zh,"rgbaFromArgb");function Xs({r:E,g:A,b:s,a:R}){const n=vo(E),I=vo(A),a=vo(s);return vo(R)<<24|n<<16|I<<8|a}L(Xs,"argbFromRgba");function vo(E){return E<0?0:E>255?255:E}L(vo,"clampComponent");function PL(E){const A=.008856451679035631,s=24389/27;return E>A?Math.pow(E,1/3):(s*E+16)/116}L(PL,"labF");function rl(E){const A=.008856451679035631,s=24389/27,R=E*E*E;return R>A?R:(116*E-16)/s}L(rl,"labInvf");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const _D=class _D{static make(A=r7(),s=200/Math.PI*Gi(50)/100,R=50,n=2,I=!1){const a=A,r=a[0]*.401288+a[1]*.650173+a[2]*-.051461,S=a[0]*-.250268+a[1]*1.204414+a[2]*.045854,o=a[0]*-.002079+a[1]*.048952+a[2]*.953127,l=.8+n/10,C=l>=.9?_L(.59,.69,(l-.9)*10):_L(.525,.59,(l-.8)*10);let M=I?1:l*(1-1/3.6*Math.exp((-s-42)/92));M=M>1?1:M<0?0:M;const u=l,h=[M*(100/r)+1-M,M*(100/S)+1-M,M*(100/o)+1-M],P=1/(5*s+1),G=P*P*P*P,d=1-G,H=G*s+.1*d*d*Math.cbrt(5*s),f=Gi(R)/A[1],K=1.48+Math.sqrt(f),W=.725/Math.pow(f,.2),V=W,k=[Math.pow(H*h[0]*r/100,.42),Math.pow(H*h[1]*S/100,.42),Math.pow(H*h[2]*o/100,.42)],Q=[400*k[0]/(k[0]+27.13),400*k[1]/(k[1]+27.13),400*k[2]/(k[2]+27.13)],j=(2*Q[0]+Q[1]+.05*Q[2])*W;return new _D(f,j,W,V,C,u,h,H,Math.pow(H,.25),K)}constructor(A,s,R,n,I,a,r,S,o,l){this.n=A,this.aw=s,this.nbb=R,this.ncb=n,this.c=I,this.nc=a,this.rgbD=r,this.fl=S,this.fLRoot=o,this.z=l}};L(_D,"ViewingConditions");let yO=_D;yO.DEFAULT=yO.make();/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const tn=class tn{constructor(A,s,R,n,I,a,r,S,o){this.hue=A,this.chroma=s,this.j=R,this.q=n,this.m=I,this.s=a,this.jstar=r,this.astar=S,this.bstar=o}distance(A){const s=this.jstar-A.jstar,R=this.astar-A.astar,n=this.bstar-A.bstar,I=Math.sqrt(s*s+R*R+n*n);return 1.41*Math.pow(I,.63)}static fromInt(A){return tn.fromIntInViewingConditions(A,yO.DEFAULT)}static fromIntInViewingConditions(A,s){const R=(A&16711680)>>16,n=(A&65280)>>8,I=A&255,a=Wn(R),r=Wn(n),S=Wn(I),o=.41233895*a+.35762064*r+.18051042*S,l=.2126*a+.7152*r+.0722*S,C=.01932141*a+.11916382*r+.95034478*S,M=.401288*o+.650173*l-.051461*C,u=-.250268*o+1.204414*l+.045854*C,h=-.002079*o+.048952*l+.953127*C,P=s.rgbD[0]*M,G=s.rgbD[1]*u,d=s.rgbD[2]*h,H=Math.pow(s.fl*Math.abs(P)/100,.42),f=Math.pow(s.fl*Math.abs(G)/100,.42),K=Math.pow(s.fl*Math.abs(d)/100,.42),W=uR(P)*400*H/(H+27.13),V=uR(G)*400*f/(f+27.13),k=uR(d)*400*K/(K+27.13),Q=(11*W+-12*V+k)/11,j=(W+V-2*k)/9,J=(20*W+20*V+21*k)/20,ne=(40*W+20*V+k)/20,q=Math.atan2(j,Q)*180/Math.PI,F=q<0?q+360:q>=360?q-360:q,Te=F*Math.PI/180,He=ne*s.nbb,ue=100*Math.pow(He/s.aw,s.c*s.z),me=4/s.c*Math.sqrt(ue/100)*(s.aw+4)*s.fLRoot,Me=F<20.14?F+360:F,Ie=.25*(Math.cos(Me*Math.PI/180+2)+3.8),te=5e4/13*Ie*s.nc*s.ncb*Math.sqrt(Q*Q+j*j)/(J+.305),Le=Math.pow(te,.9)*Math.pow(1.64-Math.pow(.29,s.n),.73),Ue=Le*Math.sqrt(ue/100),Be=Ue*s.fLRoot,st=50*Math.sqrt(Le*s.c/(s.aw+4)),ft=(1+100*.007)*ue/(1+.007*ue),tt=1/.0228*Math.log(1+.0228*Be),Pt=tt*Math.cos(Te),eA=tt*Math.sin(Te);return new tn(F,Ue,ue,me,Be,st,ft,Pt,eA)}static fromJch(A,s,R){return tn.fromJchInViewingConditions(A,s,R,yO.DEFAULT)}static fromJchInViewingConditions(A,s,R,n){const I=4/n.c*Math.sqrt(A/100)*(n.aw+4)*n.fLRoot,a=s*n.fLRoot,r=s/Math.sqrt(A/100),S=50*Math.sqrt(r*n.c/(n.aw+4)),o=R*Math.PI/180,l=(1+100*.007)*A/(1+.007*A),C=1/.0228*Math.log(1+.0228*a),M=C*Math.cos(o),u=C*Math.sin(o);return new tn(R,s,A,I,a,S,l,M,u)}static fromUcs(A,s,R){return tn.fromUcsInViewingConditions(A,s,R,yO.DEFAULT)}static fromUcsInViewingConditions(A,s,R,n){const I=s,a=R,r=Math.sqrt(I*I+a*a),o=(Math.exp(r*.0228)-1)/.0228/n.fLRoot;let l=Math.atan2(a,I)*(180/Math.PI);l<0&&(l+=360);const C=A/(1-(A-100)*.007);return tn.fromJchInViewingConditions(C,o,l,n)}toInt(){return this.viewed(yO.DEFAULT)}viewed(A){const s=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),R=Math.pow(s/Math.pow(1.64-Math.pow(.29,A.n),.73),1/.9),n=this.hue*Math.PI/180,I=.25*(Math.cos(n+2)+3.8),a=A.aw*Math.pow(this.j/100,1/A.c/A.z),r=I*(5e4/13)*A.nc*A.ncb,S=a/A.nbb,o=Math.sin(n),l=Math.cos(n),C=23*(S+.305)*R/(23*r+11*R*l+108*R*o),M=C*l,u=C*o,h=(460*S+451*M+288*u)/1403,P=(460*S-891*M-261*u)/1403,G=(460*S-220*M-6300*u)/1403,d=Math.max(0,27.13*Math.abs(h)/(400-Math.abs(h))),H=uR(h)*(100/A.fl)*Math.pow(d,1/.42),f=Math.max(0,27.13*Math.abs(P)/(400-Math.abs(P))),K=uR(P)*(100/A.fl)*Math.pow(f,1/.42),W=Math.max(0,27.13*Math.abs(G)/(400-Math.abs(G))),V=uR(G)*(100/A.fl)*Math.pow(W,1/.42),k=H/A.rgbD[0],Q=K/A.rgbD[1],j=V/A.rgbD[2],J=1.86206786*k-1.01125463*Q+.14918677*j,ne=.38752654*k+.62144744*Q-.00897398*j,x=-.0158415*k-.03412294*Q+1.04996444*j;return zb(J,ne,x)}static fromXyzInViewingConditions(A,s,R,n){const I=.401288*A+.650173*s-.051461*R,a=-.250268*A+1.204414*s+.045854*R,r=-.002079*A+.048952*s+.953127*R,S=n.rgbD[0]*I,o=n.rgbD[1]*a,l=n.rgbD[2]*r,C=Math.pow(n.fl*Math.abs(S)/100,.42),M=Math.pow(n.fl*Math.abs(o)/100,.42),u=Math.pow(n.fl*Math.abs(l)/100,.42),h=uR(S)*400*C/(C+27.13),P=uR(o)*400*M/(M+27.13),G=uR(l)*400*u/(u+27.13),d=(11*h+-12*P+G)/11,H=(h+P-2*G)/9,f=(20*h+20*P+21*G)/20,K=(40*h+20*P+G)/20,V=Math.atan2(H,d)*180/Math.PI,k=V<0?V+360:V>=360?V-360:V,Q=k*Math.PI/180,j=K*n.nbb,J=100*Math.pow(j/n.aw,n.c*n.z),ne=4/n.c*Math.sqrt(J/100)*(n.aw+4)*n.fLRoot,x=k<20.14?k+360:k,q=1/4*(Math.cos(x*Math.PI/180+2)+3.8),Te=5e4/13*q*n.nc*n.ncb*Math.sqrt(d*d+H*H)/(f+.305),He=Math.pow(Te,.9)*Math.pow(1.64-Math.pow(.29,n.n),.73),ue=He*Math.sqrt(J/100),me=ue*n.fLRoot,Me=50*Math.sqrt(He*n.c/(n.aw+4)),Ie=(1+100*.007)*J/(1+.007*J),z=Math.log(1+.0228*me)/.0228,te=z*Math.cos(Q),Le=z*Math.sin(Q);return new tn(k,ue,J,ne,me,Me,Ie,te,Le)}xyzInViewingConditions(A){const s=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),R=Math.pow(s/Math.pow(1.64-Math.pow(.29,A.n),.73),1/.9),n=this.hue*Math.PI/180,I=.25*(Math.cos(n+2)+3.8),a=A.aw*Math.pow(this.j/100,1/A.c/A.z),r=I*(5e4/13)*A.nc*A.ncb,S=a/A.nbb,o=Math.sin(n),l=Math.cos(n),C=23*(S+.305)*R/(23*r+11*R*l+108*R*o),M=C*l,u=C*o,h=(460*S+451*M+288*u)/1403,P=(460*S-891*M-261*u)/1403,G=(460*S-220*M-6300*u)/1403,d=Math.max(0,27.13*Math.abs(h)/(400-Math.abs(h))),H=uR(h)*(100/A.fl)*Math.pow(d,1/.42),f=Math.max(0,27.13*Math.abs(P)/(400-Math.abs(P))),K=uR(P)*(100/A.fl)*Math.pow(f,1/.42),W=Math.max(0,27.13*Math.abs(G)/(400-Math.abs(G))),V=uR(G)*(100/A.fl)*Math.pow(W,1/.42),k=H/A.rgbD[0],Q=K/A.rgbD[1],j=V/A.rgbD[2],J=1.86206786*k-1.01125463*Q+.14918677*j,ne=.38752654*k+.62144744*Q-.00897398*j,x=-.0158415*k-.03412294*Q+1.04996444*j;return[J,ne,x]}};L(tn,"Cam16");let UI=tn;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const qt=class qt{static sanitizeRadians(A){return(A+Math.PI*8)%(Math.PI*2)}static trueDelinearized(A){const s=A/100;let R=0;return s<=.0031308?R=s*12.92:R=1.055*Math.pow(s,1/2.4)-.055,R*255}static chromaticAdaptation(A){const s=Math.pow(Math.abs(A),.42);return uR(A)*400*s/(s+27.13)}static hueOf(A){const s=Jh(A,qt.SCALED_DISCOUNT_FROM_LINRGB),R=qt.chromaticAdaptation(s[0]),n=qt.chromaticAdaptation(s[1]),I=qt.chromaticAdaptation(s[2]),a=(11*R+-12*n+I)/11,r=(R+n-2*I)/9;return Math.atan2(r,a)}static areInCyclicOrder(A,s,R){const n=qt.sanitizeRadians(s-A),I=qt.sanitizeRadians(R-A);return n<I}static intercept(A,s,R){return(s-A)/(R-A)}static lerpPoint(A,s,R){return[A[0]+(R[0]-A[0])*s,A[1]+(R[1]-A[1])*s,A[2]+(R[2]-A[2])*s]}static setCoordinate(A,s,R,n){const I=qt.intercept(A[n],s,R[n]);return qt.lerpPoint(A,I,R)}static isBounded(A){return 0<=A&&A<=100}static nthVertex(A,s){const R=qt.Y_FROM_LINRGB[0],n=qt.Y_FROM_LINRGB[1],I=qt.Y_FROM_LINRGB[2],a=s%4<=1?0:100,r=s%2===0?0:100;if(s<4){const S=a,o=r,l=(A-S*n-o*I)/R;return qt.isBounded(l)?[l,S,o]:[-1,-1,-1]}else if(s<8){const S=a,o=r,l=(A-o*R-S*I)/n;return qt.isBounded(l)?[o,l,S]:[-1,-1,-1]}else{const S=a,o=r,l=(A-S*R-o*n)/I;return qt.isBounded(l)?[S,o,l]:[-1,-1,-1]}}static bisectToSegment(A,s){let R=[-1,-1,-1],n=R,I=0,a=0,r=!1,S=!0;for(let o=0;o<12;o++){const l=qt.nthVertex(A,o);if(l[0]<0)continue;const C=qt.hueOf(l);if(!r){R=l,n=l,I=C,a=C,r=!0;continue}(S||qt.areInCyclicOrder(I,C,a))&&(S=!1,qt.areInCyclicOrder(I,s,C)?(n=l,a=C):(R=l,I=C))}return[R,n]}static midpoint(A,s){return[(A[0]+s[0])/2,(A[1]+s[1])/2,(A[2]+s[2])/2]}static criticalPlaneBelow(A){return Math.floor(A-.5)}static criticalPlaneAbove(A){return Math.ceil(A-.5)}static bisectToLimit(A,s){const R=qt.bisectToSegment(A,s);let n=R[0],I=qt.hueOf(n),a=R[1];for(let r=0;r<3;r++)if(n[r]!==a[r]){let S=-1,o=255;n[r]<a[r]?(S=qt.criticalPlaneBelow(qt.trueDelinearized(n[r])),o=qt.criticalPlaneAbove(qt.trueDelinearized(a[r]))):(S=qt.criticalPlaneAbove(qt.trueDelinearized(n[r])),o=qt.criticalPlaneBelow(qt.trueDelinearized(a[r])));for(let l=0;l<8&&!(Math.abs(o-S)<=1);l++){const C=Math.floor((S+o)/2),M=qt.CRITICAL_PLANES[C],u=qt.setCoordinate(n,M,a,r),h=qt.hueOf(u);qt.areInCyclicOrder(I,s,h)?(a=u,o=C):(n=u,I=h,S=C)}}return qt.midpoint(n,a)}static inverseChromaticAdaptation(A){const s=Math.abs(A),R=Math.max(0,27.13*s/(400-s));return uR(A)*Math.pow(R,1/.42)}static findResultByJ(A,s,R){let n=Math.sqrt(R)*11;const I=yO.DEFAULT,a=1/Math.pow(1.64-Math.pow(.29,I.n),.73),S=.25*(Math.cos(A+2)+3.8)*(5e4/13)*I.nc*I.ncb,o=Math.sin(A),l=Math.cos(A);for(let C=0;C<5;C++){const M=n/100,u=s===0||n===0?0:s/Math.sqrt(M),h=Math.pow(u*a,1/.9),G=I.aw*Math.pow(M,1/I.c/I.z)/I.nbb,d=23*(G+.305)*h/(23*S+11*h*l+108*h*o),H=d*l,f=d*o,K=(460*G+451*H+288*f)/1403,W=(460*G-891*H-261*f)/1403,V=(460*G-220*H-6300*f)/1403,k=qt.inverseChromaticAdaptation(K),Q=qt.inverseChromaticAdaptation(W),j=qt.inverseChromaticAdaptation(V),J=Jh([k,Q,j],qt.LINRGB_FROM_SCALED_DISCOUNT);if(J[0]<0||J[1]<0||J[2]<0)return 0;const ne=qt.Y_FROM_LINRGB[0],x=qt.Y_FROM_LINRGB[1],q=qt.Y_FROM_LINRGB[2],F=ne*J[0]+x*J[1]+q*J[2];if(F<=0)return 0;if(C===4||Math.abs(F-R)<.002)return J[0]>100.01||J[1]>100.01||J[2]>100.01?0:FV(J);n=n-(F-R)*n/(2*F)}return 0}static solveToInt(A,s,R){if(s<1e-4||R<1e-4||R>99.9999)return a7(R);A=R7(A);const n=A/180*Math.PI,I=Gi(R),a=qt.findResultByJ(n,s,I);if(a!==0)return a;const r=qt.bisectToLimit(I,n);return FV(r)}static solveToCam(A,s,R){return UI.fromInt(qt.solveToInt(A,s,R))}};L(qt,"HctSolver");let Nn=qt;Nn.SCALED_DISCOUNT_FROM_LINRGB=[[.001200833568784504,.002389694492170889,.0002795742885861124],[.0005891086651375999,.0029785502573438758,.0003270666104008398],[.00010146692491640572,.0005364214359186694,.0032979401770712076]];Nn.LINRGB_FROM_SCALED_DISCOUNT=[[1373.2198709594231,-1100.4251190754821,-7.278681089101213],[-271.815969077903,559.6580465940733,-32.46047482791194],[1.9622899599665666,-57.173814538844006,308.7233197812385]];Nn.Y_FROM_LINRGB=[.2126,.7152,.0722];Nn.CRITICAL_PLANES=[.015176349177441876,.045529047532325624,.07588174588720938,.10623444424209313,.13658714259697685,.16693984095186062,.19729253930674434,.2276452376616281,.2579979360165119,.28835063437139563,.3188300904430532,.350925934958123,.3848314933096426,.42057480301049466,.458183274052838,.4976837250274023,.5391024159806381,.5824650784040898,.6277969426914107,.6751227633498623,.7244668422128921,.775853049866786,.829304845476233,.8848452951698498,.942497089126609,1.0022825574869039,1.0642236851973577,1.1283421258858297,1.1946592148522128,1.2631959812511864,1.3339731595349034,1.407011200216447,1.4823302800086415,1.5599503113873272,1.6398909516233677,1.7221716113234105,1.8068114625156377,1.8938294463134073,1.9832442801866852,2.075074464868551,2.1693382909216234,2.2660538449872063,2.36523901573795,2.4669114995532007,2.5710888059345764,2.6777882626779785,2.7870270208169257,2.898822059350997,3.0131901897720907,3.1301480604002863,3.2497121605402226,3.3718988244681087,3.4967242352587946,3.624204428461639,3.754355295633311,3.887192587735158,4.022731918402185,4.160988767090289,4.301978482107941,4.445716283538092,4.592217266055746,4.741496401646282,4.893568542229298,5.048448422192488,5.20615066083972,5.3666897647573375,5.5300801301023865,5.696336044816294,5.865471690767354,6.037501145825082,6.212438385869475,6.390297286737924,6.571091626112461,6.7548350853498045,6.941541251256611,7.131223617812143,7.323895587840543,7.5195704746346665,7.7182615035334345,7.919981813454504,8.124744458384042,8.332562408825165,8.543448553206703,8.757415699253682,8.974476575321063,9.194643831691977,9.417930041841839,9.644347703669503,9.873909240696694,10.106627003236781,10.342513269534024,10.58158024687427,10.8238400726681,11.069304815507364,11.317986476196008,11.569896988756009,11.825048221409341,12.083451977536606,12.345119996613247,12.610063955123938,12.878295467455942,13.149826086772048,13.42466730586372,13.702830557985108,13.984327217668513,14.269168601521828,14.55736596900856,14.848930523210871,15.143873411576273,15.44220572664832,15.743938506781891,16.04908273684337,16.35764934889634,16.66964922287304,16.985093187232053,17.30399201960269,17.62635644741625,17.95219714852476,18.281524751807332,18.614349837764564,18.95068293910138,19.290534541298456,19.633915083172692,19.98083495742689,20.331304511189067,20.685334046541502,21.042933821039977,21.404114048223256,21.76888489811322,22.137256497705877,22.50923893145328,22.884842241736916,23.264076429332462,23.6469514538663,24.033477234264016,24.42366364919083,24.817520537484558,25.21505769858089,25.61628489293138,26.021211842414342,26.429848230738664,26.842203703840827,27.258287870275353,27.678110301598522,28.10168053274597,28.529008062403893,28.96010235337422,29.39497283293396,29.83362889318845,30.276079891419332,30.722335150426627,31.172403958865512,31.62629557157785,32.08401920991837,32.54558406207592,33.010999283389665,33.4802739966603,33.953417292456834,34.430438229418264,34.911345834551085,35.39614910352207,35.88485700094671,36.37747846067349,36.87402238606382,37.37449765026789,37.87891309649659,38.38727753828926,38.89959975977785,39.41588851594697,39.93615253289054,40.460400508064545,40.98864111053629,41.520882981230194,42.05713473317016,42.597404951718396,43.141702194811224,43.6900349931913,44.24241185063697,44.798841244188324,45.35933162437017,45.92389141541209,46.49252901546552,47.065252796817916,47.64207110610409,48.22299226451468,48.808024568002054,49.3971762874833,49.9904556690408,50.587870934119984,51.189430279724725,51.79514187861014,52.40501387947288,53.0190544071392,53.637271562750364,54.259673423945976,54.88626804504493,55.517063457223934,56.15206766869424,56.79128866487574,57.43473440856916,58.08241284012621,58.734331877617365,59.39049941699807,60.05092333227251,60.715611475655585,61.38457167773311,62.057811747619894,62.7353394731159,63.417162620860914,64.10328893648692,64.79372614476921,65.48848194977529,66.18756403501224,66.89098006357258,67.59873767827808,68.31084450182222,69.02730813691093,69.74813616640164,70.47333615344107,71.20291564160104,71.93688215501312,72.67524319850172,73.41800625771542,74.16517879925733,74.9167682708136,75.67278210128072,76.43322770089146,77.1981124613393,77.96744375590167,78.74122893956174,79.51947534912904,80.30219030335869,81.08938110306934,81.88105503125999,82.67721935322541,83.4778813166706,84.28304815182372,85.09272707154808,85.90692527145302,86.72564993000343,87.54890820862819,88.3767072518277,89.2090541872801,90.04595612594655,90.88742016217518,91.73345337380438,92.58406282226491,93.43925555268066,94.29903859396902,95.16341895893969,96.03240364439274,96.9059996312159,97.78421388448044,98.6670533535366,99.55452497210776];/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const $a=class $a{static from(A,s,R){return new $a(Nn.solveToInt(A,s,R))}static fromInt(A){return new $a(A)}toInt(){return this.argb}get hue(){return this.internalHue}set hue(A){this.setInternalState(Nn.solveToInt(A,this.internalChroma,this.internalTone))}get chroma(){return this.internalChroma}set chroma(A){this.setInternalState(Nn.solveToInt(this.internalHue,A,this.internalTone))}get tone(){return this.internalTone}set tone(A){this.setInternalState(Nn.solveToInt(this.internalHue,this.internalChroma,A))}constructor(A){this.argb=A;const s=UI.fromInt(A);this.internalHue=s.hue,this.internalChroma=s.chroma,this.internalTone=pV(A),this.argb=A}setInternalState(A){const s=UI.fromInt(A);this.internalHue=s.hue,this.internalChroma=s.chroma,this.internalTone=pV(A),this.argb=A}inViewingConditions(A){const R=UI.fromInt(this.toInt()).xyzInViewingConditions(A),n=UI.fromXyzInViewingConditions(R[0],R[1],R[2],yO.make());return $a.from(n.hue,n.chroma,$h(R[1]))}};L($a,"Hct");let hT=$a;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ui=class Ui{static ratioOfTones(A,s){return A=Ml(0,100,A),s=Ml(0,100,s),Ui.ratioOfYs(Gi(A),Gi(s))}static ratioOfYs(A,s){const R=A>s?A:s,n=R===s?A:s;return(R+5)/(n+5)}static lighter(A,s){if(A<0||A>100)return-1;const R=Gi(A),n=s*(R+5)-5,I=Ui.ratioOfYs(n,R),a=Math.abs(I-s);if(I<s&&a>.04)return-1;const r=$h(n)+.4;return r<0||r>100?-1:r}static darker(A,s){if(A<0||A>100)return-1;const R=Gi(A),n=(R+5)/s-5,I=Ui.ratioOfYs(R,n),a=Math.abs(I-s);if(I<s&&a>.04)return-1;const r=$h(n)-.4;return r<0||r>100?-1:r}static lighterUnsafe(A,s){const R=Ui.lighter(A,s);return R<0?100:R}static darkerUnsafe(A,s){const R=Ui.darker(A,s);return R<0?0:R}};L(Ui,"Contrast");let DR=Ui;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const PD=class PD{static isDisliked(A){const s=Math.round(A.hue)>=90&&Math.round(A.hue)<=111,R=Math.round(A.chroma)>16,n=Math.round(A.tone)<65;return s&&R&&n}static fixIfDisliked(A){return PD.isDisliked(A)?hT.from(A.hue,A.chroma,70):A}};L(PD,"DislikeAnalyzer");let qh=PD;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ER=class ER{static fromPalette(A){return new ER(A.name??"",A.palette,A.tone,A.isBackground??!1,A.background,A.secondBackground,A.contrastCurve,A.toneDeltaPair)}constructor(A,s,R,n,I,a,r,S){if(this.name=A,this.palette=s,this.tone=R,this.isBackground=n,this.background=I,this.secondBackground=a,this.contrastCurve=r,this.toneDeltaPair=S,this.hctCache=new Map,!I&&a)throw new Error(`Color ${A} has secondBackgrounddefined, but background is not defined.`);if(!I&&r)throw new Error(`Color ${A} has contrastCurvedefined, but background is not defined.`);if(I&&!r)throw new Error(`Color ${A} has backgrounddefined, but contrastCurve is not defined.`)}getArgb(A){return this.getHct(A).toInt()}getHct(A){const s=this.hctCache.get(A);if(s!=null)return s;const R=this.getTone(A),n=this.palette(A).getHct(R);return this.hctCache.size>4&&this.hctCache.clear(),this.hctCache.set(A,n),n}getTone(A){const s=A.contrastLevel<0;if(this.toneDeltaPair){const R=this.toneDeltaPair(A),n=R.roleA,I=R.roleB,a=R.delta,r=R.polarity,S=R.stayTogether,l=this.background(A).getTone(A),C=r==="nearer"||r==="lighter"&&!A.isDark||r==="darker"&&A.isDark,M=C?n:I,u=C?I:n,h=this.name===M.name,P=A.isDark?1:-1,G=M.contrastCurve.getContrast(A.contrastLevel),d=u.contrastCurve.getContrast(A.contrastLevel),H=M.tone(A);let f=DR.ratioOfTones(l,H)>=G?H:ER.foregroundTone(l,G);const K=u.tone(A);let W=DR.ratioOfTones(l,K)>=d?K:ER.foregroundTone(l,d);return s&&(f=ER.foregroundTone(l,G),W=ER.foregroundTone(l,d)),(W-f)*P>=a||(W=Ml(0,100,f+a*P),(W-f)*P>=a||(f=Ml(0,100,W-a*P))),50<=f&&f<60?P>0?(f=60,W=Math.max(W,f+a*P)):(f=49,W=Math.min(W,f+a*P)):50<=W&&W<60&&(S?P>0?(f=60,W=Math.max(W,f+a*P)):(f=49,W=Math.min(W,f+a*P)):P>0?W=60:W=49),h?f:W}else{let R=this.tone(A);if(this.background==null)return R;const n=this.background(A).getTone(A),I=this.contrastCurve.getContrast(A.contrastLevel);if(DR.ratioOfTones(n,R)>=I||(R=ER.foregroundTone(n,I)),s&&(R=ER.foregroundTone(n,I)),this.isBackground&&50<=R&&R<60&&(DR.ratioOfTones(49,n)>=I?R=49:R=60),this.secondBackground){const[a,r]=[this.background,this.secondBackground],[S,o]=[a(A).getTone(A),r(A).getTone(A)],[l,C]=[Math.max(S,o),Math.min(S,o)];if(DR.ratioOfTones(l,R)>=I&&DR.ratioOfTones(C,R)>=I)return R;const M=DR.lighter(l,I),u=DR.darker(C,I),h=[];return M!==-1&&h.push(M),u!==-1&&h.push(u),ER.tonePrefersLightForeground(S)||ER.tonePrefersLightForeground(o)?M<0?100:M:h.length===1?h[0]:u<0?0:u}return R}}static foregroundTone(A,s){const R=DR.lighterUnsafe(A,s),n=DR.darkerUnsafe(A,s),I=DR.ratioOfTones(R,A),a=DR.ratioOfTones(n,A);if(ER.tonePrefersLightForeground(A)){const S=Math.abs(I-a)<.1&&I<s&&a<s;return I>=s||I>=a||S?R:n}else return a>=s||a>=I?n:R}static tonePrefersLightForeground(A){return Math.round(A)<60}static toneAllowsLightForeground(A){return Math.round(A)<=49}static enableLightForeground(A){return ER.tonePrefersLightForeground(A)&&!ER.toneAllowsLightForeground(A)?49:A}};L(ER,"DynamicColor");let Kt=ER;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cT;(function(E){E[E.MONOCHROME=0]="MONOCHROME",E[E.NEUTRAL=1]="NEUTRAL",E[E.TONAL_SPOT=2]="TONAL_SPOT",E[E.VIBRANT=3]="VIBRANT",E[E.EXPRESSIVE=4]="EXPRESSIVE",E[E.FIDELITY=5]="FIDELITY",E[E.CONTENT=6]="CONTENT",E[E.RAINBOW=7]="RAINBOW",E[E.FRUIT_SALAD=8]="FRUIT_SALAD"})(cT||(cT={}));/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const F1=class F1{constructor(A,s,R,n){this.low=A,this.normal=s,this.medium=R,this.high=n}getContrast(A){return A<=-1?this.low:A<0?_L(this.low,this.normal,(A- -1)/1):A<.5?_L(this.normal,this.medium,(A-0)/.5):A<1?_L(this.medium,this.high,(A-.5)/.5):this.high}};L(F1,"ContrastCurve");let lA=F1;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const p1=class p1{constructor(A,s,R,n,I){this.roleA=A,this.roleB=s,this.delta=R,this.polarity=n,this.stayTogether=I}};L(p1,"ToneDeltaPair");let zs=p1;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function nL(E){return E.variant===cT.FIDELITY||E.variant===cT.CONTENT}L(nL,"isFidelity");function xE(E){return E.variant===cT.MONOCHROME}L(xE,"isMonochrome");function L7(E,A,s,R){let n=s,I=hT.from(E,A,s);if(I.chroma<A){let a=I.chroma;for(;I.chroma<A;){n+=R?-1:1;const r=hT.from(E,A,n);if(a>r.chroma||Math.abs(r.chroma-A)<.4)break;const S=Math.abs(r.chroma-A),o=Math.abs(I.chroma-A);S<o&&(I=r),a=Math.max(a,r.chroma)}}return n}L(L7,"findDesiredChromaByTone");function N7(E){return yO.make(void 0,void 0,E.isDark?30:80,void 0,void 0)}L(N7,"viewingConditionsForAlbers");function t1(E,A){const s=E.inViewingConditions(N7(A));return Kt.tonePrefersLightForeground(E.tone)&&!Kt.toneAllowsLightForeground(s.tone)?Kt.enableLightForeground(E.tone):Kt.enableLightForeground(s.tone)}L(t1,"performAlbers");const iN=class iN{static highestSurface(A){return A.isDark?iN.surfaceBright:iN.surfaceDim}};L(iN,"MaterialDynamicColors");let ve=iN;ve.contentAccentToneDelta=15;ve.primaryPaletteKeyColor=Kt.fromPalette({name:"primary_palette_key_color",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>E.primaryPalette.keyColor.tone,"tone")});ve.secondaryPaletteKeyColor=Kt.fromPalette({name:"secondary_palette_key_color",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>E.secondaryPalette.keyColor.tone,"tone")});ve.tertiaryPaletteKeyColor=Kt.fromPalette({name:"tertiary_palette_key_color",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>E.tertiaryPalette.keyColor.tone,"tone")});ve.neutralPaletteKeyColor=Kt.fromPalette({name:"neutral_palette_key_color",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.neutralPalette.keyColor.tone,"tone")});ve.neutralVariantPaletteKeyColor=Kt.fromPalette({name:"neutral_variant_palette_key_color",palette:L(E=>E.neutralVariantPalette,"palette"),tone:L(E=>E.neutralVariantPalette.keyColor.tone,"tone")});ve.background=Kt.fromPalette({name:"background",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?6:98,"tone"),isBackground:!0});ve.onBackground=Kt.fromPalette({name:"on_background",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?90:10,"tone"),background:L(E=>ve.background,"background"),contrastCurve:new lA(3,3,4.5,7)});ve.surface=Kt.fromPalette({name:"surface",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?6:98,"tone"),isBackground:!0});ve.surfaceDim=Kt.fromPalette({name:"surface_dim",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?6:87,"tone"),isBackground:!0});ve.surfaceBright=Kt.fromPalette({name:"surface_bright",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?24:98,"tone"),isBackground:!0});ve.surfaceContainerLowest=Kt.fromPalette({name:"surface_container_lowest",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?4:100,"tone"),isBackground:!0});ve.surfaceContainerLow=Kt.fromPalette({name:"surface_container_low",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?10:96,"tone"),isBackground:!0});ve.surfaceContainer=Kt.fromPalette({name:"surface_container",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?12:94,"tone"),isBackground:!0});ve.surfaceContainerHigh=Kt.fromPalette({name:"surface_container_high",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?17:92,"tone"),isBackground:!0});ve.surfaceContainerHighest=Kt.fromPalette({name:"surface_container_highest",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?22:90,"tone"),isBackground:!0});ve.onSurface=Kt.fromPalette({name:"on_surface",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?90:10,"tone"),background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(4.5,7,11,21)});ve.surfaceVariant=Kt.fromPalette({name:"surface_variant",palette:L(E=>E.neutralVariantPalette,"palette"),tone:L(E=>E.isDark?30:90,"tone"),isBackground:!0});ve.onSurfaceVariant=Kt.fromPalette({name:"on_surface_variant",palette:L(E=>E.neutralVariantPalette,"palette"),tone:L(E=>E.isDark?80:30,"tone"),background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(3,4.5,7,11)});ve.inverseSurface=Kt.fromPalette({name:"inverse_surface",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?90:20,"tone")});ve.inverseOnSurface=Kt.fromPalette({name:"inverse_on_surface",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>E.isDark?20:95,"tone"),background:L(E=>ve.inverseSurface,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.outline=Kt.fromPalette({name:"outline",palette:L(E=>E.neutralVariantPalette,"palette"),tone:L(E=>E.isDark?60:50,"tone"),background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1.5,3,4.5,7)});ve.outlineVariant=Kt.fromPalette({name:"outline_variant",palette:L(E=>E.neutralVariantPalette,"palette"),tone:L(E=>E.isDark?30:80,"tone"),background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7)});ve.shadow=Kt.fromPalette({name:"shadow",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>0,"tone")});ve.scrim=Kt.fromPalette({name:"scrim",palette:L(E=>E.neutralPalette,"palette"),tone:L(E=>0,"tone")});ve.surfaceTint=Kt.fromPalette({name:"surface_tint",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>E.isDark?80:40,"tone"),isBackground:!0});ve.primary=Kt.fromPalette({name:"primary",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>xE(E)?E.isDark?100:0:E.isDark?80:40,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(3,4.5,7,11),toneDeltaPair:L(E=>new zs(ve.primaryContainer,ve.primary,15,"nearer",!1),"toneDeltaPair")});ve.onPrimary=Kt.fromPalette({name:"on_primary",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>xE(E)?E.isDark?10:90:E.isDark?20:100,"tone"),background:L(E=>ve.primary,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.primaryContainer=Kt.fromPalette({name:"primary_container",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>nL(E)?t1(E.sourceColorHct,E):xE(E)?E.isDark?85:25:E.isDark?30:90,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.primaryContainer,ve.primary,15,"nearer",!1),"toneDeltaPair")});ve.onPrimaryContainer=Kt.fromPalette({name:"on_primary_container",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>nL(E)?Kt.foregroundTone(ve.primaryContainer.tone(E),4.5):xE(E)?E.isDark?0:100:E.isDark?90:10,"tone"),background:L(E=>ve.primaryContainer,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.inversePrimary=Kt.fromPalette({name:"inverse_primary",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>E.isDark?40:80,"tone"),background:L(E=>ve.inverseSurface,"background"),contrastCurve:new lA(3,4.5,7,11)});ve.secondary=Kt.fromPalette({name:"secondary",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>E.isDark?80:40,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(3,4.5,7,11),toneDeltaPair:L(E=>new zs(ve.secondaryContainer,ve.secondary,15,"nearer",!1),"toneDeltaPair")});ve.onSecondary=Kt.fromPalette({name:"on_secondary",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>xE(E)?E.isDark?10:100:E.isDark?20:100,"tone"),background:L(E=>ve.secondary,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.secondaryContainer=Kt.fromPalette({name:"secondary_container",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>{const A=E.isDark?30:90;if(xE(E))return E.isDark?30:85;if(!nL(E))return A;let s=L7(E.secondaryPalette.hue,E.secondaryPalette.chroma,A,!E.isDark);return s=t1(E.secondaryPalette.getHct(s),E),s},"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.secondaryContainer,ve.secondary,15,"nearer",!1),"toneDeltaPair")});ve.onSecondaryContainer=Kt.fromPalette({name:"on_secondary_container",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>nL(E)?Kt.foregroundTone(ve.secondaryContainer.tone(E),4.5):E.isDark?90:10,"tone"),background:L(E=>ve.secondaryContainer,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.tertiary=Kt.fromPalette({name:"tertiary",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>xE(E)?E.isDark?90:25:E.isDark?80:40,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(3,4.5,7,11),toneDeltaPair:L(E=>new zs(ve.tertiaryContainer,ve.tertiary,15,"nearer",!1),"toneDeltaPair")});ve.onTertiary=Kt.fromPalette({name:"on_tertiary",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>xE(E)?E.isDark?10:90:E.isDark?20:100,"tone"),background:L(E=>ve.tertiary,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.tertiaryContainer=Kt.fromPalette({name:"tertiary_container",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>{if(xE(E))return E.isDark?60:49;if(!nL(E))return E.isDark?30:90;const A=t1(E.tertiaryPalette.getHct(E.sourceColorHct.tone),E),s=E.tertiaryPalette.getHct(A);return qh.fixIfDisliked(s).tone},"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.tertiaryContainer,ve.tertiary,15,"nearer",!1),"toneDeltaPair")});ve.onTertiaryContainer=Kt.fromPalette({name:"on_tertiary_container",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>xE(E)?E.isDark?0:100:nL(E)?Kt.foregroundTone(ve.tertiaryContainer.tone(E),4.5):E.isDark?90:10,"tone"),background:L(E=>ve.tertiaryContainer,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.error=Kt.fromPalette({name:"error",palette:L(E=>E.errorPalette,"palette"),tone:L(E=>E.isDark?80:40,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(3,4.5,7,11),toneDeltaPair:L(E=>new zs(ve.errorContainer,ve.error,15,"nearer",!1),"toneDeltaPair")});ve.onError=Kt.fromPalette({name:"on_error",palette:L(E=>E.errorPalette,"palette"),tone:L(E=>E.isDark?20:100,"tone"),background:L(E=>ve.error,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.errorContainer=Kt.fromPalette({name:"error_container",palette:L(E=>E.errorPalette,"palette"),tone:L(E=>E.isDark?30:90,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.errorContainer,ve.error,15,"nearer",!1),"toneDeltaPair")});ve.onErrorContainer=Kt.fromPalette({name:"on_error_container",palette:L(E=>E.errorPalette,"palette"),tone:L(E=>E.isDark?90:10,"tone"),background:L(E=>ve.errorContainer,"background"),contrastCurve:new lA(4.5,7,11,21)});ve.primaryFixed=Kt.fromPalette({name:"primary_fixed",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>xE(E)?40:90,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.primaryFixed,ve.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});ve.primaryFixedDim=Kt.fromPalette({name:"primary_fixed_dim",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>xE(E)?30:80,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.primaryFixed,ve.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});ve.onPrimaryFixed=Kt.fromPalette({name:"on_primary_fixed",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>xE(E)?100:10,"tone"),background:L(E=>ve.primaryFixedDim,"background"),secondBackground:L(E=>ve.primaryFixed,"secondBackground"),contrastCurve:new lA(4.5,7,11,21)});ve.onPrimaryFixedVariant=Kt.fromPalette({name:"on_primary_fixed_variant",palette:L(E=>E.primaryPalette,"palette"),tone:L(E=>xE(E)?90:30,"tone"),background:L(E=>ve.primaryFixedDim,"background"),secondBackground:L(E=>ve.primaryFixed,"secondBackground"),contrastCurve:new lA(3,4.5,7,11)});ve.secondaryFixed=Kt.fromPalette({name:"secondary_fixed",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>xE(E)?80:90,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.secondaryFixed,ve.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});ve.secondaryFixedDim=Kt.fromPalette({name:"secondary_fixed_dim",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>xE(E)?70:80,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.secondaryFixed,ve.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});ve.onSecondaryFixed=Kt.fromPalette({name:"on_secondary_fixed",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>10,"tone"),background:L(E=>ve.secondaryFixedDim,"background"),secondBackground:L(E=>ve.secondaryFixed,"secondBackground"),contrastCurve:new lA(4.5,7,11,21)});ve.onSecondaryFixedVariant=Kt.fromPalette({name:"on_secondary_fixed_variant",palette:L(E=>E.secondaryPalette,"palette"),tone:L(E=>xE(E)?25:30,"tone"),background:L(E=>ve.secondaryFixedDim,"background"),secondBackground:L(E=>ve.secondaryFixed,"secondBackground"),contrastCurve:new lA(3,4.5,7,11)});ve.tertiaryFixed=Kt.fromPalette({name:"tertiary_fixed",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>xE(E)?40:90,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.tertiaryFixed,ve.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});ve.tertiaryFixedDim=Kt.fromPalette({name:"tertiary_fixed_dim",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>xE(E)?30:80,"tone"),isBackground:!0,background:L(E=>ve.highestSurface(E),"background"),contrastCurve:new lA(1,1,3,7),toneDeltaPair:L(E=>new zs(ve.tertiaryFixed,ve.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});ve.onTertiaryFixed=Kt.fromPalette({name:"on_tertiary_fixed",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>xE(E)?100:10,"tone"),background:L(E=>ve.tertiaryFixedDim,"background"),secondBackground:L(E=>ve.tertiaryFixed,"secondBackground"),contrastCurve:new lA(4.5,7,11,21)});ve.onTertiaryFixedVariant=Kt.fromPalette({name:"on_tertiary_fixed_variant",palette:L(E=>E.tertiaryPalette,"palette"),tone:L(E=>xE(E)?90:30,"tone"),background:L(E=>ve.tertiaryFixedDim,"background"),secondBackground:L(E=>ve.tertiaryFixed,"secondBackground"),contrastCurve:new lA(3,4.5,7,11)});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const W1=class W1{fromInt(A){return I7(A)}toInt(A){return i7(A[0],A[1],A[2])}distance(A,s){const R=A[0]-s[0],n=A[1]-s[1],I=A[2]-s[2];return R*R+n*n+I*I}};L(W1,"LabPointProvider");let jh=W1;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const T7=10,S7=3,Y1=class Y1{static quantize(A,s,R){const n=new Map,I=new Array,a=new Array,r=new jh;let S=0;for(let H=0;H<A.length;H++){const f=A[H],K=n.get(f);K===void 0?(S++,I.push(r.fromInt(f)),a.push(f),n.set(f,1)):n.set(f,K+1)}const o=new Array;for(let H=0;H<S;H++){const f=a[H],K=n.get(f);K!==void 0&&(o[H]=K)}let l=Math.min(R,S);s.length>0&&(l=Math.min(l,s.length));const C=new Array;for(let H=0;H<s.length;H++)C.push(r.fromInt(s[H]));const M=l-C.length;if(s.length===0&&M>0)for(let H=0;H<M;H++){const f=Math.random()*100,K=Math.random()*201+-100,W=Math.random()*201+-100;C.push(new Array(f,K,W))}const u=new Array;for(let H=0;H<S;H++)u.push(Math.floor(Math.random()*l));const h=new Array;for(let H=0;H<l;H++){h.push(new Array);for(let f=0;f<l;f++)h[H].push(0)}const P=new Array;for(let H=0;H<l;H++){P.push(new Array);for(let f=0;f<l;f++)P[H].push(new tc)}const G=new Array;for(let H=0;H<l;H++)G.push(0);for(let H=0;H<T7;H++){for(let k=0;k<l;k++){for(let Q=k+1;Q<l;Q++){const j=r.distance(C[k],C[Q]);P[Q][k].distance=j,P[Q][k].index=k,P[k][Q].distance=j,P[k][Q].index=Q}P[k].sort();for(let Q=0;Q<l;Q++)h[k][Q]=P[k][Q].index}let f=0;for(let k=0;k<S;k++){const Q=I[k],j=u[k],J=C[j],ne=r.distance(Q,J);let x=ne,q=-1;for(let F=0;F<l;F++){if(P[j][F].distance>=4*ne)continue;const Te=r.distance(Q,C[F]);Te<x&&(x=Te,q=F)}q!==-1&&Math.abs(Math.sqrt(x)-Math.sqrt(ne))>S7&&(f++,u[k]=q)}if(f===0&&H!==0)break;const K=new Array(l).fill(0),W=new Array(l).fill(0),V=new Array(l).fill(0);for(let k=0;k<l;k++)G[k]=0;for(let k=0;k<S;k++){const Q=u[k],j=I[k],J=o[k];G[Q]+=J,K[Q]+=j[0]*J,W[Q]+=j[1]*J,V[Q]+=j[2]*J}for(let k=0;k<l;k++){const Q=G[k];if(Q===0){C[k]=[0,0,0];continue}const j=K[k]/Q,J=W[k]/Q,ne=V[k]/Q;C[k]=[j,J,ne]}}const d=new Map;for(let H=0;H<l;H++){const f=G[H];if(f===0)continue;const K=r.toInt(C[H]);d.has(K)||d.set(K,f)}return d}};L(Y1,"QuantizerWsmeans");let ec=Y1;const y1=class y1{constructor(){this.distance=-1,this.index=-1}};L(y1,"DistanceAndIndex");let tc=y1;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const w1=class w1{static quantize(A){const s=new Map;for(let R=0;R<A.length;R++){const n=A[R];$b(n)<255||s.set(n,(s.get(n)??0)+1)}return s}};L(w1,"QuantizerMap");let Ac=w1;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Vo=5,cO=33,aL=35937,qs={RED:"red",GREEN:"green",BLUE:"blue"},v1=class v1{constructor(A=[],s=[],R=[],n=[],I=[],a=[]){this.weights=A,this.momentsR=s,this.momentsG=R,this.momentsB=n,this.moments=I,this.cubes=a}quantize(A,s){this.constructHistogram(A),this.computeMoments();const R=this.createBoxes(s);return this.createResult(R.resultCount)}constructHistogram(A){this.weights=Array.from({length:aL}).fill(0),this.momentsR=Array.from({length:aL}).fill(0),this.momentsG=Array.from({length:aL}).fill(0),this.momentsB=Array.from({length:aL}).fill(0),this.moments=Array.from({length:aL}).fill(0);const s=Ac.quantize(A);for(const[R,n]of s.entries()){const I=AM(R),a=EM(R),r=sM(R),S=8-Vo,o=(I>>S)+1,l=(a>>S)+1,C=(r>>S)+1,M=this.getIndex(o,l,C);this.weights[M]=(this.weights[M]??0)+n,this.momentsR[M]+=n*I,this.momentsG[M]+=n*a,this.momentsB[M]+=n*r,this.moments[M]+=n*(I*I+a*a+r*r)}}computeMoments(){for(let A=1;A<cO;A++){const s=Array.from({length:cO}).fill(0),R=Array.from({length:cO}).fill(0),n=Array.from({length:cO}).fill(0),I=Array.from({length:cO}).fill(0),a=Array.from({length:cO}).fill(0);for(let r=1;r<cO;r++){let S=0,o=0,l=0,C=0,M=0;for(let u=1;u<cO;u++){const h=this.getIndex(A,r,u);S+=this.weights[h],o+=this.momentsR[h],l+=this.momentsG[h],C+=this.momentsB[h],M+=this.moments[h],s[u]+=S,R[u]+=o,n[u]+=l,I[u]+=C,a[u]+=M;const P=this.getIndex(A-1,r,u);this.weights[h]=this.weights[P]+s[u],this.momentsR[h]=this.momentsR[P]+R[u],this.momentsG[h]=this.momentsG[P]+n[u],this.momentsB[h]=this.momentsB[P]+I[u],this.moments[h]=this.moments[P]+a[u]}}}}createBoxes(A){this.cubes=Array.from({length:A}).fill(0).map(()=>new sc);const s=Array.from({length:A}).fill(0);this.cubes[0].r0=0,this.cubes[0].g0=0,this.cubes[0].b0=0,this.cubes[0].r1=cO-1,this.cubes[0].g1=cO-1,this.cubes[0].b1=cO-1;let R=A,n=0;for(let I=1;I<A;I++){this.cut(this.cubes[n],this.cubes[I])?(s[n]=this.cubes[n].vol>1?this.variance(this.cubes[n]):0,s[I]=this.cubes[I].vol>1?this.variance(this.cubes[I]):0):(s[n]=0,I--),n=0;let a=s[0];for(let r=1;r<=I;r++)s[r]>a&&(a=s[r],n=r);if(a<=0){R=I+1;break}}return new Rc(A,R)}createResult(A){const s=[];for(let R=0;R<A;++R){const n=this.cubes[R],I=this.volume(n,this.weights);if(I>0){const a=Math.round(this.volume(n,this.momentsR)/I),r=Math.round(this.volume(n,this.momentsG)/I),S=Math.round(this.volume(n,this.momentsB)/I),o=255<<24|(a&255)<<16|(r&255)<<8|S&255;s.push(o)}}return s}variance(A){const s=this.volume(A,this.momentsR),R=this.volume(A,this.momentsG),n=this.volume(A,this.momentsB),I=this.moments[this.getIndex(A.r1,A.g1,A.b1)]-this.moments[this.getIndex(A.r1,A.g1,A.b0)]-this.moments[this.getIndex(A.r1,A.g0,A.b1)]+this.moments[this.getIndex(A.r1,A.g0,A.b0)]-this.moments[this.getIndex(A.r0,A.g1,A.b1)]+this.moments[this.getIndex(A.r0,A.g1,A.b0)]+this.moments[this.getIndex(A.r0,A.g0,A.b1)]-this.moments[this.getIndex(A.r0,A.g0,A.b0)],a=s*s+R*R+n*n,r=this.volume(A,this.weights);return I-a/r}cut(A,s){const R=this.volume(A,this.momentsR),n=this.volume(A,this.momentsG),I=this.volume(A,this.momentsB),a=this.volume(A,this.weights),r=this.maximize(A,qs.RED,A.r0+1,A.r1,R,n,I,a),S=this.maximize(A,qs.GREEN,A.g0+1,A.g1,R,n,I,a),o=this.maximize(A,qs.BLUE,A.b0+1,A.b1,R,n,I,a);let l;const C=r.maximum,M=S.maximum,u=o.maximum;if(C>=M&&C>=u){if(r.cutLocation<0)return!1;l=qs.RED}else M>=C&&M>=u?l=qs.GREEN:l=qs.BLUE;switch(s.r1=A.r1,s.g1=A.g1,s.b1=A.b1,l){case qs.RED:A.r1=r.cutLocation,s.r0=A.r1,s.g0=A.g0,s.b0=A.b0;break;case qs.GREEN:A.g1=S.cutLocation,s.r0=A.r0,s.g0=A.g1,s.b0=A.b0;break;case qs.BLUE:A.b1=o.cutLocation,s.r0=A.r0,s.g0=A.g0,s.b0=A.b1;break;default:throw new Error("unexpected direction "+l)}return A.vol=(A.r1-A.r0)*(A.g1-A.g0)*(A.b1-A.b0),s.vol=(s.r1-s.r0)*(s.g1-s.g0)*(s.b1-s.b0),!0}maximize(A,s,R,n,I,a,r,S){const o=this.bottom(A,s,this.momentsR),l=this.bottom(A,s,this.momentsG),C=this.bottom(A,s,this.momentsB),M=this.bottom(A,s,this.weights);let u=0,h=-1,P=0,G=0,d=0,H=0;for(let f=R;f<n;f++){if(P=o+this.top(A,s,f,this.momentsR),G=l+this.top(A,s,f,this.momentsG),d=C+this.top(A,s,f,this.momentsB),H=M+this.top(A,s,f,this.weights),H===0)continue;let K=(P*P+G*G+d*d)*1,W=H*1,V=K/W;P=I-P,G=a-G,d=r-d,H=S-H,H!==0&&(K=(P*P+G*G+d*d)*1,W=H*1,V+=K/W,V>u&&(u=V,h=f))}return new Oc(h,u)}volume(A,s){return s[this.getIndex(A.r1,A.g1,A.b1)]-s[this.getIndex(A.r1,A.g1,A.b0)]-s[this.getIndex(A.r1,A.g0,A.b1)]+s[this.getIndex(A.r1,A.g0,A.b0)]-s[this.getIndex(A.r0,A.g1,A.b1)]+s[this.getIndex(A.r0,A.g1,A.b0)]+s[this.getIndex(A.r0,A.g0,A.b1)]-s[this.getIndex(A.r0,A.g0,A.b0)]}bottom(A,s,R){switch(s){case qs.RED:return-R[this.getIndex(A.r0,A.g1,A.b1)]+R[this.getIndex(A.r0,A.g1,A.b0)]+R[this.getIndex(A.r0,A.g0,A.b1)]-R[this.getIndex(A.r0,A.g0,A.b0)];case qs.GREEN:return-R[this.getIndex(A.r1,A.g0,A.b1)]+R[this.getIndex(A.r1,A.g0,A.b0)]+R[this.getIndex(A.r0,A.g0,A.b1)]-R[this.getIndex(A.r0,A.g0,A.b0)];case qs.BLUE:return-R[this.getIndex(A.r1,A.g1,A.b0)]+R[this.getIndex(A.r1,A.g0,A.b0)]+R[this.getIndex(A.r0,A.g1,A.b0)]-R[this.getIndex(A.r0,A.g0,A.b0)];default:throw new Error("unexpected direction $direction")}}top(A,s,R,n){switch(s){case qs.RED:return n[this.getIndex(R,A.g1,A.b1)]-n[this.getIndex(R,A.g1,A.b0)]-n[this.getIndex(R,A.g0,A.b1)]+n[this.getIndex(R,A.g0,A.b0)];case qs.GREEN:return n[this.getIndex(A.r1,R,A.b1)]-n[this.getIndex(A.r1,R,A.b0)]-n[this.getIndex(A.r0,R,A.b1)]+n[this.getIndex(A.r0,R,A.b0)];case qs.BLUE:return n[this.getIndex(A.r1,A.g1,R)]-n[this.getIndex(A.r1,A.g0,R)]-n[this.getIndex(A.r0,A.g1,R)]+n[this.getIndex(A.r0,A.g0,R)];default:throw new Error("unexpected direction $direction")}}getIndex(A,s,R){return(A<<Vo*2)+(A<<Vo+1)+A+(s<<Vo)+s+R}};L(v1,"QuantizerWu");let Ec=v1;const V1=class V1{constructor(A=0,s=0,R=0,n=0,I=0,a=0,r=0){this.r0=A,this.r1=s,this.g0=R,this.g1=n,this.b0=I,this.b1=a,this.vol=r}};L(V1,"Box");let sc=V1;const x1=class x1{constructor(A,s){this.requestedCount=A,this.resultCount=s}};L(x1,"CreateBoxesResult");let Rc=x1;const b1=class b1{constructor(A,s){this.cutLocation=A,this.maximum=s}};L(b1,"MaximizeResult");let Oc=b1;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const k1=class k1{static quantize(A,s){const n=new Ec().quantize(A,s);return ec.quantize(A,n,s)}};L(k1,"QuantizerCelebi");let _T=k1;const BE={[e.BULBASAUR]:[t.SAPPY_SEED,t.MALIGNANT_CHAIN,t.EARTH_POWER,t.MATCHA_GOTCHA],[e.CHARMANDER]:[t.DRAGON_DANCE,t.BITTER_BLADE,t.EARTH_POWER,t.OBLIVION_WING],[e.SQUIRTLE]:[t.FREEZE_DRY,t.ARMOR_CANNON,t.BOUNCY_BUBBLE,t.ORIGIN_PULSE],[e.CATERPIE]:[t.SANDSEAR_STORM,t.SILK_TRAP,t.TWIN_BEAM,t.BLEAKWIND_STORM],[e.WEEDLE]:[t.THOUSAND_ARROWS,t.NOXIOUS_TORQUE,t.ATTACK_ORDER,t.VICTORY_DANCE],[e.PIDGEY]:[t.WILDBOLT_STORM,t.SANDSEAR_STORM,t.NASTY_PLOT,t.BOOMBURST],[e.RATTATA]:[t.HYPER_FANG,t.PSYCHIC_FANGS,t.FIRE_FANG,t.EXTREME_SPEED],[e.SPEAROW]:[t.FLOATY_FALL,t.HYPER_DRILL,t.TIDY_UP,t.TRIPLE_ARROWS],[e.EKANS]:[t.NOXIOUS_TORQUE,t.DRAGON_DANCE,t.SLACK_OFF,t.SHED_TAIL],[e.SANDSHREW]:[t.HIGH_HORSEPOWER,t.DIRE_CLAW,t.SHORE_UP,t.MIGHTY_CLEAVE],[e.NIDORAN_F]:[t.CALM_MIND,t.MOONLIGHT,t.MALIGNANT_CHAIN,t.SANDSEAR_STORM],[e.NIDORAN_M]:[t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.NOXIOUS_TORQUE,t.PRECIPICE_BLADES],[e.VULPIX]:[t.MOONBLAST,t.INFERNAL_PARADE,t.MORNING_SUN,t.TAIL_GLOW],[e.ZUBAT]:[t.FLOATY_FALL,t.DIRE_CLAW,t.SWORDS_DANCE,t.COLLISION_COURSE],[e.ODDISH]:[t.SLUDGE_BOMB,t.FIERY_DANCE,t.STRENGTH_SAP,t.SPORE],[e.PARAS]:[t.LEECH_LIFE,t.HORN_LEECH,t.CRABHAMMER,t.SAPPY_SEED],[e.VENONAT]:[t.SLUDGE_BOMB,t.TOXIC_THREAD,t.EARTH_POWER,t.STORED_POWER],[e.DIGLETT]:[t.TRIPLE_DIVE,t.SWORDS_DANCE,t.TRIPLE_AXEL,t.HEADLONG_RUSH],[e.MEOWTH]:[t.HEART_STAMP,t.SWORDS_DANCE,t.SIZZLY_SLIDE,t.TAIL_SLAP],[e.PSYDUCK]:[t.FROST_BREATH,t.AQUA_STEP,t.MYSTICAL_POWER,t.BOUNCY_BUBBLE],[e.MANKEY]:[t.DRAIN_PUNCH,t.SLACK_OFF,t.METEOR_MASH,t.NO_RETREAT],[e.GROWLITHE]:[t.ZING_ZAP,t.PARTING_SHOT,t.MORNING_SUN,t.SACRED_FIRE],[e.POLIWAG]:[t.SLACK_OFF,t.WILDBOLT_STORM,t.DRAIN_PUNCH,t.SURGING_STRIKES],[e.ABRA]:[t.AURA_SPHERE,t.BADDY_BAD,t.ICE_BEAM,t.PSYSTRIKE],[e.MACHOP]:[t.COMBAT_TORQUE,t.METEOR_MASH,t.MOUNTAIN_GALE,t.FISSURE],[e.BELLSPROUT]:[t.SOLAR_BLADE,t.STRENGTH_SAP,t.FIRE_LASH,t.VICTORY_DANCE],[e.TENTACOOL]:[t.BANEFUL_BUNKER,t.MALIGNANT_CHAIN,t.BOUNCY_BUBBLE,t.STRENGTH_SAP],[e.GEODUDE]:[t.FLARE_BLITZ,t.HEAD_SMASH,t.SHORE_UP,t.SHELL_SMASH],[e.PONYTA]:[t.HEADLONG_RUSH,t.FIRE_LASH,t.SWORDS_DANCE,t.VOLT_TACKLE],[e.SLOWPOKE]:[t.BOUNCY_BUBBLE,t.FROST_BREATH,t.SHED_TAIL,t.MYSTICAL_POWER],[e.MAGNEMITE]:[t.PARABOLIC_CHARGE,t.FLAMETHROWER,t.ICE_BEAM,t.THUNDERCLAP],[e.FARFETCHD]:[t.IVY_CUDGEL,t.TRIPLE_ARROWS,t.DRILL_RUN,t.VICTORY_DANCE],[e.DODUO]:[t.TRIPLE_AXEL,t.HYPER_DRILL,t.FLOATY_FALL,t.TRIPLE_ARROWS],[e.SEEL]:[t.FREEZE_DRY,t.BOUNCY_BUBBLE,t.SLACK_OFF,t.STEAM_ERUPTION],[e.GRIMER]:[t.SUCKER_PUNCH,t.CURSE,t.NOXIOUS_TORQUE,t.STRENGTH_SAP],[e.SHELLDER]:[t.ROCK_BLAST,t.WATER_SHURIKEN,t.BANEFUL_BUNKER,t.BONE_RUSH],[e.GASTLY]:[t.MALIGNANT_CHAIN,t.AURA_SPHERE,t.PARTING_SHOT,t.DARK_VOID],[e.ONIX]:[t.SHORE_UP,t.THOUSAND_WAVES,t.COIL,t.DIAMOND_STORM],[e.DROWZEE]:[t.BADDY_BAD,t.STRENGTH_SAP,t.LUMINA_CRASH,t.DARK_VOID],[e.KRABBY]:[t.DIRE_CLAW,t.DRAGON_HAMMER,t.IVY_CUDGEL,t.JET_PUNCH],[e.VOLTORB]:[t.NASTY_PLOT,t.FUSION_FLARE,t.FROST_BREATH,t.ELECTRO_DRIFT],[e.EXEGGCUTE]:[t.FICKLE_BEAM,t.APPLE_ACID,t.TRICK_ROOM,t.LUMINA_CRASH],[e.CUBONE]:[t.HEAD_SMASH,t.WOOD_HAMMER,t.SHADOW_SNEAK,t.BITTER_BLADE],[e.LICKITUNG]:[t.CRUSH_GRIP,t.FIRE_LASH,t.SLACK_OFF,t.MAGICAL_TORQUE],[e.KOFFING]:[t.SCALD,t.RECOVER,t.BODY_PRESS,t.MALIGNANT_CHAIN],[e.RHYHORN]:[t.SHORE_UP,t.ICE_HAMMER,t.ACCELEROCK,t.HEAD_SMASH],[e.TANGELA]:[t.NATURES_MADNESS,t.SNAP_TRAP,t.PARTING_SHOT,t.SAPPY_SEED],[e.KANGASKHAN]:[t.POWER_UP_PUNCH,t.TRAILBLAZE,t.FACADE,t.SEISMIC_TOSS],[e.HORSEA]:[t.SNIPE_SHOT,t.FROST_BREATH,t.SLUDGE_BOMB,t.CLANGING_SCALES],[e.GOLDEEN]:[t.GLACIAL_LANCE,t.SUPERCELL_SLAM,t.DRAGON_DANCE,t.FISHIOUS_REND],[e.STARYU]:[t.CALM_MIND,t.BOUNCY_BUBBLE,t.MOONBLAST,t.MYSTICAL_POWER],[e.SCYTHER]:[t.MIGHTY_CLEAVE,t.GEAR_GRIND,t.STORM_THROW,t.BITTER_BLADE],[e.PINSIR]:[t.HEADLONG_RUSH,t.LEECH_LIFE,t.CRUSH_GRIP,t.EXTREME_SPEED],[e.TAUROS]:[t.SWORDS_DANCE,t.FIRE_LASH,t.WICKED_TORQUE,t.COLLISION_COURSE],[e.MAGIKARP]:[t.FLIP_TURN,t.ICE_SPINNER,t.DRAGON_ASCENT,t.SURGING_STRIKES],[e.LAPRAS]:[t.RECOVER,t.FREEZE_DRY,t.SCALD,t.SHELL_SMASH],[e.DITTO]:[t.MIMIC,t.SKETCH,t.METRONOME,t.IMPRISON],[e.EEVEE]:[t.WISH,t.NO_RETREAT,t.ZIPPY_ZAP,t.BOOMBURST],[e.PORYGON]:[t.THUNDERCLAP,t.AURA_SPHERE,t.FLAMETHROWER,t.TECHNO_BLAST],[e.OMANYTE]:[t.FREEZE_DRY,t.GIGA_DRAIN,t.POWER_GEM,t.STEAM_ERUPTION],[e.KABUTO]:[t.CEASELESS_EDGE,t.HIGH_HORSEPOWER,t.CRABHAMMER,t.MIGHTY_CLEAVE],[e.AERODACTYL]:[t.FLOATY_FALL,t.FLARE_BLITZ,t.SWORDS_DANCE,t.MIGHTY_CLEAVE],[e.ARTICUNO]:[t.EARTH_POWER,t.CALM_MIND,t.AURORA_VEIL,t.AEROBLAST],[e.ZAPDOS]:[t.BLEAKWIND_STORM,t.CALM_MIND,t.SANDSEAR_STORM,t.ELECTRO_SHOT],[e.MOLTRES]:[t.EARTH_POWER,t.CALM_MIND,t.AEROBLAST,t.TORCH_SONG],[e.DRATINI]:[t.DRAGON_HAMMER,t.CRUSH_GRIP,t.FIRE_LASH,t.GIGATON_HAMMER],[e.MEWTWO]:[t.METEOR_MASH,t.MOONBLAST,t.THUNDEROUS_KICK,t.PHOTON_GEYSER],[e.MEW]:[t.PHOTON_GEYSER,t.MOONBLAST,t.ASTRAL_BARRAGE,t.SHELL_SMASH],[e.CHIKORITA]:[t.SAPPY_SEED,t.STONE_AXE,t.DRAGON_DANCE,t.SPORE],[e.CYNDAQUIL]:[t.NASTY_PLOT,t.EARTH_POWER,t.FIERY_DANCE,t.ELECTRO_DRIFT],[e.TOTODILE]:[t.THUNDER_PUNCH,t.DRAGON_DANCE,t.TRIPLE_AXEL,t.SURGING_STRIKES],[e.SENTRET]:[t.TIDY_UP,t.FAKE_OUT,t.NUZZLE,t.EXTREME_SPEED],[e.HOOTHOOT]:[t.CALM_MIND,t.ESPER_WING,t.AEROBLAST,t.BOOMBURST],[e.LEDYBA]:[t.POLLEN_PUFF,t.MAT_BLOCK,t.PARTING_SHOT,t.SPORE],[e.SPINARAK]:[t.PARTING_SHOT,t.ATTACK_ORDER,t.GASTRO_ACID,t.STRENGTH_SAP],[e.CHINCHOU]:[t.THUNDERCLAP,t.BOUNCY_BUBBLE,t.THUNDER_CAGE,t.TAIL_GLOW],[e.PICHU]:[t.MOONBLAST,t.TRIPLE_AXEL,t.FIERY_DANCE,t.AURA_WHEEL],[e.CLEFFA]:[t.CALM_MIND,t.EARTH_POWER,t.WISH,t.LIGHT_OF_RUIN],[e.IGGLYBUFF]:[t.DRAIN_PUNCH,t.GRAV_APPLE,t.SOFT_BOILED,t.EXTREME_SPEED],[e.TOGEPI]:[t.SCORCHING_SANDS,t.SPLISHY_SPLASH,t.RELIC_SONG,t.FIERY_DANCE],[e.NATU]:[t.REVIVAL_BLESSING,t.NASTY_PLOT,t.MOONBLAST,t.OBLIVION_WING],[e.MAREEP]:[t.ICE_BEAM,t.PARABOLIC_CHARGE,t.CORE_ENFORCER,t.TAIL_GLOW],[e.HOPPIP]:[t.FLOATY_FALL,t.STRENGTH_SAP,t.SAPPY_SEED,t.SPORE],[e.AIPOM]:[t.ROCK_BLAST,t.STORM_THROW,t.FAKE_OUT,t.SWORDS_DANCE],[e.SUNKERN]:[t.SPORE,t.QUIVER_DANCE,t.FIERY_DANCE,t.HYDRO_STEAM],[e.YANMA]:[t.NASTY_PLOT,t.EARTH_POWER,t.HEAT_WAVE,t.BLEAKWIND_STORM],[e.WOOPER]:[t.SIZZLY_SLIDE,t.RECOVER,t.SHED_TAIL,t.SURGING_STRIKES],[e.MURKROW]:[t.TRIPLE_ARROWS,t.FLOATY_FALL,t.TIDY_UP,t.WICKED_BLOW],[e.MISDREAVUS]:[t.TAKE_HEART,t.MOONBLAST,t.AURA_SPHERE,t.MOONGEIST_BEAM],[e.UNOWN]:[t.NATURE_POWER,t.COSMIC_POWER,t.ANCIENT_POWER,t.MYSTICAL_POWER],[e.GIRAFARIG]:[t.MYSTICAL_POWER,t.NIGHT_DAZE,t.RECOVER,t.BOOMBURST],[e.PINECO]:[t.METAL_BURST,t.SHORE_UP,t.BODY_PRESS,t.DIAMOND_STORM],[e.DUNSPARCE]:[t.WICKED_TORQUE,t.MAGICAL_TORQUE,t.BLAZING_TORQUE,t.EXTREME_SPEED],[e.GLIGAR]:[t.FLOATY_FALL,t.THOUSAND_WAVES,t.SPIKY_SHIELD,t.MIGHTY_CLEAVE],[e.SNUBBULL]:[t.FACADE,t.HIGH_HORSEPOWER,t.SWORDS_DANCE,t.EXTREME_SPEED],[e.QWILFISH]:[t.BARB_BARRAGE,t.BANEFUL_BUNKER,t.RECOVER,t.FISHIOUS_REND],[e.SHUCKLE]:[t.STUFF_CHEEKS,t.HEAL_ORDER,t.BODY_PRESS,t.SALT_CURE],[e.HERACROSS]:[t.ROCK_BLAST,t.FIRST_IMPRESSION,t.ICICLE_SPEAR,t.TIDY_UP],[e.SNEASEL]:[t.DIRE_CLAW,t.DARKEST_LARIAT,t.TRIPLE_AXEL,t.CLOSE_COMBAT],[e.TEDDIURSA]:[t.MOUNTAIN_GALE,t.FAKE_OUT,t.SLACK_OFF,t.PRECIPICE_BLADES],[e.SLUGMA]:[t.BURNING_BULWARK,t.POWER_GEM,t.SOLAR_BEAM,t.MAGMA_STORM],[e.SWINUB]:[t.SLACK_OFF,t.MOUNTAIN_GALE,t.STONE_AXE,t.PRECIPICE_BLADES],[e.CORSOLA]:[t.SCALD,t.FREEZE_DRY,t.STRENGTH_SAP,t.SALT_CURE],[e.REMORAID]:[t.WATER_SHURIKEN,t.TAKE_HEART,t.SHELL_SIDE_ARM,t.BOUNCY_BUBBLE],[e.DELIBIRD]:[t.BONEMERANG,t.FLOATY_FALL,t.VICTORY_DANCE,t.GLACIAL_LANCE],[e.SKARMORY]:[t.ROOST,t.BODY_PRESS,t.SPIKY_SHIELD,t.BEAK_BLAST],[e.HOUNDOUR]:[t.EARTH_POWER,t.THUNDERBOLT,t.MOONBLAST,t.FIERY_WRATH],[e.PHANPY]:[t.SHORE_UP,t.SWORDS_DANCE,t.MOUNTAIN_GALE,t.COLLISION_COURSE],[e.STANTLER]:[t.THUNDEROUS_KICK,t.PHOTON_GEYSER,t.SWORDS_DANCE,t.BOOMBURST],[e.SMEARGLE]:[t.CONVERSION,t.BURNING_BULWARK,t.SALT_CURE,t.DARK_VOID],[e.TYROGUE]:[t.VICTORY_DANCE,t.THUNDEROUS_KICK,t.METEOR_MASH,t.WICKED_BLOW],[e.SMOOCHUM]:[t.LUSTER_PURGE,t.AURA_SPHERE,t.FREEZE_DRY,t.QUIVER_DANCE],[e.ELEKID]:[t.FIRE_LASH,t.ZING_ZAP,t.MOUNTAIN_GALE,t.SHIFT_GEAR],[e.MAGBY]:[t.THUNDERCLAP,t.EARTH_POWER,t.ENERGY_BALL,t.BLUE_FLARE],[e.MILTANK]:[t.BODY_PRESS,t.BULK_UP,t.KNOCK_OFF,t.SIZZLY_SLIDE],[e.RAIKOU]:[t.PARABOLIC_CHARGE,t.NASTY_PLOT,t.FROST_BREATH,t.ELECTRO_DRIFT],[e.ENTEI]:[t.BURNING_BULWARK,t.DRAGON_DANCE,t.EARTHQUAKE,t.PYRO_BALL],[e.SUICUNE]:[t.RECOVER,t.NASTY_PLOT,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.LARVITAR]:[t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.SHORE_UP,t.DIAMOND_STORM],[e.LUGIA]:[t.NASTY_PLOT,t.LUMINA_CRASH,t.AURA_SPHERE,t.OBLIVION_WING],[e.HO_OH]:[t.BRAVE_BIRD,t.DRAGON_DANCE,t.REVIVAL_BLESSING,t.BOLT_BEAK],[e.CELEBI]:[t.PHOTON_GEYSER,t.MATCHA_GOTCHA,t.REVIVAL_BLESSING,t.QUIVER_DANCE],[e.TREECKO]:[t.NASTY_PLOT,t.CORE_ENFORCER,t.FLAMETHROWER,t.SEED_FLARE],[e.TORCHIC]:[t.THUNDEROUS_KICK,t.ZING_ZAP,t.BURNING_BULWARK,t.PYRO_BALL],[e.MUDKIP]:[t.SHORE_UP,t.MOUNTAIN_GALE,t.AQUA_STEP,t.PRECIPICE_BLADES],[e.POOCHYENA]:[t.JAW_LOCK,t.CLOSE_COMBAT,t.DIRE_CLAW,t.NO_RETREAT],[e.ZIGZAGOON]:[t.EXTREME_SPEED,t.NUZZLE,t.HIGH_HORSEPOWER,t.TIDY_UP],[e.WURMPLE]:[t.BATON_PASS,t.BLEAKWIND_STORM,t.STORED_POWER,t.MALIGNANT_CHAIN],[e.LOTAD]:[t.REVELATION_DANCE,t.APPLE_ACID,t.ICE_BEAM,t.QUIVER_DANCE],[e.SEEDOT]:[t.SWORDS_DANCE,t.SACRED_SWORD,t.KOWTOW_CLEAVE,t.BITTER_BLADE],[e.TAILLOW]:[t.BOOMBURST,t.FACADE,t.HEADLONG_RUSH,t.NO_RETREAT],[e.WINGULL]:[t.THUNDER,t.FLIP_TURN,t.CALM_MIND,t.STEAM_ERUPTION],[e.RALTS]:[t.PSYBLADE,t.BITTER_BLADE,t.NO_RETREAT,t.BOOMBURST],[e.SURSKIT]:[t.POLLEN_PUFF,t.FIERY_DANCE,t.BOUNCY_BUBBLE,t.AEROBLAST],[e.SHROOMISH]:[t.ACCELEROCK,t.TRAILBLAZE,t.STORM_THROW,t.SAPPY_SEED],[e.SLAKOTH]:[t.FACADE,t.DRAIN_PUNCH,t.KNOCK_OFF,t.SKILL_SWAP],[e.NINCADA]:[t.ATTACK_ORDER,t.STICKY_WEB,t.SPIRIT_SHACKLE,t.SHELL_SMASH],[e.WHISMUR]:[t.ALLURING_VOICE,t.SHIFT_GEAR,t.SPARKLING_ARIA,t.TORCH_SONG],[e.MAKUHITA]:[t.COMBAT_TORQUE,t.SLACK_OFF,t.HEAT_CRASH,t.DOUBLE_IRON_BASH],[e.AZURILL]:[t.JET_PUNCH,t.MAGICAL_TORQUE,t.SWORDS_DANCE,t.SURGING_STRIKES],[e.NOSEPASS]:[t.SHORE_UP,t.BODY_PRESS,t.CALM_MIND,t.TACHYON_CUTTER],[e.SKITTY]:[t.THUNDEROUS_KICK,t.ENTRAINMENT,t.TIDY_UP,t.V_CREATE],[e.SABLEYE]:[t.RECOVER,t.TOPSY_TURVY,t.CURSE,t.SALT_CURE],[e.MAWILE]:[t.BULLET_PUNCH,t.MAGICAL_TORQUE,t.EARTHQUAKE,t.SHIFT_GEAR],[e.ARON]:[t.HEAD_SMASH,t.BODY_PRESS,t.SHORE_UP,t.SALT_CURE],[e.MEDITITE]:[t.THUNDEROUS_KICK,t.SUCKER_PUNCH,t.BULLET_PUNCH,t.PHOTON_GEYSER],[e.ELECTRIKE]:[t.FROST_BREATH,t.HEAT_WAVE,t.NASTY_PLOT,t.ELECTRO_DRIFT],[e.PLUSLE]:[t.FLAMETHROWER,t.GLITZY_GLOW,t.SPLISHY_SPLASH,t.TAIL_GLOW],[e.MINUN]:[t.ICE_BEAM,t.BADDY_BAD,t.SPARKLY_SWIRL,t.TAIL_GLOW],[e.VOLBEAT]:[t.BATON_PASS,t.STICKY_WEB,t.DECORATE,t.VICTORY_DANCE],[e.ILLUMISE]:[t.PARTING_SHOT,t.GLITZY_GLOW,t.POWDER,t.QUIVER_DANCE],[e.GULPIN]:[t.MALIGNANT_CHAIN,t.EARTH_POWER,t.CALM_MIND,t.STRENGTH_SAP],[e.CARVANHA]:[t.THUNDER_FANG,t.SWORDS_DANCE,t.OBSTRUCT,t.SURGING_STRIKES],[e.WAILMER]:[t.TAKE_HEART,t.COMEUPPANCE,t.SLACK_OFF,t.STEAM_ERUPTION],[e.NUMEL]:[t.TRICK_ROOM,t.ENERGY_BALL,t.SLACK_OFF,t.BLUE_FLARE],[e.TORKOAL]:[t.MORNING_SUN,t.BURNING_BULWARK,t.BODY_PRESS,t.HYDRO_STEAM],[e.SPOINK]:[t.AURA_SPHERE,t.MILK_DRINK,t.EXPANDING_FORCE,t.TAIL_GLOW],[e.SPINDA]:[t.SUPERPOWER,t.SLACK_OFF,t.FLEUR_CANNON,t.V_CREATE],[e.TRAPINCH]:[t.FIRE_LASH,t.DRAGON_DARTS,t.THOUSAND_ARROWS,t.DRAGON_ENERGY],[e.CACNEA]:[t.EARTH_POWER,t.CEASELESS_EDGE,t.NIGHT_DAZE,t.SAPPY_SEED],[e.SWABLU]:[t.ROOST,t.NASTY_PLOT,t.FLOATY_FALL,t.BOOMBURST],[e.ZANGOOSE]:[t.FACADE,t.HIGH_HORSEPOWER,t.EXTREME_SPEED,t.TIDY_UP],[e.SEVIPER]:[t.ICE_BEAM,t.BITTER_BLADE,t.SUCKER_PUNCH,t.NO_RETREAT],[e.LUNATONE]:[t.REVELATION_DANCE,t.MOONGEIST_BEAM,t.SHELL_SMASH,t.LUMINA_CRASH],[e.SOLROCK]:[t.MIGHTY_CLEAVE,t.PHOTON_GEYSER,t.SHELL_SMASH,t.SACRED_FIRE],[e.BARBOACH]:[t.DRAGON_DANCE,t.ZING_ZAP,t.ICE_SPINNER,t.SURGING_STRIKES],[e.CORPHISH]:[t.CEASELESS_EDGE,t.SHELL_SIDE_ARM,t.SUCKER_PUNCH,t.JET_PUNCH],[e.BALTOY]:[t.RECOVER,t.GLARE,t.RUINATION,t.MYSTICAL_POWER],[e.LILEEP]:[t.POWER_GEM,t.SCALD,t.STRENGTH_SAP,t.SAPPY_SEED],[e.ANORITH]:[t.FIRST_IMPRESSION,t.LEECH_LIFE,t.DRAGON_DANCE,t.MIGHTY_CLEAVE],[e.FEEBAS]:[t.CALM_MIND,t.FREEZE_DRY,t.MOONBLAST,t.STEAM_ERUPTION],[e.CASTFORM]:[t.BOOMBURST,t.HYDRO_STEAM,t.ERUPTION,t.QUIVER_DANCE],[e.KECLEON]:[t.ZIPPY_ZAP,t.COIL,t.EXTREME_SPEED,t.MULTI_ATTACK],[e.SHUPPET]:[t.STORM_THROW,t.TIDY_UP,t.PARTING_SHOT,t.SPECTRAL_THIEF],[e.DUSKULL]:[t.BULK_UP,t.DRAIN_PUNCH,t.RECOVER,t.RAGE_FIST],[e.TROPIUS]:[t.STUFF_CHEEKS,t.EARTH_POWER,t.APPLE_ACID,t.SAPPY_SEED],[e.ABSOL]:[t.KOWTOW_CLEAVE,t.SACRED_SWORD,t.PSYBLADE,t.BITTER_BLADE],[e.WYNAUT]:[t.RECOVER,t.SHED_TAIL,t.TAUNT,t.COMEUPPANCE],[e.SNORUNT]:[t.FREEZY_FROST,t.EXTREME_SPEED,t.EARTH_POWER,t.NO_RETREAT],[e.SPHEAL]:[t.FLIP_TURN,t.FREEZE_DRY,t.SLACK_OFF,t.STEAM_ERUPTION],[e.CLAMPERL]:[t.SHELL_SIDE_ARM,t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.RELICANTH]:[t.DRAGON_DANCE,t.SHORE_UP,t.WAVE_CRASH,t.DIAMOND_STORM],[e.LUVDISC]:[t.BATON_PASS,t.HEART_SWAP,t.GLITZY_GLOW,t.REVIVAL_BLESSING],[e.BAGON]:[t.FLOATY_FALL,t.FIRE_LASH,t.DRAGON_DANCE,t.DRAGON_DARTS],[e.BELDUM]:[t.HEADLONG_RUSH,t.DRAIN_PUNCH,t.TRIPLE_AXEL,t.SHIFT_GEAR],[e.REGIROCK]:[t.STONE_AXE,t.BODY_PRESS,t.SHORE_UP,t.SALT_CURE],[e.REGICE]:[t.EARTH_POWER,t.TAKE_HEART,t.RECOVER,t.FREEZE_DRY],[e.REGISTEEL]:[t.BODY_PRESS,t.SIZZLY_SLIDE,t.RECOVER,t.GIGATON_HAMMER],[e.LATIAS]:[t.CORE_ENFORCER,t.FUSION_FLARE,t.SPARKLY_SWIRL,t.MYSTICAL_POWER],[e.LATIOS]:[t.CORE_ENFORCER,t.BLUE_FLARE,t.NASTY_PLOT,t.TACHYON_CUTTER],[e.KYOGRE]:[t.WILDBOLT_STORM,t.HURRICANE,t.FREEZY_FROST,t.BOUNCY_BUBBLE],[e.GROUDON]:[t.STONE_AXE,t.SOLAR_BLADE,t.MORNING_SUN,t.SACRED_FIRE],[e.RAYQUAZA]:[t.V_CREATE,t.DRAGON_DARTS,t.CORE_ENFORCER,t.OBLIVION_WING],[e.JIRACHI]:[t.TACHYON_CUTTER,t.TRIPLE_ARROWS,t.ROCK_SLIDE,t.SHELL_SMASH],[e.DEOXYS]:[t.COLLISION_COURSE,t.FUSION_FLARE,t.PARTING_SHOT,t.LUMINA_CRASH],[e.TURTWIG]:[t.SHELL_SMASH,t.MIGHTY_CLEAVE,t.ICE_SPINNER,t.SAPPY_SEED],[e.CHIMCHAR]:[t.FIERY_DANCE,t.SECRET_SWORD,t.TRIPLE_AXEL,t.SACRED_FIRE],[e.PIPLUP]:[t.KINGS_SHIELD,t.TACHYON_CUTTER,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.STARLY]:[t.SWORDS_DANCE,t.HEAD_CHARGE,t.FLARE_BLITZ,t.EXTREME_SPEED],[e.BIDOOF]:[t.EXTREME_SPEED,t.COSMIC_POWER,t.POWER_TRIP,t.AQUA_STEP],[e.KRICKETOT]:[t.BONEMERANG,t.VICTORY_DANCE,t.STONE_AXE,t.POPULATION_BOMB],[e.SHINX]:[t.FIRE_LASH,t.TRIPLE_AXEL,t.ZIPPY_ZAP,t.BOLT_STRIKE],[e.BUDEW]:[t.FIERY_DANCE,t.ACID_SPRAY,t.BOUNCY_BUBBLE,t.QUIVER_DANCE],[e.CRANIDOS]:[t.VOLT_TACKLE,t.ACCELEROCK,t.FLARE_BLITZ,t.SHIFT_GEAR],[e.SHIELDON]:[t.SHORE_UP,t.BODY_PRESS,t.KINGS_SHIELD,t.DIAMOND_STORM],[e.BURMY]:[t.FIERY_DANCE,t.DEFEND_ORDER,t.HEAL_ORDER,t.SAPPY_SEED],[e.COMBEE]:[t.SPORE,t.FLOATY_FALL,t.KINGS_SHIELD,t.VICTORY_DANCE],[e.PACHIRISU]:[t.FREEZY_FROST,t.SIZZLY_SLIDE,t.SLACK_OFF,t.ZIPPY_ZAP],[e.BUIZEL]:[t.JET_PUNCH,t.TRIPLE_AXEL,t.SUPERCELL_SLAM,t.SURGING_STRIKES],[e.CHERUBI]:[t.SLEEP_POWDER,t.STRENGTH_SAP,t.FIRE_LASH,t.FLOWER_TRICK],[e.SHELLOS]:[t.BOUNCY_BUBBLE,t.SCORCHING_SANDS,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.DRIFLOON]:[t.WILL_O_WISP,t.MIND_BLOWN,t.CALM_MIND,t.OBLIVION_WING],[e.BUNEARY]:[t.TRIPLE_AXEL,t.SWORDS_DANCE,t.THUNDEROUS_KICK,t.MULTI_ATTACK],[e.GLAMEOW]:[t.PARTING_SHOT,t.HIGH_HORSEPOWER,t.SWORDS_DANCE,t.EXTREME_SPEED],[e.CHINGLING]:[t.BUZZY_BUZZ,t.EERIE_SPELL,t.TORCH_SONG,t.BOOMBURST],[e.STUNKY]:[t.CEASELESS_EDGE,t.KNOCK_OFF,t.RECOVER,t.DIRE_CLAW],[e.BRONZOR]:[t.RECOVER,t.TACHYON_CUTTER,t.GLARE,t.LUMINA_CRASH],[e.BONSLY]:[t.ACCELEROCK,t.SWORDS_DANCE,t.STRENGTH_SAP,t.SAPPY_SEED],[e.MIME_JR]:[t.CHILLY_RECEPTION,t.MOONBLAST,t.FROST_BREATH,t.LUMINA_CRASH],[e.HAPPINY]:[t.COTTON_GUARD,t.SEISMIC_TOSS,t.SIZZLY_SLIDE,t.REVIVAL_BLESSING],[e.CHATOT]:[t.SPARKLING_ARIA,t.BOOMBURST,t.BATON_PASS,t.TORCH_SONG],[e.SPIRITOMB]:[t.PARTING_SHOT,t.BADDY_BAD,t.STRENGTH_SAP,t.SPECTRAL_THIEF],[e.GIBLE]:[t.DRAGON_DANCE,t.BITTER_BLADE,t.DRAGON_HAMMER,t.PRECIPICE_BLADES],[e.MUNCHLAX]:[t.STUFF_CHEEKS,t.GRAV_APPLE,t.SLACK_OFF,t.EXTREME_SPEED],[e.RIOLU]:[t.THUNDEROUS_KICK,t.TACHYON_CUTTER,t.TRIPLE_AXEL,t.SUNSTEEL_STRIKE],[e.HIPPOPOTAS]:[t.SHORE_UP,t.STONE_AXE,t.BULK_UP,t.SALT_CURE],[e.SKORUPI]:[t.COIL,t.DIRE_CLAW,t.CRABHAMMER,t.WICKED_BLOW],[e.CROAGUNK]:[t.DIRE_CLAW,t.ICE_SPINNER,t.THUNDEROUS_KICK,t.VICTORY_DANCE],[e.CARNIVINE]:[t.STRENGTH_SAP,t.FIRE_LASH,t.COIL,t.SAPPY_SEED],[e.FINNEON]:[t.QUIVER_DANCE,t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.ORIGIN_PULSE],[e.MANTYKE]:[t.SPLISHY_SPLASH,t.FREEZY_FROST,t.NASTY_PLOT,t.OBLIVION_WING],[e.SNOVER]:[t.LANDS_WRATH,t.POWDER,t.CALM_MIND,t.MATCHA_GOTCHA],[e.ROTOM]:[t.STRENGTH_SAP,t.FIERY_DANCE,t.SPLISHY_SPLASH,t.ELECTRO_DRIFT],[e.UXIE]:[t.COSMIC_POWER,t.SECRET_SWORD,t.RECOVER,t.SPARKLY_SWIRL],[e.MESPRIT]:[t.TAIL_GLOW,t.AURA_SPHERE,t.RECOVER,t.LUMINA_CRASH],[e.AZELF]:[t.PSYSTRIKE,t.ICE_BEAM,t.MOONBLAST,t.TAIL_GLOW],[e.DIALGA]:[t.CORE_ENFORCER,t.TAKE_HEART,t.RECOVER,t.MAKE_IT_RAIN],[e.PALKIA]:[t.MALIGNANT_CHAIN,t.TAKE_HEART,t.RECOVER,t.ORIGIN_PULSE],[e.HEATRAN]:[t.MATCHA_GOTCHA,t.RECOVER,t.ERUPTION,t.TACHYON_CUTTER],[e.REGIGIGAS]:[t.SKILL_SWAP,t.RECOVER,t.EXTREME_SPEED,t.GIGATON_HAMMER],[e.GIRATINA]:[t.DRAGON_DANCE,t.GLAIVE_RUSH,t.RECOVER,t.SPECTRAL_THIEF],[e.CRESSELIA]:[t.COSMIC_POWER,t.BODY_PRESS,t.SIZZLY_SLIDE,t.LUMINA_CRASH],[e.PHIONE]:[t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.STORED_POWER,t.ORIGIN_PULSE],[e.MANAPHY]:[t.BOUNCY_BUBBLE,t.FROST_BREATH,t.WILDBOLT_STORM,t.ORIGIN_PULSE],[e.DARKRAI]:[t.FIERY_WRATH,t.MOONBLAST,t.FIERY_DANCE,t.MAKE_IT_RAIN],[e.SHAYMIN]:[t.MATCHA_GOTCHA,t.FIERY_DANCE,t.AEROBLAST,t.QUIVER_DANCE],[e.ARCEUS]:[t.NO_RETREAT,t.COLLISION_COURSE,t.ASTRAL_BARRAGE,t.MULTI_ATTACK],[e.VICTINI]:[t.BLUE_FLARE,t.BOLT_STRIKE,t.LUSTER_PURGE,t.VICTORY_DANCE],[e.SNIVY]:[t.FLAMETHROWER,t.CLANGING_SCALES,t.MAKE_IT_RAIN,t.FLEUR_CANNON],[e.TEPIG]:[t.WAVE_CRASH,t.VOLT_TACKLE,t.AXE_KICK,t.VICTORY_DANCE],[e.OSHAWOTT]:[t.TRIPLE_AXEL,t.SHELL_SIDE_ARM,t.SACRED_SWORD,t.SHELL_SMASH],[e.PATRAT]:[t.FAKE_OUT,t.SWORDS_DANCE,t.DYNAMIC_PUNCH,t.EXTREME_SPEED],[e.LILLIPUP]:[t.CLOSE_COMBAT,t.BODY_SLAM,t.HIGH_HORSEPOWER,t.LAST_RESPECTS],[e.PURRLOIN]:[t.ENCORE,t.OBSTRUCT,t.PARTING_SHOT,t.WICKED_BLOW],[e.PANSAGE]:[t.SWORDS_DANCE,t.FIRE_LASH,t.EARTHQUAKE,t.IVY_CUDGEL],[e.PANSEAR]:[t.NASTY_PLOT,t.HYDRO_STEAM,t.SCORCHING_SANDS,t.TORCH_SONG],[e.PANPOUR]:[t.NASTY_PLOT,t.ENERGY_BALL,t.EARTH_POWER,t.STEAM_ERUPTION],[e.MUNNA]:[t.COSMIC_POWER,t.AURA_SPHERE,t.LUNAR_BLESSING,t.MYSTICAL_POWER],[e.PIDOVE]:[t.GUNK_SHOT,t.TIDY_UP,t.FLOATY_FALL,t.TRIPLE_ARROWS],[e.BLITZLE]:[t.HORN_LEECH,t.SWORDS_DANCE,t.FLARE_BLITZ,t.BOLT_STRIKE],[e.ROGGENROLA]:[t.BODY_PRESS,t.CURSE,t.SHORE_UP,t.DIAMOND_STORM],[e.WOOBAT]:[t.ESPER_WING,t.STORED_POWER,t.MYSTICAL_FIRE,t.OBLIVION_WING],[e.DRILBUR]:[t.METEOR_MASH,t.MOUNTAIN_GALE,t.SHIFT_GEAR,t.PRECIPICE_BLADES],[e.AUDINO]:[t.TAKE_HEART,t.MOONBLAST,t.WISH,t.MATCHA_GOTCHA],[e.TIMBURR]:[t.MACH_PUNCH,t.DRAIN_PUNCH,t.ICE_HAMMER,t.DOUBLE_IRON_BASH],[e.TYMPOLE]:[t.JET_PUNCH,t.HIGH_HORSEPOWER,t.BULK_UP,t.SURGING_STRIKES],[e.THROH]:[t.MACH_PUNCH,t.SLACK_OFF,t.METEOR_MASH,t.RAGE_FIST],[e.SAWK]:[t.DRAIN_PUNCH,t.SUCKER_PUNCH,t.METEOR_MASH,t.VICTORY_DANCE],[e.SEWADDLE]:[t.STONE_AXE,t.PSYCHO_CUT,t.BITTER_BLADE,t.VICTORY_DANCE],[e.VENIPEDE]:[t.BANEFUL_BUNKER,t.LEECH_LIFE,t.NOXIOUS_TORQUE,t.POWER_TRIP],[e.COTTONEE]:[t.POLLEN_PUFF,t.PARTING_SHOT,t.SLEEP_POWDER,t.SEED_FLARE],[e.PETILIL]:[t.THUNDEROUS_KICK,t.SPARKLING_ARIA,t.FIERY_DANCE,t.FLOWER_TRICK],[e.BASCULIN]:[t.LAST_RESPECTS,t.CLOSE_COMBAT,t.SPLISHY_SPLASH,t.NO_RETREAT],[e.SANDILE]:[t.DIRE_CLAW,t.HEADLONG_RUSH,t.FIRE_LASH,t.WICKED_BLOW],[e.DARUMAKA]:[t.DRAIN_PUNCH,t.ZIPPY_ZAP,t.HEADLONG_RUSH,t.PYRO_BALL],[e.MARACTUS]:[t.EARTH_POWER,t.QUIVER_DANCE,t.FIERY_DANCE,t.SEED_FLARE],[e.DWEBBLE]:[t.CRABHAMMER,t.STONE_AXE,t.LEECH_LIFE,t.MIGHTY_CLEAVE],[e.SCRAGGY]:[t.SUCKER_PUNCH,t.BULLET_PUNCH,t.NOXIOUS_TORQUE,t.VICTORY_DANCE],[e.SIGILYPH]:[t.MOONBLAST,t.CALM_MIND,t.ESPER_WING,t.OBLIVION_WING],[e.YAMASK]:[t.STRENGTH_SAP,t.GLARE,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.TIRTOUGA]:[t.ICE_SPINNER,t.AQUA_STEP,t.SHORE_UP,t.MIGHTY_CLEAVE],[e.ARCHEN]:[t.ROOST,t.EARTHQUAKE,t.FLOATY_FALL,t.MIGHTY_CLEAVE],[e.TRUBBISH]:[t.COIL,t.RECOVER,t.DIRE_CLAW,t.GIGATON_HAMMER],[e.ZORUA]:[t.MALIGNANT_CHAIN,t.MOONBLAST,t.SECRET_SWORD,t.FIERY_WRATH],[e.MINCCINO]:[t.ICICLE_SPEAR,t.TIDY_UP,t.KNOCK_OFF,t.POPULATION_BOMB],[e.GOTHITA]:[t.RECOVER,t.MOONBLAST,t.AURA_SPHERE,t.LUMINA_CRASH],[e.SOLOSIS]:[t.MIST_BALL,t.SPEED_SWAP,t.FLAMETHROWER,t.LIGHT_OF_RUIN],[e.DUCKLETT]:[t.SPLISHY_SPLASH,t.SANDSEAR_STORM,t.WILDBOLT_STORM,t.QUIVER_DANCE],[e.VANILLITE]:[t.EARTH_POWER,t.AURORA_VEIL,t.CALM_MIND,t.SPARKLY_SWIRL],[e.DEERLING]:[t.TIDY_UP,t.FLOWER_TRICK,t.BODY_SLAM,t.COMBAT_TORQUE],[e.EMOLGA]:[t.ICICLE_CRASH,t.ZING_ZAP,t.FLOATY_FALL,t.ELECTRIFY],[e.KARRABLAST]:[t.LEECH_LIFE,t.BITTER_BLADE,t.OBSTRUCT,t.DOUBLE_IRON_BASH],[e.FOONGUS]:[t.POLLEN_PUFF,t.PARTING_SHOT,t.FOUL_PLAY,t.SAPPY_SEED],[e.FRILLISH]:[t.CALM_MIND,t.BUZZY_BUZZ,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.ALOMOMOLA]:[t.FLIP_TURN,t.HEART_SWAP,t.GLITZY_GLOW,t.REVIVAL_BLESSING],[e.JOLTIK]:[t.WILDBOLT_STORM,t.PARABOLIC_CHARGE,t.EARTH_POWER,t.QUIVER_DANCE],[e.FERROSEED]:[t.SYNTHESIS,t.COMBAT_TORQUE,t.SPIKY_SHIELD,t.SAPPY_SEED],[e.KLINK]:[t.TRIPLE_AXEL,t.HIGH_HORSEPOWER,t.RECOVER,t.AURA_WHEEL],[e.TYNAMO]:[t.SCALD,t.STRENGTH_SAP,t.FIRE_LASH,t.AURA_WHEEL],[e.ELGYEM]:[t.THUNDERCLAP,t.BADDY_BAD,t.AURA_SPHERE,t.PHOTON_GEYSER],[e.LITWICK]:[t.PARTING_SHOT,t.EARTH_POWER,t.MOONBLAST,t.TORCH_SONG],[e.AXEW]:[t.STONE_AXE,t.DIRE_CLAW,t.BITTER_BLADE,t.GLAIVE_RUSH],[e.CUBCHOO]:[t.MOUNTAIN_GALE,t.AQUA_STEP,t.ICE_SHARD,t.COLLISION_COURSE],[e.CRYOGONAL]:[t.FREEZING_GLARE,t.AURORA_VEIL,t.NASTY_PLOT,t.ORIGIN_PULSE],[e.SHELMET]:[t.POWER_GEM,t.NASTY_PLOT,t.EARTH_POWER,t.STEAM_ERUPTION],[e.STUNFISK]:[t.THUNDERCLAP,t.SANDSEAR_STORM,t.STRENGTH_SAP,t.THUNDER_CAGE],[e.MIENFOO]:[t.GUNK_SHOT,t.SUPERCELL_SLAM,t.MOUNTAIN_GALE,t.WICKED_BLOW],[e.DRUDDIGON]:[t.FIRE_LASH,t.MORNING_SUN,t.DRAGON_DARTS,t.CLANGOROUS_SOUL],[e.GOLETT]:[t.SHIFT_GEAR,t.DRAIN_PUNCH,t.HEADLONG_RUSH,t.RAGE_FIST],[e.PAWNIARD]:[t.SUCKER_PUNCH,t.CEASELESS_EDGE,t.BITTER_BLADE,t.LAST_RESPECTS],[e.BOUFFALANT]:[t.SLACK_OFF,t.HIGH_JUMP_KICK,t.HEAD_SMASH,t.FLARE_BLITZ],[e.RUFFLET]:[t.FLOATY_FALL,t.AURA_SPHERE,t.NO_RETREAT,t.BOLT_BEAK],[e.VULLABY]:[t.FOUL_PLAY,t.BODY_PRESS,t.ROOST,t.RUINATION],[e.HEATMOR]:[t.EARTH_POWER,t.OVERHEAT,t.THUNDERBOLT,t.V_CREATE],[e.DURANT]:[t.HIGH_HORSEPOWER,t.FIRST_IMPRESSION,t.SWORDS_DANCE,t.BEHEMOTH_BASH],[e.DEINO]:[t.FIERY_WRATH,t.ESPER_WING,t.SLUDGE_BOMB,t.FICKLE_BEAM],[e.LARVESTA]:[t.THUNDERBOLT,t.MAGMA_STORM,t.EARTH_POWER,t.MATCHA_GOTCHA],[e.COBALION]:[t.BEHEMOTH_BLADE,t.MIGHTY_CLEAVE,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.TERRAKION]:[t.MIGHTY_CLEAVE,t.HEADLONG_RUSH,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.VIRIZION]:[t.PSYBLADE,t.SAPPY_SEED,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.TORNADUS]:[t.SANDSEAR_STORM,t.PARTING_SHOT,t.SPLISHY_SPLASH,t.OBLIVION_WING],[e.THUNDURUS]:[t.SANDSEAR_STORM,t.HURRICANE,t.FROST_BREATH,t.ELECTRO_SHOT],[e.RESHIRAM]:[t.ENERGY_BALL,t.TAKE_HEART,t.FICKLE_BEAM,t.ERUPTION],[e.ZEKROM]:[t.TRIPLE_AXEL,t.THUNDEROUS_KICK,t.DRAGON_HAMMER,t.BOLT_BEAK],[e.LANDORUS]:[t.STONE_AXE,t.FLOATY_FALL,t.ROOST,t.BLEAKWIND_STORM],[e.KYUREM]:[t.DRAGON_DARTS,t.GLACIAL_LANCE,t.NO_RETREAT,t.DRAGON_ENERGY],[e.KELDEO]:[t.BOUNCY_BUBBLE,t.THUNDERBOLT,t.ICE_BEAM,t.STEAM_ERUPTION],[e.MELOETTA]:[t.BODY_SLAM,t.TORCH_SONG,t.TRIPLE_ARROWS,t.BOOMBURST],[e.GENESECT]:[t.EXTREME_SPEED,t.SHIFT_GEAR,t.BEHEMOTH_BASH,t.TACHYON_CUTTER],[e.CHESPIN]:[t.COMBAT_TORQUE,t.SYNTHESIS,t.CEASELESS_EDGE,t.SAPPY_SEED],[e.FENNEKIN]:[t.TWIN_BEAM,t.FIERY_DANCE,t.THUNDERBOLT,t.SPARKLY_SWIRL],[e.FROAKIE]:[t.MOONBLAST,t.SHELL_SIDE_ARM,t.FIERY_WRATH,t.STEAM_ERUPTION],[e.BUNNELBY]:[t.DRAIN_PUNCH,t.TIDY_UP,t.FACADE,t.EXTREME_SPEED],[e.FLETCHLING]:[t.DRILL_RUN,t.BURNING_BULWARK,t.HEAD_SMASH,t.VOLT_TACKLE],[e.SCATTERBUG]:[t.FOCUS_BLAST,t.AFTER_YOU,t.DECORATE,t.BLIZZARD],[e.LITLEO]:[t.EARTH_POWER,t.NASTY_PLOT,t.BURNING_BULWARK,t.BLUE_FLARE],[e.FLABEBE]:[t.GLITZY_GLOW,t.MYSTICAL_FIRE,t.TAKE_HEART,t.SEED_FLARE],[e.SKIDDO]:[t.HIGH_HORSEPOWER,t.GRASSY_GLIDE,t.STONE_AXE,t.SAPPY_SEED],[e.PANCHAM]:[t.DRAIN_PUNCH,t.SUCKER_PUNCH,t.METEOR_MASH,t.WICKED_BLOW],[e.FURFROU]:[t.TIDY_UP,t.SLACK_OFF,t.COMBAT_TORQUE,t.MULTI_ATTACK],[e.ESPURR]:[t.LUSTER_PURGE,t.MOONBLAST,t.AURA_SPHERE,t.DARK_VOID],[e.HONEDGE]:[t.TACHYON_CUTTER,t.SHADOW_BONE,t.BITTER_BLADE,t.BEHEMOTH_BLADE],[e.SPRITZEE]:[t.SPEED_SWAP,t.REVIVAL_BLESSING,t.ROOST,t.TORCH_SONG],[e.SWIRLIX]:[t.BELLY_DRUM,t.HEADLONG_RUSH,t.MAGICAL_TORQUE,t.REVIVAL_BLESSING],[e.INKAY]:[t.POWER_TRIP,t.SPIN_OUT,t.RECOVER,t.PSYCHO_BOOST],[e.BINACLE]:[t.TRIPLE_AXEL,t.CRABHAMMER,t.DIRE_CLAW,t.MIGHTY_CLEAVE],[e.SKRELP]:[t.STRENGTH_SAP,t.TRICK_ROOM,t.CALM_MIND,t.CORE_ENFORCER],[e.CLAUNCHER]:[t.SHELL_SMASH,t.ARMOR_CANNON,t.ENERGY_BALL,t.ORIGIN_PULSE],[e.HELIOPTILE]:[t.WEATHER_BALL,t.HYDRO_STEAM,t.EARTH_POWER,t.BOOMBURST],[e.TYRUNT]:[t.DRAGON_HAMMER,t.FLARE_BLITZ,t.VOLT_TACKLE,t.SHIFT_GEAR],[e.AMAURA]:[t.RECOVER,t.WRING_OUT,t.POWER_GEM,t.GEOMANCY],[e.HAWLUCHA]:[t.TRIPLE_AXEL,t.HIGH_HORSEPOWER,t.FLOATY_FALL,t.WICKED_BLOW],[e.DEDENNE]:[t.BOOMBURST,t.FAKE_OUT,t.NASTY_PLOT,t.REVIVAL_BLESSING],[e.CARBINK]:[t.BODY_PRESS,t.SHORE_UP,t.SPARKLY_SWIRL,t.DIAMOND_STORM],[e.GOOMY]:[t.DRAGON_HAMMER,t.RECOVER,t.CALM_MIND,t.MAKE_IT_RAIN],[e.KLEFKI]:[t.HEAL_BELL,t.ENCORE,t.INSTRUCT,t.TOPSY_TURVY],[e.PHANTUMP]:[t.RAGE_FIST,t.SLEEP_POWDER,t.SYNTHESIS,t.SAPPY_SEED],[e.PUMPKABOO]:[t.SPIRIT_SHACKLE,t.FIRE_LASH,t.DIRE_CLAW,t.SAPPY_SEED],[e.BERGMITE]:[t.STONE_AXE,t.METAL_BURST,t.BODY_PRESS,t.GLACIAL_LANCE],[e.NOIBAT]:[t.AEROBLAST,t.OVERDRIVE,t.NASTY_PLOT,t.CLANGING_SCALES],[e.XERNEAS]:[t.EARTH_POWER,t.SPRINGTIDE_STORM,t.STRENGTH_SAP,t.TAIL_GLOW],[e.YVELTAL]:[t.SHELL_SIDE_ARM,t.POWER_TRIP,t.FIERY_WRATH,t.CLANGOROUS_SOUL],[e.ZYGARDE]:[t.DRAGON_DARTS,t.HEAL_ORDER,t.CLANGOROUS_SOUL,t.DOUBLE_IRON_BASH],[e.DIANCIE]:[t.MAGICAL_TORQUE,t.FIERY_DANCE,t.SHORE_UP,t.GEOMANCY],[e.HOOPA]:[t.PHOTON_GEYSER,t.SECRET_SWORD,t.FIERY_WRATH,t.SHELL_SMASH],[e.VOLCANION]:[t.HYDRO_STEAM,t.CALM_MIND,t.ENERGY_BALL,t.MAGMA_STORM],[e.ETERNAL_FLOETTE]:[t.MIND_BLOWN,t.CHLOROBLAST,t.LUSTER_PURGE,t.QUIVER_DANCE],[e.ROWLET]:[t.THOUSAND_ARROWS,t.SHADOW_BONE,t.FIRST_IMPRESSION,t.VICTORY_DANCE],[e.LITTEN]:[t.SUCKER_PUNCH,t.PARTING_SHOT,t.SLACK_OFF,t.SACRED_FIRE],[e.POPPLIO]:[t.PSYCHIC_NOISE,t.BOUNCY_BUBBLE,t.OVERDRIVE,t.TORCH_SONG],[e.PIKIPEK]:[t.DUAL_WINGBEAT,t.BONE_RUSH,t.BURNING_BULWARK,t.POPULATION_BOMB],[e.YUNGOOS]:[t.EXTREME_SPEED,t.KNOCK_OFF,t.TIDY_UP,t.MULTI_ATTACK],[e.GRUBBIN]:[t.ICE_BEAM,t.EARTH_POWER,t.THUNDERCLAP,t.QUIVER_DANCE],[e.CRABRAWLER]:[t.JET_PUNCH,t.SHORE_UP,t.SUCKER_PUNCH,t.SURGING_STRIKES],[e.ORICORIO]:[t.QUIVER_DANCE,t.FIERY_DANCE,t.THUNDERCLAP,t.OBLIVION_WING],[e.CUTIEFLY]:[t.STICKY_WEB,t.SLEEP_POWDER,t.HEAT_WAVE,t.SPARKLY_SWIRL],[e.ROCKRUFF]:[t.HIGH_HORSEPOWER,t.TIDY_UP,t.ICE_SPINNER,t.MIGHTY_CLEAVE],[e.WISHIWASHI]:[t.HEAL_ORDER,t.FREEZE_DRY,t.WATER_SHURIKEN,t.TAIL_GLOW],[e.MAREANIE]:[t.CEASELESS_EDGE,t.SIZZLY_SLIDE,t.BODY_PRESS,t.LEECH_SEED],[e.MUDBRAY]:[t.BODY_PRESS,t.YAWN,t.SHORE_UP,t.THOUSAND_WAVES],[e.DEWPIDER]:[t.JET_PUNCH,t.SILK_TRAP,t.SWORDS_DANCE,t.AQUA_STEP],[e.FOMANTIS]:[t.SUPERPOWER,t.HEADLONG_RUSH,t.ICE_HAMMER,t.BITTER_BLADE],[e.MORELULL]:[t.CALM_MIND,t.SAPPY_SEED,t.DRAINING_KISS,t.MATCHA_GOTCHA],[e.SALANDIT]:[t.SCALD,t.SLUDGE_WAVE,t.CORE_ENFORCER,t.ERUPTION],[e.STUFFUL]:[t.DRAIN_PUNCH,t.METEOR_MASH,t.TRIPLE_AXEL,t.RAGE_FIST],[e.BOUNSWEET]:[t.TRIPLE_AXEL,t.AQUA_STEP,t.THUNDEROUS_KICK,t.SAPPY_SEED],[e.COMFEY]:[t.REVIVAL_BLESSING,t.TAKE_HEART,t.STRENGTH_SAP,t.MATCHA_GOTCHA],[e.ORANGURU]:[t.JUNGLE_HEALING,t.YAWN,t.FOLLOW_ME,t.LUMINA_CRASH],[e.PASSIMIAN]:[t.PYRO_BALL,t.SUCKER_PUNCH,t.ZING_ZAP,t.VICTORY_DANCE],[e.WIMPOD]:[t.TRIPLE_AXEL,t.OBSTRUCT,t.JET_PUNCH,t.SURGING_STRIKES],[e.SANDYGAST]:[t.BITTER_MALICE,t.SPLISHY_SPLASH,t.TAKE_HEART,t.SALT_CURE],[e.PYUKUMUKU]:[t.COMEUPPANCE,t.BANEFUL_BUNKER,t.TOXIC_SPIKES,t.SALT_CURE],[e.TYPE_NULL]:[t.DIRE_CLAW,t.RECOVER,t.COMBAT_TORQUE,t.NO_RETREAT],[e.MINIOR]:[t.EARTH_POWER,t.FLOATY_FALL,t.ZING_ZAP,t.DIAMOND_STORM],[e.KOMALA]:[t.SLACK_OFF,t.EXTREME_SPEED,t.KNOCK_OFF,t.COLLISION_COURSE],[e.TURTONATOR]:[t.BURNING_BULWARK,t.MORNING_SUN,t.BODY_PRESS,t.CORE_ENFORCER],[e.TOGEDEMARU]:[t.FAKE_OUT,t.METAL_BURST,t.METEOR_MASH,t.AURA_WHEEL],[e.MIMIKYU]:[t.SPIRIT_BREAK,t.TIDY_UP,t.FIRE_LASH,t.SPECTRAL_THIEF],[e.BRUXISH]:[t.PLAY_ROUGH,t.FIRE_FANG,t.DRAGON_DANCE,t.SURGING_STRIKES],[e.DRAMPA]:[t.SLACK_OFF,t.TRICK_ROOM,t.CORE_ENFORCER,t.BOOMBURST],[e.DHELMISE]:[t.SHADOW_BONE,t.IVY_CUDGEL,t.TRIPLE_DIVE,t.STRENGTH_SAP],[e.JANGMO_O]:[t.BODY_PRESS,t.SHELL_SIDE_ARM,t.SECRET_SWORD,t.GLAIVE_RUSH],[e.TAPU_KOKO]:[t.MAGICAL_TORQUE,t.TRIPLE_AXEL,t.SWORDS_DANCE,t.BOLT_STRIKE],[e.TAPU_LELE]:[t.MOONLIGHT,t.NASTY_PLOT,t.HEAT_WAVE,t.EXPANDING_FORCE],[e.TAPU_BULU]:[t.SAPPY_SEED,t.DRAIN_PUNCH,t.MAGICAL_TORQUE,t.VICTORY_DANCE],[e.TAPU_FINI]:[t.AURA_SPHERE,t.EARTH_POWER,t.RECOVER,t.QUIVER_DANCE],[e.COSMOG]:[t.PHOTON_GEYSER,t.PRECIPICE_BLADES,t.SACRED_FIRE,t.ASTRAL_BARRAGE],[e.NIHILEGO]:[t.STRENGTH_SAP,t.MALIGNANT_CHAIN,t.EARTH_POWER,t.QUIVER_DANCE],[e.BUZZWOLE]:[t.FIRST_IMPRESSION,t.COMBAT_TORQUE,t.ROCK_BLAST,t.DOUBLE_IRON_BASH],[e.PHEROMOSA]:[t.SECRET_SWORD,t.MAKE_IT_RAIN,t.ATTACK_ORDER,t.DIAMOND_STORM],[e.XURKITREE]:[t.FLAMETHROWER,t.GIGA_DRAIN,t.TAIL_GLOW,t.THUNDERCLAP],[e.CELESTEELA]:[t.RECOVER,t.BUZZY_BUZZ,t.SANDSEAR_STORM,t.OBLIVION_WING],[e.KARTANA]:[t.MIGHTY_CLEAVE,t.PSYBLADE,t.BITTER_BLADE,t.BEHEMOTH_BLADE],[e.GUZZLORD]:[t.SUCKER_PUNCH,t.COMEUPPANCE,t.SLACK_OFF,t.SHED_TAIL],[e.NECROZMA]:[t.DYNAMAX_CANNON,t.SACRED_FIRE,t.ASTRAL_BARRAGE,t.CLANGOROUS_SOUL],[e.MAGEARNA]:[t.STRENGTH_SAP,t.EARTH_POWER,t.MOONBLAST,t.MAKE_IT_RAIN],[e.MARSHADOW]:[t.POWER_UP_PUNCH,t.TRIPLE_AXEL,t.METEOR_MASH,t.STORM_THROW],[e.POIPOLE]:[t.MALIGNANT_CHAIN,t.ICE_BEAM,t.ARMOR_CANNON,t.CLANGING_SCALES],[e.STAKATAKA]:[t.HEAVY_SLAM,t.SHORE_UP,t.CURSE,t.SALT_CURE],[e.BLACEPHALON]:[t.STEEL_BEAM,t.MOONBLAST,t.CHLOROBLAST,t.MOONGEIST_BEAM],[e.ZERAORA]:[t.SWORDS_DANCE,t.TRIPLE_AXEL,t.BOLT_STRIKE,t.PYRO_BALL],[e.MELTAN]:[t.BULLET_PUNCH,t.DRAIN_PUNCH,t.BULK_UP,t.PLASMA_FISTS],[e.ALOLA_RATTATA]:[t.FALSE_SURRENDER,t.PSYCHIC_FANGS,t.COIL,t.EXTREME_SPEED],[e.ALOLA_SANDSHREW]:[t.SPIKY_SHIELD,t.AQUA_CUTTER,t.SHIFT_GEAR,t.GLACIAL_LANCE],[e.ALOLA_VULPIX]:[t.MOONBLAST,t.PARTING_SHOT,t.EARTH_POWER,t.REVIVAL_BLESSING],[e.ALOLA_DIGLETT]:[t.THOUSAND_WAVES,t.SWORDS_DANCE,t.TRIPLE_DIVE,t.MOUNTAIN_GALE],[e.ALOLA_MEOWTH]:[t.BADDY_BAD,t.BUZZY_BUZZ,t.PARTING_SHOT,t.MAKE_IT_RAIN],[e.ALOLA_GEODUDE]:[t.THOUSAND_WAVES,t.BULK_UP,t.STONE_AXE,t.EXTREME_SPEED],[e.ALOLA_GRIMER]:[t.SUCKER_PUNCH,t.BARB_BARRAGE,t.RECOVER,t.SURGING_STRIKES],[e.GROOKEY]:[t.HIGH_HORSEPOWER,t.CLANGOROUS_SOUL,t.GRASSY_GLIDE,t.SAPPY_SEED],[e.SCORBUNNY]:[t.EXTREME_SPEED,t.HIGH_JUMP_KICK,t.TRIPLE_AXEL,t.BOLT_STRIKE],[e.SOBBLE]:[t.AEROBLAST,t.FROST_BREATH,t.ENERGY_BALL,t.NASTY_PLOT],[e.SKWOVET]:[t.SUCKER_PUNCH,t.SLACK_OFF,t.COIL,t.POPULATION_BOMB],[e.ROOKIDEE]:[t.ROOST,t.BODY_PRESS,t.KINGS_SHIELD,t.BEHEMOTH_BASH],[e.BLIPBUG]:[t.HEAL_ORDER,t.LUSTER_PURGE,t.SLEEP_POWDER,t.TAIL_GLOW],[e.NICKIT]:[t.BADDY_BAD,t.FLAMETHROWER,t.SPARKLY_SWIRL,t.MAKE_IT_RAIN],[e.GOSSIFLEUR]:[t.PARTING_SHOT,t.STRENGTH_SAP,t.SAPPY_SEED,t.SEED_FLARE],[e.WOOLOO]:[t.PSYSHIELD_BASH,t.MILK_DRINK,t.BODY_PRESS,t.MULTI_ATTACK],[e.CHEWTLE]:[t.ICE_FANG,t.PSYCHIC_FANGS,t.SHELL_SMASH,t.MIGHTY_CLEAVE],[e.YAMPER]:[t.ICE_FANG,t.SWORDS_DANCE,t.THUNDER_FANG,t.BOLT_STRIKE],[e.ROLYCOLY]:[t.BITTER_BLADE,t.BODY_PRESS,t.BULK_UP,t.DIAMOND_STORM],[e.APPLIN]:[t.CORE_ENFORCER,t.DRAGON_HAMMER,t.FLOWER_TRICK,t.MATCHA_GOTCHA],[e.SILICOBRA]:[t.SHORE_UP,t.SHED_TAIL,t.MOUNTAIN_GALE,t.THOUSAND_ARROWS],[e.CRAMORANT]:[t.APPLE_ACID,t.SURF,t.SCORCHING_SANDS,t.OBLIVION_WING],[e.ARROKUDA]:[t.SUPERCELL_SLAM,t.TRIPLE_DIVE,t.ICE_SPINNER,t.SWORDS_DANCE],[e.TOXEL]:[t.NASTY_PLOT,t.BUG_BUZZ,t.SPARKLING_ARIA,t.TORCH_SONG],[e.SIZZLIPEDE]:[t.BURNING_BULWARK,t.ZING_ZAP,t.FIRST_IMPRESSION,t.BITTER_BLADE],[e.CLOBBOPUS]:[t.STORM_THROW,t.JET_PUNCH,t.MACH_PUNCH,t.SURGING_STRIKES],[e.SINISTEA]:[t.SCALD,t.TAKE_HEART,t.SPARKLY_SWIRL,t.MATCHA_GOTCHA],[e.HATENNA]:[t.RECOVER,t.MOONBLAST,t.BUZZY_BUZZ,t.TORCH_SONG],[e.IMPIDIMP]:[t.ENCORE,t.PARTING_SHOT,t.TOPSY_TURVY,t.WICKED_BLOW],[e.MILCERY]:[t.MOONBLAST,t.CHILLY_RECEPTION,t.EARTH_POWER,t.GEOMANCY],[e.FALINKS]:[t.COMBAT_TORQUE,t.PSYSHIELD_BASH,t.HEAL_ORDER,t.POPULATION_BOMB],[e.PINCURCHIN]:[t.TRICK_ROOM,t.VOLT_SWITCH,t.STRENGTH_SAP,t.THUNDERCLAP],[e.SNOM]:[t.FROST_BREATH,t.HEAL_ORDER,t.EARTH_POWER,t.SPORE],[e.STONJOURNER]:[t.BODY_PRESS,t.HELPING_HAND,t.ACCELEROCK,t.DIAMOND_STORM],[e.EISCUE]:[t.TRIPLE_AXEL,t.AQUA_STEP,t.AXE_KICK,t.SHELL_SMASH],[e.INDEEDEE]:[t.MATCHA_GOTCHA,t.EXPANDING_FORCE,t.MOONBLAST,t.REVIVAL_BLESSING],[e.MORPEKO]:[t.TRIPLE_AXEL,t.OBSTRUCT,t.SWORDS_DANCE,t.COLLISION_COURSE],[e.CUFANT]:[t.LIQUIDATION,t.CURSE,t.COMBAT_TORQUE,t.GIGATON_HAMMER],[e.DRACOZOLT]:[t.TRIPLE_AXEL,t.GUNK_SHOT,t.FIRE_LASH,t.DRAGON_DANCE],[e.ARCTOZOLT]:[t.MOUNTAIN_GALE,t.AQUA_STEP,t.HIGH_HORSEPOWER,t.SHIFT_GEAR],[e.DRACOVISH]:[t.TRIPLE_AXEL,t.DRAGON_HAMMER,t.THUNDER_FANG,t.DRAGON_DANCE],[e.ARCTOVISH]:[t.ICE_FANG,t.THUNDER_FANG,t.HIGH_HORSEPOWER,t.SHIFT_GEAR],[e.DURALUDON]:[t.CORE_ENFORCER,t.BODY_PRESS,t.RECOVER,t.TACHYON_CUTTER],[e.DREEPY]:[t.SHADOW_BONE,t.POWER_UP_PUNCH,t.FIRE_LASH,t.DIRE_CLAW],[e.ZACIAN]:[t.MAGICAL_TORQUE,t.MIGHTY_CLEAVE,t.BITTER_BLADE,t.PRECIPICE_BLADES],[e.ZAMAZENTA]:[t.BULK_UP,t.BODY_PRESS,t.SLACK_OFF,t.DIAMOND_STORM],[e.ETERNATUS]:[t.BODY_PRESS,t.NASTY_PLOT,t.MALIGNANT_CHAIN,t.DRAGON_ENERGY],[e.KUBFU]:[t.METEOR_MASH,t.DRAIN_PUNCH,t.JET_PUNCH,t.DRAGON_DANCE],[e.ZARUDE]:[t.SAPPY_SEED,t.MIGHTY_CLEAVE,t.WICKED_BLOW,t.VICTORY_DANCE],[e.REGIELEKI]:[t.NASTY_PLOT,t.ICE_BEAM,t.EARTH_POWER,t.ELECTRO_DRIFT],[e.REGIDRAGO]:[t.METEOR_MASH,t.FLAMETHROWER,t.TAKE_HEART,t.DRAGON_DARTS],[e.GLASTRIER]:[t.SPEED_SWAP,t.SLACK_OFF,t.HIGH_HORSEPOWER,t.GLACIAL_LANCE],[e.SPECTRIER]:[t.EARTH_POWER,t.PARTING_SHOT,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.CALYREX]:[t.SAPPY_SEED,t.RECOVER,t.SECRET_SWORD,t.PHOTON_GEYSER],[e.ENAMORUS]:[t.AEROBLAST,t.THOUSAND_ARROWS,t.STORED_POWER,t.FLEUR_CANNON],[e.GALAR_MEOWTH]:[t.LIQUIDATION,t.HORN_LEECH,t.BULLET_PUNCH,t.BEHEMOTH_BASH],[e.GALAR_PONYTA]:[t.MAGICAL_TORQUE,t.EXTREME_SPEED,t.FLARE_BLITZ,t.PHOTON_GEYSER],[e.GALAR_SLOWPOKE]:[t.SHED_TAIL,t.BADDY_BAD,t.MOONBLAST,t.PHOTON_GEYSER],[e.GALAR_FARFETCHD]:[t.ROOST,t.SACRED_SWORD,t.KINGS_SHIELD,t.BEHEMOTH_BLADE],[e.GALAR_ARTICUNO]:[t.SECRET_SWORD,t.NIGHT_DAZE,t.ICE_BEAM,t.OBLIVION_WING],[e.GALAR_ZAPDOS]:[t.TIDY_UP,t.FLOATY_FALL,t.ROOST,t.BOLT_BEAK],[e.GALAR_MOLTRES]:[t.ROOST,t.SLUDGE_BOMB,t.FLAMETHROWER,t.OBLIVION_WING],[e.GALAR_CORSOLA]:[t.SHELL_SMASH,t.AURA_SPHERE,t.INFERNAL_PARADE,t.ASTRAL_BARRAGE],[e.GALAR_ZIGZAGOON]:[t.CEASELESS_EDGE,t.FACADE,t.PARTING_SHOT,t.EXTREME_SPEED],[e.GALAR_DARUMAKA]:[t.ICE_SPINNER,t.ZING_ZAP,t.DRAIN_PUNCH,t.PYRO_BALL],[e.GALAR_YAMASK]:[t.STRENGTH_SAP,t.DIRE_CLAW,t.THOUSAND_WAVES,t.SPECTRAL_THIEF],[e.GALAR_STUNFISK]:[t.SPIKY_SHIELD,t.THOUSAND_ARROWS,t.STRENGTH_SAP,t.DOUBLE_IRON_BASH],[e.HISUI_GROWLITHE]:[t.WAVE_CRASH,t.HEAD_SMASH,t.VOLT_TACKLE,t.DRAGON_DANCE],[e.HISUI_VOLTORB]:[t.FROST_BREATH,t.NASTY_PLOT,t.APPLE_ACID,t.ELECTRO_DRIFT],[e.HISUI_QWILFISH]:[t.CEASELESS_EDGE,t.KNOCK_OFF,t.RECOVER,t.FISHIOUS_REND],[e.HISUI_SNEASEL]:[t.DRAIN_PUNCH,t.KNOCK_OFF,t.PSYCHIC_FANGS,t.TRIPLE_AXEL],[e.HISUI_ZORUA]:[t.MOONBLAST,t.HYPER_VOICE,t.PARTING_SHOT,t.BLOOD_MOON],[e.SPRIGATITO]:[t.FIRE_LASH,t.TRIPLE_AXEL,t.SUCKER_PUNCH,t.WICKED_BLOW],[e.FUECOCO]:[t.ALLURING_VOICE,t.SLACK_OFF,t.OVERDRIVE,t.MOONGEIST_BEAM],[e.QUAXLY]:[t.DRAGON_DANCE,t.TRIPLE_AXEL,t.POWER_TRIP,t.THUNDEROUS_KICK],[e.LECHONK]:[t.MILK_DRINK,t.PSYSHIELD_BASH,t.FILLET_AWAY,t.MULTI_ATTACK],[e.TAROUNTULA]:[t.STONE_AXE,t.LEECH_LIFE,t.THIEF,t.SPORE],[e.NYMBLE]:[t.KNOCK_OFF,t.FELL_STINGER,t.ATTACK_ORDER,t.WICKED_BLOW],[e.PAWMI]:[t.DRAIN_PUNCH,t.METEOR_MASH,t.JET_PUNCH,t.PLASMA_FISTS],[e.TANDEMAUS]:[t.BATON_PASS,t.COVET,t.SIZZLY_SLIDE,t.REVIVAL_BLESSING],[e.FIDOUGH]:[t.SOFT_BOILED,t.HIGH_HORSEPOWER,t.SIZZLY_SLIDE,t.TIDY_UP],[e.SMOLIV]:[t.STRENGTH_SAP,t.EARTH_POWER,t.CALM_MIND,t.BOOMBURST],[e.SQUAWKABILLY]:[t.PARTING_SHOT,t.EARTHQUAKE,t.FLARE_BLITZ,t.EXTREME_SPEED],[e.NACLI]:[t.BODY_PRESS,t.TOXIC,t.CURSE,t.DIAMOND_STORM],[e.CHARCADET]:[t.SACRED_SWORD,t.PHOTON_GEYSER,t.MOONBLAST,t.SPECTRAL_THIEF],[e.TADBULB]:[t.PARABOLIC_CHARGE,t.SCALD,t.EARTH_POWER,t.ELECTRO_SHOT],[e.WATTREL]:[t.NASTY_PLOT,t.SPLISHY_SPLASH,t.SANDSEAR_STORM,t.ELECTRO_SHOT],[e.MASCHIFF]:[t.PARTING_SHOT,t.CLOSE_COMBAT,t.PSYCHIC_FANGS,t.NO_RETREAT],[e.SHROODLE]:[t.GASTRO_ACID,t.PARTING_SHOT,t.TOXIC,t.SKETCH],[e.BRAMBLIN]:[t.TAILWIND,t.STRENGTH_SAP,t.FLOWER_TRICK,t.LAST_RESPECTS],[e.TOEDSCOOL]:[t.STRENGTH_SAP,t.TOPSY_TURVY,t.SAPPY_SEED,t.TAIL_GLOW],[e.KLAWF]:[t.CRABHAMMER,t.SHORE_UP,t.MIGHTY_CLEAVE,t.SHELL_SMASH],[e.CAPSAKID]:[t.STRENGTH_SAP,t.APPLE_ACID,t.FROST_BREATH,t.TORCH_SONG],[e.RELLOR]:[t.HEAL_BLOCK,t.RECOVER,t.HEAT_WAVE,t.LUMINA_CRASH],[e.FLITTLE]:[t.COSMIC_POWER,t.AURA_SPHERE,t.ROOST,t.FIERY_DANCE],[e.TINKATINK]:[t.MAGICAL_TORQUE,t.PYRO_BALL,t.IVY_CUDGEL,t.SHIFT_GEAR],[e.WIGLETT]:[t.SHELL_SMASH,t.ICICLE_CRASH,t.SEED_BOMB,t.SURGING_STRIKES],[e.BOMBIRDIER]:[t.FLOATY_FALL,t.SWORDS_DANCE,t.SUCKER_PUNCH,t.MIGHTY_CLEAVE],[e.FINIZEN]:[t.TRIPLE_AXEL,t.DRAIN_PUNCH,t.HEADLONG_RUSH,t.SURGING_STRIKES],[e.VAROOM]:[t.COMBAT_TORQUE,t.U_TURN,t.BLAZING_TORQUE,t.NOXIOUS_TORQUE],[e.CYCLIZAR]:[t.PARTING_SHOT,t.FIRE_LASH,t.MAGICAL_TORQUE,t.GLAIVE_RUSH],[e.ORTHWORM]:[t.SIZZLY_SLIDE,t.COIL,t.BODY_PRESS,t.SHORE_UP],[e.GLIMMET]:[t.CALM_MIND,t.EARTH_POWER,t.FIERY_DANCE,t.MALIGNANT_CHAIN],[e.GREAVARD]:[t.SHADOW_BONE,t.YAWN,t.SHORE_UP,t.COLLISION_COURSE],[e.FLAMIGO]:[t.THUNDEROUS_KICK,t.TRIPLE_AXEL,t.FLOATY_FALL,t.VICTORY_DANCE],[e.CETODDLE]:[t.MOUNTAIN_GALE,t.HIGH_HORSEPOWER,t.SLACK_OFF,t.DRAGON_DANCE],[e.VELUZA]:[t.PSYBLADE,t.FLIP_TURN,t.ICE_SPINNER,t.BITTER_BLADE],[e.DONDOZO]:[t.SOFT_BOILED,t.SIZZLY_SLIDE,t.BREAKING_SWIPE,t.SALT_CURE],[e.TATSUGIRI]:[t.SLUDGE_BOMB,t.FILLET_AWAY,t.CORE_ENFORCER,t.STEAM_ERUPTION],[e.GREAT_TUSK]:[t.STONE_AXE,t.MORNING_SUN,t.COLLISION_COURSE,t.SHIFT_GEAR],[e.SCREAM_TAIL]:[t.TORCH_SONG,t.GLITZY_GLOW,t.MOONLIGHT,t.SPARKLY_SWIRL],[e.BRUTE_BONNET]:[t.SAPPY_SEED,t.STRENGTH_SAP,t.EARTHQUAKE,t.WICKED_BLOW],[e.FLUTTER_MANE]:[t.MOONLIGHT,t.NASTY_PLOT,t.EARTH_POWER,t.MOONGEIST_BEAM],[e.SLITHER_WING]:[t.MIGHTY_CLEAVE,t.THUNDEROUS_KICK,t.FIRE_LASH,t.VICTORY_DANCE],[e.SANDY_SHOCKS]:[t.MORNING_SUN,t.ICE_BEAM,t.NASTY_PLOT,t.THUNDERCLAP],[e.IRON_TREADS]:[t.FUSION_BOLT,t.BULK_UP,t.SHORE_UP,t.SUNSTEEL_STRIKE],[e.IRON_BUNDLE]:[t.EARTH_POWER,t.BOUNCY_BUBBLE,t.NASTY_PLOT,t.STEAM_ERUPTION],[e.IRON_HANDS]:[t.DRAIN_PUNCH,t.BULK_UP,t.PLASMA_FISTS,t.ICE_HAMMER],[e.IRON_JUGULIS]:[t.FIERY_WRATH,t.ROOST,t.NASTY_PLOT,t.OBLIVION_WING],[e.IRON_MOTH]:[t.EARTH_POWER,t.SEARING_SHOT,t.MALIGNANT_CHAIN,t.QUIVER_DANCE],[e.IRON_THORNS]:[t.DIAMOND_STORM,t.SHORE_UP,t.SHIFT_GEAR,t.PLASMA_FISTS],[e.FRIGIBAX]:[t.BEHEMOTH_BLADE,t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.PRECIPICE_BLADES],[e.GIMMIGHOUL]:[t.HAPPY_HOUR,t.AURA_SPHERE,t.SURF,t.ASTRAL_BARRAGE],[e.WO_CHIEN]:[t.SPORE,t.FIERY_WRATH,t.SAPPY_SEED,t.STRENGTH_SAP],[e.CHIEN_PAO]:[t.KNOCK_OFF,t.PARTING_SHOT,t.TRIPLE_AXEL,t.BITTER_BLADE],[e.TING_LU]:[t.SHORE_UP,t.CEASELESS_EDGE,t.SAPPY_SEED,t.PRECIPICE_BLADES],[e.CHI_YU]:[t.FIERY_WRATH,t.HYDRO_STEAM,t.MORNING_SUN,t.BLUE_FLARE],[e.ROARING_MOON]:[t.FIRE_LASH,t.DRAGON_HAMMER,t.SUCKER_PUNCH,t.WICKED_BLOW],[e.IRON_VALIANT]:[t.PLASMA_FISTS,t.NO_RETREAT,t.SECRET_SWORD,t.MAGICAL_TORQUE],[e.KORAIDON]:[t.SUNSTEEL_STRIKE,t.SOLAR_BLADE,t.DRAGON_DARTS,t.BITTER_BLADE],[e.MIRAIDON]:[t.ICE_BEAM,t.CLANGOROUS_SOUL,t.CORE_ENFORCER,t.RISING_VOLTAGE],[e.WALKING_WAKE]:[t.BOUNCY_BUBBLE,t.NASTY_PLOT,t.SLUDGE_WAVE,t.CORE_ENFORCER],[e.IRON_LEAVES]:[t.BITTER_BLADE,t.U_TURN,t.MIGHTY_CLEAVE,t.VICTORY_DANCE],[e.POLTCHAGEIST]:[t.PARABOLIC_CHARGE,t.BOUNCY_BUBBLE,t.LEECH_SEED,t.SPARKLY_SWIRL],[e.OKIDOGI]:[t.COMBAT_TORQUE,t.TIDY_UP,t.DIRE_CLAW,t.WICKED_BLOW],[e.MUNKIDORI]:[t.PSYSTRIKE,t.HEAT_WAVE,t.EARTH_POWER,t.MALIGNANT_CHAIN],[e.FEZANDIPITI]:[t.BARB_BARRAGE,t.BONEMERANG,t.TRIPLE_AXEL,t.VICTORY_DANCE],[e.OGERPON]:[t.SLEEP_POWDER,t.BONEMERANG,t.TRIPLE_AXEL,t.FLOWER_TRICK],[e.GOUGING_FIRE]:[t.EXTREME_SPEED,t.BULK_UP,t.SACRED_FIRE,t.GLAIVE_RUSH],[e.RAGING_BOLT]:[t.NASTY_PLOT,t.FLAMETHROWER,t.MORNING_SUN,t.ELECTRO_DRIFT],[e.IRON_BOULDER]:[t.PSYBLADE,t.KOWTOW_CLEAVE,t.STONE_AXE,t.BITTER_BLADE],[e.IRON_CROWN]:[t.NASTY_PLOT,t.SECRET_SWORD,t.PSYSTRIKE,t.ELECTRO_DRIFT],[e.TERAPAGOS]:[t.MOONBLAST,t.RECOVER,t.ICE_BEAM,t.SHELL_SMASH],[e.PECHARUNT]:[t.TAKE_HEART,t.BODY_PRESS,t.SAPPY_SEED,t.KINGS_SHIELD],[e.PALDEA_TAUROS]:[t.NO_RETREAT,t.BLAZING_TORQUE,t.AQUA_STEP,t.THUNDEROUS_KICK],[e.PALDEA_WOOPER]:[t.STONE_AXE,t.RECOVER,t.BANEFUL_BUNKER,t.BARB_BARRAGE],[e.BLOODMOON_URSALUNA]:[t.NASTY_PLOT,t.ROCK_POLISH,t.SANDSEAR_STORM,t.BOOMBURST]},Z=-1,Ae=0,nc={[e.BULBASAUR]:[[1,t.TACKLE],[1,t.GROWL],[3,t.VINE_WHIP],[6,t.GROWTH],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[18,t.SEED_BOMB],[21,t.TAKE_DOWN],[24,t.SWEET_SCENT],[27,t.SYNTHESIS],[30,t.WORRY_SEED],[33,t.POWER_WHIP],[36,t.SOLAR_BEAM]],[e.IVYSAUR]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[1,t.GROWTH],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[20,t.SEED_BOMB],[25,t.TAKE_DOWN],[30,t.SWEET_SCENT],[35,t.SYNTHESIS],[40,t.WORRY_SEED],[45,t.POWER_WHIP],[50,t.SOLAR_BEAM]],[e.VENUSAUR]:[[Ae,t.PETAL_BLIZZARD],[1,t.GROWTH],[1,t.PETAL_DANCE],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[20,t.SEED_BOMB],[25,t.TAKE_DOWN],[30,t.SWEET_SCENT],[37,t.SYNTHESIS],[44,t.WORRY_SEED],[51,t.POWER_WHIP],[58,t.SOLAR_BEAM]],[e.CHARMANDER]:[[1,t.SCRATCH],[1,t.GROWL],[4,t.EMBER],[8,t.SMOKESCREEN],[12,t.DRAGON_BREATH],[17,t.FIRE_FANG],[20,t.SLASH],[24,t.FLAMETHROWER],[28,t.SCARY_FACE],[32,t.FIRE_SPIN],[36,t.INFERNO],[40,t.FLARE_BLITZ]],[e.CHARMELEON]:[[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.FIRE_SPIN],[12,t.DRAGON_BREATH],[19,t.FIRE_FANG],[24,t.SLASH],[30,t.FLAMETHROWER],[37,t.SCARY_FACE],[48,t.INFERNO],[54,t.FLARE_BLITZ]],[e.CHARIZARD]:[[Ae,t.AIR_SLASH],[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.HEAT_WAVE],[1,t.DRAGON_CLAW],[12,t.DRAGON_BREATH],[19,t.FIRE_FANG],[24,t.SLASH],[30,t.FLAMETHROWER],[39,t.SCARY_FACE],[46,t.FIRE_SPIN],[54,t.INFERNO],[62,t.FLARE_BLITZ]],[e.SQUIRTLE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[3,t.WATER_GUN],[6,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[18,t.PROTECT],[21,t.RAIN_DANCE],[24,t.AQUA_TAIL],[27,t.SHELL_SMASH],[30,t.IRON_DEFENSE],[33,t.HYDRO_PUMP],[36,t.WAVE_CRASH]],[e.WARTORTLE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[20,t.PROTECT],[25,t.RAIN_DANCE],[30,t.AQUA_TAIL],[35,t.SHELL_SMASH],[40,t.IRON_DEFENSE],[45,t.HYDRO_PUMP],[50,t.WAVE_CRASH]],[e.BLASTOISE]:[[Ae,t.FLASH_CANNON],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[20,t.PROTECT],[25,t.RAIN_DANCE],[30,t.AQUA_TAIL],[35,t.SHELL_SMASH],[42,t.IRON_DEFENSE],[49,t.HYDRO_PUMP],[56,t.WAVE_CRASH]],[e.CATERPIE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[9,t.BUG_BITE]],[e.METAPOD]:[[Ae,t.HARDEN],[Z,t.TACKLE],[Z,t.STRING_SHOT],[Z,t.BUG_BITE],[1,t.HARDEN]],[e.BUTTERFREE]:[[Ae,t.GUST],[1,t.TACKLE],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[4,t.SUPERSONIC],[8,t.CONFUSION],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[16,t.PSYBEAM],[20,t.WHIRLWIND],[24,t.AIR_SLASH],[28,t.SAFEGUARD],[32,t.BUG_BUZZ],[36,t.TAILWIND],[40,t.RAGE_POWDER],[44,t.QUIVER_DANCE]],[e.WEEDLE]:[[1,t.POISON_STING],[1,t.STRING_SHOT],[9,t.BUG_BITE]],[e.KAKUNA]:[[Ae,t.HARDEN],[Z,t.POISON_STING],[Z,t.STRING_SHOT],[Z,t.BUG_BITE],[1,t.HARDEN]],[e.BEEDRILL]:[[Ae,t.TWINEEDLE],[1,t.POISON_STING],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[1,t.FURY_ATTACK],[11,t.FURY_CUTTER],[14,t.RAGE],[17,t.PURSUIT],[20,t.FOCUS_ENERGY],[23,t.VENOSHOCK],[26,t.ASSURANCE],[29,t.TOXIC_SPIKES],[32,t.PIN_MISSILE],[35,t.POISON_JAB],[38,t.AGILITY],[41,t.ENDEAVOR],[44,t.FELL_STINGER]],[e.PIDGEY]:[[1,t.TACKLE],[5,t.SAND_ATTACK],[9,t.GUST],[13,t.QUICK_ATTACK],[17,t.WHIRLWIND],[21,t.TWISTER],[25,t.FEATHER_DANCE],[29,t.AGILITY],[33,t.WING_ATTACK],[37,t.ROOST],[41,t.TAILWIND],[45,t.AERIAL_ACE],[49,t.AIR_SLASH],[53,t.HURRICANE]],[e.PIDGEOTTO]:[[1,t.GUST],[1,t.SAND_ATTACK],[1,t.TACKLE],[5,t.SAND_ATTACK],[9,t.GUST],[13,t.QUICK_ATTACK],[17,t.WHIRLWIND],[22,t.TWISTER],[27,t.FEATHER_DANCE],[32,t.AGILITY],[37,t.WING_ATTACK],[42,t.ROOST],[47,t.TAILWIND],[52,t.AERIAL_ACE],[57,t.AIR_SLASH],[62,t.HURRICANE]],[e.PIDGEOT]:[[1,t.GUST],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.QUICK_ATTACK],[1,t.HURRICANE],[5,t.SAND_ATTACK],[9,t.GUST],[17,t.WHIRLWIND],[22,t.TWISTER],[27,t.FEATHER_DANCE],[32,t.AGILITY],[38,t.WING_ATTACK],[44,t.ROOST],[50,t.TAILWIND],[56,t.AERIAL_ACE],[62,t.AIR_SLASH],[68,t.HURRICANE]],[e.RATTATA]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.QUICK_ATTACK],[7,t.FOCUS_ENERGY],[10,t.BITE],[13,t.LASER_FOCUS],[16,t.TAKE_DOWN],[19,t.ASSURANCE],[22,t.CRUNCH],[25,t.SUCKER_PUNCH],[28,t.SUPER_FANG],[31,t.DOUBLE_EDGE],[34,t.ENDEAVOR]],[e.RATICATE]:[[Ae,t.SCARY_FACE],[1,t.SWORDS_DANCE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[10,t.BITE],[13,t.LASER_FOCUS],[16,t.TAKE_DOWN],[19,t.ASSURANCE],[24,t.CRUNCH],[29,t.SUCKER_PUNCH],[34,t.SUPER_FANG],[39,t.DOUBLE_EDGE],[44,t.ENDEAVOR]],[e.SPEAROW]:[[1,t.GROWL],[1,t.PECK],[4,t.LEER],[8,t.ASSURANCE],[11,t.FURY_ATTACK],[15,t.AERIAL_ACE],[18,t.WING_ATTACK],[22,t.TAKE_DOWN],[25,t.AGILITY],[29,t.FOCUS_ENERGY],[32,t.ROOST],[36,t.DRILL_PECK]],[e.FEAROW]:[[1,t.LEER],[1,t.GROWL],[1,t.PECK],[1,t.ASSURANCE],[1,t.PLUCK],[1,t.DRILL_RUN],[1,t.PURSUIT],[4,t.LEER],[8,t.ASSURANCE],[11,t.FURY_ATTACK],[15,t.AERIAL_ACE],[18,t.WING_ATTACK],[23,t.TAKE_DOWN],[27,t.AGILITY],[32,t.FOCUS_ENERGY],[36,t.ROOST],[41,t.DRILL_PECK]],[e.EKANS]:[[1,t.WRAP],[1,t.LEER],[4,t.POISON_STING],[9,t.BITE],[12,t.GLARE],[17,t.SCREECH],[20,t.ACID],[25,t.SWALLOW],[25,t.STOCKPILE],[25,t.SPIT_UP],[28,t.ACID_SPRAY],[33,t.SLUDGE_BOMB],[36,t.GASTRO_ACID],[38,t.BELCH],[41,t.HAZE],[44,t.COIL],[49,t.GUNK_SHOT]],[e.ARBOK]:[[Ae,t.CRUNCH],[1,t.WRAP],[1,t.POISON_STING],[1,t.LEER],[1,t.BITE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[12,t.GLARE],[17,t.SCREECH],[20,t.ACID],[27,t.STOCKPILE],[27,t.SPIT_UP],[27,t.SWALLOW],[32,t.ACID_SPRAY],[39,t.SLUDGE_BOMB],[44,t.GASTRO_ACID],[48,t.BELCH],[51,t.HAZE],[56,t.COIL],[63,t.GUNK_SHOT]],[e.PIKACHU]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],[e.RAICHU]:[[Ae,t.ZIPPY_ZAP],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.LIGHT_SCREEN],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SPARK],[1,t.IRON_TAIL],[1,t.FEINT],[1,t.NASTY_PLOT],[1,t.DISCHARGE],[1,t.ELECTRO_BALL],[1,t.PLAY_NICE],[1,t.NUZZLE],[1,t.THUNDER_PUNCH],[5,t.THUNDERBOLT],[50,t.PIKA_PAPOW]],[e.SANDSHREW]:[[1,t.SCRATCH],[1,t.DEFENSE_CURL],[3,t.POISON_STING],[6,t.SAND_ATTACK],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.BULLDOZE],[21,t.SWIFT],[24,t.FURY_SWIPES],[27,t.AGILITY],[30,t.SLASH],[33,t.DIG],[36,t.GYRO_BALL],[39,t.SWORDS_DANCE],[42,t.SANDSTORM],[45,t.EARTHQUAKE]],[e.SANDSLASH]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.CRUSH_CLAW],[1,t.AGILITY],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.BULLDOZE],[21,t.SWIFT],[26,t.FURY_SWIPES],[31,t.SAND_TOMB],[36,t.SLASH],[41,t.DIG],[46,t.GYRO_BALL],[51,t.SWORDS_DANCE],[56,t.SANDSTORM],[61,t.EARTHQUAKE]],[e.NIDORAN_F]:[[1,t.POISON_STING],[1,t.GROWL],[5,t.SCRATCH],[10,t.TAIL_WHIP],[15,t.FURY_SWIPES],[20,t.TOXIC_SPIKES],[25,t.DOUBLE_KICK],[30,t.BITE],[35,t.HELPING_HAND],[40,t.TOXIC],[45,t.FLATTER],[50,t.CRUNCH],[55,t.EARTH_POWER]],[e.NIDORINA]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.POISON_STING],[1,t.GROWL],[15,t.FURY_SWIPES],[22,t.TOXIC_SPIKES],[29,t.DOUBLE_KICK],[36,t.BITE],[43,t.HELPING_HAND],[50,t.TOXIC],[57,t.FLATTER],[64,t.CRUNCH],[71,t.EARTH_POWER]],[e.NIDOQUEEN]:[[Ae,t.SUPERPOWER],[1,t.SLUDGE_WAVE],[1,t.SCRATCH],[1,t.DOUBLE_KICK],[1,t.TAIL_WHIP],[1,t.POISON_STING],[1,t.BITE],[1,t.GROWL],[1,t.TOXIC],[1,t.FURY_SWIPES],[1,t.CRUNCH],[1,t.FLATTER],[1,t.HELPING_HAND],[1,t.TOXIC_SPIKES],[1,t.EARTH_POWER]],[e.NIDORAN_M]:[[1,t.POISON_STING],[1,t.LEER],[5,t.PECK],[10,t.FOCUS_ENERGY],[15,t.FURY_ATTACK],[20,t.TOXIC_SPIKES],[25,t.DOUBLE_KICK],[30,t.HORN_ATTACK],[35,t.HELPING_HAND],[40,t.TOXIC],[45,t.FLATTER],[50,t.POISON_JAB],[55,t.EARTH_POWER]],[e.NIDORINO]:[[1,t.POISON_STING],[1,t.LEER],[1,t.PECK],[1,t.FOCUS_ENERGY],[15,t.FURY_ATTACK],[22,t.TOXIC_SPIKES],[29,t.DOUBLE_KICK],[36,t.HORN_ATTACK],[43,t.HELPING_HAND],[50,t.TOXIC],[57,t.FLATTER],[64,t.POISON_JAB],[71,t.EARTH_POWER]],[e.NIDOKING]:[[Ae,t.MEGAHORN],[1,t.SLUDGE_WAVE],[1,t.DOUBLE_KICK],[1,t.HORN_ATTACK],[1,t.FURY_ATTACK],[1,t.POISON_STING],[1,t.LEER],[1,t.PECK],[1,t.TOXIC],[1,t.FOCUS_ENERGY],[1,t.FLATTER],[1,t.HELPING_HAND],[1,t.TOXIC_SPIKES],[1,t.POISON_JAB],[1,t.EARTH_POWER]],[e.CLEFAIRY]:[[1,t.POUND],[1,t.GROWL],[1,t.SING],[1,t.DEFENSE_CURL],[1,t.SPLASH],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[1,t.SPOTLIGHT],[4,t.STORED_POWER],[8,t.ENCORE],[12,t.AFTER_YOU],[16,t.LIFE_DEW],[20,t.METRONOME],[24,t.MOONLIGHT],[28,t.GRAVITY],[32,t.METEOR_MASH],[36,t.FOLLOW_ME],[40,t.COSMIC_POWER],[44,t.MOONBLAST],[48,t.HEALING_WISH]],[e.CLEFABLE]:[[Z,t.POUND],[Z,t.GROWL],[Z,t.SING],[Z,t.DEFENSE_CURL],[Z,t.SPLASH],[Z,t.SWEET_KISS],[Z,t.CHARM],[Z,t.ENCORE],[Z,t.MOONLIGHT],[Z,t.FOLLOW_ME],[Z,t.COSMIC_POWER],[Z,t.GRAVITY],[Z,t.HEALING_WISH],[Z,t.COPYCAT],[Z,t.AFTER_YOU],[Z,t.STORED_POWER],[Z,t.DISARMING_VOICE],[1,t.METRONOME],[1,t.METEOR_MASH],[1,t.MOONBLAST],[1,t.LIFE_DEW],[1,t.SPOTLIGHT]],[e.VULPIX]:[[1,t.TAIL_WHIP],[1,t.EMBER],[4,t.DISABLE],[8,t.QUICK_ATTACK],[12,t.SPITE],[16,t.INCINERATE],[20,t.CONFUSE_RAY],[24,t.WILL_O_WISP],[28,t.EXTRASENSORY],[32,t.FLAMETHROWER],[36,t.IMPRISON],[40,t.FIRE_SPIN],[44,t.SAFEGUARD],[48,t.INFERNO],[52,t.FIRE_BLAST]],[e.NINETALES]:[[Z,t.DISABLE],[Z,t.EMBER],[Z,t.FIRE_SPIN],[Z,t.CONFUSE_RAY],[Z,t.FIRE_BLAST],[Z,t.SPITE],[Z,t.SAFEGUARD],[Z,t.WILL_O_WISP],[Z,t.IMPRISON],[Z,t.EXTRASENSORY],[Z,t.NASTY_PLOT],[Z,t.INCINERATE],[Z,t.INFERNO],[1,t.FLAMETHROWER],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK]],[e.JIGGLYPUFF]:[[1,t.POUND],[1,t.SING],[1,t.DISABLE],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.ECHOED_VOICE],[8,t.COVET],[12,t.STOCKPILE],[12,t.SPIT_UP],[12,t.SWALLOW],[16,t.ROUND],[20,t.REST],[24,t.BODY_SLAM],[28,t.MIMIC],[32,t.GYRO_BALL],[36,t.HYPER_VOICE],[44,t.DOUBLE_EDGE]],[e.WIGGLYTUFF]:[[1,t.POUND],[1,t.BODY_SLAM],[1,t.DOUBLE_EDGE],[1,t.SING],[1,t.DISABLE],[1,t.MIMIC],[1,t.DEFENSE_CURL],[1,t.REST],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.STOCKPILE],[1,t.SPIT_UP],[1,t.SWALLOW],[1,t.HYPER_VOICE],[1,t.COVET],[1,t.GYRO_BALL],[1,t.COPYCAT],[1,t.ROUND],[1,t.ECHOED_VOICE],[1,t.DISARMING_VOICE],[5,t.PLAY_ROUGH]],[e.ZUBAT]:[[1,t.SUPERSONIC],[1,t.ABSORB],[5,t.ASTONISH],[10,t.MEAN_LOOK],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[25,t.AIR_CUTTER],[30,t.BITE],[35,t.HAZE],[40,t.VENOSHOCK],[45,t.CONFUSE_RAY],[50,t.AIR_SLASH],[55,t.LEECH_LIFE]],[e.GOLBAT]:[[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.SCREECH],[1,t.MEAN_LOOK],[1,t.ASTONISH],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[27,t.AIR_CUTTER],[34,t.BITE],[41,t.HAZE],[48,t.VENOSHOCK],[55,t.CONFUSE_RAY],[62,t.AIR_SLASH],[69,t.LEECH_LIFE]],[e.ODDISH]:[[1,t.ABSORB],[1,t.GROWTH],[4,t.ACID],[8,t.SWEET_SCENT],[12,t.MEGA_DRAIN],[14,t.POISON_POWDER],[16,t.STUN_SPORE],[18,t.SLEEP_POWDER],[20,t.GIGA_DRAIN],[24,t.TOXIC],[28,t.MOONBLAST],[32,t.GRASSY_TERRAIN],[36,t.MOONLIGHT],[40,t.PETAL_DANCE]],[e.GLOOM]:[[1,t.ACID],[1,t.ABSORB],[1,t.GROWTH],[1,t.SWEET_SCENT],[12,t.MEGA_DRAIN],[14,t.POISON_POWDER],[16,t.STUN_SPORE],[18,t.SLEEP_POWDER],[20,t.GIGA_DRAIN],[26,t.TOXIC],[32,t.MOONBLAST],[38,t.GRASSY_TERRAIN],[44,t.MOONLIGHT],[50,t.PETAL_DANCE]],[e.VILEPLUME]:[[Ae,t.PETAL_BLIZZARD],[1,t.ACID],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.MOONLIGHT],[1,t.AROMATHERAPY],[1,t.GRASSY_TERRAIN],[1,t.MOONBLAST]],[e.PARAS]:[[1,t.SCRATCH],[6,t.POISON_POWDER],[6,t.STUN_SPORE],[11,t.ABSORB],[17,t.FURY_CUTTER],[22,t.SPORE],[27,t.SLASH],[33,t.GROWTH],[38,t.GIGA_DRAIN],[43,t.AROMATHERAPY],[49,t.RAGE_POWDER],[54,t.X_SCISSOR]],[e.PARASECT]:[[1,t.SCRATCH],[1,t.ABSORB],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.CROSS_POISON],[6,t.POISON_POWDER],[6,t.STUN_SPORE],[11,t.ABSORB],[17,t.FURY_CUTTER],[22,t.SPORE],[29,t.SLASH],[37,t.GROWTH],[44,t.GIGA_DRAIN],[51,t.AROMATHERAPY],[59,t.RAGE_POWDER],[66,t.X_SCISSOR]],[e.VENONAT]:[[1,t.TACKLE],[1,t.DISABLE],[5,t.SUPERSONIC],[11,t.CONFUSION],[13,t.POISON_POWDER],[17,t.PSYBEAM],[23,t.STUN_SPORE],[25,t.BUG_BUZZ],[29,t.SLEEP_POWDER],[35,t.LEECH_LIFE],[37,t.ZEN_HEADBUTT],[41,t.POISON_FANG],[47,t.PSYCHIC]],[e.VENOMOTH]:[[Ae,t.AIR_SLASH],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.DISABLE],[1,t.QUIVER_DANCE],[1,t.SILVER_WIND],[11,t.CONFUSION],[13,t.POISON_POWDER],[17,t.PSYBEAM],[23,t.STUN_SPORE],[25,t.BUG_BUZZ],[29,t.SLEEP_POWDER],[37,t.LEECH_LIFE],[41,t.ZEN_HEADBUTT],[47,t.POISON_FANG],[55,t.PSYCHIC]],[e.DIGLETT]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[4,t.GROWL],[8,t.ASTONISH],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.SLASH],[28,t.SANDSTORM],[32,t.DIG],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.FISSURE]],[e.DUGTRIO]:[[Ae,t.SAND_TOMB],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.TRI_ATTACK],[1,t.ASTONISH],[1,t.NIGHT_SLASH],[1,t.ROTOTILLER],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.SLASH],[30,t.SANDSTORM],[36,t.DIG],[42,t.EARTH_POWER],[48,t.EARTHQUAKE],[54,t.FISSURE]],[e.MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.FEINT],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.SLASH],[40,t.NASTY_PLOT],[44,t.PLAY_ROUGH]],[e.PERSIAN]:[[Ae,t.POWER_GEM],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.FEINT],[1,t.SWITCHEROO],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.SLASH],[48,t.NASTY_PLOT],[54,t.PLAY_ROUGH]],[e.PSYDUCK]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.WATER_SPORT],[3,t.WATER_GUN],[6,t.CONFUSION],[9,t.FURY_SWIPES],[12,t.WATER_PULSE],[15,t.DISABLE],[18,t.ZEN_HEADBUTT],[21,t.SCREECH],[24,t.AQUA_TAIL],[27,t.SOAK],[30,t.PSYCH_UP],[34,t.AMNESIA],[39,t.WONDER_ROOM]],[e.GOLDUCK]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.CONFUSION],[1,t.AQUA_JET],[1,t.WATER_SPORT],[1,t.ME_FIRST],[9,t.FURY_SWIPES],[12,t.WATER_PULSE],[15,t.DISABLE],[18,t.ZEN_HEADBUTT],[21,t.SCREECH],[24,t.AQUA_TAIL],[27,t.SOAK],[30,t.PSYCH_UP],[36,t.AMNESIA],[40,t.HYDRO_PUMP],[45,t.WONDER_ROOM]],[e.MANKEY]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.COVET],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[12,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[29,t.THRASH],[33,t.CLOSE_COMBAT],[36,t.SCREECH],[40,t.STOMPING_TANTRUM],[44,t.OUTRAGE],[48,t.FINAL_GAMBIT]],[e.PRIMEAPE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.COVET],[1,t.FLING],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[15,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[30,t.THRASH],[35,t.RAGE_FIST],[39,t.CLOSE_COMBAT],[44,t.SCREECH],[48,t.STOMPING_TANTRUM],[53,t.OUTRAGE],[57,t.FINAL_GAMBIT]],[e.GROWLITHE]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.BITE],[12,t.FLAME_WHEEL],[16,t.HELPING_HAND],[20,t.AGILITY],[24,t.FIRE_FANG],[28,t.RETALIATE],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FLAMETHROWER],[44,t.ROAR],[48,t.PLAY_ROUGH],[52,t.REVERSAL],[56,t.FLARE_BLITZ]],[e.ARCANINE]:[[Ae,t.EXTREME_SPEED],[1,t.TAKE_DOWN],[1,t.LEER],[1,t.BITE],[1,t.ROAR],[1,t.EMBER],[1,t.AGILITY],[1,t.FLAME_WHEEL],[1,t.REVERSAL],[1,t.CRUNCH],[1,t.HELPING_HAND],[1,t.ODOR_SLEUTH],[1,t.HOWL],[1,t.FLARE_BLITZ],[1,t.FIRE_FANG],[1,t.RETALIATE],[1,t.PLAY_ROUGH],[5,t.FLAMETHROWER]],[e.POLIWAG]:[[1,t.WATER_GUN],[1,t.HYPNOSIS],[1,t.WATER_SPORT],[6,t.POUND],[12,t.MUD_SHOT],[18,t.BUBBLE_BEAM],[24,t.RAIN_DANCE],[30,t.BODY_SLAM],[36,t.EARTH_POWER],[42,t.HYDRO_PUMP],[48,t.BELLY_DRUM],[54,t.DOUBLE_EDGE]],[e.POLIWHIRL]:[[1,t.POUND],[1,t.WATER_GUN],[1,t.HYPNOSIS],[1,t.WATER_SPORT],[1,t.MUD_SHOT],[18,t.BUBBLE_BEAM],[24,t.RAIN_DANCE],[32,t.BODY_SLAM],[40,t.EARTH_POWER],[48,t.HYDRO_PUMP],[56,t.BELLY_DRUM],[66,t.DOUBLE_EDGE]],[e.POLIWRATH]:[[Ae,t.DYNAMIC_PUNCH],[Z,t.POUND],[Z,t.DOUBLE_EDGE],[Z,t.WATER_GUN],[Z,t.HYDRO_PUMP],[Z,t.BELLY_DRUM],[Z,t.RAIN_DANCE],[Z,t.MUD_SHOT],[Z,t.EARTH_POWER],[Z,t.CIRCLE_THROW],[1,t.BUBBLE_BEAM],[1,t.BODY_SLAM],[1,t.HYPNOSIS],[1,t.WATER_SPORT]],[e.ABRA]:[[1,t.TELEPORT],[1,t.CONFUSION]],[e.KADABRA]:[[Ae,t.PSYBEAM],[1,t.CONFUSION],[1,t.DISABLE],[1,t.TELEPORT],[1,t.KINESIS],[10,t.REFLECT],[15,t.ALLY_SWITCH],[20,t.PSYCHO_CUT],[25,t.RECOVER],[30,t.PSYSHOCK],[35,t.PSYCHIC],[40,t.ROLE_PLAY],[45,t.FUTURE_SIGHT],[50,t.CALM_MIND]],[e.ALAKAZAM]:[[1,t.DISABLE],[1,t.CONFUSION],[1,t.TELEPORT],[1,t.KINESIS],[5,t.PSYBEAM],[10,t.REFLECT],[15,t.ALLY_SWITCH],[20,t.PSYCHO_CUT],[25,t.RECOVER],[30,t.PSYSHOCK],[35,t.PSYCHIC],[40,t.ROLE_PLAY],[45,t.FUTURE_SIGHT],[50,t.CALM_MIND]],[e.MACHOP]:[[1,t.LEER],[1,t.LOW_KICK],[4,t.FOCUS_ENERGY],[8,t.REVENGE],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[29,t.STRENGTH],[32,t.DUAL_CHOP],[36,t.BULK_UP],[40,t.SEISMIC_TOSS],[44,t.DYNAMIC_PUNCH],[48,t.CROSS_CHOP],[52,t.DOUBLE_EDGE]],[e.MACHOKE]:[[1,t.LEER],[1,t.LOW_KICK],[1,t.FOCUS_ENERGY],[1,t.REVENGE],[1,t.KARATE_CHOP],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[31,t.STRENGTH],[36,t.DUAL_CHOP],[42,t.BULK_UP],[48,t.SEISMIC_TOSS],[54,t.DYNAMIC_PUNCH],[60,t.CROSS_CHOP],[66,t.DOUBLE_EDGE]],[e.MACHAMP]:[[1,t.LEER],[1,t.LOW_KICK],[1,t.FOCUS_ENERGY],[1,t.REVENGE],[1,t.WIDE_GUARD],[1,t.KARATE_CHOP],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[31,t.STRENGTH],[36,t.DUAL_CHOP],[42,t.BULK_UP],[48,t.SEISMIC_TOSS],[54,t.DYNAMIC_PUNCH],[60,t.CROSS_CHOP],[66,t.DOUBLE_EDGE]],[e.BELLSPROUT]:[[1,t.VINE_WHIP],[7,t.GROWTH],[11,t.WRAP],[13,t.SLEEP_POWDER],[15,t.POISON_POWDER],[17,t.STUN_SPORE],[23,t.ACID],[27,t.KNOCK_OFF],[29,t.SWEET_SCENT],[35,t.GASTRO_ACID],[39,t.RAZOR_LEAF],[41,t.POISON_JAB],[47,t.SLAM],[52,t.POWER_WHIP]],[e.WEEPINBELL]:[[1,t.VINE_WHIP],[1,t.WRAP],[1,t.GROWTH],[13,t.SLEEP_POWDER],[15,t.POISON_POWDER],[17,t.STUN_SPORE],[24,t.ACID],[29,t.KNOCK_OFF],[32,t.SWEET_SCENT],[39,t.GASTRO_ACID],[44,t.RAZOR_LEAF],[47,t.POISON_JAB],[54,t.SLAM],[58,t.POWER_WHIP]],[e.VICTREEBEL]:[[Ae,t.LEAF_STORM],[Z,t.STOCKPILE],[Z,t.SWALLOW],[Z,t.SPIT_UP],[Z,t.WRAP],[Z,t.GROWTH],[Z,t.ACID],[Z,t.KNOCK_OFF],[Z,t.GASTRO_ACID],[Z,t.POISON_JAB],[Z,t.SLAM],[Z,t.POWER_WHIP],[1,t.VINE_WHIP],[1,t.SLEEP_POWDER],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SWEET_SCENT],[1,t.RAZOR_LEAF],[44,t.LEAF_BLADE]],[e.TENTACOOL]:[[1,t.POISON_STING],[1,t.WATER_GUN],[4,t.ACID],[8,t.WRAP],[12,t.SUPERSONIC],[16,t.WATER_PULSE],[20,t.SCREECH],[24,t.BUBBLE_BEAM],[28,t.HEX],[32,t.ACID_ARMOR],[36,t.POISON_JAB],[40,t.SURF],[44,t.SLUDGE_WAVE],[48,t.HYDRO_PUMP]],[e.TENTACRUEL]:[[1,t.WRAP],[1,t.POISON_STING],[1,t.ACID],[1,t.WATER_GUN],[1,t.REFLECT_TYPE],[1,t.WRING_OUT],[12,t.SUPERSONIC],[16,t.WATER_PULSE],[20,t.SCREECH],[24,t.BUBBLE_BEAM],[28,t.HEX],[34,t.ACID_ARMOR],[40,t.POISON_JAB],[46,t.SURF],[52,t.SLUDGE_WAVE],[58,t.HYDRO_PUMP]],[e.GEODUDE]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[6,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.BULLDOZE],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[24,t.SELF_DESTRUCT],[28,t.STEALTH_ROCK],[30,t.ROCK_BLAST],[34,t.EARTHQUAKE],[36,t.EXPLOSION],[40,t.DOUBLE_EDGE],[42,t.STONE_EDGE]],[e.GRAVELER]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.BULLDOZE],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.EARTHQUAKE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.GOLEM]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.ROCK_POLISH],[1,t.ROLLOUT],[1,t.HEAVY_SLAM],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.BULLDOZE],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.EARTHQUAKE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.PONYTA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.TAIL_WHIP],[10,t.EMBER],[15,t.FLAME_CHARGE],[20,t.AGILITY],[25,t.FLAME_WHEEL],[30,t.STOMP],[35,t.FIRE_SPIN],[41,t.TAKE_DOWN],[45,t.INFERNO],[50,t.FIRE_BLAST],[55,t.FLARE_BLITZ]],[e.RAPIDASH]:[[Ae,t.SMART_STRIKE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[1,t.MEGAHORN],[1,t.POISON_JAB],[15,t.FLAME_CHARGE],[20,t.AGILITY],[25,t.FLAME_WHEEL],[30,t.STOMP],[35,t.FIRE_SPIN],[43,t.TAKE_DOWN],[49,t.INFERNO],[56,t.FIRE_BLAST],[63,t.FLARE_BLITZ]],[e.SLOWPOKE]:[[1,t.TACKLE],[1,t.CURSE],[3,t.GROWL],[6,t.WATER_GUN],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.SLOWBRO]:[[Z,t.FUTURE_SIGHT],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.CURSE],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[41,t.PSYCH_UP],[46,t.RAIN_DANCE],[51,t.HEAL_PULSE]],[e.MAGNEMITE]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[4,t.SUPERSONIC],[8,t.THUNDER_WAVE],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[32,t.FLASH_CANNON],[36,t.DISCHARGE],[40,t.METAL_SOUND],[44,t.LIGHT_SCREEN],[48,t.LOCK_ON],[52,t.ZAP_CANNON]],[e.MAGNETON]:[[Ae,t.TRI_ATTACK],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ELECTRIC_TERRAIN],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[34,t.FLASH_CANNON],[40,t.DISCHARGE],[46,t.METAL_SOUND],[52,t.LIGHT_SCREEN],[58,t.LOCK_ON],[64,t.ZAP_CANNON]],[e.FARFETCHD]:[[1,t.SAND_ATTACK],[1,t.PECK],[5,t.LEER],[10,t.FURY_CUTTER],[15,t.CUT],[20,t.AERIAL_ACE],[25,t.AIR_CUTTER],[30,t.KNOCK_OFF],[35,t.FALSE_SWIPE],[40,t.SLASH],[45,t.SWORDS_DANCE],[50,t.AIR_SLASH],[55,t.LEAF_BLADE],[60,t.AGILITY],[65,t.BRAVE_BIRD]],[e.DODUO]:[[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[9,t.FURY_ATTACK],[14,t.PLUCK],[19,t.DOUBLE_HIT],[23,t.AGILITY],[27,t.UPROAR],[30,t.ACUPRESSURE],[33,t.SWORDS_DANCE],[36,t.DRILL_PECK],[39,t.ENDEAVOR],[43,t.THRASH]],[e.DODRIO]:[[Ae,t.TRI_ATTACK],[1,t.TRI_ATTACK],[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[12,t.FURY_ATTACK],[15,t.PLUCK],[19,t.DOUBLE_HIT],[23,t.AGILITY],[26,t.UPROAR],[30,t.ACUPRESSURE],[34,t.SWORDS_DANCE],[38,t.DRILL_PECK],[43,t.ENDEAVOR],[50,t.THRASH]],[e.SEEL]:[[1,t.HEADBUTT],[3,t.GROWL],[7,t.CHARM],[11,t.ICY_WIND],[13,t.ENCORE],[17,t.ICE_SHARD],[21,t.REST],[23,t.AQUA_RING],[27,t.AURORA_BEAM],[31,t.AQUA_JET],[33,t.BRINE],[37,t.TAKE_DOWN],[41,t.DIVE],[43,t.AQUA_TAIL],[47,t.ICE_BEAM],[51,t.SAFEGUARD],[53,t.SNOWSCAPE]],[e.DEWGONG]:[[Ae,t.SHEER_COLD],[1,t.HEADBUTT],[1,t.GROWL],[1,t.ICY_WIND],[1,t.CHARM],[1,t.SIGNAL_BEAM],[13,t.ENCORE],[17,t.ICE_SHARD],[21,t.REST],[23,t.AQUA_RING],[27,t.AURORA_BEAM],[31,t.AQUA_JET],[33,t.BRINE],[39,t.TAKE_DOWN],[45,t.DIVE],[49,t.AQUA_TAIL],[55,t.ICE_BEAM],[61,t.SAFEGUARD],[65,t.SNOWSCAPE]],[e.GRIMER]:[[1,t.POUND],[1,t.POISON_GAS],[4,t.HARDEN],[7,t.MUD_SLAP],[12,t.DISABLE],[15,t.SLUDGE],[18,t.MUD_SHOT],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.SLUDGE_BOMB],[32,t.SLUDGE_WAVE],[37,t.SCREECH],[40,t.GUNK_SHOT],[43,t.ACID_ARMOR],[46,t.BELCH],[48,t.MEMENTO]],[e.MUK]:[[1,t.POUND],[1,t.HARDEN],[1,t.POISON_GAS],[1,t.MUD_SLAP],[12,t.DISABLE],[15,t.SLUDGE],[18,t.MUD_SHOT],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.SLUDGE_BOMB],[32,t.SLUDGE_WAVE],[37,t.SCREECH],[40,t.GUNK_SHOT],[46,t.ACID_ARMOR],[52,t.BELCH],[57,t.MEMENTO]],[e.SHELLDER]:[[1,t.TACKLE],[1,t.WATER_GUN],[4,t.WITHDRAW],[8,t.ICE_SHARD],[12,t.LEER],[16,t.WHIRLPOOL],[20,t.SUPERSONIC],[24,t.AURORA_BEAM],[28,t.PROTECT],[32,t.RAZOR_SHELL],[36,t.IRON_DEFENSE],[40,t.ICE_BEAM],[44,t.SHELL_SMASH],[48,t.HYDRO_PUMP]],[e.CLOYSTER]:[[Ae,t.ICICLE_SPEAR],[1,t.TACKLE],[1,t.LEER],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.HYDRO_PUMP],[1,t.ICE_BEAM],[1,t.AURORA_BEAM],[1,t.WITHDRAW],[1,t.PROTECT],[1,t.SPIKES],[1,t.WHIRLPOOL],[1,t.IRON_DEFENSE],[1,t.TOXIC_SPIKES],[1,t.ICE_SHARD],[1,t.SHELL_SMASH],[1,t.ICICLE_CRASH],[5,t.RAZOR_SHELL]],[e.GASTLY]:[[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[4,t.HYPNOSIS],[8,t.MEAN_LOOK],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[28,t.NIGHT_SHADE],[32,t.SUCKER_PUNCH],[36,t.DARK_PULSE],[40,t.SHADOW_BALL],[44,t.DESTINY_BOND],[48,t.DREAM_EATER]],[e.HAUNTER]:[[Ae,t.SHADOW_PUNCH],[1,t.HYPNOSIS],[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[1,t.MEAN_LOOK],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[30,t.NIGHT_SHADE],[36,t.SUCKER_PUNCH],[42,t.DARK_PULSE],[48,t.SHADOW_BALL],[54,t.DESTINY_BOND],[60,t.DREAM_EATER]],[e.GENGAR]:[[1,t.HYPNOSIS],[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[1,t.PERISH_SONG],[1,t.MEAN_LOOK],[1,t.SHADOW_PUNCH],[1,t.REFLECT_TYPE],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[30,t.NIGHT_SHADE],[36,t.SUCKER_PUNCH],[42,t.DARK_PULSE],[48,t.SHADOW_BALL],[54,t.DESTINY_BOND],[60,t.DREAM_EATER]],[e.ONIX]:[[1,t.BIND],[1,t.TACKLE],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.MUD_SPORT],[4,t.SMACK_DOWN],[8,t.ROCK_POLISH],[12,t.DRAGON_BREATH],[16,t.CURSE],[20,t.ROCK_SLIDE],[22,t.GYRO_BALL],[24,t.SCREECH],[28,t.SAND_TOMB],[32,t.STEALTH_ROCK],[36,t.SLAM],[40,t.SANDSTORM],[44,t.DIG],[48,t.IRON_TAIL],[52,t.STONE_EDGE],[56,t.DOUBLE_EDGE]],[e.DROWZEE]:[[1,t.POUND],[1,t.HYPNOSIS],[5,t.DISABLE],[9,t.CONFUSION],[13,t.HEADBUTT],[17,t.POISON_GAS],[21,t.PSYBEAM],[25,t.PSYCH_UP],[29,t.ZEN_HEADBUTT],[33,t.SWAGGER],[37,t.PSYCHIC],[41,t.NASTY_PLOT],[45,t.PSYSHOCK],[49,t.FUTURE_SIGHT]],[e.HYPNO]:[[1,t.POUND],[1,t.DISABLE],[1,t.CONFUSION],[1,t.HYPNOSIS],[1,t.SWITCHEROO],[1,t.NIGHTMARE],[13,t.HEADBUTT],[17,t.POISON_GAS],[21,t.PSYBEAM],[25,t.PSYCH_UP],[32,t.ZEN_HEADBUTT],[37,t.SWAGGER],[42,t.PSYCHIC],[47,t.NASTY_PLOT],[51,t.PSYSHOCK],[56,t.FUTURE_SIGHT]],[e.KRABBY]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.MUD_SPORT],[4,t.HARDEN],[8,t.METAL_CLAW],[12,t.MUD_SHOT],[16,t.PROTECT],[20,t.BUBBLE_BEAM],[24,t.STOMP],[29,t.FLAIL],[32,t.RAZOR_SHELL],[36,t.SLAM],[40,t.SWORDS_DANCE],[44,t.CRABHAMMER],[48,t.GUILLOTINE]],[e.KINGLER]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.HAMMER_ARM],[1,t.WIDE_GUARD],[1,t.MUD_SPORT],[12,t.MUD_SHOT],[16,t.PROTECT],[20,t.BUBBLE_BEAM],[24,t.STOMP],[31,t.FLAIL],[36,t.RAZOR_SHELL],[42,t.SLAM],[48,t.SWORDS_DANCE],[54,t.CRABHAMMER],[60,t.GUILLOTINE]],[e.VOLTORB]:[[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.EERIE_IMPULSE],[9,t.SPARK],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.LIGHT_SCREEN],[34,t.MAGNET_RISE],[37,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.MIRROR_COAT]],[e.ELECTRODE]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.EERIE_IMPULSE],[1,t.MAGNETIC_FLUX],[9,t.SPARK],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.LIGHT_SCREEN],[36,t.MAGNET_RISE],[41,t.DISCHARGE],[47,t.EXPLOSION],[54,t.GYRO_BALL],[58,t.MIRROR_COAT]],[e.EXEGGCUTE]:[[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.BARRAGE],[5,t.REFLECT],[10,t.LEECH_SEED],[15,t.MEGA_DRAIN],[20,t.CONFUSION],[25,t.SYNTHESIS],[30,t.BULLET_SEED],[35,t.GIGA_DRAIN],[40,t.EXTRASENSORY],[45,t.UPROAR],[50,t.WORRY_SEED],[55,t.SOLAR_BEAM]],[e.EXEGGUTOR]:[[Ae,t.STOMP],[Z,t.GROWTH],[1,t.BARRAGE],[1,t.SEED_BOMB],[1,t.PSYSHOCK],[1,t.WOOD_HAMMER],[1,t.LEAF_STORM],[1,t.MEGA_DRAIN],[1,t.CONFUSION],[1,t.SYNTHESIS],[1,t.BULLET_SEED],[1,t.GIGA_DRAIN],[1,t.EXTRASENSORY],[1,t.UPROAR],[1,t.WORRY_SEED],[1,t.SOLAR_BEAM],[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.REFLECT],[1,t.LEECH_SEED]],[e.CUBONE]:[[1,t.GROWL],[1,t.MUD_SLAP],[4,t.TAIL_WHIP],[8,t.FALSE_SWIPE],[12,t.HEADBUTT],[16,t.RETALIATE],[20,t.FLING],[24,t.STOMPING_TANTRUM],[29,t.BONE_RUSH],[32,t.FOCUS_ENERGY],[36,t.ENDEAVOR],[40,t.BONEMERANG],[44,t.THRASH],[48,t.DOUBLE_EDGE]],[e.MAROWAK]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.MUD_SLAP],[1,t.FALSE_SWIPE],[1,t.BONE_CLUB],[12,t.HEADBUTT],[16,t.RETALIATE],[20,t.FLING],[24,t.STOMPING_TANTRUM],[31,t.BONE_RUSH],[36,t.FOCUS_ENERGY],[42,t.ENDEAVOR],[48,t.BONEMERANG],[54,t.THRASH],[60,t.DOUBLE_EDGE]],[e.HITMONLEE]:[[Ae,t.BRICK_BREAK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.LOW_SWEEP],[1,t.JUMP_KICK],[1,t.ROLLING_KICK],[1,t.MACH_PUNCH],[1,t.RAPID_SPIN],[4,t.DOUBLE_KICK],[8,t.LOW_KICK],[12,t.ENDURE],[16,t.SUCKER_PUNCH],[21,t.WIDE_GUARD],[24,t.BLAZE_KICK],[28,t.FEINT],[32,t.MEGA_KICK],[36,t.CLOSE_COMBAT],[40,t.REVERSAL],[44,t.HIGH_JUMP_KICK],[50,t.AXE_KICK]],[e.HITMONCHAN]:[[Ae,t.DRAIN_PUNCH],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.PURSUIT],[1,t.COMET_PUNCH],[1,t.LOW_SWEEP],[1,t.RAPID_SPIN],[4,t.MACH_PUNCH],[8,t.VACUUM_WAVE],[12,t.DETECT],[16,t.BULLET_PUNCH],[21,t.QUICK_GUARD],[24,t.THUNDER_PUNCH],[24,t.ICE_PUNCH],[24,t.FIRE_PUNCH],[28,t.AGILITY],[32,t.MEGA_PUNCH],[36,t.CLOSE_COMBAT],[40,t.COUNTER],[44,t.FOCUS_PUNCH]],[e.LICKITUNG]:[[1,t.DEFENSE_CURL],[1,t.LICK],[1,t.TACKLE],[6,t.REST],[12,t.SUPERSONIC],[18,t.WRAP],[24,t.DISABLE],[30,t.STOMP],[32,t.ROLLOUT],[36,t.KNOCK_OFF],[42,t.SCREECH],[48,t.SLAM],[54,t.POWER_WHIP],[60,t.BELLY_DRUM]],[e.KOFFING]:[[1,t.TACKLE],[1,t.POISON_GAS],[4,t.SMOG],[8,t.SMOKESCREEN],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.HAZE],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[36,t.TOXIC],[40,t.BELCH],[44,t.EXPLOSION],[48,t.MEMENTO],[52,t.DESTINY_BOND]],[e.WEEZING]:[[Ae,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.SMOG],[1,t.POISON_GAS],[1,t.HEAT_WAVE],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.HAZE],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[38,t.TOXIC],[44,t.BELCH],[50,t.EXPLOSION],[56,t.MEMENTO],[62,t.DESTINY_BOND]],[e.RHYHORN]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.SMACK_DOWN],[10,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[45,t.EARTHQUAKE],[50,t.STONE_EDGE],[55,t.MEGAHORN],[60,t.HORN_DRILL]],[e.RHYDON]:[[Ae,t.HAMMER_ARM],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SMACK_DOWN],[1,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[47,t.EARTHQUAKE],[54,t.STONE_EDGE],[61,t.MEGAHORN],[68,t.HORN_DRILL]],[e.CHANSEY]:[[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COVET],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.TAIL_WHIP],[8,t.ECHOED_VOICE],[12,t.LIFE_DEW],[16,t.SING],[20,t.FLING],[24,t.TAKE_DOWN],[28,t.HEAL_PULSE],[32,t.HELPING_HAND],[36,t.LIGHT_SCREEN],[40,t.DOUBLE_EDGE],[44,t.SOFT_BOILED],[48,t.LAST_RESORT],[52,t.HEALING_WISH]],[e.TANGELA]:[[1,t.BIND],[1,t.ABSORB],[1,t.CONSTRICT],[4,t.STUN_SPORE],[8,t.GROWTH],[12,t.MEGA_DRAIN],[16,t.VINE_WHIP],[20,t.POISON_POWDER],[24,t.DOUBLE_HIT],[28,t.KNOCK_OFF],[32,t.GIGA_DRAIN],[34,t.ANCIENT_POWER],[36,t.SLEEP_POWDER],[40,t.SLAM],[44,t.TICKLE],[48,t.POWER_WHIP],[52,t.INGRAIN],[56,t.GRASSY_TERRAIN]],[e.KANGASKHAN]:[[1,t.POUND],[1,t.TAIL_WHIP],[1,t.COMET_PUNCH],[4,t.GROWL],[8,t.FAKE_OUT],[12,t.BITE],[16,t.STOMP],[20,t.FOCUS_ENERGY],[24,t.HEADBUTT],[28,t.SUCKER_PUNCH],[32,t.DOUBLE_HIT],[36,t.CRUNCH],[40,t.ENDURE],[44,t.REVERSAL],[48,t.OUTRAGE],[52,t.LAST_RESORT]],[e.HORSEA]:[[1,t.LEER],[1,t.WATER_GUN],[5,t.SMOKESCREEN],[10,t.TWISTER],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[35,t.LASER_FOCUS],[40,t.DRAGON_PULSE],[45,t.HYDRO_PUMP],[50,t.DRAGON_DANCE],[55,t.RAIN_DANCE]],[e.SEADRA]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.TWISTER],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[37,t.LASER_FOCUS],[44,t.DRAGON_PULSE],[51,t.HYDRO_PUMP],[58,t.DRAGON_DANCE],[65,t.RAIN_DANCE]],[e.GOLDEEN]:[[1,t.TAIL_WHIP],[1,t.PECK],[1,t.WATER_SPORT],[5,t.SUPERSONIC],[10,t.WATER_PULSE],[15,t.HORN_ATTACK],[20,t.AGILITY],[25,t.AQUA_RING],[30,t.FLAIL],[35,t.WATERFALL],[40,t.SOAK],[45,t.MEGAHORN],[50,t.HORN_DRILL]],[e.SEAKING]:[[1,t.TAIL_WHIP],[1,t.SUPERSONIC],[1,t.WATER_SPORT],[1,t.PECK],[1,t.WATER_PULSE],[15,t.HORN_ATTACK],[20,t.AGILITY],[25,t.AQUA_RING],[30,t.FLAIL],[37,t.WATERFALL],[44,t.SOAK],[51,t.MEGAHORN],[58,t.HORN_DRILL]],[e.STARYU]:[[1,t.TACKLE],[1,t.HARDEN],[4,t.WATER_GUN],[8,t.CONFUSE_RAY],[12,t.RAPID_SPIN],[16,t.MINIMIZE],[20,t.SWIFT],[24,t.PSYBEAM],[28,t.BRINE],[32,t.LIGHT_SCREEN],[36,t.POWER_GEM],[40,t.PSYCHIC],[44,t.SURF],[48,t.RECOVER],[52,t.COSMIC_POWER],[56,t.HYDRO_PUMP]],[e.STARMIE]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.HYDRO_PUMP],[1,t.SURF],[1,t.PSYBEAM],[1,t.PSYCHIC],[1,t.RECOVER],[1,t.HARDEN],[1,t.MINIMIZE],[1,t.CONFUSE_RAY],[1,t.LIGHT_SCREEN],[1,t.SWIFT],[1,t.SPOTLIGHT],[1,t.RAPID_SPIN],[1,t.COSMIC_POWER],[1,t.BRINE],[1,t.POWER_GEM]],[e.MR_MIME]:[[1,t.POUND],[1,t.TICKLE],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.COPYCAT],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[1,t.WIDE_GUARD],[1,t.QUICK_GUARD],[1,t.BARRIER],[12,t.CONFUSION],[16,t.ROLE_PLAY],[20,t.PROTECT],[24,t.RECYCLE],[28,t.PSYBEAM],[32,t.MIMIC],[36,t.LIGHT_SCREEN],[36,t.REFLECT],[36,t.SAFEGUARD],[40,t.SUCKER_PUNCH],[44,t.DAZZLING_GLEAM],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.SCYTHER]:[[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.FURY_CUTTER],[8,t.FALSE_SWIPE],[12,t.WING_ATTACK],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.AGILITY],[36,t.AIR_SLASH],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.JYNX]:[[1,t.POUND],[1,t.LICK],[1,t.POWDER_SNOW],[1,t.SWEET_KISS],[1,t.COPYCAT],[12,t.CONFUSION],[16,t.COVET],[20,t.SING],[24,t.FAKE_TEARS],[28,t.ICE_PUNCH],[34,t.PSYCHIC],[40,t.LOVELY_KISS],[46,t.MEAN_LOOK],[52,t.PERISH_SONG],[58,t.BLIZZARD]],[e.ELECTABUZZ]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.CHARGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[34,t.DISCHARGE],[40,t.LOW_KICK],[46,t.THUNDERBOLT],[52,t.LIGHT_SCREEN],[58,t.THUNDER],[64,t.GIGA_IMPACT]],[e.MAGMAR]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.SMOG],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[34,t.LAVA_PLUME],[40,t.LOW_KICK],[46,t.FLAMETHROWER],[52,t.SUNNY_DAY],[58,t.FIRE_BLAST],[64,t.HYPER_BEAM]],[e.PINSIR]:[[1,t.VISE_GRIP],[1,t.HARDEN],[4,t.FOCUS_ENERGY],[8,t.BIND],[12,t.SEISMIC_TOSS],[16,t.BUG_BITE],[20,t.STORM_THROW],[24,t.DOUBLE_HIT],[28,t.VITAL_THROW],[32,t.X_SCISSOR],[36,t.STRENGTH],[40,t.SWORDS_DANCE],[44,t.SUBMISSION],[48,t.GUILLOTINE],[52,t.SUPERPOWER]],[e.TAUROS]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.PAYBACK],[15,t.ASSURANCE],[20,t.HORN_ATTACK],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.DOUBLE_EDGE],[60,t.GIGA_IMPACT]],[e.MAGIKARP]:[[1,t.SPLASH],[15,t.TACKLE],[25,t.FLAIL]],[e.GYARADOS]:[[Ae,t.BITE],[1,t.TACKLE],[1,t.LEER],[1,t.SPLASH],[1,t.FLAIL],[1,t.TWISTER],[4,t.WHIRLPOOL],[8,t.ICE_FANG],[12,t.BRINE],[16,t.SCARY_FACE],[21,t.WATERFALL],[24,t.CRUNCH],[28,t.RAIN_DANCE],[32,t.AQUA_TAIL],[36,t.DRAGON_DANCE],[40,t.HYDRO_PUMP],[44,t.HURRICANE],[48,t.THRASH],[52,t.HYPER_BEAM]],[e.LAPRAS]:[[1,t.GROWL],[1,t.WATER_GUN],[5,t.SING],[10,t.MIST],[15,t.LIFE_DEW],[20,t.ICE_SHARD],[25,t.CONFUSE_RAY],[30,t.WATER_PULSE],[35,t.BRINE],[40,t.BODY_SLAM],[45,t.ICE_BEAM],[50,t.RAIN_DANCE],[55,t.HYDRO_PUMP],[60,t.PERISH_SONG],[65,t.SHEER_COLD]],[e.DITTO]:[[1,t.TRANSFORM]],[e.EEVEE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[35,t.BATON_PASS],[40,t.TAKE_DOWN],[45,t.CHARM],[50,t.DOUBLE_EDGE],[55,t.LAST_RESORT],[60,t.VEEVEE_VOLLEY]],[e.VAPOREON]:[[Ae,t.BOUNCY_BUBBLE],[Z,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.WATER_GUN],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.HAZE],[30,t.WATER_PULSE],[35,t.AURORA_BEAM],[40,t.AQUA_RING],[45,t.MUDDY_WATER],[50,t.ACID_ARMOR],[55,t.HYDRO_PUMP],[60,t.LAST_RESORT]],[e.JOLTEON]:[[Ae,t.BUZZY_BUZZ],[Z,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.THUNDER_SHOCK],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.THUNDER_WAVE],[30,t.DOUBLE_KICK],[35,t.THUNDER_FANG],[40,t.PIN_MISSILE],[45,t.DISCHARGE],[50,t.AGILITY],[55,t.THUNDER],[60,t.LAST_RESORT]],[e.FLAREON]:[[Ae,t.SIZZLY_SLIDE],[Z,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.EMBER],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SMOG],[30,t.BITE],[35,t.FIRE_FANG],[40,t.FIRE_SPIN],[45,t.LAVA_PLUME],[50,t.SCARY_FACE],[55,t.FLARE_BLITZ],[60,t.LAST_RESORT]],[e.PORYGON]:[[1,t.TACKLE],[1,t.CONVERSION],[5,t.RECYCLE],[10,t.MAGNET_RISE],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.MAGIC_COAT],[55,t.LOCK_ON],[60,t.ZAP_CANNON]],[e.OMANYTE]:[[1,t.BIND],[1,t.WITHDRAW],[1,t.CONSTRICT],[5,t.ROLLOUT],[10,t.SAND_ATTACK],[15,t.WATER_GUN],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[41,t.PROTECT],[45,t.ROCK_BLAST],[50,t.SURF],[55,t.SHELL_SMASH],[60,t.HYDRO_PUMP]],[e.OMASTAR]:[[Ae,t.CRUNCH],[1,t.BIND],[1,t.SAND_ATTACK],[1,t.CONSTRICT],[1,t.SPIKE_CANNON],[1,t.WITHDRAW],[1,t.ROLLOUT],[15,t.WATER_GUN],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[43,t.PROTECT],[49,t.ROCK_BLAST],[56,t.SURF],[63,t.SHELL_SMASH],[70,t.HYDRO_PUMP]],[e.KABUTO]:[[1,t.ABSORB],[1,t.HARDEN],[5,t.SCRATCH],[10,t.SAND_ATTACK],[15,t.AQUA_JET],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[41,t.PROTECT],[45,t.LEECH_LIFE],[50,t.LIQUIDATION],[55,t.METAL_SOUND],[60,t.STONE_EDGE]],[e.KABUTOPS]:[[Ae,t.SLASH],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.ABSORB],[1,t.HARDEN],[1,t.FEINT],[1,t.NIGHT_SLASH],[15,t.AQUA_JET],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[43,t.PROTECT],[49,t.LEECH_LIFE],[56,t.LIQUIDATION],[63,t.METAL_SOUND],[70,t.STONE_EDGE]],[e.AERODACTYL]:[[1,t.BITE],[1,t.ANCIENT_POWER],[5,t.SUPERSONIC],[10,t.WING_ATTACK],[15,t.SCARY_FACE],[20,t.ROCK_SLIDE],[25,t.ROAR],[30,t.CRUNCH],[35,t.IRON_HEAD],[40,t.TAKE_DOWN],[45,t.STONE_EDGE],[50,t.AGILITY],[55,t.HYPER_BEAM],[60,t.GIGA_IMPACT]],[e.SNORLAX]:[[1,t.TACKLE],[1,t.SCREECH],[1,t.ODOR_SLEUTH],[1,t.DEFENSE_CURL],[1,t.METRONOME],[1,t.LICK],[1,t.FLAIL],[1,t.STOCKPILE],[1,t.SWALLOW],[1,t.RECYCLE],[1,t.BLOCK],[1,t.COVET],[1,t.FLING],[1,t.LAST_RESORT],[12,t.YAWN],[16,t.BITE],[20,t.REST],[20,t.SNORE],[20,t.SLEEP_TALK],[24,t.CRUNCH],[28,t.BODY_SLAM],[32,t.HEAVY_SLAM],[36,t.AMNESIA],[40,t.HIGH_HORSEPOWER],[44,t.HAMMER_ARM],[48,t.BELLY_DRUM],[52,t.BELCH],[56,t.GIGA_IMPACT]],[e.ARTICUNO]:[[1,t.GUST],[1,t.MIST],[5,t.POWDER_SNOW],[10,t.REFLECT],[15,t.ICE_SHARD],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.TAILWIND],[35,t.FREEZE_DRY],[40,t.ROOST],[45,t.ICE_BEAM],[50,t.SNOWSCAPE],[55,t.HURRICANE],[60,t.HAZE],[65,t.BLIZZARD],[70,t.SHEER_COLD]],[e.ZAPDOS]:[[1,t.PECK],[1,t.THUNDER_WAVE],[5,t.THUNDER_SHOCK],[10,t.LIGHT_SCREEN],[15,t.PLUCK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.CHARGE],[35,t.DRILL_PECK],[40,t.ROOST],[45,t.DISCHARGE],[50,t.RAIN_DANCE],[55,t.THUNDER],[60,t.DETECT],[65,t.MAGNETIC_FLUX],[70,t.ZAP_CANNON]],[e.MOLTRES]:[[1,t.GUST],[1,t.LEER],[5,t.EMBER],[10,t.SAFEGUARD],[15,t.WING_ATTACK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.INCINERATE],[35,t.AIR_SLASH],[40,t.ROOST],[45,t.HEAT_WAVE],[50,t.SUNNY_DAY],[55,t.HURRICANE],[60,t.ENDURE],[65,t.OVERHEAT],[70,t.SKY_ATTACK]],[e.DRATINI]:[[1,t.WRAP],[1,t.LEER],[5,t.TWISTER],[10,t.THUNDER_WAVE],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[31,t.AQUA_TAIL],[35,t.DRAGON_RUSH],[40,t.SAFEGUARD],[45,t.RAIN_DANCE],[50,t.DRAGON_DANCE],[55,t.OUTRAGE],[60,t.HYPER_BEAM]],[e.DRAGONAIR]:[[1,t.WRAP],[1,t.LEER],[1,t.THUNDER_WAVE],[1,t.TWISTER],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[33,t.AQUA_TAIL],[39,t.DRAGON_RUSH],[46,t.SAFEGUARD],[53,t.RAIN_DANCE],[60,t.DRAGON_DANCE],[67,t.OUTRAGE],[74,t.HYPER_BEAM]],[e.DRAGONITE]:[[Ae,t.HURRICANE],[1,t.FIRE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.WING_ATTACK],[1,t.WRAP],[1,t.LEER],[1,t.THUNDER_WAVE],[1,t.TWISTER],[1,t.EXTREME_SPEED],[1,t.ROOST],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[33,t.AQUA_TAIL],[39,t.DRAGON_RUSH],[41,t.OUTRAGE],[46,t.SAFEGUARD],[53,t.RAIN_DANCE],[62,t.DRAGON_DANCE],[80,t.HYPER_BEAM]],[e.MEWTWO]:[[1,t.DISABLE],[1,t.CONFUSION],[1,t.SWIFT],[1,t.LIFE_DEW],[8,t.ANCIENT_POWER],[16,t.PSYCHO_CUT],[24,t.SAFEGUARD],[32,t.AMNESIA],[40,t.AURA_SPHERE],[48,t.PSYCHIC],[56,t.POWER_SWAP],[56,t.GUARD_SWAP],[64,t.MIST],[72,t.PSYSTRIKE],[80,t.RECOVER],[88,t.FUTURE_SIGHT]],[e.MEW]:[[1,t.POUND],[1,t.REFLECT_TYPE],[10,t.AMNESIA],[20,t.BATON_PASS],[30,t.ANCIENT_POWER],[40,t.LIFE_DEW],[50,t.NASTY_PLOT],[60,t.METRONOME],[70,t.IMPRISON],[80,t.TRANSFORM],[90,t.AURA_SPHERE],[100,t.PSYCHIC]],[e.CHIKORITA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.RAZOR_LEAF],[9,t.POISON_POWDER],[12,t.SYNTHESIS],[17,t.REFLECT],[20,t.MAGICAL_LEAF],[23,t.LEECH_SEED],[28,t.SWEET_SCENT],[31,t.LIGHT_SCREEN],[34,t.BODY_SLAM],[39,t.SAFEGUARD],[42,t.GIGA_DRAIN],[45,t.SOLAR_BEAM]],[e.BAYLEEF]:[[1,t.TACKLE],[1,t.GROWL],[1,t.RAZOR_LEAF],[1,t.POISON_POWDER],[12,t.SYNTHESIS],[18,t.REFLECT],[22,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[32,t.SWEET_SCENT],[36,t.LIGHT_SCREEN],[40,t.BODY_SLAM],[46,t.SAFEGUARD],[50,t.GIGA_DRAIN],[54,t.SOLAR_BEAM]],[e.MEGANIUM]:[[Ae,t.PETAL_DANCE],[1,t.TACKLE],[1,t.GROWL],[1,t.RAZOR_LEAF],[1,t.POISON_POWDER],[1,t.PETAL_BLIZZARD],[12,t.SYNTHESIS],[18,t.REFLECT],[22,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[34,t.SWEET_SCENT],[40,t.LIGHT_SCREEN],[46,t.BODY_SLAM],[54,t.SAFEGUARD],[60,t.GIGA_DRAIN],[65,t.SOLAR_BEAM]],[e.CYNDAQUIL]:[[1,t.TACKLE],[1,t.LEER],[5,t.EMBER],[10,t.SMOKESCREEN],[13,t.QUICK_ATTACK],[19,t.FLAME_WHEEL],[22,t.DEFENSE_CURL],[28,t.FLAME_CHARGE],[31,t.SWIFT],[37,t.LAVA_PLUME],[40,t.FLAMETHROWER],[46,t.INFERNO],[49,t.ROLLOUT],[55,t.DOUBLE_EDGE],[58,t.OVERHEAT],[64,t.ERUPTION]],[e.QUILAVA]:[[1,t.TACKLE],[1,t.LEER],[1,t.SMOKESCREEN],[10,t.EMBER],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[42,t.LAVA_PLUME],[46,t.FLAMETHROWER],[53,t.INFERNO],[57,t.ROLLOUT],[64,t.DOUBLE_EDGE],[68,t.OVERHEAT],[75,t.ERUPTION]],[e.TYPHLOSION]:[[1,t.TACKLE],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.ERUPTION],[1,t.GYRO_BALL],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[43,t.LAVA_PLUME],[48,t.FLAMETHROWER],[56,t.INFERNO],[61,t.ROLLOUT],[74,t.OVERHEAT]],[e.TOTODILE]:[[1,t.SCRATCH],[1,t.LEER],[5,t.WATER_GUN],[9,t.BITE],[13,t.SCARY_FACE],[19,t.ICE_FANG],[22,t.FLAIL],[27,t.CRUNCH],[30,t.SLASH],[33,t.SCREECH],[37,t.THRASH],[41,t.AQUA_TAIL],[45,t.SUPERPOWER],[50,t.HYDRO_PUMP]],[e.CROCONAW]:[[1,t.SCRATCH],[1,t.LEER],[1,t.WATER_GUN],[13,t.BITE],[15,t.SCARY_FACE],[21,t.ICE_FANG],[24,t.FLAIL],[30,t.CRUNCH],[34,t.SLASH],[37,t.SCREECH],[42,t.THRASH],[47,t.AQUA_TAIL],[50,t.SUPERPOWER],[55,t.HYDRO_PUMP]],[e.FERALIGATR]:[[1,t.AGILITY],[1,t.SCRATCH],[1,t.LEER],[1,t.WATER_GUN],[13,t.BITE],[15,t.SCARY_FACE],[21,t.ICE_FANG],[24,t.FLAIL],[32,t.CRUNCH],[37,t.SLASH],[44,t.SCREECH],[51,t.THRASH],[59,t.AQUA_TAIL],[65,t.SUPERPOWER],[70,t.HYDRO_PUMP]],[e.SENTRET]:[[1,t.SCRATCH],[4,t.DEFENSE_CURL],[7,t.QUICK_ATTACK],[13,t.FURY_SWIPES],[16,t.HELPING_HAND],[19,t.FOLLOW_ME],[25,t.SLAM],[28,t.REST],[31,t.SUCKER_PUNCH],[36,t.AMNESIA],[39,t.BATON_PASS],[42,t.DOUBLE_EDGE],[47,t.HYPER_VOICE]],[e.FURRET]:[[Ae,t.AGILITY],[1,t.SCRATCH],[1,t.QUICK_ATTACK],[1,t.DEFENSE_CURL],[1,t.COIL],[13,t.FURY_SWIPES],[17,t.HELPING_HAND],[21,t.FOLLOW_ME],[28,t.SLAM],[32,t.REST],[36,t.SUCKER_PUNCH],[42,t.AMNESIA],[46,t.BATON_PASS],[50,t.DOUBLE_EDGE],[56,t.HYPER_VOICE]],[e.HOOTHOOT]:[[1,t.GROWL],[1,t.PECK],[3,t.TACKLE],[6,t.ECHOED_VOICE],[9,t.CONFUSION],[12,t.REFLECT],[15,t.DEFOG],[18,t.AIR_SLASH],[21,t.EXTRASENSORY],[24,t.TAKE_DOWN],[27,t.UPROAR],[30,t.ROOST],[33,t.MOONBLAST],[36,t.HYPNOSIS],[39,t.DREAM_EATER]],[e.NOCTOWL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.ECHOED_VOICE],[9,t.CONFUSION],[12,t.REFLECT],[15,t.DEFOG],[18,t.AIR_SLASH],[23,t.EXTRASENSORY],[28,t.TAKE_DOWN],[33,t.UPROAR],[38,t.ROOST],[43,t.MOONBLAST],[48,t.HYPNOSIS],[53,t.DREAM_EATER]],[e.LEDYBA]:[[1,t.TACKLE],[5,t.SUPERSONIC],[8,t.SWIFT],[12,t.LIGHT_SCREEN],[12,t.REFLECT],[12,t.SAFEGUARD],[15,t.MACH_PUNCH],[19,t.ROOST],[22,t.STRUGGLE_BUG],[26,t.BATON_PASS],[29,t.AGILITY],[33,t.BUG_BUZZ],[36,t.AIR_SLASH],[40,t.DOUBLE_EDGE]],[e.LEDIAN]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.SWIFT],[5,t.SUPERSONIC],[12,t.LIGHT_SCREEN],[12,t.REFLECT],[12,t.SAFEGUARD],[15,t.MACH_PUNCH],[20,t.ROOST],[24,t.STRUGGLE_BUG],[29,t.BATON_PASS],[33,t.AGILITY],[38,t.BUG_BUZZ],[42,t.AIR_SLASH],[47,t.DOUBLE_EDGE]],[e.SPINARAK]:[[1,t.POISON_STING],[1,t.STRING_SHOT],[1,t.CONSTRICT],[5,t.ABSORB],[8,t.INFESTATION],[12,t.SCARY_FACE],[15,t.NIGHT_SHADE],[19,t.SHADOW_SNEAK],[22,t.FURY_SWIPES],[26,t.SUCKER_PUNCH],[29,t.AGILITY],[33,t.PIN_MISSILE],[36,t.PSYCHIC],[40,t.POISON_JAB],[44,t.CROSS_POISON],[47,t.STICKY_WEB],[51,t.TOXIC_THREAD]],[e.ARIADOS]:[[Ae,t.SWORDS_DANCE],[1,t.POISON_STING],[1,t.ABSORB],[1,t.STRING_SHOT],[1,t.CONSTRICT],[1,t.FOCUS_ENERGY],[1,t.BUG_BITE],[1,t.FELL_STINGER],[8,t.INFESTATION],[12,t.SCARY_FACE],[15,t.NIGHT_SHADE],[19,t.SHADOW_SNEAK],[23,t.FURY_SWIPES],[28,t.SUCKER_PUNCH],[31,t.AGILITY],[35,t.PIN_MISSILE],[41,t.PSYCHIC],[46,t.POISON_JAB],[50,t.CROSS_POISON],[54,t.STICKY_WEB],[59,t.TOXIC_THREAD]],[e.CROBAT]:[[Ae,t.CROSS_POISON],[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.TOXIC],[1,t.SCREECH],[1,t.MEAN_LOOK],[1,t.ASTONISH],[1,t.TAILWIND],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[27,t.AIR_CUTTER],[34,t.BITE],[41,t.HAZE],[48,t.VENOSHOCK],[55,t.CONFUSE_RAY],[62,t.AIR_SLASH],[69,t.LEECH_LIFE]],[e.CHINCHOU]:[[1,t.SUPERSONIC],[1,t.WATER_GUN],[4,t.ELECTRO_BALL],[8,t.THUNDER_WAVE],[12,t.BUBBLE_BEAM],[16,t.CONFUSE_RAY],[20,t.SPARK],[24,t.CHARGE],[28,t.DISCHARGE],[32,t.AQUA_RING],[36,t.FLAIL],[40,t.TAKE_DOWN],[44,t.HYDRO_PUMP]],[e.LANTURN]:[[Ae,t.STOCKPILE],[Ae,t.SPIT_UP],[Ae,t.SWALLOW],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.SPOTLIGHT],[1,t.THUNDER_WAVE],[1,t.ELECTRO_BALL],[1,t.EERIE_IMPULSE],[12,t.BUBBLE_BEAM],[16,t.CONFUSE_RAY],[20,t.SPARK],[24,t.CHARGE],[30,t.DISCHARGE],[36,t.AQUA_RING],[42,t.FLAIL],[48,t.TAKE_DOWN],[54,t.HYDRO_PUMP]],[e.PICHU]:[[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[4,t.PLAY_NICE],[8,t.SWEET_KISS],[12,t.NUZZLE],[16,t.NASTY_PLOT],[20,t.CHARM]],[e.CLEFFA]:[[1,t.POUND],[1,t.SPLASH],[1,t.COPYCAT],[4,t.SING],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.ENCORE],[20,t.CHARM]],[e.IGGLYBUFF]:[[1,t.POUND],[1,t.SING],[1,t.COPYCAT],[4,t.DEFENSE_CURL],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.DISABLE],[20,t.CHARM]],[e.TOGEPI]:[[1,t.POUND],[1,t.GROWL],[4,t.SWEET_KISS],[8,t.LIFE_DEW],[12,t.CHARM],[16,t.ANCIENT_POWER],[20,t.YAWN],[24,t.METRONOME],[28,t.AFTER_YOU],[32,t.DOUBLE_EDGE],[36,t.SAFEGUARD],[40,t.FOLLOW_ME],[44,t.BATON_PASS],[48,t.LAST_RESORT],[52,t.WISH]],[e.TOGETIC]:[[Ae,t.FAIRY_WIND],[1,t.POUND],[1,t.GROWL],[1,t.SWEET_KISS],[1,t.LIFE_DEW],[12,t.CHARM],[16,t.ANCIENT_POWER],[20,t.YAWN],[24,t.METRONOME],[28,t.AFTER_YOU],[32,t.DOUBLE_EDGE],[36,t.SAFEGUARD],[40,t.FOLLOW_ME],[44,t.BATON_PASS],[48,t.LAST_RESORT],[52,t.WISH]],[e.NATU]:[[1,t.LEER],[1,t.PECK],[5,t.STORED_POWER],[10,t.TELEPORT],[15,t.CONFUSE_RAY],[20,t.NIGHT_SHADE],[26,t.PSYCHO_SHIFT],[30,t.POWER_SWAP],[35,t.PSYCHIC],[35,t.GUARD_SWAP],[40,t.WISH],[45,t.FUTURE_SIGHT]],[e.XATU]:[[Ae,t.AIR_SLASH],[1,t.LEER],[1,t.PECK],[1,t.TELEPORT],[1,t.TAILWIND],[1,t.STORED_POWER],[15,t.CONFUSE_RAY],[20,t.NIGHT_SHADE],[28,t.PSYCHO_SHIFT],[34,t.POWER_SWAP],[34,t.GUARD_SWAP],[41,t.PSYCHIC],[48,t.WISH],[55,t.FUTURE_SIGHT]],[e.MAREEP]:[[1,t.TACKLE],[1,t.GROWL],[4,t.THUNDER_WAVE],[8,t.THUNDER_SHOCK],[11,t.COTTON_SPORE],[15,t.CHARGE],[18,t.TAKE_DOWN],[22,t.ELECTRO_BALL],[25,t.CONFUSE_RAY],[29,t.POWER_GEM],[32,t.DISCHARGE],[36,t.COTTON_GUARD],[39,t.DAZZLING_GLEAM],[43,t.LIGHT_SCREEN],[46,t.THUNDER]],[e.FLAAFFY]:[[1,t.TACKLE],[1,t.GROWL],[6,t.THUNDER_SHOCK],[9,t.THUNDER_WAVE],[11,t.COTTON_SPORE],[16,t.CHARGE],[20,t.TAKE_DOWN],[25,t.ELECTRO_BALL],[29,t.CONFUSE_RAY],[34,t.POWER_GEM],[38,t.DISCHARGE],[43,t.COTTON_GUARD],[47,t.DAZZLING_GLEAM],[52,t.LIGHT_SCREEN],[56,t.THUNDER]],[e.AMPHAROS]:[[Ae,t.THUNDER_PUNCH],[1,t.FIRE_PUNCH],[1,t.TACKLE],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ZAP_CANNON],[1,t.DRAGON_PULSE],[1,t.MAGNETIC_FLUX],[1,t.ION_DELUGE],[11,t.COTTON_SPORE],[16,t.CHARGE],[20,t.TAKE_DOWN],[25,t.ELECTRO_BALL],[29,t.CONFUSE_RAY],[35,t.POWER_GEM],[40,t.DISCHARGE],[46,t.COTTON_GUARD],[51,t.DAZZLING_GLEAM],[57,t.LIGHT_SCREEN],[62,t.THUNDER]],[e.BELLOSSOM]:[[Ae,t.PETAL_BLIZZARD],[1,t.ACID],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.MOONLIGHT],[1,t.QUIVER_DANCE],[1,t.GRASSY_TERRAIN],[1,t.MOONBLAST]],[e.MARILL]:[[1,t.SPLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE],[19,t.AQUA_TAIL],[21,t.PLAY_ROUGH],[24,t.AQUA_RING],[27,t.RAIN_DANCE],[30,t.HYDRO_PUMP],[33,t.DOUBLE_EDGE],[36,t.SUPERPOWER]],[e.AZUMARILL]:[[1,t.SPLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE],[21,t.AQUA_TAIL],[25,t.PLAY_ROUGH],[30,t.AQUA_RING],[35,t.RAIN_DANCE],[40,t.HYDRO_PUMP],[45,t.DOUBLE_EDGE],[50,t.SUPERPOWER]],[e.SUDOWOODO]:[[Ae,t.SLAM],[1,t.ROCK_THROW],[1,t.TACKLE],[1,t.FLAIL],[1,t.FAKE_TEARS],[1,t.HAMMER_ARM],[1,t.COPYCAT],[1,t.STONE_EDGE],[1,t.WOOD_HAMMER],[12,t.BLOCK],[16,t.MIMIC],[20,t.ROCK_TOMB],[24,t.TEARFUL_LOOK],[28,t.SUCKER_PUNCH],[32,t.ROCK_SLIDE],[36,t.LOW_KICK],[40,t.COUNTER],[44,t.DOUBLE_EDGE],[48,t.HEAD_SMASH]],[e.POLITOED]:[[Ae,t.BOUNCE],[Z,t.BODY_SLAM],[Z,t.DOUBLE_EDGE],[Z,t.WATER_GUN],[Z,t.BUBBLE_BEAM],[Z,t.HYPNOSIS],[Z,t.PERISH_SONG],[Z,t.SWAGGER],[Z,t.HYPER_VOICE],[Z,t.MUD_SHOT],[Z,t.EARTH_POWER],[1,t.RAIN_DANCE],[1,t.HYDRO_PUMP],[1,t.BELLY_DRUM],[1,t.POUND],[1,t.WATER_SPORT]],[e.HOPPIP]:[[1,t.TACKLE],[1,t.SPLASH],[4,t.TAIL_WHIP],[6,t.ABSORB],[8,t.FAIRY_WIND],[10,t.POISON_POWDER],[10,t.STUN_SPORE],[10,t.SLEEP_POWDER],[12,t.BULLET_SEED],[15,t.SYNTHESIS],[19,t.LEECH_SEED],[22,t.MEGA_DRAIN],[24,t.ACROBATICS],[27,t.COTTON_SPORE],[29,t.U_TURN],[32,t.GIGA_DRAIN],[35,t.BOUNCE],[38,t.MEMENTO]],[e.SKIPLOOM]:[[1,t.TAIL_WHIP],[1,t.ABSORB],[1,t.SPLASH],[1,t.SYNTHESIS],[8,t.TACKLE],[10,t.FAIRY_WIND],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[15,t.BULLET_SEED],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.ACROBATICS],[31,t.COTTON_SPORE],[34,t.U_TURN],[37,t.GIGA_DRAIN],[41,t.BOUNCE],[44,t.MEMENTO]],[e.JUMPLUFF]:[[1,t.TAIL_WHIP],[1,t.ABSORB],[1,t.SPLASH],[1,t.SYNTHESIS],[8,t.TACKLE],[10,t.FAIRY_WIND],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[15,t.BULLET_SEED],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[30,t.ACROBATICS],[35,t.COTTON_SPORE],[39,t.U_TURN],[43,t.GIGA_DRAIN],[49,t.BOUNCE],[55,t.MEMENTO]],[e.AIPOM]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[4,t.SAND_ATTACK],[8,t.ASTONISH],[11,t.BATON_PASS],[15,t.TICKLE],[18,t.FURY_SWIPES],[22,t.SWIFT],[25,t.SCREECH],[29,t.AGILITY],[32,t.DOUBLE_HIT],[36,t.FLING],[39,t.NASTY_PLOT],[43,t.LAST_RESORT]],[e.SUNKERN]:[[1,t.TACKLE],[1,t.GROWTH],[7,t.ABSORB],[10,t.MEGA_DRAIN],[16,t.RAZOR_LEAF],[19,t.WORRY_SEED],[22,t.GIGA_DRAIN],[25,t.ENDEAVOR],[28,t.SYNTHESIS],[31,t.SOLAR_BEAM],[34,t.DOUBLE_EDGE],[36,t.SUNNY_DAY],[39,t.SEED_BOMB]],[e.SUNFLORA]:[[Z,t.SEED_BOMB],[1,t.POUND],[1,t.TACKLE],[1,t.GROWTH],[1,t.ENDEAVOR],[1,t.SYNTHESIS],[4,t.INGRAIN],[7,t.ABSORB],[10,t.MEGA_DRAIN],[13,t.LEECH_SEED],[16,t.RAZOR_LEAF],[19,t.WORRY_SEED],[22,t.GIGA_DRAIN],[25,t.BULLET_SEED],[28,t.PETAL_DANCE],[31,t.SOLAR_BEAM],[34,t.DOUBLE_EDGE],[39,t.SUNNY_DAY],[43,t.LEAF_STORM],[50,t.PETAL_BLIZZARD]],[e.YANMA]:[[1,t.TACKLE],[6,t.QUICK_ATTACK],[11,t.DOUBLE_TEAM],[14,t.AIR_CUTTER],[17,t.DETECT],[22,t.SUPERSONIC],[27,t.UPROAR],[30,t.BUG_BITE],[33,t.ANCIENT_POWER],[38,t.HYPNOSIS],[43,t.WING_ATTACK],[46,t.SCREECH],[49,t.U_TURN],[54,t.AIR_SLASH],[57,t.BUG_BUZZ]],[e.WOOPER]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[4,t.RAIN_DANCE],[8,t.MUD_SHOT],[12,t.MIST],[12,t.HAZE],[16,t.SLAM],[21,t.YAWN],[24,t.AQUA_TAIL],[28,t.MUDDY_WATER],[32,t.AMNESIA],[36,t.TOXIC],[40,t.EARTHQUAKE]],[e.QUAGSIRE]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.RAIN_DANCE],[1,t.MUD_SHOT],[12,t.MIST],[12,t.HAZE],[16,t.SLAM],[23,t.YAWN],[28,t.AQUA_TAIL],[34,t.MUDDY_WATER],[40,t.AMNESIA],[46,t.TOXIC],[52,t.EARTHQUAKE]],[e.ESPEON]:[[Ae,t.GLITZY_GLOW],[Z,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.CONFUSION],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SWIFT],[30,t.PSYBEAM],[35,t.MORNING_SUN],[40,t.POWER_SWAP],[45,t.PSYCHIC],[50,t.PSYCH_UP],[55,t.FUTURE_SIGHT],[60,t.LAST_RESORT]],[e.UMBREON]:[[Ae,t.BADDY_BAD],[Z,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[1,t.PURSUIT],[5,t.SAND_ATTACK],[10,t.SNARL],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.CONFUSE_RAY],[30,t.ASSURANCE],[35,t.MOONLIGHT],[40,t.GUARD_SWAP],[45,t.DARK_PULSE],[50,t.SCREECH],[55,t.MEAN_LOOK],[60,t.LAST_RESORT]],[e.MURKROW]:[[1,t.PECK],[1,t.ASTONISH],[5,t.GUST],[11,t.HAZE],[15,t.WING_ATTACK],[21,t.NIGHT_SHADE],[25,t.ASSURANCE],[31,t.TAUNT],[35,t.MEAN_LOOK],[40,t.FOUL_PLAY],[50,t.SUCKER_PUNCH],[55,t.TORMENT],[60,t.QUASH]],[e.SLOWKING]:[[Z,t.FUTURE_SIGHT],[Z,t.CHILLY_RECEPTION],[1,t.POWER_GEM],[1,t.NASTY_PLOT],[1,t.SWAGGER],[1,t.TACKLE],[1,t.CURSE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.MISDREAVUS]:[[1,t.GROWL],[1,t.CONFUSION],[1,t.PSYWAVE],[10,t.ASTONISH],[14,t.CONFUSE_RAY],[19,t.MEAN_LOOK],[23,t.HEX],[28,t.PSYBEAM],[32,t.PAIN_SPLIT],[37,t.PAYBACK],[41,t.SHADOW_BALL],[46,t.PERISH_SONG],[50,t.POWER_GEM]],[e.UNOWN]:[[1,t.HIDDEN_POWER]],[e.WOBBUFFET]:[[Ae,t.COUNTER],[Ae,t.DESTINY_BOND],[Ae,t.SAFEGUARD],[Ae,t.MIRROR_COAT],[1,t.COUNTER],[1,t.DESTINY_BOND],[1,t.SAFEGUARD],[1,t.MIRROR_COAT],[1,t.AMNESIA],[1,t.SPLASH],[1,t.CHARM],[1,t.ENCORE]],[e.GIRAFARIG]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[5,t.CONFUSION],[10,t.ASSURANCE],[14,t.STOMP],[19,t.PSYBEAM],[23,t.AGILITY],[28,t.DOUBLE_HIT],[32,t.TWIN_BEAM],[37,t.CRUNCH],[41,t.BATON_PASS],[46,t.NASTY_PLOT],[50,t.PSYCHIC]],[e.PINECO]:[[1,t.TACKLE],[1,t.PROTECT],[6,t.SELF_DESTRUCT],[9,t.BUG_BITE],[12,t.TAKE_DOWN],[17,t.RAPID_SPIN],[20,t.ROLLOUT],[23,t.CURSE],[28,t.SPIKES],[31,t.PAYBACK],[34,t.EXPLOSION],[39,t.IRON_DEFENSE],[42,t.GYRO_BALL],[45,t.DOUBLE_EDGE]],[e.FORRETRESS]:[[Ae,t.HEAVY_SLAM],[1,t.TACKLE],[1,t.SELF_DESTRUCT],[1,t.PROTECT],[1,t.ZAP_CANNON],[1,t.TOXIC_SPIKES],[1,t.MAGNET_RISE],[1,t.BUG_BITE],[1,t.MIRROR_SHOT],[12,t.TAKE_DOWN],[17,t.RAPID_SPIN],[20,t.ROLLOUT],[23,t.CURSE],[28,t.SPIKES],[32,t.PAYBACK],[36,t.EXPLOSION],[42,t.IRON_DEFENSE],[46,t.GYRO_BALL],[50,t.DOUBLE_EDGE]],[e.DUNSPARCE]:[[1,t.DEFENSE_CURL],[1,t.FLAIL],[1,t.TACKLE],[4,t.MUD_SLAP],[8,t.ROLLOUT],[12,t.GLARE],[16,t.SCREECH],[20,t.ANCIENT_POWER],[24,t.DRILL_RUN],[28,t.YAWN],[32,t.HYPER_DRILL],[36,t.ROOST],[40,t.DRAGON_RUSH],[44,t.COIL],[48,t.DOUBLE_EDGE],[52,t.ENDEAVOR]],[e.GLIGAR]:[[1,t.POISON_STING],[4,t.SAND_ATTACK],[7,t.HARDEN],[10,t.KNOCK_OFF],[13,t.QUICK_ATTACK],[16,t.FURY_CUTTER],[19,t.POISON_TAIL],[22,t.ACROBATICS],[27,t.SLASH],[30,t.U_TURN],[35,t.SCREECH],[40,t.X_SCISSOR],[45,t.CRABHAMMER],[50,t.SWORDS_DANCE]],[e.STEELIX]:[[1,t.BIND],[1,t.TACKLE],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.MUD_SPORT],[1,t.CRUNCH],[1,t.ROCK_POLISH],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[4,t.SMACK_DOWN],[8,t.AUTOTOMIZE],[12,t.DRAGON_BREATH],[16,t.CURSE],[20,t.ROCK_SLIDE],[22,t.GYRO_BALL],[24,t.SCREECH],[28,t.SAND_TOMB],[32,t.STEALTH_ROCK],[36,t.SLAM],[40,t.SANDSTORM],[44,t.DIG],[48,t.IRON_TAIL],[52,t.STONE_EDGE],[56,t.DOUBLE_EDGE],[60,t.MAGNET_RISE]],[e.SNUBBULL]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SCARY_FACE],[1,t.CHARM],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.BITE],[13,t.LICK],[19,t.HEADBUTT],[25,t.ROAR],[31,t.LAST_RESORT],[37,t.PLAY_ROUGH],[43,t.PAYBACK],[49,t.CRUNCH]],[e.GRANBULL]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SCARY_FACE],[1,t.OUTRAGE],[1,t.CHARM],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.BITE],[13,t.LICK],[19,t.HEADBUTT],[27,t.ROAR],[35,t.LAST_RESORT],[43,t.PLAY_ROUGH],[51,t.PAYBACK],[59,t.CRUNCH]],[e.QWILFISH]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.WATER_GUN],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.POISON_JAB],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.AQUA_TAIL],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.SCIZOR]:[[Ae,t.BULLET_PUNCH],[1,t.WING_ATTACK],[1,t.LEER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.FALSE_SWIPE],[1,t.FURY_CUTTER],[1,t.AIR_SLASH],[12,t.METAL_CLAW],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.IRON_DEFENSE],[36,t.IRON_HEAD],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.SHUCKLE]:[[1,t.WRAP],[1,t.WITHDRAW],[1,t.BIDE],[1,t.CONSTRICT],[5,t.ROLLOUT],[10,t.STRUGGLE_BUG],[15,t.ROCK_THROW],[20,t.SAFEGUARD],[25,t.REST],[30,t.BUG_BITE],[35,t.GUARD_SPLIT],[35,t.POWER_SPLIT],[40,t.ROCK_SLIDE],[45,t.GASTRO_ACID],[50,t.STICKY_WEB],[55,t.POWER_TRICK],[60,t.STONE_EDGE],[65,t.SHELL_SMASH]],[e.HERACROSS]:[[1,t.TACKLE],[1,t.LEER],[1,t.ARM_THRUST],[5,t.FURY_ATTACK],[10,t.ENDURE],[15,t.AERIAL_ACE],[20,t.HORN_ATTACK],[25,t.COUNTER],[30,t.BRICK_BREAK],[35,t.PIN_MISSILE],[40,t.THROAT_CHOP],[45,t.THRASH],[50,t.SWORDS_DANCE],[55,t.MEGAHORN],[60,t.CLOSE_COMBAT]],[e.SNEASEL]:[[1,t.SCRATCH],[1,t.LEER],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.ICY_WIND],[30,t.FURY_SWIPES],[36,t.HONE_CLAWS],[42,t.BEAT_UP],[48,t.AGILITY],[54,t.SCREECH],[60,t.SLASH]],[e.TEDDIURSA]:[[1,t.SCRATCH],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[33,t.CHARM],[37,t.REST],[37,t.SNORE],[41,t.THRASH]],[e.URSARING]:[[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[1,t.FAKE_TEARS],[1,t.CHARM],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.HIGH_HORSEPOWER],[56,t.THRASH],[64,t.HAMMER_ARM]],[e.SLUGMA]:[[1,t.SMOG],[1,t.YAWN],[5,t.EMBER],[8,t.ROCK_THROW],[13,t.HARDEN],[20,t.CLEAR_SMOG],[22,t.ANCIENT_POWER],[27,t.INCINERATE],[29,t.ROCK_SLIDE],[34,t.LAVA_PLUME],[36,t.AMNESIA],[41,t.BODY_SLAM],[43,t.RECOVER],[48,t.FLAMETHROWER],[50,t.EARTH_POWER]],[e.MAGCARGO]:[[Ae,t.SHELL_SMASH],[1,t.EMBER],[1,t.ROCK_THROW],[1,t.SMOG],[1,t.YAWN],[1,t.EARTH_POWER],[13,t.HARDEN],[20,t.CLEAR_SMOG],[22,t.ANCIENT_POWER],[27,t.INCINERATE],[29,t.ROCK_SLIDE],[34,t.LAVA_PLUME],[36,t.AMNESIA],[43,t.BODY_SLAM],[47,t.RECOVER],[54,t.FLAMETHROWER]],[e.SWINUB]:[[1,t.TACKLE],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[5,t.POWDER_SNOW],[10,t.FLAIL],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[35,t.AMNESIA],[40,t.TAKE_DOWN],[45,t.EARTHQUAKE],[50,t.BLIZZARD]],[e.PILOSWINE]:[[Ae,t.ICE_FANG],[1,t.TACKLE],[1,t.FLAIL],[1,t.POWDER_SNOW],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[1,t.ANCIENT_POWER],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[37,t.AMNESIA],[44,t.TAKE_DOWN],[51,t.EARTHQUAKE],[58,t.BLIZZARD],[65,t.THRASH]],[e.CORSOLA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.WATER_GUN],[10,t.AQUA_RING],[15,t.ENDURE],[20,t.ANCIENT_POWER],[25,t.BUBBLE_BEAM],[30,t.FLAIL],[35,t.LIFE_DEW],[40,t.POWER_GEM],[45,t.EARTH_POWER],[50,t.RECOVER],[55,t.MIRROR_COAT]],[e.REMORAID]:[[1,t.WATER_GUN],[1,t.HELPING_HAND],[4,t.WATER_PULSE],[8,t.FOCUS_ENERGY],[12,t.PSYBEAM],[16,t.AURORA_BEAM],[20,t.BUBBLE_BEAM],[24,t.LOCK_ON],[28,t.BULLET_SEED],[32,t.ICE_BEAM],[36,t.HYDRO_PUMP],[40,t.SOAK],[44,t.HYPER_BEAM]],[e.OCTILLERY]:[[Ae,t.OCTAZOOKA],[1,t.WRAP],[1,t.CONSTRICT],[1,t.WATER_GUN],[1,t.FOCUS_ENERGY],[1,t.HELPING_HAND],[1,t.ROCK_BLAST],[1,t.WATER_PULSE],[1,t.GUNK_SHOT],[12,t.PSYBEAM],[16,t.AURORA_BEAM],[20,t.BUBBLE_BEAM],[24,t.LOCK_ON],[30,t.BULLET_SEED],[36,t.ICE_BEAM],[42,t.HYDRO_PUMP],[48,t.SOAK],[54,t.HYPER_BEAM]],[e.DELIBIRD]:[[1,t.PRESENT],[1,t.METRONOME],[5,t.FAKE_OUT],[5,t.POWDER_SNOW],[6,t.MIST],[10,t.ICE_SHARD],[15,t.AERIAL_ACE],[20,t.ICY_WIND],[25,t.DRILL_PECK],[30,t.ICE_PUNCH],[35,t.HAZE],[40,t.AIR_SLASH],[45,t.TAILWIND],[50,t.SNOWSCAPE],[55,t.BLIZZARD],[60,t.BRAVE_BIRD]],[e.MANTINE]:[[1,t.WING_ATTACK],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.PSYBEAM],[1,t.SIGNAL_BEAM],[1,t.BULLET_SEED],[1,t.ROOST],[12,t.WATER_PULSE],[16,t.WIDE_GUARD],[20,t.AGILITY],[24,t.BUBBLE_BEAM],[28,t.HEADBUTT],[32,t.AIR_SLASH],[36,t.AQUA_RING],[40,t.BOUNCE],[44,t.TAKE_DOWN],[48,t.HYDRO_PUMP]],[e.SKARMORY]:[[1,t.LEER],[1,t.PECK],[4,t.SAND_ATTACK],[8,t.FURY_ATTACK],[12,t.METAL_CLAW],[16,t.AGILITY],[20,t.WING_ATTACK],[24,t.SLASH],[28,t.STEEL_WING],[32,t.PAYBACK],[36,t.DRILL_PECK],[40,t.METAL_SOUND],[44,t.SPIKES],[48,t.IRON_DEFENSE],[52,t.BRAVE_BIRD]],[e.HOUNDOUR]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.SMOG],[13,t.ROAR],[16,t.BITE],[20,t.INCINERATE],[25,t.BEAT_UP],[28,t.FIRE_FANG],[32,t.TORMENT],[37,t.COMEUPPANCE],[40,t.FOUL_PLAY],[44,t.FLAMETHROWER],[49,t.CRUNCH],[52,t.NASTY_PLOT],[56,t.INFERNO]],[e.HOUNDOOM]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOG],[1,t.HOWL],[1,t.NASTY_PLOT],[1,t.THUNDER_FANG],[13,t.ROAR],[16,t.BITE],[20,t.INCINERATE],[26,t.BEAT_UP],[30,t.FIRE_FANG],[35,t.TORMENT],[41,t.COMEUPPANCE],[45,t.FOUL_PLAY],[50,t.FLAMETHROWER],[56,t.CRUNCH],[62,t.INFERNO]],[e.KINGDRA]:[[Z,t.LASER_FOCUS],[1,t.LEER],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.TWISTER],[1,t.WHIRLPOOL],[1,t.YAWN],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[37,t.WATER_PULSE],[44,t.DRAGON_PULSE],[51,t.HYDRO_PUMP],[58,t.DRAGON_DANCE],[65,t.RAIN_DANCE],[72,t.WAVE_CRASH]],[e.PHANPY]:[[1,t.TACKLE],[1,t.GROWL],[1,t.DEFENSE_CURL],[1,t.ODOR_SLEUTH],[6,t.FLAIL],[10,t.ROLLOUT],[15,t.BULLDOZE],[19,t.ENDURE],[24,t.SLAM],[28,t.TAKE_DOWN],[33,t.CHARM],[37,t.LAST_RESORT],[42,t.DOUBLE_EDGE]],[e.DONPHAN]:[[Ae,t.FURY_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ODOR_SLEUTH],[1,t.FLAIL],[1,t.ENDURE],[1,t.TAKE_DOWN],[1,t.CHARM],[1,t.LAST_RESORT],[1,t.DOUBLE_EDGE],[1,t.THUNDER_FANG],[1,t.FIRE_FANG],[1,t.BULLDOZE],[6,t.RAPID_SPIN],[10,t.ROLLOUT],[15,t.ASSURANCE],[19,t.KNOCK_OFF],[24,t.SLAM],[30,t.STOMPING_TANTRUM],[37,t.SCARY_FACE],[43,t.EARTHQUAKE],[50,t.GIGA_IMPACT]],[e.PORYGON2]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CONVERSION],[1,t.RECYCLE],[1,t.MAGNET_RISE],[1,t.MAGIC_COAT],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.LOCK_ON],[55,t.ZAP_CANNON],[60,t.HYPER_BEAM]],[e.STANTLER]:[[1,t.TACKLE],[1,t.ME_FIRST],[3,t.LEER],[7,t.ASTONISH],[10,t.HYPNOSIS],[13,t.STOMP],[16,t.SAND_ATTACK],[21,t.TAKE_DOWN],[23,t.CONFUSE_RAY],[25,t.PSYSHIELD_BASH],[27,t.CALM_MIND],[32,t.ROLE_PLAY],[37,t.ZEN_HEADBUTT],[49,t.IMPRISON],[55,t.DOUBLE_EDGE]],[e.SMEARGLE]:[[1,t.SKETCH],[11,t.SKETCH],[21,t.SKETCH],[31,t.SKETCH],[41,t.SKETCH],[51,t.SKETCH],[61,t.SKETCH],[71,t.SKETCH],[81,t.SKETCH],[91,t.SKETCH]],[e.TYROGUE]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[10,t.LOW_SWEEP],[10,t.MACH_PUNCH],[10,t.RAPID_SPIN]],[e.HITMONTOP]:[[Ae,t.TRIPLE_KICK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.RAPID_SPIN],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.PURSUIT],[1,t.ROLLING_KICK],[1,t.LOW_SWEEP],[1,t.MACH_PUNCH],[4,t.QUICK_ATTACK],[8,t.GYRO_BALL],[12,t.DETECT],[16,t.REVENGE],[21,t.WIDE_GUARD],[21,t.QUICK_GUARD],[24,t.SUCKER_PUNCH],[28,t.AGILITY],[32,t.DIG],[36,t.CLOSE_COMBAT],[40,t.COUNTER],[44,t.ENDEAVOR]],[e.SMOOCHUM]:[[1,t.POUND],[1,t.LICK],[4,t.POWDER_SNOW],[8,t.COPYCAT],[12,t.CONFUSION],[16,t.COVET],[20,t.SING],[24,t.FAKE_TEARS],[28,t.ICE_PUNCH],[32,t.PSYCHIC],[36,t.SWEET_KISS],[40,t.MEAN_LOOK],[44,t.PERISH_SONG],[48,t.BLIZZARD]],[e.ELEKID]:[[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.THUNDER_SHOCK],[8,t.CHARGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[32,t.DISCHARGE],[36,t.LOW_KICK],[40,t.THUNDERBOLT],[44,t.LIGHT_SCREEN],[48,t.THUNDER]],[e.MAGBY]:[[1,t.LEER],[1,t.SMOG],[4,t.EMBER],[8,t.SMOKESCREEN],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[32,t.LAVA_PLUME],[36,t.LOW_KICK],[40,t.FLAMETHROWER],[44,t.SUNNY_DAY],[48,t.FIRE_BLAST]],[e.MILTANK]:[[1,t.TACKLE],[1,t.GROWL],[5,t.ROLLOUT],[10,t.DEFENSE_CURL],[15,t.STOMP],[20,t.HEAL_BELL],[25,t.HEADBUTT],[30,t.ZEN_HEADBUTT],[35,t.MILK_DRINK],[40,t.BODY_SLAM],[45,t.PLAY_ROUGH],[50,t.CHARM],[55,t.HIGH_HORSEPOWER]],[e.BLISSEY]:[[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COVET],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.TAIL_WHIP],[8,t.ECHOED_VOICE],[12,t.LIFE_DEW],[16,t.SING],[20,t.FLING],[24,t.TAKE_DOWN],[28,t.HEAL_PULSE],[32,t.HELPING_HAND],[36,t.LIGHT_SCREEN],[40,t.DOUBLE_EDGE],[44,t.SOFT_BOILED],[48,t.LAST_RESORT],[52,t.HEALING_WISH]],[e.RAIKOU]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.EXTREME_SPEED],[1,t.CHARGE],[6,t.SPARK],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.THUNDER_FANG],[36,t.HOWL],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.DISCHARGE],[60,t.REFLECT],[66,t.RAIN_DANCE],[72,t.THUNDER],[78,t.ZAP_CANNON]],[e.ENTEI]:[[Z,t.SACRED_FIRE],[Z,t.EXTREME_SPEED],[1,t.STOMP],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[6,t.FLAME_WHEEL],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.FIRE_FANG],[36,t.SCARY_FACE],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.LAVA_PLUME],[60,t.SWAGGER],[66,t.SUNNY_DAY],[72,t.FIRE_BLAST],[78,t.ERUPTION]],[e.SUICUNE]:[[Z,t.EXTREME_SPEED],[Z,t.SHEER_COLD],[1,t.GUST],[1,t.LEER],[1,t.MIST],[1,t.WATER_GUN],[6,t.WATER_PULSE],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.ICE_FANG],[36,t.TAILWIND],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.SURF],[60,t.MIRROR_COAT],[66,t.RAIN_DANCE],[72,t.HYDRO_PUMP],[78,t.BLIZZARD]],[e.LARVITAR]:[[1,t.TACKLE],[1,t.LEER],[3,t.ROCK_THROW],[6,t.PAYBACK],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[31,t.EARTHQUAKE],[33,t.STONE_EDGE],[36,t.THRASH],[39,t.SANDSTORM],[42,t.HYPER_BEAM]],[e.PUPITAR]:[[Ae,t.IRON_DEFENSE],[1,t.TACKLE],[1,t.LEER],[1,t.ROCK_THROW],[1,t.PAYBACK],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[33,t.EARTHQUAKE],[37,t.STONE_EDGE],[42,t.THRASH],[47,t.SANDSTORM],[52,t.HYPER_BEAM]],[e.TYRANITAR]:[[1,t.TACKLE],[1,t.LEER],[1,t.ROCK_THROW],[1,t.IRON_DEFENSE],[1,t.PAYBACK],[1,t.DARK_PULSE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[33,t.EARTHQUAKE],[37,t.STONE_EDGE],[42,t.THRASH],[47,t.SANDSTORM],[52,t.HYPER_BEAM],[59,t.GIGA_IMPACT]],[e.LUGIA]:[[Z,t.DRAGON_RUSH],[1,t.GUST],[1,t.WHIRLWIND],[1,t.ANCIENT_POWER],[1,t.WEATHER_BALL],[9,t.MIST],[18,t.SAFEGUARD],[27,t.CALM_MIND],[36,t.EXTRASENSORY],[45,t.RECOVER],[54,t.AEROBLAST],[63,t.RAIN_DANCE],[72,t.HYDRO_PUMP],[81,t.FUTURE_SIGHT],[90,t.SKY_ATTACK]],[e.HO_OH]:[[1,t.GUST],[1,t.WHIRLWIND],[1,t.ANCIENT_POWER],[1,t.WEATHER_BALL],[9,t.LIFE_DEW],[18,t.SAFEGUARD],[27,t.CALM_MIND],[36,t.EXTRASENSORY],[45,t.RECOVER],[54,t.SACRED_FIRE],[63,t.SUNNY_DAY],[72,t.FIRE_BLAST],[81,t.FUTURE_SIGHT],[90,t.SKY_ATTACK],[99,t.OVERHEAT]],[e.CELEBI]:[[1,t.CONFUSION],[1,t.HEAL_BELL],[10,t.MAGICAL_LEAF],[20,t.BATON_PASS],[30,t.ANCIENT_POWER],[40,t.LIFE_DEW],[50,t.LEECH_SEED],[55,t.HEAL_BLOCK],[60,t.RECOVER],[70,t.FUTURE_SIGHT],[80,t.HEALING_WISH],[90,t.LEAF_STORM],[100,t.PERISH_SONG]],[e.TREECKO]:[[1,t.POUND],[1,t.LEER],[3,t.LEAFAGE],[6,t.QUICK_ATTACK],[9,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[18,t.ASSURANCE],[21,t.GIGA_DRAIN],[24,t.SLAM],[27,t.DOUBLE_TEAM],[30,t.ENERGY_BALL],[33,t.SCREECH],[36,t.ENDEAVOR],[39,t.LEAF_STORM]],[e.GROVYLE]:[[Z,t.FALSE_SWIPE],[Z,t.FURY_CUTTER],[Z,t.X_SCISSOR],[Z,t.ENERGY_BALL],[1,t.POUND],[1,t.LEER],[1,t.LEAFAGE],[1,t.QUICK_ATTACK],[9,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[20,t.ASSURANCE],[25,t.GIGA_DRAIN],[30,t.SLAM],[35,t.DOUBLE_TEAM],[40,t.LEAF_BLADE],[45,t.SCREECH],[50,t.ENDEAVOR],[55,t.LEAF_STORM]],[e.SCEPTILE]:[[Ae,t.LEAF_BLADE],[Z,t.FALSE_SWIPE],[Z,t.FURY_CUTTER],[Z,t.X_SCISSOR],[Z,t.ENERGY_BALL],[Z,t.SHED_TAIL],[1,t.POUND],[1,t.LEER],[1,t.LEAFAGE],[1,t.QUICK_ATTACK],[1,t.DUAL_CHOP],[5,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[20,t.ASSURANCE],[25,t.GIGA_DRAIN],[30,t.SLAM],[35,t.DOUBLE_TEAM],[42,t.SCREECH],[49,t.ENDEAVOR],[56,t.LEAF_STORM]],[e.TORCHIC]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.EMBER],[6,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[18,t.AERIAL_ACE],[21,t.SLASH],[24,t.BOUNCE],[27,t.FOCUS_ENERGY],[30,t.FLAMETHROWER],[33,t.FEATHER_DANCE],[36,t.REVERSAL],[39,t.FLARE_BLITZ]],[e.COMBUSKEN]:[[Ae,t.DOUBLE_KICK],[Z,t.FLAMETHROWER],[Z,t.FEATHER_DANCE],[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[20,t.AERIAL_ACE],[25,t.SLASH],[30,t.BOUNCE],[35,t.FOCUS_ENERGY],[40,t.BLAZE_KICK],[45,t.BULK_UP],[50,t.REVERSAL],[55,t.FLARE_BLITZ]],[e.BLAZIKEN]:[[Ae,t.BLAZE_KICK],[Z,t.FIRE_PUNCH],[Z,t.EMBER],[Z,t.FLAMETHROWER],[Z,t.FEATHER_DANCE],[1,t.DOUBLE_KICK],[1,t.SCRATCH],[1,t.GROWL],[1,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[20,t.AERIAL_ACE],[25,t.SLASH],[30,t.BOUNCE],[35,t.FOCUS_ENERGY],[42,t.BULK_UP],[49,t.REVERSAL],[56,t.FLARE_BLITZ],[63,t.BRAVE_BIRD]],[e.MUDKIP]:[[1,t.TACKLE],[1,t.GROWL],[3,t.WATER_GUN],[6,t.ROCK_SMASH],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[18,t.WATER_PULSE],[21,t.ROCK_SLIDE],[24,t.TAKE_DOWN],[27,t.AMNESIA],[30,t.SURF],[33,t.SCREECH],[36,t.ENDEAVOR],[39,t.HYDRO_PUMP]],[e.MARSHTOMP]:[[Ae,t.MUD_SHOT],[Z,t.SURF],[Z,t.ROCK_SMASH],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[20,t.WATER_PULSE],[25,t.ROCK_SLIDE],[30,t.TAKE_DOWN],[35,t.AMNESIA],[40,t.MUDDY_WATER],[45,t.SCREECH],[50,t.ENDEAVOR],[55,t.HYDRO_PUMP]],[e.SWAMPERT]:[[Z,t.SURF],[Z,t.EARTHQUAKE],[Z,t.ROCK_SMASH],[Z,t.HAMMER_ARM],[1,t.MUD_SHOT],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[20,t.WATER_PULSE],[25,t.ROCK_SLIDE],[30,t.TAKE_DOWN],[35,t.AMNESIA],[42,t.MUDDY_WATER],[49,t.SCREECH],[56,t.ENDEAVOR],[63,t.HYDRO_PUMP]],[e.POOCHYENA]:[[1,t.TACKLE],[4,t.HOWL],[7,t.SAND_ATTACK],[10,t.BITE],[13,t.LEER],[16,t.ROAR],[19,t.SWAGGER],[22,t.ASSURANCE],[25,t.SCARY_FACE],[28,t.TAUNT],[31,t.CRUNCH],[34,t.YAWN],[36,t.TAKE_DOWN],[40,t.SUCKER_PUNCH],[44,t.PLAY_ROUGH]],[e.MIGHTYENA]:[[Ae,t.SNARL],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.THIEF],[1,t.CRUNCH],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[13,t.LEER],[13,t.HOWL],[16,t.ROAR],[20,t.SWAGGER],[24,t.ASSURANCE],[28,t.SCARY_FACE],[36,t.TAUNT],[44,t.YAWN],[48,t.TAKE_DOWN],[52,t.SUCKER_PUNCH],[56,t.PLAY_ROUGH]],[e.ZIGZAGOON]:[[1,t.TACKLE],[1,t.GROWL],[3,t.SAND_ATTACK],[6,t.TAIL_WHIP],[9,t.COVET],[12,t.HEADBUTT],[15,t.BABY_DOLL_EYES],[18,t.PIN_MISSILE],[21,t.REST],[24,t.TAKE_DOWN],[27,t.FLING],[30,t.FLAIL],[33,t.BELLY_DRUM],[36,t.DOUBLE_EDGE]],[e.LINOONE]:[[Ae,t.SLASH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.PIN_MISSILE],[1,t.GROWL],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[1,t.ROTOTILLER],[9,t.COVET],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[33,t.FLING],[38,t.FLAIL],[43,t.BELLY_DRUM],[48,t.DOUBLE_EDGE]],[e.WURMPLE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.POISON_STING],[15,t.BUG_BITE]],[e.SILCOON]:[[Ae,t.HARDEN],[Z,t.TACKLE],[Z,t.STRING_SHOT],[Z,t.POISON_STING],[Z,t.BUG_BITE],[1,t.HARDEN]],[e.BEAUTIFLY]:[[Ae,t.GUST],[1,t.TACKLE],[1,t.BUG_BITE],[1,t.GUST],[1,t.HARDEN],[1,t.STRING_SHOT],[1,t.POISON_STING],[12,t.ABSORB],[15,t.STUN_SPORE],[17,t.MORNING_SUN],[20,t.AIR_CUTTER],[22,t.MEGA_DRAIN],[25,t.LEECH_LIFE],[27,t.ATTRACT],[30,t.WHIRLWIND],[32,t.GIGA_DRAIN],[35,t.BUG_BUZZ],[37,t.PROTECT],[40,t.QUIVER_DANCE]],[e.CASCOON]:[[Ae,t.HARDEN],[Z,t.TACKLE],[Z,t.STRING_SHOT],[Z,t.POISON_STING],[Z,t.BUG_BITE],[1,t.HARDEN]],[e.DUSTOX]:[[Ae,t.GUST],[1,t.TACKLE],[1,t.BUG_BITE],[1,t.GUST],[1,t.HARDEN],[1,t.STRING_SHOT],[1,t.POISON_STING],[12,t.CONFUSION],[15,t.POISON_POWDER],[17,t.MOONLIGHT],[20,t.VENOSHOCK],[22,t.PSYBEAM],[25,t.LEECH_LIFE],[27,t.LIGHT_SCREEN],[30,t.WHIRLWIND],[32,t.TOXIC],[35,t.BUG_BUZZ],[37,t.PROTECT],[40,t.QUIVER_DANCE]],[e.LOTAD]:[[1,t.GROWL],[1,t.ASTONISH],[3,t.ABSORB],[6,t.WATER_GUN],[9,t.MIST],[12,t.MEGA_DRAIN],[16,t.FLAIL],[20,t.BUBBLE_BEAM],[24,t.LEECH_SEED],[28,t.GIGA_DRAIN],[33,t.RAIN_DANCE],[38,t.ZEN_HEADBUTT],[43,t.ENERGY_BALL]],[e.LOMBRE]:[[1,t.GROWL],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.FLAIL],[1,t.FAKE_OUT],[1,t.RAIN_DANCE],[1,t.KNOCK_OFF],[1,t.TEETER_DANCE],[1,t.ASTONISH],[9,t.MIST],[12,t.MEGA_DRAIN],[18,t.FURY_SWIPES],[24,t.BUBBLE_BEAM],[30,t.LEECH_SEED],[36,t.GIGA_DRAIN],[50,t.ZEN_HEADBUTT],[57,t.ENERGY_BALL],[64,t.HYDRO_PUMP]],[e.LUDICOLO]:[[Z,t.GROWL],[Z,t.MIST],[Z,t.WATER_GUN],[Z,t.HYDRO_PUMP],[Z,t.ABSORB],[Z,t.MEGA_DRAIN],[Z,t.FURY_SWIPES],[Z,t.FLAIL],[Z,t.KNOCK_OFF],[Z,t.TEETER_DANCE],[Z,t.ASTONISH],[Z,t.ENERGY_BALL],[Z,t.ZEN_HEADBUTT],[Z,t.LEECH_SEED],[Z,t.GIGA_DRAIN],[1,t.FAKE_OUT],[1,t.BUBBLE_BEAM],[1,t.RAIN_DANCE]],[e.SEEDOT]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.BIDE],[3,t.ABSORB],[6,t.ASTONISH],[9,t.GROWTH],[12,t.ROLLOUT],[15,t.MEGA_DRAIN],[18,t.PAYBACK],[21,t.HEADBUTT],[24,t.SUNNY_DAY],[27,t.SYNTHESIS],[30,t.SUCKER_PUNCH],[33,t.EXPLOSION]],[e.NUZLEAF]:[[Ae,t.RAZOR_LEAF],[1,t.AIR_CUTTER],[1,t.TORMENT],[1,t.FAKE_OUT],[1,t.SWAGGER],[1,t.EXPLOSION],[1,t.TACKLE],[1,t.HARDEN],[1,t.BIDE],[1,t.ABSORB],[1,t.ASTONISH],[1,t.HEADBUTT],[9,t.GROWTH],[12,t.ROLLOUT],[18,t.MEGA_DRAIN],[24,t.PAYBACK],[30,t.SYNTHESIS],[36,t.SUNNY_DAY],[43,t.EXTRASENSORY],[50,t.SUCKER_PUNCH],[57,t.LEAF_BLADE]],[e.SHIFTRY]:[[Ae,t.LEAF_BLADE],[Z,t.WHIRLWIND],[Z,t.TACKLE],[Z,t.BIDE],[Z,t.ABSORB],[Z,t.MEGA_DRAIN],[Z,t.GROWTH],[Z,t.RAZOR_LEAF],[Z,t.HARDEN],[Z,t.HEADBUTT],[Z,t.EXPLOSION],[Z,t.ROLLOUT],[Z,t.SWAGGER],[Z,t.SYNTHESIS],[Z,t.BEAT_UP],[Z,t.FAKE_OUT],[Z,t.TORMENT],[Z,t.ASTONISH],[Z,t.EXTRASENSORY],[Z,t.SUCKER_PUNCH],[1,t.AIR_CUTTER],[1,t.HURRICANE],[1,t.PAYBACK],[1,t.SUNNY_DAY]],[e.TAILLOW]:[[1,t.PECK],[1,t.GROWL],[5,t.FOCUS_ENERGY],[9,t.QUICK_ATTACK],[13,t.WING_ATTACK],[17,t.DOUBLE_TEAM],[21,t.AERIAL_ACE],[25,t.QUICK_GUARD],[29,t.AGILITY],[33,t.AIR_SLASH],[37,t.ENDEAVOR],[41,t.BRAVE_BIRD],[45,t.REVERSAL]],[e.SWELLOW]:[[1,t.BRAVE_BIRD],[1,t.AIR_SLASH],[1,t.PLUCK],[1,t.PECK],[1,t.GROWL],[1,t.FOCUS_ENERGY],[1,t.QUICK_ATTACK],[13,t.WING_ATTACK],[17,t.DOUBLE_TEAM],[21,t.AERIAL_ACE],[27,t.QUICK_GUARD],[33,t.AGILITY],[45,t.ENDEAVOR],[51,t.BRAVE_BIRD],[57,t.REVERSAL]],[e.WINGULL]:[[1,t.GROWL],[1,t.WATER_GUN],[5,t.QUICK_ATTACK],[10,t.SUPERSONIC],[15,t.WING_ATTACK],[20,t.WATER_PULSE],[26,t.AGILITY],[30,t.AIR_SLASH],[35,t.MIST],[40,t.ROOST],[45,t.HURRICANE]],[e.PELIPPER]:[[1,t.PROTECT],[1,t.SOAK],[1,t.QUICK_ATTACK],[1,t.AGILITY],[1,t.AIR_SLASH],[1,t.GROWL],[1,t.WATER_GUN],[1,t.TAILWIND],[1,t.SUPERSONIC],[1,t.WATER_SPORT],[15,t.WING_ATTACK],[20,t.WATER_PULSE],[28,t.STOCKPILE],[28,t.SPIT_UP],[28,t.SWALLOW],[34,t.FLING],[41,t.MIST],[48,t.ROOST],[55,t.HURRICANE],[62,t.HYDRO_PUMP]],[e.RALTS]:[[1,t.GROWL],[1,t.DISARMING_VOICE],[3,t.DOUBLE_TEAM],[6,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[21,t.LIFE_DEW],[24,t.CHARM],[27,t.CALM_MIND],[30,t.PSYCHIC],[33,t.HEAL_PULSE],[36,t.DREAM_EATER],[39,t.FUTURE_SIGHT]],[e.KIRLIA]:[[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.DOUBLE_TEAM],[1,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[23,t.LIFE_DEW],[28,t.CHARM],[33,t.CALM_MIND],[38,t.PSYCHIC],[43,t.HEAL_PULSE],[48,t.DREAM_EATER],[53,t.FUTURE_SIGHT]],[e.GARDEVOIR]:[[Ae,t.DAZZLING_GLEAM],[1,t.MISTY_TERRAIN],[1,t.HEALING_WISH],[1,t.CHARM],[1,t.MYSTICAL_FIRE],[1,t.HEAL_PULSE],[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.DOUBLE_TEAM],[1,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[23,t.LIFE_DEW],[28,t.WISH],[35,t.CALM_MIND],[42,t.PSYCHIC],[49,t.MOONBLAST],[56,t.DREAM_EATER],[63,t.FUTURE_SIGHT]],[e.SURSKIT]:[[1,t.WATER_GUN],[6,t.QUICK_ATTACK],[9,t.SWEET_SCENT],[14,t.SOAK],[17,t.BUBBLE_BEAM],[22,t.AGILITY],[25,t.MIST],[25,t.HAZE],[35,t.BATON_PASS],[38,t.STICKY_WEB]],[e.MASQUERAIN]:[[Z,t.BATON_PASS],[Z,t.STICKY_WEB],[1,t.WHIRLWIND],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.SWEET_SCENT],[1,t.SOAK],[1,t.BUBBLE_BEAM],[1,t.AGILITY],[1,t.MIST],[1,t.HAZE],[1,t.OMINOUS_WIND],[17,t.GUST],[22,t.SCARY_FACE],[22,t.AIR_CUTTER],[26,t.STUN_SPORE],[32,t.AIR_SLASH],[38,t.GIGA_DRAIN],[44,t.BUG_BUZZ],[52,t.QUIVER_DANCE]],[e.SHROOMISH]:[[1,t.ABSORB],[1,t.TACKLE],[5,t.STUN_SPORE],[8,t.LEECH_SEED],[12,t.MEGA_DRAIN],[15,t.HEADBUTT],[19,t.POISON_POWDER],[26,t.GIGA_DRAIN],[29,t.GROWTH],[33,t.TOXIC],[36,t.SEED_BOMB],[40,t.SPORE]],[e.BRELOOM]:[[Ae,t.MACH_PUNCH],[Z,t.SPORE],[1,t.POISON_POWDER],[1,t.GIGA_DRAIN],[1,t.GROWTH],[1,t.TOXIC],[1,t.ABSORB],[1,t.TACKLE],[1,t.STUN_SPORE],[1,t.LEECH_SEED],[12,t.MEGA_DRAIN],[15,t.HEADBUTT],[19,t.FEINT],[22,t.COUNTER],[28,t.FORCE_PALM],[33,t.WORRY_SEED],[39,t.BRICK_BREAK],[44,t.SEED_BOMB],[50,t.DYNAMIC_PUNCH],[55,t.FOCUS_PUNCH]],[e.SLAKOTH]:[[1,t.SCRATCH],[1,t.YAWN],[6,t.ENCORE],[9,t.SLACK_OFF],[14,t.HEADBUTT],[17,t.AMNESIA],[22,t.COVET],[25,t.THROAT_CHOP],[30,t.COUNTER],[33,t.FLAIL],[38,t.PLAY_ROUGH]],[e.VIGOROTH]:[[Z,t.PLAY_ROUGH],[1,t.SCRATCH],[1,t.YAWN],[1,t.FOCUS_ENERGY],[1,t.SLACK_OFF],[1,t.ENCORE],[1,t.HEADBUTT],[1,t.AMNESIA],[1,t.COVET],[1,t.FLAIL],[1,t.UPROAR],[14,t.FURY_SWIPES],[17,t.ENDURE],[23,t.SLASH],[27,t.THROAT_CHOP],[33,t.COUNTER],[37,t.FOCUS_PUNCH],[43,t.REVERSAL]],[e.SLAKING]:[[Ae,t.SWAGGER],[Z,t.PLAY_ROUGH],[Z,t.FOCUS_PUNCH],[1,t.SUCKER_PUNCH],[1,t.SCRATCH],[1,t.YAWN],[1,t.FOCUS_ENERGY],[1,t.ENCORE],[1,t.SLACK_OFF],[1,t.UPROAR],[1,t.FURY_SWIPES],[1,t.ENDURE],[1,t.HEADBUTT],[1,t.SLASH],[1,t.REVERSAL],[17,t.AMNESIA],[23,t.COVET],[27,t.THROAT_CHOP],[33,t.COUNTER],[39,t.FLAIL],[45,t.FLING],[52,t.MEGA_KICK],[63,t.HAMMER_ARM]],[e.NINCADA]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[5,t.HARDEN],[10,t.FALSE_SWIPE],[15,t.MUD_SLAP],[21,t.ABSORB],[25,t.METAL_CLAW],[30,t.FURY_SWIPES],[35,t.MIND_READER],[40,t.DIG]],[e.NINJASK]:[[Ae,t.DOUBLE_TEAM],[Ae,t.SCREECH],[Ae,t.FURY_CUTTER],[1,t.BATON_PASS],[1,t.AERIAL_ACE],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[1,t.DIG],[1,t.SAND_ATTACK],[1,t.SCRATCH],[1,t.HARDEN],[1,t.FALSE_SWIPE],[15,t.AGILITY],[23,t.ABSORB],[29,t.BUG_BITE],[36,t.FURY_SWIPES],[43,t.MIND_READER],[50,t.SLASH],[57,t.SWORDS_DANCE],[64,t.X_SCISSOR]],[e.SHEDINJA]:[[1,t.SHADOW_CLAW],[1,t.GRUDGE],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[1,t.DIG],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.HARDEN],[1,t.FALSE_SWIPE],[15,t.CONFUSE_RAY],[23,t.ABSORB],[29,t.SHADOW_SNEAK],[36,t.FURY_SWIPES],[43,t.MIND_READER],[50,t.SHADOW_BALL],[57,t.SPITE],[64,t.PHANTOM_FORCE]],[e.WHISMUR]:[[1,t.ASTONISH],[1,t.POUND],[5,t.ECHOED_VOICE],[10,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[21,t.STOMP],[25,t.ROAR],[30,t.SUPERSONIC],[35,t.UPROAR],[40,t.SCREECH],[45,t.HYPER_VOICE]],[e.LOUDRED]:[[Ae,t.BITE],[1,t.ASTONISH],[1,t.POUND],[1,t.ECHOED_VOICE],[1,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[23,t.STOMP],[29,t.ROAR],[36,t.SUPERSONIC],[43,t.UPROAR],[50,t.SCREECH],[57,t.HYPER_VOICE]],[e.EXPLOUD]:[[Ae,t.CRUNCH],[1,t.BITE],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.THUNDER_FANG],[1,t.ASTONISH],[1,t.POUND],[1,t.ECHOED_VOICE],[1,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[23,t.STOMP],[29,t.ROAR],[36,t.SUPERSONIC],[45,t.UPROAR],[54,t.SCREECH],[63,t.HYPER_VOICE],[72,t.BOOMBURST],[81,t.HYPER_BEAM]],[e.MAKUHITA]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[4,t.SAND_ATTACK],[7,t.ARM_THRUST],[10,t.FAKE_OUT],[13,t.FORCE_PALM],[16,t.WHIRLWIND],[19,t.KNOCK_OFF],[22,t.BULK_UP],[25,t.BELLY_DRUM],[28,t.DETECT],[31,t.SEISMIC_TOSS],[34,t.FOCUS_PUNCH],[37,t.ENDURE],[40,t.CLOSE_COMBAT],[43,t.REVERSAL],[46,t.HEAVY_SLAM]],[e.HARIYAMA]:[[1,t.BRINE],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.SAND_ATTACK],[1,t.ARM_THRUST],[10,t.FAKE_OUT],[13,t.FORCE_PALM],[16,t.WHIRLWIND],[19,t.KNOCK_OFF],[22,t.BULK_UP],[26,t.BELLY_DRUM],[30,t.DETECT],[34,t.SEISMIC_TOSS],[38,t.FOCUS_PUNCH],[42,t.ENDURE],[46,t.CLOSE_COMBAT],[50,t.REVERSAL],[54,t.HEAVY_SLAM],[60,t.HEADLONG_RUSH]],[e.AZURILL]:[[1,t.SPLASH],[1,t.WATER_GUN],[1,t.TAIL_WHIP],[3,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE]],[e.NOSEPASS]:[[1,t.TACKLE],[4,t.HARDEN],[7,t.BLOCK],[10,t.ROCK_THROW],[13,t.THUNDER_WAVE],[16,t.REST],[19,t.SPARK],[22,t.ROCK_SLIDE],[25,t.POWER_GEM],[28,t.ROCK_BLAST],[31,t.DISCHARGE],[34,t.SANDSTORM],[37,t.EARTH_POWER],[40,t.STONE_EDGE],[43,t.LOCK_ON],[43,t.ZAP_CANNON]],[e.SKITTY]:[[1,t.FAKE_OUT],[1,t.GROWL],[1,t.TAIL_WHIP],[4,t.TACKLE],[7,t.SING],[10,t.ATTRACT],[13,t.DISARMING_VOICE],[16,t.FURY_SWIPES],[19,t.COPYCAT],[22,t.PAYBACK],[25,t.CHARM],[31,t.FACADE],[34,t.COVET],[37,t.HEAL_BELL],[40,t.DOUBLE_EDGE],[43,t.BABY_DOLL_EYES],[46,t.PLAY_ROUGH]],[e.DELCATTY]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.TACKLE],[1,t.SING],[1,t.ATTRACT],[1,t.DISARMING_VOICE],[1,t.FURY_SWIPES],[1,t.COPYCAT],[1,t.PAYBACK],[1,t.CHARM],[1,t.FACADE],[1,t.COVET],[1,t.HEAL_BELL],[1,t.DOUBLE_EDGE],[1,t.BABY_DOLL_EYES],[1,t.PLAY_ROUGH]],[e.SABLEYE]:[[1,t.LEER],[1,t.SCRATCH],[3,t.ASTONISH],[9,t.SHADOW_SNEAK],[12,t.FAKE_OUT],[15,t.DISABLE],[18,t.DETECT],[21,t.NIGHT_SHADE],[24,t.FURY_SWIPES],[27,t.KNOCK_OFF],[30,t.QUASH],[33,t.SHADOW_CLAW],[36,t.MEAN_LOOK],[39,t.POWER_GEM],[42,t.ZEN_HEADBUTT],[45,t.SHADOW_BALL],[48,t.FOUL_PLAY]],[e.MAWILE]:[[1,t.ASTONISH],[1,t.GROWL],[4,t.FAIRY_WIND],[8,t.BATON_PASS],[12,t.BITE],[16,t.STOCKPILE],[16,t.SPIT_UP],[16,t.SWALLOW],[20,t.SUCKER_PUNCH],[24,t.IRON_DEFENSE],[28,t.CRUNCH],[32,t.SWEET_SCENT],[36,t.IRON_HEAD],[40,t.TAUNT],[44,t.FAKE_TEARS],[48,t.PLAY_ROUGH]],[e.ARON]:[[1,t.TACKLE],[1,t.HARDEN],[4,t.METAL_CLAW],[8,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[33,t.METAL_SOUND],[36,t.TAKE_DOWN],[40,t.AUTOTOMIZE],[44,t.IRON_TAIL],[48,t.IRON_DEFENSE],[52,t.HEAVY_SLAM],[56,t.DOUBLE_EDGE],[60,t.METAL_BURST]],[e.LAIRON]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[35,t.METAL_SOUND],[40,t.TAKE_DOWN],[46,t.AUTOTOMIZE],[52,t.IRON_TAIL],[58,t.IRON_DEFENSE],[64,t.HEAVY_SLAM],[70,t.DOUBLE_EDGE],[76,t.METAL_BURST]],[e.AGGRON]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[35,t.METAL_SOUND],[40,t.TAKE_DOWN],[48,t.AUTOTOMIZE],[56,t.IRON_TAIL],[64,t.IRON_DEFENSE],[72,t.HEAVY_SLAM],[80,t.DOUBLE_EDGE],[88,t.METAL_BURST]],[e.MEDITITE]:[[1,t.CONFUSION],[1,t.WORK_UP],[1,t.BIDE],[9,t.DETECT],[12,t.ENDURE],[15,t.FEINT],[17,t.FORCE_PALM],[20,t.PSYBEAM],[23,t.CALM_MIND],[25,t.ZEN_HEADBUTT],[28,t.HIGH_JUMP_KICK],[31,t.PSYCH_UP],[33,t.ACUPRESSURE],[36,t.POWER_TRICK],[39,t.REVERSAL],[41,t.RECOVER],[44,t.COUNTER]],[e.MEDICHAM]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.CONFUSION],[1,t.DETECT],[1,t.WORK_UP],[1,t.BIDE],[1,t.REVERSAL],[12,t.ENDURE],[15,t.FEINT],[17,t.FORCE_PALM],[20,t.PSYBEAM],[23,t.CALM_MIND],[25,t.ZEN_HEADBUTT],[28,t.HIGH_JUMP_KICK],[31,t.PSYCH_UP],[33,t.ACUPRESSURE],[36,t.POWER_TRICK],[47,t.RECOVER],[53,t.COUNTER],[53,t.AXE_KICK]],[e.ELECTRIKE]:[[1,t.TACKLE],[1,t.THUNDER_WAVE],[4,t.LEER],[8,t.HOWL],[12,t.QUICK_ATTACK],[16,t.SHOCK_WAVE],[20,t.BITE],[24,t.THUNDER_FANG],[28,t.ROAR],[32,t.DISCHARGE],[36,t.CHARGE],[40,t.WILD_CHARGE],[44,t.THUNDER]],[e.MANECTRIC]:[[1,t.FIRE_FANG],[1,t.TACKLE],[1,t.THUNDER_WAVE],[1,t.LEER],[1,t.HOWL],[12,t.QUICK_ATTACK],[16,t.SHOCK_WAVE],[20,t.BITE],[24,t.THUNDER_FANG],[30,t.ROAR],[36,t.DISCHARGE],[42,t.CHARGE],[48,t.WILD_CHARGE],[54,t.THUNDER],[60,t.ELECTRIC_TERRAIN]],[e.PLUSLE]:[[Z,t.NUZZLE],[1,t.PLAY_NICE],[1,t.GROWL],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[4,t.HELPING_HAND],[7,t.SPARK],[10,t.ENCORE],[13,t.SWITCHEROO],[16,t.SWIFT],[19,t.ELECTRO_BALL],[22,t.COPYCAT],[26,t.CHARGE],[31,t.DISCHARGE],[34,t.BATON_PASS],[37,t.AGILITY],[40,t.LAST_RESORT],[43,t.THUNDER],[46,t.NASTY_PLOT],[49,t.ENTRAINMENT]],[e.MINUN]:[[Z,t.NUZZLE],[1,t.PLAY_NICE],[1,t.GROWL],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[4,t.HELPING_HAND],[7,t.SPARK],[10,t.ENCORE],[13,t.SWITCHEROO],[16,t.SWIFT],[19,t.ELECTRO_BALL],[22,t.COPYCAT],[26,t.CHARGE],[31,t.DISCHARGE],[34,t.BATON_PASS],[37,t.AGILITY],[40,t.LAST_RESORT],[43,t.THUNDER],[46,t.NASTY_PLOT],[49,t.ENTRAINMENT]],[e.VOLBEAT]:[[1,t.FLASH],[1,t.TACKLE],[5,t.DOUBLE_TEAM],[8,t.CONFUSE_RAY],[12,t.QUICK_ATTACK],[15,t.STRUGGLE_BUG],[19,t.MOONLIGHT],[22,t.TAIL_GLOW],[26,t.PROTECT],[29,t.ZEN_HEADBUTT],[33,t.HELPING_HAND],[36,t.BUG_BUZZ],[40,t.PLAY_ROUGH],[43,t.DOUBLE_EDGE],[47,t.INFESTATION]],[e.ILLUMISE]:[[1,t.TACKLE],[1,t.PLAY_NICE],[5,t.SWEET_SCENT],[9,t.CHARM],[12,t.QUICK_ATTACK],[15,t.STRUGGLE_BUG],[19,t.MOONLIGHT],[22,t.WISH],[26,t.ENCORE],[29,t.FLATTER],[33,t.ZEN_HEADBUTT],[36,t.HELPING_HAND],[40,t.BUG_BUZZ],[43,t.PLAY_ROUGH],[47,t.INFESTATION]],[e.ROSELIA]:[[Ae,t.POISON_STING],[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.WORRY_SEED],[5,t.MEGA_DRAIN],[10,t.LEECH_SEED],[15,t.MAGICAL_LEAF],[20,t.TOXIC_SPIKES],[25,t.SWEET_SCENT],[30,t.GIGA_DRAIN],[35,t.SYNTHESIS],[40,t.TOXIC],[45,t.PETAL_BLIZZARD],[50,t.AROMATHERAPY],[55,t.INGRAIN],[60,t.PETAL_DANCE]],[e.GULPIN]:[[1,t.POUND],[5,t.YAWN],[8,t.POISON_GAS],[10,t.SLUDGE],[12,t.AMNESIA],[17,t.ACID_SPRAY],[20,t.ENCORE],[25,t.TOXIC],[28,t.STOCKPILE],[28,t.SPIT_UP],[28,t.SWALLOW],[33,t.SLUDGE_BOMB],[36,t.GASTRO_ACID],[41,t.BELCH],[44,t.PAIN_SPLIT],[49,t.GUNK_SHOT]],[e.SWALOT]:[[Ae,t.BODY_SLAM],[1,t.GUNK_SHOT],[1,t.POUND],[1,t.YAWN],[1,t.POISON_GAS],[1,t.WRING_OUT],[1,t.SLUDGE],[1,t.PAIN_SPLIT],[12,t.AMNESIA],[17,t.ACID_SPRAY],[20,t.ENCORE],[25,t.TOXIC],[30,t.STOCKPILE],[30,t.SPIT_UP],[30,t.SWALLOW],[37,t.SLUDGE_BOMB],[42,t.GASTRO_ACID],[49,t.BELCH]],[e.CARVANHA]:[[1,t.AQUA_JET],[1,t.LEER],[4,t.POISON_FANG],[8,t.FOCUS_ENERGY],[12,t.SCARY_FACE],[16,t.BITE],[20,t.ICE_FANG],[24,t.SCREECH],[28,t.SWAGGER],[32,t.CRUNCH],[36,t.AGILITY],[40,t.LIQUIDATION],[44,t.TAKE_DOWN]],[e.SHARPEDO]:[[Ae,t.SLASH],[1,t.NIGHT_SLASH],[1,t.AQUA_JET],[1,t.LEER],[1,t.POISON_FANG],[1,t.FOCUS_ENERGY],[12,t.SCARY_FACE],[16,t.BITE],[20,t.ICE_FANG],[24,t.SCREECH],[28,t.SWAGGER],[34,t.CRUNCH],[40,t.AGILITY],[46,t.LIQUIDATION],[52,t.TAKE_DOWN]],[e.WAILMER]:[[1,t.SPLASH],[1,t.TACKLE],[3,t.GROWL],[6,t.ASTONISH],[12,t.WATER_GUN],[15,t.MIST],[18,t.WATER_PULSE],[21,t.HEAVY_SLAM],[24,t.BRINE],[27,t.WHIRLPOOL],[30,t.DIVE],[33,t.BOUNCE],[36,t.BODY_SLAM],[39,t.REST],[42,t.AMNESIA],[45,t.HYDRO_PUMP],[48,t.WATER_SPOUT]],[e.WAILORD]:[[1,t.SOAK],[1,t.NOBLE_ROAR],[1,t.SPLASH],[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.WATER_GUN],[15,t.MIST],[18,t.WATER_PULSE],[21,t.HEAVY_SLAM],[24,t.BRINE],[27,t.WHIRLPOOL],[30,t.DIVE],[33,t.BOUNCE],[36,t.BODY_SLAM],[39,t.REST],[44,t.AMNESIA],[49,t.HYDRO_PUMP],[54,t.WATER_SPOUT]],[e.NUMEL]:[[1,t.GROWL],[1,t.TACKLE],[5,t.EMBER],[8,t.FOCUS_ENERGY],[12,t.BULLDOZE],[15,t.INCINERATE],[19,t.AMNESIA],[22,t.LAVA_PLUME],[26,t.EARTH_POWER],[29,t.CURSE],[31,t.TAKE_DOWN],[40,t.EARTHQUAKE],[43,t.FLAMETHROWER],[47,t.DOUBLE_EDGE]],[e.CAMERUPT]:[[Ae,t.ROCK_SLIDE],[Z,t.FLAMETHROWER],[Z,t.DOUBLE_EDGE],[1,t.FISSURE],[1,t.ERUPTION],[1,t.GROWL],[1,t.TACKLE],[1,t.EMBER],[1,t.FOCUS_ENERGY],[12,t.BULLDOZE],[15,t.INCINERATE],[19,t.AMNESIA],[22,t.LAVA_PLUME],[26,t.EARTH_POWER],[29,t.CURSE],[31,t.TAKE_DOWN],[39,t.YAWN],[46,t.EARTHQUAKE]],[e.TORKOAL]:[[1,t.SMOG],[1,t.EMBER],[4,t.WITHDRAW],[8,t.RAPID_SPIN],[12,t.SMOKESCREEN],[16,t.CLEAR_SMOG],[20,t.FLAME_WHEEL],[24,t.PROTECT],[28,t.LAVA_PLUME],[32,t.BODY_SLAM],[36,t.IRON_DEFENSE],[40,t.FLAMETHROWER],[44,t.CURSE],[48,t.HEAT_WAVE],[52,t.AMNESIA],[56,t.INFERNO],[60,t.SHELL_SMASH],[64,t.ERUPTION]],[e.SPOINK]:[[1,t.SPLASH],[5,t.CONFUSION],[10,t.GROWL],[14,t.PSYBEAM],[18,t.PSYCH_UP],[22,t.CONFUSE_RAY],[29,t.REST],[29,t.POWER_GEM],[33,t.SNORE],[38,t.PSYSHOCK],[40,t.PAYBACK],[44,t.PSYCHIC],[50,t.BOUNCE]],[e.GRUMPIG]:[[Ae,t.TEETER_DANCE],[1,t.BELCH],[1,t.SPLASH],[1,t.CONFUSION],[1,t.GROWL],[1,t.PSYBEAM],[18,t.PSYCH_UP],[22,t.CONFUSE_RAY],[26,t.ZEN_HEADBUTT],[29,t.POWER_GEM],[35,t.REST],[35,t.SNORE],[42,t.PSYSHOCK],[46,t.PAYBACK],[52,t.PSYCHIC],[60,t.BOUNCE]],[e.SPINDA]:[[1,t.TACKLE],[5,t.COPYCAT],[10,t.DIZZY_PUNCH],[14,t.PSYBEAM],[19,t.HYPNOSIS],[23,t.BODY_SLAM],[28,t.SUCKER_PUNCH],[32,t.TEETER_DANCE],[37,t.UPROAR],[41,t.PSYCH_UP],[46,t.DOUBLE_EDGE],[50,t.FLAIL],[55,t.THRASH]],[e.TRAPINCH]:[[1,t.SAND_ATTACK],[1,t.ASTONISH],[1,t.BIDE],[1,t.FEINT_ATTACK],[8,t.BITE],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.BULLDOZE],[24,t.DIG],[28,t.CRUNCH],[32,t.SANDSTORM],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.SUPERPOWER],[48,t.FISSURE]],[e.VIBRAVA]:[[Ae,t.DRAGON_BREATH],[Z,t.SUPERSONIC],[Z,t.FISSURE],[Z,t.CRUNCH],[Z,t.SUPERPOWER],[Z,t.ASTONISH],[Z,t.BULLDOZE],[1,t.DIG],[1,t.SAND_ATTACK],[1,t.BITE],[1,t.BIDE],[1,t.FEINT_ATTACK],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.DRAGON_TAIL],[24,t.SCREECH],[28,t.BUG_BUZZ],[32,t.SANDSTORM],[38,t.EARTH_POWER],[44,t.EARTHQUAKE],[50,t.UPROAR],[56,t.DRAGON_RUSH],[62,t.BOOMBURST]],[e.FLYGON]:[[Ae,t.DRAGON_CLAW],[Z,t.BITE],[Z,t.FISSURE],[Z,t.DIG],[Z,t.CRUNCH],[Z,t.SUPERPOWER],[Z,t.ASTONISH],[Z,t.DRAGON_DANCE],[Z,t.FEINT],[1,t.DRAGON_BREATH],[1,t.BULLDOZE],[1,t.SAND_ATTACK],[1,t.SUPERSONIC],[1,t.BIDE],[1,t.FEINT_ATTACK],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.DRAGON_TAIL],[24,t.SCREECH],[28,t.BUG_BUZZ],[32,t.SANDSTORM],[38,t.EARTH_POWER],[44,t.EARTHQUAKE],[52,t.UPROAR],[60,t.DRAGON_RUSH],[68,t.BOOMBURST]],[e.CACNEA]:[[1,t.POISON_STING],[1,t.LEER],[4,t.ABSORB],[7,t.GROWTH],[10,t.LEECH_SEED],[13,t.SAND_ATTACK],[16,t.BULLET_SEED],[19,t.POWER_TRIP],[22,t.INGRAIN],[26,t.PAYBACK],[30,t.SPIKES],[34,t.SUCKER_PUNCH],[38,t.PIN_MISSILE],[42,t.ENERGY_BALL],[46,t.COTTON_SPORE],[50,t.SANDSTORM],[54,t.DESTINY_BOND]],[e.CACTURNE]:[[Ae,t.SPIKY_SHIELD],[1,t.DESTINY_BOND],[1,t.POISON_STING],[1,t.LEER],[1,t.ABSORB],[1,t.GROWTH],[10,t.LEECH_SEED],[13,t.SAND_ATTACK],[16,t.BULLET_SEED],[19,t.POWER_TRIP],[22,t.INGRAIN],[26,t.PAYBACK],[30,t.SPIKES],[35,t.SUCKER_PUNCH],[38,t.PIN_MISSILE],[44,t.ENERGY_BALL],[49,t.COTTON_SPORE],[54,t.SANDSTORM]],[e.SWABLU]:[[1,t.PECK],[1,t.GROWL],[4,t.DISARMING_VOICE],[8,t.MIST],[12,t.FURY_ATTACK],[16,t.ROUND],[20,t.DRAGON_BREATH],[24,t.SAFEGUARD],[28,t.SING],[32,t.COTTON_GUARD],[36,t.TAKE_DOWN],[40,t.MOONBLAST],[44,t.PERISH_SONG]],[e.ALTARIA]:[[Ae,t.DRAGON_PULSE],[1,t.PLUCK],[1,t.PECK],[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.MIST],[12,t.FURY_ATTACK],[16,t.ROUND],[20,t.DRAGON_BREATH],[24,t.SAFEGUARD],[28,t.SING],[32,t.COTTON_GUARD],[38,t.TAKE_DOWN],[44,t.MOONBLAST],[50,t.PERISH_SONG],[56,t.SKY_ATTACK]],[e.ZANGOOSE]:[[Z,t.DOUBLE_KICK],[Z,t.DISABLE],[Z,t.COUNTER],[Z,t.FURY_SWIPES],[Z,t.CURSE],[Z,t.FLAIL],[Z,t.BELLY_DRUM],[Z,t.FEINT],[Z,t.NIGHT_SLASH],[Z,t.DOUBLE_HIT],[Z,t.QUICK_GUARD],[Z,t.FINAL_GAMBIT],[1,t.SCRATCH],[1,t.LEER],[5,t.QUICK_ATTACK],[8,t.FURY_CUTTER],[12,t.METAL_CLAW],[15,t.HONE_CLAWS],[19,t.SLASH],[22,t.POWER_TRIP],[26,t.CRUSH_CLAW],[29,t.FALSE_SWIPE],[33,t.SWITCHEROO],[36,t.DETECT],[40,t.X_SCISSOR],[43,t.TAUNT],[47,t.SWORDS_DANCE],[50,t.CLOSE_COMBAT]],[e.SEVIPER]:[[1,t.WRAP],[1,t.SWAGGER],[4,t.BITE],[6,t.LICK],[9,t.POISON_TAIL],[11,t.FEINT],[14,t.SCREECH],[19,t.GLARE],[21,t.POISON_FANG],[24,t.VENOSHOCK],[29,t.GASTRO_ACID],[31,t.POISON_JAB],[34,t.HAZE],[39,t.CRUNCH],[41,t.BELCH],[44,t.COIL],[46,t.SLUDGE_BOMB]],[e.LUNATONE]:[[1,t.MOONBLAST],[1,t.MOONLIGHT],[1,t.TACKLE],[1,t.HARDEN],[1,t.CONFUSION],[1,t.ROCK_THROW],[5,t.HYPNOSIS],[10,t.ROCK_POLISH],[15,t.ROCK_SLIDE],[20,t.PSYSHOCK],[25,t.COSMIC_POWER],[30,t.PSYCHIC],[35,t.STONE_EDGE],[40,t.FUTURE_SIGHT],[45,t.MAGIC_ROOM],[50,t.EXPLOSION]],[e.SOLROCK]:[[1,t.FLARE_BLITZ],[1,t.MORNING_SUN],[1,t.TACKLE],[1,t.HARDEN],[1,t.CONFUSION],[1,t.ROCK_THROW],[5,t.HYPNOSIS],[10,t.ROCK_POLISH],[15,t.ROCK_SLIDE],[20,t.ZEN_HEADBUTT],[25,t.COSMIC_POWER],[30,t.PSYCHIC],[35,t.STONE_EDGE],[40,t.SOLAR_BEAM],[45,t.WONDER_ROOM],[50,t.EXPLOSION]],[e.BARBOACH]:[[1,t.MUD_SLAP],[1,t.WATER_GUN],[6,t.REST],[6,t.SNORE],[12,t.WATER_PULSE],[18,t.AMNESIA],[24,t.AQUA_TAIL],[31,t.MUDDY_WATER],[36,t.EARTHQUAKE],[42,t.FUTURE_SIGHT],[48,t.FISSURE]],[e.WHISCASH]:[[Ae,t.THRASH],[1,t.BELCH],[1,t.ZEN_HEADBUTT],[1,t.TICKLE],[1,t.MUD_SLAP],[1,t.WATER_GUN],[1,t.REST],[1,t.SNORE],[12,t.WATER_PULSE],[18,t.AMNESIA],[24,t.AQUA_TAIL],[33,t.MUDDY_WATER],[40,t.EARTHQUAKE],[48,t.FUTURE_SIGHT],[56,t.FISSURE]],[e.CORPHISH]:[[1,t.WATER_GUN],[1,t.HARDEN],[4,t.LEER],[8,t.TAUNT],[12,t.BUBBLE_BEAM],[16,t.KNOCK_OFF],[20,t.DOUBLE_HIT],[24,t.PROTECT],[28,t.NIGHT_SLASH],[32,t.RAZOR_SHELL],[36,t.SWORDS_DANCE],[40,t.CRUNCH],[44,t.CRABHAMMER],[48,t.ENDEAVOR],[52,t.GUILLOTINE]],[e.CRAWDAUNT]:[[Ae,t.SWIFT],[1,t.WATER_GUN],[1,t.HARDEN],[1,t.LEER],[1,t.TAUNT],[12,t.BUBBLE_BEAM],[16,t.KNOCK_OFF],[20,t.DOUBLE_HIT],[24,t.PROTECT],[28,t.NIGHT_SLASH],[34,t.RAZOR_SHELL],[40,t.SWORDS_DANCE],[46,t.CRUNCH],[52,t.CRABHAMMER],[58,t.ENDEAVOR],[64,t.GUILLOTINE]],[e.BALTOY]:[[1,t.HARDEN],[1,t.MUD_SLAP],[3,t.RAPID_SPIN],[6,t.CONFUSION],[9,t.ROCK_TOMB],[12,t.POWER_TRICK],[15,t.PSYBEAM],[18,t.ANCIENT_POWER],[21,t.IMPRISON],[24,t.COSMIC_POWER],[27,t.EXTRASENSORY],[30,t.EARTH_POWER],[33,t.SELF_DESTRUCT],[36,t.GUARD_SPLIT],[36,t.POWER_SPLIT],[39,t.SANDSTORM],[42,t.EXPLOSION]],[e.CLAYDOL]:[[Ae,t.HYPER_BEAM],[1,t.TELEPORT],[1,t.HARDEN],[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.CONFUSION],[9,t.ROCK_TOMB],[12,t.POWER_TRICK],[15,t.PSYBEAM],[18,t.ANCIENT_POWER],[21,t.IMPRISON],[24,t.COSMIC_POWER],[27,t.EXTRASENSORY],[30,t.EARTH_POWER],[33,t.SELF_DESTRUCT],[38,t.GUARD_SPLIT],[38,t.POWER_SPLIT],[43,t.SANDSTORM],[48,t.EXPLOSION]],[e.LILEEP]:[[1,t.WRAP],[1,t.ASTONISH],[1,t.CONSTRICT],[4,t.ACID],[8,t.CONFUSE_RAY],[12,t.INGRAIN],[16,t.ANCIENT_POWER],[20,t.MEGA_DRAIN],[24,t.BRINE],[28,t.AMNESIA],[32,t.GASTRO_ACID],[36,t.GIGA_DRAIN],[41,t.STOCKPILE],[41,t.SPIT_UP],[41,t.SWALLOW],[44,t.ENERGY_BALL]],[e.CRADILY]:[[1,t.LEECH_SEED],[1,t.WRAP],[1,t.ASTONISH],[1,t.CONSTRICT],[1,t.ACID],[1,t.CONFUSE_RAY],[12,t.INGRAIN],[16,t.ANCIENT_POWER],[20,t.MEGA_DRAIN],[24,t.BRINE],[28,t.AMNESIA],[32,t.GASTRO_ACID],[36,t.GIGA_DRAIN],[43,t.STOCKPILE],[43,t.SPIT_UP],[43,t.SWALLOW],[48,t.ENERGY_BALL]],[e.ANORITH]:[[1,t.FURY_CUTTER],[1,t.HARDEN],[4,t.WATER_GUN],[8,t.SMACK_DOWN],[12,t.METAL_CLAW],[16,t.ANCIENT_POWER],[20,t.BUG_BITE],[24,t.BRINE],[28,t.SLASH],[32,t.CRUSH_CLAW],[36,t.ROCK_BLAST],[41,t.PROTECT],[44,t.X_SCISSOR]],[e.ARMALDO]:[[1,t.FURY_CUTTER],[1,t.HARDEN],[1,t.WATER_GUN],[1,t.SMACK_DOWN],[12,t.METAL_CLAW],[16,t.ANCIENT_POWER],[20,t.BUG_BITE],[24,t.BRINE],[28,t.SLASH],[32,t.CRUSH_CLAW],[36,t.ROCK_BLAST],[43,t.PROTECT],[48,t.X_SCISSOR]],[e.FEEBAS]:[[1,t.SPLASH],[15,t.TACKLE],[25,t.FLAIL]],[e.MILOTIC]:[[Ae,t.WATER_PULSE],[1,t.FLAIL],[1,t.SPLASH],[1,t.TACKLE],[1,t.WRAP],[1,t.WATER_GUN],[1,t.WATER_SPORT],[4,t.DISARMING_VOICE],[8,t.TWISTER],[12,t.AQUA_RING],[16,t.ATTRACT],[20,t.LIFE_DEW],[24,t.DRAGON_TAIL],[28,t.RECOVER],[32,t.AQUA_TAIL],[36,t.SAFEGUARD],[40,t.SURF],[44,t.RAIN_DANCE],[48,t.COIL],[52,t.HYDRO_PUMP]],[e.CASTFORM]:[[1,t.TACKLE],[10,t.WATER_GUN],[10,t.EMBER],[10,t.POWDER_SNOW],[15,t.HEADBUTT],[20,t.RAIN_DANCE],[20,t.SUNNY_DAY],[20,t.HAIL],[25,t.WEATHER_BALL],[35,t.HYDRO_PUMP],[35,t.FIRE_BLAST],[35,t.BLIZZARD],[45,t.HURRICANE]],[e.KECLEON]:[[1,t.THIEF],[1,t.TAIL_WHIP],[1,t.ASTONISH],[1,t.LICK],[1,t.SCRATCH],[4,t.BIND],[7,t.SHADOW_SNEAK],[10,t.FEINT],[13,t.FURY_SWIPES],[16,t.DISABLE],[18,t.PSYBEAM],[21,t.ANCIENT_POWER],[25,t.SLASH],[30,t.DETECT],[33,t.SHADOW_CLAW],[38,t.SCREECH],[42,t.SUBSTITUTE],[46,t.SUCKER_PUNCH],[50,t.FOUL_PLAY]],[e.SHUPPET]:[[1,t.ASTONISH],[1,t.PURSUIT],[4,t.SCREECH],[7,t.NIGHT_SHADE],[10,t.SPITE],[16,t.WILL_O_WISP],[19,t.SHADOW_SNEAK],[22,t.HEX],[26,t.CURSE],[30,t.SHADOW_BALL],[34,t.ROLE_PLAY],[38,t.SUCKER_PUNCH],[42,t.TRICK],[48,t.PHANTOM_FORCE]],[e.BANETTE]:[[Ae,t.KNOCK_OFF],[1,t.ASTONISH],[1,t.PURSUIT],[1,t.SCREECH],[1,t.NIGHT_SHADE],[1,t.SPITE],[16,t.WILL_O_WISP],[19,t.SHADOW_SNEAK],[22,t.HEX],[26,t.CURSE],[30,t.SHADOW_BALL],[34,t.ROLE_PLAY],[40,t.SUCKER_PUNCH],[46,t.TRICK],[53,t.PHANTOM_FORCE]],[e.DUSKULL]:[[1,t.ASTONISH],[1,t.LEER],[1,t.PURSUIT],[4,t.DISABLE],[8,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.FUTURE_SIGHT]],[e.DUSCLOPS]:[[Ae,t.SHADOW_PUNCH],[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.GRAVITY],[1,t.BIND],[1,t.ASTONISH],[1,t.LEER],[1,t.PURSUIT],[1,t.DISABLE],[1,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[42,t.SHADOW_BALL],[48,t.FUTURE_SIGHT]],[e.TROPIUS]:[[1,t.LEAF_STORM],[1,t.GUST],[1,t.LEER],[1,t.GROWTH],[1,t.RAZOR_LEAF],[6,t.SWEET_SCENT],[10,t.STOMP],[16,t.MAGICAL_LEAF],[21,t.WHIRLWIND],[30,t.WIDE_GUARD],[36,t.AIR_SLASH],[41,t.BODY_SLAM],[46,t.OUTRAGE],[50,t.SYNTHESIS],[56,t.SOLAR_BEAM]],[e.CHIMECHO]:[[1,t.HEALING_WISH],[1,t.LAST_RESORT],[1,t.ENTRAINMENT],[1,t.WRAP],[1,t.PSYWAVE],[1,t.GROWL],[1,t.ASTONISH],[1,t.CONFUSION],[1,t.SYNCHRONOISE],[13,t.YAWN],[16,t.STORED_POWER],[19,t.TAKE_DOWN],[22,t.EXTRASENSORY],[27,t.HEAL_BELL],[32,t.UPROAR],[37,t.SAFEGUARD],[42,t.DOUBLE_EDGE],[47,t.HEAL_PULSE]],[e.ABSOL]:[[1,t.QUICK_ATTACK],[1,t.LEER],[5,t.DOUBLE_TEAM],[10,t.KNOCK_OFF],[15,t.DETECT],[20,t.TAUNT],[25,t.SLASH],[30,t.NIGHT_SLASH],[35,t.FOCUS_ENERGY],[40,t.SUCKER_PUNCH],[45,t.SWORDS_DANCE],[50,t.FUTURE_SIGHT],[55,t.PERISH_SONG]],[e.WYNAUT]:[[1,t.COUNTER],[1,t.MIRROR_COAT],[1,t.SAFEGUARD],[1,t.DESTINY_BOND],[1,t.SPLASH],[1,t.CHARM],[1,t.ENCORE],[1,t.AMNESIA]],[e.SNORUNT]:[[1,t.POWDER_SNOW],[1,t.ASTONISH],[1,t.HEADBUTT],[5,t.LEER],[10,t.DOUBLE_TEAM],[15,t.ICE_SHARD],[20,t.PROTECT],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.BITE],[40,t.ICE_FANG],[45,t.SNOWSCAPE],[50,t.WEATHER_BALL],[55,t.CRUNCH],[60,t.BLIZZARD]],[e.GLALIE]:[[Ae,t.FREEZE_DRY],[1,t.SHEER_COLD],[1,t.POWDER_SNOW],[1,t.HEADBUTT],[1,t.ASTONISH],[1,t.LEER],[1,t.DOUBLE_TEAM],[1,t.ICE_BALL],[15,t.ICE_SHARD],[20,t.PROTECT],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.BITE],[40,t.ICE_FANG],[47,t.SNOWSCAPE],[54,t.WEATHER_BALL],[61,t.CRUNCH],[68,t.BLIZZARD]],[e.SPHEAL]:[[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[4,t.GROWL],[8,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[33,t.ENCORE],[36,t.BODY_SLAM],[40,t.SURF],[44,t.BLIZZARD],[48,t.HAIL],[52,t.SHEER_COLD]],[e.SEALEO]:[[Ae,t.SWAGGER],[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[1,t.GROWL],[1,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[35,t.ENCORE],[40,t.BODY_SLAM],[46,t.SURF],[52,t.BLIZZARD],[58,t.HAIL],[64,t.SHEER_COLD]],[e.WALREIN]:[[1,t.SWAGGER],[1,t.CRUNCH],[1,t.ICE_FANG],[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[1,t.GROWL],[1,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[35,t.ENCORE],[40,t.BODY_SLAM],[48,t.SURF],[56,t.BLIZZARD],[64,t.HAIL],[72,t.SHEER_COLD]],[e.CLAMPERL]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.WHIRLPOOL],[1,t.IRON_DEFENSE],[50,t.SHELL_SMASH]],[e.HUNTAIL]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.IRON_DEFENSE],[1,t.SHELL_SMASH],[1,t.WHIRLPOOL],[1,t.BITE],[5,t.SCREECH],[9,t.SCARY_FACE],[11,t.RAIN_DANCE],[14,t.WATER_PULSE],[16,t.ICE_FANG],[19,t.BRINE],[23,t.SUCKER_PUNCH],[26,t.DIVE],[29,t.BATON_PASS],[34,t.CRUNCH],[39,t.AQUA_TAIL],[45,t.COIL],[50,t.HYDRO_PUMP]],[e.GOREBYSS]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.IRON_DEFENSE],[1,t.SHELL_SMASH],[1,t.WHIRLPOOL],[1,t.CONFUSION],[5,t.RAIN_DANCE],[9,t.AGILITY],[11,t.DRAINING_KISS],[14,t.WATER_PULSE],[16,t.AMNESIA],[19,t.AQUA_RING],[23,t.SAFEGUARD],[26,t.DIVE],[29,t.BATON_PASS],[34,t.PSYCHIC],[39,t.AQUA_TAIL],[45,t.COIL],[50,t.HYDRO_PUMP]],[e.RELICANTH]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.WATER_GUN],[10,t.ANCIENT_POWER],[15,t.YAWN],[20,t.DIVE],[25,t.TAKE_DOWN],[30,t.AQUA_TAIL],[35,t.REST],[40,t.FLAIL],[45,t.HYDRO_PUMP],[50,t.DOUBLE_EDGE],[55,t.HEAD_SMASH]],[e.LUVDISC]:[[1,t.TACKLE],[1,t.CHARM],[4,t.WATER_GUN],[7,t.AGILITY],[13,t.WISH],[17,t.WATER_PULSE],[20,t.ATTRACT],[22,t.DRAINING_KISS],[26,t.FLAIL],[31,t.SWEET_KISS],[34,t.TAKE_DOWN],[37,t.BABY_DOLL_EYES],[40,t.AQUA_RING],[42,t.SOAK],[46,t.HYDRO_PUMP],[49,t.SAFEGUARD]],[e.BAGON]:[[1,t.EMBER],[1,t.LEER],[5,t.BITE],[10,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[31,t.DRAGON_CLAW],[35,t.ZEN_HEADBUTT],[40,t.FOCUS_ENERGY],[45,t.FLAMETHROWER],[50,t.OUTRAGE],[55,t.DOUBLE_EDGE]],[e.SHELGON]:[[Ae,t.PROTECT],[1,t.EMBER],[1,t.LEER],[1,t.BITE],[1,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[33,t.DRAGON_CLAW],[39,t.ZEN_HEADBUTT],[46,t.FOCUS_ENERGY],[53,t.FLAMETHROWER],[60,t.OUTRAGE],[67,t.DOUBLE_EDGE]],[e.SALAMENCE]:[[Ae,t.FLY],[Z,t.OUTRAGE],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.DUAL_WINGBEAT],[1,t.ROOST],[1,t.EMBER],[1,t.LEER],[1,t.BITE],[1,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[33,t.DRAGON_CLAW],[39,t.ZEN_HEADBUTT],[46,t.FOCUS_ENERGY],[55,t.FLAMETHROWER],[73,t.DOUBLE_EDGE]],[e.BELDUM]:[[1,t.TACKLE]],[e.METANG]:[[Ae,t.CONFUSION],[Ae,t.METAL_CLAW],[1,t.TACKLE],[1,t.BULLET_PUNCH],[1,t.HONE_CLAWS],[6,t.ZEN_HEADBUTT],[12,t.MAGNET_RISE],[18,t.FLASH_CANNON],[26,t.TAKE_DOWN],[34,t.PSYCHIC],[42,t.SCARY_FACE],[50,t.METEOR_MASH],[58,t.IRON_DEFENSE],[66,t.AGILITY],[74,t.HYPER_BEAM]],[e.METAGROSS]:[[Ae,t.HAMMER_ARM],[Z,t.EXPLOSION],[Z,t.HONE_CLAWS],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.BULLET_PUNCH],[1,t.TACKLE],[6,t.ZEN_HEADBUTT],[12,t.MAGNET_RISE],[16,t.FLASH_CANNON],[26,t.TAKE_DOWN],[34,t.PSYCHIC],[42,t.SCARY_FACE],[52,t.METEOR_MASH],[62,t.IRON_DEFENSE],[72,t.AGILITY],[82,t.HYPER_BEAM]],[e.REGIROCK]:[[1,t.CHARGE_BEAM],[1,t.ROCK_THROW],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.ROCK_SLIDE],[30,t.CURSE],[36,t.IRON_DEFENSE],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGICE]:[[1,t.CHARGE_BEAM],[1,t.ICY_WIND],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.ICE_BEAM],[30,t.CURSE],[36,t.AMNESIA],[42,t.HAMMER_ARM],[48,t.BLIZZARD],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGISTEEL]:[[1,t.CHARGE_BEAM],[1,t.METAL_CLAW],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.IRON_HEAD],[24,t.FLASH_CANNON],[30,t.CURSE],[36,t.AMNESIA],[36,t.IRON_DEFENSE],[42,t.HAMMER_ARM],[48,t.HEAVY_SLAM],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.LATIAS]:[[1,t.STORED_POWER],[1,t.CHARM],[1,t.PSYWAVE],[5,t.HELPING_HAND],[10,t.RECOVER],[15,t.CONFUSION],[20,t.TAILWIND],[25,t.DRAGON_BREATH],[30,t.WISH],[35,t.MIST_BALL],[40,t.ZEN_HEADBUTT],[45,t.DRAGON_PULSE],[50,t.HEAL_PULSE],[55,t.REFLECT_TYPE],[60,t.PSYCHIC],[65,t.GUARD_SPLIT],[70,t.HEALING_WISH]],[e.LATIOS]:[[1,t.STORED_POWER],[1,t.DRAGON_DANCE],[1,t.HEAL_BLOCK],[1,t.PSYWAVE],[5,t.HELPING_HAND],[10,t.RECOVER],[15,t.CONFUSION],[20,t.TAILWIND],[25,t.DRAGON_BREATH],[30,t.ALLY_SWITCH],[35,t.LUSTER_PURGE],[40,t.ZEN_HEADBUTT],[45,t.DRAGON_PULSE],[50,t.HEAL_PULSE],[55,t.SIMPLE_BEAM],[60,t.PSYCHIC],[65,t.POWER_SPLIT],[70,t.MEMENTO]],[e.KYOGRE]:[[1,t.ORIGIN_PULSE],[1,t.WATER_PULSE],[1,t.ANCIENT_POWER],[1,t.BODY_SLAM],[1,t.SCARY_FACE],[9,t.AQUA_TAIL],[18,t.CALM_MIND],[27,t.MUDDY_WATER],[36,t.ICE_BEAM],[45,t.SHEER_COLD],[54,t.AQUA_RING],[72,t.HYDRO_PUMP],[81,t.DOUBLE_EDGE],[90,t.WATER_SPOUT]],[e.GROUDON]:[[1,t.PRECIPICE_BLADES],[1,t.MUD_SHOT],[1,t.ANCIENT_POWER],[1,t.LAVA_PLUME],[1,t.SCARY_FACE],[9,t.EARTH_POWER],[18,t.BULK_UP],[27,t.EARTHQUAKE],[36,t.HAMMER_ARM],[45,t.FISSURE],[54,t.REST],[72,t.FIRE_BLAST],[81,t.SOLAR_BEAM],[90,t.ERUPTION]],[e.RAYQUAZA]:[[1,t.DRAGON_ASCENT],[1,t.TWISTER],[1,t.ANCIENT_POWER],[1,t.AIR_SLASH],[1,t.SCARY_FACE],[9,t.CRUNCH],[18,t.DRAGON_DANCE],[27,t.EXTREME_SPEED],[36,t.DRAGON_PULSE],[45,t.HYPER_VOICE],[54,t.REST],[63,t.FLY],[72,t.HURRICANE],[81,t.OUTRAGE],[90,t.HYPER_BEAM]],[e.JIRACHI]:[[1,t.CONFUSION],[1,t.WISH],[7,t.SWIFT],[21,t.LIFE_DEW],[28,t.ZEN_HEADBUTT],[35,t.GRAVITY],[42,t.PSYCHIC],[49,t.METEOR_MASH],[56,t.HEALING_WISH],[63,t.REST],[70,t.FUTURE_SIGHT],[77,t.DOUBLE_EDGE],[84,t.COSMIC_POWER],[91,t.LAST_RESORT],[98,t.DOOM_DESIRE]],[e.DEOXYS]:[[1,t.CONFUSION],[1,t.LEER],[1,t.WRAP],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.KNOCK_OFF],[25,t.PSYSHOCK],[31,t.PSYCHIC],[37,t.GRAVITY],[43,t.SKILL_SWAP],[49,t.ZEN_HEADBUTT],[55,t.COSMIC_POWER],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.HYPER_BEAM]],[e.TURTWIG]:[[1,t.TACKLE],[5,t.WITHDRAW],[5,t.LEAFAGE],[9,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.CURSE],[21,t.BITE],[25,t.MEGA_DRAIN],[29,t.LEECH_SEED],[33,t.SYNTHESIS],[37,t.CRUNCH],[41,t.GIGA_DRAIN],[45,t.LEAF_STORM]],[e.GROTLE]:[[1,t.TACKLE],[1,t.ABSORB],[1,t.WITHDRAW],[1,t.LEAFAGE],[1,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.CURSE],[22,t.BITE],[27,t.MEGA_DRAIN],[32,t.LEECH_SEED],[37,t.SYNTHESIS],[42,t.CRUNCH],[47,t.GIGA_DRAIN],[52,t.LEAF_STORM]],[e.TORTERRA]:[[Ae,t.EARTHQUAKE],[1,t.TACKLE],[1,t.ABSORB],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.RAZOR_LEAF],[1,t.WITHDRAW],[1,t.WOOD_HAMMER],[17,t.CURSE],[22,t.BITE],[27,t.MEGA_DRAIN],[33,t.LEECH_SEED],[39,t.SYNTHESIS],[45,t.CRUNCH],[51,t.GIGA_DRAIN],[57,t.LEAF_STORM],[63,t.HEADLONG_RUSH]],[e.CHIMCHAR]:[[1,t.SCRATCH],[1,t.LEER],[5,t.EMBER],[9,t.TAUNT],[15,t.FURY_SWIPES],[17,t.FLAME_WHEEL],[23,t.NASTY_PLOT],[25,t.TORMENT],[31,t.FACADE],[33,t.FIRE_SPIN],[39,t.ACROBATICS],[41,t.SLACK_OFF],[47,t.FLAMETHROWER]],[e.MONFERNO]:[[Ae,t.MACH_PUNCH],[Z,t.NASTY_PLOT],[Z,t.FACADE],[Z,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.LEER],[1,t.EMBER],[9,t.TAUNT],[16,t.FURY_SWIPES],[19,t.FLAME_WHEEL],[26,t.FEINT],[29,t.TORMENT],[36,t.CLOSE_COMBAT],[39,t.FIRE_SPIN],[46,t.ACROBATICS],[49,t.SLACK_OFF],[56,t.FLARE_BLITZ]],[e.INFERNAPE]:[[Ae,t.CLOSE_COMBAT],[Z,t.TAUNT],[Z,t.NASTY_PLOT],[Z,t.FACADE],[Z,t.SLACK_OFF],[Z,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.LEER],[1,t.EMBER],[1,t.MACH_PUNCH],[16,t.FURY_SWIPES],[19,t.FLAME_WHEEL],[26,t.FEINT],[29,t.TORMENT],[42,t.FIRE_SPIN],[47,t.FLARE_BLITZ],[52,t.ACROBATICS],[58,t.CALM_MIND],[65,t.RAGING_FURY]],[e.PIPLUP]:[[1,t.POUND],[4,t.GROWL],[5,t.WATER_GUN],[11,t.CHARM],[15,t.PECK],[18,t.BUBBLE_BEAM],[22,t.SWAGGER],[25,t.FURY_ATTACK],[29,t.BRINE],[32,t.WHIRLPOOL],[36,t.MIST],[39,t.DRILL_PECK],[43,t.HYDRO_PUMP]],[e.PRINPLUP]:[[Ae,t.METAL_CLAW],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.CHARM],[15,t.PECK],[19,t.BUBBLE_BEAM],[24,t.SWAGGER],[28,t.FURY_ATTACK],[33,t.BRINE],[37,t.WHIRLPOOL],[42,t.MIST],[46,t.DRILL_PECK],[50,t.HYDRO_PUMP]],[e.EMPOLEON]:[[Ae,t.AQUA_JET],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.CHARM],[1,t.METAL_CLAW],[11,t.SWORDS_DANCE],[15,t.PECK],[19,t.BUBBLE_BEAM],[24,t.SWAGGER],[28,t.FURY_ATTACK],[33,t.BRINE],[39,t.WHIRLPOOL],[46,t.MIST],[52,t.DRILL_PECK],[59,t.HYDRO_PUMP],[66,t.WAVE_CRASH]],[e.STARLY]:[[1,t.TACKLE],[1,t.GROWL],[5,t.QUICK_ATTACK],[9,t.WING_ATTACK],[13,t.DOUBLE_TEAM],[17,t.ENDEAVOR],[21,t.WHIRLWIND],[25,t.AERIAL_ACE],[29,t.TAKE_DOWN],[33,t.AGILITY],[37,t.BRAVE_BIRD],[41,t.FINAL_GAMBIT]],[e.STARAVIA]:[[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[9,t.WING_ATTACK],[13,t.DOUBLE_TEAM],[18,t.ENDEAVOR],[23,t.WHIRLWIND],[28,t.AERIAL_ACE],[33,t.TAKE_DOWN],[38,t.AGILITY],[43,t.BRAVE_BIRD],[48,t.FINAL_GAMBIT]],[e.STARAPTOR]:[[Ae,t.CLOSE_COMBAT],[1,t.WING_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[13,t.DOUBLE_TEAM],[18,t.ENDEAVOR],[23,t.WHIRLWIND],[28,t.AERIAL_ACE],[33,t.TAKE_DOWN],[41,t.AGILITY],[49,t.BRAVE_BIRD],[57,t.FINAL_GAMBIT]],[e.BIDOOF]:[[1,t.TACKLE],[1,t.GROWL],[5,t.DEFENSE_CURL],[9,t.ROLLOUT],[13,t.HEADBUTT],[17,t.HYPER_FANG],[21,t.YAWN],[25,t.CRUNCH],[29,t.TAKE_DOWN],[33,t.SUPER_FANG],[37,t.SWORDS_DANCE],[41,t.AMNESIA],[45,t.SUPERPOWER],[49,t.CURSE]],[e.BIBAREL]:[[Ae,t.WATER_GUN],[1,t.TACKLE],[1,t.GROWL],[1,t.AQUA_JET],[1,t.ROTOTILLER],[5,t.DEFENSE_CURL],[9,t.ROLLOUT],[13,t.HEADBUTT],[18,t.HYPER_FANG],[23,t.YAWN],[28,t.CRUNCH],[33,t.TAKE_DOWN],[38,t.SUPER_FANG],[43,t.SWORDS_DANCE],[48,t.AMNESIA],[53,t.SUPERPOWER],[58,t.CURSE]],[e.KRICKETOT]:[[1,t.TACKLE],[1,t.GROWL],[1,t.BIDE],[6,t.STRUGGLE_BUG],[16,t.BUG_BITE]],[e.KRICKETUNE]:[[Ae,t.FURY_CUTTER],[1,t.TACKLE],[1,t.GROWL],[1,t.BIDE],[1,t.STRUGGLE_BUG],[1,t.BUG_BITE],[14,t.ABSORB],[18,t.SING],[22,t.FOCUS_ENERGY],[26,t.SLASH],[30,t.X_SCISSOR],[34,t.SCREECH],[36,t.FELL_STINGER],[38,t.TAUNT],[42,t.NIGHT_SLASH],[44,t.STICKY_WEB],[46,t.BUG_BUZZ],[50,t.PERISH_SONG]],[e.SHINX]:[[1,t.TACKLE],[1,t.LEER],[4,t.THUNDER_SHOCK],[8,t.CHARGE],[12,t.BITE],[16,t.SPARK],[20,t.ROAR],[24,t.VOLT_SWITCH],[28,t.SCARY_FACE],[32,t.THUNDER_WAVE],[36,t.CRUNCH],[40,t.DISCHARGE],[44,t.SWAGGER],[48,t.WILD_CHARGE]],[e.LUXIO]:[[1,t.TACKLE],[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[12,t.BITE],[18,t.SPARK],[24,t.ROAR],[31,t.VOLT_SWITCH],[36,t.SCARY_FACE],[42,t.THUNDER_WAVE],[48,t.CRUNCH],[54,t.DISCHARGE],[60,t.SWAGGER],[68,t.WILD_CHARGE]],[e.LUXRAY]:[[1,t.TACKLE],[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.ELECTRIC_TERRAIN],[12,t.BITE],[18,t.SPARK],[24,t.ROAR],[33,t.VOLT_SWITCH],[40,t.SCARY_FACE],[48,t.THUNDER_WAVE],[56,t.CRUNCH],[64,t.DISCHARGE],[72,t.SWAGGER],[80,t.WILD_CHARGE]],[e.BUDEW]:[[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.WORRY_SEED]],[e.ROSERADE]:[[1,t.POISON_STING],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.SYNTHESIS],[1,t.INGRAIN],[1,t.AROMATHERAPY],[1,t.MAGICAL_LEAF],[1,t.WORRY_SEED],[1,t.TOXIC_SPIKES],[1,t.PETAL_BLIZZARD],[1,t.GRASSY_TERRAIN],[1,t.VENOM_DRENCH]],[e.CRANIDOS]:[[1,t.HEADBUTT],[1,t.LEER],[6,t.FOCUS_ENERGY],[10,t.PURSUIT],[15,t.TAKE_DOWN],[19,t.SCARY_FACE],[24,t.ASSURANCE],[28,t.CHIP_AWAY],[33,t.ANCIENT_POWER],[37,t.ZEN_HEADBUTT],[42,t.SCREECH],[46,t.HEAD_SMASH]],[e.RAMPARDOS]:[[Ae,t.ENDEAVOR],[1,t.HEADBUTT],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.PURSUIT],[15,t.TAKE_DOWN],[19,t.SCARY_FACE],[24,t.ASSURANCE],[28,t.CHIP_AWAY],[36,t.ANCIENT_POWER],[43,t.ZEN_HEADBUTT],[51,t.SCREECH],[58,t.HEAD_SMASH]],[e.SHIELDON]:[[1,t.TACKLE],[1,t.PROTECT],[6,t.TAUNT],[10,t.METAL_SOUND],[15,t.TAKE_DOWN],[19,t.IRON_DEFENSE],[24,t.SWAGGER],[28,t.ANCIENT_POWER],[33,t.ENDURE],[37,t.METAL_BURST],[42,t.IRON_HEAD],[46,t.HEAVY_SLAM]],[e.BASTIODON]:[[Ae,t.BLOCK],[Z,t.WIDE_GUARD],[1,t.TACKLE],[1,t.PROTECT],[1,t.TAUNT],[1,t.METAL_SOUND],[15,t.TAKE_DOWN],[19,t.IRON_DEFENSE],[24,t.SWAGGER],[28,t.ANCIENT_POWER],[36,t.ENDURE],[43,t.METAL_BURST],[51,t.IRON_HEAD],[58,t.HEAVY_SLAM]],[e.BURMY]:[[1,t.PROTECT],[1,t.STRUGGLE_BUG],[10,t.TACKLE],[15,t.BUG_BITE],[20,t.STRING_SHOT]],[e.WORMADAM]:[[Ae,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.RAZOR_LEAF],[29,t.GROWTH],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.LEAF_STORM],[50,t.BUG_BUZZ]],[e.MOTHIM]:[[Ae,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.BUG_BITE],[10,t.PROTECT],[15,t.BUG_BITE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.GUST],[29,t.POISON_POWDER],[32,t.PSYBEAM],[35,t.ROOST],[38,t.STRUGGLE_BUG],[41,t.AIR_SLASH],[44,t.PSYCHIC],[47,t.LUNGE],[50,t.BUG_BUZZ]],[e.COMBEE]:[[1,t.GUST],[1,t.SWEET_SCENT],[1,t.BUG_BITE],[1,t.STRUGGLE_BUG]],[e.VESPIQUEN]:[[Ae,t.SLASH],[1,t.GUST],[1,t.POISON_STING],[1,t.CONFUSE_RAY],[1,t.SWEET_SCENT],[1,t.BUG_BITE],[1,t.STRUGGLE_BUG],[4,t.FURY_CUTTER],[8,t.AROMATIC_MIST],[12,t.FELL_STINGER],[16,t.FURY_SWIPES],[20,t.SWAGGER],[24,t.ROOST],[28,t.AIR_SLASH],[32,t.POWER_GEM],[36,t.TOXIC],[40,t.ATTACK_ORDER],[40,t.DEFEND_ORDER],[40,t.HEAL_ORDER],[44,t.DESTINY_BOND]],[e.PACHIRISU]:[[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.BIDE],[5,t.QUICK_ATTACK],[9,t.CHARM],[13,t.SPARK],[17,t.ENDURE],[19,t.NUZZLE],[21,t.SWIFT],[25,t.ELECTRO_BALL],[29,t.SWEET_KISS],[33,t.THUNDER_WAVE],[37,t.SUPER_FANG],[41,t.DISCHARGE],[45,t.LAST_RESORT],[49,t.THUNDER]],[e.BUIZEL]:[[1,t.TACKLE],[4,t.GROWL],[7,t.SOAK],[11,t.QUICK_ATTACK],[15,t.WATER_GUN],[18,t.BITE],[21,t.SWIFT],[24,t.AQUA_JET],[27,t.DOUBLE_HIT],[31,t.WHIRLPOOL],[35,t.LIQUIDATION],[38,t.AQUA_TAIL],[41,t.AGILITY],[45,t.HYDRO_PUMP],[49,t.WAVE_CRASH]],[e.FLOATZEL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[1,t.CRUNCH],[1,t.ICE_FANG],[1,t.SOAK],[15,t.WATER_GUN],[18,t.BITE],[21,t.SWIFT],[24,t.AQUA_JET],[29,t.DOUBLE_HIT],[35,t.WHIRLPOOL],[41,t.LIQUIDATION],[46,t.AQUA_TAIL],[51,t.AGILITY],[57,t.HYDRO_PUMP],[62,t.WAVE_CRASH]],[e.CHERUBI]:[[1,t.TACKLE],[1,t.MORNING_SUN],[5,t.LEAFAGE],[10,t.GROWTH],[15,t.HELPING_HAND],[20,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[30,t.TAKE_DOWN],[35,t.PETAL_BLIZZARD],[40,t.WORRY_SEED],[45,t.SOLAR_BEAM]],[e.CHERRIM]:[[Ae,t.SUNNY_DAY],[1,t.TACKLE],[1,t.GROWTH],[1,t.MORNING_SUN],[1,t.FLOWER_SHIELD],[1,t.LEAFAGE],[15,t.HELPING_HAND],[20,t.MAGICAL_LEAF],[28,t.LEECH_SEED],[34,t.TAKE_DOWN],[41,t.PETAL_BLIZZARD],[48,t.WORRY_SEED],[55,t.SOLAR_BEAM],[62,t.PETAL_DANCE]],[e.SHELLOS]:[[1,t.WATER_GUN],[1,t.MUD_SLAP],[5,t.HARDEN],[10,t.RECOVER],[15,t.WATER_PULSE],[20,t.ANCIENT_POWER],[25,t.BODY_SLAM],[31,t.MUDDY_WATER],[35,t.EARTH_POWER],[40,t.RAIN_DANCE],[45,t.MEMENTO]],[e.GASTRODON]:[[1,t.WATER_GUN],[1,t.RECOVER],[1,t.HARDEN],[1,t.MUD_SLAP],[1,t.MUD_SPORT],[15,t.WATER_PULSE],[20,t.ANCIENT_POWER],[25,t.BODY_SLAM],[33,t.MUDDY_WATER],[39,t.EARTH_POWER],[46,t.RAIN_DANCE],[53,t.MEMENTO]],[e.AMBIPOM]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.TAIL_WHIP],[1,t.ASTONISH],[11,t.BATON_PASS],[15,t.TICKLE],[18,t.FURY_SWIPES],[22,t.SWIFT],[25,t.SCREECH],[29,t.AGILITY],[32,t.DOUBLE_HIT],[36,t.FLING],[39,t.NASTY_PLOT],[43,t.LAST_RESORT]],[e.DRIFLOON]:[[1,t.MINIMIZE],[1,t.ASTONISH],[1,t.CONSTRICT],[4,t.GUST],[8,t.FOCUS_ENERGY],[12,t.PAYBACK],[16,t.HEX],[20,t.SHADOW_BALL],[24,t.STOCKPILE],[24,t.SPIT_UP],[24,t.SWALLOW],[29,t.SELF_DESTRUCT],[32,t.DESTINY_BOND],[36,t.BATON_PASS],[40,t.TAILWIND],[44,t.EXPLOSION]],[e.DRIFBLIM]:[[Ae,t.PHANTOM_FORCE],[1,t.GUST],[1,t.MINIMIZE],[1,t.FOCUS_ENERGY],[1,t.ASTONISH],[1,t.CONSTRICT],[1,t.STRENGTH_SAP],[12,t.PAYBACK],[16,t.HEX],[20,t.SHADOW_BALL],[24,t.STOCKPILE],[24,t.SPIT_UP],[24,t.SWALLOW],[31,t.SELF_DESTRUCT],[36,t.DESTINY_BOND],[42,t.BATON_PASS],[48,t.TAILWIND],[54,t.EXPLOSION]],[e.BUNEARY]:[[1,t.FRUSTRATION],[1,t.POUND],[1,t.SPLASH],[4,t.DEFENSE_CURL],[8,t.BABY_DOLL_EYES],[12,t.AFTER_YOU],[16,t.QUICK_ATTACK],[20,t.DOUBLE_KICK],[24,t.CHARM],[28,t.BATON_PASS],[32,t.HEADBUTT],[36,t.AGILITY],[40,t.ENTRAINMENT],[44,t.FLATTER],[48,t.BOUNCE],[52,t.HEALING_WISH]],[e.LOPUNNY]:[[Ae,t.RETURN],[1,t.FRUSTRATION],[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SPLASH],[1,t.MIRROR_COAT],[1,t.MAGIC_COAT],[1,t.BABY_DOLL_EYES],[1,t.ROTOTILLER],[12,t.AFTER_YOU],[16,t.QUICK_ATTACK],[20,t.DOUBLE_KICK],[24,t.CHARM],[28,t.BATON_PASS],[32,t.HEADBUTT],[36,t.AGILITY],[40,t.ENTRAINMENT],[44,t.FLATTER],[48,t.BOUNCE],[52,t.HEALING_WISH],[56,t.HIGH_JUMP_KICK]],[e.MISMAGIUS]:[[Z,t.CONFUSION],[Z,t.CONFUSE_RAY],[Z,t.MEAN_LOOK],[Z,t.HEX],[Z,t.PSYBEAM],[Z,t.PAIN_SPLIT],[Z,t.PAYBACK],[Z,t.SHADOW_BALL],[Z,t.PERISH_SONG],[1,t.GROWL],[1,t.SPITE],[1,t.PSYWAVE],[1,t.LUCKY_CHANT],[1,t.ASTONISH],[1,t.MAGICAL_LEAF],[1,t.POWER_GEM],[1,t.PHANTOM_FORCE],[1,t.MYSTICAL_FIRE]],[e.HONCHKROW]:[[1,t.PECK],[1,t.ASTONISH],[1,t.GUST],[1,t.HAZE],[1,t.WING_ATTACK],[1,t.NIGHT_SHADE],[1,t.ASSURANCE],[1,t.TAUNT],[1,t.MEAN_LOOK],[1,t.SUCKER_PUNCH],[1,t.NIGHT_SLASH],[1,t.TORMENT],[1,t.QUASH],[1,t.PURSUIT],[25,t.SWAGGER],[35,t.NASTY_PLOT],[45,t.FOUL_PLAY],[55,t.DARK_PULSE],[65,t.COMEUPPANCE]],[e.GLAMEOW]:[[1,t.FAKE_OUT],[5,t.SCRATCH],[8,t.GROWL],[13,t.HYPNOSIS],[17,t.AERIAL_ACE],[20,t.FURY_SWIPES],[25,t.CHARM],[29,t.TAUNT],[32,t.RETALIATE],[37,t.SLASH],[41,t.SUCKER_PUNCH],[44,t.ATTRACT],[48,t.HONE_CLAWS],[50,t.PLAY_ROUGH]],[e.PURUGLY]:[[Ae,t.SWAGGER],[1,t.SCRATCH],[1,t.PLAY_ROUGH],[1,t.SUCKER_PUNCH],[1,t.GROWL],[1,t.FAKE_OUT],[13,t.HYPNOSIS],[17,t.AERIAL_ACE],[20,t.FURY_SWIPES],[25,t.CHARM],[29,t.TAUNT],[32,t.RETALIATE],[37,t.SLASH],[45,t.BODY_SLAM],[52,t.ATTRACT],[60,t.HONE_CLAWS]],[e.CHINGLING]:[[1,t.WRAP],[1,t.PSYWAVE],[4,t.GROWL],[7,t.ASTONISH],[10,t.CONFUSION],[13,t.YAWN],[16,t.LAST_RESORT],[19,t.ENTRAINMENT],[32,t.UPROAR]],[e.STUNKY]:[[1,t.SCRATCH],[1,t.POISON_GAS],[3,t.FEINT],[6,t.SMOKESCREEN],[9,t.ACID_SPRAY],[12,t.FURY_SWIPES],[15,t.FOCUS_ENERGY],[18,t.BITE],[21,t.VENOSHOCK],[24,t.SCREECH],[27,t.TOXIC],[30,t.SUCKER_PUNCH],[33,t.MEMENTO],[36,t.NIGHT_SLASH],[39,t.BELCH],[42,t.EXPLOSION]],[e.SKUNTANK]:[[Ae,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.SMOKESCREEN],[1,t.POISON_GAS],[1,t.FEINT],[1,t.ACID_SPRAY],[12,t.FURY_SWIPES],[15,t.FOCUS_ENERGY],[18,t.BITE],[21,t.VENOSHOCK],[24,t.SCREECH],[27,t.TOXIC],[30,t.SUCKER_PUNCH],[33,t.MEMENTO],[38,t.NIGHT_SLASH],[43,t.BELCH],[48,t.EXPLOSION]],[e.BRONZOR]:[[1,t.TACKLE],[1,t.CONFUSION],[4,t.CONFUSE_RAY],[8,t.PAYBACK],[12,t.IMPRISON],[16,t.GYRO_BALL],[20,t.HYPNOSIS],[24,t.SAFEGUARD],[28,t.EXTRASENSORY],[32,t.HEAVY_SLAM],[36,t.IRON_DEFENSE],[40,t.METAL_SOUND],[44,t.FUTURE_SIGHT],[45,t.HEAL_BLOCK]],[e.BRONZONG]:[[Ae,t.BLOCK],[1,t.TACKLE],[1,t.CONFUSION],[1,t.CONFUSE_RAY],[1,t.SUNNY_DAY],[1,t.WEATHER_BALL],[1,t.PAYBACK],[12,t.IMPRISON],[16,t.GYRO_BALL],[20,t.HYPNOSIS],[24,t.SAFEGUARD],[28,t.EXTRASENSORY],[32,t.HEAVY_SLAM],[38,t.IRON_DEFENSE],[44,t.METAL_SOUND],[50,t.FUTURE_SIGHT],[52,t.HEAL_BLOCK],[56,t.RAIN_DANCE]],[e.BONSLY]:[[1,t.FAKE_TEARS],[1,t.COPYCAT],[1,t.TACKLE],[4,t.FLAIL],[8,t.ROCK_THROW],[12,t.BLOCK],[16,t.MIMIC],[20,t.ROCK_TOMB],[24,t.TEARFUL_LOOK],[28,t.SUCKER_PUNCH],[32,t.ROCK_SLIDE],[36,t.LOW_KICK],[40,t.COUNTER],[44,t.DOUBLE_EDGE]],[e.MIME_JR]:[[1,t.POUND],[1,t.COPYCAT],[1,t.BARRIER],[1,t.TICKLE],[4,t.BATON_PASS],[8,t.ENCORE],[12,t.CONFUSION],[16,t.MIMIC],[20,t.PROTECT],[24,t.RECYCLE],[28,t.PSYBEAM],[32,t.ROLE_PLAY],[36,t.LIGHT_SCREEN],[36,t.REFLECT],[36,t.SAFEGUARD],[40,t.SUCKER_PUNCH],[44,t.DAZZLING_GLEAM],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.HAPPINY]:[[1,t.POUND],[1,t.COPYCAT],[4,t.DEFENSE_CURL],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.COVET],[20,t.CHARM]],[e.CHATOT]:[[1,t.PECK],[1,t.TAUNT],[1,t.HYPER_VOICE],[1,t.CHATTER],[1,t.CONFIDE],[5,t.GROWL],[9,t.MIRROR_MOVE],[13,t.SING],[17,t.FURY_ATTACK],[29,t.ROUND],[33,t.MIMIC],[37,t.ECHOED_VOICE],[41,t.ROOST],[45,t.UPROAR],[49,t.SYNCHRONOISE],[50,t.FEATHER_DANCE]],[e.SPIRITOMB]:[[1,t.NIGHT_SHADE],[1,t.CONFUSE_RAY],[1,t.PURSUIT],[5,t.SHADOW_SNEAK],[10,t.SPITE],[15,t.PAYBACK],[20,t.NASTY_PLOT],[25,t.HEX],[30,t.MEMENTO],[35,t.SUCKER_PUNCH],[40,t.CURSE],[45,t.SHADOW_BALL],[50,t.DARK_PULSE],[55,t.HYPNOSIS],[60,t.DREAM_EATER]],[e.GIBLE]:[[1,t.TACKLE],[1,t.SAND_TOMB],[6,t.SAND_ATTACK],[12,t.DRAGON_BREATH],[18,t.BULLDOZE],[25,t.BITE],[30,t.SLASH],[36,t.DRAGON_CLAW],[42,t.DIG],[48,t.SANDSTORM],[54,t.TAKE_DOWN],[60,t.DRAGON_RUSH]],[e.GABITE]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.DRAGON_BREATH],[1,t.SAND_TOMB],[1,t.DUAL_CHOP],[18,t.BULLDOZE],[27,t.BITE],[34,t.SLASH],[42,t.DRAGON_CLAW],[50,t.DIG],[58,t.SANDSTORM],[66,t.TAKE_DOWN],[74,t.DRAGON_RUSH]],[e.GARCHOMP]:[[Ae,t.CRUNCH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.DRAGON_BREATH],[1,t.SAND_TOMB],[1,t.DUAL_CHOP],[18,t.BULLDOZE],[27,t.BITE],[34,t.SLASH],[42,t.DRAGON_CLAW],[52,t.DIG],[62,t.SANDSTORM],[72,t.TAKE_DOWN],[82,t.DRAGON_RUSH]],[e.MUNCHLAX]:[[1,t.TACKLE],[1,t.LICK],[1,t.ODOR_SLEUTH],[4,t.DEFENSE_CURL],[8,t.RECYCLE],[12,t.COVET],[16,t.BITE],[20,t.STOCKPILE],[20,t.SWALLOW],[24,t.SCREECH],[28,t.BODY_SLAM],[32,t.FLING],[36,t.AMNESIA],[40,t.METRONOME],[44,t.FLAIL],[48,t.BELLY_DRUM],[52,t.LAST_RESORT]],[e.RIOLU]:[[1,t.QUICK_ATTACK],[1,t.ENDURE],[4,t.FEINT],[8,t.METAL_CLAW],[12,t.COUNTER],[16,t.WORK_UP],[20,t.ROCK_SMASH],[24,t.VACUUM_WAVE],[28,t.SCREECH],[32,t.QUICK_GUARD],[36,t.FORCE_PALM],[40,t.SWORDS_DANCE],[44,t.HELPING_HAND],[48,t.COPYCAT],[52,t.FINAL_GAMBIT],[56,t.REVERSAL]],[e.LUCARIO]:[[Ae,t.AURA_SPHERE],[1,t.QUICK_ATTACK],[1,t.ENDURE],[1,t.SCREECH],[1,t.REVERSAL],[1,t.DETECT],[1,t.METAL_CLAW],[1,t.ROCK_SMASH],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.COPYCAT],[1,t.VACUUM_WAVE],[1,t.FINAL_GAMBIT],[1,t.LIFE_DEW],[12,t.COUNTER],[16,t.WORK_UP],[20,t.FORCE_PALM],[24,t.CALM_MIND],[28,t.METAL_SOUND],[32,t.QUICK_GUARD],[36,t.BONE_RUSH],[40,t.SWORDS_DANCE],[44,t.HEAL_PULSE],[48,t.METEOR_MASH],[52,t.DRAGON_PULSE],[56,t.EXTREME_SPEED],[60,t.CLOSE_COMBAT]],[e.HIPPOPOTAS]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[4,t.BITE],[8,t.YAWN],[12,t.SAND_TOMB],[16,t.DIG],[20,t.CRUNCH],[24,t.SANDSTORM],[28,t.TAKE_DOWN],[32,t.ROAR],[36,t.REST],[40,t.EARTHQUAKE],[44,t.DOUBLE_EDGE],[48,t.FISSURE],[52,t.SLACK_OFF]],[e.HIPPOWDON]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.YAWN],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[12,t.SAND_TOMB],[16,t.DIG],[20,t.CRUNCH],[24,t.SANDSTORM],[28,t.TAKE_DOWN],[32,t.ROAR],[38,t.REST],[44,t.EARTHQUAKE],[50,t.DOUBLE_EDGE],[56,t.FISSURE],[62,t.SLACK_OFF]],[e.SKORUPI]:[[1,t.POISON_STING],[1,t.LEER],[3,t.HONE_CLAWS],[6,t.FELL_STINGER],[9,t.POISON_FANG],[12,t.BITE],[15,t.TOXIC_SPIKES],[18,t.BUG_BITE],[21,t.VENOSHOCK],[24,t.KNOCK_OFF],[27,t.SCARY_FACE],[30,t.PIN_MISSILE],[33,t.TOXIC],[36,t.NIGHT_SLASH],[39,t.CROSS_POISON],[42,t.X_SCISSOR],[45,t.ACUPRESSURE],[48,t.CRUNCH]],[e.DRAPION]:[[1,t.POISON_STING],[1,t.LEER],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.HONE_CLAWS],[1,t.FELL_STINGER],[9,t.POISON_FANG],[12,t.BITE],[15,t.TOXIC_SPIKES],[18,t.BUG_BITE],[21,t.VENOSHOCK],[24,t.KNOCK_OFF],[27,t.SCARY_FACE],[30,t.PIN_MISSILE],[33,t.TOXIC],[36,t.NIGHT_SLASH],[39,t.CROSS_POISON],[44,t.X_SCISSOR],[49,t.ACUPRESSURE],[54,t.CRUNCH]],[e.CROAGUNK]:[[1,t.POISON_STING],[1,t.MUD_SLAP],[4,t.ASTONISH],[8,t.TAUNT],[12,t.FLATTER],[16,t.LOW_KICK],[20,t.VENOSHOCK],[24,t.SUCKER_PUNCH],[28,t.SWAGGER],[32,t.POISON_JAB],[36,t.TOXIC],[40,t.NASTY_PLOT],[44,t.SLUDGE_BOMB],[48,t.BELCH]],[e.TOXICROAK]:[[1,t.POISON_STING],[1,t.MUD_SLAP],[1,t.TAUNT],[1,t.ASTONISH],[12,t.FLATTER],[16,t.LOW_KICK],[20,t.VENOSHOCK],[24,t.SUCKER_PUNCH],[28,t.SWAGGER],[32,t.POISON_JAB],[36,t.TOXIC],[42,t.NASTY_PLOT],[48,t.SLUDGE_BOMB],[54,t.BELCH]],[e.CARNIVINE]:[[1,t.BIND],[1,t.GROWTH],[1,t.LEAFAGE],[7,t.BITE],[11,t.VINE_WHIP],[17,t.SWEET_SCENT],[21,t.INGRAIN],[27,t.GRASS_KNOT],[31,t.LEAF_TORNADO],[37,t.STOCKPILE],[37,t.SPIT_UP],[37,t.SWALLOW],[41,t.CRUNCH],[47,t.SEED_BOMB],[50,t.POWER_WHIP]],[e.FINNEON]:[[1,t.POUND],[6,t.WATER_GUN],[13,t.RAIN_DANCE],[17,t.GUST],[22,t.WATER_PULSE],[26,t.ATTRACT],[29,t.SAFEGUARD],[33,t.AQUA_RING],[38,t.WHIRLPOOL],[42,t.U_TURN],[45,t.BOUNCE],[49,t.TAILWIND],[54,t.SOAK]],[e.LUMINEON]:[[1,t.POUND],[1,t.GUST],[1,t.WATER_GUN],[1,t.SOAK],[13,t.RAIN_DANCE],[22,t.WATER_PULSE],[26,t.ATTRACT],[29,t.SAFEGUARD],[35,t.AQUA_RING],[42,t.WHIRLPOOL],[48,t.U_TURN],[53,t.BOUNCE],[59,t.TAILWIND]],[e.MANTYKE]:[[1,t.TACKLE],[1,t.WATER_GUN],[4,t.SUPERSONIC],[8,t.WING_ATTACK],[12,t.WATER_PULSE],[16,t.WIDE_GUARD],[20,t.AGILITY],[24,t.BUBBLE_BEAM],[28,t.HEADBUTT],[32,t.AIR_SLASH],[36,t.AQUA_RING],[40,t.BOUNCE],[44,t.TAKE_DOWN],[48,t.HYDRO_PUMP]],[e.SNOVER]:[[1,t.LEER],[1,t.POWDER_SNOW],[5,t.LEAFAGE],[10,t.MIST],[15,t.ICE_SHARD],[20,t.RAZOR_LEAF],[25,t.ICY_WIND],[30,t.SWAGGER],[35,t.INGRAIN],[41,t.WOOD_HAMMER],[45,t.BLIZZARD],[50,t.SHEER_COLD]],[e.ABOMASNOW]:[[Ae,t.ICE_PUNCH],[1,t.LEER],[1,t.MIST],[1,t.POWDER_SNOW],[1,t.LEAFAGE],[1,t.AURORA_VEIL],[15,t.ICE_SHARD],[20,t.RAZOR_LEAF],[25,t.ICY_WIND],[30,t.SWAGGER],[35,t.INGRAIN],[43,t.WOOD_HAMMER],[49,t.BLIZZARD],[56,t.SHEER_COLD]],[e.WEAVILE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.SLASH],[1,t.BEAT_UP],[1,t.TAUNT],[1,t.ASSURANCE],[1,t.ICE_SHARD],[1,t.EMBARGO],[18,t.METAL_CLAW],[24,t.ICY_WIND],[30,t.FURY_SWIPES],[36,t.HONE_CLAWS],[42,t.FLING],[48,t.NASTY_PLOT],[54,t.SCREECH],[60,t.NIGHT_SLASH],[66,t.DARK_PULSE]],[e.MAGNEZONE]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.BARRIER],[1,t.TRI_ATTACK],[1,t.MIRROR_COAT],[1,t.MAGNETIC_FLUX],[1,t.ELECTRIC_TERRAIN],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[34,t.FLASH_CANNON],[40,t.DISCHARGE],[46,t.METAL_SOUND],[52,t.LIGHT_SCREEN],[58,t.LOCK_ON],[64,t.ZAP_CANNON]],[e.LICKILICKY]:[[1,t.SUPERSONIC],[1,t.DEFENSE_CURL],[1,t.LICK],[1,t.TACKLE],[1,t.ROLLOUT],[1,t.WRING_OUT],[6,t.REST],[18,t.WRAP],[24,t.DISABLE],[30,t.STOMP],[36,t.KNOCK_OFF],[42,t.SCREECH],[48,t.SLAM],[54,t.POWER_WHIP],[60,t.BELLY_DRUM]],[e.RHYPERIOR]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.HAMMER_ARM],[1,t.SMACK_DOWN],[1,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[47,t.EARTHQUAKE],[54,t.STONE_EDGE],[61,t.MEGAHORN],[68,t.HORN_DRILL],[75,t.ROCK_WRECKER]],[e.TANGROWTH]:[[1,t.BIND],[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.BLOCK],[1,t.CONSTRICT],[12,t.MEGA_DRAIN],[16,t.VINE_WHIP],[20,t.POISON_POWDER],[24,t.DOUBLE_HIT],[28,t.KNOCK_OFF],[32,t.GIGA_DRAIN],[34,t.ANCIENT_POWER],[36,t.SLEEP_POWDER],[40,t.SLAM],[44,t.TICKLE],[48,t.POWER_WHIP],[52,t.INGRAIN],[56,t.GRASSY_TERRAIN]],[e.ELECTIVIRE]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.CHARGE],[1,t.ION_DELUGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[34,t.DISCHARGE],[40,t.LOW_KICK],[46,t.THUNDERBOLT],[52,t.LIGHT_SCREEN],[58,t.THUNDER],[64,t.GIGA_IMPACT]],[e.MAGMORTAR]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.SMOG],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[34,t.LAVA_PLUME],[40,t.LOW_KICK],[46,t.FLAMETHROWER],[52,t.SUNNY_DAY],[58,t.FIRE_BLAST],[64,t.HYPER_BEAM]],[e.TOGEKISS]:[[Ae,t.AIR_SLASH],[1,t.POUND],[1,t.DOUBLE_EDGE],[1,t.GROWL],[1,t.METRONOME],[1,t.SKY_ATTACK],[1,t.TRI_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.EXTREME_SPEED],[1,t.ANCIENT_POWER],[1,t.FOLLOW_ME],[1,t.WISH],[1,t.YAWN],[1,t.LAST_RESORT],[1,t.AURA_SPHERE],[1,t.AFTER_YOU],[1,t.FAIRY_WIND],[1,t.LIFE_DEW]],[e.YANMEGA]:[[Z,t.HYPNOSIS],[1,t.TACKLE],[1,t.DOUBLE_TEAM],[1,t.AIR_CUTTER],[1,t.NIGHT_SLASH],[1,t.WING_ATTACK],[1,t.AIR_SLASH],[1,t.BUG_BUZZ],[14,t.QUICK_ATTACK],[17,t.DETECT],[22,t.SUPERSONIC],[27,t.UPROAR],[30,t.BUG_BITE],[33,t.ANCIENT_POWER],[38,t.FEINT],[43,t.SLASH],[46,t.SCREECH],[49,t.U_TURN]],[e.LEAFEON]:[[Ae,t.SAPPY_SEED],[Z,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.RAZOR_LEAF],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.LEECH_SEED],[30,t.MAGICAL_LEAF],[35,t.SYNTHESIS],[40,t.SUNNY_DAY],[45,t.GIGA_DRAIN],[50,t.SWORDS_DANCE],[55,t.LEAF_BLADE],[60,t.LAST_RESORT]],[e.GLACEON]:[[Ae,t.FREEZY_FROST],[Z,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.ICY_WIND],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.ICE_SHARD],[30,t.BITE],[35,t.ICE_FANG],[40,t.SNOWSCAPE],[45,t.FREEZE_DRY],[50,t.MIRROR_COAT],[55,t.BLIZZARD],[60,t.LAST_RESORT]],[e.GLISCOR]:[[1,t.POISON_STING],[1,t.SAND_ATTACK],[1,t.HARDEN],[1,t.POISON_TAIL],[1,t.SLASH],[1,t.POISON_JAB],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[13,t.QUICK_ATTACK],[16,t.FURY_CUTTER],[19,t.KNOCK_OFF],[22,t.ACROBATICS],[27,t.NIGHT_SLASH],[30,t.U_TURN],[35,t.SCREECH],[40,t.X_SCISSOR],[45,t.CRABHAMMER],[50,t.SWORDS_DANCE]],[e.MAMOSWINE]:[[Ae,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.FLAIL],[1,t.POWDER_SNOW],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[1,t.ANCIENT_POWER],[1,t.ICE_FANG],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[37,t.AMNESIA],[44,t.TAKE_DOWN],[51,t.EARTHQUAKE],[58,t.BLIZZARD],[65,t.THRASH]],[e.PORYGON_Z]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CONVERSION],[1,t.RECYCLE],[1,t.MAGNET_RISE],[1,t.NASTY_PLOT],[1,t.TRICK_ROOM],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.MAGIC_COAT],[55,t.LOCK_ON],[60,t.ZAP_CANNON],[65,t.HYPER_BEAM]],[e.GALLADE]:[[Ae,t.SLASH],[1,t.LEER],[1,t.GROWL],[1,t.PSYBEAM],[1,t.CONFUSION],[1,t.PSYCHIC],[1,t.HYPNOSIS],[1,t.DOUBLE_TEAM],[1,t.DREAM_EATER],[1,t.CHARM],[1,t.FURY_CUTTER],[1,t.FUTURE_SIGHT],[1,t.IMPRISON],[1,t.CALM_MIND],[1,t.LEAF_BLADE],[1,t.NIGHT_SLASH],[1,t.SACRED_SWORD],[1,t.DISARMING_VOICE],[1,t.DRAINING_KISS],[1,t.LIFE_DEW],[1,t.AQUA_CUTTER],[9,t.HELPING_HAND],[12,t.FEINT],[15,t.TELEPORT],[18,t.AERIAL_ACE],[23,t.FALSE_SWIPE],[28,t.PROTECT],[35,t.SWORDS_DANCE],[42,t.PSYCHO_CUT],[49,t.HEAL_PULSE],[56,t.WIDE_GUARD],[56,t.QUICK_GUARD],[63,t.CLOSE_COMBAT]],[e.PROBOPASS]:[[Ae,t.TRI_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.IRON_DEFENSE],[1,t.BLOCK],[1,t.ROCK_THROW],[1,t.GRAVITY],[1,t.MAGNET_RISE],[1,t.WIDE_GUARD],[1,t.MAGNETIC_FLUX],[13,t.THUNDER_WAVE],[16,t.REST],[19,t.SPARK],[22,t.ROCK_SLIDE],[25,t.POWER_GEM],[28,t.ROCK_BLAST],[31,t.DISCHARGE],[34,t.SANDSTORM],[37,t.EARTH_POWER],[40,t.STONE_EDGE],[43,t.ZAP_CANNON],[43,t.LOCK_ON]],[e.DUSKNOIR]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.BIND],[1,t.LEER],[1,t.DISABLE],[1,t.ASTONISH],[1,t.PURSUIT],[1,t.SHADOW_PUNCH],[1,t.GRAVITY],[1,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[42,t.SHADOW_BALL],[48,t.FUTURE_SIGHT],[54,t.DESTINY_BOND]],[e.FROSLASS]:[[Ae,t.HEX],[1,t.HEADBUTT],[1,t.LEER],[1,t.BITE],[1,t.DOUBLE_TEAM],[1,t.POWDER_SNOW],[1,t.PROTECT],[1,t.DESTINY_BOND],[1,t.WEATHER_BALL],[1,t.CRUNCH],[1,t.ASTONISH],[1,t.ICE_FANG],[1,t.OMINOUS_WIND],[15,t.ICE_SHARD],[20,t.DRAINING_KISS],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.CONFUSE_RAY],[40,t.SNOWSCAPE],[47,t.WILL_O_WISP],[54,t.AURORA_VEIL],[61,t.SHADOW_BALL],[68,t.BLIZZARD]],[e.ROTOM]:[[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],[e.UXIE]:[[Z,t.TRI_ATTACK],[Z,t.SNORE],[Z,t.SAFEGUARD],[Z,t.IRON_TAIL],[Z,t.PSYCHO_CUT],[Z,t.WONDER_ROOM],[Z,t.MAGIC_ROOM],[Z,t.ROUND],[Z,t.ALLY_SWITCH],[Z,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.ENDURE],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.AMNESIA],[49,t.PSYCHIC],[56,t.YAWN],[63,t.FUTURE_SIGHT],[70,t.FLAIL],[77,t.MEMENTO],[84,t.MYSTICAL_POWER]],[e.MESPRIT]:[[Z,t.TRI_ATTACK],[Z,t.SNORE],[Z,t.SAFEGUARD],[Z,t.IRON_TAIL],[Z,t.PSYCHO_CUT],[Z,t.WONDER_ROOM],[Z,t.MAGIC_ROOM],[Z,t.ROUND],[Z,t.ALLY_SWITCH],[Z,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.PROTECT],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.CHARM],[49,t.PSYCHIC],[56,t.FLATTER],[63,t.FUTURE_SIGHT],[70,t.COPYCAT],[77,t.HEALING_WISH],[84,t.MYSTICAL_POWER]],[e.AZELF]:[[Z,t.SELF_DESTRUCT],[Z,t.TRI_ATTACK],[Z,t.SNORE],[Z,t.SAFEGUARD],[Z,t.IRON_TAIL],[Z,t.PAYBACK],[Z,t.ASSURANCE],[Z,t.PSYCHO_CUT],[Z,t.WONDER_ROOM],[Z,t.MAGIC_ROOM],[Z,t.ROUND],[Z,t.ALLY_SWITCH],[Z,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.DETECT],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.NASTY_PLOT],[49,t.PSYCHIC],[56,t.UPROAR],[63,t.FUTURE_SIGHT],[70,t.LAST_RESORT],[77,t.EXPLOSION],[84,t.MYSTICAL_POWER]],[e.DIALGA]:[[1,t.SCARY_FACE],[1,t.METAL_CLAW],[8,t.DRAGON_BREATH],[16,t.ANCIENT_POWER],[24,t.SLASH],[32,t.FLASH_CANNON],[40,t.DRAGON_CLAW],[48,t.AURA_SPHERE],[56,t.POWER_GEM],[64,t.METAL_BURST],[72,t.EARTH_POWER],[80,t.IRON_TAIL],[88,t.ROAR_OF_TIME]],[e.PALKIA]:[[1,t.SCARY_FACE],[1,t.WATER_PULSE],[8,t.DRAGON_BREATH],[16,t.ANCIENT_POWER],[24,t.SLASH],[32,t.AQUA_RING],[48,t.AURA_SPHERE],[56,t.POWER_GEM],[64,t.AQUA_TAIL],[72,t.EARTH_POWER],[80,t.SPACIAL_REND],[88,t.HYDRO_PUMP]],[e.HEATRAN]:[[1,t.LEER],[1,t.FIRE_SPIN],[6,t.METAL_CLAW],[12,t.ANCIENT_POWER],[18,t.FIRE_FANG],[24,t.SCARY_FACE],[30,t.IRON_HEAD],[36,t.CRUNCH],[42,t.LAVA_PLUME],[48,t.METAL_SOUND],[54,t.EARTH_POWER],[60,t.HEAT_WAVE],[66,t.STONE_EDGE],[72,t.MAGMA_STORM]],[e.REGIGIGAS]:[[1,t.POUND],[1,t.CONFUSE_RAY],[1,t.DIZZY_PUNCH],[1,t.FORESIGHT],[6,t.PAYBACK],[12,t.REVENGE],[18,t.STOMP],[24,t.PROTECT],[30,t.KNOCK_OFF],[36,t.MEGA_PUNCH],[42,t.BODY_PRESS],[48,t.WIDE_GUARD],[54,t.ZEN_HEADBUTT],[60,t.HEAVY_SLAM],[66,t.HAMMER_ARM],[72,t.GIGA_IMPACT],[78,t.CRUSH_GRIP]],[e.GIRATINA]:[[1,t.SHADOW_SNEAK],[1,t.DEFOG],[1,t.DRAGON_BREATH],[7,t.OMINOUS_WIND],[14,t.ANCIENT_POWER],[21,t.HEX],[28,t.SLASH],[35,t.SCARY_FACE],[42,t.SHADOW_CLAW],[49,t.PAIN_SPLIT],[56,t.AURA_SPHERE],[63,t.DRAGON_CLAW],[70,t.EARTH_POWER],[77,t.SHADOW_FORCE],[84,t.DESTINY_BOND]],[e.CRESSELIA]:[[1,t.CONFUSION],[1,t.DOUBLE_TEAM],[6,t.MIST],[12,t.AURORA_BEAM],[18,t.PSYBEAM],[24,t.ALLY_SWITCH],[30,t.SLASH],[36,t.PSYCHO_CUT],[42,t.MOONLIGHT],[48,t.SAFEGUARD],[54,t.PSYCHIC],[60,t.MOONBLAST],[66,t.FUTURE_SIGHT],[72,t.LUNAR_DANCE],[72,t.LUNAR_BLESSING]],[e.PHIONE]:[[1,t.WATER_GUN],[9,t.CHARM],[16,t.SUPERSONIC],[24,t.BUBBLE_BEAM],[31,t.ACID_ARMOR],[39,t.WHIRLPOOL],[46,t.WATER_PULSE],[54,t.AQUA_RING],[61,t.DIVE],[69,t.RAIN_DANCE],[75,t.TAKE_HEART]],[e.MANAPHY]:[[1,t.HEART_SWAP],[1,t.TAIL_GLOW],[1,t.WATER_GUN],[9,t.CHARM],[16,t.SUPERSONIC],[24,t.BUBBLE_BEAM],[31,t.ACID_ARMOR],[39,t.WHIRLPOOL],[46,t.WATER_PULSE],[54,t.AQUA_RING],[61,t.DIVE],[69,t.RAIN_DANCE],[76,t.TAKE_HEART]],[e.DARKRAI]:[[1,t.DISABLE],[1,t.OMINOUS_WIND],[1,t.PURSUIT],[11,t.QUICK_ATTACK],[20,t.HYPNOSIS],[29,t.SUCKER_PUNCH],[38,t.NIGHT_SHADE],[47,t.DOUBLE_TEAM],[57,t.HAZE],[66,t.DARK_VOID],[75,t.NASTY_PLOT],[84,t.DREAM_EATER],[93,t.DARK_PULSE]],[e.SHAYMIN]:[[1,t.LEAFAGE],[1,t.GROWTH],[10,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[28,t.SYNTHESIS],[37,t.SWEET_SCENT],[46,t.NATURAL_GIFT],[55,t.WORRY_SEED],[64,t.AROMATHERAPY],[73,t.ENERGY_BALL],[82,t.SWEET_KISS],[91,t.HEALING_WISH],[100,t.SEED_FLARE]],[e.ARCEUS]:[[1,t.SEISMIC_TOSS],[1,t.COSMIC_POWER],[1,t.PUNISHMENT],[10,t.GRAVITY],[20,t.EARTH_POWER],[30,t.HYPER_VOICE],[40,t.EXTREME_SPEED],[50,t.HEALING_WISH],[60,t.FUTURE_SIGHT],[70,t.RECOVER],[80,t.HYPER_BEAM],[90,t.PERISH_SONG],[100,t.JUDGMENT]],[e.VICTINI]:[[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[1,t.FLAME_CHARGE],[1,t.V_CREATE],[7,t.WORK_UP],[14,t.INCINERATE],[21,t.STORED_POWER],[28,t.HEADBUTT],[35,t.ENDURE],[42,t.ZEN_HEADBUTT],[49,t.INFERNO],[56,t.REVERSAL],[63,t.SEARING_SHOT],[70,t.DOUBLE_EDGE],[77,t.FLARE_BLITZ],[84,t.OVERHEAT],[91,t.FINAL_GAMBIT]],[e.SNIVY]:[[1,t.TACKLE],[4,t.LEER],[5,t.VINE_WHIP],[10,t.WRAP],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[22,t.MEGA_DRAIN],[25,t.SLAM],[28,t.LEAF_BLADE],[31,t.COIL],[34,t.GIGA_DRAIN],[37,t.GASTRO_ACID],[40,t.LEAF_STORM]],[e.SERVINE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.WRAP],[1,t.LEER],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.SLAM],[32,t.LEAF_BLADE],[36,t.COIL],[40,t.GIGA_DRAIN],[44,t.GASTRO_ACID],[48,t.LEAF_STORM]],[e.SERPERIOR]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.WRAP],[1,t.LEER],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.SLAM],[32,t.LEAF_BLADE],[38,t.COIL],[44,t.GIGA_DRAIN],[50,t.GASTRO_ACID],[56,t.LEAF_STORM]],[e.TEPIG]:[[1,t.TACKLE],[3,t.TAIL_WHIP],[5,t.EMBER],[9,t.ENDURE],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[19,t.SMOG],[21,t.ROLLOUT],[25,t.TAKE_DOWN],[27,t.HEAT_CRASH],[31,t.ASSURANCE],[33,t.FLAMETHROWER],[37,t.HEAD_SMASH],[39,t.ROAR],[43,t.FLARE_BLITZ]],[e.PIGNITE]:[[Ae,t.ARM_THRUST],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.ENDURE],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[20,t.SMOG],[23,t.ROLLOUT],[28,t.TAKE_DOWN],[31,t.HEAT_CRASH],[36,t.ASSURANCE],[39,t.FLAMETHROWER],[44,t.HEAD_SMASH],[47,t.ROAR],[52,t.FLARE_BLITZ]],[e.EMBOAR]:[[Z,t.ENDURE],[Z,t.HAMMER_ARM],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.ARM_THRUST],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[20,t.SMOG],[23,t.ROLLOUT],[28,t.TAKE_DOWN],[31,t.HEAT_CRASH],[38,t.ASSURANCE],[43,t.FLAMETHROWER],[50,t.HEAD_SMASH],[55,t.ROAR],[62,t.FLARE_BLITZ]],[e.OSHAWOTT]:[[1,t.TACKLE],[5,t.TAIL_WHIP],[5,t.WATER_GUN],[11,t.SOAK],[13,t.FOCUS_ENERGY],[17,t.RAZOR_SHELL],[19,t.FURY_CUTTER],[23,t.WATER_PULSE],[25,t.AERIAL_ACE],[29,t.AQUA_JET],[31,t.ENCORE],[35,t.AQUA_TAIL],[37,t.RETALIATE],[41,t.SWORDS_DANCE],[43,t.HYDRO_PUMP]],[e.DEWOTT]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SOAK],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[26,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[37,t.ENCORE],[42,t.AQUA_TAIL],[45,t.RETALIATE],[50,t.SWORDS_DANCE],[53,t.HYDRO_PUMP]],[e.SAMUROTT]:[[Ae,t.SLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.MEGAHORN],[1,t.SOAK],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[25,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[39,t.ENCORE],[46,t.AQUA_TAIL],[51,t.RETALIATE],[58,t.SWORDS_DANCE],[63,t.HYDRO_PUMP]],[e.PATRAT]:[[1,t.TACKLE],[3,t.LEER],[6,t.BITE],[8,t.BIDE],[11,t.DETECT],[13,t.SAND_ATTACK],[16,t.CRUNCH],[18,t.HYPNOSIS],[21,t.SUPER_FANG],[23,t.AFTER_YOU],[26,t.FOCUS_ENERGY],[28,t.WORK_UP],[31,t.HYPER_FANG],[33,t.NASTY_PLOT],[36,t.MEAN_LOOK],[38,t.BATON_PASS],[41,t.SLAM]],[e.WATCHOG]:[[Ae,t.CONFUSE_RAY],[Z,t.WORK_UP],[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.LOW_KICK],[1,t.ROTOTILLER],[8,t.BIDE],[11,t.DETECT],[13,t.SAND_ATTACK],[16,t.CRUNCH],[18,t.HYPNOSIS],[22,t.SUPER_FANG],[25,t.AFTER_YOU],[29,t.FOCUS_ENERGY],[32,t.PSYCH_UP],[36,t.HYPER_FANG],[39,t.NASTY_PLOT],[43,t.MEAN_LOOK],[46,t.BATON_PASS],[50,t.SLAM]],[e.LILLIPUP]:[[1,t.TACKLE],[1,t.LEER],[4,t.WORK_UP],[8,t.BITE],[12,t.RETALIATE],[17,t.BABY_DOLL_EYES],[20,t.PLAY_ROUGH],[24,t.CRUNCH],[28,t.TAKE_DOWN],[32,t.HELPING_HAND],[36,t.REVERSAL],[40,t.ROAR],[44,t.LAST_RESORT],[48,t.GIGA_IMPACT]],[e.HERDIER]:[[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.WORK_UP],[12,t.RETALIATE],[19,t.BABY_DOLL_EYES],[24,t.PLAY_ROUGH],[30,t.CRUNCH],[36,t.TAKE_DOWN],[42,t.HELPING_HAND],[48,t.REVERSAL],[54,t.ROAR],[60,t.LAST_RESORT],[66,t.GIGA_IMPACT]],[e.STOUTLAND]:[[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.WORK_UP],[12,t.RETALIATE],[19,t.BABY_DOLL_EYES],[24,t.PLAY_ROUGH],[30,t.CRUNCH],[38,t.TAKE_DOWN],[46,t.HELPING_HAND],[54,t.REVERSAL],[62,t.ROAR],[70,t.LAST_RESORT],[78,t.GIGA_IMPACT]],[e.PURRLOIN]:[[1,t.SCRATCH],[1,t.GROWL],[4,t.SAND_ATTACK],[5,t.FAKE_OUT],[12,t.FURY_SWIPES],[16,t.TORMENT],[21,t.ASSURANCE],[24,t.HONE_CLAWS],[28,t.SUCKER_PUNCH],[32,t.NASTY_PLOT],[36,t.NIGHT_SLASH],[40,t.PLAY_ROUGH]],[e.LIEPARD]:[[1,t.ASSIST],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.FAKE_OUT],[12,t.FURY_SWIPES],[16,t.TORMENT],[23,t.ASSURANCE],[28,t.HONE_CLAWS],[34,t.SUCKER_PUNCH],[40,t.NASTY_PLOT],[46,t.NIGHT_SLASH],[52,t.PLAY_ROUGH]],[e.PANSAGE]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.VINE_WHIP],[13,t.FURY_SWIPES],[16,t.LEECH_SEED],[19,t.BITE],[22,t.SEED_BOMB],[25,t.TORMENT],[28,t.FLING],[31,t.ACROBATICS],[34,t.GRASS_KNOT],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMISAGE]:[[Z,t.SCRATCH],[Z,t.PLAY_NICE],[Z,t.VINE_WHIP],[Z,t.LEECH_SEED],[Z,t.BITE],[Z,t.TORMENT],[Z,t.FLING],[Z,t.ACROBATICS],[Z,t.GRASS_KNOT],[Z,t.RECYCLE],[Z,t.NATURAL_GIFT],[Z,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.SEED_BOMB]],[e.PANSEAR]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.INCINERATE],[13,t.FURY_SWIPES],[16,t.YAWN],[19,t.BITE],[22,t.FLAME_BURST],[25,t.AMNESIA],[28,t.FLING],[31,t.ACROBATICS],[34,t.FIRE_BLAST],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMISEAR]:[[Z,t.SCRATCH],[Z,t.PLAY_NICE],[Z,t.INCINERATE],[Z,t.YAWN],[Z,t.BITE],[Z,t.AMNESIA],[Z,t.FLING],[Z,t.ACROBATICS],[Z,t.FIRE_BLAST],[Z,t.RECYCLE],[Z,t.NATURAL_GIFT],[Z,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.FLAME_BURST]],[e.PANPOUR]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.WATER_GUN],[13,t.FURY_SWIPES],[16,t.WATER_SPORT],[19,t.BITE],[22,t.SCALD],[25,t.TAUNT],[28,t.FLING],[31,t.ACROBATICS],[34,t.BRINE],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMIPOUR]:[[Z,t.SCRATCH],[Z,t.PLAY_NICE],[Z,t.WATER_GUN],[Z,t.WATER_SPORT],[Z,t.BITE],[Z,t.TAUNT],[Z,t.FLING],[Z,t.ACROBATICS],[Z,t.BRINE],[Z,t.RECYCLE],[Z,t.NATURAL_GIFT],[Z,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.SCALD]],[e.MUNNA]:[[1,t.DEFENSE_CURL],[1,t.STORED_POWER],[1,t.PSYWAVE],[4,t.HYPNOSIS],[8,t.PSYBEAM],[12,t.IMPRISON],[16,t.MOONLIGHT],[20,t.MAGIC_COAT],[24,t.ZEN_HEADBUTT],[28,t.CALM_MIND],[32,t.YAWN],[36,t.PSYCHIC],[40,t.MOONBLAST],[44,t.DREAM_EATER],[48,t.FUTURE_SIGHT],[52,t.WONDER_ROOM]],[e.MUSHARNA]:[[1,t.PSYWAVE],[1,t.PSYBEAM],[1,t.PSYCHIC],[1,t.HYPNOSIS],[1,t.DEFENSE_CURL],[1,t.LUCKY_CHANT],[1,t.DREAM_EATER],[1,t.MOONLIGHT],[1,t.FUTURE_SIGHT],[1,t.MAGIC_COAT],[1,t.YAWN],[1,t.IMPRISON],[1,t.CALM_MIND],[1,t.ZEN_HEADBUTT],[1,t.WONDER_ROOM],[1,t.STORED_POWER],[1,t.MOONBLAST],[1,t.PSYCHIC_TERRAIN]],[e.PIDOVE]:[[1,t.GUST],[1,t.GROWL],[4,t.LEER],[8,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[24,t.FEATHER_DANCE],[28,t.DETECT],[32,t.AIR_SLASH],[36,t.ROOST],[40,t.TAILWIND],[44,t.SKY_ATTACK]],[e.TRANQUILL]:[[1,t.GUST],[1,t.LEER],[1,t.GROWL],[1,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[26,t.FEATHER_DANCE],[34,t.DETECT],[38,t.AIR_SLASH],[44,t.ROOST],[50,t.TAILWIND],[56,t.SKY_ATTACK]],[e.UNFEZANT]:[[1,t.GUST],[1,t.LEER],[1,t.GROWL],[1,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[26,t.FEATHER_DANCE],[36,t.DETECT],[42,t.AIR_SLASH],[50,t.ROOST],[58,t.TAILWIND],[66,t.SKY_ATTACK]],[e.BLITZLE]:[[1,t.QUICK_ATTACK],[4,t.TAIL_WHIP],[8,t.CHARGE],[11,t.SHOCK_WAVE],[15,t.THUNDER_WAVE],[18,t.FLAME_CHARGE],[22,t.SPARK],[25,t.STOMP],[29,t.DISCHARGE],[33,t.AGILITY],[35,t.WILD_CHARGE],[40,t.THRASH]],[e.ZEBSTRIKA]:[[1,t.TAIL_WHIP],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[1,t.CHARGE],[1,t.ION_DELUGE],[11,t.SHOCK_WAVE],[18,t.FLAME_CHARGE],[25,t.SPARK],[31,t.STOMP],[36,t.DISCHARGE],[42,t.AGILITY],[47,t.WILD_CHARGE],[53,t.THRASH]],[e.ROGGENROLA]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[4,t.HARDEN],[8,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[28,t.ROCK_SLIDE],[32,t.ROCK_BLAST],[36,t.SANDSTORM],[40,t.STONE_EDGE],[44,t.EXPLOSION]],[e.BOLDORE]:[[Ae,t.POWER_GEM],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[30,t.ROCK_SLIDE],[36,t.ROCK_BLAST],[42,t.SANDSTORM],[48,t.STONE_EDGE],[54,t.EXPLOSION]],[e.GIGALITH]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWER_GEM],[1,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[30,t.ROCK_SLIDE],[36,t.ROCK_BLAST],[42,t.SANDSTORM],[48,t.STONE_EDGE],[54,t.EXPLOSION]],[e.WOOBAT]:[[1,t.GUST],[1,t.ATTRACT],[5,t.CONFUSION],[10,t.ENDEAVOR],[15,t.AIR_CUTTER],[20,t.IMPRISON],[25,t.ASSURANCE],[30,t.AMNESIA],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.CALM_MIND],[50,t.FUTURE_SIGHT],[55,t.SIMPLE_BEAM]],[e.SWOOBAT]:[[1,t.GUST],[1,t.CONFUSION],[1,t.ATTRACT],[1,t.ENDEAVOR],[15,t.AIR_CUTTER],[20,t.IMPRISON],[25,t.ASSURANCE],[30,t.AMNESIA],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.CALM_MIND],[50,t.FUTURE_SIGHT],[55,t.SIMPLE_BEAM]],[e.DRILBUR]:[[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.MUD_SPORT],[4,t.SCRATCH],[8,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.METAL_CLAW],[20,t.SANDSTORM],[24,t.CRUSH_CLAW],[28,t.ROCK_SLIDE],[32,t.DIG],[36,t.SWORDS_DANCE],[40,t.DRILL_RUN],[44,t.EARTHQUAKE],[48,t.FISSURE]],[e.EXCADRILL]:[[Ae,t.HORN_DRILL],[1,t.SCRATCH],[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.MUD_SPORT],[1,t.ROTOTILLER],[1,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.METAL_CLAW],[20,t.SANDSTORM],[24,t.CRUSH_CLAW],[28,t.ROCK_SLIDE],[34,t.DIG],[40,t.SWORDS_DANCE],[46,t.DRILL_RUN],[52,t.EARTHQUAKE],[58,t.FISSURE]],[e.AUDINO]:[[1,t.POUND],[1,t.PLAY_NICE],[4,t.DISARMING_VOICE],[9,t.BABY_DOLL_EYES],[12,t.HELPING_HAND],[16,t.GROWL],[20,t.ZEN_HEADBUTT],[24,t.LIFE_DEW],[28,t.AFTER_YOU],[32,t.TAKE_DOWN],[36,t.SIMPLE_BEAM],[40,t.HYPER_VOICE],[44,t.HEAL_PULSE],[48,t.DOUBLE_EDGE],[52,t.ENTRAINMENT],[56,t.MISTY_TERRAIN],[60,t.LAST_RESORT]],[e.TIMBURR]:[[1,t.POUND],[1,t.LEER],[4,t.LOW_KICK],[8,t.ROCK_THROW],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[28,t.SCARY_FACE],[32,t.DYNAMIC_PUNCH],[36,t.HAMMER_ARM],[40,t.STONE_EDGE],[44,t.SUPERPOWER],[48,t.FOCUS_PUNCH]],[e.GURDURR]:[[1,t.POUND],[1,t.LEER],[1,t.LOW_KICK],[1,t.ROCK_THROW],[1,t.BIDE],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[30,t.SCARY_FACE],[36,t.DYNAMIC_PUNCH],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.FOCUS_PUNCH]],[e.CONKELDURR]:[[1,t.POUND],[1,t.LEER],[1,t.LOW_KICK],[1,t.ROCK_THROW],[1,t.BIDE],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[30,t.SCARY_FACE],[36,t.DYNAMIC_PUNCH],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.FOCUS_PUNCH]],[e.TYMPOLE]:[[1,t.BUBBLE],[1,t.GROWL],[1,t.ECHOED_VOICE],[4,t.ACID],[8,t.SUPERSONIC],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[28,t.UPROAR],[32,t.AQUA_RING],[36,t.HYPER_VOICE],[40,t.MUDDY_WATER],[44,t.RAIN_DANCE],[48,t.HYDRO_PUMP]],[e.PALPITOAD]:[[1,t.BUBBLE],[1,t.GROWL],[1,t.SUPERSONIC],[1,t.ACID],[1,t.ECHOED_VOICE],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[30,t.UPROAR],[37,t.AQUA_RING],[42,t.HYPER_VOICE],[48,t.MUDDY_WATER],[54,t.RAIN_DANCE],[60,t.HYDRO_PUMP]],[e.SEISMITOAD]:[[Ae,t.DRAIN_PUNCH],[1,t.BUBBLE],[1,t.GROWL],[1,t.SUPERSONIC],[1,t.ACID],[1,t.GASTRO_ACID],[1,t.ECHOED_VOICE],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[30,t.UPROAR],[39,t.AQUA_RING],[46,t.HYPER_VOICE],[54,t.MUDDY_WATER],[62,t.RAIN_DANCE],[70,t.HYDRO_PUMP]],[e.THROH]:[[1,t.ROCK_SMASH],[1,t.LEER],[1,t.BIDE],[1,t.MAT_BLOCK],[1,t.BIND],[5,t.FOCUS_ENERGY],[10,t.CIRCLE_THROW],[15,t.WIDE_GUARD],[20,t.REVENGE],[25,t.BULK_UP],[30,t.STORM_THROW],[35,t.VITAL_THROW],[40,t.SEISMIC_TOSS],[45,t.ENDURE],[50,t.REVERSAL],[55,t.SUPERPOWER]],[e.SAWK]:[[1,t.LEER],[1,t.ROCK_SMASH],[1,t.BIDE],[5,t.FOCUS_ENERGY],[10,t.DOUBLE_KICK],[15,t.QUICK_GUARD],[20,t.LOW_SWEEP],[25,t.BULK_UP],[30,t.RETALIATE],[35,t.BRICK_BREAK],[40,t.COUNTER],[45,t.ENDURE],[50,t.REVERSAL],[55,t.CLOSE_COMBAT]],[e.SEWADDLE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[8,t.BUG_BITE],[15,t.RAZOR_LEAF],[22,t.STRUGGLE_BUG],[29,t.ENDURE],[31,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.FLAIL]],[e.SWADLOON]:[[Ae,t.PROTECT],[1,t.TACKLE],[1,t.RAZOR_LEAF],[1,t.STRING_SHOT],[1,t.BUG_BITE],[1,t.GRASS_WHISTLE],[22,t.STRUGGLE_BUG],[29,t.ENDURE],[31,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.FLAIL]],[e.LEAVANNY]:[[Ae,t.SLASH],[Z,t.BUG_BITE],[Z,t.STICKY_WEB],[Z,t.BUG_BUZZ],[1,t.PROTECT],[1,t.TACKLE],[1,t.RAZOR_LEAF],[1,t.STRING_SHOT],[1,t.GRASS_WHISTLE],[1,t.ENDURE],[1,t.FLAIL],[1,t.FALSE_SWIPE],[22,t.STRUGGLE_BUG],[29,t.FELL_STINGER],[32,t.HELPING_HAND],[36,t.LEAF_BLADE],[39,t.X_SCISSOR],[43,t.ENTRAINMENT],[46,t.SWORDS_DANCE],[50,t.LEAF_STORM]],[e.VENIPEDE]:[[1,t.POISON_STING],[1,t.DEFENSE_CURL],[4,t.ROLLOUT],[8,t.PROTECT],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[24,t.VENOSHOCK],[28,t.TAKE_DOWN],[32,t.AGILITY],[36,t.TOXIC],[40,t.VENOM_DRENCH],[44,t.DOUBLE_EDGE]],[e.WHIRLIPEDE]:[[Ae,t.IRON_DEFENSE],[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.PROTECT],[1,t.ROLLOUT],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[26,t.VENOSHOCK],[32,t.TAKE_DOWN],[38,t.AGILITY],[44,t.TOXIC],[50,t.VENOM_DRENCH],[56,t.DOUBLE_EDGE]],[e.SCOLIPEDE]:[[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.PROTECT],[1,t.ROLLOUT],[1,t.BATON_PASS],[1,t.IRON_DEFENSE],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[26,t.VENOSHOCK],[34,t.TAKE_DOWN],[42,t.AGILITY],[50,t.TOXIC],[58,t.VENOM_DRENCH],[66,t.DOUBLE_EDGE],[74,t.MEGAHORN]],[e.COTTONEE]:[[1,t.ABSORB],[1,t.HELPING_HAND],[3,t.FAIRY_WIND],[6,t.STUN_SPORE],[12,t.MEGA_DRAIN],[15,t.RAZOR_LEAF],[18,t.GROWTH],[21,t.POISON_POWDER],[24,t.GIGA_DRAIN],[27,t.CHARM],[30,t.LEECH_SEED],[33,t.COTTON_SPORE],[36,t.ENERGY_BALL],[39,t.SUNNY_DAY],[42,t.ENDEAVOR],[45,t.COTTON_GUARD],[48,t.SOLAR_BEAM]],[e.WHIMSICOTT]:[[1,t.GUST],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.RAZOR_LEAF],[1,t.SOLAR_BEAM],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.COTTON_SPORE],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SUNNY_DAY],[1,t.MEMENTO],[1,t.HELPING_HAND],[1,t.ENDEAVOR],[1,t.TAILWIND],[1,t.ENERGY_BALL],[1,t.COTTON_GUARD],[1,t.HURRICANE],[1,t.FAIRY_WIND],[1,t.MOONBLAST]],[e.PETILIL]:[[1,t.ABSORB],[1,t.GROWTH],[3,t.HELPING_HAND],[6,t.STUN_SPORE],[9,t.MEGA_DRAIN],[12,t.CHARM],[15,t.MAGICAL_LEAF],[18,t.SLEEP_POWDER],[21,t.GIGA_DRAIN],[24,t.LEECH_SEED],[27,t.AFTER_YOU],[30,t.ENERGY_BALL],[33,t.SYNTHESIS],[36,t.SUNNY_DAY],[39,t.ENTRAINMENT],[42,t.LEAF_STORM]],[e.LILLIGANT]:[[Ae,t.PETAL_DANCE],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SYNTHESIS],[1,t.SUNNY_DAY],[1,t.HELPING_HAND],[1,t.TEETER_DANCE],[1,t.ENERGY_BALL],[1,t.LEAF_STORM],[1,t.QUIVER_DANCE],[1,t.ENTRAINMENT],[1,t.AFTER_YOU],[1,t.PETAL_BLIZZARD],[5,t.MAGICAL_LEAF]],[e.BASCULIN]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[4,t.TACKLE],[8,t.FLAIL],[12,t.AQUA_JET],[16,t.BITE],[20,t.SCARY_FACE],[24,t.HEADBUTT],[28,t.SOAK],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FINAL_GAMBIT],[44,t.WAVE_CRASH],[48,t.THRASH],[52,t.DOUBLE_EDGE],[56,t.HEAD_SMASH]],[e.SANDILE]:[[1,t.LEER],[1,t.POWER_TRIP],[3,t.SAND_ATTACK],[6,t.HONE_CLAWS],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[30,t.SANDSTORM],[33,t.FOUL_PLAY],[36,t.EARTHQUAKE],[39,t.THRASH]],[e.KROKOROK]:[[1,t.SAND_ATTACK],[1,t.LEER],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[32,t.SANDSTORM],[35,t.FOUL_PLAY],[42,t.EARTHQUAKE],[47,t.THRASH]],[e.KROOKODILE]:[[1,t.SAND_ATTACK],[1,t.LEER],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[32,t.SANDSTORM],[35,t.FOUL_PLAY],[44,t.EARTHQUAKE],[51,t.THRASH],[58,t.OUTRAGE]],[e.DARUMAKA]:[[1,t.TACKLE],[1,t.EMBER],[4,t.TAUNT],[8,t.BITE],[12,t.INCINERATE],[16,t.WORK_UP],[20,t.FIRE_FANG],[24,t.HEADBUTT],[28,t.FIRE_PUNCH],[32,t.UPROAR],[36,t.BELLY_DRUM],[40,t.FLARE_BLITZ],[44,t.THRASH],[48,t.SUPERPOWER]],[e.DARMANITAN]:[[Ae,t.HAMMER_ARM],[1,t.TACKLE],[1,t.BITE],[1,t.EMBER],[1,t.TAUNT],[12,t.INCINERATE],[16,t.WORK_UP],[20,t.FIRE_FANG],[24,t.HEADBUTT],[28,t.FIRE_PUNCH],[32,t.UPROAR],[38,t.BELLY_DRUM],[44,t.FLARE_BLITZ],[50,t.THRASH],[56,t.SUPERPOWER]],[e.MARACTUS]:[[1,t.PECK],[1,t.ABSORB],[1,t.INGRAIN],[1,t.AFTER_YOU],[1,t.SPIKY_SHIELD],[4,t.GROWTH],[8,t.MEGA_DRAIN],[12,t.LEECH_SEED],[16,t.SUCKER_PUNCH],[20,t.PIN_MISSILE],[24,t.GIGA_DRAIN],[28,t.SWEET_SCENT],[32,t.SYNTHESIS],[36,t.PETAL_BLIZZARD],[40,t.COTTON_SPORE],[44,t.SUNNY_DAY],[48,t.SOLAR_BEAM],[52,t.ACUPRESSURE],[56,t.PETAL_DANCE],[60,t.COTTON_GUARD]],[e.DWEBBLE]:[[1,t.SAND_ATTACK],[1,t.FURY_CUTTER],[4,t.WITHDRAW],[8,t.SMACK_DOWN],[12,t.BUG_BITE],[16,t.FLAIL],[20,t.SLASH],[24,t.ROCK_SLIDE],[28,t.STEALTH_ROCK],[32,t.ROCK_BLAST],[36,t.X_SCISSOR],[40,t.ROCK_POLISH],[44,t.SHELL_SMASH],[48,t.ROCK_WRECKER]],[e.CRUSTLE]:[[1,t.SAND_ATTACK],[1,t.WITHDRAW],[1,t.FURY_CUTTER],[1,t.SMACK_DOWN],[12,t.BUG_BITE],[16,t.FLAIL],[20,t.SLASH],[24,t.ROCK_SLIDE],[28,t.STEALTH_ROCK],[32,t.ROCK_BLAST],[38,t.X_SCISSOR],[44,t.ROCK_POLISH],[50,t.SHELL_SMASH],[56,t.ROCK_WRECKER]],[e.SCRAGGY]:[[1,t.LEER],[1,t.LOW_KICK],[4,t.PAYBACK],[8,t.HEADBUTT],[12,t.SAND_ATTACK],[16,t.FACADE],[20,t.PROTECT],[24,t.BEAT_UP],[28,t.SCARY_FACE],[32,t.BRICK_BREAK],[36,t.SWAGGER],[40,t.CRUNCH],[44,t.HIGH_JUMP_KICK],[48,t.FOCUS_PUNCH],[52,t.HEAD_SMASH]],[e.SCRAFTY]:[[1,t.HEADBUTT],[1,t.LEER],[1,t.LOW_KICK],[1,t.PAYBACK],[1,t.FEINT_ATTACK],[12,t.SAND_ATTACK],[16,t.FACADE],[20,t.PROTECT],[24,t.BEAT_UP],[28,t.SCARY_FACE],[32,t.BRICK_BREAK],[36,t.SWAGGER],[42,t.CRUNCH],[48,t.HIGH_JUMP_KICK],[54,t.FOCUS_PUNCH],[60,t.HEAD_SMASH]],[e.SIGILYPH]:[[1,t.GUST],[1,t.CONFUSION],[5,t.GRAVITY],[10,t.HYPNOSIS],[15,t.AIR_CUTTER],[20,t.PSYBEAM],[25,t.WHIRLWIND],[30,t.COSMIC_POWER],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.TAILWIND],[50,t.LIGHT_SCREEN],[50,t.REFLECT],[55,t.SKY_ATTACK],[60,t.SKILL_SWAP]],[e.YAMASK]:[[1,t.PROTECT],[1,t.ASTONISH],[1,t.HEAL_BLOCK],[4,t.HAZE],[8,t.NIGHT_SHADE],[12,t.DISABLE],[16,t.WILL_O_WISP],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.GRUDGE],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.DARK_PULSE],[48,t.GUARD_SPLIT],[48,t.POWER_SPLIT],[52,t.DESTINY_BOND]],[e.COFAGRIGUS]:[[Ae,t.SHADOW_CLAW],[1,t.NIGHT_SHADE],[1,t.HAZE],[1,t.PROTECT],[1,t.SCARY_FACE],[1,t.ASTONISH],[1,t.HEAL_BLOCK],[12,t.DISABLE],[16,t.WILL_O_WISP],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.GRUDGE],[38,t.CURSE],[44,t.SHADOW_BALL],[50,t.DARK_PULSE],[56,t.GUARD_SPLIT],[56,t.POWER_SPLIT],[62,t.DESTINY_BOND]],[e.TIRTOUGA]:[[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.BIDE],[3,t.PROTECT],[6,t.AQUA_JET],[9,t.SMACK_DOWN],[12,t.ANCIENT_POWER],[15,t.BITE],[18,t.WIDE_GUARD],[21,t.BRINE],[24,t.ROCK_SLIDE],[27,t.CRUNCH],[30,t.CURSE],[33,t.IRON_DEFENSE],[36,t.AQUA_TAIL],[39,t.RAIN_DANCE],[42,t.HYDRO_PUMP],[45,t.SHELL_SMASH]],[e.CARRACOSTA]:[[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.PROTECT],[1,t.AQUA_JET],[1,t.BIDE],[9,t.SMACK_DOWN],[12,t.ANCIENT_POWER],[15,t.BITE],[18,t.WIDE_GUARD],[21,t.BRINE],[24,t.ROCK_SLIDE],[27,t.CRUNCH],[30,t.CURSE],[33,t.IRON_DEFENSE],[36,t.AQUA_TAIL],[41,t.RAIN_DANCE],[46,t.HYDRO_PUMP],[51,t.SHELL_SMASH]],[e.ARCHEN]:[[1,t.LEER],[1,t.QUICK_ATTACK],[3,t.ROCK_THROW],[6,t.WING_ATTACK],[9,t.DRAGON_BREATH],[12,t.ANCIENT_POWER],[15,t.PLUCK],[18,t.QUICK_GUARD],[21,t.U_TURN],[24,t.ROCK_SLIDE],[27,t.SCARY_FACE],[30,t.CRUNCH],[33,t.AGILITY],[36,t.TAILWIND],[39,t.DRAGON_CLAW],[42,t.THRASH],[45,t.ENDEAVOR]],[e.ARCHEOPS]:[[1,t.WING_ATTACK],[1,t.LEER],[1,t.ROCK_THROW],[1,t.QUICK_ATTACK],[9,t.DRAGON_BREATH],[12,t.ANCIENT_POWER],[15,t.PLUCK],[18,t.QUICK_GUARD],[21,t.U_TURN],[24,t.ROCK_SLIDE],[27,t.SCARY_FACE],[30,t.CRUNCH],[33,t.AGILITY],[36,t.TAILWIND],[41,t.DRAGON_CLAW],[46,t.THRASH],[51,t.ENDEAVOR]],[e.TRUBBISH]:[[1,t.POUND],[1,t.POISON_GAS],[3,t.RECYCLE],[6,t.ACID_SPRAY],[9,t.AMNESIA],[12,t.CLEAR_SMOG],[15,t.TOXIC_SPIKES],[18,t.SLUDGE],[21,t.STOCKPILE],[21,t.SWALLOW],[24,t.TAKE_DOWN],[27,t.SLUDGE_BOMB],[30,t.TOXIC],[33,t.BELCH],[37,t.PAIN_SPLIT],[39,t.GUNK_SHOT],[42,t.EXPLOSION]],[e.GARBODOR]:[[1,t.POUND],[1,t.TAKE_DOWN],[1,t.POISON_GAS],[1,t.METAL_CLAW],[1,t.RECYCLE],[1,t.ACID_SPRAY],[9,t.AMNESIA],[12,t.CLEAR_SMOG],[15,t.TOXIC_SPIKES],[18,t.SLUDGE],[21,t.STOCKPILE],[21,t.SWALLOW],[24,t.BODY_SLAM],[27,t.SLUDGE_BOMB],[30,t.TOXIC],[33,t.BELCH],[39,t.PAIN_SPLIT],[43,t.GUNK_SHOT],[48,t.EXPLOSION]],[e.ZORUA]:[[1,t.SCRATCH],[1,t.LEER],[4,t.TORMENT],[8,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.SCARY_FACE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.FAKE_TEARS],[32,t.AGILITY],[36,t.IMPRISON],[40,t.NIGHT_DAZE],[44,t.NASTY_PLOT],[48,t.FOUL_PLAY]],[e.ZOROARK]:[[Ae,t.NIGHT_SLASH],[1,t.SCRATCH],[1,t.LEER],[1,t.TORMENT],[1,t.U_TURN],[1,t.HONE_CLAWS],[1,t.SCARY_FACE],[1,t.PURSUIT],[12,t.FURY_SWIPES],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.FAKE_TEARS],[34,t.AGILITY],[40,t.IMPRISON],[46,t.NIGHT_DAZE],[52,t.NASTY_PLOT],[58,t.FOUL_PLAY]],[e.MINCCINO]:[[1,t.POUND],[1,t.BABY_DOLL_EYES],[4,t.HELPING_HAND],[8,t.ECHOED_VOICE],[12,t.SING],[16,t.CHARM],[20,t.SWIFT],[24,t.ENCORE],[28,t.AFTER_YOU],[32,t.TAIL_SLAP],[36,t.TICKLE],[40,t.SLAM],[44,t.HYPER_VOICE],[48,t.LAST_RESORT]],[e.CINCCINO]:[[Ae,t.TAIL_SLAP],[Z,t.SLAM],[Z,t.SWIFT],[Z,t.ENCORE],[Z,t.HELPING_HAND],[Z,t.HYPER_VOICE],[Z,t.TICKLE],[Z,t.ROCK_BLAST],[Z,t.LAST_RESORT],[Z,t.AFTER_YOU],[Z,t.ECHOED_VOICE],[Z,t.BABY_DOLL_EYES],[1,t.BULLET_SEED],[1,t.SING],[1,t.CHARM],[1,t.POUND]],[e.GOTHITA]:[[1,t.POUND],[1,t.CONFUSION],[4,t.PLAY_NICE],[8,t.TICKLE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[33,t.PSYCH_UP],[34,t.HEAL_BLOCK],[36,t.PSYCHIC],[40,t.FLATTER],[44,t.FUTURE_SIGHT],[48,t.MAGIC_ROOM]],[e.GOTHORITA]:[[1,t.POUND],[1,t.CONFUSION],[1,t.TICKLE],[1,t.PLAY_NICE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[34,t.HEAL_BLOCK],[35,t.PSYCH_UP],[40,t.PSYCHIC],[46,t.FLATTER],[52,t.FUTURE_SIGHT],[58,t.MAGIC_ROOM]],[e.GOTHITELLE]:[[1,t.POUND],[1,t.CONFUSION],[1,t.TICKLE],[1,t.PLAY_NICE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[34,t.HEAL_BLOCK],[35,t.PSYCH_UP],[40,t.PSYCHIC],[48,t.FLATTER],[56,t.FUTURE_SIGHT],[64,t.MAGIC_ROOM]],[e.SOLOSIS]:[[1,t.CONFUSION],[1,t.PROTECT],[1,t.PSYWAVE],[4,t.RECOVER],[8,t.ENDEAVOR],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[33,t.PAIN_SPLIT],[36,t.PSYCHIC],[40,t.SKILL_SWAP],[44,t.FUTURE_SIGHT],[46,t.HEAL_BLOCK],[48,t.WONDER_ROOM]],[e.DUOSION]:[[1,t.CONFUSION],[1,t.RECOVER],[1,t.PSYWAVE],[1,t.PROTECT],[1,t.ENDEAVOR],[1,t.SNATCH],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[35,t.PAIN_SPLIT],[40,t.PSYCHIC],[46,t.SKILL_SWAP],[50,t.HEAL_BLOCK],[52,t.FUTURE_SIGHT],[58,t.WONDER_ROOM]],[e.REUNICLUS]:[[Ae,t.HAMMER_ARM],[1,t.CONFUSION],[1,t.RECOVER],[1,t.PROTECT],[1,t.ENDEAVOR],[1,t.DIZZY_PUNCH],[1,t.PSYWAVE],[1,t.SNATCH],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[35,t.PAIN_SPLIT],[40,t.PSYCHIC],[48,t.SKILL_SWAP],[54,t.HEAL_BLOCK],[56,t.FUTURE_SIGHT],[64,t.WONDER_ROOM]],[e.DUCKLETT]:[[1,t.WATER_GUN],[6,t.DEFOG],[9,t.WING_ATTACK],[13,t.WATER_PULSE],[15,t.AERIAL_ACE],[19,t.BUBBLE_BEAM],[21,t.FEATHER_DANCE],[24,t.AQUA_RING],[27,t.AIR_SLASH],[30,t.ROOST],[34,t.RAIN_DANCE],[37,t.TAILWIND],[41,t.BRAVE_BIRD],[46,t.HURRICANE]],[e.SWANNA]:[[1,t.WING_ATTACK],[1,t.WATER_GUN],[1,t.DEFOG],[13,t.WATER_PULSE],[15,t.AERIAL_ACE],[19,t.BUBBLE_BEAM],[21,t.FEATHER_DANCE],[24,t.AQUA_RING],[27,t.AIR_SLASH],[30,t.ROOST],[34,t.RAIN_DANCE],[40,t.TAILWIND],[47,t.BRAVE_BIRD],[55,t.HURRICANE]],[e.VANILLITE]:[[1,t.HARDEN],[1,t.ASTONISH],[1,t.POWDER_SNOW],[4,t.TAUNT],[8,t.MIST],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[36,t.MIRROR_COAT],[40,t.ICE_BEAM],[44,t.BLIZZARD],[48,t.SHEER_COLD]],[e.VANILLISH]:[[1,t.MIST],[1,t.HARDEN],[1,t.TAUNT],[1,t.ASTONISH],[1,t.POWDER_SNOW],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[38,t.MIRROR_COAT],[44,t.ICE_BEAM],[50,t.BLIZZARD],[56,t.SHEER_COLD]],[e.VANILLUXE]:[[1,t.MIST],[1,t.HARDEN],[1,t.TAUNT],[1,t.ASTONISH],[1,t.POWDER_SNOW],[1,t.WEATHER_BALL],[1,t.ICICLE_CRASH],[1,t.FREEZE_DRY],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[38,t.MIRROR_COAT],[44,t.ICE_BEAM],[52,t.BLIZZARD],[60,t.SHEER_COLD]],[e.DEERLING]:[[1,t.TACKLE],[1,t.CAMOUFLAGE],[4,t.GROWL],[7,t.SAND_ATTACK],[10,t.DOUBLE_KICK],[13,t.LEECH_SEED],[16,t.BULLET_SEED],[20,t.TAKE_DOWN],[24,t.ZEN_HEADBUTT],[28,t.ENERGY_BALL],[32,t.CHARM],[37,t.DOUBLE_EDGE],[42,t.SOLAR_BEAM]],[e.SAWSBUCK]:[[Ae,t.HORN_LEECH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.CAMOUFLAGE],[1,t.MEGAHORN],[10,t.DOUBLE_KICK],[13,t.LEECH_SEED],[16,t.BULLET_SEED],[20,t.TAKE_DOWN],[24,t.ZEN_HEADBUTT],[28,t.ENERGY_BALL],[36,t.CHARM],[44,t.DOUBLE_EDGE],[52,t.SOLAR_BEAM]],[e.EMOLGA]:[[1,t.TAIL_WHIP],[1,t.NUZZLE],[5,t.DOUBLE_TEAM],[10,t.QUICK_ATTACK],[15,t.THUNDER_SHOCK],[20,t.CHARGE],[25,t.ACROBATICS],[30,t.SPARK],[35,t.ENCORE],[40,t.VOLT_SWITCH],[45,t.LIGHT_SCREEN],[50,t.DISCHARGE],[55,t.AGILITY]],[e.KARRABLAST]:[[1,t.LEER],[1,t.PECK],[4,t.FURY_CUTTER],[8,t.ENDURE],[12,t.FALSE_SWIPE],[16,t.ACID_SPRAY],[20,t.HEADBUTT],[24,t.FLAIL],[28,t.SCARY_FACE],[32,t.X_SCISSOR],[36,t.SWORDS_DANCE],[40,t.TAKE_DOWN],[44,t.BUG_BUZZ],[48,t.DOUBLE_EDGE]],[e.ESCAVALIER]:[[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.PECK],[1,t.FLAIL],[1,t.SCARY_FACE],[1,t.ENDURE],[1,t.FURY_CUTTER],[1,t.QUICK_GUARD],[1,t.FELL_STINGER],[1,t.TWINEEDLE],[12,t.FALSE_SWIPE],[16,t.ACID_SPRAY],[20,t.HEADBUTT],[24,t.REVERSAL],[28,t.IRON_DEFENSE],[32,t.X_SCISSOR],[36,t.SWORDS_DANCE],[40,t.IRON_HEAD],[44,t.BUG_BUZZ],[48,t.GIGA_IMPACT],[52,t.METAL_BURST]],[e.FOONGUS]:[[1,t.ABSORB],[1,t.ASTONISH],[4,t.GROWTH],[8,t.STUN_SPORE],[12,t.MEGA_DRAIN],[16,t.SYNTHESIS],[20,t.CLEAR_SMOG],[24,t.SWEET_SCENT],[28,t.GIGA_DRAIN],[32,t.INGRAIN],[36,t.TOXIC],[40,t.RAGE_POWDER],[44,t.SOLAR_BEAM],[48,t.SPORE]],[e.AMOONGUSS]:[[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.ASTONISH],[1,t.BIDE],[12,t.MEGA_DRAIN],[16,t.SYNTHESIS],[20,t.CLEAR_SMOG],[24,t.SWEET_SCENT],[28,t.GIGA_DRAIN],[32,t.INGRAIN],[36,t.TOXIC],[42,t.RAGE_POWDER],[48,t.SOLAR_BEAM],[54,t.SPORE]],[e.FRILLISH]:[[1,t.WATER_GUN],[1,t.ABSORB],[1,t.WATER_SPORT],[4,t.POISON_STING],[8,t.NIGHT_SHADE],[12,t.WATER_PULSE],[16,t.RAIN_DANCE],[20,t.HEX],[24,t.BRINE],[28,t.RECOVER],[32,t.SHADOW_BALL],[36,t.WHIRLPOOL],[41,t.HYDRO_PUMP],[44,t.DESTINY_BOND],[48,t.WATER_SPOUT]],[e.JELLICENT]:[[1,t.POISON_STING],[1,t.WATER_GUN],[1,t.WATER_SPORT],[1,t.WRING_OUT],[1,t.ABSORB],[1,t.NIGHT_SHADE],[1,t.ACID_ARMOR],[12,t.WATER_PULSE],[16,t.RAIN_DANCE],[20,t.HEX],[24,t.BRINE],[28,t.RECOVER],[32,t.SHADOW_BALL],[36,t.WHIRLPOOL],[43,t.HYDRO_PUMP],[48,t.DESTINY_BOND],[54,t.WATER_SPOUT]],[e.ALOMOMOLA]:[[1,t.POUND],[1,t.PLAY_NICE],[1,t.WATER_SPORT],[5,t.AQUA_RING],[9,t.AQUA_JET],[13,t.HELPING_HAND],[13,t.WIDE_GUARD],[21,t.PROTECT],[25,t.WATER_PULSE],[29,t.HEALING_WISH],[33,t.SOAK],[37,t.WISH],[41,t.BRINE],[45,t.SAFEGUARD],[49,t.WHIRLPOOL],[55,t.HYDRO_PUMP]],[e.JOLTIK]:[[1,t.ABSORB],[1,t.FURY_CUTTER],[1,t.SPIDER_WEB],[4,t.ELECTROWEB],[8,t.BUG_BITE],[12,t.STRING_SHOT],[16,t.THUNDER_WAVE],[20,t.ELECTRO_BALL],[24,t.AGILITY],[28,t.SUCKER_PUNCH],[32,t.SLASH],[37,t.DISCHARGE],[40,t.SCREECH],[44,t.GASTRO_ACID],[48,t.BUG_BUZZ]],[e.GALVANTULA]:[[Ae,t.STICKY_WEB],[1,t.ABSORB],[1,t.FURY_CUTTER],[1,t.BUG_BITE],[1,t.ELECTROWEB],[1,t.SPIDER_WEB],[12,t.STRING_SHOT],[16,t.THUNDER_WAVE],[20,t.ELECTRO_BALL],[24,t.AGILITY],[28,t.SUCKER_PUNCH],[32,t.SLASH],[39,t.DISCHARGE],[44,t.SCREECH],[50,t.GASTRO_ACID],[56,t.BUG_BUZZ]],[e.FERROSEED]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.METAL_CLAW],[10,t.PIN_MISSILE],[15,t.INGRAIN],[20,t.FLASH_CANNON],[25,t.IRON_HEAD],[30,t.SELF_DESTRUCT],[35,t.IRON_DEFENSE],[41,t.CURSE],[45,t.GYRO_BALL],[50,t.EXPLOSION]],[e.FERROTHORN]:[[Ae,t.POWER_WHIP],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_CLIMB],[15,t.INGRAIN],[20,t.FLASH_CANNON],[25,t.IRON_HEAD],[30,t.SELF_DESTRUCT],[35,t.IRON_DEFENSE],[43,t.CURSE],[49,t.GYRO_BALL],[56,t.EXPLOSION]],[e.KLINK]:[[1,t.VISE_GRIP],[1,t.THUNDER_SHOCK],[4,t.BIND],[8,t.CHARGE],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[40,t.SHIFT_GEAR],[44,t.ZAP_CANNON],[48,t.HYPER_BEAM]],[e.KLANG]:[[1,t.VISE_GRIP],[1,t.BIND],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[42,t.SHIFT_GEAR],[48,t.ZAP_CANNON],[54,t.HYPER_BEAM]],[e.KLINKLANG]:[[1,t.VISE_GRIP],[1,t.BIND],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.MAGNETIC_FLUX],[1,t.GEAR_UP],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[42,t.SHIFT_GEAR],[48,t.ZAP_CANNON],[56,t.HYPER_BEAM],[64,t.ELECTRIC_TERRAIN]],[e.TYNAMO]:[[1,t.TACKLE],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM]],[e.EELEKTRIK]:[[Ae,t.CRUNCH],[1,t.TACKLE],[1,t.HEADBUTT],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM],[1,t.ION_DELUGE],[9,t.BIND],[19,t.ACID],[29,t.DISCHARGE],[44,t.THUNDERBOLT],[49,t.ACID_SPRAY],[54,t.COIL],[59,t.WILD_CHARGE],[64,t.GASTRO_ACID],[69,t.ZAP_CANNON],[74,t.THRASH]],[e.EELEKTROSS]:[[Z,t.THUNDERBOLT],[Z,t.ACID_SPRAY],[1,t.TACKLE],[1,t.HEADBUTT],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM],[1,t.ION_DELUGE],[1,t.BIND],[1,t.THRASH],[1,t.ACID],[1,t.ZAP_CANNON],[1,t.CRUNCH],[1,t.CRUSH_CLAW],[1,t.GASTRO_ACID],[1,t.DISCHARGE],[1,t.COIL],[5,t.WILD_CHARGE]],[e.ELGYEM]:[[1,t.GROWL],[1,t.CONFUSION],[6,t.IMPRISON],[8,t.HEAL_BLOCK],[12,t.TELEPORT],[18,t.PSYBEAM],[24,t.GUARD_SPLIT],[24,t.POWER_SPLIT],[30,t.HEADBUTT],[36,t.ZEN_HEADBUTT],[43,t.RECOVER],[48,t.CALM_MIND],[54,t.WONDER_ROOM],[60,t.PSYCHIC]],[e.BEHEEYEM]:[[1,t.GROWL],[1,t.CONFUSION],[1,t.SYNCHRONOISE],[1,t.TELEPORT],[1,t.IMPRISON],[1,t.PSYCHIC_TERRAIN],[8,t.HEAL_BLOCK],[18,t.PSYBEAM],[24,t.GUARD_SPLIT],[24,t.POWER_SPLIT],[30,t.HEADBUTT],[36,t.ZEN_HEADBUTT],[45,t.RECOVER],[52,t.CALM_MIND],[60,t.WONDER_ROOM],[68,t.PSYCHIC]],[e.LITWICK]:[[1,t.SMOG],[1,t.ASTONISH],[4,t.EMBER],[8,t.MINIMIZE],[12,t.CONFUSE_RAY],[16,t.HEX],[20,t.WILL_O_WISP],[24,t.FIRE_SPIN],[28,t.NIGHT_SHADE],[32,t.CURSE],[36,t.SHADOW_BALL],[40,t.INFERNO],[44,t.IMPRISON],[48,t.PAIN_SPLIT],[52,t.OVERHEAT],[56,t.MEMENTO]],[e.LAMPENT]:[[1,t.EMBER],[1,t.MINIMIZE],[1,t.SMOG],[1,t.ASTONISH],[12,t.CONFUSE_RAY],[16,t.HEX],[20,t.WILL_O_WISP],[24,t.FIRE_SPIN],[28,t.NIGHT_SHADE],[32,t.CURSE],[36,t.SHADOW_BALL],[40,t.INFERNO],[46,t.IMPRISON],[52,t.PAIN_SPLIT],[58,t.OVERHEAT],[64,t.MEMENTO]],[e.CHANDELURE]:[[1,t.EMBER],[1,t.FIRE_SPIN],[1,t.NIGHT_SHADE],[1,t.MINIMIZE],[1,t.CONFUSE_RAY],[1,t.SMOG],[1,t.CURSE],[1,t.PAIN_SPLIT],[1,t.SHADOW_BALL],[1,t.WILL_O_WISP],[1,t.MEMENTO],[1,t.IMPRISON],[1,t.ASTONISH],[1,t.OVERHEAT],[1,t.HEX],[1,t.INFERNO]],[e.AXEW]:[[1,t.SCRATCH],[1,t.LEER],[3,t.BITE],[6,t.FALSE_SWIPE],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.DUAL_CHOP],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[39,t.SWORDS_DANCE],[42,t.OUTRAGE],[45,t.GUILLOTINE],[48,t.GIGA_IMPACT]],[e.FRAXURE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[1,t.FALSE_SWIPE],[1,t.DUAL_CHOP],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.BREAKING_SWIPE],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[41,t.SWORDS_DANCE],[46,t.OUTRAGE],[51,t.GUILLOTINE],[56,t.GIGA_IMPACT]],[e.HAXORUS]:[[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[1,t.FALSE_SWIPE],[1,t.DUAL_CHOP],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.BREAKING_SWIPE],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[41,t.SWORDS_DANCE],[46,t.OUTRAGE],[53,t.GUILLOTINE],[60,t.GIGA_IMPACT]],[e.CUBCHOO]:[[1,t.GROWL],[1,t.POWDER_SNOW],[3,t.ENDURE],[6,t.FURY_SWIPES],[9,t.ICY_WIND],[12,t.PLAY_NICE],[15,t.BRINE],[18,t.FROST_BREATH],[21,t.SLASH],[24,t.FLAIL],[27,t.CHARM],[30,t.SNOWSCAPE],[33,t.THRASH],[36,t.REST],[39,t.BLIZZARD],[42,t.SHEER_COLD]],[e.BEARTIC]:[[Ae,t.ICICLE_CRASH],[1,t.GROWL],[1,t.FURY_SWIPES],[1,t.POWDER_SNOW],[1,t.ENDURE],[1,t.CHARM],[1,t.AQUA_JET],[1,t.BIDE],[9,t.ICY_WIND],[12,t.PLAY_NICE],[15,t.BRINE],[18,t.FROST_BREATH],[21,t.SLASH],[24,t.FLAIL],[27,t.SWAGGER],[30,t.SNOWSCAPE],[33,t.THRASH],[36,t.REST],[41,t.BLIZZARD],[46,t.SHEER_COLD],[51,t.SUPERPOWER]],[e.CRYOGONAL]:[[1,t.BIND],[1,t.ICE_SHARD],[4,t.CONFUSE_RAY],[8,t.RAPID_SPIN],[12,t.ICY_WIND],[16,t.MIST],[16,t.HAZE],[20,t.ANCIENT_POWER],[24,t.AURORA_BEAM],[28,t.SLASH],[32,t.NIGHT_SLASH],[36,t.FREEZE_DRY],[40,t.LIGHT_SCREEN],[40,t.REFLECT],[44,t.RECOVER],[48,t.ICE_BEAM],[52,t.ACID_ARMOR],[56,t.SOLAR_BEAM],[60,t.SHEER_COLD]],[e.SHELMET]:[[1,t.ABSORB],[1,t.PROTECT],[4,t.ACID],[8,t.CURSE],[12,t.MEGA_DRAIN],[16,t.STRUGGLE_BUG],[20,t.YAWN],[24,t.ACID_ARMOR],[28,t.GIGA_DRAIN],[32,t.GUARD_SWAP],[36,t.BODY_SLAM],[40,t.RECOVER],[44,t.BUG_BUZZ],[48,t.FINAL_GAMBIT]],[e.ACCELGOR]:[[1,t.BODY_SLAM],[1,t.ACID],[1,t.ABSORB],[1,t.PROTECT],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.ACID_ARMOR],[1,t.CURSE],[1,t.YAWN],[1,t.GUARD_SWAP],[1,t.ACID_SPRAY],[1,t.WATER_SHURIKEN],[12,t.MEGA_DRAIN],[16,t.STRUGGLE_BUG],[20,t.SWIFT],[24,t.AGILITY],[28,t.GIGA_DRAIN],[32,t.POWER_SWAP],[36,t.U_TURN],[40,t.RECOVER],[44,t.BUG_BUZZ],[48,t.FINAL_GAMBIT],[52,t.TOXIC]],[e.STUNFISK]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.THUNDER_SHOCK],[1,t.MUD_SLAP],[1,t.MUD_SPORT],[5,t.ENDURE],[10,t.MUD_SHOT],[15,t.REVENGE],[20,t.CHARGE],[25,t.SUCKER_PUNCH],[30,t.ELECTRIC_TERRAIN],[35,t.BOUNCE],[40,t.MUDDY_WATER],[45,t.DISCHARGE],[50,t.FLAIL],[55,t.FISSURE]],[e.MIENFOO]:[[1,t.POUND],[1,t.DETECT],[5,t.FAKE_OUT],[10,t.REVERSAL],[15,t.FURY_SWIPES],[20,t.QUICK_GUARD],[25,t.FORCE_PALM],[30,t.U_TURN],[35,t.DRAIN_PUNCH],[40,t.HONE_CLAWS],[45,t.AURA_SPHERE],[51,t.BOUNCE],[55,t.CALM_MIND],[60,t.HIGH_JUMP_KICK]],[e.MIENSHAO]:[[1,t.POUND],[1,t.REVERSAL],[1,t.DETECT],[1,t.FAKE_OUT],[1,t.QUICK_GUARD],[15,t.FURY_SWIPES],[20,t.WIDE_GUARD],[25,t.FORCE_PALM],[30,t.U_TURN],[35,t.DRAIN_PUNCH],[40,t.HONE_CLAWS],[45,t.AURA_SPHERE],[53,t.BOUNCE],[59,t.CALM_MIND],[66,t.HIGH_JUMP_KICK]],[e.DRUDDIGON]:[[1,t.SCRATCH],[1,t.LEER],[5,t.BITE],[10,t.DRAGON_TAIL],[15,t.METAL_CLAW],[20,t.SCARY_FACE],[25,t.SLASH],[30,t.DRAGON_CLAW],[35,t.HONE_CLAWS],[40,t.CRUNCH],[45,t.IRON_HEAD],[50,t.OUTRAGE],[55,t.SUPERPOWER]],[e.GOLETT]:[[1,t.MUD_SLAP],[1,t.ASTONISH],[4,t.DEFENSE_CURL],[8,t.POUND],[12,t.SHADOW_PUNCH],[16,t.CURSE],[20,t.NIGHT_SHADE],[24,t.STOMPING_TANTRUM],[28,t.IRON_DEFENSE],[32,t.MEGA_PUNCH],[36,t.SHADOW_BALL],[40,t.HEAVY_SLAM],[44,t.PHANTOM_FORCE],[48,t.HAMMER_ARM],[52,t.EARTHQUAKE],[56,t.DYNAMIC_PUNCH]],[e.GOLURK]:[[Z,t.MUD_SLAP],[Z,t.FOCUS_PUNCH],[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.ASTONISH],[1,t.HIGH_HORSEPOWER],[12,t.SHADOW_PUNCH],[16,t.CURSE],[20,t.NIGHT_SHADE],[24,t.STOMPING_TANTRUM],[28,t.IRON_DEFENSE],[32,t.MEGA_PUNCH],[36,t.SHADOW_BALL],[40,t.HEAVY_SLAM],[46,t.PHANTOM_FORCE],[52,t.HAMMER_ARM],[58,t.EARTHQUAKE],[64,t.DYNAMIC_PUNCH]],[e.PAWNIARD]:[[1,t.SCRATCH],[1,t.LEER],[5,t.FURY_CUTTER],[10,t.METAL_CLAW],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[55,t.IRON_HEAD],[60,t.SWORDS_DANCE],[65,t.GUILLOTINE]],[e.BISHARP]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FURY_CUTTER],[1,t.METAL_CLAW],[1,t.METAL_BURST],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[57,t.IRON_HEAD],[64,t.SWORDS_DANCE],[71,t.GUILLOTINE]],[e.BOUFFALANT]:[[1,t.TACKLE],[1,t.LEER],[1,t.PURSUIT],[5,t.FOCUS_ENERGY],[10,t.FURY_ATTACK],[15,t.REVENGE],[20,t.SCARY_FACE],[25,t.HORN_ATTACK],[30,t.REVERSAL],[35,t.THROAT_CHOP],[40,t.HEAD_CHARGE],[45,t.SWORDS_DANCE],[50,t.MEGAHORN],[55,t.GIGA_IMPACT]],[e.RUFFLET]:[[1,t.LEER],[1,t.PECK],[6,t.HONE_CLAWS],[12,t.WING_ATTACK],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[55,t.AIR_SLASH],[60,t.DEFOG],[66,t.THRASH],[72,t.BRAVE_BIRD]],[e.BRAVIARY]:[[Ae,t.SUPERPOWER],[Z,t.BRAVE_BIRD],[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.HONE_CLAWS],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[57,t.AIR_SLASH],[64,t.DEFOG],[72,t.THRASH]],[e.VULLABY]:[[1,t.GUST],[1,t.LEER],[6,t.FLATTER],[12,t.PLUCK],[18,t.TAILWIND],[24,t.KNOCK_OFF],[30,t.IRON_DEFENSE],[36,t.WHIRLWIND],[42,t.AIR_SLASH],[48,t.DARK_PULSE],[54,t.NASTY_PLOT],[60,t.DEFOG],[66,t.ATTRACT],[72,t.BRAVE_BIRD]],[e.MANDIBUZZ]:[[Ae,t.BONE_RUSH],[1,t.GUST],[1,t.LEER],[1,t.TOXIC],[1,t.SKY_ATTACK],[1,t.FLATTER],[1,t.PLUCK],[18,t.TAILWIND],[24,t.KNOCK_OFF],[30,t.IRON_DEFENSE],[36,t.WHIRLWIND],[42,t.AIR_SLASH],[48,t.DARK_PULSE],[57,t.NASTY_PLOT],[64,t.DEFOG],[72,t.ATTRACT],[80,t.BRAVE_BIRD]],[e.HEATMOR]:[[1,t.TACKLE],[1,t.LICK],[5,t.FURY_SWIPES],[10,t.INCINERATE],[15,t.BUG_BITE],[20,t.STOCKPILE],[20,t.SPIT_UP],[20,t.SWALLOW],[25,t.SLASH],[30,t.BIND],[35,t.FIRE_LASH],[40,t.HONE_CLAWS],[45,t.AMNESIA],[50,t.FIRE_SPIN],[55,t.INFERNO],[60,t.FLARE_BLITZ]],[e.DURANT]:[[1,t.SAND_ATTACK],[1,t.FURY_CUTTER],[4,t.VISE_GRIP],[8,t.METAL_CLAW],[12,t.BEAT_UP],[16,t.BUG_BITE],[20,t.BITE],[24,t.AGILITY],[28,t.DIG],[32,t.X_SCISSOR],[36,t.CRUNCH],[40,t.METAL_SOUND],[44,t.IRON_HEAD],[48,t.ENTRAINMENT],[52,t.IRON_DEFENSE],[56,t.GUILLOTINE]],[e.DEINO]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[4,t.DRAGON_BREATH],[8,t.BITE],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[52,t.DRAGON_RUSH],[56,t.NASTY_PLOT],[60,t.OUTRAGE]],[e.ZWEILOUS]:[[1,t.TACKLE],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.DRAGON_BREATH],[1,t.DOUBLE_HIT],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[54,t.DRAGON_RUSH],[60,t.NASTY_PLOT],[66,t.OUTRAGE]],[e.HYDREIGON]:[[1,t.TACKLE],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.TRI_ATTACK],[1,t.DRAGON_BREATH],[1,t.DOUBLE_HIT],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[54,t.DRAGON_RUSH],[60,t.NASTY_PLOT],[68,t.OUTRAGE],[76,t.HYPER_BEAM]],[e.LARVESTA]:[[1,t.EMBER],[1,t.STRING_SHOT],[6,t.FLAME_CHARGE],[12,t.STRUGGLE_BUG],[18,t.FLAME_WHEEL],[24,t.BUG_BITE],[30,t.SCREECH],[36,t.LEECH_LIFE],[42,t.BUG_BUZZ],[48,t.TAKE_DOWN],[54,t.AMNESIA],[60,t.DOUBLE_EDGE],[66,t.FLARE_BLITZ]],[e.VOLCARONA]:[[Ae,t.QUIVER_DANCE],[1,t.GUST],[1,t.WHIRLWIND],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.EMBER],[1,t.STRING_SHOT],[1,t.FIRE_SPIN],[1,t.FLARE_BLITZ],[1,t.FLAME_CHARGE],[1,t.STRUGGLE_BUG],[1,t.FIERY_DANCE],[18,t.FLAME_WHEEL],[24,t.BUG_BITE],[30,t.SCREECH],[36,t.LEECH_LIFE],[42,t.BUG_BUZZ],[48,t.HEAT_WAVE],[54,t.AMNESIA],[62,t.HURRICANE],[70,t.FIRE_BLAST],[78,t.RAGE_POWDER]],[e.COBALION]:[[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.METAL_CLAW],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.METAL_BURST],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.IRON_HEAD],[70,t.CLOSE_COMBAT]],[e.TERRAKION]:[[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.SMACK_DOWN],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.ROCK_SLIDE],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.STONE_EDGE],[70,t.CLOSE_COMBAT]],[e.VIRIZION]:[[Z,t.TAKE_DOWN],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.MAGICAL_LEAF],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.GIGA_DRAIN],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.LEAF_BLADE],[70,t.CLOSE_COMBAT]],[e.TORNADUS]:[[1,t.GUST],[1,t.ASTONISH],[5,t.LEER],[10,t.SWAGGER],[15,t.BITE],[20,t.AIR_CUTTER],[25,t.AGILITY],[30,t.TAILWIND],[35,t.AIR_SLASH],[40,t.CRUNCH],[45,t.EXTRASENSORY],[50,t.UPROAR],[55,t.HAMMER_ARM],[60,t.RAIN_DANCE],[65,t.HURRICANE],[70,t.THRASH],[77,t.BLEAKWIND_STORM]],[e.THUNDURUS]:[[1,t.THUNDER_SHOCK],[1,t.ASTONISH],[5,t.LEER],[10,t.SWAGGER],[15,t.BITE],[20,t.SHOCK_WAVE],[25,t.AGILITY],[30,t.CHARGE],[31,t.HEAL_BLOCK],[35,t.VOLT_SWITCH],[40,t.CRUNCH],[45,t.DISCHARGE],[50,t.UPROAR],[55,t.HAMMER_ARM],[60,t.RAIN_DANCE],[65,t.THUNDER],[70,t.THRASH],[75,t.WILDBOLT_STORM]],[e.RESHIRAM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.FIRE_FANG],[1,t.NOBLE_ROAR],[8,t.SLASH],[16,t.CRUNCH],[24,t.EXTRASENSORY],[32,t.DRAGON_PULSE],[40,t.FLAMETHROWER],[48,t.FUSION_FLARE],[56,t.HYPER_VOICE],[64,t.FIRE_BLAST],[72,t.IMPRISON],[80,t.OUTRAGE],[88,t.BLUE_FLARE]],[e.ZEKROM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.THUNDER_FANG],[1,t.NOBLE_ROAR],[8,t.SLASH],[16,t.CRUNCH],[24,t.ZEN_HEADBUTT],[32,t.DRAGON_CLAW],[40,t.THUNDERBOLT],[48,t.FUSION_BOLT],[56,t.HYPER_VOICE],[64,t.THUNDER],[72,t.IMPRISON],[80,t.OUTRAGE],[88,t.BOLT_STRIKE]],[e.LANDORUS]:[[1,t.SAND_TOMB],[1,t.SMACK_DOWN],[5,t.LEER],[10,t.BLOCK],[15,t.BULLDOZE],[20,t.ROCK_TOMB],[30,t.IMPRISON],[35,t.ROCK_SLIDE],[40,t.EARTH_POWER],[45,t.EXTRASENSORY],[50,t.STONE_EDGE],[55,t.HAMMER_ARM],[60,t.SANDSTORM],[65,t.EARTHQUAKE],[70,t.OUTRAGE],[75,t.FISSURE],[80,t.SANDSEAR_STORM]],[e.KYUREM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.SCARY_FACE],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.GLACIATE],[88,t.SHEER_COLD]],[e.KELDEO]:[[1,t.LEER],[1,t.HELPING_HAND],[1,t.AQUA_JET],[1,t.WORK_UP],[1,t.SECRET_SWORD],[7,t.BUBBLE_BEAM],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.AQUA_TAIL],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.HYDRO_PUMP],[70,t.CLOSE_COMBAT]],[e.MELOETTA]:[[1,t.SING],[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.ROUND],[21,t.TEETER_DANCE],[26,t.ACROBATICS],[31,t.PSYBEAM],[36,t.ECHOED_VOICE],[43,t.U_TURN],[50,t.RELIC_SONG],[57,t.PSYCHIC],[64,t.HYPER_VOICE],[71,t.ROLE_PLAY],[78,t.CLOSE_COMBAT],[85,t.PERISH_SONG]],[e.GENESECT]:[[1,t.QUICK_ATTACK],[1,t.FURY_CUTTER],[7,t.SCREECH],[14,t.METAL_CLAW],[21,t.FELL_STINGER],[28,t.FLAME_CHARGE],[35,t.METAL_SOUND],[42,t.X_SCISSOR],[49,t.MAGNET_RISE],[56,t.BUG_BUZZ],[63,t.SIMPLE_BEAM],[70,t.ZAP_CANNON],[77,t.LOCK_ON],[84,t.TECHNO_BLAST],[91,t.SELF_DESTRUCT]],[e.CHESPIN]:[[1,t.TACKLE],[1,t.GROWL],[1,t.VINE_WHIP],[8,t.ROLLOUT],[11,t.BITE],[15,t.LEECH_SEED],[18,t.PIN_MISSILE],[27,t.TAKE_DOWN],[32,t.SEED_BOMB],[35,t.MUD_SHOT],[42,t.BODY_SLAM],[45,t.PAIN_SPLIT],[48,t.WOOD_HAMMER]],[e.QUILLADIN]:[[Ae,t.NEEDLE_ARM],[1,t.TACKLE],[1,t.GROWL],[1,t.VINE_WHIP],[8,t.ROLLOUT],[11,t.BITE],[15,t.LEECH_SEED],[20,t.SEED_BOMB],[24,t.PIN_MISSILE],[29,t.TAKE_DOWN],[34,t.MUD_SHOT],[38,t.BULK_UP],[43,t.BODY_SLAM],[47,t.PAIN_SPLIT],[53,t.WOOD_HAMMER]],[e.CHESNAUGHT]:[[Ae,t.SPIKY_SHIELD],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[1,t.ROLLOUT],[1,t.HAMMER_ARM],[1,t.FEINT],[1,t.NEEDLE_ARM],[11,t.BITE],[15,t.LEECH_SEED],[19,t.PIN_MISSILE],[29,t.TAKE_DOWN],[35,t.SEED_BOMB],[41,t.MUD_SHOT],[48,t.BULK_UP],[54,t.BODY_SLAM],[60,t.PAIN_SPLIT],[66,t.WOOD_HAMMER],[78,t.GIGA_IMPACT]],[e.FENNEKIN]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[5,t.EMBER],[11,t.HOWL],[14,t.FLAME_CHARGE],[17,t.PSYBEAM],[20,t.FIRE_SPIN],[25,t.LIGHT_SCREEN],[31,t.PSYSHOCK],[35,t.FLAMETHROWER],[38,t.WILL_O_WISP],[41,t.PSYCHIC],[43,t.SUNNY_DAY],[48,t.FIRE_BLAST]],[e.BRAIXEN]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.EMBER],[11,t.HOWL],[14,t.FLAME_CHARGE],[18,t.PSYBEAM],[22,t.FIRE_SPIN],[28,t.LIGHT_SCREEN],[36,t.PSYSHOCK],[41,t.FLAMETHROWER],[45,t.WILL_O_WISP],[49,t.PSYCHIC],[52,t.SUNNY_DAY],[56,t.MAGIC_ROOM],[59,t.FIRE_BLAST]],[e.DELPHOX]:[[Ae,t.MYSTICAL_FIRE],[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.SHADOW_BALL],[1,t.FUTURE_SIGHT],[1,t.ROLE_PLAY],[1,t.HOWL],[1,t.SWITCHEROO],[14,t.FLAME_CHARGE],[18,t.PSYBEAM],[22,t.FIRE_SPIN],[28,t.LIGHT_SCREEN],[38,t.PSYSHOCK],[45,t.FLAMETHROWER],[51,t.WILL_O_WISP],[57,t.PSYCHIC],[62,t.SUNNY_DAY],[68,t.MAGIC_ROOM],[74,t.FIRE_BLAST]],[e.FROAKIE]:[[1,t.POUND],[1,t.GROWL],[5,t.WATER_GUN],[8,t.QUICK_ATTACK],[10,t.LICK],[14,t.WATER_PULSE],[18,t.SMOKESCREEN],[21,t.ROUND],[25,t.FLING],[29,t.SMACK_DOWN],[35,t.SUBSTITUTE],[39,t.BOUNCE],[43,t.DOUBLE_TEAM],[48,t.HYDRO_PUMP]],[e.FROGADIER]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[8,t.QUICK_ATTACK],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.ROUND],[28,t.FLING],[33,t.SMACK_DOWN],[40,t.SUBSTITUTE],[45,t.BOUNCE],[50,t.DOUBLE_TEAM],[56,t.HYDRO_PUMP]],[e.GRENINJA]:[[Ae,t.WATER_SHURIKEN],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.ROUND],[1,t.FLING],[1,t.SMACK_DOWN],[1,t.BOUNCE],[1,t.HAZE],[1,t.MAT_BLOCK],[1,t.ROLE_PLAY],[1,t.NIGHT_SLASH],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.SHADOW_SNEAK],[28,t.SPIKES],[33,t.AERIAL_ACE],[42,t.SUBSTITUTE],[49,t.EXTRASENSORY],[56,t.DOUBLE_TEAM],[68,t.HYDRO_PUMP]],[e.BUNNELBY]:[[1,t.LEER],[1,t.MUD_SLAP],[3,t.TACKLE],[6,t.LASER_FOCUS],[9,t.QUICK_ATTACK],[12,t.MUD_SHOT],[15,t.FLAIL],[18,t.DOUBLE_KICK],[21,t.BULLDOZE],[24,t.DIG],[27,t.BOUNCE],[30,t.TAKE_DOWN],[33,t.SWORDS_DANCE],[36,t.EARTHQUAKE],[39,t.SUPER_FANG]],[e.DIGGERSBY]:[[1,t.TACKLE],[1,t.LEER],[1,t.MUD_SLAP],[1,t.LASER_FOCUS],[1,t.ROTOTILLER],[9,t.QUICK_ATTACK],[12,t.MUD_SHOT],[15,t.FLAIL],[18,t.DOUBLE_KICK],[23,t.BULLDOZE],[28,t.DIG],[33,t.BOUNCE],[38,t.TAKE_DOWN],[43,t.SWORDS_DANCE],[48,t.EARTHQUAKE],[53,t.SUPER_FANG],[58,t.HAMMER_ARM]],[e.FLETCHLING]:[[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[10,t.EMBER],[15,t.FLAIL],[20,t.ACROBATICS],[25,t.AGILITY],[30,t.AERIAL_ACE],[35,t.TAILWIND],[40,t.STEEL_WING],[45,t.ROOST],[50,t.FLY]],[e.FLETCHINDER]:[[Ae,t.FLAME_CHARGE],[1,t.GROWL],[1,t.EMBER],[1,t.PECK],[1,t.QUICK_ATTACK],[1,t.FEINT],[15,t.FLAIL],[22,t.ACROBATICS],[29,t.AGILITY],[36,t.AERIAL_ACE],[43,t.TAILWIND],[50,t.STEEL_WING],[57,t.ROOST],[64,t.FLY]],[e.TALONFLAME]:[[1,t.GROWL],[1,t.EMBER],[1,t.PECK],[1,t.QUICK_ATTACK],[1,t.FEINT],[1,t.FLARE_BLITZ],[1,t.FLAME_CHARGE],[15,t.FLAIL],[22,t.ACROBATICS],[29,t.AGILITY],[38,t.AERIAL_ACE],[47,t.TAILWIND],[56,t.STEEL_WING],[65,t.ROOST],[74,t.FLY],[83,t.BRAVE_BIRD]],[e.SCATTERBUG]:[[1,t.TACKLE],[1,t.STRING_SHOT],[6,t.STUN_SPORE],[15,t.BUG_BITE]],[e.SPEWPA]:[[Ae,t.PROTECT],[Z,t.TACKLE],[Z,t.STRING_SHOT],[Z,t.STUN_SPORE],[Z,t.BUG_BITE],[1,t.HARDEN]],[e.VIVILLON]:[[Ae,t.GUST],[1,t.PROTECT],[1,t.TACKLE],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.STRUGGLE_BUG],[1,t.POWDER],[12,t.LIGHT_SCREEN],[17,t.PSYBEAM],[21,t.SUPERSONIC],[25,t.DRAINING_KISS],[31,t.SAFEGUARD],[35,t.BUG_BUZZ],[45,t.QUIVER_DANCE],[50,t.HURRICANE]],[e.LITLEO]:[[1,t.TACKLE],[1,t.LEER],[5,t.EMBER],[8,t.WORK_UP],[11,t.HEADBUTT],[15,t.NOBLE_ROAR],[20,t.TAKE_DOWN],[23,t.FIRE_FANG],[28,t.ENDEAVOR],[33,t.ECHOED_VOICE],[36,t.FLAMETHROWER],[39,t.CRUNCH],[43,t.HYPER_VOICE],[46,t.INCINERATE],[50,t.OVERHEAT]],[e.PYROAR]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[1,t.HYPER_BEAM],[1,t.WORK_UP],[11,t.HEADBUTT],[15,t.NOBLE_ROAR],[20,t.TAKE_DOWN],[23,t.FIRE_FANG],[28,t.ENDEAVOR],[33,t.ECHOED_VOICE],[38,t.FLAMETHROWER],[42,t.CRUNCH],[48,t.HYPER_VOICE],[51,t.INCINERATE],[57,t.OVERHEAT]],[e.FLABEBE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[6,t.FAIRY_WIND],[10,t.SAFEGUARD],[15,t.RAZOR_LEAF],[20,t.WISH],[22,t.MAGICAL_LEAF],[24,t.GRASSY_TERRAIN],[28,t.PETAL_BLIZZARD],[33,t.SYNTHESIS],[37,t.MISTY_TERRAIN],[41,t.MOONBLAST],[45,t.PETAL_DANCE],[48,t.SOLAR_BEAM]],[e.FLOETTE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[10,t.SAFEGUARD],[15,t.RAZOR_LEAF],[20,t.WISH],[25,t.MAGICAL_LEAF],[27,t.GRASSY_TERRAIN],[33,t.PETAL_BLIZZARD],[38,t.SYNTHESIS],[43,t.MISTY_TERRAIN],[46,t.MOONBLAST],[51,t.PETAL_DANCE],[58,t.SOLAR_BEAM]],[e.FLORGES]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[1,t.RAZOR_LEAF],[1,t.SOLAR_BEAM],[1,t.PETAL_DANCE],[1,t.SAFEGUARD],[1,t.SYNTHESIS],[1,t.WISH],[1,t.LUCKY_CHANT],[1,t.MAGICAL_LEAF],[1,t.GRASS_KNOT],[1,t.PETAL_BLIZZARD],[1,t.DISARMING_VOICE],[1,t.GRASSY_TERRAIN],[1,t.MISTY_TERRAIN],[5,t.MOONBLAST]],[e.SKIDDO]:[[1,t.TACKLE],[1,t.GROWTH],[7,t.VINE_WHIP],[9,t.TAIL_WHIP],[12,t.LEECH_SEED],[13,t.RAZOR_LEAF],[16,t.WORRY_SEED],[20,t.SYNTHESIS],[22,t.TAKE_DOWN],[26,t.BULLDOZE],[30,t.SEED_BOMB],[34,t.BULK_UP],[38,t.DOUBLE_EDGE],[42,t.HORN_LEECH],[45,t.LEAF_BLADE]],[e.GOGOAT]:[[Ae,t.AERIAL_ACE],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWTH],[1,t.EARTHQUAKE],[12,t.LEECH_SEED],[13,t.RAZOR_LEAF],[16,t.WORRY_SEED],[20,t.SYNTHESIS],[22,t.TAKE_DOWN],[26,t.BULLDOZE],[30,t.SEED_BOMB],[34,t.BULK_UP],[40,t.DOUBLE_EDGE],[47,t.HORN_LEECH],[55,t.LEAF_BLADE],[58,t.MILK_DRINK]],[e.PANCHAM]:[[1,t.TACKLE],[1,t.LEER],[4,t.ARM_THRUST],[8,t.TAUNT],[12,t.CIRCLE_THROW],[16,t.LOW_SWEEP],[20,t.WORK_UP],[24,t.SLASH],[28,t.VITAL_THROW],[33,t.CRUNCH],[36,t.BODY_SLAM],[40,t.PARTING_SHOT],[44,t.ENTRAINMENT]],[e.PANGORO]:[[Ae,t.NIGHT_SLASH],[1,t.TACKLE],[1,t.LEER],[1,t.TAUNT],[1,t.ARM_THRUST],[1,t.BULLET_PUNCH],[12,t.CIRCLE_THROW],[16,t.LOW_SWEEP],[20,t.WORK_UP],[24,t.SLASH],[28,t.VITAL_THROW],[35,t.CRUNCH],[40,t.BODY_SLAM],[46,t.PARTING_SHOT],[52,t.ENTRAINMENT],[58,t.HAMMER_ARM]],[e.FURFROU]:[[1,t.TACKLE],[1,t.GROWL],[5,t.SAND_ATTACK],[9,t.BABY_DOLL_EYES],[12,t.HEADBUTT],[15,t.TAIL_WHIP],[22,t.BITE],[27,t.ODOR_SLEUTH],[33,t.RETALIATE],[35,t.TAKE_DOWN],[38,t.CHARM],[42,t.SUCKER_PUNCH],[48,t.COTTON_GUARD]],[e.ESPURR]:[[1,t.SCRATCH],[1,t.LEER],[3,t.FAKE_OUT],[6,t.DISARMING_VOICE],[9,t.CONFUSION],[18,t.COVET],[21,t.PSYBEAM],[30,t.LIGHT_SCREEN],[30,t.REFLECT],[33,t.PSYSHOCK]],[e.MEOWSTIC]:[[1,t.SCRATCH],[1,t.LEER],[1,t.MEAN_LOOK],[1,t.FAKE_OUT],[1,t.DISARMING_VOICE],[9,t.CONFUSION],[12,t.HELPING_HAND],[15,t.CHARM],[18,t.COVET],[21,t.PSYBEAM],[24,t.SUCKER_PUNCH],[29,t.ROLE_PLAY],[34,t.LIGHT_SCREEN],[34,t.REFLECT],[39,t.PSYSHOCK],[44,t.IMPRISON],[49,t.QUICK_GUARD],[54,t.PSYCHIC],[59,t.MISTY_TERRAIN]],[e.HONEDGE]:[[1,t.TACKLE],[1,t.FURY_CUTTER],[4,t.SHADOW_SNEAK],[8,t.AUTOTOMIZE],[12,t.AERIAL_ACE],[16,t.METAL_SOUND],[20,t.SLASH],[24,t.NIGHT_SLASH],[28,t.RETALIATE],[32,t.IRON_DEFENSE],[36,t.IRON_HEAD],[40,t.POWER_TRICK],[44,t.SWORDS_DANCE],[48,t.SACRED_SWORD]],[e.DOUBLADE]:[[1,t.TACKLE],[1,t.FURY_CUTTER],[1,t.SHADOW_SNEAK],[1,t.AUTOTOMIZE],[12,t.AERIAL_ACE],[16,t.METAL_SOUND],[20,t.SLASH],[24,t.NIGHT_SLASH],[28,t.RETALIATE],[32,t.IRON_DEFENSE],[38,t.IRON_HEAD],[44,t.POWER_TRICK],[50,t.SWORDS_DANCE],[56,t.SACRED_SWORD]],[e.AEGISLASH]:[[Ae,t.KINGS_SHIELD],[1,t.SWORDS_DANCE],[1,t.PURSUIT],[1,t.TACKLE],[1,t.SLASH],[1,t.FURY_CUTTER],[1,t.METAL_SOUND],[1,t.AERIAL_ACE],[1,t.IRON_DEFENSE],[1,t.POWER_TRICK],[1,t.NIGHT_SLASH],[1,t.SHADOW_SNEAK],[1,t.IRON_HEAD],[1,t.HEAD_SMASH],[1,t.AUTOTOMIZE],[1,t.RETALIATE],[1,t.SACRED_SWORD]],[e.SPRITZEE]:[[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[3,t.SWEET_KISS],[6,t.ECHOED_VOICE],[9,t.DRAINING_KISS],[12,t.AROMATHERAPY],[18,t.ATTRACT],[21,t.FLAIL],[24,t.MISTY_TERRAIN],[27,t.PSYCHIC],[30,t.CHARM],[33,t.CALM_MIND],[36,t.MOONBLAST],[39,t.SKILL_SWAP]],[e.AROMATISSE]:[[1,t.SWEET_KISS],[1,t.SWEET_SCENT],[1,t.ECHOED_VOICE],[1,t.HEAL_PULSE],[1,t.FAIRY_WIND],[1,t.AROMATIC_MIST],[9,t.DISARMING_VOICE],[12,t.AROMATHERAPY],[15,t.DRAINING_KISS],[18,t.ATTRACT],[21,t.FLAIL],[24,t.MISTY_TERRAIN],[27,t.PSYCHIC],[30,t.CHARM],[33,t.CALM_MIND],[36,t.MOONBLAST],[39,t.SKILL_SWAP],[42,t.PSYCH_UP]],[e.SWIRLIX]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[3,t.PLAY_NICE],[6,t.FAIRY_WIND],[9,t.AROMATHERAPY],[12,t.DRAINING_KISS],[15,t.FAKE_TEARS],[18,t.ROUND],[21,t.STRING_SHOT],[24,t.COTTON_SPORE],[27,t.ENERGY_BALL],[30,t.WISH],[33,t.PLAY_ROUGH],[36,t.COTTON_GUARD],[39,t.ENDEAVOR]],[e.SLURPUFF]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[1,t.PLAY_NICE],[9,t.AROMATHERAPY],[12,t.DRAINING_KISS],[15,t.FAKE_TEARS],[18,t.ROUND],[21,t.STRING_SHOT],[24,t.COTTON_SPORE],[27,t.ENERGY_BALL],[30,t.WISH],[33,t.PLAY_ROUGH],[36,t.COTTON_GUARD],[39,t.ENDEAVOR],[42,t.STICKY_WEB]],[e.INKAY]:[[1,t.TACKLE],[1,t.PECK],[1,t.CONSTRICT],[3,t.HYPNOSIS],[6,t.WRAP],[9,t.PAYBACK],[12,t.PLUCK],[15,t.PSYBEAM],[18,t.SWAGGER],[21,t.SLASH],[24,t.NIGHT_SLASH],[27,t.PSYCHO_CUT],[31,t.SWITCHEROO],[33,t.FOUL_PLAY],[36,t.TOPSY_TURVY],[39,t.SUPERPOWER]],[e.MALAMAR]:[[1,t.TACKLE],[1,t.WRAP],[1,t.PECK],[1,t.CONSTRICT],[1,t.HYPNOSIS],[1,t.REVERSAL],[9,t.PAYBACK],[12,t.PLUCK],[15,t.PSYBEAM],[18,t.SWAGGER],[21,t.SLASH],[24,t.NIGHT_SLASH],[27,t.PSYCHO_CUT],[33,t.SWITCHEROO],[37,t.FOUL_PLAY],[42,t.TOPSY_TURVY],[47,t.SUPERPOWER]],[e.BINACLE]:[[1,t.SCRATCH],[1,t.MUD_SLAP],[4,t.WITHDRAW],[8,t.WATER_GUN],[12,t.FURY_CUTTER],[16,t.FURY_SWIPES],[20,t.ANCIENT_POWER],[24,t.ROCK_POLISH],[28,t.SLASH],[32,t.HONE_CLAWS],[36,t.RAZOR_SHELL],[40,t.SHELL_SMASH],[44,t.CROSS_CHOP]],[e.BARBARACLE]:[[1,t.SCRATCH],[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.SKULL_BASH],[1,t.MUD_SLAP],[12,t.FURY_CUTTER],[16,t.FURY_SWIPES],[20,t.ANCIENT_POWER],[24,t.ROCK_POLISH],[28,t.SLASH],[32,t.HONE_CLAWS],[36,t.RAZOR_SHELL],[42,t.SHELL_SMASH],[48,t.CROSS_CHOP],[54,t.STONE_EDGE]],[e.SKRELP]:[[1,t.TACKLE],[1,t.SMOKESCREEN],[5,t.ACID],[10,t.WATER_GUN],[15,t.TAIL_WHIP],[20,t.DOUBLE_TEAM],[25,t.POISON_TAIL],[30,t.WATER_PULSE],[35,t.TOXIC],[40,t.DRAGON_PULSE],[45,t.AQUA_TAIL],[50,t.SLUDGE_BOMB],[55,t.HYDRO_PUMP]],[e.DRAGALGE]:[[1,t.TACKLE],[1,t.ACID],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.FEINT_ATTACK],[15,t.TAIL_WHIP],[20,t.DOUBLE_TEAM],[25,t.POISON_TAIL],[30,t.WATER_PULSE],[35,t.TOXIC],[40,t.DRAGON_PULSE],[45,t.AQUA_TAIL],[52,t.SLUDGE_BOMB],[59,t.HYDRO_PUMP],[66,t.OUTRAGE]],[e.CLAUNCHER]:[[1,t.WATER_GUN],[1,t.SPLASH],[10,t.FLAIL],[15,t.AQUA_JET],[20,t.SMACK_DOWN],[25,t.HONE_CLAWS],[30,t.WATER_PULSE],[35,t.SWORDS_DANCE],[40,t.AURA_SPHERE],[45,t.BOUNCE],[50,t.MUDDY_WATER],[55,t.CRABHAMMER]],[e.CLAWITZER]:[[1,t.WATER_GUN],[1,t.SPLASH],[1,t.FLAIL],[1,t.DARK_PULSE],[1,t.DRAGON_PULSE],[1,t.HEAL_PULSE],[15,t.AQUA_JET],[20,t.SMACK_DOWN],[25,t.HONE_CLAWS],[30,t.WATER_PULSE],[35,t.SWORDS_DANCE],[42,t.AURA_SPHERE],[49,t.BOUNCE],[56,t.MUDDY_WATER],[63,t.CRABHAMMER]],[e.HELIOPTILE]:[[1,t.TAIL_WHIP],[1,t.MUD_SLAP],[4,t.POUND],[8,t.THUNDER_SHOCK],[12,t.QUICK_ATTACK],[16,t.CHARGE],[20,t.BULLDOZE],[24,t.VOLT_SWITCH],[28,t.PARABOLIC_CHARGE],[32,t.THUNDER_WAVE],[36,t.THUNDERBOLT],[40,t.ELECTRIFY],[44,t.THUNDER]],[e.HELIOLISK]:[[1,t.POUND],[1,t.TAIL_WHIP],[1,t.RAZOR_WIND],[1,t.THUNDER_SHOCK],[1,t.THUNDERBOLT],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.QUICK_ATTACK],[1,t.MUD_SLAP],[1,t.CHARGE],[1,t.DISCHARGE],[1,t.VOLT_SWITCH],[1,t.BULLDOZE],[1,t.PARABOLIC_CHARGE],[1,t.ELECTRIFY],[1,t.EERIE_IMPULSE]],[e.TYRUNT]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.ROAR],[8,t.ANCIENT_POWER],[12,t.CHARM],[16,t.BITE],[20,t.DRAGON_TAIL],[24,t.STOMP],[28,t.ROCK_SLIDE],[32,t.CRUNCH],[36,t.DRAGON_CLAW],[40,t.THRASH],[44,t.EARTHQUAKE],[48,t.HORN_DRILL]],[e.TYRANTRUM]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.ROAR],[1,t.ANCIENT_POWER],[12,t.CHARM],[16,t.BITE],[20,t.DRAGON_TAIL],[24,t.STOMP],[28,t.ROCK_SLIDE],[32,t.CRUNCH],[36,t.DRAGON_CLAW],[42,t.THRASH],[48,t.EARTHQUAKE],[54,t.HORN_DRILL],[60,t.GIGA_IMPACT],[66,t.HEAD_SMASH]],[e.AMAURA]:[[1,t.GROWL],[1,t.POWDER_SNOW],[4,t.ENCORE],[8,t.ANCIENT_POWER],[12,t.ICY_WIND],[16,t.ROUND],[20,t.MIST],[24,t.AURORA_BEAM],[28,t.THUNDER_WAVE],[32,t.NATURE_POWER],[36,t.FREEZE_DRY],[40,t.ICE_BEAM],[44,t.LIGHT_SCREEN],[48,t.HAIL],[52,t.BLIZZARD],[56,t.HYPER_BEAM]],[e.AURORUS]:[[1,t.GROWL],[1,t.POWDER_SNOW],[1,t.ENCORE],[1,t.ANCIENT_POWER],[12,t.ICY_WIND],[16,t.ROUND],[20,t.MIST],[24,t.AURORA_BEAM],[28,t.THUNDER_WAVE],[32,t.NATURE_POWER],[36,t.FREEZE_DRY],[42,t.ICE_BEAM],[48,t.LIGHT_SCREEN],[54,t.HAIL],[60,t.BLIZZARD],[66,t.HYPER_BEAM]],[e.SYLVEON]:[[Ae,t.SPARKLY_SWIRL],[Z,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SWIFT],[30,t.LIGHT_SCREEN],[35,t.DRAINING_KISS],[40,t.MISTY_TERRAIN],[45,t.SKILL_SWAP],[50,t.PSYCH_UP],[55,t.MOONBLAST],[60,t.LAST_RESORT]],[e.HAWLUCHA]:[[1,t.TACKLE],[1,t.HONE_CLAWS],[4,t.WING_ATTACK],[8,t.DETECT],[12,t.AERIAL_ACE],[16,t.ENCORE],[20,t.FEATHER_DANCE],[24,t.BRICK_BREAK],[28,t.BOUNCE],[32,t.TAUNT],[36,t.ROOST],[40,t.SWORDS_DANCE],[44,t.FLYING_PRESS],[48,t.HIGH_JUMP_KICK],[52,t.ENDEAVOR],[56,t.SKY_ATTACK]],[e.DEDENNE]:[[1,t.TAIL_WHIP],[1,t.NUZZLE],[5,t.TACKLE],[10,t.CHARGE],[15,t.THUNDER_SHOCK],[20,t.CHARM],[25,t.PARABOLIC_CHARGE],[30,t.VOLT_SWITCH],[35,t.REST],[35,t.SNORE],[40,t.DISCHARGE],[45,t.PLAY_ROUGH],[50,t.SUPER_FANG],[55,t.ENTRAINMENT],[60,t.THUNDER]],[e.CARBINK]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.GUARD_SPLIT],[10,t.SMACK_DOWN],[15,t.FLAIL],[20,t.ANCIENT_POWER],[25,t.ROCK_POLISH],[30,t.LIGHT_SCREEN],[35,t.ROCK_SLIDE],[40,t.SKILL_SWAP],[45,t.POWER_GEM],[50,t.STEALTH_ROCK],[55,t.MOONBLAST],[60,t.STONE_EDGE]],[e.GOOMY]:[[1,t.TACKLE],[1,t.ABSORB],[5,t.WATER_GUN],[10,t.DRAGON_BREATH],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[41,t.CURSE],[45,t.BODY_SLAM],[50,t.MUDDY_WATER]],[e.SLIGGOO]:[[Ae,t.ACID_SPRAY],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[56,t.MUDDY_WATER]],[e.GOODRA]:[[Ae,t.AQUA_TAIL],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.POISON_TAIL],[1,t.FEINT],[1,t.ACID_SPRAY],[1,t.TEARFUL_LOOK],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[58,t.MUDDY_WATER],[67,t.POWER_WHIP]],[e.KLEFKI]:[[1,t.ASTONISH],[4,t.TACKLE],[8,t.FAIRY_WIND],[12,t.TORMENT],[16,t.FAIRY_LOCK],[20,t.METAL_SOUND],[24,t.DRAINING_KISS],[28,t.RECYCLE],[32,t.IMPRISON],[36,t.FLASH_CANNON],[40,t.PLAY_ROUGH],[44,t.MAGIC_ROOM],[48,t.FOUL_PLAY],[50,t.HEAL_BLOCK],[52,t.LAST_RESORT]],[e.PHANTUMP]:[[1,t.TACKLE],[1,t.ASTONISH],[4,t.BRANCH_POKE],[8,t.LEECH_SEED],[12,t.CONFUSE_RAY],[16,t.WILL_O_WISP],[20,t.HEX],[24,t.GROWTH],[28,t.HORN_LEECH],[32,t.CURSE],[36,t.PHANTOM_FORCE],[40,t.INGRAIN],[44,t.WOOD_HAMMER],[48,t.DESTINY_BOND],[52,t.FORESTS_CURSE]],[e.TREVENANT]:[[Ae,t.SHADOW_CLAW],[1,t.TACKLE],[1,t.LEECH_SEED],[1,t.ASTONISH],[1,t.BRANCH_POKE],[12,t.CONFUSE_RAY],[16,t.WILL_O_WISP],[20,t.HEX],[24,t.GROWTH],[28,t.HORN_LEECH],[32,t.CURSE],[36,t.PHANTOM_FORCE],[40,t.INGRAIN],[44,t.WOOD_HAMMER],[48,t.DESTINY_BOND],[52,t.FORESTS_CURSE]],[e.PUMPKABOO]:[[1,t.ASTONISH],[1,t.TRICK_OR_TREAT],[1,t.LEAFAGE],[4,t.SHADOW_SNEAK],[8,t.CONFUSE_RAY],[12,t.RAZOR_LEAF],[16,t.LEECH_SEED],[20,t.BULLET_SEED],[24,t.SCARY_FACE],[28,t.WORRY_SEED],[32,t.SEED_BOMB],[36,t.SHADOW_BALL],[40,t.TRICK],[44,t.PAIN_SPLIT]],[e.GOURGEIST]:[[1,t.CONFUSE_RAY],[1,t.EXPLOSION],[1,t.ASTONISH],[1,t.LEAFAGE],[1,t.SHADOW_SNEAK],[1,t.TRICK_OR_TREAT],[1,t.MOONBLAST],[12,t.RAZOR_LEAF],[16,t.LEECH_SEED],[20,t.BULLET_SEED],[24,t.SCARY_FACE],[28,t.WORRY_SEED],[32,t.SEED_BOMB],[36,t.SHADOW_BALL],[40,t.TRICK],[44,t.PAIN_SPLIT],[48,t.PHANTOM_FORCE]],[e.BERGMITE]:[[1,t.HARDEN],[1,t.RAPID_SPIN],[3,t.TACKLE],[6,t.POWDER_SNOW],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[39,t.BLIZZARD],[42,t.DOUBLE_EDGE]],[e.AVALUGG]:[[Ae,t.BODY_SLAM],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWDER_SNOW],[1,t.RAPID_SPIN],[1,t.WIDE_GUARD],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[41,t.BLIZZARD],[46,t.DOUBLE_EDGE],[51,t.ICICLE_CRASH]],[e.NOIBAT]:[[1,t.TACKLE],[1,t.ABSORB],[4,t.GUST],[8,t.SUPERSONIC],[12,t.DOUBLE_TEAM],[16,t.WING_ATTACK],[20,t.BITE],[24,t.AIR_CUTTER],[28,t.WHIRLWIND],[32,t.SUPER_FANG],[36,t.AIR_SLASH],[40,t.SCREECH],[44,t.ROOST],[49,t.TAILWIND],[52,t.HURRICANE]],[e.NOIVERN]:[[Ae,t.DRAGON_PULSE],[1,t.GUST],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.MOONLIGHT],[12,t.DOUBLE_TEAM],[16,t.WING_ATTACK],[20,t.BITE],[24,t.AIR_CUTTER],[28,t.WHIRLWIND],[32,t.SUPER_FANG],[36,t.AIR_SLASH],[40,t.SCREECH],[44,t.ROOST],[51,t.TAILWIND],[56,t.HURRICANE],[62,t.BOOMBURST]],[e.XERNEAS]:[[1,t.TACKLE],[1,t.GRAVITY],[5,t.LIGHT_SCREEN],[10,t.AURORA_BEAM],[15,t.NATURE_POWER],[20,t.NIGHT_SLASH],[25,t.AROMATHERAPY],[30,t.PSYCH_UP],[35,t.HORN_LEECH],[40,t.MISTY_TERRAIN],[45,t.INGRAIN],[50,t.TAKE_DOWN],[55,t.GEOMANCY],[60,t.MOONBLAST],[65,t.HEAL_PULSE],[70,t.MEGAHORN],[75,t.CLOSE_COMBAT],[80,t.OUTRAGE],[85,t.GIGA_IMPACT]],[e.YVELTAL]:[[1,t.GUST],[1,t.DOUBLE_TEAM],[1,t.RAZOR_WIND],[5,t.TAUNT],[10,t.SNARL],[15,t.DISABLE],[20,t.SUCKER_PUNCH],[25,t.TAILWIND],[30,t.ROOST],[35,t.AIR_SLASH],[40,t.DARK_PULSE],[45,t.PSYCHIC],[50,t.OBLIVION_WING],[55,t.PHANTOM_FORCE],[60,t.FOUL_PLAY],[65,t.DRAGON_RUSH],[70,t.HURRICANE],[75,t.FOCUS_BLAST],[80,t.SKY_ATTACK],[85,t.HYPER_BEAM]],[e.ZYGARDE]:[[1,t.BIND],[1,t.BITE],[1,t.DRAGON_BREATH],[1,t.BULLDOZE],[1,t.THOUSAND_ARROWS],[1,t.THOUSAND_WAVES],[1,t.CORE_ENFORCER],[8,t.HAZE],[16,t.DIG],[24,t.SAFEGUARD],[32,t.CRUNCH],[40,t.DRAGON_PULSE],[48,t.LANDS_WRATH],[56,t.GLARE],[64,t.SANDSTORM],[72,t.COIL],[80,t.EARTHQUAKE],[88,t.OUTRAGE]],[e.DIANCIE]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.DIAMOND_STORM],[7,t.GUARD_SPLIT],[14,t.SMACK_DOWN],[21,t.FLAIL],[28,t.ANCIENT_POWER],[35,t.ROCK_POLISH],[42,t.LIGHT_SCREEN],[49,t.ROCK_SLIDE],[56,t.SKILL_SWAP],[63,t.POWER_GEM],[70,t.STEALTH_ROCK],[77,t.MOONBLAST],[84,t.STONE_EDGE]],[e.HOOPA]:[[1,t.CONFUSION],[1,t.DESTINY_BOND],[1,t.ALLY_SWITCH],[6,t.ASTONISH],[10,t.TRICK],[15,t.LIGHT_SCREEN],[19,t.PSYBEAM],[25,t.SKILL_SWAP],[29,t.GUARD_SPLIT],[29,t.POWER_SPLIT],[35,t.PHANTOM_FORCE],[46,t.ZEN_HEADBUTT],[50,t.TRICK_ROOM],[50,t.WONDER_ROOM],[55,t.SHADOW_BALL],[68,t.NASTY_PLOT],[75,t.PSYCHIC],[85,t.HYPERSPACE_HOLE]],[e.VOLCANION]:[[1,t.WATER_GUN],[1,t.FIRE_SPIN],[1,t.STEAM_ERUPTION],[6,t.LEER],[12,t.WEATHER_BALL],[18,t.FLAME_CHARGE],[24,t.WATER_PULSE],[30,t.SCARY_FACE],[36,t.INCINERATE],[42,t.STOMP],[48,t.SCALD],[54,t.TAKE_DOWN],[60,t.MIST],[60,t.HAZE],[66,t.HYDRO_PUMP],[78,t.FLARE_BLITZ],[84,t.OVERHEAT],[90,t.EXPLOSION]],[e.ROWLET]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LEAFAGE],[6,t.ASTONISH],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[18,t.SYNTHESIS],[21,t.PLUCK],[24,t.NASTY_PLOT],[27,t.SUCKER_PUNCH],[30,t.LEAF_BLADE],[33,t.FEATHER_DANCE],[36,t.BRAVE_BIRD]],[e.DARTRIX]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.NASTY_PLOT],[35,t.SUCKER_PUNCH],[40,t.LEAF_BLADE],[45,t.FEATHER_DANCE],[50,t.BRAVE_BIRD]],[e.DECIDUEYE]:[[Ae,t.SPIRIT_SHACKLE],[1,t.TACKLE],[1,t.GROWL],[1,t.SPITE],[1,t.ASTONISH],[1,t.U_TURN],[1,t.LEAF_STORM],[1,t.PHANTOM_FORCE],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.NASTY_PLOT],[37,t.SUCKER_PUNCH],[44,t.LEAF_BLADE],[51,t.FEATHER_DANCE],[58,t.BRAVE_BIRD]],[e.LITTEN]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.EMBER],[6,t.LICK],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[18,t.DOUBLE_KICK],[21,t.FIRE_FANG],[24,t.SCARY_FACE],[27,t.SWAGGER],[30,t.FLAMETHROWER],[33,t.THRASH],[36,t.FLARE_BLITZ]],[e.TORRACAT]:[[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.LICK],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[20,t.DOUBLE_KICK],[25,t.FIRE_FANG],[30,t.SCARY_FACE],[35,t.SWAGGER],[40,t.FLAMETHROWER],[45,t.THRASH],[50,t.FLARE_BLITZ]],[e.INCINEROAR]:[[Ae,t.DARKEST_LARIAT],[Z,t.SCRATCH],[Z,t.GROWL],[Z,t.THROAT_CHOP],[1,t.EMBER],[1,t.LICK],[1,t.CROSS_CHOP],[1,t.BULK_UP],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[20,t.DOUBLE_KICK],[25,t.FIRE_FANG],[30,t.SCARY_FACE],[32,t.SWAGGER],[44,t.FLAMETHROWER],[51,t.THRASH],[58,t.FLARE_BLITZ]],[e.POPPLIO]:[[1,t.POUND],[1,t.GROWL],[3,t.WATER_GUN],[6,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[18,t.SING],[21,t.BUBBLE_BEAM],[24,t.ENCORE],[27,t.MISTY_TERRAIN],[30,t.HYPER_VOICE],[33,t.MOONBLAST],[36,t.HYDRO_PUMP]],[e.BRIONNE]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[20,t.SING],[25,t.BUBBLE_BEAM],[30,t.ENCORE],[35,t.MISTY_TERRAIN],[40,t.HYPER_VOICE],[45,t.MOONBLAST],[50,t.HYDRO_PUMP]],[e.PRIMARINA]:[[Ae,t.SPARKLING_ARIA],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[20,t.SING],[25,t.BUBBLE_BEAM],[30,t.ENCORE],[37,t.MISTY_TERRAIN],[44,t.HYPER_VOICE],[51,t.MOONBLAST],[58,t.HYDRO_PUMP]],[e.PIKIPEK]:[[1,t.PECK],[3,t.GROWL],[7,t.ECHOED_VOICE],[9,t.ROCK_SMASH],[13,t.SUPERSONIC],[15,t.PLUCK],[19,t.ROOST],[21,t.FURY_ATTACK],[25,t.SCREECH],[27,t.DRILL_PECK],[31,t.BULLET_SEED],[33,t.FEATHER_DANCE],[37,t.HYPER_VOICE]],[e.TRUMBEAK]:[[Z,t.ECHOED_VOICE],[1,t.GROWL],[1,t.PECK],[1,t.ROCK_SMASH],[1,t.ROCK_BLAST],[13,t.SUPERSONIC],[16,t.PLUCK],[21,t.ROOST],[24,t.FURY_ATTACK],[29,t.SCREECH],[32,t.DRILL_PECK],[37,t.BULLET_SEED],[40,t.FEATHER_DANCE],[45,t.HYPER_VOICE]],[e.TOUCANNON]:[[Ae,t.BEAK_BLAST],[1,t.GROWL],[1,t.PECK],[1,t.ROCK_SMASH],[1,t.ROCK_BLAST],[1,t.ECHOED_VOICE],[13,t.SUPERSONIC],[16,t.PLUCK],[21,t.ROOST],[24,t.FURY_ATTACK],[30,t.SCREECH],[34,t.DRILL_PECK],[40,t.BULLET_SEED],[44,t.FEATHER_DANCE],[50,t.HYPER_VOICE]],[e.YUNGOOS]:[[1,t.TACKLE],[3,t.LEER],[7,t.PAYBACK],[10,t.SAND_ATTACK],[13,t.WORK_UP],[19,t.BITE],[22,t.MUD_SLAP],[25,t.SUPER_FANG],[28,t.TAKE_DOWN],[31,t.SCARY_FACE],[34,t.CRUNCH],[37,t.YAWN],[40,t.THRASH],[43,t.REST]],[e.GUMSHOOS]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.PAYBACK],[1,t.PURSUIT],[13,t.WORK_UP],[19,t.BITE],[23,t.MUD_SLAP],[27,t.SUPER_FANG],[31,t.TAKE_DOWN],[35,t.SCARY_FACE],[39,t.CRUNCH],[43,t.YAWN],[47,t.THRASH],[52,t.REST]],[e.GRUBBIN]:[[1,t.VISE_GRIP],[1,t.MUD_SLAP],[5,t.STRING_SHOT],[10,t.BUG_BITE],[15,t.BITE],[21,t.SPARK],[25,t.STICKY_WEB],[30,t.X_SCISSOR],[35,t.CRUNCH],[40,t.DIG]],[e.CHARJABUG]:[[Ae,t.CHARGE],[1,t.VISE_GRIP],[1,t.STRING_SHOT],[1,t.MUD_SLAP],[1,t.BUG_BITE],[15,t.BITE],[23,t.SPARK],[29,t.STICKY_WEB],[36,t.X_SCISSOR],[43,t.CRUNCH],[50,t.DIG],[57,t.IRON_DEFENSE],[64,t.DISCHARGE]],[e.VIKAVOLT]:[[Ae,t.THUNDERBOLT],[Z,t.VISE_GRIP],[Z,t.DIG],[Z,t.MUD_SLAP],[Z,t.IRON_DEFENSE],[Z,t.X_SCISSOR],[Z,t.BUG_BITE],[1,t.CHARGE],[1,t.CRUNCH],[1,t.DISCHARGE],[1,t.STRING_SHOT],[15,t.BITE],[23,t.SPARK],[29,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.GUILLOTINE],[50,t.FLY],[57,t.AGILITY],[64,t.ZAP_CANNON]],[e.CRABRAWLER]:[[1,t.BUBBLE],[1,t.VISE_GRIP],[5,t.ROCK_SMASH],[9,t.LEER],[13,t.BUBBLE_BEAM],[17,t.PROTECT],[22,t.BRICK_BREAK],[25,t.SLAM],[29,t.PAYBACK],[33,t.REVERSAL],[37,t.CRABHAMMER],[42,t.IRON_DEFENSE],[45,t.DYNAMIC_PUNCH],[49,t.CLOSE_COMBAT]],[e.CRABOMINABLE]:[[Ae,t.ICE_PUNCH],[Z,t.CRABHAMMER],[1,t.VISE_GRIP],[1,t.LEER],[1,t.PROTECT],[1,t.ROCK_SMASH],[1,t.BUBBLE],[1,t.PURSUIT],[1,t.PAYBACK],[17,t.BUBBLE_BEAM],[22,t.BRICK_BREAK],[25,t.SLAM],[29,t.AVALANCHE],[33,t.REVERSAL],[37,t.ICE_HAMMER],[42,t.IRON_DEFENSE],[45,t.DYNAMIC_PUNCH],[49,t.CLOSE_COMBAT]],[e.ORICORIO]:[[1,t.POUND],[4,t.GROWL],[6,t.PECK],[10,t.HELPING_HAND],[13,t.AIR_CUTTER],[16,t.BATON_PASS],[20,t.FEATHER_DANCE],[23,t.ACROBATICS],[26,t.TEETER_DANCE],[30,t.ROOST],[33,t.FLATTER],[36,t.AIR_SLASH],[40,t.REVELATION_DANCE],[43,t.AGILITY],[47,t.HURRICANE]],[e.CUTIEFLY]:[[1,t.ABSORB],[1,t.FAIRY_WIND],[6,t.STUN_SPORE],[12,t.SWEET_SCENT],[18,t.DRAINING_KISS],[24,t.STRUGGLE_BUG],[30,t.COVET],[36,t.SWITCHEROO],[42,t.DAZZLING_GLEAM],[48,t.BUG_BUZZ],[54,t.QUIVER_DANCE]],[e.RIBOMBEE]:[[Ae,t.POLLEN_PUFF],[1,t.ABSORB],[1,t.STUN_SPORE],[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[18,t.DRAINING_KISS],[24,t.STRUGGLE_BUG],[32,t.COVET],[40,t.SWITCHEROO],[48,t.DAZZLING_GLEAM],[56,t.BUG_BUZZ],[64,t.QUIVER_DANCE]],[e.ROCKRUFF]:[[1,t.TACKLE],[1,t.LEER],[4,t.SAND_ATTACK],[8,t.DOUBLE_TEAM],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[28,t.ROAR],[32,t.ROCK_SLIDE],[36,t.CRUNCH],[40,t.SCARY_FACE],[44,t.STEALTH_ROCK],[48,t.STONE_EDGE]],[e.LYCANROC]:[[Ae,t.SUCKER_PUNCH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.QUICK_GUARD],[1,t.ACCELEROCK],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]],[e.WISHIWASHI]:[[1,t.GROWL],[1,t.WATER_GUN],[4,t.HELPING_HAND],[8,t.BEAT_UP],[12,t.BRINE],[16,t.TEARFUL_LOOK],[20,t.DIVE],[24,t.SOAK],[28,t.UPROAR],[32,t.AQUA_TAIL],[36,t.AQUA_RING],[40,t.ENDEAVOR],[44,t.HYDRO_PUMP],[48,t.DOUBLE_EDGE]],[e.MAREANIE]:[[1,t.POISON_STING],[1,t.PECK],[5,t.WIDE_GUARD],[10,t.BITE],[15,t.VENOSHOCK],[20,t.RECOVER],[25,t.PIN_MISSILE],[30,t.TOXIC_SPIKES],[35,t.LIQUIDATION],[40,t.ACID_SPRAY],[45,t.POISON_JAB],[50,t.TOXIC]],[e.TOXAPEX]:[[Ae,t.BANEFUL_BUNKER],[1,t.POISON_STING],[1,t.BITE],[1,t.PECK],[1,t.WIDE_GUARD],[15,t.VENOSHOCK],[20,t.RECOVER],[25,t.PIN_MISSILE],[30,t.TOXIC_SPIKES],[35,t.LIQUIDATION],[42,t.ACID_SPRAY],[49,t.POISON_JAB],[56,t.TOXIC]],[e.MUDBRAY]:[[1,t.MUD_SLAP],[1,t.ROCK_SMASH],[4,t.IRON_DEFENSE],[8,t.DOUBLE_KICK],[12,t.BULLDOZE],[16,t.STOMP],[20,t.STRENGTH],[24,t.COUNTER],[28,t.HIGH_HORSEPOWER],[32,t.HEAVY_SLAM],[36,t.EARTHQUAKE],[40,t.MEGA_KICK],[44,t.SUPERPOWER]],[e.MUDSDALE]:[[1,t.DOUBLE_KICK],[1,t.MUD_SLAP],[1,t.ROCK_SMASH],[1,t.IRON_DEFENSE],[12,t.BULLDOZE],[16,t.STOMP],[20,t.STRENGTH],[24,t.COUNTER],[28,t.HIGH_HORSEPOWER],[34,t.HEAVY_SLAM],[40,t.EARTHQUAKE],[46,t.MEGA_KICK],[52,t.SUPERPOWER]],[e.DEWPIDER]:[[1,t.WATER_GUN],[1,t.INFESTATION],[1,t.WATER_SPORT],[4,t.BUG_BITE],[8,t.BITE],[12,t.BUBBLE_BEAM],[16,t.AQUA_RING],[20,t.HEADBUTT],[24,t.CRUNCH],[28,t.SOAK],[32,t.ENTRAINMENT],[36,t.LUNGE],[40,t.LIQUIDATION],[44,t.LEECH_LIFE],[48,t.MIRROR_COAT]],[e.ARAQUANID]:[[1,t.BITE],[1,t.WATER_GUN],[1,t.BUG_BITE],[1,t.WIDE_GUARD],[1,t.INFESTATION],[1,t.WATER_SPORT],[1,t.SPIDER_WEB],[12,t.BUBBLE_BEAM],[16,t.AQUA_RING],[20,t.HEADBUTT],[26,t.CRUNCH],[32,t.SOAK],[38,t.ENTRAINMENT],[44,t.LUNGE],[50,t.LIQUIDATION],[56,t.LEECH_LIFE],[62,t.MIRROR_COAT]],[e.FOMANTIS]:[[1,t.FURY_CUTTER],[1,t.LEAFAGE],[5,t.GROWTH],[10,t.INGRAIN],[15,t.RAZOR_LEAF],[20,t.SWEET_SCENT],[25,t.SLASH],[30,t.X_SCISSOR],[35,t.SYNTHESIS],[40,t.LEAF_BLADE],[45,t.SUNNY_DAY],[50,t.SOLAR_BEAM]],[e.LURANTIS]:[[Ae,t.PETAL_BLIZZARD],[1,t.GROWTH],[1,t.SOLAR_BEAM],[1,t.FURY_CUTTER],[1,t.INGRAIN],[1,t.NIGHT_SLASH],[1,t.LEAFAGE],[1,t.DUAL_CHOP],[15,t.RAZOR_LEAF],[20,t.SWEET_SCENT],[25,t.SLASH],[30,t.X_SCISSOR],[37,t.SYNTHESIS],[44,t.LEAF_BLADE],[51,t.SUNNY_DAY],[63,t.SOLAR_BLADE]],[e.MORELULL]:[[1,t.ABSORB],[1,t.ASTONISH],[4,t.CONFUSE_RAY],[8,t.INGRAIN],[12,t.MEGA_DRAIN],[16,t.SLEEP_POWDER],[20,t.MOONLIGHT],[25,t.STRENGTH_SAP],[28,t.GIGA_DRAIN],[32,t.DAZZLING_GLEAM],[36,t.SPORE],[40,t.MOONBLAST],[44,t.DREAM_EATER]],[e.SHIINOTIC]:[[1,t.ABSORB],[1,t.CONFUSE_RAY],[1,t.INGRAIN],[1,t.ASTONISH],[1,t.FLASH],[12,t.MEGA_DRAIN],[16,t.SLEEP_POWDER],[20,t.MOONLIGHT],[27,t.STRENGTH_SAP],[32,t.GIGA_DRAIN],[38,t.DAZZLING_GLEAM],[44,t.SPORE],[50,t.MOONBLAST],[56,t.DREAM_EATER]],[e.SALANDIT]:[[1,t.SCRATCH],[1,t.POISON_GAS],[5,t.SMOG],[10,t.EMBER],[15,t.POISON_FANG],[20,t.SWEET_SCENT],[25,t.NASTY_PLOT],[30,t.INCINERATE],[35,t.VENOSHOCK],[40,t.DRAGON_PULSE],[45,t.FLAMETHROWER],[50,t.TOXIC],[55,t.ENDEAVOR]],[e.SALAZZLE]:[[Ae,t.FIRE_LASH],[1,t.POUND],[1,t.SCRATCH],[1,t.DISABLE],[1,t.EMBER],[1,t.SMOG],[1,t.POISON_GAS],[1,t.SWAGGER],[1,t.ENCORE],[1,t.TORMENT],[1,t.KNOCK_OFF],[1,t.ENDEAVOR],[1,t.CAPTIVATE],[15,t.POISON_FANG],[20,t.SWEET_SCENT],[25,t.NASTY_PLOT],[30,t.INCINERATE],[37,t.VENOSHOCK],[44,t.DRAGON_PULSE],[51,t.FLAMETHROWER],[58,t.TOXIC]],[e.STUFFUL]:[[1,t.TACKLE],[1,t.LEER],[4,t.BABY_DOLL_EYES],[8,t.PAYBACK],[12,t.BRUTAL_SWING],[16,t.ENDURE],[20,t.STRENGTH],[24,t.TAKE_DOWN],[28,t.FLAIL],[32,t.HAMMER_ARM],[36,t.THRASH],[40,t.PAIN_SPLIT],[44,t.DOUBLE_EDGE],[48,t.SUPERPOWER]],[e.BEWEAR]:[[Ae,t.BIND],[1,t.TACKLE],[1,t.LEER],[1,t.PAYBACK],[1,t.BABY_DOLL_EYES],[12,t.BRUTAL_SWING],[16,t.ENDURE],[20,t.STRENGTH],[24,t.TAKE_DOWN],[30,t.FLAIL],[36,t.HAMMER_ARM],[42,t.THRASH],[48,t.PAIN_SPLIT],[54,t.DOUBLE_EDGE],[60,t.SUPERPOWER]],[e.BOUNSWEET]:[[1,t.SPLASH],[1,t.LEAFAGE],[4,t.PLAY_NICE],[8,t.RAPID_SPIN],[12,t.RAZOR_LEAF],[16,t.SWEET_SCENT],[20,t.MAGICAL_LEAF],[24,t.FLAIL],[28,t.TEETER_DANCE],[32,t.AROMATIC_MIST]],[e.STEENEE]:[[1,t.LEAFAGE],[1,t.RAZOR_LEAF],[1,t.SPLASH],[1,t.FLAIL],[1,t.RAPID_SPIN],[1,t.PLAY_NICE],[16,t.SWEET_SCENT],[22,t.MAGICAL_LEAF],[28,t.STOMP],[34,t.TEETER_DANCE],[40,t.AROMATIC_MIST],[46,t.LEAF_STORM]],[e.TSAREENA]:[[Ae,t.TROP_KICK],[1,t.LEAFAGE],[1,t.RAZOR_LEAF],[1,t.SPLASH],[1,t.FLAIL],[1,t.SWAGGER],[1,t.RAPID_SPIN],[1,t.POWER_WHIP],[1,t.PLAY_NICE],[1,t.PUNISHMENT],[16,t.SWEET_SCENT],[22,t.MAGICAL_LEAF],[28,t.STOMP],[34,t.TEETER_DANCE],[40,t.AROMATIC_MIST],[46,t.LEAF_STORM],[58,t.HIGH_JUMP_KICK]],[e.COMFEY]:[[1,t.WRAP],[1,t.GROWTH],[3,t.VINE_WHIP],[6,t.HELPING_HAND],[9,t.DRAINING_KISS],[12,t.FLOWER_SHIELD],[15,t.MAGICAL_LEAF],[18,t.SYNTHESIS],[21,t.LEECH_SEED],[24,t.GRASS_KNOT],[27,t.SWEET_KISS],[30,t.FLORAL_HEALING],[33,t.PETAL_BLIZZARD],[36,t.AROMATHERAPY],[39,t.PLAY_ROUGH],[42,t.SWEET_SCENT],[45,t.PETAL_DANCE],[48,t.GRASSY_TERRAIN]],[e.ORANGURU]:[[1,t.CONFUSION],[1,t.TAUNT],[5,t.AFTER_YOU],[10,t.CALM_MIND],[15,t.STORED_POWER],[20,t.PSYCH_UP],[25,t.QUASH],[30,t.NASTY_PLOT],[35,t.ZEN_HEADBUTT],[40,t.TRICK_ROOM],[45,t.PSYCHIC],[50,t.INSTRUCT],[55,t.FOUL_PLAY],[60,t.FUTURE_SIGHT]],[e.PASSIMIAN]:[[1,t.TACKLE],[1,t.LEER],[5,t.ROCK_SMASH],[10,t.FOCUS_ENERGY],[15,t.BEAT_UP],[20,t.SCARY_FACE],[25,t.TAKE_DOWN],[30,t.FLING],[35,t.BULK_UP],[40,t.THRASH],[45,t.DOUBLE_EDGE],[50,t.CLOSE_COMBAT],[55,t.REVERSAL],[60,t.GIGA_IMPACT]],[e.WIMPOD]:[[1,t.SAND_ATTACK],[1,t.DEFENSE_CURL],[1,t.STRUGGLE_BUG]],[e.GOLISOPOD]:[[Ae,t.FIRST_IMPRESSION],[1,t.SAND_ATTACK],[1,t.DEFENSE_CURL],[1,t.SPITE],[1,t.STRUGGLE_BUG],[4,t.ROCK_SMASH],[8,t.FURY_CUTTER],[12,t.MUD_SHOT],[16,t.BUG_BITE],[20,t.IRON_DEFENSE],[24,t.SUCKER_PUNCH],[28,t.SLASH],[32,t.RAZOR_SHELL],[36,t.PIN_MISSILE],[40,t.SWORDS_DANCE],[44,t.LIQUIDATION]],[e.SANDYGAST]:[[1,t.ABSORB],[1,t.HARDEN],[5,t.ASTONISH],[10,t.SAND_TOMB],[15,t.MEGA_DRAIN],[20,t.SAND_ATTACK],[25,t.BULLDOZE],[30,t.HYPNOSIS],[35,t.GIGA_DRAIN],[40,t.IRON_DEFENSE],[45,t.SHADOW_BALL],[50,t.EARTH_POWER],[55,t.SHORE_UP],[60,t.SANDSTORM]],[e.PALOSSAND]:[[1,t.ABSORB],[1,t.HARDEN],[1,t.ASTONISH],[1,t.SAND_TOMB],[15,t.MEGA_DRAIN],[20,t.SAND_ATTACK],[25,t.BULLDOZE],[30,t.HYPNOSIS],[35,t.GIGA_DRAIN],[40,t.IRON_DEFENSE],[47,t.SHADOW_BALL],[54,t.EARTH_POWER],[61,t.SHORE_UP],[68,t.SANDSTORM]],[e.PYUKUMUKU]:[[1,t.COUNTER],[1,t.HARDEN],[1,t.BATON_PASS],[1,t.BIDE],[1,t.MUD_SPORT],[1,t.WATER_SPORT],[5,t.HELPING_HAND],[10,t.TAUNT],[15,t.SAFEGUARD],[20,t.MIRROR_COAT],[25,t.PURIFY],[30,t.CURSE],[35,t.GASTRO_ACID],[40,t.PAIN_SPLIT],[45,t.RECOVER],[50,t.SOAK],[55,t.TOXIC],[60,t.MEMENTO]],[e.TYPE_NULL]:[[1,t.TACKLE],[1,t.IMPRISON],[5,t.AERIAL_ACE],[10,t.SCARY_FACE],[15,t.DOUBLE_HIT],[20,t.METAL_SOUND],[25,t.CRUSH_CLAW],[30,t.AIR_SLASH],[35,t.TRI_ATTACK],[40,t.X_SCISSOR],[45,t.IRON_HEAD],[50,t.TAKE_DOWN],[55,t.DOUBLE_EDGE],[60,t.HEAL_BLOCK]],[e.SILVALLY]:[[Ae,t.MULTI_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.EXPLOSION],[1,t.SCARY_FACE],[1,t.IMPRISON],[1,t.POISON_FANG],[1,t.AERIAL_ACE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.IRON_HEAD],[1,t.HEAL_BLOCK],[15,t.DOUBLE_HIT],[20,t.METAL_SOUND],[25,t.CRUSH_CLAW],[30,t.AIR_SLASH],[35,t.TRI_ATTACK],[40,t.X_SCISSOR],[45,t.CRUNCH],[50,t.TAKE_DOWN],[55,t.DOUBLE_EDGE],[60,t.PARTING_SHOT]],[e.MINIOR]:[[1,t.TACKLE],[3,t.DEFENSE_CURL],[8,t.ROLLOUT],[10,t.CONFUSE_RAY],[15,t.SWIFT],[17,t.ANCIENT_POWER],[22,t.SELF_DESTRUCT],[24,t.STEALTH_ROCK],[29,t.TAKE_DOWN],[31,t.AUTOTOMIZE],[36,t.COSMIC_POWER],[38,t.POWER_GEM],[43,t.DOUBLE_EDGE],[45,t.SHELL_SMASH],[50,t.EXPLOSION]],[e.KOMALA]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[6,t.STOCKPILE],[6,t.SPIT_UP],[6,t.SWALLOW],[11,t.RAPID_SPIN],[16,t.YAWN],[21,t.SLAM],[26,t.FLAIL],[31,t.SUCKER_PUNCH],[36,t.PSYCH_UP],[41,t.WOOD_HAMMER],[46,t.THRASH]],[e.TURTONATOR]:[[1,t.TACKLE],[1,t.SMOG],[4,t.EMBER],[8,t.PROTECT],[12,t.ENDURE],[16,t.FLAIL],[20,t.INCINERATE],[24,t.IRON_DEFENSE],[28,t.DRAGON_PULSE],[32,t.BODY_SLAM],[36,t.FLAMETHROWER],[40,t.SHELL_TRAP],[44,t.SHELL_SMASH],[48,t.OVERHEAT],[52,t.EXPLOSION]],[e.TOGEDEMARU]:[[1,t.TACKLE],[1,t.NUZZLE],[5,t.DEFENSE_CURL],[10,t.CHARGE],[15,t.THUNDER_SHOCK],[20,t.FELL_STINGER],[25,t.SPARK],[30,t.PIN_MISSILE],[35,t.MAGNET_RISE],[40,t.ZING_ZAP],[45,t.DISCHARGE],[50,t.ELECTRIC_TERRAIN],[55,t.WILD_CHARGE],[60,t.SPIKY_SHIELD]],[e.MIMIKYU]:[[1,t.SCRATCH],[1,t.SPLASH],[1,t.ASTONISH],[1,t.COPYCAT],[1,t.WOOD_HAMMER],[6,t.SHADOW_SNEAK],[12,t.DOUBLE_TEAM],[18,t.BABY_DOLL_EYES],[24,t.MIMIC],[30,t.HONE_CLAWS],[36,t.SLASH],[42,t.SHADOW_CLAW],[48,t.CHARM],[54,t.PLAY_ROUGH],[60,t.PAIN_SPLIT]],[e.BRUXISH]:[[1,t.WATER_GUN],[4,t.ASTONISH],[9,t.CONFUSION],[12,t.BITE],[17,t.AQUA_JET],[20,t.DISABLE],[25,t.PSYSHOCK],[28,t.CRUNCH],[33,t.AQUA_TAIL],[36,t.SCREECH],[41,t.PSYCHIC_FANGS],[44,t.WAVE_CRASH]],[e.DRAMPA]:[[1,t.ECHOED_VOICE],[1,t.PLAY_NICE],[5,t.TWISTER],[10,t.PROTECT],[15,t.GLARE],[20,t.SAFEGUARD],[25,t.DRAGON_BREATH],[30,t.EXTRASENSORY],[35,t.DRAGON_PULSE],[40,t.LIGHT_SCREEN],[45,t.FLY],[50,t.HYPER_VOICE],[55,t.OUTRAGE]],[e.DHELMISE]:[[1,t.ABSORB],[1,t.RAPID_SPIN],[4,t.ASTONISH],[8,t.WRAP],[12,t.MEGA_DRAIN],[16,t.GROWTH],[20,t.GYRO_BALL],[24,t.SWITCHEROO],[28,t.GIGA_DRAIN],[32,t.WHIRLPOOL],[36,t.HEAVY_SLAM],[40,t.SLAM],[44,t.SHADOW_BALL],[48,t.METAL_SOUND],[52,t.ANCHOR_SHOT],[56,t.ENERGY_BALL],[60,t.PHANTOM_FORCE],[64,t.POWER_WHIP]],[e.JANGMO_O]:[[1,t.TACKLE],[1,t.LEER],[4,t.PROTECT],[8,t.DRAGON_TAIL],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[36,t.NOBLE_ROAR],[40,t.DRAGON_DANCE],[44,t.OUTRAGE]],[e.HAKAMO_O]:[[Ae,t.SKY_UPPERCUT],[1,t.TACKLE],[1,t.LEER],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.BIDE],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[38,t.NOBLE_ROAR],[44,t.DRAGON_DANCE],[50,t.OUTRAGE],[56,t.CLOSE_COMBAT]],[e.KOMMO_O]:[[Ae,t.CLANGING_SCALES],[Z,t.BELLY_DRUM],[1,t.TACKLE],[1,t.LEER],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.BIDE],[1,t.SKY_UPPERCUT],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[38,t.NOBLE_ROAR],[44,t.DRAGON_DANCE],[52,t.OUTRAGE],[60,t.CLOSE_COMBAT],[68,t.CLANGOROUS_SOUL],[76,t.BOOMBURST]],[e.TAPU_KOKO]:[[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[5,t.WITHDRAW],[10,t.FAIRY_WIND],[15,t.FALSE_SWIPE],[20,t.SPARK],[25,t.SHOCK_WAVE],[30,t.CHARGE],[35,t.AGILITY],[40,t.SCREECH],[45,t.DISCHARGE],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.WILD_CHARGE],[65,t.BRAVE_BIRD],[70,t.POWER_SWAP],[75,t.ELECTRIC_TERRAIN]],[e.TAPU_LELE]:[[1,t.CONFUSION],[1,t.ASTONISH],[5,t.WITHDRAW],[10,t.AROMATHERAPY],[15,t.DRAINING_KISS],[20,t.PSYBEAM],[25,t.FLATTER],[30,t.AROMATIC_MIST],[35,t.SWEET_SCENT],[40,t.EXTRASENSORY],[45,t.PSYSHOCK],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.MOONBLAST],[65,t.TICKLE],[70,t.SKILL_SWAP],[75,t.PSYCHIC_TERRAIN]],[e.TAPU_BULU]:[[1,t.ROCK_SMASH],[1,t.LEAFAGE],[5,t.WITHDRAW],[10,t.DISABLE],[15,t.LEECH_SEED],[20,t.MEGA_DRAIN],[25,t.WHIRLWIND],[30,t.HORN_ATTACK],[35,t.SCARY_FACE],[40,t.HORN_LEECH],[45,t.ZEN_HEADBUTT],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.WOOD_HAMMER],[65,t.MEGAHORN],[70,t.SKULL_BASH],[75,t.GRASSY_TERRAIN]],[e.TAPU_FINI]:[[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[5,t.WITHDRAW],[10,t.MIST],[10,t.HAZE],[15,t.AQUA_RING],[20,t.WATER_PULSE],[25,t.BRINE],[30,t.DEFOG],[35,t.HEAL_PULSE],[40,t.SURF],[45,t.MUDDY_WATER],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.MOONBLAST],[65,t.HYDRO_PUMP],[70,t.SOAK],[75,t.MISTY_TERRAIN]],[e.COSMOG]:[[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER]],[e.COSMOEM]:[[Ae,t.COSMIC_POWER],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER]],[e.SOLGALEO]:[[Ae,t.SUNSTEEL_STRIKE],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER],[1,t.METAL_CLAW],[1,t.COSMIC_POWER],[1,t.NOBLE_ROAR],[1,t.WAKE_UP_SLAP],[7,t.IRON_HEAD],[14,t.METAL_SOUND],[21,t.ZEN_HEADBUTT],[28,t.FLASH_CANNON],[35,t.MORNING_SUN],[42,t.CRUNCH],[49,t.METAL_BURST],[56,t.WILD_CHARGE],[63,t.SOLAR_BEAM],[70,t.FLARE_BLITZ],[77,t.WIDE_GUARD],[84,t.GIGA_IMPACT]],[e.LUNALA]:[[Ae,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.HYPNOSIS],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER],[1,t.COSMIC_POWER],[7,t.NIGHT_SHADE],[14,t.CONFUSE_RAY],[21,t.AIR_SLASH],[28,t.SHADOW_BALL],[35,t.MOONLIGHT],[42,t.NIGHT_DAZE],[49,t.MAGIC_COAT],[56,t.MOONBLAST],[63,t.PHANTOM_FORCE],[70,t.DREAM_EATER],[77,t.WIDE_GUARD],[84,t.HYPER_BEAM]],[e.NIHILEGO]:[[1,t.POUND],[1,t.WRAP],[1,t.CONSTRICT],[5,t.ACID],[10,t.TICKLE],[15,t.ACID_SPRAY],[20,t.CLEAR_SMOG],[25,t.GUARD_SPLIT],[25,t.POWER_SPLIT],[30,t.VENOSHOCK],[35,t.HEADBUTT],[40,t.TOXIC_SPIKES],[45,t.VENOM_DRENCH],[50,t.POWER_GEM],[55,t.STEALTH_ROCK],[60,t.MIRROR_COAT],[65,t.WONDER_ROOM],[70,t.HEAD_SMASH]],[e.BUZZWOLE]:[[1,t.HARDEN],[1,t.POWER_UP_PUNCH],[5,t.TAUNT],[10,t.FELL_STINGER],[15,t.VITAL_THROW],[20,t.BULK_UP],[25,t.ENDURE],[30,t.REVERSAL],[35,t.MEGA_PUNCH],[40,t.LUNGE],[45,t.FOCUS_ENERGY],[50,t.DYNAMIC_PUNCH],[55,t.COUNTER],[60,t.HAMMER_ARM],[65,t.SUPERPOWER],[70,t.FOCUS_PUNCH]],[e.PHEROMOSA]:[[1,t.RAPID_SPIN],[1,t.FEINT],[5,t.LEER],[10,t.QUICK_GUARD],[15,t.BUG_BITE],[20,t.LOW_KICK],[25,t.DOUBLE_KICK],[30,t.TRIPLE_KICK],[35,t.STOMP],[40,t.AGILITY],[45,t.LUNGE],[50,t.BOUNCE],[55,t.SPEED_SWAP],[60,t.BUG_BUZZ],[65,t.QUIVER_DANCE],[70,t.HIGH_JUMP_KICK]],[e.XURKITREE]:[[1,t.WRAP],[1,t.THUNDER_SHOCK],[5,t.CHARGE],[10,t.THUNDER_WAVE],[15,t.INGRAIN],[20,t.SPARK],[25,t.SHOCK_WAVE],[30,t.HYPNOSIS],[35,t.EERIE_IMPULSE],[40,t.THUNDER_PUNCH],[45,t.DISCHARGE],[50,t.MAGNET_RISE],[55,t.THUNDERBOLT],[60,t.ELECTRIC_TERRAIN],[65,t.POWER_WHIP],[70,t.ZAP_CANNON]],[e.CELESTEELA]:[[1,t.TACKLE],[1,t.ABSORB],[5,t.HARDEN],[10,t.WIDE_GUARD],[15,t.MEGA_DRAIN],[20,t.SMACK_DOWN],[25,t.INGRAIN],[30,t.AUTOTOMIZE],[35,t.GIGA_DRAIN],[40,t.FLASH_CANNON],[45,t.METAL_SOUND],[50,t.IRON_DEFENSE],[55,t.LEECH_SEED],[60,t.HEAVY_SLAM],[65,t.DOUBLE_EDGE],[70,t.SKULL_BASH]],[e.KARTANA]:[[1,t.FURY_CUTTER],[1,t.VACUUM_WAVE],[5,t.RAZOR_LEAF],[10,t.FALSE_SWIPE],[15,t.CUT],[20,t.AIR_CUTTER],[25,t.AERIAL_ACE],[30,t.DETECT],[35,t.NIGHT_SLASH],[40,t.SYNTHESIS],[45,t.LASER_FOCUS],[50,t.DEFOG],[55,t.LEAF_BLADE],[60,t.SACRED_SWORD],[65,t.SWORDS_DANCE],[70,t.GUILLOTINE]],[e.GUZZLORD]:[[1,t.BITE],[1,t.DRAGON_TAIL],[5,t.STOCKPILE],[5,t.SWALLOW],[10,t.KNOCK_OFF],[15,t.STOMP],[20,t.STOMPING_TANTRUM],[25,t.WIDE_GUARD],[30,t.CRUNCH],[35,t.BODY_SLAM],[40,t.GASTRO_ACID],[45,t.HAMMER_ARM],[50,t.HEAVY_SLAM],[55,t.DRAGON_RUSH],[60,t.BELCH],[65,t.THRASH],[70,t.GIGA_IMPACT]],[e.NECROZMA]:[[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[1,t.MIRROR_SHOT],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],[e.MAGEARNA]:[[1,t.HELPING_HAND],[1,t.GYRO_BALL],[1,t.DISARMING_VOICE],[1,t.CRAFTY_SHIELD],[1,t.GEAR_UP],[6,t.DEFENSE_CURL],[12,t.ROLLOUT],[18,t.IRON_DEFENSE],[24,t.MAGNETIC_FLUX],[30,t.PSYBEAM],[36,t.AURORA_BEAM],[42,t.LOCK_ON],[48,t.SHIFT_GEAR],[54,t.TRICK],[60,t.IRON_HEAD],[66,t.AURA_SPHERE],[72,t.FLASH_CANNON],[78,t.PAIN_SPLIT],[84,t.ZAP_CANNON],[90,t.FLEUR_CANNON]],[e.MARSHADOW]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.COUNTER],[1,t.FEINT],[1,t.COPYCAT],[1,t.SHADOW_SNEAK],[1,t.PURSUIT],[9,t.ROLE_PLAY],[18,t.SHADOW_PUNCH],[27,t.FORCE_PALM],[36,t.ASSURANCE],[45,t.SUCKER_PUNCH],[54,t.DRAIN_PUNCH],[63,t.PSYCH_UP],[72,t.SPECTRAL_THIEF],[81,t.LASER_FOCUS],[90,t.ENDEAVOR],[99,t.CLOSE_COMBAT]],[e.POIPOLE]:[[Z,t.DRAGON_PULSE],[1,t.GROWL],[1,t.ACID],[1,t.PECK],[1,t.HELPING_HAND],[7,t.FURY_ATTACK],[14,t.FELL_STINGER],[21,t.CHARM],[28,t.VENOSHOCK],[35,t.VENOM_DRENCH],[42,t.NASTY_PLOT],[49,t.POISON_JAB],[56,t.GASTRO_ACID],[63,t.TOXIC]],[e.NAGANADEL]:[[Ae,t.AIR_CUTTER],[1,t.GROWL],[1,t.ACID],[1,t.PECK],[1,t.HELPING_HAND],[1,t.AIR_SLASH],[1,t.DRAGON_PULSE],[7,t.FURY_ATTACK],[14,t.FELL_STINGER],[21,t.CHARM],[28,t.VENOSHOCK],[35,t.VENOM_DRENCH],[42,t.NASTY_PLOT],[49,t.POISON_JAB],[56,t.GASTRO_ACID],[63,t.TOXIC],[70,t.DRAGON_RUSH]],[e.STAKATAKA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[10,t.PROTECT],[15,t.STOMP],[20,t.BLOCK],[25,t.ROCK_SLIDE],[30,t.WIDE_GUARD],[35,t.AUTOTOMIZE],[40,t.ROCK_BLAST],[45,t.MAGNET_RISE],[50,t.IRON_DEFENSE],[55,t.IRON_HEAD],[60,t.TAKE_DOWN],[65,t.STEALTH_ROCK],[70,t.DOUBLE_EDGE]],[e.BLACEPHALON]:[[1,t.FIRE_SPIN],[1,t.ASTONISH],[5,t.LIGHT_SCREEN],[10,t.EMBER],[15,t.NIGHT_SHADE],[20,t.CONFUSE_RAY],[25,t.MAGIC_COAT],[30,t.INCINERATE],[35,t.HYPNOSIS],[40,t.MYSTICAL_FIRE],[45,t.SHADOW_BALL],[50,t.CALM_MIND],[55,t.WILL_O_WISP],[60,t.TRICK],[65,t.FIRE_BLAST],[70,t.MIND_BLOWN]],[e.ZERAORA]:[[1,t.SCRATCH],[1,t.QUICK_ATTACK],[1,t.SPARK],[1,t.FAKE_OUT],[1,t.SNARL],[1,t.POWER_UP_PUNCH],[8,t.FURY_SWIPES],[16,t.QUICK_GUARD],[24,t.SLASH],[32,t.VOLT_SWITCH],[40,t.CHARGE],[48,t.THUNDER_PUNCH],[56,t.HONE_CLAWS],[64,t.DISCHARGE],[72,t.WILD_CHARGE],[80,t.AGILITY],[88,t.PLASMA_FISTS],[96,t.CLOSE_COMBAT]],[e.MELTAN]:[[1,t.THUNDER_SHOCK],[1,t.HARDEN],[8,t.TAIL_WHIP],[16,t.HEADBUTT],[24,t.THUNDER_WAVE],[32,t.ACID_ARMOR],[40,t.FLASH_CANNON]],[e.MELMETAL]:[[Ae,t.THUNDER_PUNCH],[1,t.HEADBUTT],[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[1,t.HARDEN],[24,t.THUNDER_WAVE],[32,t.ACID_ARMOR],[40,t.FLASH_CANNON],[48,t.MEGA_PUNCH],[56,t.PROTECT],[64,t.DISCHARGE],[72,t.DYNAMIC_PUNCH],[80,t.SUPERPOWER],[88,t.DOUBLE_IRON_BASH],[96,t.HYPER_BEAM]],[e.GROOKEY]:[[1,t.SCRATCH],[1,t.GROWL],[5,t.BRANCH_POKE],[8,t.TAUNT],[12,t.RAZOR_LEAF],[17,t.SCREECH],[20,t.KNOCK_OFF],[24,t.SLAM],[28,t.UPROAR],[32,t.WOOD_HAMMER],[36,t.ENDEAVOR]],[e.THWACKEY]:[[Ae,t.DOUBLE_HIT],[1,t.SCRATCH],[1,t.GROWL],[1,t.TAUNT],[1,t.BRANCH_POKE],[12,t.RAZOR_LEAF],[19,t.SCREECH],[24,t.KNOCK_OFF],[30,t.SLAM],[36,t.UPROAR],[42,t.WOOD_HAMMER],[48,t.ENDEAVOR]],[e.RILLABOOM]:[[Ae,t.DRUM_BEATING],[1,t.SCRATCH],[1,t.GROWL],[1,t.TAUNT],[1,t.DOUBLE_HIT],[1,t.NOBLE_ROAR],[1,t.GRASSY_TERRAIN],[1,t.BRANCH_POKE],[12,t.RAZOR_LEAF],[19,t.SCREECH],[24,t.KNOCK_OFF],[30,t.SLAM],[38,t.UPROAR],[46,t.WOOD_HAMMER],[54,t.ENDEAVOR],[62,t.BOOMBURST]],[e.SCORBUNNY]:[[1,t.TACKLE],[1,t.GROWL],[5,t.EMBER],[8,t.QUICK_ATTACK],[12,t.DOUBLE_KICK],[17,t.FLAME_CHARGE],[20,t.AGILITY],[24,t.HEADBUTT],[28,t.COUNTER],[32,t.BOUNCE],[36,t.DOUBLE_EDGE]],[e.RABOOT]:[[1,t.TACKLE],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[12,t.DOUBLE_KICK],[19,t.FLAME_CHARGE],[24,t.AGILITY],[30,t.HEADBUTT],[36,t.COUNTER],[42,t.BOUNCE],[48,t.DOUBLE_EDGE]],[e.CINDERACE]:[[Ae,t.PYRO_BALL],[1,t.TACKLE],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[1,t.FEINT],[12,t.DOUBLE_KICK],[19,t.FLAME_CHARGE],[24,t.AGILITY],[30,t.HEADBUTT],[38,t.COUNTER],[46,t.BOUNCE],[54,t.DOUBLE_EDGE],[62,t.COURT_CHANGE]],[e.SOBBLE]:[[1,t.POUND],[1,t.GROWL],[5,t.WATER_GUN],[8,t.BIND],[12,t.WATER_PULSE],[17,t.TEARFUL_LOOK],[20,t.SUCKER_PUNCH],[24,t.U_TURN],[28,t.LIQUIDATION],[32,t.SOAK],[36,t.RAIN_DANCE]],[e.DRIZZILE]:[[1,t.POUND],[1,t.BIND],[1,t.GROWL],[1,t.WATER_GUN],[12,t.WATER_PULSE],[19,t.TEARFUL_LOOK],[24,t.SUCKER_PUNCH],[30,t.U_TURN],[36,t.LIQUIDATION],[42,t.SOAK],[48,t.RAIN_DANCE]],[e.INTELEON]:[[Ae,t.SNIPE_SHOT],[1,t.POUND],[1,t.BIND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.ACROBATICS],[12,t.WATER_PULSE],[19,t.TEARFUL_LOOK],[24,t.SUCKER_PUNCH],[30,t.U_TURN],[38,t.LIQUIDATION],[46,t.SOAK],[54,t.RAIN_DANCE],[62,t.HYDRO_PUMP]],[e.SKWOVET]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.BITE],[10,t.STUFF_CHEEKS],[15,t.STOCKPILE],[15,t.SPIT_UP],[15,t.SWALLOW],[20,t.BODY_SLAM],[25,t.REST],[30,t.COUNTER],[35,t.BULLET_SEED],[40,t.SUPER_FANG],[45,t.BELCH]],[e.GREEDENT]:[[Ae,t.COVET],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.STUFF_CHEEKS],[15,t.STOCKPILE],[15,t.SPIT_UP],[15,t.SWALLOW],[20,t.BODY_SLAM],[27,t.REST],[34,t.COUNTER],[41,t.BULLET_SEED],[48,t.SUPER_FANG],[55,t.BELCH]],[e.ROOKIDEE]:[[1,t.LEER],[1,t.PECK],[4,t.POWER_TRIP],[8,t.HONE_CLAWS],[12,t.FURY_ATTACK],[16,t.PLUCK],[20,t.TAUNT],[24,t.SCARY_FACE],[28,t.DRILL_PECK],[32,t.SWAGGER],[36,t.BRAVE_BIRD]],[e.CORVISQUIRE]:[[1,t.LEER],[1,t.PECK],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[12,t.FURY_ATTACK],[16,t.PLUCK],[22,t.TAUNT],[28,t.SCARY_FACE],[34,t.DRILL_PECK],[40,t.SWAGGER],[46,t.BRAVE_BIRD]],[e.CORVIKNIGHT]:[[Ae,t.STEEL_WING],[1,t.LEER],[1,t.PECK],[1,t.SCREECH],[1,t.METAL_SOUND],[1,t.IRON_DEFENSE],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[12,t.FURY_ATTACK],[16,t.PLUCK],[22,t.TAUNT],[28,t.SCARY_FACE],[34,t.DRILL_PECK],[42,t.SWAGGER],[50,t.BRAVE_BIRD]],[e.BLIPBUG]:[[1,t.STRUGGLE_BUG]],[e.DOTTLER]:[[Ae,t.CONFUSION],[Ae,t.LIGHT_SCREEN],[Ae,t.REFLECT],[1,t.CONFUSION],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.STRUGGLE_BUG]],[e.ORBEETLE]:[[1,t.CONFUSION],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.STRUGGLE_BUG],[4,t.CONFUSE_RAY],[8,t.MAGIC_COAT],[12,t.AGILITY],[16,t.PSYBEAM],[20,t.HYPNOSIS],[24,t.ALLY_SWITCH],[28,t.BUG_BUZZ],[32,t.MIRROR_COAT],[36,t.PSYCHIC],[40,t.AFTER_YOU],[44,t.CALM_MIND],[48,t.PSYCHIC_TERRAIN]],[e.NICKIT]:[[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[4,t.BEAT_UP],[8,t.HONE_CLAWS],[12,t.SNARL],[16,t.ASSURANCE],[20,t.NASTY_PLOT],[24,t.SUCKER_PUNCH],[28,t.NIGHT_SLASH],[32,t.TAIL_SLAP],[36,t.FOUL_PLAY]],[e.THIEVUL]:[[Ae,t.THIEF],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.BEAT_UP],[1,t.HONE_CLAWS],[12,t.SNARL],[16,t.ASSURANCE],[22,t.NASTY_PLOT],[28,t.SUCKER_PUNCH],[34,t.NIGHT_SLASH],[40,t.TAIL_SLAP],[46,t.FOUL_PLAY],[52,t.PARTING_SHOT]],[e.GOSSIFLEUR]:[[1,t.SING],[1,t.LEAFAGE],[4,t.RAPID_SPIN],[8,t.SWEET_SCENT],[12,t.RAZOR_LEAF],[16,t.ROUND],[21,t.LEAF_TORNADO],[24,t.SYNTHESIS],[28,t.HYPER_VOICE],[32,t.AROMATHERAPY],[36,t.LEAF_STORM]],[e.ELDEGOSS]:[[Ae,t.COTTON_SPORE],[1,t.SING],[1,t.RAPID_SPIN],[1,t.SWEET_SCENT],[1,t.LEAFAGE],[12,t.RAZOR_LEAF],[16,t.ROUND],[23,t.LEAF_TORNADO],[28,t.SYNTHESIS],[34,t.HYPER_VOICE],[40,t.AROMATHERAPY],[46,t.LEAF_STORM],[52,t.COTTON_GUARD]],[e.WOOLOO]:[[1,t.TACKLE],[1,t.GROWL],[4,t.DEFENSE_CURL],[8,t.COPYCAT],[12,t.GUARD_SPLIT],[16,t.DOUBLE_KICK],[21,t.HEADBUTT],[25,t.TAKE_DOWN],[28,t.GUARD_SWAP],[32,t.REVERSAL],[36,t.COTTON_GUARD],[40,t.DOUBLE_EDGE]],[e.DUBWOOL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.DEFENSE_CURL],[1,t.COPYCAT],[12,t.GUARD_SPLIT],[16,t.DOUBLE_KICK],[21,t.HEADBUTT],[27,t.TAKE_DOWN],[32,t.GUARD_SWAP],[38,t.REVERSAL],[44,t.COTTON_GUARD],[50,t.DOUBLE_EDGE],[56,t.LAST_RESORT]],[e.CHEWTLE]:[[1,t.TACKLE],[1,t.WATER_GUN],[7,t.BITE],[14,t.PROTECT],[21,t.HEADBUTT],[28,t.COUNTER],[35,t.JAW_LOCK],[42,t.LIQUIDATION],[49,t.BODY_SLAM]],[e.DREDNAW]:[[Ae,t.ROCK_TOMB],[1,t.TACKLE],[1,t.BITE],[1,t.WATER_GUN],[1,t.PROTECT],[1,t.CRUNCH],[1,t.ROCK_POLISH],[1,t.RAZOR_SHELL],[21,t.HEADBUTT],[30,t.COUNTER],[39,t.JAW_LOCK],[48,t.LIQUIDATION],[57,t.BODY_SLAM],[66,t.HEAD_SMASH]],[e.YAMPER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.NUZZLE],[10,t.BITE],[15,t.ROAR],[20,t.SPARK],[26,t.CHARM],[30,t.CRUNCH],[35,t.CHARGE],[40,t.WILD_CHARGE],[45,t.PLAY_ROUGH]],[e.BOLTUND]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.ELECTRIFY],[1,t.NUZZLE],[15,t.ROAR],[20,t.SPARK],[28,t.CHARM],[34,t.CRUNCH],[41,t.CHARGE],[48,t.WILD_CHARGE],[55,t.PLAY_ROUGH],[62,t.ELECTRIC_TERRAIN]],[e.ROLYCOLY]:[[1,t.TACKLE],[1,t.SMOKESCREEN],[5,t.RAPID_SPIN],[10,t.SMACK_DOWN],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[25,t.INCINERATE],[30,t.STEALTH_ROCK],[35,t.HEAT_CRASH],[40,t.ROCK_BLAST]],[e.CARKOL]:[[Ae,t.FLAME_CHARGE],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.RAPID_SPIN],[1,t.SMACK_DOWN],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[27,t.INCINERATE],[35,t.STEALTH_ROCK],[41,t.HEAT_CRASH],[48,t.ROCK_BLAST],[55,t.STONE_EDGE]],[e.COALOSSAL]:[[Ae,t.TAR_SHOT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.RAPID_SPIN],[1,t.SMACK_DOWN],[1,t.FLAME_CHARGE],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[27,t.INCINERATE],[37,t.STEALTH_ROCK],[45,t.HEAT_CRASH],[54,t.ROCK_BLAST],[63,t.STONE_EDGE]],[e.APPLIN]:[[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.LEAFAGE]],[e.FLAPPLE]:[[Ae,t.WING_ATTACK],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.WITHDRAW],[1,t.TWISTER],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.ACID_SPRAY],[8,t.ACROBATICS],[12,t.LEECH_SEED],[16,t.PROTECT],[20,t.DRAGON_BREATH],[24,t.DRAGON_DANCE],[28,t.DRAGON_PULSE],[32,t.GRAV_APPLE],[36,t.IRON_DEFENSE],[40,t.FLY],[44,t.DRAGON_RUSH]],[e.APPLETUN]:[[Ae,t.HEADBUTT],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.CURSE],[8,t.STOMP],[12,t.LEECH_SEED],[16,t.PROTECT],[20,t.BULLET_SEED],[24,t.RECOVER],[28,t.APPLE_ACID],[32,t.BODY_SLAM],[36,t.IRON_DEFENSE],[40,t.DRAGON_PULSE],[44,t.ENERGY_BALL]],[e.SILICOBRA]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.MUD_SLAP],[5,t.MINIMIZE],[10,t.BRUTAL_SWING],[15,t.BULLDOZE],[20,t.HEADBUTT],[25,t.GLARE],[30,t.DIG],[35,t.SANDSTORM],[40,t.SLAM],[45,t.COIL],[50,t.SAND_TOMB]],[e.SANDACONDA]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.MUD_SLAP],[1,t.MINIMIZE],[1,t.BRUTAL_SWING],[15,t.BULLDOZE],[20,t.HEADBUTT],[25,t.GLARE],[30,t.DIG],[35,t.SANDSTORM],[42,t.SLAM],[49,t.COIL],[51,t.SAND_TOMB]],[e.CRAMORANT]:[[Z,t.BELCH],[1,t.PECK],[1,t.STOCKPILE],[1,t.SPIT_UP],[1,t.SWALLOW],[7,t.WATER_GUN],[14,t.FURY_ATTACK],[21,t.PLUCK],[28,t.DIVE],[35,t.DRILL_PECK],[42,t.AMNESIA],[49,t.THRASH],[56,t.HYDRO_PUMP]],[e.ARROKUDA]:[[1,t.PECK],[1,t.AQUA_JET],[6,t.FURY_ATTACK],[12,t.BITE],[18,t.AGILITY],[24,t.DIVE],[30,t.FOCUS_ENERGY],[36,t.CRUNCH],[42,t.LIQUIDATION],[48,t.DOUBLE_EDGE]],[e.BARRASKEWDA]:[[1,t.FURY_ATTACK],[1,t.BITE],[1,t.PECK],[1,t.AQUA_JET],[1,t.THROAT_CHOP],[18,t.AGILITY],[24,t.DIVE],[32,t.FOCUS_ENERGY],[40,t.CRUNCH],[48,t.LIQUIDATION],[56,t.DOUBLE_EDGE]],[e.TOXEL]:[[1,t.GROWL],[1,t.ACID],[1,t.FLAIL],[1,t.BELCH],[1,t.NUZZLE],[1,t.TEARFUL_LOOK]],[e.TOXTRICITY]:[[Ae,t.SPARK],[1,t.LEER],[1,t.GROWL],[1,t.ACID],[1,t.THUNDER_SHOCK],[1,t.FLAIL],[1,t.ACID_SPRAY],[1,t.BELCH],[1,t.NOBLE_ROAR],[1,t.NUZZLE],[1,t.TEARFUL_LOOK],[4,t.CHARGE],[8,t.SHOCK_WAVE],[12,t.SCARY_FACE],[16,t.TAUNT],[24,t.SCREECH],[28,t.SWAGGER],[32,t.TOXIC],[36,t.DISCHARGE],[40,t.POISON_JAB],[44,t.OVERDRIVE],[48,t.BOOMBURST],[52,t.SHIFT_GEAR]],[e.SIZZLIPEDE]:[[1,t.EMBER],[1,t.SMOKESCREEN],[5,t.WRAP],[10,t.BITE],[15,t.FLAME_WHEEL],[20,t.BUG_BITE],[25,t.COIL],[30,t.SLAM],[35,t.FIRE_SPIN],[40,t.CRUNCH],[45,t.FIRE_LASH],[50,t.LUNGE],[55,t.BURN_UP]],[e.CENTISKORCH]:[[1,t.WRAP],[1,t.BITE],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.INFERNO],[15,t.FLAME_WHEEL],[20,t.BUG_BITE],[25,t.COIL],[32,t.SLAM],[39,t.FIRE_SPIN],[46,t.CRUNCH],[53,t.FIRE_LASH],[60,t.LUNGE],[67,t.BURN_UP]],[e.CLOBBOPUS]:[[1,t.LEER],[1,t.ROCK_SMASH],[5,t.FEINT],[10,t.BIND],[15,t.DETECT],[20,t.BRICK_BREAK],[25,t.BULK_UP],[30,t.SUBMISSION],[35,t.TAUNT],[40,t.REVERSAL],[45,t.SUPERPOWER]],[e.GRAPPLOCT]:[[Ae,t.OCTOLOCK],[1,t.BIND],[1,t.LEER],[1,t.OCTAZOOKA],[1,t.ROCK_SMASH],[1,t.FEINT],[15,t.DETECT],[20,t.BRICK_BREAK],[25,t.BULK_UP],[30,t.SUBMISSION],[35,t.TAUNT],[40,t.REVERSAL],[45,t.SUPERPOWER],[50,t.TOPSY_TURVY]],[e.SINISTEA]:[[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.ABSORB],[6,t.AROMATIC_MIST],[12,t.MEGA_DRAIN],[24,t.SUCKER_PUNCH],[30,t.SWEET_SCENT],[36,t.GIGA_DRAIN],[42,t.NASTY_PLOT],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.SHELL_SMASH]],[e.POLTEAGEIST]:[[Ae,t.TEATIME],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.AROMATIC_MIST],[1,t.STRENGTH_SAP],[18,t.PROTECT],[24,t.SUCKER_PUNCH],[30,t.SWEET_SCENT],[36,t.GIGA_DRAIN],[42,t.NASTY_PLOT],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.SHELL_SMASH],[66,t.CURSE]],[e.HATENNA]:[[1,t.CONFUSION],[1,t.PLAY_NICE],[5,t.LIFE_DEW],[10,t.DISARMING_VOICE],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[35,t.CALM_MIND],[40,t.PSYCHIC],[45,t.HEALING_WISH]],[e.HATTREM]:[[Ae,t.BRUTAL_SWING],[1,t.CONFUSION],[1,t.DISARMING_VOICE],[1,t.PLAY_NICE],[1,t.LIFE_DEW],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[37,t.CALM_MIND],[44,t.PSYCHIC],[51,t.HEALING_WISH]],[e.HATTERENE]:[[Ae,t.PSYCHO_CUT],[1,t.CONFUSION],[1,t.DISARMING_VOICE],[1,t.PLAY_NICE],[1,t.BRUTAL_SWING],[1,t.LIFE_DEW],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[37,t.CALM_MIND],[46,t.PSYCHIC],[55,t.HEALING_WISH],[64,t.MAGIC_POWDER]],[e.IMPIDIMP]:[[1,t.FAKE_OUT],[1,t.CONFIDE],[4,t.BITE],[8,t.FLATTER],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[33,t.DARK_PULSE],[36,t.NASTY_PLOT],[40,t.PLAY_ROUGH],[44,t.FOUL_PLAY]],[e.MORGREM]:[[Ae,t.FALSE_SURRENDER],[1,t.BITE],[1,t.FAKE_OUT],[1,t.FLATTER],[1,t.CONFIDE],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[35,t.DARK_PULSE],[40,t.NASTY_PLOT],[46,t.PLAY_ROUGH],[52,t.FOUL_PLAY]],[e.GRIMMSNARL]:[[Ae,t.SPIRIT_BREAK],[1,t.BITE],[1,t.FAKE_OUT],[1,t.FLATTER],[1,t.BULK_UP],[1,t.CONFIDE],[1,t.FALSE_SURRENDER],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[35,t.DARK_PULSE],[40,t.NASTY_PLOT],[48,t.PLAY_ROUGH],[56,t.FOUL_PLAY],[64,t.HAMMER_ARM]],[e.OBSTAGOON]:[[Ae,t.OBSTRUCT],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.LEER],[1,t.SUBMISSION],[1,t.LICK],[1,t.CROSS_CHOP],[1,t.NIGHT_SLASH],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[9,t.SNARL],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[35,t.SCARY_FACE],[42,t.COUNTER],[49,t.TAUNT],[56,t.DOUBLE_EDGE]],[e.PERRSERKER]:[[Ae,t.IRON_HEAD],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.IRON_DEFENSE],[1,t.METAL_BURST],[1,t.HONE_CLAWS],[12,t.PAY_DAY],[16,t.METAL_CLAW],[20,t.TAUNT],[24,t.SWAGGER],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.SLASH],[48,t.METAL_SOUND],[54,t.THRASH]],[e.CURSOLA]:[[1,t.TACKLE],[1,t.DISABLE],[1,t.HARDEN],[1,t.PERISH_SONG],[1,t.ASTONISH],[15,t.SPITE],[20,t.ANCIENT_POWER],[25,t.HEX],[30,t.CURSE],[35,t.STRENGTH_SAP],[40,t.POWER_GEM],[45,t.NIGHT_SHADE],[50,t.GRUDGE],[55,t.MIRROR_COAT]],[e.SIRFETCHD]:[[Ae,t.IRON_DEFENSE],[1,t.SAND_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.FURY_CUTTER],[1,t.FIRST_IMPRESSION],[15,t.ROCK_SMASH],[20,t.BRUTAL_SWING],[25,t.DETECT],[30,t.KNOCK_OFF],[35,t.DEFOG],[40,t.BRICK_BREAK],[45,t.SWORDS_DANCE],[50,t.SLAM],[55,t.LEAF_BLADE],[60,t.FINAL_GAMBIT],[65,t.BRAVE_BIRD],[70,t.METEOR_ASSAULT]],[e.MR_RIME]:[[1,t.POUND],[1,t.BARRIER],[1,t.TICKLE],[1,t.MIMIC],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.PROTECT],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.RAPID_SPIN],[1,t.ROLE_PLAY],[1,t.RECYCLE],[1,t.SLACK_OFF],[1,t.FAKE_TEARS],[1,t.BLOCK],[1,t.COPYCAT],[1,t.ICE_SHARD],[1,t.AFTER_YOU],[1,t.MISTY_TERRAIN],[1,t.DAZZLING_GLEAM],[12,t.CONFUSION],[16,t.ALLY_SWITCH],[20,t.ICY_WIND],[24,t.DOUBLE_KICK],[28,t.PSYBEAM],[32,t.HYPNOSIS],[36,t.MIRROR_COAT],[40,t.SUCKER_PUNCH],[44,t.FREEZE_DRY],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.RUNERIGUS]:[[Ae,t.SHADOW_CLAW],[1,t.NIGHT_SHADE],[1,t.HAZE],[1,t.PROTECT],[1,t.SCARY_FACE],[1,t.ASTONISH],[12,t.DISABLE],[16,t.BRUTAL_SWING],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.SLAM],[38,t.CURSE],[44,t.SHADOW_BALL],[50,t.EARTHQUAKE],[56,t.GUARD_SPLIT],[56,t.POWER_SPLIT],[62,t.DESTINY_BOND]],[e.MILCERY]:[[1,t.TACKLE],[1,t.AROMATIC_MIST],[5,t.SWEET_KISS],[10,t.SWEET_SCENT],[15,t.DRAINING_KISS],[20,t.AROMATHERAPY],[25,t.ATTRACT],[30,t.ACID_ARMOR],[35,t.DAZZLING_GLEAM],[40,t.RECOVER],[45,t.MISTY_TERRAIN],[50,t.ENTRAINMENT]],[e.ALCREMIE]:[[Ae,t.DECORATE],[1,t.TACKLE],[1,t.SWEET_KISS],[1,t.SWEET_SCENT],[1,t.AROMATIC_MIST],[15,t.DRAINING_KISS],[20,t.AROMATHERAPY],[25,t.ATTRACT],[30,t.ACID_ARMOR],[35,t.DAZZLING_GLEAM],[40,t.RECOVER],[45,t.MISTY_TERRAIN],[50,t.ENTRAINMENT]],[e.FALINKS]:[[1,t.TACKLE],[1,t.PROTECT],[5,t.ROCK_SMASH],[10,t.FOCUS_ENERGY],[15,t.HEADBUTT],[20,t.BULK_UP],[25,t.ENDURE],[30,t.REVERSAL],[35,t.FIRST_IMPRESSION],[40,t.NO_RETREAT],[45,t.IRON_DEFENSE],[50,t.CLOSE_COMBAT],[55,t.MEGAHORN],[60,t.COUNTER]],[e.PINCURCHIN]:[[1,t.PECK],[1,t.THUNDER_SHOCK],[5,t.WATER_GUN],[10,t.CHARGE],[15,t.FURY_ATTACK],[20,t.SPARK],[25,t.BUBBLE_BEAM],[30,t.RECOVER],[35,t.CURSE],[40,t.ELECTRIC_TERRAIN],[45,t.POISON_JAB],[50,t.ZING_ZAP],[55,t.ACUPRESSURE],[60,t.DISCHARGE]],[e.SNOM]:[[1,t.POWDER_SNOW],[1,t.STRUGGLE_BUG]],[e.FROSMOTH]:[[Ae,t.ICY_WIND],[1,t.POWDER_SNOW],[1,t.ATTRACT],[1,t.HELPING_HAND],[1,t.STRUGGLE_BUG],[4,t.STUN_SPORE],[8,t.INFESTATION],[12,t.MIST],[16,t.DEFOG],[21,t.FEATHER_DANCE],[24,t.AURORA_BEAM],[28,t.SNOWSCAPE],[32,t.BUG_BUZZ],[36,t.AURORA_VEIL],[40,t.BLIZZARD],[44,t.TAILWIND],[48,t.WIDE_GUARD],[52,t.QUIVER_DANCE]],[e.STONJOURNER]:[[1,t.ROCK_THROW],[1,t.BLOCK],[6,t.ROCK_POLISH],[12,t.ROCK_TOMB],[18,t.GRAVITY],[24,t.STOMP],[30,t.STEALTH_ROCK],[36,t.ROCK_SLIDE],[42,t.BODY_SLAM],[48,t.WIDE_GUARD],[54,t.HEAVY_SLAM],[60,t.STONE_EDGE],[66,t.MEGA_KICK]],[e.EISCUE]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.MIST],[12,t.WEATHER_BALL],[18,t.ICY_WIND],[24,t.HEADBUTT],[30,t.AMNESIA],[36,t.FREEZE_DRY],[42,t.SNOWSCAPE],[48,t.AURORA_VEIL],[54,t.SURF],[60,t.BLIZZARD]],[e.INDEEDEE]:[[1,t.STORED_POWER],[1,t.PLAY_NICE],[5,t.ENCORE],[10,t.DISARMING_VOICE],[15,t.PSYBEAM],[20,t.HELPING_HAND],[25,t.AFTER_YOU],[30,t.HEALING_WISH],[35,t.PSYCHIC],[40,t.CALM_MIND],[45,t.POWER_SPLIT],[50,t.PSYCHIC_TERRAIN],[55,t.LAST_RESORT]],[e.MORPEKO]:[[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[5,t.LEER],[10,t.POWER_TRIP],[15,t.QUICK_ATTACK],[20,t.FLATTER],[25,t.BITE],[30,t.SPARK],[35,t.TORMENT],[40,t.AGILITY],[45,t.BULLET_SEED],[50,t.CRUNCH],[55,t.AURA_WHEEL],[60,t.THRASH]],[e.CUFANT]:[[1,t.TACKLE],[1,t.GROWL],[5,t.ROLLOUT],[10,t.ROCK_SMASH],[15,t.BULLDOZE],[20,t.STOMP],[25,t.IRON_DEFENSE],[30,t.DIG],[35,t.STRENGTH],[40,t.IRON_HEAD],[45,t.PLAY_ROUGH],[50,t.HIGH_HORSEPOWER],[55,t.SUPERPOWER]],[e.COPPERAJAH]:[[Ae,t.HEAVY_SLAM],[1,t.TACKLE],[1,t.GROWL],[1,t.ROLLOUT],[1,t.ROCK_SMASH],[15,t.BULLDOZE],[20,t.STOMP],[25,t.IRON_DEFENSE],[30,t.DIG],[37,t.STRENGTH],[44,t.IRON_HEAD],[51,t.PLAY_ROUGH],[58,t.HIGH_HORSEPOWER],[65,t.SUPERPOWER]],[e.DRACOZOLT]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[7,t.CHARGE],[14,t.AERIAL_ACE],[21,t.ANCIENT_POWER],[28,t.PLUCK],[35,t.DRAGON_TAIL],[42,t.STOMP],[49,t.SLAM],[56,t.DISCHARGE],[63,t.BOLT_BEAK],[70,t.DRAGON_PULSE],[77,t.DRAGON_RUSH]],[e.ARCTOZOLT]:[[1,t.THUNDER_SHOCK],[1,t.POWDER_SNOW],[7,t.CHARGE],[14,t.ECHOED_VOICE],[21,t.ANCIENT_POWER],[28,t.PLUCK],[35,t.AVALANCHE],[42,t.FREEZE_DRY],[49,t.SLAM],[56,t.DISCHARGE],[63,t.BOLT_BEAK],[70,t.ICICLE_CRASH],[77,t.BLIZZARD]],[e.DRACOVISH]:[[1,t.TACKLE],[1,t.WATER_GUN],[7,t.PROTECT],[14,t.BRUTAL_SWING],[21,t.ANCIENT_POWER],[28,t.BITE],[35,t.DRAGON_BREATH],[42,t.STOMP],[49,t.SUPER_FANG],[56,t.CRUNCH],[63,t.FISHIOUS_REND],[70,t.DRAGON_PULSE],[77,t.DRAGON_RUSH]],[e.ARCTOVISH]:[[1,t.WATER_GUN],[1,t.POWDER_SNOW],[7,t.PROTECT],[14,t.ICY_WIND],[21,t.ANCIENT_POWER],[28,t.BITE],[35,t.AURORA_VEIL],[42,t.FREEZE_DRY],[49,t.SUPER_FANG],[56,t.CRUNCH],[63,t.FISHIOUS_REND],[70,t.ICICLE_CRASH],[77,t.BLIZZARD]],[e.DURALUDON]:[[1,t.LEER],[1,t.METAL_CLAW],[6,t.ROCK_SMASH],[12,t.HONE_CLAWS],[18,t.METAL_SOUND],[24,t.BREAKING_SWIPE],[30,t.DRAGON_TAIL],[36,t.IRON_DEFENSE],[42,t.LASER_FOCUS],[48,t.DRAGON_CLAW],[54,t.FLASH_CANNON],[60,t.METAL_BURST],[66,t.HYPER_BEAM]],[e.DREEPY]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.ASTONISH],[1,t.INFESTATION]],[e.DRAKLOAK]:[[Ae,t.DRAGON_PULSE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.ASTONISH],[1,t.INFESTATION],[6,t.LOCK_ON],[12,t.ASSURANCE],[18,t.HEX],[24,t.AGILITY],[30,t.DOUBLE_HIT],[36,t.U_TURN],[42,t.DRAGON_DANCE],[48,t.PHANTOM_FORCE],[54,t.TAKE_DOWN],[61,t.DRAGON_RUSH],[66,t.DOUBLE_EDGE],[72,t.LAST_RESORT]],[e.DRAGAPULT]:[[Ae,t.DRAGON_DARTS],[Z,t.DRAGON_PULSE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.DRAGON_BREATH],[1,t.ASTONISH],[1,t.INFESTATION],[6,t.LOCK_ON],[12,t.ASSURANCE],[18,t.HEX],[24,t.AGILITY],[30,t.DOUBLE_HIT],[36,t.U_TURN],[42,t.DRAGON_DANCE],[48,t.PHANTOM_FORCE],[54,t.TAKE_DOWN],[63,t.DRAGON_RUSH],[70,t.DOUBLE_EDGE],[78,t.LAST_RESORT]],[e.ZACIAN]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.QUICK_GUARD],[1,t.SACRED_SWORD],[11,t.SLASH],[22,t.SWORDS_DANCE],[33,t.IRON_HEAD],[44,t.NOBLE_ROAR],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]],[e.ZAMAZENTA]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.WIDE_GUARD],[11,t.SLASH],[22,t.IRON_DEFENSE],[33,t.IRON_HEAD],[44,t.METAL_BURST],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]],[e.ETERNATUS]:[[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.POISON_TAIL],[1,t.DRAGON_TAIL],[8,t.TOXIC],[16,t.VENOSHOCK],[24,t.DRAGON_DANCE],[32,t.CROSS_POISON],[40,t.DRAGON_PULSE],[48,t.FLAMETHROWER],[56,t.DYNAMAX_CANNON],[64,t.COSMIC_POWER],[72,t.RECOVER],[80,t.HYPER_BEAM],[88,t.OUTRAGE]],[e.KUBFU]:[[1,t.LEER],[1,t.ROCK_SMASH],[4,t.ENDURE],[8,t.FOCUS_ENERGY],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],[e.URSHIFU]:[[Ae,t.WICKED_BLOW],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.SUCKER_PUNCH],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],[e.ZARUDE]:[[1,t.SCRATCH],[1,t.BIND],[6,t.LEER],[12,t.VINE_WHIP],[18,t.GROWTH],[24,t.FURY_SWIPES],[30,t.SCARY_FACE],[36,t.GRASS_KNOT],[42,t.BITE],[48,t.U_TURN],[54,t.SWAGGER],[60,t.ENERGY_BALL],[66,t.SYNTHESIS],[72,t.HAMMER_ARM],[78,t.THRASH],[84,t.POWER_WHIP],[90,t.JUNGLE_HEALING]],[e.REGIELEKI]:[[1,t.THUNDER_SHOCK],[1,t.RAPID_SPIN],[6,t.ELECTROWEB],[12,t.ANCIENT_POWER],[18,t.SHOCK_WAVE],[24,t.THUNDER_WAVE],[30,t.EXTREME_SPEED],[36,t.THUNDER_CAGE],[42,t.THUNDERBOLT],[48,t.MAGNET_RISE],[54,t.THRASH],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGIDRAGO]:[[1,t.TWISTER],[6,t.BITE],[12,t.ANCIENT_POWER],[18,t.DRAGON_BREATH],[30,t.CRUNCH],[36,t.DRAGON_CLAW],[42,t.HAMMER_ARM],[48,t.DRAGON_DANCE],[54,t.THRASH],[60,t.FOCUS_ENERGY],[66,t.DRAGON_ENERGY],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.GLASTRIER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[6,t.DOUBLE_KICK],[12,t.AVALANCHE],[18,t.STOMP],[24,t.TORMENT],[30,t.MIST],[36,t.ICICLE_CRASH],[42,t.TAKE_DOWN],[48,t.IRON_DEFENSE],[54,t.THRASH],[60,t.TAUNT],[66,t.DOUBLE_EDGE],[72,t.SWORDS_DANCE]],[e.SPECTRIER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[6,t.DOUBLE_KICK],[12,t.HEX],[18,t.STOMP],[24,t.CONFUSE_RAY],[30,t.HAZE],[36,t.SHADOW_BALL],[42,t.TAKE_DOWN],[48,t.AGILITY],[54,t.THRASH],[60,t.DISABLE],[66,t.DOUBLE_EDGE],[72,t.NASTY_PLOT]],[e.CALYREX]:[[1,t.POUND],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.GRASSY_TERRAIN],[40,t.PSYCHIC_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]],[e.WYRDEER]:[[Ae,t.PSYSHIELD_BASH],[1,t.TACKLE],[1,t.ME_FIRST],[3,t.LEER],[7,t.ASTONISH],[10,t.HYPNOSIS],[13,t.STOMP],[16,t.SAND_ATTACK],[21,t.TAKE_DOWN],[23,t.CONFUSE_RAY],[27,t.CALM_MIND],[32,t.ROLE_PLAY],[37,t.ZEN_HEADBUTT],[49,t.IMPRISON],[55,t.DOUBLE_EDGE],[62,t.MEGAHORN]],[e.KLEAVOR]:[[Ae,t.STONE_AXE],[1,t.WING_ATTACK],[1,t.AIR_SLASH],[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.FURY_CUTTER],[8,t.FALSE_SWIPE],[12,t.SMACK_DOWN],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.AGILITY],[36,t.ROCK_SLIDE],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.URSALUNA]:[[Ae,t.HEADLONG_RUSH],[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[1,t.FAKE_TEARS],[1,t.CHARM],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.HIGH_HORSEPOWER],[56,t.THRASH],[64,t.HAMMER_ARM]],[e.BASCULEGION]:[[Z,t.FINAL_GAMBIT],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SHADOW_BALL],[1,t.PHANTOM_FORCE],[4,t.TACKLE],[8,t.FLAIL],[12,t.AQUA_JET],[16,t.BITE],[20,t.SCARY_FACE],[24,t.HEADBUTT],[28,t.SOAK],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.UPROAR],[44,t.WAVE_CRASH],[48,t.THRASH],[52,t.DOUBLE_EDGE],[56,t.HEAD_SMASH]],[e.SNEASLER]:[[Ae,t.DIRE_CLAW],[1,t.SCRATCH],[1,t.LEER],[1,t.ROCK_SMASH],[1,t.FLING],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.POISON_JAB],[30,t.BRICK_BREAK],[36,t.HONE_CLAWS],[42,t.SLASH],[48,t.AGILITY],[54,t.SCREECH],[60,t.CLOSE_COMBAT]],[e.OVERQWIL]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.BITE],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.BARB_BARRAGE],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.CRUNCH],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.ENAMORUS]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.TORMENT],[10,t.FLATTER],[15,t.TWISTER],[20,t.DRAINING_KISS],[25,t.IRON_DEFENSE],[30,t.IMPRISON],[35,t.MYSTICAL_FIRE],[40,t.DAZZLING_GLEAM],[45,t.EXTRASENSORY],[50,t.UPROAR],[55,t.SUPERPOWER],[60,t.HEALING_WISH],[65,t.MOONBLAST],[70,t.OUTRAGE],[75,t.SPRINGTIDE_STORM]],[e.SPRIGATITO]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[17,t.SEED_BOMB],[21,t.U_TURN],[25,t.WORRY_SEED],[28,t.SLASH],[32,t.ENERGY_BALL],[36,t.PLAY_ROUGH]],[e.FLORAGATO]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[20,t.SEED_BOMB],[24,t.U_TURN],[28,t.WORRY_SEED],[33,t.SLASH],[38,t.ENERGY_BALL],[42,t.PLAY_ROUGH],[46,t.LEAF_STORM]],[e.MEOWSCARADA]:[[Ae,t.FLOWER_TRICK],[Z,t.DOUBLE_TEAM],[Z,t.TRICK],[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[20,t.SEED_BOMB],[24,t.U_TURN],[29,t.WORRY_SEED],[33,t.SLASH],[38,t.NIGHT_SLASH],[42,t.ENERGY_BALL],[47,t.PLAY_ROUGH],[52,t.KNOCK_OFF],[58,t.GRASSY_TERRAIN],[64,t.LEAF_STORM]],[e.FUECOCO]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.ROUND],[12,t.BITE],[15,t.INCINERATE],[17,t.YAWN],[21,t.SNARL],[25,t.ROAR],[28,t.FLAMETHROWER],[32,t.HYPER_VOICE],[36,t.FIRE_BLAST]],[e.CROCALOR]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.LICK],[10,t.ROUND],[12,t.BITE],[15,t.YAWN],[17,t.INCINERATE],[24,t.SNARL],[28,t.ROAR],[32,t.FLAMETHROWER],[38,t.HYPER_VOICE],[42,t.WILL_O_WISP],[47,t.FIRE_BLAST]],[e.SKELEDIRGE]:[[Ae,t.TORCH_SONG],[Z,t.SING],[Z,t.YAWN],[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.LICK],[10,t.ROUND],[12,t.SCARY_FACE],[15,t.BITE],[17,t.INCINERATE],[24,t.SNARL],[28,t.ROAR],[32,t.FLAMETHROWER],[38,t.SHADOW_BALL],[42,t.HYPER_VOICE],[47,t.WILL_O_WISP],[47,t.HEX],[58,t.FIRE_BLAST],[64,t.OVERHEAT]],[e.QUAXLY]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.AQUA_CUTTER],[24,t.AIR_SLASH],[28,t.FOCUS_ENERGY],[31,t.ACROBATICS],[35,t.LIQUIDATION]],[e.QUAXWELL]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DOUBLE_HIT],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.WATER_PULSE],[19,t.LOW_SWEEP],[23,t.AQUA_CUTTER],[27,t.AIR_SLASH],[32,t.FOCUS_ENERGY],[38,t.ACROBATICS],[43,t.LIQUIDATION],[48,t.FEATHER_DANCE]],[e.QUAQUAVAL]:[[Ae,t.AQUA_STEP],[Z,t.COUNTER],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DOUBLE_HIT],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.WATER_PULSE],[17,t.LOW_SWEEP],[21,t.AQUA_CUTTER],[27,t.AIR_SLASH],[32,t.FOCUS_ENERGY],[38,t.MEGA_KICK],[43,t.ACROBATICS],[47,t.LIQUIDATION],[52,t.FEATHER_DANCE],[58,t.CLOSE_COMBAT],[64,t.WAVE_CRASH]],[e.LECHONK]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.DISARMING_VOICE],[8,t.ECHOED_VOICE],[12,t.MUD_SHOT],[15,t.COVET],[17,t.DIG],[21,t.HEADBUTT],[24,t.YAWN],[27,t.TAKE_DOWN],[30,t.WORK_UP],[32,t.UPROAR],[35,t.DOUBLE_EDGE]],[e.OINKOLOGNE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.DISARMING_VOICE],[8,t.ECHOED_VOICE],[12,t.MUD_SHOT],[15,t.COVET],[17,t.DIG],[23,t.HEADBUTT],[26,t.TAKE_DOWN],[27,t.YAWN],[34,t.WORK_UP],[38,t.UPROAR],[42,t.DOUBLE_EDGE],[48,t.EARTH_POWER],[54,t.BELCH]],[e.TAROUNTULA]:[[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.STRUGGLE_BUG],[8,t.ASSURANCE],[11,t.FEINT],[14,t.BUG_BITE],[18,t.BLOCK],[22,t.COUNTER],[25,t.HEADBUTT],[29,t.STICKY_WEB],[33,t.GASTRO_ACID],[36,t.CIRCLE_THROW],[40,t.THROAT_CHOP],[44,t.SKITTER_SMACK]],[e.SPIDOPS]:[[Ae,t.SILK_TRAP],[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.STRUGGLE_BUG],[8,t.ASSURANCE],[11,t.FEINT],[14,t.BUG_BITE],[19,t.BLOCK],[24,t.COUNTER],[28,t.HEADBUTT],[33,t.STICKY_WEB],[37,t.GASTRO_ACID],[41,t.CIRCLE_THROW],[45,t.THROAT_CHOP],[49,t.SKITTER_SMACK]],[e.NYMBLE]:[[1,t.TACKLE],[1,t.LEER],[4,t.STRUGGLE_BUG],[6,t.ASTONISH],[9,t.ASSURANCE],[11,t.DOUBLE_KICK],[14,t.SCREECH],[18,t.ENDURE],[22,t.BUG_BITE],[26,t.FEINT],[30,t.AGILITY],[38,t.SUCKER_PUNCH],[41,t.FIRST_IMPRESSION]],[e.LOKIX]:[[Ae,t.LUNGE],[1,t.TACKLE],[1,t.LEER],[1,t.LOW_KICK],[1,t.DETECT],[4,t.STRUGGLE_BUG],[6,t.ASTONISH],[9,t.ASSURANCE],[11,t.DOUBLE_KICK],[14,t.SCREECH],[18,t.ENDURE],[22,t.BUG_BITE],[28,t.FEINT],[32,t.AGILITY],[36,t.THROAT_CHOP],[40,t.SUCKER_PUNCH],[44,t.FIRST_IMPRESSION],[48,t.BOUNCE],[53,t.AXE_KICK]],[e.PAWMI]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[27,t.THUNDER_WAVE],[31,t.ENTRAINMENT],[35,t.SLAM],[38,t.DISCHARGE],[40,t.AGILITY],[44,t.WILD_CHARGE]],[e.PAWMO]:[[Ae,t.ARM_THRUST],[1,t.SCRATCH],[1,t.GROWL],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[27,t.THUNDER_WAVE],[32,t.SLAM],[38,t.ENTRAINMENT],[42,t.DISCHARGE],[46,t.AGILITY],[52,t.WILD_CHARGE]],[e.PAWMOT]:[[Ae,t.REVIVAL_BLESSING],[1,t.SCRATCH],[1,t.GROWL],[1,t.WILD_CHARGE],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[25,t.ARM_THRUST],[29,t.THUNDER_WAVE],[33,t.SLAM],[39,t.ENTRAINMENT],[44,t.CLOSE_COMBAT],[49,t.DISCHARGE],[54,t.AGILITY],[60,t.DOUBLE_SHOCK]],[e.TANDEMAUS]:[[1,t.POUND],[1,t.BABY_DOLL_EYES],[5,t.ECHOED_VOICE],[8,t.HELPING_HAND],[11,t.SUPER_FANG],[14,t.DOUBLE_HIT],[18,t.BULLET_SEED],[22,t.ENCORE],[26,t.PLAY_ROUGH],[30,t.HYPER_VOICE],[33,t.CHARM],[37,t.BEAT_UP],[41,t.COPYCAT],[46,t.POPULATION_BOMB]],[e.MAUSHOLD]:[[1,t.POUND],[1,t.FOLLOW_ME],[1,t.BABY_DOLL_EYES],[1,t.TIDY_UP],[5,t.ECHOED_VOICE],[8,t.HELPING_HAND],[11,t.SUPER_FANG],[14,t.DOUBLE_HIT],[18,t.BULLET_SEED],[22,t.ENCORE],[29,t.PLAY_ROUGH],[33,t.HYPER_VOICE],[37,t.CHARM],[41,t.BEAT_UP],[46,t.COPYCAT],[53,t.POPULATION_BOMB]],[e.FIDOUGH]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[8,t.COVET],[11,t.BITE],[15,t.BABY_DOLL_EYES],[18,t.PLAY_ROUGH],[22,t.WORK_UP],[26,t.BATON_PASS],[30,t.ROAR],[33,t.DOUBLE_EDGE],[36,t.CHARM],[40,t.CRUNCH],[45,t.LAST_RESORT]],[e.DACHSBUN]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[8,t.COVET],[11,t.BITE],[15,t.BABY_DOLL_EYES],[18,t.PLAY_ROUGH],[22,t.WORK_UP],[29,t.BATON_PASS],[33,t.ROAR],[38,t.DOUBLE_EDGE],[42,t.CHARM],[47,t.CRUNCH],[53,t.LAST_RESORT]],[e.SMOLIV]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[27,t.SEED_BOMB],[30,t.ENERGY_BALL],[34,t.LEECH_SEED],[38,t.TERRAIN_PULSE]],[e.DOLLIV]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[29,t.SEED_BOMB],[34,t.ENERGY_BALL],[37,t.LEECH_SEED],[42,t.TERRAIN_PULSE]],[e.ARBOLIVA]:[[1,t.TACKLE],[1,t.SAFEGUARD],[1,t.SWEET_SCENT],[1,t.MIRROR_COAT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[29,t.SEED_BOMB],[34,t.ENERGY_BALL],[39,t.LEECH_SEED],[46,t.TERRAIN_PULSE],[52,t.PETAL_BLIZZARD],[58,t.PETAL_DANCE]],[e.SQUAWKABILLY]:[[1,t.GROWL],[1,t.PECK],[1,t.MIMIC],[6,t.QUICK_ATTACK],[10,t.TORMENT],[13,t.AERIAL_ACE],[17,t.FURY_ATTACK],[20,t.TAUNT],[24,t.UPROAR],[27,t.COPYCAT],[30,t.FLY],[34,t.FACADE],[38,t.SWAGGER],[42,t.BRAVE_BIRD],[47,t.ROOST],[52,t.REVERSAL]],[e.NACLI]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.SMACK_DOWN],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[20,t.IRON_DEFENSE],[25,t.RECOVER],[30,t.ROCK_SLIDE],[33,t.STEALTH_ROCK],[35,t.HEAVY_SLAM],[40,t.EARTHQUAKE],[45,t.STONE_EDGE]],[e.NACLSTACK]:[[Ae,t.SALT_CURE],[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.SMACK_DOWN],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[20,t.IRON_DEFENSE],[30,t.RECOVER],[34,t.ROCK_SLIDE],[38,t.STEALTH_ROCK],[41,t.HEAVY_SLAM],[45,t.EARTHQUAKE],[51,t.STONE_EDGE]],[e.GARGANACL]:[[Ae,t.HAMMER_ARM],[Z,t.IRON_DEFENSE],[1,t.TACKLE],[1,t.HARDEN],[1,t.BLOCK],[1,t.ROCK_BLAST],[1,t.SMACK_DOWN],[1,t.WIDE_GUARD],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.ROCK_TOMB],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[24,t.SALT_CURE],[30,t.RECOVER],[34,t.ROCK_SLIDE],[40,t.STEALTH_ROCK],[44,t.HEAVY_SLAM],[49,t.EARTHQUAKE],[54,t.STONE_EDGE],[60,t.EXPLOSION]],[e.CHARCADET]:[[1,t.LEER],[1,t.EMBER],[1,t.ASTONISH],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME]],[e.ARMAROUGE]:[[Ae,t.PSYSHOCK],[1,t.LEER],[1,t.EMBER],[1,t.ASTONISH],[1,t.WIDE_GUARD],[1,t.MYSTICAL_FIRE],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME],[37,t.CALM_MIND],[42,t.ALLY_SWITCH],[48,t.FLAMETHROWER],[56,t.EXPANDING_FORCE],[62,t.ARMOR_CANNON]],[e.CERULEDGE]:[[Ae,t.SHADOW_CLAW],[Z,t.NIGHT_SLASH],[Z,t.SHADOW_SNEAK],[Z,t.QUICK_GUARD],[Z,t.SOLAR_BLADE],[1,t.EMBER],[1,t.LEER],[1,t.ASTONISH],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME],[37,t.SWORDS_DANCE],[42,t.ALLY_SWITCH],[48,t.BITTER_BLADE],[56,t.PSYCHO_CUT],[62,t.FLARE_BLITZ]],[e.TADBULB]:[[1,t.TACKLE],[1,t.MUD_SLAP],[7,t.THUNDER_SHOCK],[11,t.WATER_GUN],[17,t.CHARGE],[21,t.SPARK],[24,t.MUD_SHOT],[25,t.FLAIL],[32,t.DISCHARGE],[36,t.WEATHER_BALL],[40,t.ELECTRIC_TERRAIN],[45,t.SUCKER_PUNCH],[50,t.ZAP_CANNON]],[e.BELLIBOLT]:[[1,t.TACKLE],[1,t.MUD_SLAP],[1,t.SLACK_OFF],[7,t.THUNDER_SHOCK],[11,t.WATER_GUN],[17,t.CHARGE],[21,t.SPARK],[24,t.MUD_SHOT],[25,t.FLAIL],[32,t.DISCHARGE],[36,t.WEATHER_BALL],[40,t.ELECTRIC_TERRAIN],[45,t.SUCKER_PUNCH],[50,t.ZAP_CANNON]],[e.WATTREL]:[[1,t.GROWL],[1,t.PECK],[4,t.THUNDER_SHOCK],[7,t.QUICK_ATTACK],[11,t.PLUCK],[15,t.SPARK],[19,t.UPROAR],[23,t.ROOST],[27,t.DUAL_WINGBEAT],[32,t.AGILITY],[37,t.VOLT_SWITCH],[43,t.DISCHARGE]],[e.KILOWATTREL]:[[Ae,t.ELECTRO_BALL],[1,t.GROWL],[1,t.PECK],[4,t.THUNDER_SHOCK],[7,t.QUICK_ATTACK],[11,t.PLUCK],[15,t.SPARK],[19,t.UPROAR],[24,t.ROOST],[30,t.DUAL_WINGBEAT],[36,t.AGILITY],[43,t.VOLT_SWITCH],[48,t.DISCHARGE],[55,t.HURRICANE]],[e.MASCHIFF]:[[1,t.TACKLE],[1,t.LEER],[1,t.SCARY_FACE],[4,t.LICK],[7,t.SNARL],[10,t.HONE_CLAWS],[14,t.BITE],[18,t.ROAR],[22,t.HEADBUTT],[26,t.PAYBACK],[31,t.CRUNCH],[35,t.SWAGGER],[39,t.REVERSAL],[43,t.JAW_LOCK],[49,t.DOUBLE_EDGE]],[e.MABOSSTIFF]:[[Ae,t.COMEUPPANCE],[1,t.TACKLE],[1,t.LEER],[1,t.SCARY_FACE],[4,t.LICK],[7,t.SNARL],[10,t.HONE_CLAWS],[14,t.BITE],[18,t.ROAR],[22,t.HEADBUTT],[26,t.PAYBACK],[34,t.CRUNCH],[39,t.SWAGGER],[43,t.REVERSAL],[48,t.JAW_LOCK],[55,t.DOUBLE_EDGE],[60,t.OUTRAGE]],[e.SHROODLE]:[[1,t.SCRATCH],[1,t.LEER],[5,t.ACID_SPRAY],[8,t.BITE],[8,t.FURY_SWIPES],[11,t.SWITCHEROO],[14,t.POISON_FANG],[18,t.FLATTER],[21,t.SLASH],[25,t.U_TURN],[29,t.POISON_JAB],[33,t.TAUNT],[36,t.SUBSTITUTE],[40,t.KNOCK_OFF],[45,t.GUNK_SHOT]],[e.GRAFAIAI]:[[Ae,t.DOODLE],[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[5,t.ACID_SPRAY],[8,t.FURY_SWIPES],[11,t.SWITCHEROO],[14,t.POISON_FANG],[18,t.FLATTER],[21,t.SLASH],[25,t.U_TURN],[33,t.POISON_JAB],[37,t.TAUNT],[40,t.SUBSTITUTE],[45,t.KNOCK_OFF],[51,t.GUNK_SHOT]],[e.BRAMBLIN]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ASTONISH],[5,t.ABSORB],[9,t.RAPID_SPIN],[13,t.BULLET_SEED],[17,t.INFESTATION],[21,t.HEX],[25,t.MEGA_DRAIN],[29,t.DISABLE],[35,t.PHANTOM_FORCE],[40,t.GIGA_DRAIN],[45,t.CURSE],[50,t.PAIN_SPLIT],[55,t.POWER_WHIP]],[e.BRAMBLEGHAST]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ASTONISH],[5,t.ABSORB],[9,t.RAPID_SPIN],[13,t.BULLET_SEED],[17,t.INFESTATION],[21,t.HEX],[25,t.MEGA_DRAIN],[29,t.DISABLE],[35,t.PHANTOM_FORCE],[40,t.GIGA_DRAIN],[45,t.CURSE],[50,t.PAIN_SPLIT],[55,t.POWER_WHIP]],[e.TOEDSCOOL]:[[1,t.WRAP],[1,t.MUD_SLAP],[4,t.ABSORB],[8,t.POISON_POWDER],[8,t.STUN_SPORE],[12,t.SUPERSONIC],[15,t.TACKLE],[16,t.MEGA_DRAIN],[20,t.SCREECH],[24,t.MUD_SHOT],[28,t.HEX],[32,t.SEED_BOMB],[36,t.SPORE],[40,t.GROWTH],[44,t.GIGA_DRAIN],[48,t.EARTH_POWER],[52,t.POWER_WHIP]],[e.TOEDSCRUEL]:[[1,t.WRAP],[1,t.MUD_SLAP],[1,t.REFLECT_TYPE],[4,t.ABSORB],[8,t.POISON_POWDER],[8,t.STUN_SPORE],[12,t.SUPERSONIC],[15,t.TACKLE],[16,t.MEGA_DRAIN],[20,t.SCREECH],[24,t.MUD_SHOT],[28,t.HEX],[34,t.SEED_BOMB],[40,t.SPORE],[44,t.GROWTH],[48,t.GIGA_DRAIN],[54,t.EARTH_POWER],[58,t.POWER_WHIP]],[e.KLAWF]:[[1,t.ROCK_THROW],[6,t.HARDEN],[9,t.ROCK_SMASH],[13,t.ROCK_TOMB],[17,t.METAL_CLAW],[21,t.PROTECT],[24,t.ROCK_BLAST],[29,t.X_SCISSOR],[33,t.SWORDS_DANCE],[37,t.FLAIL],[42,t.ROCK_SLIDE],[47,t.HIGH_HORSEPOWER],[51,t.IRON_DEFENSE],[56,t.GUILLOTINE]],[e.CAPSAKID]:[[1,t.LEER],[1,t.LEAFAGE],[4,t.BITE],[10,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.SUNNY_DAY],[21,t.BULLET_SEED],[24,t.HEADBUTT],[28,t.ZEN_HEADBUTT],[38,t.CRUNCH],[44,t.SEED_BOMB],[48,t.SOLAR_BEAM]],[e.SCOVILLAIN]:[[Ae,t.FLAMETHROWER],[Ae,t.SPICY_EXTRACT],[1,t.LEER],[1,t.FIRE_FANG],[1,t.LEAFAGE],[4,t.BITE],[10,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.SUNNY_DAY],[21,t.BULLET_SEED],[24,t.HEADBUTT],[28,t.ZEN_HEADBUTT],[33,t.WORRY_SEED],[38,t.CRUNCH],[44,t.SEED_BOMB],[48,t.SOLAR_BEAM],[48,t.OVERHEAT]],[e.RELLOR]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[4,t.SAND_ATTACK],[7,t.STRUGGLE_BUG],[11,t.ROLLOUT],[15,t.MUD_SHOT],[20,t.BUG_BITE],[24,t.TAKE_DOWN],[29,t.DIG],[35,t.LUNGE]],[e.RABSCA]:[[Ae,t.REVIVAL_BLESSING],[Z,t.SAFEGUARD],[Z,t.PSYCH_UP],[1,t.TACKLE],[1,t.CONFUSION],[1,t.DEFENSE_CURL],[1,t.MUD_SHOT],[1,t.DIG],[4,t.SAND_ATTACK],[7,t.STRUGGLE_BUG],[11,t.ROLLOUT],[15,t.PSYBEAM],[20,t.BUG_BITE],[24,t.TAKE_DOWN],[29,t.EXTRASENSORY],[35,t.LUNGE],[40,t.POWER_SWAP],[40,t.GUARD_SWAP],[40,t.SPEED_SWAP],[45,t.BUG_BUZZ],[50,t.PSYCHIC]],[e.FLITTLE]:[[1,t.GROWL],[1,t.PECK],[5,t.CONFUSION],[8,t.BABY_DOLL_EYES],[11,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[19,t.PSYBEAM],[24,t.PLUCK],[29,t.AGILITY],[34,t.UPROAR]],[e.ESPATHRA]:[[Ae,t.LUMINA_CRASH],[1,t.GROWL],[1,t.PECK],[1,t.DRILL_PECK],[1,t.FEATHER_DANCE],[5,t.CONFUSION],[8,t.BABY_DOLL_EYES],[11,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[19,t.PSYBEAM],[24,t.PLUCK],[29,t.AGILITY],[34,t.UPROAR],[43,t.DAZZLING_GLEAM],[49,t.PSYCHIC],[54,t.LAST_RESORT]],[e.TINKATINK]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.TINKATUFF]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.TINKATON]:[[Ae,t.GIGATON_HAMMER],[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.WIGLETT]:[[1,t.SAND_ATTACK],[1,t.WATER_GUN],[4,t.MUD_SLAP],[8,t.WRAP],[12,t.AQUA_JET],[20,t.SLAM],[20,t.WATER_PULSE],[24,t.HEADBUTT],[28,t.DIG],[32,t.SUCKER_PUNCH],[36,t.THROAT_CHOP],[40,t.LIQUIDATION]],[e.WUGTRIO]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.WATER_GUN],[1,t.MUD_SLAP],[12,t.AQUA_JET],[16,t.SLAM],[20,t.WATER_PULSE],[24,t.HEADBUTT],[30,t.TRIPLE_DIVE],[36,t.DIG],[42,t.SUCKER_PUNCH],[48,t.THROAT_CHOP],[54,t.LIQUIDATION]],[e.BOMBIRDIER]:[[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.MEMENTO],[1,t.HONE_CLAWS],[7,t.THIEF],[11,t.ROCK_THROW],[16,t.WHIRLWIND],[20,t.PLUCK],[24,t.TORMENT],[29,t.ROCK_TOMB],[36,t.PAYBACK],[42,t.DUAL_WINGBEAT],[47,t.ROCK_SLIDE],[53,t.KNOCK_OFF],[60,t.PARTING_SHOT]],[e.FINIZEN]:[[1,t.SUPERSONIC],[1,t.WATER_GUN],[7,t.ASTONISH],[10,t.FOCUS_ENERGY],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.DIVE],[25,t.CHARM],[29,t.ACROBATICS],[34,t.ENCORE],[39,t.AQUA_TAIL],[44,t.MIST],[50,t.HYDRO_PUMP]],[e.PALAFIN]:[[Ae,t.FLIP_TURN],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.JET_PUNCH],[7,t.ASTONISH],[10,t.FOCUS_ENERGY],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.DIVE],[25,t.CHARM],[29,t.ACROBATICS],[34,t.ENCORE],[39,t.AQUA_TAIL],[44,t.MIST],[50,t.HYDRO_PUMP],[55,t.FOCUS_PUNCH],[61,t.WAVE_CRASH]],[e.VAROOM]:[[1,t.LICK],[1,t.POISON_GAS],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[41,t.UPROAR],[46,t.SPIN_OUT],[50,t.GUNK_SHOT]],[e.REVAVROOM]:[[Ae,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],[e.CYCLIZAR]:[[1,t.TACKLE],[1,t.GROWL],[7,t.RAPID_SPIN],[11,t.TAUNT],[14,t.BREAKING_SWIPE],[18,t.QUICK_ATTACK],[23,t.BITE],[27,t.U_TURN],[31,t.SHED_TAIL],[36,t.DRAGON_CLAW],[40,t.SHIFT_GEAR],[45,t.DRAGON_PULSE],[51,t.DOUBLE_EDGE],[57,t.DRAGON_RUSH]],[e.ORTHWORM]:[[1,t.TACKLE],[1,t.WRAP],[1,t.HARDEN],[7,t.MUD_SLAP],[12,t.SMACK_DOWN],[16,t.BULLDOZE],[21,t.IRON_HEAD],[26,t.TAKE_DOWN],[30,t.DIG],[34,t.SANDSTORM],[38,t.IRON_DEFENSE],[43,t.IRON_TAIL],[47,t.EARTHQUAKE],[52,t.SHED_TAIL]],[e.GLIMMET]:[[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.SMACK_DOWN],[7,t.ACID_SPRAY],[11,t.ANCIENT_POWER],[15,t.ROCK_POLISH],[18,t.STEALTH_ROCK],[22,t.VENOSHOCK],[26,t.SANDSTORM],[29,t.SELF_DESTRUCT],[33,t.ROCK_SLIDE],[37,t.POWER_GEM],[41,t.ACID_ARMOR],[46,t.SLUDGE_WAVE]],[e.GLIMMORA]:[[Ae,t.MORTAL_SPIN],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.TOXIC_SPIKES],[1,t.SMACK_DOWN],[1,t.SPIKY_SHIELD],[7,t.ACID_SPRAY],[11,t.ANCIENT_POWER],[15,t.ROCK_POLISH],[18,t.STEALTH_ROCK],[22,t.VENOSHOCK],[26,t.SANDSTORM],[29,t.SELF_DESTRUCT],[33,t.ROCK_SLIDE],[39,t.POWER_GEM],[44,t.ACID_ARMOR],[50,t.SLUDGE_WAVE]],[e.GREAVARD]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[6,t.BITE],[9,t.ROAR],[12,t.HEADBUTT],[16,t.DIG],[24,t.REST],[28,t.CRUNCH],[32,t.PLAY_ROUGH],[37,t.HELPING_HAND],[41,t.PHANTOM_FORCE],[46,t.CHARM],[52,t.DOUBLE_EDGE]],[e.HOUNDSTONE]:[[Ae,t.LAST_RESPECTS],[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[6,t.BITE],[9,t.ROAR],[12,t.HEADBUTT],[16,t.DIG],[24,t.REST],[28,t.CRUNCH],[36,t.PLAY_ROUGH],[41,t.HELPING_HAND],[46,t.PHANTOM_FORCE],[51,t.CHARM],[58,t.DOUBLE_EDGE]],[e.FLAMIGO]:[[1,t.PECK],[1,t.COPYCAT],[5,t.DOUBLE_KICK],[9,t.DETECT],[12,t.WING_ATTACK],[15,t.FOCUS_ENERGY],[18,t.LOW_KICK],[21,t.FEINT],[27,t.PAYBACK],[31,t.ROOST],[35,t.AIR_SLASH],[39,t.MEGA_KICK],[44,t.WIDE_GUARD],[48,t.THROAT_CHOP],[54,t.BRAVE_BIRD]],[e.CETODDLE]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.GROWL],[9,t.ECHOED_VOICE],[12,t.ICE_SHARD],[15,t.REST],[19,t.TAKE_DOWN],[25,t.FLAIL],[27,t.AVALANCHE],[31,t.BOUNCE],[36,t.BODY_SLAM],[40,t.AMNESIA],[44,t.ICE_SPINNER],[49,t.DOUBLE_EDGE],[53,t.BLIZZARD]],[e.CETITAN]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.GROWL],[9,t.ECHOED_VOICE],[12,t.ICE_SHARD],[15,t.REST],[19,t.TAKE_DOWN],[25,t.FLAIL],[27,t.AVALANCHE],[31,t.BOUNCE],[36,t.BODY_SLAM],[40,t.AMNESIA],[44,t.ICE_SPINNER],[49,t.DOUBLE_EDGE],[53,t.BLIZZARD]],[e.VELUZA]:[[1,t.TACKLE],[1,t.AQUA_JET],[7,t.PLUCK],[11,t.WATER_PULSE],[15,t.FOCUS_ENERGY],[20,t.SLASH],[25,t.AQUA_CUTTER],[30,t.FILLET_AWAY],[35,t.NIGHT_SLASH],[40,t.PSYCHO_CUT],[45,t.LIQUIDATION],[50,t.CRUNCH],[55,t.FINAL_GAMBIT]],[e.DONDOZO]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.WATER_GUN],[5,t.TICKLE],[10,t.FLAIL],[15,t.REST],[15,t.SLEEP_TALK],[20,t.DIVE],[25,t.NOBLE_ROAR],[30,t.SOAK],[35,t.BODY_SLAM],[40,t.AQUA_TAIL],[45,t.RAIN_DANCE],[50,t.ORDER_UP],[55,t.HEAVY_SLAM],[60,t.DOUBLE_EDGE],[65,t.WAVE_CRASH]],[e.TATSUGIRI]:[[1,t.WATER_GUN],[1,t.SPLASH],[6,t.HARDEN],[12,t.HELPING_HAND],[17,t.WATER_PULSE],[23,t.SOAK],[28,t.TAUNT],[34,t.MEMENTO],[39,t.MUDDY_WATER],[43,t.NASTY_PLOT],[47,t.MIRROR_COAT],[52,t.DRAGON_PULSE]],[e.ANNIHILAPE]:[[Ae,t.SHADOW_PUNCH],[1,t.SCRATCH],[1,t.LEER],[1,t.COUNTER],[1,t.FOCUS_ENERGY],[1,t.COVET],[1,t.FLING],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[12,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[30,t.THRASH],[35,t.RAGE_FIST],[39,t.CLOSE_COMBAT],[44,t.SCREECH],[48,t.STOMPING_TANTRUM],[53,t.OUTRAGE],[57,t.FINAL_GAMBIT]],[e.CLODSIRE]:[[Ae,t.AMNESIA],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.POISON_STING],[4,t.TOXIC_SPIKES],[8,t.MUD_SHOT],[12,t.POISON_TAIL],[16,t.SLAM],[21,t.YAWN],[24,t.POISON_JAB],[30,t.SLUDGE_WAVE],[36,t.MEGAHORN],[40,t.TOXIC],[48,t.EARTHQUAKE]],[e.FARIGIRAF]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[5,t.CONFUSION],[10,t.ASSURANCE],[14,t.STOMP],[19,t.PSYBEAM],[23,t.AGILITY],[28,t.DOUBLE_HIT],[32,t.TWIN_BEAM],[37,t.CRUNCH],[41,t.BATON_PASS],[46,t.NASTY_PLOT],[50,t.PSYCHIC]],[e.DUDUNSPARCE]:[[1,t.DEFENSE_CURL],[1,t.FLAIL],[1,t.TACKLE],[4,t.MUD_SLAP],[8,t.ROLLOUT],[12,t.GLARE],[16,t.SCREECH],[20,t.ANCIENT_POWER],[24,t.DRILL_RUN],[28,t.YAWN],[32,t.HYPER_DRILL],[36,t.ROOST],[40,t.DRAGON_RUSH],[44,t.COIL],[48,t.DOUBLE_EDGE],[52,t.ENDEAVOR],[56,t.HURRICANE],[62,t.BOOMBURST]],[e.KINGAMBIT]:[[Ae,t.KOWTOW_CLEAVE],[1,t.SCRATCH],[1,t.LEER],[1,t.FURY_CUTTER],[1,t.METAL_CLAW],[1,t.METAL_BURST],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[57,t.IRON_HEAD],[64,t.SWORDS_DANCE],[71,t.GUILLOTINE]],[e.GREAT_TUSK]:[[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.SUNNY_DAY],[7,t.BULLDOZE],[14,t.TAUNT],[21,t.RAPID_SPIN],[28,t.BRICK_BREAK],[35,t.STOMPING_TANTRUM],[42,t.KNOCK_OFF],[49,t.EARTHQUAKE],[56,t.GIGA_IMPACT],[63,t.CLOSE_COMBAT],[70,t.ENDEAVOR],[77,t.MEGAHORN],[84,t.HEAD_SMASH],[91,t.HEADLONG_RUSH]],[e.SCREAM_TAIL]:[[Z,t.SUNNY_DAY],[1,t.POUND],[1,t.SING],[1,t.DISABLE],[7,t.HOWL],[14,t.NOBLE_ROAR],[21,t.BITE],[28,t.BODY_SLAM],[35,t.REST],[42,t.PLAY_ROUGH],[49,t.HYPER_VOICE],[56,t.PSYCHIC_FANGS],[63,t.CRUNCH],[70,t.WISH],[77,t.GYRO_BALL],[84,t.PERISH_SONG],[91,t.BOOMBURST]],[e.BRUTE_BONNET]:[[Z,t.SUNNY_DAY],[1,t.ABSORB],[1,t.GROWTH],[1,t.ASTONISH],[7,t.STUN_SPORE],[14,t.MEGA_DRAIN],[21,t.SYNTHESIS],[28,t.CLEAR_SMOG],[35,t.PAYBACK],[42,t.THRASH],[49,t.GIGA_DRAIN],[56,t.SUCKER_PUNCH],[63,t.SPORE],[70,t.INGRAIN],[77,t.RAGE_POWDER],[91,t.SOLAR_BEAM]],[e.FLUTTER_MANE]:[[Z,t.SUNNY_DAY],[1,t.CONFUSE_RAY],[1,t.SPITE],[1,t.ASTONISH],[1,t.PSYBEAM],[14,t.MEAN_LOOK],[21,t.MEMENTO],[28,t.WISH],[35,t.DAZZLING_GLEAM],[42,t.SHADOW_BALL],[49,t.MYSTICAL_FIRE],[56,t.POWER_GEM],[63,t.PSYSHOCK],[70,t.PHANTOM_FORCE],[77,t.PAIN_SPLIT],[84,t.MOONBLAST],[91,t.PERISH_SONG]],[e.SLITHER_WING]:[[Z,t.SUNNY_DAY],[1,t.GUST],[1,t.EMBER],[1,t.BUG_BITE],[7,t.POISON_POWDER],[7,t.STUN_SPORE],[14,t.FLAME_CHARGE],[21,t.STOMP],[28,t.LOW_SWEEP],[35,t.MORNING_SUN],[42,t.LUNGE],[49,t.SUPERPOWER],[56,t.BULK_UP],[63,t.DUAL_WINGBEAT],[70,t.FIRST_IMPRESSION],[77,t.WHIRLWIND],[84,t.LEECH_LIFE],[91,t.THRASH]],[e.SANDY_SHOCKS]:[[Z,t.SUNNY_DAY],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ELECTRIC_TERRAIN],[7,t.SPARK],[14,t.BULLDOZE],[21,t.CHARGE_BEAM],[28,t.TRI_ATTACK],[35,t.SCREECH],[42,t.HEAVY_SLAM],[49,t.METAL_SOUND],[56,t.DISCHARGE],[63,t.EARTH_POWER],[70,t.MIRROR_COAT],[77,t.GRAVITY],[84,t.ZAP_CANNON],[91,t.MAGNETIC_FLUX]],[e.IRON_TREADS]:[[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ELECTRIC_TERRAIN],[7,t.BULLDOZE],[21,t.RAPID_SPIN],[28,t.IRON_HEAD],[35,t.STOMPING_TANTRUM],[42,t.KNOCK_OFF],[49,t.EARTHQUAKE],[56,t.HEAVY_SLAM],[63,t.WILD_CHARGE],[70,t.ENDEAVOR],[77,t.MEGAHORN],[84,t.GIGA_IMPACT],[91,t.STEEL_ROLLER]],[e.IRON_BUNDLE]:[[Z,t.ELECTRIC_TERRAIN],[1,t.PRESENT],[1,t.WATER_GUN],[7,t.POWDER_SNOW],[14,t.WHIRLPOOL],[21,t.TAKE_DOWN],[28,t.DRILL_PECK],[35,t.HELPING_HAND],[42,t.FREEZE_DRY],[49,t.FLIP_TURN],[56,t.ICE_BEAM],[63,t.AGILITY],[70,t.SNOWSCAPE],[77,t.HYDRO_PUMP],[84,t.AURORA_VEIL],[91,t.BLIZZARD]],[e.IRON_HANDS]:[[Z,t.ELECTRIC_TERRAIN],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.ARM_THRUST],[7,t.FAKE_OUT],[14,t.WHIRLWIND],[21,t.THUNDER_PUNCH],[28,t.SLAM],[35,t.FORCE_PALM],[42,t.SEISMIC_TOSS],[49,t.CHARGE],[56,t.WILD_CHARGE],[63,t.CLOSE_COMBAT],[70,t.DETECT],[77,t.HEAVY_SLAM],[84,t.BELLY_DRUM],[91,t.FOCUS_PUNCH]],[e.IRON_JUGULIS]:[[Z,t.ELECTRIC_TERRAIN],[1,t.FOCUS_ENERGY],[1,t.TRI_ATTACK],[1,t.AIR_CUTTER],[1,t.WORK_UP],[1,t.ELECTRIC_TERRAIN],[7,t.ROAR],[14,t.ASSURANCE],[21,t.DRAGON_BREATH],[28,t.SNARL],[35,t.CRUNCH],[42,t.HYPER_VOICE],[56,t.AIR_SLASH],[63,t.KNOCK_OFF],[70,t.DARK_PULSE],[77,t.OUTRAGE],[84,t.DRAGON_PULSE],[91,t.HYPER_BEAM]],[e.IRON_MOTH]:[[Z,t.ELECTRIC_TERRAIN],[1,t.GUST],[1,t.WHIRLWIND],[1,t.EMBER],[1,t.ACID_SPRAY],[7,t.STRUGGLE_BUG],[14,t.FIRE_SPIN],[21,t.TAKE_DOWN],[28,t.LUNGE],[35,t.SCREECH],[42,t.DISCHARGE],[49,t.SLUDGE_WAVE],[56,t.FIERY_DANCE],[63,t.METAL_SOUND],[70,t.MORNING_SUN],[77,t.HURRICANE],[84,t.BUG_BUZZ],[91,t.OVERHEAT]],[e.IRON_THORNS]:[[Z,t.ELECTRIC_TERRAIN],[1,t.ROCK_THROW],[1,t.IRON_DEFENSE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.SCREECH],[21,t.ROCK_TOMB],[28,t.BITE],[35,t.CHARGE],[42,t.ROCK_SLIDE],[49,t.SANDSTORM],[56,t.WILD_CHARGE],[63,t.PIN_MISSILE],[70,t.EARTHQUAKE],[77,t.STEALTH_ROCK],[84,t.STONE_EDGE],[91,t.GIGA_IMPACT]],[e.FRIGIBAX]:[[1,t.TACKLE],[1,t.LEER],[1,t.DRAGON_TAIL],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[32,t.DRAGON_CLAW],[36,t.TAKE_DOWN],[40,t.ICE_BEAM],[44,t.CRUNCH],[48,t.ICICLE_CRASH]],[e.ARCTIBAX]:[[1,t.TACKLE],[1,t.LEER],[1,t.DRAGON_TAIL],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[32,t.DRAGON_CLAW],[40,t.TAKE_DOWN],[45,t.ICE_BEAM],[50,t.CRUNCH],[55,t.ICICLE_CRASH]],[e.BAXCALIBUR]:[[Ae,t.GLAIVE_RUSH],[1,t.TACKLE],[1,t.LEER],[1,t.ICE_SHARD],[1,t.DRAGON_TAIL],[1,t.BREAKING_SWIPE],[1,t.SNOWSCAPE],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[35,t.DRAGON_CLAW],[42,t.TAKE_DOWN],[48,t.ICE_BEAM],[55,t.CRUNCH],[62,t.ICICLE_CRASH]],[e.GIMMIGHOUL]:[[1,t.TACKLE],[1,t.ASTONISH]],[e.GHOLDENGO]:[[1,t.TACKLE],[1,t.ASTONISH],[7,t.NIGHT_SHADE],[14,t.CONFUSE_RAY],[21,t.SUBSTITUTE],[28,t.METAL_SOUND],[35,t.SHADOW_BALL],[42,t.RECOVER],[49,t.POWER_GEM],[56,t.MAKE_IT_RAIN],[63,t.NASTY_PLOT],[70,t.MEMENTO]],[e.WO_CHIEN]:[[1,t.ABSORB],[1,t.SPITE],[1,t.MEAN_LOOK],[5,t.TICKLE],[10,t.PAYBACK],[15,t.POISON_POWDER],[15,t.STUN_SPORE],[20,t.MEGA_DRAIN],[25,t.LEECH_SEED],[30,t.GROWTH],[35,t.INGRAIN],[40,t.DARK_PULSE],[45,t.GIGA_DRAIN],[50,t.RUINATION],[55,t.FOUL_PLAY],[60,t.POWER_WHIP],[65,t.GRASSY_TERRAIN],[70,t.KNOCK_OFF],[75,t.LEAF_STORM]],[e.CHIEN_PAO]:[[1,t.SPITE],[1,t.POWDER_SNOW],[1,t.MEAN_LOOK],[5,t.ICY_WIND],[10,t.PAYBACK],[15,t.MIST],[15,t.HAZE],[20,t.ICE_SHARD],[25,t.SWORDS_DANCE],[30,t.SNOWSCAPE],[35,t.NIGHT_SLASH],[40,t.DARK_PULSE],[45,t.ICICLE_CRASH],[50,t.RUINATION],[55,t.SUCKER_PUNCH],[60,t.SACRED_SWORD],[65,t.RECOVER],[70,t.THROAT_CHOP],[75,t.SHEER_COLD]],[e.TING_LU]:[[1,t.SPITE],[1,t.MEAN_LOOK],[1,t.SAND_TOMB],[5,t.SPIKES],[10,t.PAYBACK],[15,t.STOMP],[20,t.BULLDOZE],[25,t.WHIRLWIND],[30,t.TAUNT],[35,t.THRASH],[40,t.DARK_PULSE],[45,t.STOMPING_TANTRUM],[50,t.RUINATION],[55,t.THROAT_CHOP],[60,t.ROCK_SLIDE],[65,t.MEMENTO],[70,t.EARTHQUAKE],[75,t.FISSURE]],[e.CHI_YU]:[[1,t.EMBER],[1,t.SPITE],[1,t.MEAN_LOOK],[5,t.FLAME_WHEEL],[10,t.PAYBACK],[15,t.WILL_O_WISP],[20,t.FLAME_CHARGE],[25,t.INCINERATE],[30,t.CONFUSE_RAY],[35,t.NASTY_PLOT],[40,t.DARK_PULSE],[45,t.LAVA_PLUME],[50,t.RUINATION],[55,t.BOUNCE],[60,t.SWAGGER],[65,t.INFERNO],[70,t.MEMENTO],[75,t.OVERHEAT]],[e.ROARING_MOON]:[[Z,t.SUNNY_DAY],[Z,t.JAW_LOCK],[Z,t.BREAKING_SWIPE],[Z,t.SCALE_SHOT],[1,t.LEER],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.DRAGON_BREATH],[7,t.INCINERATE],[14,t.HEADBUTT],[21,t.SCARY_FACE],[28,t.DRAGON_CLAW],[35,t.ZEN_HEADBUTT],[42,t.FLAMETHROWER],[49,t.NIGHT_SLASH],[56,t.DRAGON_DANCE],[63,t.DRAGON_RUSH],[70,t.FLY],[77,t.THROAT_CHOP],[84,t.ROOST],[91,t.DOUBLE_EDGE]],[e.IRON_VALIANT]:[[Z,t.ELECTRIC_TERRAIN],[1,t.DISABLE],[1,t.DOUBLE_TEAM],[1,t.FURY_CUTTER],[1,t.SHADOW_SNEAK],[7,t.HYPNOSIS],[14,t.FEINT],[21,t.FUTURE_SIGHT],[28,t.DAZZLING_GLEAM],[35,t.PSYCHO_CUT],[42,t.NIGHT_SLASH],[49,t.LEAF_BLADE],[56,t.MOONBLAST],[63,t.CLOSE_COMBAT],[70,t.KNOCK_OFF],[77,t.DESTINY_BOND],[84,t.WIDE_GUARD],[84,t.QUICK_GUARD],[91,t.SPIRIT_BREAK]],[e.KORAIDON]:[[1,t.SUNNY_DAY],[1,t.BREAKING_SWIPE],[7,t.ROCK_SMASH],[14,t.ANCIENT_POWER],[21,t.DRAIN_PUNCH],[28,t.BRICK_BREAK],[35,t.AGILITY],[42,t.DRAGON_CLAW],[49,t.FLAMETHROWER],[56,t.COLLISION_COURSE],[63,t.SCREECH],[70,t.COUNTER],[77,t.OUTRAGE],[84,t.CLOSE_COMBAT],[91,t.FLARE_BLITZ],[98,t.GIGA_IMPACT]],[e.MIRAIDON]:[[1,t.THUNDER_SHOCK],[1,t.DRAGON_BREATH],[1,t.ELECTRIC_TERRAIN],[7,t.SHOCK_WAVE],[14,t.CHARGE],[21,t.PARABOLIC_CHARGE],[28,t.DISCHARGE],[35,t.AGILITY],[42,t.DRAGON_PULSE],[56,t.ELECTRO_DRIFT],[63,t.METAL_SOUND],[70,t.MIRROR_COAT],[77,t.OUTRAGE],[84,t.THUNDER],[91,t.OVERHEAT],[98,t.HYPER_BEAM]],[e.WALKING_WAKE]:[[Z,t.SUNNY_DAY],[Z,t.HONE_CLAWS],[1,t.LEER],[1,t.ROAR],[1,t.TWISTER],[1,t.AQUA_JET],[7,t.BITE],[14,t.WATER_PULSE],[21,t.NOBLE_ROAR],[28,t.DRAGON_BREATH],[35,t.BREAKING_SWIPE],[42,t.DRAGON_RUSH],[56,t.HYDRO_STEAM],[63,t.DRAGON_PULSE],[70,t.OUTRAGE],[77,t.FLAMETHROWER],[84,t.HYDRO_PUMP]],[e.IRON_LEAVES]:[[Z,t.ELECTRIC_TERRAIN],[Z,t.QUASH],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.MAGICAL_LEAF],[14,t.RETALIATE],[21,t.QUICK_GUARD],[28,t.NIGHT_SLASH],[35,t.SWORDS_DANCE],[42,t.SACRED_SWORD],[49,t.LEAF_BLADE],[56,t.PSYBLADE],[63,t.CLOSE_COMBAT],[70,t.IMPRISON],[77,t.MEGAHORN],[84,t.ALLY_SWITCH],[91,t.SOLAR_BLADE]],[e.DIPPLIN]:[[Ae,t.DOUBLE_HIT],[Z,t.DRAGON_CHEER],[1,t.LEAFAGE],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.DRAGON_TAIL],[8,t.GROWTH],[12,t.DRAGON_BREATH],[16,t.PROTECT],[20,t.BULLET_SEED],[28,t.SYRUP_BOMB],[32,t.DRAGON_PULSE],[36,t.RECOVER],[40,t.ENERGY_BALL],[44,t.SUBSTITUTE]],[e.POLTCHAGEIST]:[[1,t.STUN_SPORE],[1,t.WITHDRAW],[1,t.ASTONISH],[5,t.ABSORB],[12,t.LIFE_DEW],[18,t.FOUL_PLAY],[24,t.MEGA_DRAIN],[30,t.HEX],[36,t.RAGE_POWDER],[42,t.GIGA_DRAIN],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.LEAF_STORM]],[e.SINISTCHA]:[[Ae,t.MATCHA_GOTCHA],[Z,t.GIGA_DRAIN],[1,t.STUN_SPORE],[1,t.WITHDRAW],[1,t.ASTONISH],[6,t.ABSORB],[12,t.LIFE_DEW],[18,t.FOUL_PLAY],[24,t.MEGA_DRAIN],[30,t.HEX],[36,t.RAGE_POWDER],[42,t.STRENGTH_SAP],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.LEAF_STORM]],[e.OKIDOGI]:[[1,t.BITE],[1,t.LOW_KICK],[1,t.BULK_UP],[8,t.HOWL],[16,t.POISON_FANG],[24,t.FORCE_PALM],[32,t.COUNTER],[40,t.POISON_JAB],[48,t.BRUTAL_SWING],[56,t.CRUNCH],[64,t.SUPERPOWER],[72,t.GIGA_IMPACT]],[e.MUNKIDORI]:[[1,t.SCRATCH],[1,t.CONFUSION],[1,t.FAKE_OUT],[1,t.FLATTER],[8,t.HELPING_HAND],[16,t.PSYBEAM],[24,t.CLEAR_SMOG],[32,t.POISON_JAB],[40,t.PSYCHIC],[48,t.SLUDGE_WAVE],[56,t.NASTY_PLOT],[64,t.FUTURE_SIGHT],[72,t.PARTING_SHOT]],[e.FEZANDIPITI]:[[1,t.DOUBLE_KICK],[1,t.PECK],[1,t.POISON_GAS],[1,t.DISARMING_VOICE],[8,t.QUICK_ATTACK],[16,t.ATTRACT],[24,t.WING_ATTACK],[32,t.CROSS_POISON],[40,t.TAIL_SLAP],[48,t.BEAT_UP],[56,t.SWAGGER],[56,t.FLATTER],[64,t.ROOST],[72,t.MOONBLAST]],[e.OGERPON]:[[Z,t.DOUBLE_KICK],[Z,t.COUNTER],[Z,t.RETALIATE],[Z,t.HORN_LEECH],[1,t.VINE_WHIP],[1,t.LEECH_SEED],[1,t.QUICK_ATTACK],[1,t.FOLLOW_ME],[6,t.FOCUS_ENERGY],[12,t.GROWTH],[18,t.SLAM],[24,t.LOW_SWEEP],[30,t.IVY_CUDGEL],[36,t.THROAT_CHOP],[42,t.SYNTHESIS],[48,t.SPIKY_SHIELD],[54,t.POWER_WHIP],[60,t.SUPERPOWER],[66,t.WOOD_HAMMER]],[e.ARCHALUDON]:[[Ae,t.ELECTRO_SHOT],[Z,t.LASER_FOCUS],[1,t.LEER],[1,t.METAL_CLAW],[6,t.ROCK_SMASH],[12,t.HONE_CLAWS],[18,t.METAL_SOUND],[24,t.BREAKING_SWIPE],[30,t.DRAGON_TAIL],[36,t.IRON_DEFENSE],[42,t.FOCUS_ENERGY],[48,t.DRAGON_CLAW],[54,t.FLASH_CANNON],[60,t.METAL_BURST],[66,t.HYPER_BEAM]],[e.HYDRAPPLE]:[[Ae,t.FICKLE_BEAM],[Z,t.YAWN],[Z,t.DOUBLE_HIT],[Z,t.INFESTATION],[Z,t.DRAGON_CHEER],[1,t.LEAFAGE],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.DRAGON_TAIL],[8,t.GROWTH],[12,t.DRAGON_BREATH],[16,t.PROTECT],[20,t.BULLET_SEED],[28,t.SYRUP_BOMB],[32,t.DRAGON_PULSE],[36,t.RECOVER],[40,t.ENERGY_BALL],[44,t.SUBSTITUTE],[54,t.POWER_WHIP]],[e.GOUGING_FIRE]:[[Z,t.DOUBLE_KICK],[Z,t.ANCIENT_POWER],[Z,t.NOBLE_ROAR],[1,t.STOMP],[1,t.LEER],[1,t.INCINERATE],[1,t.SUNNY_DAY],[7,t.FIRE_FANG],[14,t.HOWL],[21,t.BITE],[28,t.DRAGON_CLAW],[35,t.CRUSH_CLAW],[42,t.MORNING_SUN],[49,t.BURNING_BULWARK],[56,t.DRAGON_RUSH],[63,t.FIRE_BLAST],[70,t.LAVA_PLUME],[77,t.OUTRAGE],[84,t.FLARE_BLITZ],[91,t.RAGING_FURY]],[e.RAGING_BOLT]:[[Z,t.ANCIENT_POWER],[1,t.TWISTER],[1,t.SUNNY_DAY],[1,t.SHOCK_WAVE],[1,t.STOMP],[7,t.CHARGE],[14,t.DRAGON_BREATH],[21,t.ELECTRIC_TERRAIN],[28,t.DISCHARGE],[35,t.DRAGON_TAIL],[42,t.CALM_MIND],[49,t.THUNDERCLAP],[56,t.DRAGON_HAMMER],[63,t.RISING_VOLTAGE],[70,t.DRAGON_PULSE],[77,t.ZAP_CANNON],[84,t.BODY_PRESS],[91,t.THUNDER]],[e.IRON_BOULDER]:[[1,t.HORN_ATTACK],[1,t.LEER],[1,t.ROCK_THROW],[1,t.ELECTRIC_TERRAIN],[7,t.QUICK_ATTACK],[14,t.SLASH],[21,t.AGILITY],[28,t.PSYCHO_CUT],[35,t.COUNTER],[42,t.ROCK_TOMB],[49,t.SACRED_SWORD],[56,t.MIGHTY_CLEAVE],[63,t.SWORDS_DANCE],[70,t.MEGAHORN],[77,t.QUICK_GUARD],[84,t.STONE_EDGE],[91,t.GIGA_IMPACT]],[e.IRON_CROWN]:[[1,t.LEER],[1,t.ELECTRIC_TERRAIN],[1,t.CONFUSION],[1,t.METAL_CLAW],[7,t.SMART_STRIKE],[14,t.SLASH],[21,t.IRON_DEFENSE],[28,t.PSYSHOCK],[35,t.PSYCHO_CUT],[42,t.FLASH_CANNON],[49,t.SACRED_SWORD],[56,t.TACHYON_CUTTER],[63,t.FUTURE_SIGHT],[70,t.VOLT_SWITCH],[77,t.QUICK_GUARD],[84,t.METAL_BURST],[91,t.HYPER_BEAM]],[e.TERAPAGOS]:[[1,t.WITHDRAW],[1,t.TRI_ATTACK],[1,t.RAPID_SPIN],[10,t.ANCIENT_POWER],[20,t.HEADBUTT],[30,t.PROTECT],[40,t.EARTH_POWER],[50,t.HEAVY_SLAM],[60,t.TERA_STARSTORM],[70,t.DOUBLE_EDGE],[80,t.ROCK_POLISH],[90,t.GYRO_BALL]],[e.PECHARUNT]:[[Z,t.DEFENSE_CURL],[Z,t.ROLLOUT],[Z,t.MEAN_LOOK],[1,t.SMOG],[1,t.POISON_GAS],[1,t.MEMENTO],[1,t.ASTONISH],[8,t.WITHDRAW],[16,t.DESTINY_BOND],[24,t.FAKE_TEARS],[32,t.PARTING_SHOT],[40,t.SHADOW_BALL],[48,t.MALIGNANT_CHAIN],[56,t.TOXIC],[64,t.NASTY_PLOT],[72,t.RECOVER]],[e.ALOLA_RATTATA]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.QUICK_ATTACK],[7,t.FOCUS_ENERGY],[10,t.BITE],[13,t.PURSUIT],[16,t.HYPER_FANG],[19,t.ASSURANCE],[22,t.CRUNCH],[25,t.SUCKER_PUNCH],[28,t.SUPER_FANG],[31,t.DOUBLE_EDGE],[34,t.ENDEAVOR]],[e.ALOLA_RATICATE]:[[Ae,t.SCARY_FACE],[1,t.SWORDS_DANCE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[10,t.BITE],[13,t.PURSUIT],[16,t.HYPER_FANG],[19,t.ASSURANCE],[24,t.CRUNCH],[29,t.SUCKER_PUNCH],[34,t.SUPER_FANG],[39,t.DOUBLE_EDGE],[44,t.ENDEAVOR]],[e.ALOLA_RAICHU]:[[Ae,t.PSYCHIC],[Ae,t.ZIPPY_ZAP],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.LIGHT_SCREEN],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SPARK],[1,t.IRON_TAIL],[1,t.FEINT],[1,t.NASTY_PLOT],[1,t.DISCHARGE],[1,t.ELECTRO_BALL],[1,t.PLAY_NICE],[1,t.NUZZLE],[5,t.THUNDERBOLT],[50,t.PIKA_PAPOW]],[e.ALOLA_SANDSHREW]:[[1,t.SCRATCH],[1,t.DEFENSE_CURL],[3,t.MIST],[6,t.POWDER_SNOW],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.METAL_CLAW],[21,t.SWIFT],[24,t.FURY_SWIPES],[27,t.IRON_DEFENSE],[30,t.SLASH],[33,t.IRON_HEAD],[36,t.GYRO_BALL],[39,t.SWORDS_DANCE],[42,t.SNOWSCAPE],[45,t.BLIZZARD]],[e.ALOLA_SANDSLASH]:[[Ae,t.ICICLE_SPEAR],[Z,t.SCRATCH],[Z,t.MIST],[Z,t.BLIZZARD],[Z,t.DEFENSE_CURL],[Z,t.SWIFT],[Z,t.FURY_SWIPES],[Z,t.POWDER_SNOW],[Z,t.ROLLOUT],[Z,t.FURY_CUTTER],[Z,t.RAPID_SPIN],[Z,t.IRON_DEFENSE],[Z,t.GYRO_BALL],[Z,t.METAL_BURST],[Z,t.IRON_HEAD],[Z,t.SNOWSCAPE],[1,t.ICICLE_CRASH],[1,t.METAL_CLAW],[1,t.SLASH],[1,t.SWORDS_DANCE],[1,t.ICE_BALL]],[e.ALOLA_VULPIX]:[[1,t.TAIL_WHIP],[1,t.POWDER_SNOW],[4,t.DISABLE],[8,t.ICE_SHARD],[12,t.SPITE],[16,t.ICY_WIND],[20,t.CONFUSE_RAY],[24,t.AURORA_BEAM],[28,t.EXTRASENSORY],[32,t.ICE_BEAM],[36,t.IMPRISON],[40,t.MIST],[44,t.AURORA_VEIL],[48,t.FREEZE_DRY],[52,t.BLIZZARD]],[e.ALOLA_NINETALES]:[[Ae,t.DAZZLING_GLEAM],[Z,t.DISABLE],[Z,t.MIST],[Z,t.ICE_BEAM],[Z,t.AURORA_BEAM],[Z,t.CONFUSE_RAY],[Z,t.SPITE],[Z,t.POWDER_SNOW],[Z,t.EXTRASENSORY],[Z,t.NASTY_PLOT],[Z,t.ICE_SHARD],[Z,t.FREEZE_DRY],[Z,t.AURORA_VEIL],[1,t.ICY_WIND],[1,t.IMPRISON],[1,t.BLIZZARD],[1,t.TAIL_WHIP]],[e.ALOLA_DIGLETT]:[[1,t.SAND_ATTACK],[1,t.METAL_CLAW],[4,t.GROWL],[8,t.ASTONISH],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.IRON_HEAD],[28,t.SANDSTORM],[32,t.DIG],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.FISSURE]],[e.ALOLA_DUGTRIO]:[[Ae,t.SAND_TOMB],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.TRI_ATTACK],[1,t.METAL_CLAW],[1,t.ASTONISH],[1,t.NIGHT_SLASH],[1,t.ROTOTILLER],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.IRON_HEAD],[30,t.SANDSTORM],[36,t.DIG],[42,t.EARTH_POWER],[48,t.EARTHQUAKE],[54,t.FISSURE]],[e.ALOLA_MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.FEINT],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.NIGHT_SLASH],[40,t.NASTY_PLOT],[44,t.PLAY_ROUGH]],[e.ALOLA_PERSIAN]:[[Ae,t.POWER_GEM],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.FEINT],[1,t.SWITCHEROO],[1,t.QUASH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.NIGHT_SLASH],[48,t.NASTY_PLOT],[54,t.PLAY_ROUGH]],[e.ALOLA_GEODUDE]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[4,t.CHARGE],[6,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[28,t.STEALTH_ROCK],[30,t.ROCK_BLAST],[34,t.DISCHARGE],[36,t.EXPLOSION],[40,t.DOUBLE_EDGE],[42,t.STONE_EDGE]],[e.ALOLA_GRAVELER]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CHARGE],[1,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.DISCHARGE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.ALOLA_GOLEM]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CHARGE],[1,t.ROCK_POLISH],[1,t.ROLLOUT],[1,t.HEAVY_SLAM],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.DISCHARGE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.ALOLA_GRIMER]:[[1,t.POUND],[1,t.POISON_GAS],[4,t.HARDEN],[7,t.BITE],[12,t.DISABLE],[15,t.ACID_SPRAY],[18,t.POISON_FANG],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.KNOCK_OFF],[32,t.CRUNCH],[37,t.SCREECH],[40,t.GUNK_SHOT],[43,t.ACID_ARMOR],[46,t.BELCH],[48,t.MEMENTO]],[e.ALOLA_MUK]:[[1,t.POUND],[1,t.BITE],[1,t.HARDEN],[1,t.POISON_GAS],[12,t.DISABLE],[15,t.ACID_SPRAY],[18,t.POISON_FANG],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.KNOCK_OFF],[32,t.CRUNCH],[37,t.SCREECH],[40,t.GUNK_SHOT],[46,t.ACID_ARMOR],[52,t.BELCH],[57,t.MEMENTO]],[e.ALOLA_EXEGGUTOR]:[[Ae,t.DRAGON_HAMMER],[Z,t.GROWTH],[1,t.BARRAGE],[1,t.SEED_BOMB],[1,t.PSYSHOCK],[1,t.WOOD_HAMMER],[1,t.LEAF_STORM],[1,t.MEGA_DRAIN],[1,t.CONFUSION],[1,t.SYNTHESIS],[1,t.BULLET_SEED],[1,t.GIGA_DRAIN],[1,t.EXTRASENSORY],[1,t.UPROAR],[1,t.WORRY_SEED],[1,t.SOLAR_BEAM],[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.REFLECT],[1,t.LEECH_SEED]],[e.ALOLA_MAROWAK]:[[Ae,t.SHADOW_BONE],[1,t.BONE_CLUB],[1,t.HEADBUTT],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.FIRE_SPIN],[1,t.FOCUS_ENERGY],[1,t.MUD_SLAP],[1,t.FALSE_SWIPE],[1,t.RETALIATE],[12,t.FLAME_WHEEL],[16,t.HEX],[20,t.FLING],[24,t.STOMPING_TANTRUM],[31,t.BONE_RUSH],[36,t.WILL_O_WISP],[42,t.ENDEAVOR],[48,t.BONEMERANG],[54,t.THRASH],[60,t.FLARE_BLITZ]],[e.ETERNAL_FLOETTE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[10,t.LUCKY_CHANT],[15,t.RAZOR_LEAF],[20,t.WISH],[25,t.MAGICAL_LEAF],[27,t.GRASSY_TERRAIN],[33,t.PETAL_BLIZZARD],[38,t.AROMATHERAPY],[43,t.MISTY_TERRAIN],[46,t.MOONBLAST],[50,t.LIGHT_OF_RUIN],[51,t.PETAL_DANCE],[58,t.SOLAR_BEAM]],[e.GALAR_MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.HONE_CLAWS],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.METAL_CLAW],[20,t.TAUNT],[24,t.SWAGGER],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.SLASH],[40,t.METAL_SOUND],[44,t.THRASH]],[e.GALAR_PONYTA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.TAIL_WHIP],[10,t.CONFUSION],[15,t.FAIRY_WIND],[20,t.AGILITY],[25,t.PSYBEAM],[30,t.STOMP],[35,t.HEAL_PULSE],[41,t.TAKE_DOWN],[45,t.DAZZLING_GLEAM],[50,t.PSYCHIC],[55,t.HEALING_WISH]],[e.GALAR_RAPIDASH]:[[Ae,t.PSYCHO_CUT],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.MEGAHORN],[15,t.FAIRY_WIND],[20,t.AGILITY],[25,t.PSYBEAM],[30,t.STOMP],[35,t.HEAL_PULSE],[43,t.TAKE_DOWN],[49,t.DAZZLING_GLEAM],[56,t.PSYCHIC],[63,t.HEALING_WISH]],[e.GALAR_SLOWPOKE]:[[1,t.TACKLE],[1,t.CURSE],[3,t.GROWL],[6,t.ACID],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_SLOWBRO]:[[Ae,t.SHELL_SIDE_ARM],[1,t.TACKLE],[1,t.GROWL],[1,t.ACID],[1,t.WITHDRAW],[1,t.CURSE],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_FARFETCHD]:[[1,t.SAND_ATTACK],[1,t.PECK],[5,t.LEER],[10,t.FURY_CUTTER],[15,t.ROCK_SMASH],[20,t.BRUTAL_SWING],[25,t.DETECT],[30,t.KNOCK_OFF],[35,t.DEFOG],[40,t.BRICK_BREAK],[45,t.SWORDS_DANCE],[50,t.SLAM],[55,t.LEAF_BLADE],[60,t.FINAL_GAMBIT],[65,t.BRAVE_BIRD]],[e.GALAR_WEEZING]:[[Ae,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.HAZE],[1,t.SMOG],[1,t.POISON_GAS],[1,t.HEAT_WAVE],[1,t.DEFOG],[1,t.AROMATIC_MIST],[1,t.STRANGE_STEAM],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.FAIRY_WIND],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[38,t.TOXIC],[44,t.BELCH],[50,t.EXPLOSION],[56,t.MEMENTO],[62,t.DESTINY_BOND],[68,t.MISTY_TERRAIN]],[e.GALAR_MR_MIME]:[[1,t.POUND],[1,t.BARRIER],[1,t.TICKLE],[1,t.MIMIC],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.PROTECT],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.RAPID_SPIN],[1,t.ROLE_PLAY],[1,t.RECYCLE],[1,t.COPYCAT],[1,t.ICE_SHARD],[1,t.MISTY_TERRAIN],[1,t.DAZZLING_GLEAM],[12,t.CONFUSION],[16,t.ALLY_SWITCH],[20,t.ICY_WIND],[24,t.DOUBLE_KICK],[28,t.PSYBEAM],[32,t.HYPNOSIS],[36,t.MIRROR_COAT],[40,t.SUCKER_PUNCH],[44,t.FREEZE_DRY],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.GALAR_ARTICUNO]:[[1,t.GUST],[5,t.CONFUSION],[10,t.REFLECT],[15,t.HYPNOSIS],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.TAILWIND],[35,t.PSYCHO_CUT],[40,t.RECOVER],[45,t.FREEZING_GLARE],[50,t.DREAM_EATER],[55,t.HURRICANE],[60,t.DOUBLE_TEAM],[65,t.FUTURE_SIGHT],[70,t.TRICK_ROOM]],[e.GALAR_ZAPDOS]:[[1,t.PECK],[1,t.FOCUS_ENERGY],[5,t.ROCK_SMASH],[10,t.LIGHT_SCREEN],[15,t.PLUCK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.BRICK_BREAK],[35,t.DRILL_PECK],[40,t.QUICK_GUARD],[45,t.THUNDEROUS_KICK],[50,t.BULK_UP],[55,t.COUNTER],[60,t.DETECT],[65,t.CLOSE_COMBAT],[70,t.REVERSAL]],[e.GALAR_MOLTRES]:[[1,t.GUST],[1,t.LEER],[5,t.PAYBACK],[10,t.SAFEGUARD],[15,t.WING_ATTACK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.SUCKER_PUNCH],[35,t.AIR_SLASH],[40,t.AFTER_YOU],[45,t.FIERY_WRATH],[50,t.NASTY_PLOT],[55,t.HURRICANE],[60,t.ENDURE],[65,t.MEMENTO],[70,t.SKY_ATTACK]],[e.GALAR_SLOWKING]:[[Ae,t.EERIE_SPELL],[Z,t.FUTURE_SIGHT],[Z,t.CHILLY_RECEPTION],[Z,t.TOXIC],[1,t.POWER_GEM],[1,t.NASTY_PLOT],[1,t.SWAGGER],[1,t.TACKLE],[1,t.CURSE],[1,t.GROWL],[1,t.ACID],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_CORSOLA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ASTONISH],[10,t.DISABLE],[15,t.SPITE],[20,t.ANCIENT_POWER],[25,t.HEX],[30,t.CURSE],[35,t.STRENGTH_SAP],[40,t.POWER_GEM],[45,t.NIGHT_SHADE],[50,t.GRUDGE],[55,t.MIRROR_COAT]],[e.GALAR_ZIGZAGOON]:[[1,t.TACKLE],[1,t.LEER],[3,t.SAND_ATTACK],[6,t.LICK],[9,t.SNARL],[12,t.HEADBUTT],[15,t.BABY_DOLL_EYES],[18,t.PIN_MISSILE],[21,t.REST],[24,t.TAKE_DOWN],[27,t.SCARY_FACE],[30,t.COUNTER],[33,t.TAUNT],[36,t.DOUBLE_EDGE]],[e.GALAR_LINOONE]:[[Ae,t.NIGHT_SLASH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.LEER],[1,t.LICK],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[9,t.SNARL],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[33,t.SCARY_FACE],[38,t.COUNTER],[43,t.TAUNT],[48,t.DOUBLE_EDGE]],[e.GALAR_DARUMAKA]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[4,t.TAUNT],[8,t.BITE],[12,t.AVALANCHE],[16,t.WORK_UP],[20,t.ICE_FANG],[24,t.HEADBUTT],[28,t.ICE_PUNCH],[32,t.UPROAR],[36,t.BELLY_DRUM],[40,t.BLIZZARD],[44,t.THRASH],[48,t.SUPERPOWER]],[e.GALAR_DARMANITAN]:[[Ae,t.ICICLE_CRASH],[1,t.TACKLE],[1,t.BITE],[1,t.POWDER_SNOW],[1,t.TAUNT],[12,t.AVALANCHE],[16,t.WORK_UP],[20,t.ICE_FANG],[24,t.HEADBUTT],[28,t.ICE_PUNCH],[32,t.UPROAR],[38,t.BELLY_DRUM],[44,t.BLIZZARD],[50,t.THRASH],[56,t.SUPERPOWER]],[e.GALAR_YAMASK]:[[1,t.PROTECT],[1,t.ASTONISH],[4,t.HAZE],[8,t.NIGHT_SHADE],[12,t.DISABLE],[16,t.BRUTAL_SWING],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.SLAM],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.EARTHQUAKE],[48,t.GUARD_SPLIT],[48,t.POWER_SPLIT],[52,t.DESTINY_BOND]],[e.GALAR_STUNFISK]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[5,t.ENDURE],[10,t.MUD_SHOT],[15,t.REVENGE],[20,t.METAL_SOUND],[25,t.SUCKER_PUNCH],[30,t.IRON_DEFENSE],[35,t.BOUNCE],[40,t.MUDDY_WATER],[45,t.SNAP_TRAP],[50,t.FLAIL],[55,t.FISSURE]],[e.HISUI_GROWLITHE]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.BITE],[12,t.FLAME_WHEEL],[16,t.HELPING_HAND],[24,t.FIRE_FANG],[28,t.RETALIATE],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FLAMETHROWER],[44,t.ROAR],[48,t.ROCK_SLIDE],[52,t.REVERSAL],[56,t.FLARE_BLITZ]],[e.HISUI_ARCANINE]:[[Ae,t.EXTREME_SPEED],[1,t.TAKE_DOWN],[1,t.LEER],[1,t.BITE],[1,t.ROAR],[1,t.EMBER],[1,t.ROCK_THROW],[1,t.AGILITY],[1,t.ROCK_SLIDE],[1,t.FLAME_WHEEL],[1,t.REVERSAL],[1,t.CRUNCH],[1,t.HELPING_HAND],[1,t.HOWL],[1,t.FLARE_BLITZ],[1,t.FIRE_FANG],[1,t.RETALIATE],[5,t.FLAMETHROWER],[64,t.RAGING_FURY]],[e.HISUI_VOLTORB]:[[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.STUN_SPORE],[9,t.BULLET_SEED],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.ENERGY_BALL],[34,t.SEED_BOMB],[34,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.GRASSY_TERRAIN]],[e.HISUI_ELECTRODE]:[[Ae,t.CHLOROBLAST],[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.STUN_SPORE],[9,t.BULLET_SEED],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.ENERGY_BALL],[34,t.SEED_BOMB],[34,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.GRASSY_TERRAIN]],[e.HISUI_TYPHLOSION]:[[Ae,t.INFERNAL_PARADE],[1,t.TACKLE],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.ERUPTION],[1,t.GYRO_BALL],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[43,t.LAVA_PLUME],[48,t.FLAMETHROWER],[56,t.INFERNO],[61,t.ROLLOUT],[74,t.OVERHEAT]],[e.HISUI_QWILFISH]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.BITE],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.BARB_BARRAGE],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.CRUNCH],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.HISUI_SNEASEL]:[[1,t.SCRATCH],[1,t.LEER],[1,t.ROCK_SMASH],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.POISON_JAB],[30,t.BRICK_BREAK],[36,t.HONE_CLAWS],[42,t.SLASH],[48,t.AGILITY],[54,t.SCREECH],[60,t.CLOSE_COMBAT]],[e.HISUI_SAMUROTT]:[[Ae,t.CEASELESS_EDGE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SOAK],[1,t.SLASH],[1,t.MEGAHORN],[1,t.SUCKER_PUNCH],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[25,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[39,t.ENCORE],[46,t.AQUA_TAIL],[51,t.RETALIATE],[58,t.SWORDS_DANCE],[63,t.HYDRO_PUMP]],[e.HISUI_LILLIGANT]:[[Ae,t.VICTORY_DANCE],[1,t.MEGA_KICK],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SYNTHESIS],[1,t.SUNNY_DAY],[1,t.HELPING_HAND],[1,t.TEETER_DANCE],[1,t.MAGICAL_LEAF],[1,t.LEAF_BLADE],[1,t.ENERGY_BALL],[1,t.DEFOG],[1,t.LEAF_STORM],[1,t.ENTRAINMENT],[1,t.AFTER_YOU],[1,t.PETAL_BLIZZARD],[1,t.SOLAR_BLADE],[5,t.AXE_KICK]],[e.HISUI_ZORUA]:[[1,t.SCRATCH],[1,t.LEER],[4,t.TORMENT],[8,t.HONE_CLAWS],[12,t.SHADOW_SNEAK],[16,t.CURSE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.SPITE],[32,t.AGILITY],[36,t.SHADOW_BALL],[40,t.BITTER_MALICE],[44,t.NASTY_PLOT],[48,t.FOUL_PLAY]],[e.HISUI_ZOROARK]:[[Ae,t.SHADOW_CLAW],[1,t.SCRATCH],[1,t.LEER],[1,t.TORMENT],[1,t.U_TURN],[1,t.HONE_CLAWS],[12,t.SHADOW_SNEAK],[16,t.CURSE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.SPITE],[34,t.AGILITY],[40,t.SHADOW_BALL],[46,t.BITTER_MALICE],[52,t.NASTY_PLOT],[58,t.FOUL_PLAY]],[e.HISUI_BRAVIARY]:[[Ae,t.ESPER_WING],[Z,t.BRAVE_BIRD],[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.SUPERPOWER],[1,t.HONE_CLAWS],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[57,t.AIR_SLASH],[64,t.DEFOG],[72,t.THRASH],[80,t.HURRICANE]],[e.HISUI_SLIGGOO]:[[Ae,t.SHELTER],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.BODY_SLAM],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.IRON_HEAD],[56,t.MUDDY_WATER]],[e.HISUI_GOODRA]:[[Ae,t.IRON_TAIL],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.FEINT],[1,t.ACID_SPRAY],[1,t.TEARFUL_LOOK],[1,t.SHELTER],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[49,t.IRON_HEAD],[58,t.MUDDY_WATER],[67,t.HEAVY_SLAM]],[e.HISUI_AVALUGG]:[[Ae,t.ROCK_SLIDE],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWDER_SNOW],[1,t.RAPID_SPIN],[1,t.WIDE_GUARD],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[41,t.BLIZZARD],[46,t.DOUBLE_EDGE],[51,t.STONE_EDGE],[61,t.MOUNTAIN_GALE]],[e.HISUI_DECIDUEYE]:[[Ae,t.TRIPLE_ARROWS],[Z,t.NASTY_PLOT],[1,t.TACKLE],[1,t.GROWL],[1,t.U_TURN],[1,t.ASTONISH],[1,t.LEAF_STORM],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.BULK_UP],[37,t.SUCKER_PUNCH],[44,t.LEAF_BLADE],[51,t.FEATHER_DANCE],[58,t.BRAVE_BIRD]],[e.PALDEA_TAUROS]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.ASSURANCE],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.DOUBLE_EDGE],[60,t.CLOSE_COMBAT]],[e.PALDEA_WOOPER]:[[1,t.TAIL_WHIP],[1,t.MUD_SHOT],[4,t.TACKLE],[8,t.POISON_TAIL],[12,t.TOXIC_SPIKES],[16,t.SLAM],[21,t.YAWN],[24,t.POISON_JAB],[28,t.SLUDGE_WAVE],[32,t.AMNESIA],[36,t.TOXIC],[40,t.EARTHQUAKE]],[e.BLOODMOON_URSALUNA]:[[Z,t.MOONLIGHT],[1,t.HEADLONG_RUSH],[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.HARDEN],[22,t.SLASH],[25,t.PLAY_NICE],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.EARTH_POWER],[56,t.MOONBLAST],[64,t.HAMMER_ARM],[70,t.BLOOD_MOON]]},En={[e.PIKACHU]:{1:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.ZIPPY_ZAP],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[34,t.FLOATY_FALL],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[42,t.SPLISHY_SPLASH],[44,t.THUNDER],[48,t.PIKA_PAPOW]],2:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],3:[[1,t.METEOR_MASH],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],4:[[1,t.ICICLE_CRASH],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],5:[[1,t.DRAINING_KISS],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],6:[[1,t.ELECTRIC_TERRAIN],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],7:[[1,t.FLYING_PRESS],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],8:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.ZIPPY_ZAP],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[34,t.FLOATY_FALL],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[42,t.SPLISHY_SPLASH],[44,t.THUNDER],[48,t.PIKA_PAPOW]]},[e.EEVEE]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[18,t.BOUNCY_BUBBLE],[18,t.SIZZLY_SLIDE],[18,t.BUZZY_BUZZ],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[33,t.BADDY_BAD],[33,t.GLITZY_GLOW],[35,t.BATON_PASS],[40,t.VEEVEE_VOLLEY],[43,t.FREEZY_FROST],[43,t.SAPPY_SEED],[45,t.CHARM],[50,t.DOUBLE_EDGE],[53,t.SPARKLY_SWIRL],[55,t.LAST_RESORT]],2:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[18,t.BOUNCY_BUBBLE],[18,t.SIZZLY_SLIDE],[18,t.BUZZY_BUZZ],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[33,t.BADDY_BAD],[33,t.GLITZY_GLOW],[35,t.BATON_PASS],[40,t.VEEVEE_VOLLEY],[43,t.FREEZY_FROST],[43,t.SAPPY_SEED],[45,t.CHARM],[50,t.DOUBLE_EDGE],[53,t.SPARKLY_SWIRL],[55,t.LAST_RESORT]]},[e.DEOXYS]:{1:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.TAUNT],[25,t.PURSUIT],[31,t.PSYCHIC],[37,t.SUPERPOWER],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.COSMIC_POWER],[61,t.ZAP_CANNON],[67,t.PSYCHO_BOOST],[73,t.HYPER_BEAM]],2:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.KNOCK_OFF],[25,t.SPIKES],[31,t.PSYCHIC],[37,t.SNATCH],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.AMNESIA],[55,t.IRON_DEFENSE],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.COUNTER],[73,t.MIRROR_COAT]],3:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.DOUBLE_TEAM],[19,t.KNOCK_OFF],[25,t.PURSUIT],[31,t.PSYCHIC],[37,t.SWIFT],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.AGILITY],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.EXTREME_SPEED]]},[e.WORMADAM]:{1:[[Ae,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.ROCK_BLAST],[29,t.HARDEN],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.FISSURE],[50,t.BUG_BUZZ]],2:[[Ae,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.METAL_BURST],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.METAL_BURST],[29,t.METAL_SOUND],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.IRON_HEAD],[50,t.BUG_BUZZ]]},[e.ROTOM]:{1:[[1,t.OVERHEAT],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],2:[[1,t.HYDRO_PUMP],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],3:[[1,t.BLIZZARD],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],4:[[1,t.AIR_SLASH],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],5:[[1,t.LEAF_STORM],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]]},[e.SHAYMIN]:{1:[[1,t.LEAFAGE],[1,t.GROWTH],[10,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[28,t.QUICK_ATTACK],[37,t.SWEET_SCENT],[46,t.NATURAL_GIFT],[55,t.WORRY_SEED],[64,t.AIR_SLASH],[73,t.ENERGY_BALL],[82,t.SWEET_KISS],[91,t.LEAF_STORM],[100,t.SEED_FLARE]]},[e.KYUREM]:{1:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.FUSION_BOLT],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.FREEZE_SHOCK],[88,t.SHEER_COLD]],2:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.FUSION_FLARE],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.ICE_BURN],[88,t.SHEER_COLD]]},[e.MEOWSTIC]:{1:[[1,t.SCRATCH],[1,t.LEER],[1,t.FAKE_OUT],[1,t.MAGICAL_LEAF],[1,t.DISARMING_VOICE],[9,t.CONFUSION],[12,t.STORED_POWER],[15,t.CHARGE_BEAM],[18,t.COVET],[21,t.PSYBEAM],[24,t.SUCKER_PUNCH],[29,t.ROLE_PLAY],[34,t.LIGHT_SCREEN],[34,t.REFLECT],[39,t.PSYSHOCK],[44,t.EXTRASENSORY],[49,t.SHADOW_BALL],[54,t.PSYCHIC],[59,t.FUTURE_SIGHT]]},[e.HOOPA]:{1:[[1,t.CONFUSION],[1,t.DESTINY_BOND],[1,t.ALLY_SWITCH],[6,t.ASTONISH],[10,t.TRICK],[15,t.LIGHT_SCREEN],[19,t.PSYBEAM],[25,t.SKILL_SWAP],[29,t.GUARD_SPLIT],[29,t.POWER_SPLIT],[46,t.KNOCK_OFF],[50,t.TRICK_ROOM],[50,t.WONDER_ROOM],[55,t.DARK_PULSE],[75,t.PSYCHIC],[85,t.HYPERSPACE_FURY]]},[e.GRENINJA]:{1:[[Ae,t.WATER_SHURIKEN],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.ROUND],[1,t.FLING],[1,t.SMACK_DOWN],[1,t.BOUNCE],[1,t.HAZE],[1,t.MAT_BLOCK],[1,t.ROLE_PLAY],[1,t.NIGHT_SLASH],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.SHADOW_SNEAK],[28,t.SPIKES],[33,t.AERIAL_ACE],[42,t.SUBSTITUTE],[49,t.EXTRASENSORY],[56,t.DOUBLE_TEAM],[68,t.HYDRO_PUMP]]},[e.LYCANROC]:{1:[[Ae,t.COUNTER],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.DOUBLE_TEAM],[1,t.REVERSAL],[1,t.ENDURE],[1,t.TAUNT],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]],2:[[Ae,t.CRUSH_CLAW],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.COUNTER],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.REVERSAL],[1,t.ENDURE],[1,t.TAUNT],[1,t.SUCKER_PUNCH],[1,t.QUICK_GUARD],[1,t.ACCELEROCK],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]]},[e.NECROZMA]:{1:[[Ae,t.SUNSTEEL_STRIKE],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],2:[[Ae,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],3:[[Ae,t.SUNSTEEL_STRIKE],[Ae,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]]},[e.TOXTRICITY]:{1:[[Ae,t.SPARK],[1,t.LEER],[1,t.GROWL],[1,t.ACID],[1,t.THUNDER_SHOCK],[1,t.FLAIL],[1,t.ACID_SPRAY],[1,t.BELCH],[1,t.NOBLE_ROAR],[1,t.NUZZLE],[1,t.TEARFUL_LOOK],[4,t.CHARGE],[8,t.SHOCK_WAVE],[12,t.SCARY_FACE],[16,t.TAUNT],[24,t.SCREECH],[28,t.SWAGGER],[32,t.TOXIC],[36,t.DISCHARGE],[40,t.POISON_JAB],[44,t.OVERDRIVE],[48,t.BOOMBURST],[52,t.MAGNETIC_FLUX]]},[e.INDEEDEE]:{1:[[1,t.STORED_POWER],[1,t.PLAY_NICE],[5,t.BATON_PASS],[10,t.DISARMING_VOICE],[15,t.PSYBEAM],[20,t.HELPING_HAND],[25,t.FOLLOW_ME],[30,t.HEALING_WISH],[35,t.PSYCHIC],[40,t.CALM_MIND],[45,t.GUARD_SPLIT],[50,t.PSYCHIC_TERRAIN]]},[e.ZACIAN]:{1:[[Ae,t.BEHEMOTH_BLADE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.QUICK_GUARD],[1,t.SACRED_SWORD],[11,t.SLASH],[22,t.SWORDS_DANCE],[33,t.IRON_HEAD],[44,t.NOBLE_ROAR],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]]},[e.ZAMAZENTA]:{1:[[Ae,t.BEHEMOTH_BASH],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.WIDE_GUARD],[11,t.SLASH],[22,t.IRON_DEFENSE],[33,t.IRON_HEAD],[44,t.METAL_BURST],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]]},[e.ETERNATUS]:{1:[[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.POISON_TAIL],[1,t.DRAGON_TAIL],[8,t.TOXIC],[16,t.VENOSHOCK],[24,t.DRAGON_DANCE],[32,t.CROSS_POISON],[40,t.DRAGON_PULSE],[48,t.FLAMETHROWER],[56,t.DYNAMAX_CANNON],[64,t.COSMIC_POWER],[72,t.RECOVER],[80,t.HYPER_BEAM],[88,t.ETERNABEAM]]},[e.URSHIFU]:{1:[[Ae,t.SURGING_STRIKES],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.AQUA_JET],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]]},[e.CALYREX]:{1:[[1,t.POUND],[1,t.SWORDS_DANCE],[1,t.STOMP],[1,t.DOUBLE_KICK],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.THRASH],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.MIST],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[1,t.TORMENT],[1,t.TAUNT],[1,t.IRON_DEFENSE],[1,t.AVALANCHE],[1,t.ICICLE_CRASH],[1,t.GLACIAL_LANCE],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.AROMATHERAPY],[40,t.GRASSY_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]],2:[[1,t.POUND],[1,t.STOMP],[1,t.DOUBLE_KICK],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.THRASH],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.DISABLE],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.HAZE],[1,t.SHADOW_BALL],[1,t.NASTY_PLOT],[1,t.HEX],[1,t.ASTRAL_BARRAGE],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.GRASSY_TERRAIN],[40,t.PSYCHIC_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]]},[e.OINKOLOGNE]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[3,t.DISARMING_VOICE],[6,t.ECHOED_VOICE],[9,t.MUD_SHOT],[12,t.COVET],[15,t.DIG],[17,t.HEADBUTT],[23,t.YAWN],[28,t.TAKE_DOWN],[30,t.WORK_UP],[34,t.UPROAR],[39,t.DOUBLE_EDGE],[45,t.EARTH_POWER],[51,t.BELCH]]},[e.REVAVROOM]:{1:[[Ae,t.WICKED_TORQUE],[Ae,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],2:[[Ae,t.BLAZING_TORQUE],[Ae,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],3:[[Ae,t.NOXIOUS_TORQUE],[Ae,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],4:[[Ae,t.MAGICAL_TORQUE],[Ae,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],5:[[Ae,t.COMBAT_TORQUE],[Ae,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]]},[e.PALDEA_TAUROS]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.FLAME_CHARGE],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.FLARE_BLITZ],[60,t.CLOSE_COMBAT]],2:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.AQUA_JET],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.WAVE_CRASH],[60,t.CLOSE_COMBAT]]}},qb=5,o7=3,l7=4,C7=6,U7=5;function A1(E){switch(E){case 1:return 25;case 2:return 50;case 3:return 75;case 4:return 100;case 5:return 150;case 6:return 200;case 7:return 300;case 8:case 9:return 450;default:return 600}}L(A1,"getStarterValueFriendshipCap");const KA={[e.BULBASAUR]:3,[e.CHARMANDER]:3,[e.SQUIRTLE]:3,[e.CATERPIE]:2,[e.WEEDLE]:1,[e.PIDGEY]:1,[e.RATTATA]:1,[e.SPEAROW]:1,[e.EKANS]:2,[e.PIKACHU]:4,[e.SANDSHREW]:2,[e.NIDORAN_F]:3,[e.NIDORAN_M]:3,[e.CLEFAIRY]:3,[e.VULPIX]:3,[e.JIGGLYPUFF]:2,[e.ZUBAT]:3,[e.ODDISH]:3,[e.PARAS]:2,[e.VENONAT]:2,[e.DIGLETT]:2,[e.MEOWTH]:3,[e.PSYDUCK]:2,[e.MANKEY]:4,[e.GROWLITHE]:4,[e.POLIWAG]:2,[e.ABRA]:4,[e.MACHOP]:3,[e.BELLSPROUT]:2,[e.TENTACOOL]:3,[e.GEODUDE]:3,[e.PONYTA]:2,[e.SLOWPOKE]:3,[e.MAGNEMITE]:4,[e.FARFETCHD]:2,[e.DODUO]:3,[e.SEEL]:1,[e.GRIMER]:2,[e.SHELLDER]:5,[e.GASTLY]:4,[e.ONIX]:3,[e.DROWZEE]:2,[e.KRABBY]:3,[e.VOLTORB]:2,[e.EXEGGCUTE]:3,[e.CUBONE]:3,[e.HITMONLEE]:4,[e.HITMONCHAN]:4,[e.LICKITUNG]:3,[e.KOFFING]:2,[e.RHYHORN]:4,[e.CHANSEY]:3,[e.TANGELA]:3,[e.KANGASKHAN]:4,[e.HORSEA]:3,[e.GOLDEEN]:2,[e.STARYU]:3,[e.MR_MIME]:3,[e.SCYTHER]:5,[e.JYNX]:4,[e.ELECTABUZZ]:4,[e.MAGMAR]:4,[e.PINSIR]:4,[e.TAUROS]:4,[e.MAGIKARP]:4,[e.LAPRAS]:4,[e.DITTO]:2,[e.EEVEE]:3,[e.PORYGON]:4,[e.OMANYTE]:3,[e.KABUTO]:3,[e.AERODACTYL]:5,[e.SNORLAX]:5,[e.ARTICUNO]:5,[e.ZAPDOS]:6,[e.MOLTRES]:6,[e.DRATINI]:4,[e.MEWTWO]:8,[e.MEW]:5,[e.CHIKORITA]:2,[e.CYNDAQUIL]:3,[e.TOTODILE]:3,[e.SENTRET]:1,[e.HOOTHOOT]:2,[e.LEDYBA]:1,[e.SPINARAK]:1,[e.CHINCHOU]:2,[e.PICHU]:4,[e.CLEFFA]:2,[e.IGGLYBUFF]:1,[e.TOGEPI]:3,[e.NATU]:2,[e.MAREEP]:2,[e.MARILL]:4,[e.SUDOWOODO]:3,[e.HOPPIP]:2,[e.AIPOM]:2,[e.SUNKERN]:1,[e.YANMA]:3,[e.WOOPER]:2,[e.MURKROW]:3,[e.MISDREAVUS]:2,[e.UNOWN]:1,[e.WOBBUFFET]:2,[e.GIRAFARIG]:3,[e.PINECO]:2,[e.DUNSPARCE]:3,[e.GLIGAR]:3,[e.SNUBBULL]:2,[e.QWILFISH]:3,[e.SHUCKLE]:3,[e.HERACROSS]:5,[e.SNEASEL]:4,[e.TEDDIURSA]:4,[e.SLUGMA]:2,[e.SWINUB]:3,[e.CORSOLA]:2,[e.REMORAID]:2,[e.DELIBIRD]:2,[e.MANTINE]:3,[e.SKARMORY]:4,[e.HOUNDOUR]:3,[e.PHANPY]:3,[e.STANTLER]:3,[e.SMEARGLE]:1,[e.TYROGUE]:3,[e.SMOOCHUM]:3,[e.ELEKID]:3,[e.MAGBY]:3,[e.MILTANK]:4,[e.RAIKOU]:6,[e.ENTEI]:6,[e.SUICUNE]:6,[e.LARVITAR]:4,[e.LUGIA]:8,[e.HO_OH]:8,[e.CELEBI]:5,[e.TREECKO]:3,[e.TORCHIC]:4,[e.MUDKIP]:3,[e.POOCHYENA]:2,[e.ZIGZAGOON]:2,[e.WURMPLE]:1,[e.LOTAD]:3,[e.SEEDOT]:2,[e.TAILLOW]:3,[e.WINGULL]:2,[e.RALTS]:4,[e.SURSKIT]:2,[e.SHROOMISH]:3,[e.SLAKOTH]:4,[e.NINCADA]:4,[e.WHISMUR]:2,[e.MAKUHITA]:3,[e.AZURILL]:4,[e.NOSEPASS]:2,[e.SKITTY]:1,[e.SABLEYE]:2,[e.MAWILE]:2,[e.ARON]:3,[e.MEDITITE]:3,[e.ELECTRIKE]:2,[e.PLUSLE]:2,[e.MINUN]:2,[e.VOLBEAT]:2,[e.ILLUMISE]:2,[e.ROSELIA]:3,[e.GULPIN]:1,[e.CARVANHA]:3,[e.WAILMER]:2,[e.NUMEL]:2,[e.TORKOAL]:3,[e.SPOINK]:2,[e.SPINDA]:1,[e.TRAPINCH]:3,[e.CACNEA]:2,[e.SWABLU]:2,[e.ZANGOOSE]:4,[e.SEVIPER]:3,[e.LUNATONE]:3,[e.SOLROCK]:3,[e.BARBOACH]:2,[e.CORPHISH]:3,[e.BALTOY]:2,[e.LILEEP]:3,[e.ANORITH]:3,[e.FEEBAS]:4,[e.CASTFORM]:1,[e.KECLEON]:2,[e.SHUPPET]:2,[e.DUSKULL]:3,[e.TROPIUS]:3,[e.CHIMECHO]:3,[e.ABSOL]:4,[e.WYNAUT]:2,[e.SNORUNT]:2,[e.SPHEAL]:2,[e.CLAMPERL]:3,[e.RELICANTH]:3,[e.LUVDISC]:1,[e.BAGON]:4,[e.BELDUM]:4,[e.REGIROCK]:6,[e.REGICE]:5,[e.REGISTEEL]:6,[e.LATIAS]:7,[e.LATIOS]:7,[e.KYOGRE]:9,[e.GROUDON]:9,[e.RAYQUAZA]:9,[e.JIRACHI]:7,[e.DEOXYS]:7,[e.TURTWIG]:3,[e.CHIMCHAR]:3,[e.PIPLUP]:3,[e.STARLY]:3,[e.BIDOOF]:2,[e.KRICKETOT]:1,[e.SHINX]:2,[e.BUDEW]:3,[e.CRANIDOS]:3,[e.SHIELDON]:3,[e.BURMY]:2,[e.COMBEE]:2,[e.PACHIRISU]:2,[e.BUIZEL]:2,[e.CHERUBI]:1,[e.SHELLOS]:3,[e.DRIFLOON]:2,[e.BUNEARY]:2,[e.GLAMEOW]:2,[e.CHINGLING]:2,[e.STUNKY]:2,[e.BRONZOR]:3,[e.BONSLY]:2,[e.MIME_JR]:2,[e.HAPPINY]:2,[e.CHATOT]:2,[e.SPIRITOMB]:4,[e.GIBLE]:4,[e.MUNCHLAX]:4,[e.RIOLU]:3,[e.HIPPOPOTAS]:3,[e.SKORUPI]:3,[e.CROAGUNK]:2,[e.CARNIVINE]:2,[e.FINNEON]:1,[e.MANTYKE]:2,[e.SNOVER]:2,[e.ROTOM]:5,[e.UXIE]:5,[e.MESPRIT]:5,[e.AZELF]:6,[e.DIALGA]:8,[e.PALKIA]:8,[e.HEATRAN]:7,[e.REGIGIGAS]:7,[e.GIRATINA]:8,[e.CRESSELIA]:6,[e.PHIONE]:4,[e.MANAPHY]:7,[e.DARKRAI]:7,[e.SHAYMIN]:5,[e.ARCEUS]:9,[e.VICTINI]:7,[e.SNIVY]:3,[e.TEPIG]:3,[e.OSHAWOTT]:3,[e.PATRAT]:1,[e.LILLIPUP]:3,[e.PURRLOIN]:2,[e.PANSAGE]:2,[e.PANSEAR]:2,[e.PANPOUR]:2,[e.MUNNA]:2,[e.PIDOVE]:1,[e.BLITZLE]:2,[e.ROGGENROLA]:3,[e.WOOBAT]:3,[e.DRILBUR]:4,[e.AUDINO]:3,[e.TIMBURR]:4,[e.TYMPOLE]:3,[e.THROH]:4,[e.SAWK]:4,[e.SEWADDLE]:2,[e.VENIPEDE]:3,[e.COTTONEE]:3,[e.PETILIL]:3,[e.BASCULIN]:4,[e.SANDILE]:4,[e.DARUMAKA]:4,[e.MARACTUS]:2,[e.DWEBBLE]:2,[e.SCRAGGY]:3,[e.SIGILYPH]:4,[e.YAMASK]:3,[e.TIRTOUGA]:3,[e.ARCHEN]:3,[e.TRUBBISH]:2,[e.ZORUA]:3,[e.MINCCINO]:3,[e.GOTHITA]:3,[e.SOLOSIS]:3,[e.DUCKLETT]:2,[e.VANILLITE]:3,[e.DEERLING]:2,[e.EMOLGA]:2,[e.KARRABLAST]:3,[e.FOONGUS]:3,[e.FRILLISH]:3,[e.ALOMOMOLA]:4,[e.JOLTIK]:3,[e.FERROSEED]:3,[e.KLINK]:3,[e.TYNAMO]:2,[e.ELGYEM]:2,[e.LITWICK]:3,[e.AXEW]:4,[e.CUBCHOO]:2,[e.CRYOGONAL]:4,[e.SHELMET]:2,[e.STUNFISK]:3,[e.MIENFOO]:3,[e.DRUDDIGON]:4,[e.GOLETT]:3,[e.PAWNIARD]:4,[e.BOUFFALANT]:4,[e.RUFFLET]:3,[e.VULLABY]:3,[e.HEATMOR]:3,[e.DURANT]:4,[e.DEINO]:4,[e.LARVESTA]:4,[e.COBALION]:6,[e.TERRAKION]:6,[e.VIRIZION]:6,[e.TORNADUS]:7,[e.THUNDURUS]:7,[e.RESHIRAM]:8,[e.ZEKROM]:8,[e.LANDORUS]:7,[e.KYUREM]:8,[e.KELDEO]:6,[e.MELOETTA]:7,[e.GENESECT]:6,[e.CHESPIN]:3,[e.FENNEKIN]:3,[e.FROAKIE]:4,[e.BUNNELBY]:3,[e.FLETCHLING]:3,[e.SCATTERBUG]:2,[e.LITLEO]:2,[e.FLABEBE]:3,[e.SKIDDO]:2,[e.PANCHAM]:3,[e.FURFROU]:3,[e.ESPURR]:2,[e.HONEDGE]:4,[e.SPRITZEE]:2,[e.SWIRLIX]:3,[e.INKAY]:3,[e.BINACLE]:3,[e.SKRELP]:2,[e.CLAUNCHER]:3,[e.HELIOPTILE]:3,[e.TYRUNT]:3,[e.AMAURA]:2,[e.HAWLUCHA]:4,[e.DEDENNE]:2,[e.CARBINK]:2,[e.GOOMY]:4,[e.KLEFKI]:3,[e.PHANTUMP]:2,[e.PUMPKABOO]:2,[e.BERGMITE]:3,[e.NOIBAT]:3,[e.XERNEAS]:8,[e.YVELTAL]:8,[e.ZYGARDE]:8,[e.DIANCIE]:7,[e.HOOPA]:7,[e.VOLCANION]:7,[e.ETERNAL_FLOETTE]:4,[e.ROWLET]:3,[e.LITTEN]:3,[e.POPPLIO]:4,[e.PIKIPEK]:2,[e.YUNGOOS]:2,[e.GRUBBIN]:3,[e.CRABRAWLER]:3,[e.ORICORIO]:3,[e.CUTIEFLY]:3,[e.ROCKRUFF]:3,[e.WISHIWASHI]:2,[e.MAREANIE]:2,[e.MUDBRAY]:3,[e.DEWPIDER]:3,[e.FOMANTIS]:2,[e.MORELULL]:2,[e.SALANDIT]:3,[e.STUFFUL]:3,[e.BOUNSWEET]:3,[e.COMFEY]:4,[e.ORANGURU]:4,[e.PASSIMIAN]:4,[e.WIMPOD]:3,[e.SANDYGAST]:3,[e.PYUKUMUKU]:2,[e.TYPE_NULL]:5,[e.MINIOR]:4,[e.KOMALA]:3,[e.TURTONATOR]:4,[e.TOGEDEMARU]:3,[e.MIMIKYU]:4,[e.BRUXISH]:4,[e.DRAMPA]:4,[e.DHELMISE]:4,[e.JANGMO_O]:4,[e.TAPU_KOKO]:6,[e.TAPU_LELE]:7,[e.TAPU_BULU]:6,[e.TAPU_FINI]:5,[e.COSMOG]:7,[e.NIHILEGO]:6,[e.BUZZWOLE]:6,[e.PHEROMOSA]:7,[e.XURKITREE]:6,[e.CELESTEELA]:6,[e.KARTANA]:8,[e.GUZZLORD]:6,[e.NECROZMA]:8,[e.MAGEARNA]:7,[e.MARSHADOW]:7,[e.POIPOLE]:8,[e.STAKATAKA]:6,[e.BLACEPHALON]:7,[e.ZERAORA]:6,[e.MELTAN]:6,[e.ALOLA_RATTATA]:1,[e.ALOLA_SANDSHREW]:2,[e.ALOLA_VULPIX]:3,[e.ALOLA_DIGLETT]:2,[e.ALOLA_MEOWTH]:3,[e.ALOLA_GEODUDE]:3,[e.ALOLA_GRIMER]:3,[e.GROOKEY]:3,[e.SCORBUNNY]:4,[e.SOBBLE]:3,[e.SKWOVET]:2,[e.ROOKIDEE]:3,[e.BLIPBUG]:2,[e.NICKIT]:1,[e.GOSSIFLEUR]:2,[e.WOOLOO]:2,[e.CHEWTLE]:3,[e.YAMPER]:2,[e.ROLYCOLY]:3,[e.APPLIN]:3,[e.SILICOBRA]:3,[e.CRAMORANT]:3,[e.ARROKUDA]:3,[e.TOXEL]:3,[e.SIZZLIPEDE]:3,[e.CLOBBOPUS]:2,[e.SINISTEA]:3,[e.HATENNA]:3,[e.IMPIDIMP]:3,[e.MILCERY]:3,[e.FALINKS]:4,[e.PINCURCHIN]:3,[e.SNOM]:3,[e.STONJOURNER]:3,[e.EISCUE]:3,[e.INDEEDEE]:4,[e.MORPEKO]:3,[e.CUFANT]:3,[e.DRACOZOLT]:5,[e.ARCTOZOLT]:4,[e.DRACOVISH]:5,[e.ARCTOVISH]:4,[e.DURALUDON]:5,[e.DREEPY]:4,[e.ZACIAN]:9,[e.ZAMAZENTA]:8,[e.ETERNATUS]:10,[e.KUBFU]:6,[e.ZARUDE]:5,[e.REGIELEKI]:6,[e.REGIDRAGO]:6,[e.GLASTRIER]:6,[e.SPECTRIER]:8,[e.CALYREX]:8,[e.ENAMORUS]:7,[e.GALAR_MEOWTH]:3,[e.GALAR_PONYTA]:2,[e.GALAR_SLOWPOKE]:3,[e.GALAR_FARFETCHD]:3,[e.GALAR_MR_MIME]:3,[e.GALAR_ARTICUNO]:6,[e.GALAR_ZAPDOS]:6,[e.GALAR_MOLTRES]:6,[e.GALAR_CORSOLA]:3,[e.GALAR_ZIGZAGOON]:3,[e.GALAR_DARUMAKA]:4,[e.GALAR_YAMASK]:3,[e.GALAR_STUNFISK]:2,[e.HISUI_GROWLITHE]:4,[e.HISUI_VOLTORB]:3,[e.HISUI_QWILFISH]:4,[e.HISUI_SNEASEL]:5,[e.HISUI_ZORUA]:3,[e.SPRIGATITO]:4,[e.FUECOCO]:4,[e.QUAXLY]:4,[e.LECHONK]:2,[e.TAROUNTULA]:1,[e.NYMBLE]:3,[e.PAWMI]:3,[e.TANDEMAUS]:4,[e.FIDOUGH]:2,[e.SMOLIV]:3,[e.SQUAWKABILLY]:2,[e.NACLI]:4,[e.CHARCADET]:4,[e.TADBULB]:3,[e.WATTREL]:3,[e.MASCHIFF]:3,[e.SHROODLE]:2,[e.BRAMBLIN]:3,[e.TOEDSCOOL]:3,[e.KLAWF]:3,[e.CAPSAKID]:3,[e.RELLOR]:2,[e.FLITTLE]:3,[e.TINKATINK]:4,[e.WIGLETT]:2,[e.BOMBIRDIER]:3,[e.FINIZEN]:3,[e.VAROOM]:4,[e.CYCLIZAR]:4,[e.ORTHWORM]:4,[e.GLIMMET]:4,[e.GREAVARD]:3,[e.FLAMIGO]:4,[e.CETODDLE]:3,[e.VELUZA]:4,[e.DONDOZO]:4,[e.TATSUGIRI]:4,[e.GREAT_TUSK]:7,[e.SCREAM_TAIL]:5,[e.BRUTE_BONNET]:5,[e.FLUTTER_MANE]:7,[e.SLITHER_WING]:6,[e.SANDY_SHOCKS]:6,[e.IRON_TREADS]:6,[e.IRON_BUNDLE]:6,[e.IRON_HANDS]:6,[e.IRON_JUGULIS]:6,[e.IRON_MOTH]:6,[e.IRON_THORNS]:5,[e.FRIGIBAX]:4,[e.GIMMIGHOUL]:4,[e.WO_CHIEN]:5,[e.CHIEN_PAO]:7,[e.TING_LU]:6,[e.CHI_YU]:7,[e.ROARING_MOON]:7,[e.IRON_VALIANT]:6,[e.KORAIDON]:9,[e.MIRAIDON]:9,[e.WALKING_WAKE]:7,[e.IRON_LEAVES]:6,[e.POLTCHAGEIST]:4,[e.OKIDOGI]:6,[e.MUNKIDORI]:6,[e.FEZANDIPITI]:5,[e.OGERPON]:7,[e.GOUGING_FIRE]:7,[e.RAGING_BOLT]:7,[e.IRON_BOULDER]:7,[e.IRON_CROWN]:7,[e.TERAPAGOS]:8,[e.PECHARUNT]:6,[e.PALDEA_TAUROS]:5,[e.PALDEA_WOOPER]:3,[e.BLOODMOON_URSALUNA]:5},E1=[{passive:40,costReduction:[25,60],egg:30},{passive:40,costReduction:[25,60],egg:30},{passive:35,costReduction:[20,50],egg:25},{passive:30,costReduction:[15,40],egg:20},{passive:25,costReduction:[12,35],egg:18},{passive:20,costReduction:[10,30],egg:15},{passive:15,costReduction:[8,20],egg:12},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10}];function WV(E){return E1[E-1].passive}L(WV,"getPassiveCandyCount");function YV(E){return E1[E-1].costReduction}L(YV,"getValueReductionCandyCounts");function yV(E){return E1[E-1].egg}L(yV,"getSameSpeciesEggCandyCounts");var oe=(E=>(E.MEGA="mega",E.MEGA_X="mega-x",E.MEGA_Y="mega-y",E.PRIMAL="primal",E.ORIGIN="origin",E.INCARNATE="incarnate",E.THERIAN="therian",E.GIGANTAMAX="gigantamax",E.GIGANTAMAX_SINGLE="gigantamax-single",E.GIGANTAMAX_RAPID="gigantamax-rapid",E.ETERNAMAX="eternamax",E))(oe||{});function xe(E){if(!E)throw new Error("`species` must not be undefined in `getPokemonSpecies()`");return Array.isArray(E)&&(E=E[Math.floor(Math.random()*E.length)]),E>=2e3?fR.find(A=>A.speciesId===E):fR[E-1]}L(xe,"getPokemonSpecies");function Bi(E,A){var R;const s=E>=2e3?fR.find(n=>n.speciesId===E):fR[E-1];return A<((R=s.forms)==null?void 0:R.length)?s.forms[A]:s}L(Bi,"getPokemonSpeciesForm");function u7(E,A){const s=/([a-z]{2}.*?[aeiou(?:y$)\-\']+)(.*?)$/i,R=/([a-z]{2}.*?[aeiou(?:y$)\-\'])(.*?)$/i,[n,I]=[E,A].map(H=>/^(?:[^ ]+) /.exec(H)),[a,r]=[n,I].map(H=>H?H[0]:"");a&&(E=E.slice(a.length)),r&&(A=A.slice(r.length));const[S,o]=[E,A].map(H=>/ (?:[^ ]+)$/.exec(H)),[l,C]=[S,o].map(H=>H?H[0]:"");l&&(E=E.slice(0,-l.length)),C&&(A=A.slice(0,-C.length));const M=E.split(/ /g),u=A.split(/ /g),h=s.exec(E),P=R.exec(A);let G,d;if(G=M.length===1?h?h[1]:E:M[M.length-1],u.length===1)if(P){const H=G.slice(G.length-1),f=P[1].slice(P.length-1);if(d=(/[\-']/.test(f)?f:"")+P[2]||f,H===d[0])if(/[aiu]/.test(H))d=d.slice(1);else{const K=new RegExp(`[^${H}]`).exec(d);(K==null?void 0:K.index)!==void 0&&K.index>0&&(d=d.slice(K.index))}}else d=A;else d=u[u.length-1];return M.length>1&&(G=`${M.slice(0,M.length-1).join(" ")} ${G}`),d=`${d.slice(0,1).toLowerCase()}${d.slice(1)}`,`${a||r}${G}${d}${C||l}`}L(u7,"getFusedSpeciesName");const Z1=class Z1{constructor(A,s,R,n,I,a,r,S,o,l,C,M,u,h,P,G,d,H,f){this.type1=A,this.type2=s,this.height=R,this.weight=n,this.ability1=I,this.ability2=a===O.NONE?I:a,this.abilityHidden=r,this.baseTotal=S,this.baseStats=[o,l,C,M,u,h],this.catchRate=P,this.baseFriendship=G,this.baseExp=d,this.genderDiffs=H,this.isStarterSelectable=f}getRootSpeciesId(A=!1){let s=this.speciesId;for(;QA.hasOwnProperty(s)&&(!A||!KA.hasOwnProperty(s));)s=QA[s];return s}get generation(){return this._generation}set generation(A){this._generation=A}get formIndex(){return this._formIndex}set formIndex(A){this._formIndex=A}isOfType(A){return this.type1===A||this.type2!==null&&this.type2===A}getAbilityCount(){return this.abilityHidden!==O.NONE?3:2}getAbility(A){let s;return A===0?s=this.ability1:A===1?s=this.ability2:s=this.abilityHidden,s}getLevelMoves(){return En.hasOwnProperty(this.speciesId)&&En[this.speciesId].hasOwnProperty(this.formIndex)?En[this.speciesId][this.formIndex].slice(0):nc[this.speciesId].slice(0)}getRegion(){return Math.floor(this.speciesId/2e3)}isObtainable(){return this.generation<=9||QA.hasOwnProperty(this.speciesId)}isCatchable(){return this.isObtainable()&&L8.indexOf(this.speciesId)===-1}isRegional(){return this.getRegion()>0}isTrainerForbidden(){return[e.ETERNAL_FLOETTE,e.BLOODMOON_URSALUNA].includes(this.speciesId)}isRareRegional(){switch(this.getRegion()){case 3:return!0}return!1}getBaseStatTotal(){return this.baseStats.reduce((A,s)=>s+A)}getBaseStat(A){return this.baseStats[A]}getBaseExp(){let A=this.baseExp;switch(this.getFormSpriteKey()){case oe.MEGA:case oe.MEGA_X:case oe.MEGA_Y:case oe.PRIMAL:case oe.GIGANTAMAX:case oe.ETERNAMAX:A*=1.5;break}return A}getSpriteAtlasPath(A,s,R,n){const I=this.getSpriteId(A,s,R,n).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(I)?"variant/":""}${I}`}getSpriteId(A,s,R,n=0,I){(s===void 0||this instanceof p)&&(s=this.formIndex);const a=this.getFormSpriteKey(s),S=`${this.genderDiffs&&A&&![oe.MEGA,oe.GIGANTAMAX].find(C=>a===C)?"female__":""}${this.speciesId}${a?`-${a}`:""}`;let o=Zs;`${I?"back__":""}${S}`.split("__").map(C=>o?o=o[C]:null);const l=o;return`${I?"back__":""}${R&&(!l||!n&&!l[n||0])?"shiny__":""}${S}${R&&l&&l[n]===2?`_${n+1}`:""}`}getSpriteKey(A,s,R,n){return`pkmn__${this.getSpriteId(A,s,R,n)}`}getVariantDataIndex(A){var I;let s=null,R=this.speciesId;const n=xe(this.speciesId);return n.forms.length>0&&A!==void 0&&(s=(I=n.forms[A])==null?void 0:I.getFormSpriteKey(A),s&&(R=`${this.speciesId}-${s}`)),R}getIconAtlasKey(A,s,R){const n=this.getVariantDataIndex(A),I=s&&Zs[n]&&R!==void 0&&Zs[n][R];return`pokemon_icons_${this.generation}${I?"v":""}`}getIconId(A,s,R,n){s===void 0&&(s=this.formIndex);const I=this.getVariantDataIndex(s);let a=this.speciesId.toString();const r=R&&Zs[I]&&n!==void 0&&Zs[I][n];switch(R&&!r&&(a+="s"),this.speciesId){case e.DODUO:case e.DODRIO:case e.MEGANIUM:case e.TORCHIC:case e.COMBUSKEN:case e.BLAZIKEN:case e.HIPPOPOTAS:case e.HIPPOWDON:case e.UNFEZANT:case e.FRILLISH:case e.JELLICENT:case e.PYROAR:a+=A?"-f":"";break}let S=this.getFormSpriteKey(s);if(S)switch(this.speciesId){case e.DUDUNSPARCE:break;case e.ZACIAN:case e.ZAMAZENTA:S.startsWith("behemoth")&&(S="crowned");default:a+=`-${S}`;break}return r&&(a+=`_${n+1}`),a}getCryKey(A){let s=this.speciesId;if(this.speciesId>2e3)switch(this.speciesId){case e.GALAR_SLOWPOKE:break;case e.ETERNAL_FLOETTE:break;case e.BLOODMOON_URSALUNA:break;default:s=s%2e3;break}let R=s.toString();const n=xe(s).forms;if(n.length){A!==void 0&&A>=n.length&&(console.warn(`Attempted accessing form with index ${A} of species ${xe(s).getName()} with only ${n.length||0} forms`),A=Math.min(A,n.length-1));const I=n[A||0].formKey;switch(I){case oe.MEGA:case oe.MEGA_X:case oe.MEGA_Y:case oe.GIGANTAMAX:case oe.GIGANTAMAX_SINGLE:case oe.GIGANTAMAX_RAPID:case"white":case"black":case"therian":case"sky":case"gorging":case"gulping":case"no-ice":case"hangry":case"crowned":case"eternamax":case"four":case"droopy":case"stretchy":case"hero":case"roaming":case"complete":case"10-complete":case"10":case"10-pc":case"super":case"unbound":case"pau":case"pompom":case"sensu":case"dusk":case"midnight":case"school":case"dawn-wings":case"dusk-mane":case"ultra":R+=`-${I}`;break}}return`cry/${R}`}validateStarterMoveset(A,s){const R=this.getRootSpeciesId();for(const n of A){if(BE.hasOwnProperty(R)){const I=BE[R].findIndex(a=>a===n);if(I>-1&&s&1<<I)continue}if(En.hasOwnProperty(this.speciesId)&&En[this.speciesId].hasOwnProperty(this.formIndex)){if(!En[this.speciesId][this.formIndex].find(I=>I[0]<=5&&I[1]===n))return!1}else if(!nc[this.speciesId].find(I=>I[0]<=5&&I[1]===n))return!1}return!0}loadAssets(A,s,R,n,I,a){return new Promise(r=>{const S=this.getSpriteKey(s,R,n,I);A.loadPokemonAtlas(S,this.getSpriteAtlasPath(s,R,n,I)),A.load.audio(`${this.getCryKey(R)}`,`audio/${this.getCryKey(R)}.m4a`),A.load.once(Phaser.Loader.Events.COMPLETE,()=>{const o=console.warn;console.warn=()=>{};const l=A.anims.generateFrameNames(S,{zeroPad:4,suffix:".png",start:1,end:400});console.warn=o,A.anims.exists(S)?A.anims.get(S).frameRate=10:A.anims.create({key:this.getSpriteKey(s,R,n,I),frames:l,frameRate:10,repeat:-1});const C=this.getSpriteAtlasPath(s,R,n,I).replace("variant/","").replace(/_[1-3]$/,"");A.loadPokemonVariantAssets(S,C,I),r()}),a?A.load.isLoading()||A.load.start():r()})}cry(A,s,R){const n=this.getCryKey(this.formIndex);let I=A.sound.get(n);return I!=null&&I.pendingRemove&&(I=null),I=A.playSound(I??n,s),R&&I.stop(),I}generateCandyColors(A){const s=A.textures.get(this.getSpriteKey(!1)),R=s.frames[s.firstFrame],n=s.getSourceImage(),I=document.createElement("canvas"),a=[],r=I.getContext("2d"),S=R;I.width=S.width,I.height=S.height,r==null||r.drawImage(n,S.cutX,S.cutY,S.width,S.height,0,0,S.width,S.height);const o=r==null?void 0:r.getImageData(S.cutX,S.cutY,S.width,S.height),l=o==null?void 0:o.data,C=[];if((l==null?void 0:l.length)!==void 0){for(let h=0;h<l.length;h+=4)if(l[h+3]){const P=l.slice(h,h+4),[G,d,H,f]=P;a.find(K=>K[0]===G&&K[1]===d&&K[2]===H)||a.push([G,d,H,f])}for(let h=0;h<l.length;h+=4)l.slice(h,h+3).reduce((G,d)=>G+d,0)&&C.push(Xs({r:l[h],g:l[h+1],b:l[h+2],a:l[h+3]}))}let M=new Map;const u=Math.random;return Math.random=()=>Phaser.Math.RND.realInRange(0,1),A.executeWithSeedOffset(()=>{M=_T.quantize(C,2)},0,"This result should not vary"),Math.random=u,Array.from(M.keys()).map(h=>Object.values(zh(h)))}};L(Z1,"PokemonSpeciesForm");let hl=Z1;const X1=class X1 extends hl{constructor(A,s,R,n,I,a,r,S,o,l,C,M,u,h,P,G,d,H,f,K,W,V,k,Q,j,J,ne,...x){super(r,S,o,l,C,M,u,h,P,G,d,H,f,K,W,V,k,J,!1),this.speciesId=A,this.formIndex=0,this.generation=s,this.subLegendary=R,this.legendary=n,this.mythical=I,this.species=a,this.growthRate=Q,this.malePercent=j,this.genderDiffs=J,this.canChangeForm=!!ne,this.forms=x,this.localize(),x.forEach((q,F)=>{q.speciesId=A,q.formIndex=F,q.generation=s})}getName(A){if(A!==void 0&&this.forms.length){const s=this.forms[A];let R;switch(s.formKey){case oe.MEGA:case oe.PRIMAL:case oe.ETERNAMAX:case oe.MEGA_X:case oe.MEGA_Y:R=s.formKey;break;default:s.formKey.indexOf(oe.GIGANTAMAX)>-1?R="gigantamax":R=null}if(R)return D.t(`battlePokemonForm:${R}`,{pokemonName:this.name})}return this.name}localize(){this.name=D.t(`pokemon:${e[this.speciesId].toLowerCase()}`)}getWildSpeciesForLevel(A,s,R,n){return this.getSpeciesForLevel(A,s,!1,(R?we.WEAKER:we.AVERAGE)+(n!=null&&n.isEndless?1:0))}getTrainerSpeciesForLevel(A,s=!1,R,n=0){return this.getSpeciesForLevel(A,s,!0,R,n)}getStrengthLevelDiff(A){switch(Math.min(A,we.STRONGER)){case we.WEAKEST:return 60;case we.WEAKER:return 40;case we.WEAK:return 20;case we.AVERAGE:return 8;case we.STRONG:return 4;default:return 0}}getSpeciesForLevel(A,s=!1,R=!1,n=we.WEAKER,I=0){const a=this.getPrevolutionLevels();if(a.length)for(let h=a.length-1;h>=0;h--){const P=a[h];if(A<P[1])return P[0]}if(!s||!kt.hasOwnProperty(this.speciesId))return this.speciesId;const r=kt[this.speciesId],S=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn"),o=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut"),l=new Map;let C=0,M=1;for(const h of r){if(h.level>A)continue;let P;const G=xe(h.speciesId),d=!this.isRegional()&&G.isRegional();if(!R&&d)P=0;else if(h.wildDelay===r8.NONE)if(n===we.STRONGER)P=1;else{const H=this.getStrengthLevelDiff(n),f=.875-.125*n;P=Math.min(f+S(Math.min(A-h.level,H)/H)*(1-f),1)}else{const H=Math.max(h.level-1+h.wildDelay*this.getStrengthLevelDiff(n),1);let f=Math.max(h.level>1?h.level:Math.floor(H/2),1);if(h.level<=1&&QA.hasOwnProperty(this.speciesId)){const K=kt[QA[this.speciesId]].find(W=>W.speciesId===this.speciesId).level;K>1&&(f=K)}P=Math.min(.65*S(Math.min(Math.max(A-f,0),H)/H)+.35*o(Math.min(Math.max(A-f,0),H*2.5)/(H*2.5)),1)}I>=80&&R&&n>we.WEAKER&&(P=1,M=0),P>0&&(d&&(P/=G.isRareRegional()?16:4),C+=P,l.set(C,h.speciesId),1-P<M&&(M=1-P))}if(M===1||Phaser.Math.RND.realInRange(0,1)<M)return this.speciesId;const u=l.size===1?0:_e(C);for(const h of l.keys())if(u<h)return xe(l.get(h)).getSpeciesForLevel(A,!0,R,n,I);return this.speciesId}getEvolutionLevels(){const A=[];if(kt.hasOwnProperty(this.speciesId))for(const s of kt[this.speciesId]){const R=s.speciesId,n=s.level;A.push([R,n]);const I=xe(R).getEvolutionLevels();for(const a of I)A.push(a)}return A}getPrevolutionLevels(){const A=[],s=Object.keys(kt);for(const R of s)for(const n of kt[R])if(n.speciesId===this.speciesId&&(!this.forms.length||!n.evoFormKey||n.evoFormKey===this.forms[this.formIndex].formKey)&&A.every(I=>I[0]!==parseInt(R))){const I=parseInt(R),a=n.level;A.push([I,a]);const r=xe(I).getPrevolutionLevels();for(const S of r)A.push(S)}return A}getSimulatedEvolutionChain(A,s=!1,R=!1,n=!1){const I=[];if(QA.hasOwnProperty(this.speciesId)){const a=this.getPrevolutionLevels().reverse(),r=n?0:s||R?s&&R?2.5:5:10;I.push([a[0][0],1]);for(let l=1;l<a.length;l++){const C=kt[a[l-1][0]].find(M=>M.speciesId===a[l][0]);I.push([a[l][0],Math.min(Math.max((C==null?void 0:C.level)+Math.round(ph(.5,1+r*.2)*Math.max(C==null?void 0:C.wildDelay,.5)*5)-1,2,C==null?void 0:C.level),A-1)])}const S=I[a.length-1][1],o=kt[a[a.length-1][0]].find(l=>l.speciesId===this.speciesId);I.push([this.speciesId,Math.min(Math.max(S+Math.round(ph(.5,1+r*.2)*Math.max(o==null?void 0:o.wildDelay,.5)*5),S+1,o==null?void 0:o.level),A)])}else I.push([this.speciesId,1]);return I}getCompatibleFusionSpeciesFilter(){const A=kt.hasOwnProperty(this.speciesId),s=QA.hasOwnProperty(this.speciesId),R=this.subLegendary,n=this.legendary,I=this.mythical;return a=>(R||n||I||kt.hasOwnProperty(a.speciesId)===A&&QA.hasOwnProperty(a.speciesId)===s)&&a.subLegendary===R&&a.legendary===n&&a.mythical===I&&(this.isTrainerForbidden()||!a.isTrainerForbidden())&&a.speciesId!==e.DITTO}isObtainable(){return super.isObtainable()}hasVariants(){var s;let A=this.speciesId;if(this.forms.length>0){const R=(s=this.forms[this.formIndex])==null?void 0:s.formKey;R&&(A=`${A}-${R}`)}return Zs.hasOwnProperty(A)||Zs.hasOwnProperty(this.speciesId)}getFormSpriteKey(A){var s;return this.forms.length&&A!==void 0&&A>=this.forms.length&&(console.warn(`Attempted accessing form with index ${A} of species ${this.getName()} with only ${this.forms.length||0} forms`),A=Math.min(A,this.forms.length-1)),(s=this.forms)!=null&&s.length?this.forms[A||0].getFormSpriteKey():""}};L(X1,"PokemonSpecies");let c=X1;const Q1=class Q1 extends hl{constructor(A,s,R,n,I,a,r,S,o,l,C,M,u,h,P,G,d,H,f,K=!1,W=null,V=!1){super(R,n,I,a,r,S,o,l,C,M,u,h,P,G,d,H,f,K,V||!s),this.starterSelectableKeys=["10","50","10-pc","50-pc","red","orange","yellow","green","blue","indigo","violet"],this.formName=A,this.formKey=s,this.formSpriteKey=W}getFormSpriteKey(A){return this.formSpriteKey!==null?this.formSpriteKey:this.formKey}};L(Q1,"PokemonForm");let p=Q1;const D7=[oe.MEGA,oe.MEGA_X,oe.MEGA_Y,oe.PRIMAL,oe.ORIGIN,oe.THERIAN,oe.GIGANTAMAX,oe.GIGANTAMAX_RAPID,oe.GIGANTAMAX_SINGLE,oe.ETERNAMAX].map(E=>E.toString());function M7(E){const A=[],s=new Date;return s.setUTCHours(0,0,0,0),E.executeWithSeedOffset(()=>{for(;A.length<qb;){const R=parseInt(JA(Object.keys(KA)),10),n=xe(R);A.includes(n)||A.push(n)}},0,s.getTime().toString()),A}L(M7,"getPokerusStarters");const fR=[];function h7(){fR.push(new c(e.BULBASAUR,1,!1,!1,!1,"Seed Pokémon",i.GRASS,i.POISON,.7,6.9,O.OVERGROW,O.NONE,O.CHLOROPHYLL,318,45,49,49,65,65,45,45,50,64,_.MEDIUM_SLOW,87.5,!1),new c(e.IVYSAUR,1,!1,!1,!1,"Seed Pokémon",i.GRASS,i.POISON,1,13,O.OVERGROW,O.NONE,O.CHLOROPHYLL,405,60,62,63,80,80,60,45,50,142,_.MEDIUM_SLOW,87.5,!1),new c(e.VENUSAUR,1,!1,!1,!1,"Seed Pokémon",i.GRASS,i.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,_.MEDIUM_SLOW,87.5,!0,!0,new p("Normal","",i.GRASS,i.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,!0,null,!0),new p("Mega",oe.MEGA,i.GRASS,i.POISON,2.4,155.5,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,625,80,100,123,122,120,80,45,50,263,!0),new p("G-Max",oe.GIGANTAMAX,i.GRASS,i.POISON,24,999.9,O.EFFECT_SPORE,O.NONE,O.EFFECT_SPORE,625,120,82,98,130,115,80,45,50,263,!0)),new c(e.CHARMANDER,1,!1,!1,!1,"Lizard Pokémon",i.FIRE,null,.6,8.5,O.BLAZE,O.NONE,O.SOLAR_POWER,309,39,52,43,60,50,65,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.CHARMELEON,1,!1,!1,!1,"Flame Pokémon",i.FIRE,null,1.1,19,O.BLAZE,O.NONE,O.SOLAR_POWER,405,58,64,58,80,65,80,45,50,142,_.MEDIUM_SLOW,87.5,!1),new c(e.CHARIZARD,1,!1,!1,!1,"Flame Pokémon",i.FIRE,i.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,_.MEDIUM_SLOW,87.5,!1,!0,new p("Normal","",i.FIRE,i.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,!1,null,!0),new p("Mega X",oe.MEGA_X,i.FIRE,i.DRAGON,1.7,110.5,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,634,78,130,111,130,85,100,45,50,267),new p("Mega Y",oe.MEGA_Y,i.FIRE,i.FLYING,1.7,100.5,O.DROUGHT,O.NONE,O.DROUGHT,634,78,104,78,159,115,100,45,50,267),new p("G-Max",oe.GIGANTAMAX,i.FIRE,i.FLYING,28,999.9,O.BERSERK,O.NONE,O.BERSERK,634,118,84,93,139,100,100,45,50,267)),new c(e.SQUIRTLE,1,!1,!1,!1,"Tiny Turtle Pokémon",i.WATER,null,.5,9,O.TORRENT,O.NONE,O.RAIN_DISH,314,44,48,65,50,64,43,45,50,63,_.MEDIUM_SLOW,87.5,!1),new c(e.WARTORTLE,1,!1,!1,!1,"Turtle Pokémon",i.WATER,null,1,22.5,O.TORRENT,O.NONE,O.RAIN_DISH,405,59,63,80,65,80,58,45,50,142,_.MEDIUM_SLOW,87.5,!1),new c(e.BLASTOISE,1,!1,!1,!1,"Shellfish Pokémon",i.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,_.MEDIUM_SLOW,87.5,!1,!0,new p("Normal","",i.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,!1,null,!0),new p("Mega",oe.MEGA,i.WATER,null,1.6,101.1,O.MEGA_LAUNCHER,O.NONE,O.MEGA_LAUNCHER,630,79,103,120,135,115,78,45,50,265),new p("G-Max",oe.GIGANTAMAX,i.WATER,i.STEEL,25,999.9,O.SHELL_ARMOR,O.NONE,O.SHELL_ARMOR,630,119,83,135,115,110,68,45,50,265)),new c(e.CATERPIE,1,!1,!1,!1,"Worm Pokémon",i.BUG,null,.3,2.9,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,30,35,20,20,45,255,50,39,_.MEDIUM_FAST,50,!1),new c(e.METAPOD,1,!1,!1,!1,"Cocoon Pokémon",i.BUG,null,.7,9.9,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,20,55,25,25,30,120,50,72,_.MEDIUM_FAST,50,!1),new c(e.BUTTERFREE,1,!1,!1,!1,"Butterfly Pokémon",i.BUG,i.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,_.MEDIUM_FAST,50,!0,!0,new p("Normal","",i.BUG,i.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,!0,null,!0),new p("G-Max",oe.GIGANTAMAX,i.BUG,i.FLYING,17,999.9,O.COMPOUND_EYES,O.NONE,O.COMPOUND_EYES,495,85,35,80,120,90,85,45,50,198,!0)),new c(e.WEEDLE,1,!1,!1,!1,"Hairy Bug Pokémon",i.BUG,i.POISON,.3,3.2,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,40,35,30,20,20,50,255,70,39,_.MEDIUM_FAST,50,!1),new c(e.KAKUNA,1,!1,!1,!1,"Cocoon Pokémon",i.BUG,i.POISON,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,45,25,50,25,25,35,120,70,72,_.MEDIUM_FAST,50,!1),new c(e.BEEDRILL,1,!1,!1,!1,"Poison Bee Pokémon",i.BUG,i.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,178,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.BUG,i.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,178,!1,null,!0),new p("Mega",oe.MEGA,i.BUG,i.POISON,1.4,40.5,O.ADAPTABILITY,O.NONE,O.ADAPTABILITY,495,65,150,40,15,80,145,45,70,178)),new c(e.PIDGEY,1,!1,!1,!1,"Tiny Bird Pokémon",i.NORMAL,i.FLYING,.3,1.8,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,251,40,45,40,35,35,56,255,70,50,_.MEDIUM_SLOW,50,!1),new c(e.PIDGEOTTO,1,!1,!1,!1,"Bird Pokémon",i.NORMAL,i.FLYING,1.1,30,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,349,63,60,55,50,50,71,120,70,122,_.MEDIUM_SLOW,50,!1),new c(e.PIDGEOT,1,!1,!1,!1,"Bird Pokémon",i.NORMAL,i.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,216,_.MEDIUM_SLOW,50,!1,!0,new p("Normal","",i.NORMAL,i.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,216,!1,null,!0),new p("Mega",oe.MEGA,i.NORMAL,i.FLYING,2.2,50.5,O.NO_GUARD,O.NO_GUARD,O.NO_GUARD,579,83,80,80,135,80,121,45,70,216)),new c(e.RATTATA,1,!1,!1,!1,"Mouse Pokémon",i.NORMAL,null,.3,3.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,253,30,56,35,25,35,72,255,70,51,_.MEDIUM_FAST,50,!0),new c(e.RATICATE,1,!1,!1,!1,"Mouse Pokémon",i.NORMAL,null,.7,18.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,413,55,81,60,50,70,97,127,70,145,_.MEDIUM_FAST,50,!0),new c(e.SPEAROW,1,!1,!1,!1,"Tiny Bird Pokémon",i.NORMAL,i.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.SNIPER,262,40,60,30,31,31,70,255,70,52,_.MEDIUM_FAST,50,!1),new c(e.FEAROW,1,!1,!1,!1,"Beak Pokémon",i.NORMAL,i.FLYING,1.2,38,O.KEEN_EYE,O.NONE,O.SNIPER,442,65,90,65,61,61,100,90,70,155,_.MEDIUM_FAST,50,!1),new c(e.EKANS,1,!1,!1,!1,"Snake Pokémon",i.POISON,null,2,6.9,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,288,35,60,44,40,54,55,255,70,58,_.MEDIUM_FAST,50,!1),new c(e.ARBOK,1,!1,!1,!1,"Cobra Pokémon",i.POISON,null,3.5,65,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,448,60,95,69,65,79,80,90,70,157,_.MEDIUM_FAST,50,!1),new c(e.PIKACHU,1,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,_.MEDIUM_FAST,50,!0,!0,new p("Normal","",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,!0,null,!0),new p("Partner","partner",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new p("Cosplay","cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new p("Cool Cosplay","cool-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new p("Beauty Cosplay","beauty-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new p("Cute Cosplay","cute-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new p("Smart Cosplay","smart-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new p("Tough Cosplay","tough-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new p("G-Max",oe.GIGANTAMAX,i.ELECTRIC,null,21,999.9,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,530,125,95,60,90,70,90,190,50,112)),new c(e.RAICHU,1,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,null,.8,30,O.STATIC,O.NONE,O.LIGHTNING_ROD,485,60,90,55,90,80,110,75,50,243,_.MEDIUM_FAST,50,!0),new c(e.SANDSHREW,1,!1,!1,!1,"Mouse Pokémon",i.GROUND,null,.6,12,O.SAND_VEIL,O.NONE,O.SAND_RUSH,300,50,75,85,20,30,40,255,50,60,_.MEDIUM_FAST,50,!1),new c(e.SANDSLASH,1,!1,!1,!1,"Mouse Pokémon",i.GROUND,null,1,29.5,O.SAND_VEIL,O.NONE,O.SAND_RUSH,450,75,100,110,45,55,65,90,50,158,_.MEDIUM_FAST,50,!1),new c(e.NIDORAN_F,1,!1,!1,!1,"Poison Pin Pokémon",i.POISON,null,.4,7,O.POISON_POINT,O.RIVALRY,O.HUSTLE,275,55,47,52,40,40,41,235,50,55,_.MEDIUM_SLOW,0,!1),new c(e.NIDORINA,1,!1,!1,!1,"Poison Pin Pokémon",i.POISON,null,.8,20,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,70,62,67,55,55,56,120,50,128,_.MEDIUM_SLOW,0,!1),new c(e.NIDOQUEEN,1,!1,!1,!1,"Drill Pokémon",i.POISON,i.GROUND,1.3,60,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,90,92,87,75,85,76,45,50,253,_.MEDIUM_SLOW,0,!1),new c(e.NIDORAN_M,1,!1,!1,!1,"Poison Pin Pokémon",i.POISON,null,.5,9,O.POISON_POINT,O.RIVALRY,O.HUSTLE,273,46,57,40,40,40,50,235,50,55,_.MEDIUM_SLOW,100,!1),new c(e.NIDORINO,1,!1,!1,!1,"Poison Pin Pokémon",i.POISON,null,.9,19.5,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,61,72,57,55,55,65,120,50,128,_.MEDIUM_SLOW,100,!1),new c(e.NIDOKING,1,!1,!1,!1,"Drill Pokémon",i.POISON,i.GROUND,1.4,62,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,81,102,77,85,75,85,45,50,253,_.MEDIUM_SLOW,100,!1),new c(e.CLEFAIRY,1,!1,!1,!1,"Fairy Pokémon",i.FAIRY,null,.6,7.5,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,323,70,45,48,60,65,35,150,140,113,_.FAST,25,!1),new c(e.CLEFABLE,1,!1,!1,!1,"Fairy Pokémon",i.FAIRY,null,1.3,40,O.CUTE_CHARM,O.MAGIC_GUARD,O.UNAWARE,483,95,70,73,95,90,60,25,140,242,_.FAST,25,!1),new c(e.VULPIX,1,!1,!1,!1,"Fox Pokémon",i.FIRE,null,.6,9.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,299,38,41,40,50,65,65,190,50,60,_.MEDIUM_FAST,25,!1),new c(e.NINETALES,1,!1,!1,!1,"Fox Pokémon",i.FIRE,null,1.1,19.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,505,73,76,75,81,100,100,75,50,177,_.MEDIUM_FAST,25,!1),new c(e.JIGGLYPUFF,1,!1,!1,!1,"Balloon Pokémon",i.NORMAL,i.FAIRY,.5,5.5,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,270,115,45,20,45,25,20,170,50,95,_.FAST,25,!1),new c(e.WIGGLYTUFF,1,!1,!1,!1,"Balloon Pokémon",i.NORMAL,i.FAIRY,1,12,O.CUTE_CHARM,O.COMPETITIVE,O.FRISK,435,140,70,45,85,50,45,50,50,218,_.FAST,25,!1),new c(e.ZUBAT,1,!1,!1,!1,"Bat Pokémon",i.POISON,i.FLYING,.8,7.5,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,245,40,45,35,30,40,55,255,50,49,_.MEDIUM_FAST,50,!0),new c(e.GOLBAT,1,!1,!1,!1,"Bat Pokémon",i.POISON,i.FLYING,1.6,55,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,455,75,80,70,65,75,90,90,50,159,_.MEDIUM_FAST,50,!0),new c(e.ODDISH,1,!1,!1,!1,"Weed Pokémon",i.GRASS,i.POISON,.5,5.4,O.CHLOROPHYLL,O.NONE,O.RUN_AWAY,320,45,50,55,75,65,30,255,50,64,_.MEDIUM_SLOW,50,!1),new c(e.GLOOM,1,!1,!1,!1,"Weed Pokémon",i.GRASS,i.POISON,.8,8.6,O.CHLOROPHYLL,O.NONE,O.STENCH,395,60,65,70,85,75,40,120,50,138,_.MEDIUM_SLOW,50,!0),new c(e.VILEPLUME,1,!1,!1,!1,"Flower Pokémon",i.GRASS,i.POISON,1.2,18.6,O.CHLOROPHYLL,O.NONE,O.EFFECT_SPORE,490,75,80,85,110,90,50,45,50,245,_.MEDIUM_SLOW,50,!0),new c(e.PARAS,1,!1,!1,!1,"Mushroom Pokémon",i.BUG,i.GRASS,.3,5.4,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,285,35,70,55,45,55,25,190,70,57,_.MEDIUM_FAST,50,!1),new c(e.PARASECT,1,!1,!1,!1,"Mushroom Pokémon",i.BUG,i.GRASS,1,29.5,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,405,60,95,80,60,80,30,75,70,142,_.MEDIUM_FAST,50,!1),new c(e.VENONAT,1,!1,!1,!1,"Insect Pokémon",i.BUG,i.POISON,1,30,O.COMPOUND_EYES,O.TINTED_LENS,O.RUN_AWAY,305,60,55,50,40,55,45,190,70,61,_.MEDIUM_FAST,50,!1),new c(e.VENOMOTH,1,!1,!1,!1,"Poison Moth Pokémon",i.BUG,i.POISON,1.5,12.5,O.SHIELD_DUST,O.TINTED_LENS,O.WONDER_SKIN,450,70,65,60,90,75,90,75,70,158,_.MEDIUM_FAST,50,!1),new c(e.DIGLETT,1,!1,!1,!1,"Mole Pokémon",i.GROUND,null,.2,.8,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,265,10,55,25,35,45,95,255,50,53,_.MEDIUM_FAST,50,!1),new c(e.DUGTRIO,1,!1,!1,!1,"Mole Pokémon",i.GROUND,null,.7,33.3,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,425,35,100,50,50,70,120,50,50,149,_.MEDIUM_FAST,50,!1),new c(e.MEOWTH,1,!1,!1,!1,"Scratch Cat Pokémon",i.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.NORMAL,null,33,999.9,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,540,115,110,65,65,70,115,255,50,58)),new c(e.PERSIAN,1,!1,!1,!1,"Classy Cat Pokémon",i.NORMAL,null,1,32,O.LIMBER,O.TECHNICIAN,O.UNNERVE,440,65,70,60,65,65,115,90,50,154,_.MEDIUM_FAST,50,!1),new c(e.PSYDUCK,1,!1,!1,!1,"Duck Pokémon",i.WATER,null,.8,19.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,320,50,52,48,65,50,55,190,50,64,_.MEDIUM_FAST,50,!1),new c(e.GOLDUCK,1,!1,!1,!1,"Duck Pokémon",i.WATER,null,1.7,76.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,500,80,82,78,95,80,85,75,50,175,_.MEDIUM_FAST,50,!1),new c(e.MANKEY,1,!1,!1,!1,"Pig Monkey Pokémon",i.FIGHTING,null,.5,28,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,305,40,80,35,35,45,70,190,70,61,_.MEDIUM_FAST,50,!1),new c(e.PRIMEAPE,1,!1,!1,!1,"Pig Monkey Pokémon",i.FIGHTING,null,1,32,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,455,65,105,60,60,70,95,75,70,159,_.MEDIUM_FAST,50,!1),new c(e.GROWLITHE,1,!1,!1,!1,"Puppy Pokémon",i.FIRE,null,.7,19,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,350,55,70,45,70,50,60,190,50,70,_.SLOW,75,!1),new c(e.ARCANINE,1,!1,!1,!1,"Legendary Pokémon",i.FIRE,null,1.9,155,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,555,90,110,80,100,80,95,75,50,194,_.SLOW,75,!1),new c(e.POLIWAG,1,!1,!1,!1,"Tadpole Pokémon",i.WATER,null,.6,12.4,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,300,40,50,40,40,40,90,255,50,60,_.MEDIUM_SLOW,50,!1),new c(e.POLIWHIRL,1,!1,!1,!1,"Tadpole Pokémon",i.WATER,null,1,20,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,385,65,65,65,50,50,90,120,50,135,_.MEDIUM_SLOW,50,!1),new c(e.POLIWRATH,1,!1,!1,!1,"Tadpole Pokémon",i.WATER,i.FIGHTING,1.3,54,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,510,90,95,95,70,90,70,45,50,255,_.MEDIUM_SLOW,50,!1),new c(e.ABRA,1,!1,!1,!1,"Psi Pokémon",i.PSYCHIC,null,.9,19.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,310,25,20,15,105,55,90,200,50,62,_.MEDIUM_SLOW,75,!1),new c(e.KADABRA,1,!1,!1,!1,"Psi Pokémon",i.PSYCHIC,null,1.3,56.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,400,40,35,30,120,70,105,100,50,140,_.MEDIUM_SLOW,75,!0),new c(e.ALAKAZAM,1,!1,!1,!1,"Psi Pokémon",i.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,_.MEDIUM_SLOW,75,!0,!0,new p("Normal","",i.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,!0,null,!0),new p("Mega",oe.MEGA,i.PSYCHIC,null,1.2,48,O.TRACE,O.TRACE,O.TRACE,600,55,50,65,175,105,150,50,50,250,!0)),new c(e.MACHOP,1,!1,!1,!1,"Superpower Pokémon",i.FIGHTING,null,.8,19.5,O.GUTS,O.NO_GUARD,O.STEADFAST,305,70,80,50,35,35,35,180,50,61,_.MEDIUM_SLOW,75,!1),new c(e.MACHOKE,1,!1,!1,!1,"Superpower Pokémon",i.FIGHTING,null,1.5,70.5,O.GUTS,O.NO_GUARD,O.STEADFAST,405,80,100,70,50,60,45,90,50,142,_.MEDIUM_SLOW,75,!1),new c(e.MACHAMP,1,!1,!1,!1,"Superpower Pokémon",i.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,_.MEDIUM_SLOW,75,!1,!0,new p("Normal","",i.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.FIGHTING,null,25,999.9,O.GUTS,O.GUTS,O.GUTS,605,115,170,95,65,95,65,45,50,253)),new c(e.BELLSPROUT,1,!1,!1,!1,"Flower Pokémon",i.GRASS,i.POISON,.7,4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,300,50,75,35,70,30,40,255,70,60,_.MEDIUM_SLOW,50,!1),new c(e.WEEPINBELL,1,!1,!1,!1,"Flycatcher Pokémon",i.GRASS,i.POISON,1,6.4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,390,65,90,50,85,45,55,120,70,137,_.MEDIUM_SLOW,50,!1),new c(e.VICTREEBEL,1,!1,!1,!1,"Flycatcher Pokémon",i.GRASS,i.POISON,1.7,15.5,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,490,80,105,65,100,70,70,45,70,221,_.MEDIUM_SLOW,50,!1),new c(e.TENTACOOL,1,!1,!1,!1,"Jellyfish Pokémon",i.WATER,i.POISON,.9,45.5,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,335,40,40,35,50,100,70,190,50,67,_.SLOW,50,!1),new c(e.TENTACRUEL,1,!1,!1,!1,"Jellyfish Pokémon",i.WATER,i.POISON,1.6,55,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,515,80,70,65,80,120,100,60,50,180,_.SLOW,50,!1),new c(e.GEODUDE,1,!1,!1,!1,"Rock Pokémon",i.ROCK,i.GROUND,.4,20,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,300,40,80,100,30,30,20,255,70,60,_.MEDIUM_SLOW,50,!1),new c(e.GRAVELER,1,!1,!1,!1,"Rock Pokémon",i.ROCK,i.GROUND,1,105,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,390,55,95,115,45,45,35,120,70,137,_.MEDIUM_SLOW,50,!1),new c(e.GOLEM,1,!1,!1,!1,"Megaton Pokémon",i.ROCK,i.GROUND,1.4,300,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,495,80,120,130,55,65,45,45,70,223,_.MEDIUM_SLOW,50,!1),new c(e.PONYTA,1,!1,!1,!1,"Fire Horse Pokémon",i.FIRE,null,1,30,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,410,50,85,55,65,65,90,190,50,82,_.MEDIUM_FAST,50,!1),new c(e.RAPIDASH,1,!1,!1,!1,"Fire Horse Pokémon",i.FIRE,null,1.7,95,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,500,65,100,70,80,80,105,60,50,175,_.MEDIUM_FAST,50,!1),new c(e.SLOWPOKE,1,!1,!1,!1,"Dopey Pokémon",i.WATER,i.PSYCHIC,1.2,36,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,_.MEDIUM_FAST,50,!1),new c(e.SLOWBRO,1,!1,!1,!1,"Hermit Crab Pokémon",i.WATER,i.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.WATER,i.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,!1,null,!0),new p("Mega",oe.MEGA,i.WATER,i.PSYCHIC,2,120,O.SHELL_ARMOR,O.SHELL_ARMOR,O.SHELL_ARMOR,590,95,75,180,130,80,30,75,50,172)),new c(e.MAGNEMITE,1,!1,!1,!1,"Magnet Pokémon",i.ELECTRIC,i.STEEL,.3,6,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,325,25,35,70,95,55,45,190,50,65,_.MEDIUM_FAST,null,!1),new c(e.MAGNETON,1,!1,!1,!1,"Magnet Pokémon",i.ELECTRIC,i.STEEL,1,60,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,465,50,60,95,120,70,70,60,50,163,_.MEDIUM_FAST,null,!1),new c(e.FARFETCHD,1,!1,!1,!1,"Wild Duck Pokémon",i.NORMAL,i.FLYING,.8,15,O.KEEN_EYE,O.INNER_FOCUS,O.DEFIANT,377,52,90,55,58,62,60,45,50,132,_.MEDIUM_FAST,50,!1),new c(e.DODUO,1,!1,!1,!1,"Twin Bird Pokémon",i.NORMAL,i.FLYING,1.4,39.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,310,35,85,45,35,35,75,190,70,62,_.MEDIUM_FAST,50,!0),new c(e.DODRIO,1,!1,!1,!1,"Triple Bird Pokémon",i.NORMAL,i.FLYING,1.8,85.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,470,60,110,70,60,60,110,45,70,165,_.MEDIUM_FAST,50,!0),new c(e.SEEL,1,!1,!1,!1,"Sea Lion Pokémon",i.WATER,null,1.1,90,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,325,65,45,55,45,70,45,190,70,65,_.MEDIUM_FAST,50,!1),new c(e.DEWGONG,1,!1,!1,!1,"Sea Lion Pokémon",i.WATER,i.ICE,1.7,120,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,475,90,70,80,70,95,70,75,70,166,_.MEDIUM_FAST,50,!1),new c(e.GRIMER,1,!1,!1,!1,"Sludge Pokémon",i.POISON,null,.9,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,325,80,80,50,40,50,25,190,70,65,_.MEDIUM_FAST,50,!1),new c(e.MUK,1,!1,!1,!1,"Sludge Pokémon",i.POISON,null,1.2,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,500,105,105,75,65,100,50,75,70,175,_.MEDIUM_FAST,50,!1),new c(e.SHELLDER,1,!1,!1,!1,"Bivalve Pokémon",i.WATER,null,.3,4,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,305,30,65,100,45,25,40,190,50,61,_.SLOW,50,!1),new c(e.CLOYSTER,1,!1,!1,!1,"Bivalve Pokémon",i.WATER,i.ICE,1.5,132.5,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,525,50,95,180,85,45,70,60,50,184,_.SLOW,50,!1),new c(e.GASTLY,1,!1,!1,!1,"Gas Pokémon",i.GHOST,i.POISON,1.3,.1,O.LEVITATE,O.NONE,O.NONE,310,30,35,30,100,35,80,190,50,62,_.MEDIUM_SLOW,50,!1),new c(e.HAUNTER,1,!1,!1,!1,"Gas Pokémon",i.GHOST,i.POISON,1.6,.1,O.LEVITATE,O.NONE,O.NONE,405,45,50,45,115,55,95,90,50,142,_.MEDIUM_SLOW,50,!1),new c(e.GENGAR,1,!1,!1,!1,"Shadow Pokémon",i.GHOST,i.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,_.MEDIUM_SLOW,50,!1,!0,new p("Normal","",i.GHOST,i.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,!1,null,!0),new p("Mega",oe.MEGA,i.GHOST,i.POISON,1.4,40.5,O.SHADOW_TAG,O.NONE,O.NONE,600,60,65,80,170,95,130,45,50,250),new p("G-Max",oe.GIGANTAMAX,i.GHOST,i.POISON,20,999.9,O.CURSED_BODY,O.NONE,O.NONE,600,140,65,70,140,85,100,45,50,250)),new c(e.ONIX,1,!1,!1,!1,"Rock Snake Pokémon",i.ROCK,i.GROUND,8.8,210,O.ROCK_HEAD,O.STURDY,O.WEAK_ARMOR,385,35,45,160,30,45,70,45,50,77,_.MEDIUM_FAST,50,!1),new c(e.DROWZEE,1,!1,!1,!1,"Hypnosis Pokémon",i.PSYCHIC,null,1,32.4,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,328,60,48,45,43,90,42,190,70,66,_.MEDIUM_FAST,50,!1),new c(e.HYPNO,1,!1,!1,!1,"Hypnosis Pokémon",i.PSYCHIC,null,1.6,75.6,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,483,85,73,70,73,115,67,75,70,169,_.MEDIUM_FAST,50,!0),new c(e.KRABBY,1,!1,!1,!1,"River Crab Pokémon",i.WATER,null,.4,6.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,325,30,105,90,25,25,50,225,50,65,_.MEDIUM_FAST,50,!1),new c(e.KINGLER,1,!1,!1,!1,"Pincer Pokémon",i.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.WATER,null,19,999.9,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,575,90,155,140,50,70,70,60,50,166)),new c(e.VOLTORB,1,!1,!1,!1,"Ball Pokémon",i.ELECTRIC,null,.5,10.4,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,70,66,_.MEDIUM_FAST,null,!1),new c(e.ELECTRODE,1,!1,!1,!1,"Ball Pokémon",i.ELECTRIC,null,1.2,66.6,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,_.MEDIUM_FAST,null,!1),new c(e.EXEGGCUTE,1,!1,!1,!1,"Egg Pokémon",i.GRASS,i.PSYCHIC,.4,2.5,O.CHLOROPHYLL,O.NONE,O.HARVEST,325,60,40,80,60,45,40,90,50,65,_.SLOW,50,!1),new c(e.EXEGGUTOR,1,!1,!1,!1,"Coconut Pokémon",i.GRASS,i.PSYCHIC,2,120,O.CHLOROPHYLL,O.NONE,O.HARVEST,530,95,95,85,125,75,55,45,50,186,_.SLOW,50,!1),new c(e.CUBONE,1,!1,!1,!1,"Lonely Pokémon",i.GROUND,null,.4,6.5,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,320,50,50,95,40,50,35,190,50,64,_.MEDIUM_FAST,50,!1),new c(e.MAROWAK,1,!1,!1,!1,"Bone Keeper Pokémon",i.GROUND,null,1,45,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,425,60,80,110,50,80,45,75,50,149,_.MEDIUM_FAST,50,!1),new c(e.HITMONLEE,1,!1,!1,!1,"Kicking Pokémon",i.FIGHTING,null,1.5,49.8,O.LIMBER,O.RECKLESS,O.UNBURDEN,455,50,120,53,35,110,87,45,50,159,_.MEDIUM_FAST,100,!1),new c(e.HITMONCHAN,1,!1,!1,!1,"Punching Pokémon",i.FIGHTING,null,1.4,50.2,O.KEEN_EYE,O.IRON_FIST,O.INNER_FOCUS,455,50,105,79,35,110,76,45,50,159,_.MEDIUM_FAST,100,!1),new c(e.LICKITUNG,1,!1,!1,!1,"Licking Pokémon",i.NORMAL,null,1.2,65.5,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,385,90,55,75,60,75,30,45,50,77,_.MEDIUM_FAST,50,!1),new c(e.KOFFING,1,!1,!1,!1,"Poison Gas Pokémon",i.POISON,null,.6,1,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,340,40,65,95,60,45,35,190,50,68,_.MEDIUM_FAST,50,!1),new c(e.WEEZING,1,!1,!1,!1,"Poison Gas Pokémon",i.POISON,null,1.2,9.5,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,490,65,90,120,85,70,60,60,50,172,_.MEDIUM_FAST,50,!1),new c(e.RHYHORN,1,!1,!1,!1,"Spikes Pokémon",i.GROUND,i.ROCK,1,115,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,345,80,85,95,30,30,25,120,50,69,_.SLOW,50,!0),new c(e.RHYDON,1,!1,!1,!1,"Drill Pokémon",i.GROUND,i.ROCK,1.9,120,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,485,105,130,120,45,45,40,60,50,170,_.SLOW,50,!0),new c(e.CHANSEY,1,!1,!1,!1,"Egg Pokémon",i.NORMAL,null,1.1,34.6,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,450,250,5,5,35,105,50,30,140,395,_.FAST,0,!1),new c(e.TANGELA,1,!1,!1,!1,"Vine Pokémon",i.GRASS,null,1,35,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,435,65,55,115,100,40,60,45,50,87,_.MEDIUM_FAST,50,!1),new c(e.KANGASKHAN,1,!1,!1,!1,"Parent Pokémon",i.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,_.MEDIUM_FAST,0,!1,!0,new p("Normal","",i.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,!1,null,!0),new p("Mega",oe.MEGA,i.NORMAL,null,2.2,100,O.PARENTAL_BOND,O.PARENTAL_BOND,O.PARENTAL_BOND,590,105,125,100,60,100,100,45,50,172)),new c(e.HORSEA,1,!1,!1,!1,"Dragon Pokémon",i.WATER,null,.4,8,O.SWIFT_SWIM,O.SNIPER,O.DAMP,295,30,40,70,70,25,60,225,50,59,_.MEDIUM_FAST,50,!1),new c(e.SEADRA,1,!1,!1,!1,"Dragon Pokémon",i.WATER,null,1.2,25,O.POISON_POINT,O.SNIPER,O.DAMP,440,55,65,95,95,45,85,75,50,154,_.MEDIUM_FAST,50,!1),new c(e.GOLDEEN,1,!1,!1,!1,"Goldfish Pokémon",i.WATER,null,.6,15,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,320,45,67,60,35,50,63,225,50,64,_.MEDIUM_FAST,50,!0),new c(e.SEAKING,1,!1,!1,!1,"Goldfish Pokémon",i.WATER,null,1.3,39,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,450,80,92,65,65,80,68,60,50,158,_.MEDIUM_FAST,50,!0),new c(e.STARYU,1,!1,!1,!1,"Star Shape Pokémon",i.WATER,null,.8,34.5,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,340,30,45,55,70,55,85,225,50,68,_.SLOW,null,!1),new c(e.STARMIE,1,!1,!1,!1,"Mysterious Pokémon",i.WATER,i.PSYCHIC,1.1,80,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,520,60,75,85,100,85,115,60,50,182,_.SLOW,null,!1),new c(e.MR_MIME,1,!1,!1,!1,"Barrier Pokémon",i.PSYCHIC,i.FAIRY,1.3,54.5,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,460,40,45,65,100,120,90,45,50,161,_.MEDIUM_FAST,50,!1),new c(e.SCYTHER,1,!1,!1,!1,"Mantis Pokémon",i.BUG,i.FLYING,1.5,56,O.SWARM,O.TECHNICIAN,O.STEADFAST,500,70,110,80,55,80,105,45,50,100,_.MEDIUM_FAST,50,!0),new c(e.JYNX,1,!1,!1,!1,"Human Shape Pokémon",i.ICE,i.PSYCHIC,1.4,40.6,O.OBLIVIOUS,O.FOREWARN,O.DRY_SKIN,455,65,50,35,115,95,95,45,50,159,_.MEDIUM_FAST,0,!1),new c(e.ELECTABUZZ,1,!1,!1,!1,"Electric Pokémon",i.ELECTRIC,null,1.1,30,O.STATIC,O.NONE,O.VITAL_SPIRIT,490,65,83,57,95,85,105,45,50,172,_.MEDIUM_FAST,75,!1),new c(e.MAGMAR,1,!1,!1,!1,"Spitfire Pokémon",i.FIRE,null,1.3,44.5,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,495,65,95,57,100,85,93,45,50,173,_.MEDIUM_FAST,75,!1),new c(e.PINSIR,1,!1,!1,!1,"Stag Beetle Pokémon",i.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,_.SLOW,50,!1,!0,new p("Normal","",i.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,!1,null,!0),new p("Mega",oe.MEGA,i.BUG,i.FLYING,1.7,59,O.AERILATE,O.AERILATE,O.AERILATE,600,65,155,120,65,90,105,45,50,175)),new c(e.TAUROS,1,!1,!1,!1,"Wild Bull Pokémon",i.NORMAL,null,1.4,88.4,O.INTIMIDATE,O.ANGER_POINT,O.SHEER_FORCE,490,75,100,95,40,70,110,45,50,172,_.SLOW,100,!1),new c(e.MAGIKARP,1,!1,!1,!1,"Fish Pokémon",i.WATER,null,.9,10,O.SWIFT_SWIM,O.NONE,O.RATTLED,200,20,10,55,15,20,80,255,50,40,_.SLOW,50,!0),new c(e.GYARADOS,1,!1,!1,!1,"Atrocious Pokémon",i.WATER,i.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,_.SLOW,50,!0,!0,new p("Normal","",i.WATER,i.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,!0,null,!0),new p("Mega",oe.MEGA,i.WATER,i.DARK,6.5,305,O.MOLD_BREAKER,O.MOLD_BREAKER,O.MOLD_BREAKER,640,95,155,109,70,130,81,45,50,189,!0)),new c(e.LAPRAS,1,!1,!1,!1,"Transport Pokémon",i.WATER,i.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,_.SLOW,50,!1,!0,new p("Normal","",i.WATER,i.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.WATER,i.ICE,24,999.9,O.SHIELD_DUST,O.SHIELD_DUST,O.SHIELD_DUST,635,170,85,85,105,130,60,45,50,187)),new c(e.DITTO,1,!1,!1,!1,"Transform Pokémon",i.NORMAL,null,.3,4,O.LIMBER,O.NONE,O.IMPOSTER,288,48,48,48,48,48,48,35,50,101,_.MEDIUM_FAST,null,!1),new c(e.EEVEE,1,!1,!1,!1,"Evolution Pokémon",i.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,_.MEDIUM_FAST,87.5,!1,!0,new p("Normal","",i.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,!1,null,!0),new p("Partner","partner",i.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,435,65,75,70,65,85,75,45,50,65,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.NORMAL,null,18,999.9,O.PROTEAN,O.PROTEAN,O.PROTEAN,535,110,90,70,95,85,85,45,50,65)),new c(e.VAPOREON,1,!1,!1,!1,"Bubble Jet Pokémon",i.WATER,null,1,29,O.WATER_ABSORB,O.NONE,O.HYDRATION,525,130,65,60,110,95,65,45,50,184,_.MEDIUM_FAST,87.5,!1),new c(e.JOLTEON,1,!1,!1,!1,"Lightning Pokémon",i.ELECTRIC,null,.8,24.5,O.VOLT_ABSORB,O.NONE,O.QUICK_FEET,525,65,65,60,110,95,130,45,50,184,_.MEDIUM_FAST,87.5,!1),new c(e.FLAREON,1,!1,!1,!1,"Flame Pokémon",i.FIRE,null,.9,25,O.FLASH_FIRE,O.NONE,O.GUTS,525,65,130,60,95,110,65,45,50,184,_.MEDIUM_FAST,87.5,!1),new c(e.PORYGON,1,!1,!1,!1,"Virtual Pokémon",i.NORMAL,null,.8,36.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,395,65,60,70,85,75,40,45,50,79,_.MEDIUM_FAST,null,!1),new c(e.OMANYTE,1,!1,!1,!1,"Spiral Pokémon",i.ROCK,i.WATER,.4,7.5,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,355,35,40,100,90,55,35,45,50,71,_.MEDIUM_FAST,87.5,!1),new c(e.OMASTAR,1,!1,!1,!1,"Spiral Pokémon",i.ROCK,i.WATER,1,35,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,495,70,60,125,115,70,55,45,50,173,_.MEDIUM_FAST,87.5,!1),new c(e.KABUTO,1,!1,!1,!1,"Shellfish Pokémon",i.ROCK,i.WATER,.5,11.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,355,30,80,90,55,45,55,45,50,71,_.MEDIUM_FAST,87.5,!1),new c(e.KABUTOPS,1,!1,!1,!1,"Shellfish Pokémon",i.ROCK,i.WATER,1.3,40.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,495,60,115,105,65,70,80,45,50,173,_.MEDIUM_FAST,87.5,!1),new c(e.AERODACTYL,1,!1,!1,!1,"Fossil Pokémon",i.ROCK,i.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,_.SLOW,87.5,!1,!0,new p("Normal","",i.ROCK,i.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,!1,null,!0),new p("Mega",oe.MEGA,i.ROCK,i.FLYING,2.1,79,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,615,80,135,85,70,95,150,45,50,180)),new c(e.SNORLAX,1,!1,!1,!1,"Sleeping Pokémon",i.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,_.SLOW,87.5,!1,!0,new p("Normal","",i.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.NORMAL,null,35,999.9,O.HARVEST,O.HARVEST,O.HARVEST,640,200,135,80,80,125,20,25,50,189)),new c(e.ARTICUNO,1,!0,!1,!1,"Freeze Pokémon",i.ICE,i.FLYING,1.7,55.4,O.PRESSURE,O.NONE,O.SNOW_CLOAK,580,90,85,100,95,125,85,3,35,290,_.SLOW,null,!1),new c(e.ZAPDOS,1,!0,!1,!1,"Electric Pokémon",i.ELECTRIC,i.FLYING,1.6,52.6,O.PRESSURE,O.NONE,O.STATIC,580,90,90,85,125,90,100,3,35,290,_.SLOW,null,!1),new c(e.MOLTRES,1,!0,!1,!1,"Flame Pokémon",i.FIRE,i.FLYING,2,60,O.PRESSURE,O.NONE,O.FLAME_BODY,580,90,100,90,125,85,90,3,35,290,_.SLOW,null,!1),new c(e.DRATINI,1,!1,!1,!1,"Dragon Pokémon",i.DRAGON,null,1.8,3.3,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,300,41,64,45,50,50,50,45,35,60,_.SLOW,50,!1),new c(e.DRAGONAIR,1,!1,!1,!1,"Dragon Pokémon",i.DRAGON,null,4,16.5,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,420,61,84,65,70,70,70,45,35,147,_.SLOW,50,!1),new c(e.DRAGONITE,1,!1,!1,!1,"Dragon Pokémon",i.DRAGON,i.FLYING,2.2,210,O.INNER_FOCUS,O.NONE,O.MULTISCALE,600,91,134,95,100,100,80,45,35,300,_.SLOW,50,!1),new c(e.MEWTWO,1,!1,!0,!1,"Genetic Pokémon",i.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,_.SLOW,null,!1,!0,new p("Normal","",i.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,!1,null,!0),new p("Mega X",oe.MEGA_X,i.PSYCHIC,i.FIGHTING,2.3,127,O.STEADFAST,O.NONE,O.STEADFAST,780,106,190,100,154,100,130,3,0,340),new p("Mega Y",oe.MEGA_Y,i.PSYCHIC,null,1.5,33,O.INSOMNIA,O.NONE,O.INSOMNIA,780,106,150,70,194,120,140,3,0,340)),new c(e.MEW,1,!1,!1,!0,"New Species Pokémon",i.PSYCHIC,null,.4,4,O.SYNCHRONIZE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,_.MEDIUM_SLOW,null,!1),new c(e.CHIKORITA,2,!1,!1,!1,"Leaf Pokémon",i.GRASS,null,.9,6.4,O.OVERGROW,O.NONE,O.LEAF_GUARD,318,45,49,65,49,65,45,45,70,64,_.MEDIUM_SLOW,87.5,!1),new c(e.BAYLEEF,2,!1,!1,!1,"Leaf Pokémon",i.GRASS,null,1.2,15.8,O.OVERGROW,O.NONE,O.LEAF_GUARD,405,60,62,80,63,80,60,45,70,142,_.MEDIUM_SLOW,87.5,!1),new c(e.MEGANIUM,2,!1,!1,!1,"Herb Pokémon",i.GRASS,null,1.8,100.5,O.OVERGROW,O.NONE,O.LEAF_GUARD,525,80,82,100,83,100,80,45,70,236,_.MEDIUM_SLOW,87.5,!0),new c(e.CYNDAQUIL,2,!1,!1,!1,"Fire Mouse Pokémon",i.FIRE,null,.5,7.9,O.BLAZE,O.NONE,O.FLASH_FIRE,309,39,52,43,60,50,65,45,70,62,_.MEDIUM_SLOW,87.5,!1),new c(e.QUILAVA,2,!1,!1,!1,"Volcano Pokémon",i.FIRE,null,.9,19,O.BLAZE,O.NONE,O.FLASH_FIRE,405,58,64,58,80,65,80,45,70,142,_.MEDIUM_SLOW,87.5,!1),new c(e.TYPHLOSION,2,!1,!1,!1,"Volcano Pokémon",i.FIRE,null,1.7,79.5,O.BLAZE,O.NONE,O.FLASH_FIRE,534,78,84,78,109,85,100,45,70,240,_.MEDIUM_SLOW,87.5,!1),new c(e.TOTODILE,2,!1,!1,!1,"Big Jaw Pokémon",i.WATER,null,.6,9.5,O.TORRENT,O.NONE,O.SHEER_FORCE,314,50,65,64,44,48,43,45,70,63,_.MEDIUM_SLOW,87.5,!1),new c(e.CROCONAW,2,!1,!1,!1,"Big Jaw Pokémon",i.WATER,null,1.1,25,O.TORRENT,O.NONE,O.SHEER_FORCE,405,65,80,80,59,63,58,45,70,142,_.MEDIUM_SLOW,87.5,!1),new c(e.FERALIGATR,2,!1,!1,!1,"Big Jaw Pokémon",i.WATER,null,2.3,88.8,O.TORRENT,O.NONE,O.SHEER_FORCE,530,85,105,100,79,83,78,45,70,239,_.MEDIUM_SLOW,87.5,!1),new c(e.SENTRET,2,!1,!1,!1,"Scout Pokémon",i.NORMAL,null,.8,6,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,215,35,46,34,35,45,20,255,70,43,_.MEDIUM_FAST,50,!1),new c(e.FURRET,2,!1,!1,!1,"Long Body Pokémon",i.NORMAL,null,1.8,32.5,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,415,85,76,64,45,55,90,90,70,145,_.MEDIUM_FAST,50,!1),new c(e.HOOTHOOT,2,!1,!1,!1,"Owl Pokémon",i.NORMAL,i.FLYING,.7,21.2,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,262,60,30,30,36,56,50,255,50,52,_.MEDIUM_FAST,50,!1),new c(e.NOCTOWL,2,!1,!1,!1,"Owl Pokémon",i.NORMAL,i.FLYING,1.6,40.8,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,452,100,50,50,86,96,70,90,50,158,_.MEDIUM_FAST,50,!1),new c(e.LEDYBA,2,!1,!1,!1,"Five Star Pokémon",i.BUG,i.FLYING,1,10.8,O.SWARM,O.EARLY_BIRD,O.RATTLED,265,40,20,30,40,80,55,255,70,53,_.FAST,50,!0),new c(e.LEDIAN,2,!1,!1,!1,"Five Star Pokémon",i.BUG,i.FLYING,1.4,35.6,O.SWARM,O.EARLY_BIRD,O.IRON_FIST,390,55,35,50,55,110,85,90,70,137,_.FAST,50,!0),new c(e.SPINARAK,2,!1,!1,!1,"String Spit Pokémon",i.BUG,i.POISON,.5,8.5,O.SWARM,O.INSOMNIA,O.SNIPER,250,40,60,40,40,40,30,255,70,50,_.FAST,50,!1),new c(e.ARIADOS,2,!1,!1,!1,"Long Leg Pokémon",i.BUG,i.POISON,1.1,33.5,O.SWARM,O.INSOMNIA,O.SNIPER,400,70,90,70,60,70,40,90,70,140,_.FAST,50,!1),new c(e.CROBAT,2,!1,!1,!1,"Bat Pokémon",i.POISON,i.FLYING,1.8,75,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,535,85,90,80,70,80,130,90,50,268,_.MEDIUM_FAST,50,!1),new c(e.CHINCHOU,2,!1,!1,!1,"Angler Pokémon",i.WATER,i.ELECTRIC,.5,12,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,330,75,38,38,56,56,67,190,50,66,_.SLOW,50,!1),new c(e.LANTURN,2,!1,!1,!1,"Light Pokémon",i.WATER,i.ELECTRIC,1.2,22.5,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,460,125,58,58,76,76,67,75,50,161,_.SLOW,50,!1),new c(e.PICHU,2,!1,!1,!1,"Tiny Mouse Pokémon",i.ELECTRIC,null,.3,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,_.MEDIUM_FAST,50,!1,!1,new p("Normal","",i.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0),new p("Spiky-Eared","spiky",i.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0)),new c(e.CLEFFA,2,!1,!1,!1,"Star Shape Pokémon",i.FAIRY,null,.3,3,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,218,50,25,28,45,55,15,150,140,44,_.FAST,25,!1),new c(e.IGGLYBUFF,2,!1,!1,!1,"Balloon Pokémon",i.NORMAL,i.FAIRY,.3,1,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,210,90,30,15,40,20,15,170,50,42,_.FAST,25,!1),new c(e.TOGEPI,2,!1,!1,!1,"Spike Ball Pokémon",i.FAIRY,null,.3,1.5,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,245,35,20,65,40,65,20,190,50,49,_.FAST,87.5,!1),new c(e.TOGETIC,2,!1,!1,!1,"Happiness Pokémon",i.FAIRY,i.FLYING,.6,3.2,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,405,55,40,85,80,105,40,75,50,142,_.FAST,87.5,!1),new c(e.NATU,2,!1,!1,!1,"Tiny Bird Pokémon",i.PSYCHIC,i.FLYING,.2,2,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,320,40,50,45,70,45,70,190,50,64,_.MEDIUM_FAST,50,!1),new c(e.XATU,2,!1,!1,!1,"Mystic Pokémon",i.PSYCHIC,i.FLYING,1.5,15,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,470,65,75,70,95,70,95,75,50,165,_.MEDIUM_FAST,50,!0),new c(e.MAREEP,2,!1,!1,!1,"Wool Pokémon",i.ELECTRIC,null,.6,7.8,O.STATIC,O.NONE,O.PLUS,280,55,40,40,65,45,35,235,70,56,_.MEDIUM_SLOW,50,!1),new c(e.FLAAFFY,2,!1,!1,!1,"Wool Pokémon",i.ELECTRIC,null,.8,13.3,O.STATIC,O.NONE,O.PLUS,365,70,55,55,80,60,45,120,70,128,_.MEDIUM_SLOW,50,!1),new c(e.AMPHAROS,2,!1,!1,!1,"Light Pokémon",i.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,230,_.MEDIUM_SLOW,50,!1,!0,new p("Normal","",i.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,230,!1,null,!0),new p("Mega",oe.MEGA,i.ELECTRIC,i.DRAGON,1.4,61.5,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,610,90,95,105,165,110,45,45,70,230)),new c(e.BELLOSSOM,2,!1,!1,!1,"Flower Pokémon",i.GRASS,null,.4,5.8,O.CHLOROPHYLL,O.NONE,O.HEALER,490,75,80,95,90,100,50,45,50,245,_.MEDIUM_SLOW,50,!1),new c(e.MARILL,2,!1,!1,!1,"Aqua Mouse Pokémon",i.WATER,i.FAIRY,.4,8.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,250,70,20,50,20,50,40,190,50,88,_.FAST,50,!1),new c(e.AZUMARILL,2,!1,!1,!1,"Aqua Rabbit Pokémon",i.WATER,i.FAIRY,.8,28.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,420,100,50,80,60,80,50,75,50,210,_.FAST,50,!1),new c(e.SUDOWOODO,2,!1,!1,!1,"Imitation Pokémon",i.ROCK,null,1.2,38,O.STURDY,O.ROCK_HEAD,O.RATTLED,410,70,100,115,30,65,30,65,50,144,_.MEDIUM_FAST,50,!0),new c(e.POLITOED,2,!1,!1,!1,"Frog Pokémon",i.WATER,null,1.1,33.9,O.WATER_ABSORB,O.DAMP,O.DRIZZLE,500,90,75,75,90,100,70,45,50,250,_.MEDIUM_SLOW,50,!0),new c(e.HOPPIP,2,!1,!1,!1,"Cottonweed Pokémon",i.GRASS,i.FLYING,.4,.5,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,250,35,35,40,35,55,50,255,70,50,_.MEDIUM_SLOW,50,!1),new c(e.SKIPLOOM,2,!1,!1,!1,"Cottonweed Pokémon",i.GRASS,i.FLYING,.6,1,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,340,55,45,50,45,65,80,120,70,119,_.MEDIUM_SLOW,50,!1),new c(e.JUMPLUFF,2,!1,!1,!1,"Cottonweed Pokémon",i.GRASS,i.FLYING,.8,3,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,460,75,55,70,55,95,110,45,70,207,_.MEDIUM_SLOW,50,!1),new c(e.AIPOM,2,!1,!1,!1,"Long Tail Pokémon",i.NORMAL,null,.8,11.5,O.RUN_AWAY,O.PICKUP,O.SKILL_LINK,360,55,70,55,40,55,85,45,70,72,_.FAST,50,!0),new c(e.SUNKERN,2,!1,!1,!1,"Seed Pokémon",i.GRASS,null,.3,1.8,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,180,30,30,30,30,30,30,235,70,36,_.MEDIUM_SLOW,50,!1),new c(e.SUNFLORA,2,!1,!1,!1,"Sun Pokémon",i.GRASS,null,.8,8.5,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,425,75,75,55,105,85,30,120,70,149,_.MEDIUM_SLOW,50,!1),new c(e.YANMA,2,!1,!1,!1,"Clear Wing Pokémon",i.BUG,i.FLYING,1.2,38,O.SPEED_BOOST,O.COMPOUND_EYES,O.FRISK,390,65,65,45,75,45,95,75,70,78,_.MEDIUM_FAST,50,!1),new c(e.WOOPER,2,!1,!1,!1,"Water Fish Pokémon",i.WATER,i.GROUND,.4,8.5,O.DAMP,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,_.MEDIUM_FAST,50,!0),new c(e.QUAGSIRE,2,!1,!1,!1,"Water Fish Pokémon",i.WATER,i.GROUND,1.4,75,O.DAMP,O.WATER_ABSORB,O.UNAWARE,430,95,85,85,65,65,35,90,50,151,_.MEDIUM_FAST,50,!0),new c(e.ESPEON,2,!1,!1,!1,"Sun Pokémon",i.PSYCHIC,null,.9,26.5,O.SYNCHRONIZE,O.NONE,O.MAGIC_BOUNCE,525,65,65,60,130,95,110,45,50,184,_.MEDIUM_FAST,87.5,!1),new c(e.UMBREON,2,!1,!1,!1,"Moonlight Pokémon",i.DARK,null,1,27,O.SYNCHRONIZE,O.NONE,O.INNER_FOCUS,525,95,65,110,60,130,65,45,35,184,_.MEDIUM_FAST,87.5,!1),new c(e.MURKROW,2,!1,!1,!1,"Darkness Pokémon",i.DARK,i.FLYING,.5,2.1,O.INSOMNIA,O.SUPER_LUCK,O.PRANKSTER,405,60,85,42,85,42,91,30,35,81,_.MEDIUM_SLOW,50,!0),new c(e.SLOWKING,2,!1,!1,!1,"Royal Pokémon",i.WATER,i.PSYCHIC,2,79.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,80,100,110,30,70,50,172,_.MEDIUM_FAST,50,!1),new c(e.MISDREAVUS,2,!1,!1,!1,"Screech Pokémon",i.GHOST,null,.7,1,O.LEVITATE,O.NONE,O.NONE,435,60,60,60,85,85,85,45,35,87,_.FAST,50,!1),new c(e.UNOWN,2,!1,!1,!1,"Symbol Pokémon",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,_.MEDIUM_FAST,null,!1,!1,new p("A","a",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("B","b",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("C","c",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("D","d",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("E","e",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("F","f",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("G","g",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("H","h",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("I","i",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("J","j",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("K","k",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("L","l",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("M","m",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("N","n",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("O","o",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("P","p",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("Q","q",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("R","r",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("S","s",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("T","t",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("U","u",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("V","v",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("W","w",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("X","x",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("Y","y",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("Z","z",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("!","exclamation",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new p("?","question",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0)),new c(e.WOBBUFFET,2,!1,!1,!1,"Patient Pokémon",i.PSYCHIC,null,1.3,28.5,O.SHADOW_TAG,O.NONE,O.TELEPATHY,405,190,33,58,33,58,33,45,50,142,_.MEDIUM_FAST,50,!0),new c(e.GIRAFARIG,2,!1,!1,!1,"Long Neck Pokémon",i.NORMAL,i.PSYCHIC,1.5,41.5,O.INNER_FOCUS,O.EARLY_BIRD,O.SAP_SIPPER,455,70,80,65,90,65,85,60,70,159,_.MEDIUM_FAST,50,!0),new c(e.PINECO,2,!1,!1,!1,"Bagworm Pokémon",i.BUG,null,.6,7.2,O.STURDY,O.NONE,O.OVERCOAT,290,50,65,90,35,35,15,190,70,58,_.MEDIUM_FAST,50,!1),new c(e.FORRETRESS,2,!1,!1,!1,"Bagworm Pokémon",i.BUG,i.STEEL,1.2,125.8,O.STURDY,O.NONE,O.OVERCOAT,465,75,90,140,60,60,40,75,70,163,_.MEDIUM_FAST,50,!1),new c(e.DUNSPARCE,2,!1,!1,!1,"Land Snake Pokémon",i.NORMAL,null,1.5,14,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,415,100,70,70,65,65,45,190,50,145,_.MEDIUM_FAST,50,!1),new c(e.GLIGAR,2,!1,!1,!1,"Fly Scorpion Pokémon",i.GROUND,i.FLYING,1.1,64.8,O.HYPER_CUTTER,O.SAND_VEIL,O.IMMUNITY,430,65,75,105,35,65,85,60,70,86,_.MEDIUM_SLOW,50,!0),new c(e.STEELIX,2,!1,!1,!1,"Iron Snake Pokémon",i.STEEL,i.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,_.MEDIUM_FAST,50,!0,!0,new p("Normal","",i.STEEL,i.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,!0,null,!0),new p("Mega",oe.MEGA,i.STEEL,i.GROUND,10.5,740,O.SAND_FORCE,O.SAND_FORCE,O.SAND_FORCE,610,75,125,230,55,95,30,25,50,179,!0)),new c(e.SNUBBULL,2,!1,!1,!1,"Fairy Pokémon",i.FAIRY,null,.6,7.8,O.INTIMIDATE,O.RUN_AWAY,O.RATTLED,300,60,80,50,40,40,30,190,70,60,_.FAST,25,!1),new c(e.GRANBULL,2,!1,!1,!1,"Fairy Pokémon",i.FAIRY,null,1.4,48.7,O.INTIMIDATE,O.QUICK_FEET,O.RATTLED,450,90,120,75,60,60,45,75,70,158,_.FAST,25,!1),new c(e.QWILFISH,2,!1,!1,!1,"Balloon Pokémon",i.WATER,i.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,_.MEDIUM_FAST,50,!1),new c(e.SCIZOR,2,!1,!1,!1,"Pincer Pokémon",i.BUG,i.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,_.MEDIUM_FAST,50,!0,!0,new p("Normal","",i.BUG,i.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,!0,null,!0),new p("Mega",oe.MEGA,i.BUG,i.STEEL,2,125,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,600,70,150,140,65,100,75,25,50,175,!0)),new c(e.SHUCKLE,2,!1,!1,!1,"Mold Pokémon",i.BUG,i.ROCK,.6,20.5,O.STURDY,O.GLUTTONY,O.CONTRARY,505,20,10,230,10,230,5,190,50,177,_.MEDIUM_SLOW,50,!1),new c(e.HERACROSS,2,!1,!1,!1,"Single Horn Pokémon",i.BUG,i.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,_.SLOW,50,!0,!0,new p("Normal","",i.BUG,i.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,!0,null,!0),new p("Mega",oe.MEGA,i.BUG,i.FIGHTING,1.7,62.5,O.SKILL_LINK,O.SKILL_LINK,O.SKILL_LINK,600,80,185,115,40,105,75,45,50,175,!0)),new c(e.SNEASEL,2,!1,!1,!1,"Sharp Claw Pokémon",i.DARK,i.ICE,.9,28,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,_.MEDIUM_SLOW,50,!0),new c(e.TEDDIURSA,2,!1,!1,!1,"Little Bear Pokémon",i.NORMAL,null,.6,8.8,O.PICKUP,O.QUICK_FEET,O.HONEY_GATHER,330,60,80,50,50,50,40,120,70,66,_.MEDIUM_FAST,50,!1),new c(e.URSARING,2,!1,!1,!1,"Hibernator Pokémon",i.NORMAL,null,1.8,125.8,O.GUTS,O.QUICK_FEET,O.UNNERVE,500,90,130,75,75,75,55,60,70,175,_.MEDIUM_FAST,50,!0),new c(e.SLUGMA,2,!1,!1,!1,"Lava Pokémon",i.FIRE,null,.7,35,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,250,40,40,40,70,40,20,190,70,50,_.MEDIUM_FAST,50,!1),new c(e.MAGCARGO,2,!1,!1,!1,"Lava Pokémon",i.FIRE,i.ROCK,.8,55,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,430,60,50,120,90,80,30,75,70,151,_.MEDIUM_FAST,50,!1),new c(e.SWINUB,2,!1,!1,!1,"Pig Pokémon",i.ICE,i.GROUND,.4,6.5,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,250,50,50,40,30,30,50,225,50,50,_.SLOW,50,!1),new c(e.PILOSWINE,2,!1,!1,!1,"Swine Pokémon",i.ICE,i.GROUND,1.1,55.8,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,450,100,100,80,60,60,50,75,50,158,_.SLOW,50,!0),new c(e.CORSOLA,2,!1,!1,!1,"Coral Pokémon",i.WATER,i.ROCK,.6,5,O.HUSTLE,O.NATURAL_CURE,O.REGENERATOR,410,65,55,95,65,95,35,60,50,144,_.FAST,25,!1),new c(e.REMORAID,2,!1,!1,!1,"Jet Pokémon",i.WATER,null,.6,12,O.HUSTLE,O.SNIPER,O.MOODY,300,35,65,35,65,35,65,190,50,60,_.MEDIUM_FAST,50,!1),new c(e.OCTILLERY,2,!1,!1,!1,"Jet Pokémon",i.WATER,null,.9,28.5,O.SUCTION_CUPS,O.SNIPER,O.MOODY,480,75,105,75,105,75,45,75,50,168,_.MEDIUM_FAST,50,!0),new c(e.DELIBIRD,2,!1,!1,!1,"Delivery Pokémon",i.ICE,i.FLYING,.9,16,O.VITAL_SPIRIT,O.HUSTLE,O.INSOMNIA,330,45,55,45,65,45,75,45,50,116,_.FAST,50,!1),new c(e.MANTINE,2,!1,!1,!1,"Kite Pokémon",i.WATER,i.FLYING,2.1,220,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,485,85,40,70,80,140,70,25,50,170,_.SLOW,50,!1),new c(e.SKARMORY,2,!1,!1,!1,"Armor Bird Pokémon",i.STEEL,i.FLYING,1.7,50.5,O.KEEN_EYE,O.STURDY,O.WEAK_ARMOR,465,65,80,140,40,70,70,25,50,163,_.SLOW,50,!1),new c(e.HOUNDOUR,2,!1,!1,!1,"Dark Pokémon",i.DARK,i.FIRE,.6,10.8,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,330,45,60,30,80,50,65,120,35,66,_.SLOW,50,!1),new c(e.HOUNDOOM,2,!1,!1,!1,"Dark Pokémon",i.DARK,i.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,_.SLOW,50,!0,!0,new p("Normal","",i.DARK,i.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,!0,null,!0),new p("Mega",oe.MEGA,i.DARK,i.FIRE,1.9,49.5,O.SOLAR_POWER,O.SOLAR_POWER,O.SOLAR_POWER,600,75,90,90,140,90,115,45,35,175,!0)),new c(e.KINGDRA,2,!1,!1,!1,"Dragon Pokémon",i.WATER,i.DRAGON,1.8,152,O.SWIFT_SWIM,O.SNIPER,O.DAMP,540,75,95,95,95,95,85,45,50,270,_.MEDIUM_FAST,50,!1),new c(e.PHANPY,2,!1,!1,!1,"Long Nose Pokémon",i.GROUND,null,.5,33.5,O.PICKUP,O.NONE,O.SAND_VEIL,330,90,60,60,40,40,40,120,70,66,_.MEDIUM_FAST,50,!1),new c(e.DONPHAN,2,!1,!1,!1,"Armor Pokémon",i.GROUND,null,1.1,120,O.STURDY,O.NONE,O.SAND_VEIL,500,90,120,120,60,60,50,60,70,175,_.MEDIUM_FAST,50,!0),new c(e.PORYGON2,2,!1,!1,!1,"Virtual Pokémon",i.NORMAL,null,.6,32.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,515,85,80,90,105,95,60,45,50,180,_.MEDIUM_FAST,null,!1),new c(e.STANTLER,2,!1,!1,!1,"Big Horn Pokémon",i.NORMAL,null,1.4,71.2,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,465,73,95,62,85,65,85,45,70,163,_.SLOW,50,!1),new c(e.SMEARGLE,2,!1,!1,!1,"Painter Pokémon",i.NORMAL,null,1.2,58,O.OWN_TEMPO,O.TECHNICIAN,O.MOODY,250,55,20,35,20,45,75,45,70,88,_.FAST,50,!1),new c(e.TYROGUE,2,!1,!1,!1,"Scuffle Pokémon",i.FIGHTING,null,.7,21,O.GUTS,O.STEADFAST,O.VITAL_SPIRIT,210,35,35,35,35,35,35,75,50,42,_.MEDIUM_FAST,100,!1),new c(e.HITMONTOP,2,!1,!1,!1,"Handstand Pokémon",i.FIGHTING,null,1.4,48,O.INTIMIDATE,O.TECHNICIAN,O.STEADFAST,455,50,95,95,35,110,70,45,50,159,_.MEDIUM_FAST,100,!1),new c(e.SMOOCHUM,2,!1,!1,!1,"Kiss Pokémon",i.ICE,i.PSYCHIC,.4,6,O.OBLIVIOUS,O.FOREWARN,O.HYDRATION,305,45,30,15,85,65,65,45,50,61,_.MEDIUM_FAST,0,!1),new c(e.ELEKID,2,!1,!1,!1,"Electric Pokémon",i.ELECTRIC,null,.6,23.5,O.STATIC,O.NONE,O.VITAL_SPIRIT,360,45,63,37,65,55,95,45,50,72,_.MEDIUM_FAST,75,!1),new c(e.MAGBY,2,!1,!1,!1,"Live Coal Pokémon",i.FIRE,null,.7,21.4,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,365,45,75,37,70,55,83,45,50,73,_.MEDIUM_FAST,75,!1),new c(e.MILTANK,2,!1,!1,!1,"Milk Cow Pokémon",i.NORMAL,null,1.2,75.5,O.THICK_FAT,O.SCRAPPY,O.SAP_SIPPER,490,95,80,105,40,70,100,45,50,172,_.SLOW,0,!1),new c(e.BLISSEY,2,!1,!1,!1,"Happiness Pokémon",i.NORMAL,null,1.5,46.8,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,540,255,10,10,75,135,55,30,140,635,_.FAST,0,!1),new c(e.RAIKOU,2,!0,!1,!1,"Thunder Pokémon",i.ELECTRIC,null,1.9,178,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,90,85,75,115,100,115,3,35,290,_.SLOW,null,!1),new c(e.ENTEI,2,!0,!1,!1,"Volcano Pokémon",i.FIRE,null,2.1,198,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,115,115,85,90,75,100,3,35,290,_.SLOW,null,!1),new c(e.SUICUNE,2,!0,!1,!1,"Aurora Pokémon",i.WATER,null,2,187,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,100,75,115,90,115,85,3,35,290,_.SLOW,null,!1),new c(e.LARVITAR,2,!1,!1,!1,"Rock Skin Pokémon",i.ROCK,i.GROUND,.6,72,O.GUTS,O.NONE,O.SAND_VEIL,300,50,64,50,45,50,41,45,35,60,_.SLOW,50,!1),new c(e.PUPITAR,2,!1,!1,!1,"Hard Shell Pokémon",i.ROCK,i.GROUND,1.2,152,O.SHED_SKIN,O.NONE,O.SHED_SKIN,410,70,84,70,65,70,51,45,35,144,_.SLOW,50,!1),new c(e.TYRANITAR,2,!1,!1,!1,"Armor Pokémon",i.ROCK,i.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,_.SLOW,50,!1,!0,new p("Normal","",i.ROCK,i.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,!1,null,!0),new p("Mega",oe.MEGA,i.ROCK,i.DARK,2.5,255,O.SAND_STREAM,O.NONE,O.SAND_STREAM,700,100,164,150,95,120,71,45,35,300)),new c(e.LUGIA,2,!1,!0,!1,"Diving Pokémon",i.PSYCHIC,i.FLYING,5.2,216,O.PRESSURE,O.NONE,O.MULTISCALE,680,106,90,130,90,154,110,3,0,340,_.SLOW,null,!1),new c(e.HO_OH,2,!1,!0,!1,"Rainbow Pokémon",i.FIRE,i.FLYING,3.8,199,O.PRESSURE,O.NONE,O.REGENERATOR,680,106,130,90,110,154,90,3,0,340,_.SLOW,null,!1),new c(e.CELEBI,2,!1,!1,!0,"Time Travel Pokémon",i.PSYCHIC,i.GRASS,.6,5,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,_.MEDIUM_SLOW,null,!1),new c(e.TREECKO,3,!1,!1,!1,"Wood Gecko Pokémon",i.GRASS,null,.5,5,O.OVERGROW,O.NONE,O.UNBURDEN,310,40,45,35,65,55,70,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.GROVYLE,3,!1,!1,!1,"Wood Gecko Pokémon",i.GRASS,null,.9,21.6,O.OVERGROW,O.NONE,O.UNBURDEN,405,50,65,45,85,65,95,45,50,142,_.MEDIUM_SLOW,87.5,!1),new c(e.SCEPTILE,3,!1,!1,!1,"Forest Pokémon",i.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,_.MEDIUM_SLOW,87.5,!1,!0,new p("Normal","",i.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,!1,null,!0),new p("Mega",oe.MEGA,i.GRASS,i.DRAGON,1.9,55.2,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,630,70,110,75,145,85,145,45,50,265)),new c(e.TORCHIC,3,!1,!1,!1,"Chick Pokémon",i.FIRE,null,.4,2.5,O.BLAZE,O.NONE,O.SPEED_BOOST,310,45,60,40,70,50,45,45,50,62,_.MEDIUM_SLOW,87.5,!0),new c(e.COMBUSKEN,3,!1,!1,!1,"Young Fowl Pokémon",i.FIRE,i.FIGHTING,.9,19.5,O.BLAZE,O.NONE,O.SPEED_BOOST,405,60,85,60,85,60,55,45,50,142,_.MEDIUM_SLOW,87.5,!0),new c(e.BLAZIKEN,3,!1,!1,!1,"Blaze Pokémon",i.FIRE,i.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,_.MEDIUM_SLOW,87.5,!0,!0,new p("Normal","",i.FIRE,i.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,!0,null,!0),new p("Mega",oe.MEGA,i.FIRE,i.FIGHTING,1.9,52,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,630,80,160,80,130,80,100,45,50,265,!0)),new c(e.MUDKIP,3,!1,!1,!1,"Mud Fish Pokémon",i.WATER,null,.4,7.6,O.TORRENT,O.NONE,O.DAMP,310,50,70,50,50,50,40,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.MARSHTOMP,3,!1,!1,!1,"Mud Fish Pokémon",i.WATER,i.GROUND,.7,28,O.TORRENT,O.NONE,O.DAMP,405,70,85,70,60,70,50,45,50,142,_.MEDIUM_SLOW,87.5,!1),new c(e.SWAMPERT,3,!1,!1,!1,"Mud Fish Pokémon",i.WATER,i.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,_.MEDIUM_SLOW,87.5,!1,!0,new p("Normal","",i.WATER,i.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,!1,null,!0),new p("Mega",oe.MEGA,i.WATER,i.GROUND,1.9,102,O.SWIFT_SWIM,O.NONE,O.SWIFT_SWIM,635,100,150,110,95,110,70,45,50,268)),new c(e.POOCHYENA,3,!1,!1,!1,"Bite Pokémon",i.DARK,null,.5,13.6,O.RUN_AWAY,O.QUICK_FEET,O.RATTLED,220,35,55,35,30,30,35,255,70,56,_.MEDIUM_FAST,50,!1),new c(e.MIGHTYENA,3,!1,!1,!1,"Bite Pokémon",i.DARK,null,1,37,O.INTIMIDATE,O.QUICK_FEET,O.MOXIE,420,70,90,70,60,60,70,127,70,147,_.MEDIUM_FAST,50,!1),new c(e.ZIGZAGOON,3,!1,!1,!1,"Tiny Raccoon Pokémon",i.NORMAL,null,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,_.MEDIUM_FAST,50,!1),new c(e.LINOONE,3,!1,!1,!1,"Rushing Pokémon",i.NORMAL,null,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,_.MEDIUM_FAST,50,!1),new c(e.WURMPLE,3,!1,!1,!1,"Worm Pokémon",i.BUG,null,.3,3.6,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,45,35,20,30,20,255,70,56,_.MEDIUM_FAST,50,!1),new c(e.SILCOON,3,!1,!1,!1,"Cocoon Pokémon",i.BUG,null,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,_.MEDIUM_FAST,50,!1),new c(e.BEAUTIFLY,3,!1,!1,!1,"Butterfly Pokémon",i.BUG,i.FLYING,1,28.4,O.SWARM,O.NONE,O.RIVALRY,395,60,70,50,100,50,65,45,70,178,_.MEDIUM_FAST,50,!0),new c(e.CASCOON,3,!1,!1,!1,"Cocoon Pokémon",i.BUG,null,.7,11.5,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,_.MEDIUM_FAST,50,!1),new c(e.DUSTOX,3,!1,!1,!1,"Poison Moth Pokémon",i.BUG,i.POISON,1.2,31.6,O.SHIELD_DUST,O.NONE,O.COMPOUND_EYES,385,60,50,70,50,90,65,45,70,173,_.MEDIUM_FAST,50,!0),new c(e.LOTAD,3,!1,!1,!1,"Water Weed Pokémon",i.WATER,i.GRASS,.5,2.6,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,220,40,30,30,40,50,30,255,50,44,_.MEDIUM_SLOW,50,!1),new c(e.LOMBRE,3,!1,!1,!1,"Jolly Pokémon",i.WATER,i.GRASS,1.2,32.5,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,340,60,50,50,60,70,50,120,50,119,_.MEDIUM_SLOW,50,!1),new c(e.LUDICOLO,3,!1,!1,!1,"Carefree Pokémon",i.WATER,i.GRASS,1.5,55,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,480,80,70,70,90,100,70,45,50,240,_.MEDIUM_SLOW,50,!0),new c(e.SEEDOT,3,!1,!1,!1,"Acorn Pokémon",i.GRASS,null,.5,4,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,220,40,40,50,30,30,30,255,50,44,_.MEDIUM_SLOW,50,!1),new c(e.NUZLEAF,3,!1,!1,!1,"Wily Pokémon",i.GRASS,i.DARK,1,28,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,340,70,70,40,60,40,60,120,50,119,_.MEDIUM_SLOW,50,!0),new c(e.SHIFTRY,3,!1,!1,!1,"Wicked Pokémon",i.GRASS,i.DARK,1.3,59.6,O.CHLOROPHYLL,O.WIND_RIDER,O.PICKPOCKET,480,90,100,60,90,60,80,45,50,240,_.MEDIUM_SLOW,50,!0),new c(e.TAILLOW,3,!1,!1,!1,"Tiny Swallow Pokémon",i.NORMAL,i.FLYING,.3,2.3,O.GUTS,O.NONE,O.SCRAPPY,270,40,55,30,30,30,85,200,70,54,_.MEDIUM_SLOW,50,!1),new c(e.SWELLOW,3,!1,!1,!1,"Swallow Pokémon",i.NORMAL,i.FLYING,.7,19.8,O.GUTS,O.NONE,O.SCRAPPY,455,60,85,60,75,50,125,45,70,159,_.MEDIUM_SLOW,50,!1),new c(e.WINGULL,3,!1,!1,!1,"Seagull Pokémon",i.WATER,i.FLYING,.6,9.5,O.KEEN_EYE,O.HYDRATION,O.RAIN_DISH,270,40,30,30,55,30,85,190,50,54,_.MEDIUM_FAST,50,!1),new c(e.PELIPPER,3,!1,!1,!1,"Water Bird Pokémon",i.WATER,i.FLYING,1.2,28,O.KEEN_EYE,O.DRIZZLE,O.RAIN_DISH,440,60,50,100,95,70,65,45,50,154,_.MEDIUM_FAST,50,!1),new c(e.RALTS,3,!1,!1,!1,"Feeling Pokémon",i.PSYCHIC,i.FAIRY,.4,6.6,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,198,28,25,25,45,35,40,235,35,40,_.SLOW,50,!1),new c(e.KIRLIA,3,!1,!1,!1,"Emotion Pokémon",i.PSYCHIC,i.FAIRY,.8,20.2,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,278,38,35,35,65,55,50,120,35,97,_.SLOW,50,!1),new c(e.GARDEVOIR,3,!1,!1,!1,"Embrace Pokémon",i.PSYCHIC,i.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,_.SLOW,50,!1,!0,new p("Normal","",i.PSYCHIC,i.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,!1,null,!0),new p("Mega",oe.MEGA,i.PSYCHIC,i.FAIRY,1.6,48.4,O.PIXILATE,O.PIXILATE,O.PIXILATE,618,68,85,65,165,135,100,45,35,259)),new c(e.SURSKIT,3,!1,!1,!1,"Pond Skater Pokémon",i.BUG,i.WATER,.5,1.7,O.SWIFT_SWIM,O.NONE,O.RAIN_DISH,269,40,30,32,50,52,65,200,70,54,_.MEDIUM_FAST,50,!1),new c(e.MASQUERAIN,3,!1,!1,!1,"Eyeball Pokémon",i.BUG,i.FLYING,.8,3.6,O.INTIMIDATE,O.NONE,O.UNNERVE,454,70,60,62,100,82,80,75,70,159,_.MEDIUM_FAST,50,!1),new c(e.SHROOMISH,3,!1,!1,!1,"Mushroom Pokémon",i.GRASS,null,.4,4.5,O.EFFECT_SPORE,O.POISON_HEAL,O.QUICK_FEET,295,60,40,60,40,60,35,255,70,59,_.FLUCTUATING,50,!1),new c(e.BRELOOM,3,!1,!1,!1,"Mushroom Pokémon",i.GRASS,i.FIGHTING,1.2,39.2,O.EFFECT_SPORE,O.POISON_HEAL,O.TECHNICIAN,460,60,130,80,60,60,70,90,70,161,_.FLUCTUATING,50,!1),new c(e.SLAKOTH,3,!1,!1,!1,"Slacker Pokémon",i.NORMAL,null,.8,24,O.TRUANT,O.NONE,O.STALL,280,60,60,60,35,35,30,255,70,56,_.SLOW,50,!1),new c(e.VIGOROTH,3,!1,!1,!1,"Wild Monkey Pokémon",i.NORMAL,null,1.4,46.5,O.VITAL_SPIRIT,O.NONE,O.INSOMNIA,440,80,80,80,55,55,90,120,70,154,_.SLOW,50,!1),new c(e.SLAKING,3,!1,!1,!1,"Lazy Pokémon",i.NORMAL,null,2,130.5,O.TRUANT,O.NONE,O.STALL,670,150,160,100,95,65,100,45,70,252,_.SLOW,50,!1),new c(e.NINCADA,3,!1,!1,!1,"Trainee Pokémon",i.BUG,i.GROUND,.5,5.5,O.COMPOUND_EYES,O.NONE,O.RUN_AWAY,266,31,45,90,30,30,40,255,50,53,_.ERRATIC,50,!1),new c(e.NINJASK,3,!1,!1,!1,"Ninja Pokémon",i.BUG,i.FLYING,.8,12,O.SPEED_BOOST,O.NONE,O.INFILTRATOR,456,61,90,45,50,50,160,120,50,160,_.ERRATIC,50,!1),new c(e.SHEDINJA,3,!1,!1,!1,"Shed Pokémon",i.BUG,i.GHOST,.8,1.2,O.WONDER_GUARD,O.NONE,O.NONE,236,1,90,45,30,30,40,45,50,83,_.ERRATIC,null,!1),new c(e.WHISMUR,3,!1,!1,!1,"Whisper Pokémon",i.NORMAL,null,.6,16.3,O.SOUNDPROOF,O.NONE,O.RATTLED,240,64,51,23,51,23,28,190,50,48,_.MEDIUM_SLOW,50,!1),new c(e.LOUDRED,3,!1,!1,!1,"Big Voice Pokémon",i.NORMAL,null,1,40.5,O.SOUNDPROOF,O.NONE,O.SCRAPPY,360,84,71,43,71,43,48,120,50,126,_.MEDIUM_SLOW,50,!1),new c(e.EXPLOUD,3,!1,!1,!1,"Loud Noise Pokémon",i.NORMAL,null,1.5,84,O.SOUNDPROOF,O.NONE,O.SCRAPPY,490,104,91,63,91,73,68,45,50,245,_.MEDIUM_SLOW,50,!1),new c(e.MAKUHITA,3,!1,!1,!1,"Guts Pokémon",i.FIGHTING,null,1,86.4,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,237,72,60,30,20,30,25,180,70,47,_.FLUCTUATING,75,!1),new c(e.HARIYAMA,3,!1,!1,!1,"Arm Thrust Pokémon",i.FIGHTING,null,2.3,253.8,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,474,144,120,60,40,60,50,200,70,166,_.FLUCTUATING,75,!1),new c(e.AZURILL,3,!1,!1,!1,"Polka Dot Pokémon",i.NORMAL,i.FAIRY,.2,2,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,190,50,20,40,20,40,20,150,50,38,_.FAST,25,!1),new c(e.NOSEPASS,3,!1,!1,!1,"Compass Pokémon",i.ROCK,null,1,97,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,375,30,45,135,45,90,30,255,70,75,_.MEDIUM_FAST,50,!1),new c(e.SKITTY,3,!1,!1,!1,"Kitten Pokémon",i.NORMAL,null,.6,11,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,260,50,45,45,35,35,50,255,70,52,_.FAST,25,!1),new c(e.DELCATTY,3,!1,!1,!1,"Prim Pokémon",i.NORMAL,null,1.1,32.6,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,400,70,65,65,55,55,90,60,70,140,_.FAST,25,!1),new c(e.SABLEYE,3,!1,!1,!1,"Darkness Pokémon",i.DARK,i.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,_.MEDIUM_SLOW,50,!1,!0,new p("Normal","",i.DARK,i.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,!1,null,!0),new p("Mega",oe.MEGA,i.DARK,i.GHOST,.5,161,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,480,50,85,125,85,115,20,45,35,133)),new c(e.MAWILE,3,!1,!1,!1,"Deceiver Pokémon",i.STEEL,i.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,_.FAST,50,!1,!0,new p("Normal","",i.STEEL,i.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,!1,null,!0),new p("Mega",oe.MEGA,i.STEEL,i.FAIRY,1,23.5,O.HUGE_POWER,O.HUGE_POWER,O.HUGE_POWER,480,50,105,125,55,95,50,45,50,133)),new c(e.ARON,3,!1,!1,!1,"Iron Armor Pokémon",i.STEEL,i.ROCK,.4,60,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,330,50,70,100,40,40,30,180,35,66,_.SLOW,50,!1),new c(e.LAIRON,3,!1,!1,!1,"Iron Armor Pokémon",i.STEEL,i.ROCK,.9,120,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,430,60,90,140,50,50,40,90,35,151,_.SLOW,50,!1),new c(e.AGGRON,3,!1,!1,!1,"Iron Armor Pokémon",i.STEEL,i.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,_.SLOW,50,!1,!0,new p("Normal","",i.STEEL,i.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,!1,null,!0),new p("Mega",oe.MEGA,i.STEEL,null,2.2,395,O.FILTER,O.FILTER,O.FILTER,630,70,140,230,60,80,50,45,35,265)),new c(e.MEDITITE,3,!1,!1,!1,"Meditate Pokémon",i.FIGHTING,i.PSYCHIC,.6,11.2,O.PURE_POWER,O.NONE,O.TELEPATHY,280,30,40,55,40,55,60,180,70,56,_.MEDIUM_FAST,50,!0),new c(e.MEDICHAM,3,!1,!1,!1,"Meditate Pokémon",i.FIGHTING,i.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,_.MEDIUM_FAST,50,!0,!0,new p("Normal","",i.FIGHTING,i.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,!0,null,!0),new p("Mega",oe.MEGA,i.FIGHTING,i.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.PURE_POWER,510,60,100,85,80,85,100,90,70,144,!0)),new c(e.ELECTRIKE,3,!1,!1,!1,"Lightning Pokémon",i.ELECTRIC,null,.6,15.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,295,40,45,40,65,40,65,120,50,59,_.SLOW,50,!1),new c(e.MANECTRIC,3,!1,!1,!1,"Discharge Pokémon",i.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,_.SLOW,50,!1,!0,new p("Normal","",i.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,!1,null,!0),new p("Mega",oe.MEGA,i.ELECTRIC,null,1.8,44,O.INTIMIDATE,O.INTIMIDATE,O.INTIMIDATE,575,70,75,80,135,80,135,45,50,166)),new c(e.PLUSLE,3,!1,!1,!1,"Cheering Pokémon",i.ELECTRIC,null,.4,4.2,O.PLUS,O.NONE,O.LIGHTNING_ROD,405,60,50,40,85,75,95,200,70,142,_.MEDIUM_FAST,50,!1),new c(e.MINUN,3,!1,!1,!1,"Cheering Pokémon",i.ELECTRIC,null,.4,4.2,O.MINUS,O.NONE,O.VOLT_ABSORB,405,60,40,50,75,85,95,200,70,142,_.MEDIUM_FAST,50,!1),new c(e.VOLBEAT,3,!1,!1,!1,"Firefly Pokémon",i.BUG,null,.7,17.7,O.ILLUMINATE,O.SWARM,O.PRANKSTER,430,65,73,75,47,85,85,150,70,151,_.ERRATIC,100,!1),new c(e.ILLUMISE,3,!1,!1,!1,"Firefly Pokémon",i.BUG,null,.6,17.7,O.OBLIVIOUS,O.TINTED_LENS,O.PRANKSTER,430,65,47,75,73,85,85,150,70,151,_.FLUCTUATING,0,!1),new c(e.ROSELIA,3,!1,!1,!1,"Thorn Pokémon",i.GRASS,i.POISON,.3,2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,400,50,60,45,100,80,65,150,50,140,_.MEDIUM_SLOW,50,!0),new c(e.GULPIN,3,!1,!1,!1,"Stomach Pokémon",i.POISON,null,.4,10.3,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,302,70,43,53,43,53,40,225,70,60,_.FLUCTUATING,50,!0),new c(e.SWALOT,3,!1,!1,!1,"Poison Bag Pokémon",i.POISON,null,1.7,80,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,467,100,73,83,73,83,55,75,70,163,_.FLUCTUATING,50,!0),new c(e.CARVANHA,3,!1,!1,!1,"Savage Pokémon",i.WATER,i.DARK,.8,20.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,305,45,90,20,65,20,65,225,35,61,_.SLOW,50,!1),new c(e.SHARPEDO,3,!1,!1,!1,"Brutal Pokémon",i.WATER,i.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,_.SLOW,50,!1,!0,new p("Normal","",i.WATER,i.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,!1,null,!0),new p("Mega",oe.MEGA,i.WATER,i.DARK,2.5,130.3,O.STRONG_JAW,O.NONE,O.STRONG_JAW,560,70,140,70,110,65,105,60,35,161)),new c(e.WAILMER,3,!1,!1,!1,"Ball Whale Pokémon",i.WATER,null,2,130,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,400,130,70,35,70,35,60,125,50,80,_.FLUCTUATING,50,!1),new c(e.WAILORD,3,!1,!1,!1,"Float Whale Pokémon",i.WATER,null,14.5,398,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,500,170,90,45,90,45,60,60,50,175,_.FLUCTUATING,50,!1),new c(e.NUMEL,3,!1,!1,!1,"Numb Pokémon",i.FIRE,i.GROUND,.7,24,O.OBLIVIOUS,O.SIMPLE,O.OWN_TEMPO,305,60,60,40,65,45,35,255,70,61,_.MEDIUM_FAST,50,!0),new c(e.CAMERUPT,3,!1,!1,!1,"Eruption Pokémon",i.FIRE,i.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,_.MEDIUM_FAST,50,!0,!0,new p("Normal","",i.FIRE,i.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,!0,null,!0),new p("Mega",oe.MEGA,i.FIRE,i.GROUND,2.5,320.5,O.SHEER_FORCE,O.SHEER_FORCE,O.SHEER_FORCE,560,70,120,100,145,105,20,150,70,161)),new c(e.TORKOAL,3,!1,!1,!1,"Coal Pokémon",i.FIRE,null,.5,80.4,O.WHITE_SMOKE,O.DROUGHT,O.SHELL_ARMOR,470,70,85,140,85,70,20,90,50,165,_.MEDIUM_FAST,50,!1),new c(e.SPOINK,3,!1,!1,!1,"Bounce Pokémon",i.PSYCHIC,null,.7,30.6,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,330,60,25,35,70,80,60,255,70,66,_.FAST,50,!1),new c(e.GRUMPIG,3,!1,!1,!1,"Manipulate Pokémon",i.PSYCHIC,null,.9,71.5,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,470,80,45,65,90,110,80,60,70,165,_.FAST,50,!1),new c(e.SPINDA,3,!1,!1,!1,"Spot Panda Pokémon",i.NORMAL,null,1.1,5,O.OWN_TEMPO,O.TANGLED_FEET,O.CONTRARY,360,60,60,60,60,60,60,255,70,126,_.FAST,50,!1),new c(e.TRAPINCH,3,!1,!1,!1,"Ant Pit Pokémon",i.GROUND,null,.7,15,O.HYPER_CUTTER,O.ARENA_TRAP,O.SHEER_FORCE,290,45,100,45,45,45,10,255,50,58,_.MEDIUM_SLOW,50,!1),new c(e.VIBRAVA,3,!1,!1,!1,"Vibration Pokémon",i.GROUND,i.DRAGON,1.1,15.3,O.LEVITATE,O.NONE,O.NONE,340,50,70,50,50,50,70,120,50,119,_.MEDIUM_SLOW,50,!1),new c(e.FLYGON,3,!1,!1,!1,"Mystic Pokémon",i.GROUND,i.DRAGON,2,82,O.LEVITATE,O.NONE,O.NONE,520,80,100,80,80,80,100,45,50,260,_.MEDIUM_SLOW,50,!1),new c(e.CACNEA,3,!1,!1,!1,"Cactus Pokémon",i.GRASS,null,.4,51.3,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,335,50,85,40,85,40,35,190,35,67,_.MEDIUM_SLOW,50,!1),new c(e.CACTURNE,3,!1,!1,!1,"Scarecrow Pokémon",i.GRASS,i.DARK,1.3,77.4,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,475,70,115,60,115,60,55,60,35,166,_.MEDIUM_SLOW,50,!0),new c(e.SWABLU,3,!1,!1,!1,"Cotton Bird Pokémon",i.NORMAL,i.FLYING,.4,1.2,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,310,45,40,60,40,75,50,255,50,62,_.ERRATIC,50,!1),new c(e.ALTARIA,3,!1,!1,!1,"Humming Pokémon",i.DRAGON,i.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,_.ERRATIC,50,!1,!0,new p("Normal","",i.DRAGON,i.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,!1,null,!0),new p("Mega",oe.MEGA,i.DRAGON,i.FAIRY,1.5,20.6,O.PIXILATE,O.NONE,O.PIXILATE,590,75,110,110,110,105,80,45,50,172)),new c(e.ZANGOOSE,3,!1,!1,!1,"Cat Ferret Pokémon",i.NORMAL,null,1.3,40.3,O.IMMUNITY,O.NONE,O.TOXIC_BOOST,458,73,115,60,60,60,90,90,70,160,_.ERRATIC,50,!1),new c(e.SEVIPER,3,!1,!1,!1,"Fang Snake Pokémon",i.POISON,null,2.7,52.5,O.SHED_SKIN,O.NONE,O.INFILTRATOR,458,73,100,60,100,60,65,90,70,160,_.FLUCTUATING,50,!1),new c(e.LUNATONE,3,!1,!1,!1,"Meteorite Pokémon",i.ROCK,i.PSYCHIC,1,168,O.LEVITATE,O.NONE,O.NONE,460,90,55,65,95,85,70,45,50,161,_.FAST,null,!1),new c(e.SOLROCK,3,!1,!1,!1,"Meteorite Pokémon",i.ROCK,i.PSYCHIC,1.2,154,O.LEVITATE,O.NONE,O.NONE,460,90,95,85,55,65,70,45,50,161,_.FAST,null,!1),new c(e.BARBOACH,3,!1,!1,!1,"Whiskers Pokémon",i.WATER,i.GROUND,.4,1.9,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,288,50,48,43,46,41,60,190,50,58,_.MEDIUM_FAST,50,!1),new c(e.WHISCASH,3,!1,!1,!1,"Whiskers Pokémon",i.WATER,i.GROUND,.9,23.6,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,468,110,78,73,76,71,60,75,50,164,_.MEDIUM_FAST,50,!1),new c(e.CORPHISH,3,!1,!1,!1,"Ruffian Pokémon",i.WATER,null,.6,11.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,308,43,80,65,50,35,35,205,50,62,_.FLUCTUATING,50,!1),new c(e.CRAWDAUNT,3,!1,!1,!1,"Rogue Pokémon",i.WATER,i.DARK,1.1,32.8,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,468,63,120,85,90,55,55,155,50,164,_.FLUCTUATING,50,!1),new c(e.BALTOY,3,!1,!1,!1,"Clay Doll Pokémon",i.GROUND,i.PSYCHIC,.5,21.5,O.LEVITATE,O.NONE,O.NONE,300,40,40,55,40,70,55,255,50,60,_.MEDIUM_FAST,null,!1),new c(e.CLAYDOL,3,!1,!1,!1,"Clay Doll Pokémon",i.GROUND,i.PSYCHIC,1.5,108,O.LEVITATE,O.NONE,O.NONE,500,60,70,105,70,120,75,90,50,175,_.MEDIUM_FAST,null,!1),new c(e.LILEEP,3,!1,!1,!1,"Sea Lily Pokémon",i.ROCK,i.GRASS,1,23.8,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,355,66,41,77,61,87,23,45,50,71,_.ERRATIC,87.5,!1),new c(e.CRADILY,3,!1,!1,!1,"Barnacle Pokémon",i.ROCK,i.GRASS,1.5,60.4,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,495,86,81,97,81,107,43,45,50,173,_.ERRATIC,87.5,!1),new c(e.ANORITH,3,!1,!1,!1,"Old Shrimp Pokémon",i.ROCK,i.BUG,.7,12.5,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,355,45,95,50,40,50,75,45,50,71,_.ERRATIC,87.5,!1),new c(e.ARMALDO,3,!1,!1,!1,"Plate Pokémon",i.ROCK,i.BUG,1.5,68.2,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,495,75,125,100,70,80,45,45,50,173,_.ERRATIC,87.5,!1),new c(e.FEEBAS,3,!1,!1,!1,"Fish Pokémon",i.WATER,null,.6,7.4,O.SWIFT_SWIM,O.OBLIVIOUS,O.ADAPTABILITY,200,20,15,20,10,55,80,255,50,40,_.ERRATIC,50,!1),new c(e.MILOTIC,3,!1,!1,!1,"Tender Pokémon",i.WATER,null,6.2,162,O.MARVEL_SCALE,O.COMPETITIVE,O.CUTE_CHARM,540,95,60,79,100,125,81,60,50,189,_.ERRATIC,50,!0),new c(e.CASTFORM,3,!1,!1,!1,"Weather Pokémon",i.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,_.MEDIUM_FAST,50,!1,!0,new p("Normal Form","",i.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,!1,null,!0),new p("Sunny Form","sunny",i.FIRE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new p("Rainy Form","rainy",i.WATER,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new p("Snowy Form","snowy",i.ICE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147)),new c(e.KECLEON,3,!1,!1,!1,"Color Swap Pokémon",i.NORMAL,null,1,22,O.COLOR_CHANGE,O.NONE,O.PROTEAN,440,60,90,70,60,120,40,200,70,154,_.MEDIUM_SLOW,50,!1),new c(e.SHUPPET,3,!1,!1,!1,"Puppet Pokémon",i.GHOST,null,.6,2.3,O.INSOMNIA,O.FRISK,O.CURSED_BODY,295,44,75,35,63,33,45,225,35,59,_.FAST,50,!1),new c(e.BANETTE,3,!1,!1,!1,"Marionette Pokémon",i.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,_.FAST,50,!1,!0,new p("Normal","",i.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,!1,null,!0),new p("Mega",oe.MEGA,i.GHOST,null,1.2,13,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,555,64,165,75,93,83,75,45,35,159)),new c(e.DUSKULL,3,!1,!1,!1,"Requiem Pokémon",i.GHOST,null,.8,15,O.LEVITATE,O.NONE,O.FRISK,295,20,40,90,30,90,25,190,35,59,_.FAST,50,!1),new c(e.DUSCLOPS,3,!1,!1,!1,"Beckon Pokémon",i.GHOST,null,1.6,30.6,O.PRESSURE,O.NONE,O.FRISK,455,40,70,130,60,130,25,90,35,159,_.FAST,50,!1),new c(e.TROPIUS,3,!1,!1,!1,"Fruit Pokémon",i.GRASS,i.FLYING,2,100,O.CHLOROPHYLL,O.SOLAR_POWER,O.HARVEST,460,99,68,83,72,87,51,200,70,161,_.SLOW,50,!1),new c(e.CHIMECHO,3,!1,!1,!1,"Wind Chime Pokémon",i.PSYCHIC,null,.6,1,O.LEVITATE,O.NONE,O.NONE,455,75,50,80,95,90,65,45,70,159,_.FAST,50,!1),new c(e.ABSOL,3,!1,!1,!1,"Disaster Pokémon",i.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,_.MEDIUM_SLOW,50,!1,!0,new p("Normal","",i.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,!1,null,!0),new p("Mega",oe.MEGA,i.DARK,null,1.2,49,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,565,65,150,60,115,60,115,30,35,163)),new c(e.WYNAUT,3,!1,!1,!1,"Bright Pokémon",i.PSYCHIC,null,.6,14,O.SHADOW_TAG,O.NONE,O.TELEPATHY,260,95,23,48,23,48,23,125,50,52,_.MEDIUM_FAST,50,!1),new c(e.SNORUNT,3,!1,!1,!1,"Snow Hat Pokémon",i.ICE,null,.7,16.8,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,300,50,50,50,50,50,50,190,50,60,_.MEDIUM_FAST,50,!1),new c(e.GLALIE,3,!1,!1,!1,"Face Pokémon",i.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,!1,null,!0),new p("Mega",oe.MEGA,i.ICE,null,2.1,350.2,O.REFRIGERATE,O.REFRIGERATE,O.REFRIGERATE,580,80,120,80,120,80,100,75,50,168)),new c(e.SPHEAL,3,!1,!1,!1,"Clap Pokémon",i.ICE,i.WATER,.8,39.5,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,290,70,40,50,55,50,25,255,50,58,_.MEDIUM_SLOW,50,!1),new c(e.SEALEO,3,!1,!1,!1,"Ball Roll Pokémon",i.ICE,i.WATER,1.1,87.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,410,90,60,70,75,70,45,120,50,144,_.MEDIUM_SLOW,50,!1),new c(e.WALREIN,3,!1,!1,!1,"Ice Break Pokémon",i.ICE,i.WATER,1.4,150.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,530,110,80,90,95,90,65,45,50,265,_.MEDIUM_SLOW,50,!1),new c(e.CLAMPERL,3,!1,!1,!1,"Bivalve Pokémon",i.WATER,null,.4,52.5,O.SHELL_ARMOR,O.NONE,O.RATTLED,345,35,64,85,74,55,32,255,70,69,_.ERRATIC,50,!1),new c(e.HUNTAIL,3,!1,!1,!1,"Deep Sea Pokémon",i.WATER,null,1.7,27,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,485,55,104,105,94,75,52,60,70,170,_.ERRATIC,50,!1),new c(e.GOREBYSS,3,!1,!1,!1,"South Sea Pokémon",i.WATER,null,1.8,22.6,O.SWIFT_SWIM,O.NONE,O.HYDRATION,485,55,84,105,114,75,52,60,70,170,_.ERRATIC,50,!1),new c(e.RELICANTH,3,!1,!1,!1,"Longevity Pokémon",i.WATER,i.ROCK,1,23.4,O.SWIFT_SWIM,O.ROCK_HEAD,O.STURDY,485,100,90,130,45,65,55,25,50,170,_.SLOW,87.5,!0),new c(e.LUVDISC,3,!1,!1,!1,"Rendezvous Pokémon",i.WATER,null,.6,8.7,O.SWIFT_SWIM,O.NONE,O.HYDRATION,330,43,30,55,40,65,97,225,70,116,_.FAST,25,!1),new c(e.BAGON,3,!1,!1,!1,"Rock Head Pokémon",i.DRAGON,null,.6,42.1,O.ROCK_HEAD,O.NONE,O.SHEER_FORCE,300,45,75,60,40,30,50,45,35,60,_.SLOW,50,!1),new c(e.SHELGON,3,!1,!1,!1,"Endurance Pokémon",i.DRAGON,null,1.1,110.5,O.ROCK_HEAD,O.NONE,O.OVERCOAT,420,65,95,100,60,50,50,45,35,147,_.SLOW,50,!1),new c(e.SALAMENCE,3,!1,!1,!1,"Dragon Pokémon",i.DRAGON,i.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,_.SLOW,50,!1,!0,new p("Normal","",i.DRAGON,i.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,!1,null,!0),new p("Mega",oe.MEGA,i.DRAGON,i.FLYING,1.8,112.6,O.AERILATE,O.NONE,O.AERILATE,700,95,145,130,120,90,120,45,35,300)),new c(e.BELDUM,3,!1,!1,!1,"Iron Ball Pokémon",i.STEEL,i.PSYCHIC,.6,95.2,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,300,40,55,80,35,60,30,45,35,60,_.SLOW,null,!1),new c(e.METANG,3,!1,!1,!1,"Iron Claw Pokémon",i.STEEL,i.PSYCHIC,1.2,202.5,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,420,60,75,100,55,80,50,25,35,147,_.SLOW,null,!1),new c(e.METAGROSS,3,!1,!1,!1,"Iron Leg Pokémon",i.STEEL,i.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,10,35,300,_.SLOW,null,!1,!0,new p("Normal","",i.STEEL,i.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,3,35,300,!1,null,!0),new p("Mega",oe.MEGA,i.STEEL,i.PSYCHIC,2.5,942.9,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,700,80,145,150,105,110,110,3,35,300)),new c(e.REGIROCK,3,!0,!1,!1,"Rock Peak Pokémon",i.ROCK,null,1.7,230,O.CLEAR_BODY,O.NONE,O.STURDY,580,80,100,200,50,100,50,3,35,290,_.SLOW,null,!1),new c(e.REGICE,3,!0,!1,!1,"Iceberg Pokémon",i.ICE,null,1.8,175,O.CLEAR_BODY,O.NONE,O.ICE_BODY,580,80,50,100,100,200,50,3,35,290,_.SLOW,null,!1),new c(e.REGISTEEL,3,!0,!1,!1,"Iron Pokémon",i.STEEL,null,1.9,205,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,580,80,75,150,75,150,50,3,35,290,_.SLOW,null,!1),new c(e.LATIAS,3,!0,!1,!1,"Eon Pokémon",i.DRAGON,i.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,_.SLOW,0,!1,!0,new p("Normal","",i.DRAGON,i.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,!1,null,!0),new p("Mega",oe.MEGA,i.DRAGON,i.PSYCHIC,1.8,52,O.LEVITATE,O.NONE,O.NONE,700,80,100,120,140,150,110,3,90,300)),new c(e.LATIOS,3,!0,!1,!1,"Eon Pokémon",i.DRAGON,i.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,_.SLOW,100,!1,!0,new p("Normal","",i.DRAGON,i.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,!1,null,!0),new p("Mega",oe.MEGA,i.DRAGON,i.PSYCHIC,2.3,70,O.LEVITATE,O.NONE,O.NONE,700,80,130,100,160,120,110,3,90,300)),new c(e.KYOGRE,3,!1,!0,!1,"Sea Basin Pokémon",i.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,_.SLOW,null,!1,!0,new p("Normal","",i.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,!1,null,!0),new p("Primal","primal",i.WATER,null,9.8,430,O.PRIMORDIAL_SEA,O.NONE,O.NONE,770,100,150,90,180,160,90,3,0,335)),new c(e.GROUDON,3,!1,!0,!1,"Continent Pokémon",i.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,_.SLOW,null,!1,!0,new p("Normal","",i.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,!1,null,!0),new p("Primal","primal",i.GROUND,i.FIRE,5,999.7,O.DESOLATE_LAND,O.NONE,O.NONE,770,100,180,160,150,90,90,3,0,335)),new c(e.RAYQUAZA,3,!1,!0,!1,"Sky High Pokémon",i.DRAGON,i.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,_.SLOW,null,!1,!0,new p("Normal","",i.DRAGON,i.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,!1,null,!0),new p("Mega",oe.MEGA,i.DRAGON,i.FLYING,10.8,392,O.DELTA_STREAM,O.NONE,O.NONE,780,105,180,100,180,100,115,45,0,340)),new c(e.JIRACHI,3,!1,!1,!0,"Wish Pokémon",i.STEEL,i.PSYCHIC,.3,1.1,O.SERENE_GRACE,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,_.SLOW,null,!1),new c(e.DEOXYS,3,!1,!1,!0,"DNA Pokémon",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,270,_.SLOW,null,!1,!0,new p("Normal Forme","normal",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,270,!1,"",!0),new p("Attack Forme","attack",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,180,20,180,20,150,3,0,270),new p("Defense Forme","defense",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,70,160,70,160,90,3,0,270),new p("Speed Forme","speed",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,95,90,95,90,180,3,0,270)),new c(e.TURTWIG,4,!1,!1,!1,"Tiny Leaf Pokémon",i.GRASS,null,.4,10.2,O.OVERGROW,O.NONE,O.SHELL_ARMOR,318,55,68,64,45,55,31,45,70,64,_.MEDIUM_SLOW,87.5,!1),new c(e.GROTLE,4,!1,!1,!1,"Grove Pokémon",i.GRASS,null,1.1,97,O.OVERGROW,O.NONE,O.SHELL_ARMOR,405,75,89,85,55,65,36,45,70,142,_.MEDIUM_SLOW,87.5,!1),new c(e.TORTERRA,4,!1,!1,!1,"Continent Pokémon",i.GRASS,i.GROUND,2.2,310,O.OVERGROW,O.NONE,O.SHELL_ARMOR,525,95,109,105,75,85,56,45,70,236,_.MEDIUM_SLOW,87.5,!1),new c(e.CHIMCHAR,4,!1,!1,!1,"Chimp Pokémon",i.FIRE,null,.5,6.2,O.BLAZE,O.NONE,O.IRON_FIST,309,44,58,44,58,44,61,45,70,62,_.MEDIUM_SLOW,87.5,!1),new c(e.MONFERNO,4,!1,!1,!1,"Playful Pokémon",i.FIRE,i.FIGHTING,.9,22,O.BLAZE,O.NONE,O.IRON_FIST,405,64,78,52,78,52,81,45,70,142,_.MEDIUM_SLOW,87.5,!1),new c(e.INFERNAPE,4,!1,!1,!1,"Flame Pokémon",i.FIRE,i.FIGHTING,1.2,55,O.BLAZE,O.NONE,O.IRON_FIST,534,76,104,71,104,71,108,45,70,240,_.MEDIUM_SLOW,87.5,!1),new c(e.PIPLUP,4,!1,!1,!1,"Penguin Pokémon",i.WATER,null,.4,5.2,O.TORRENT,O.NONE,O.COMPETITIVE,314,53,51,53,61,56,40,45,70,63,_.MEDIUM_SLOW,87.5,!1),new c(e.PRINPLUP,4,!1,!1,!1,"Penguin Pokémon",i.WATER,null,.8,23,O.TORRENT,O.NONE,O.COMPETITIVE,405,64,66,68,81,76,50,45,70,142,_.MEDIUM_SLOW,87.5,!1),new c(e.EMPOLEON,4,!1,!1,!1,"Emperor Pokémon",i.WATER,i.STEEL,1.7,84.5,O.TORRENT,O.NONE,O.COMPETITIVE,530,84,86,88,111,101,60,45,70,239,_.MEDIUM_SLOW,87.5,!1),new c(e.STARLY,4,!1,!1,!1,"Starling Pokémon",i.NORMAL,i.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.RECKLESS,245,40,55,30,30,30,60,255,70,49,_.MEDIUM_SLOW,50,!0),new c(e.STARAVIA,4,!1,!1,!1,"Starling Pokémon",i.NORMAL,i.FLYING,.6,15.5,O.INTIMIDATE,O.NONE,O.RECKLESS,340,55,75,50,40,40,80,120,70,119,_.MEDIUM_SLOW,50,!0),new c(e.STARAPTOR,4,!1,!1,!1,"Predator Pokémon",i.NORMAL,i.FLYING,1.2,24.9,O.INTIMIDATE,O.NONE,O.RECKLESS,485,85,120,70,50,60,100,45,70,218,_.MEDIUM_SLOW,50,!0),new c(e.BIDOOF,4,!1,!1,!1,"Plump Mouse Pokémon",i.NORMAL,null,.5,20,O.SIMPLE,O.UNAWARE,O.MOODY,250,59,45,40,35,40,31,255,70,50,_.MEDIUM_FAST,50,!0),new c(e.BIBAREL,4,!1,!1,!1,"Beaver Pokémon",i.NORMAL,i.WATER,1,31.5,O.SIMPLE,O.UNAWARE,O.MOODY,410,79,85,60,55,60,71,127,70,144,_.MEDIUM_FAST,50,!0),new c(e.KRICKETOT,4,!1,!1,!1,"Cricket Pokémon",i.BUG,null,.3,2.2,O.SHED_SKIN,O.NONE,O.RUN_AWAY,194,37,25,41,25,41,25,255,70,39,_.MEDIUM_SLOW,50,!0),new c(e.KRICKETUNE,4,!1,!1,!1,"Cricket Pokémon",i.BUG,null,1,25.5,O.SWARM,O.NONE,O.TECHNICIAN,384,77,85,51,55,51,65,45,70,134,_.MEDIUM_SLOW,50,!0),new c(e.SHINX,4,!1,!1,!1,"Flash Pokémon",i.ELECTRIC,null,.5,9.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,263,45,65,34,40,34,45,235,50,53,_.MEDIUM_SLOW,50,!0),new c(e.LUXIO,4,!1,!1,!1,"Spark Pokémon",i.ELECTRIC,null,.9,30.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,363,60,85,49,60,49,60,120,100,127,_.MEDIUM_SLOW,50,!0),new c(e.LUXRAY,4,!1,!1,!1,"Gleam Eyes Pokémon",i.ELECTRIC,null,1.4,42,O.RIVALRY,O.INTIMIDATE,O.GUTS,523,80,120,79,95,79,70,45,50,262,_.MEDIUM_SLOW,50,!0),new c(e.BUDEW,4,!1,!1,!1,"Bud Pokémon",i.GRASS,i.POISON,.2,1.2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,280,40,30,35,50,70,55,255,50,56,_.MEDIUM_SLOW,50,!1),new c(e.ROSERADE,4,!1,!1,!1,"Bouquet Pokémon",i.GRASS,i.POISON,.9,14.5,O.NATURAL_CURE,O.POISON_POINT,O.TECHNICIAN,515,60,70,65,125,105,90,75,50,258,_.MEDIUM_SLOW,50,!0),new c(e.CRANIDOS,4,!1,!1,!1,"Head Butt Pokémon",i.ROCK,null,.9,31.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,350,67,125,40,30,30,58,45,70,70,_.ERRATIC,87.5,!1),new c(e.RAMPARDOS,4,!1,!1,!1,"Head Butt Pokémon",i.ROCK,null,1.6,102.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,495,97,165,60,65,50,58,45,70,173,_.ERRATIC,87.5,!1),new c(e.SHIELDON,4,!1,!1,!1,"Shield Pokémon",i.ROCK,i.STEEL,.5,57,O.STURDY,O.NONE,O.SOUNDPROOF,350,30,42,118,42,88,30,45,70,70,_.ERRATIC,87.5,!1),new c(e.BASTIODON,4,!1,!1,!1,"Shield Pokémon",i.ROCK,i.STEEL,1.3,149.5,O.STURDY,O.NONE,O.SOUNDPROOF,495,60,52,168,47,138,30,45,70,173,_.ERRATIC,87.5,!1),new c(e.BURMY,4,!1,!1,!1,"Bagworm Pokémon",i.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,_.MEDIUM_FAST,50,!1,!0,new p("Plant Cloak","plant",i.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new p("Sandy Cloak","sandy",i.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new p("Trash Cloak","trash",i.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0)),new c(e.WORMADAM,4,!1,!1,!1,"Bagworm Pokémon",i.BUG,i.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,_.MEDIUM_FAST,0,!1,!1,new p("Plant Cloak","plant",i.BUG,i.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,!1,null,!0),new p("Sandy Cloak","sandy",i.BUG,i.GROUND,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,79,105,59,85,36,45,70,148,!1,null,!0),new p("Trash Cloak","trash",i.BUG,i.STEEL,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,69,95,69,95,36,45,70,148,!1,null,!0)),new c(e.MOTHIM,4,!1,!1,!1,"Moth Pokémon",i.BUG,i.FLYING,.9,23.3,O.SWARM,O.NONE,O.TINTED_LENS,424,70,94,50,94,50,66,45,70,148,_.MEDIUM_FAST,100,!1),new c(e.COMBEE,4,!1,!1,!1,"Tiny Bee Pokémon",i.BUG,i.FLYING,.3,5.5,O.HONEY_GATHER,O.NONE,O.HUSTLE,244,30,30,42,30,42,70,120,50,49,_.MEDIUM_SLOW,87.5,!0),new c(e.VESPIQUEN,4,!1,!1,!1,"Beehive Pokémon",i.BUG,i.FLYING,1.2,38.5,O.PRESSURE,O.NONE,O.UNNERVE,474,70,80,102,80,102,40,45,50,166,_.MEDIUM_SLOW,0,!1),new c(e.PACHIRISU,4,!1,!1,!1,"EleSquirrel Pokémon",i.ELECTRIC,null,.4,3.9,O.RUN_AWAY,O.PICKUP,O.VOLT_ABSORB,405,60,45,70,45,90,95,200,100,142,_.MEDIUM_FAST,50,!0),new c(e.BUIZEL,4,!1,!1,!1,"Sea Weasel Pokémon",i.WATER,null,.7,29.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,330,55,65,35,60,30,85,190,70,66,_.MEDIUM_FAST,50,!0),new c(e.FLOATZEL,4,!1,!1,!1,"Sea Weasel Pokémon",i.WATER,null,1.1,33.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,495,85,105,55,85,50,115,75,70,173,_.MEDIUM_FAST,50,!0),new c(e.CHERUBI,4,!1,!1,!1,"Cherry Pokémon",i.GRASS,null,.4,3.3,O.CHLOROPHYLL,O.NONE,O.NONE,275,45,35,45,62,53,35,190,50,55,_.MEDIUM_FAST,50,!1),new c(e.CHERRIM,4,!1,!1,!1,"Blossom Pokémon",i.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,_.MEDIUM_FAST,50,!1,!0,new p("Overcast Form","overcast",i.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,!1,null,!0),new p("Sunshine Form","sunshine",i.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158)),new c(e.SHELLOS,4,!1,!1,!1,"Sea Slug Pokémon",i.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,_.MEDIUM_FAST,50,!1,!1,new p("East Sea","east",i.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0),new p("West Sea","west",i.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0)),new c(e.GASTRODON,4,!1,!1,!1,"Sea Slug Pokémon",i.WATER,i.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,_.MEDIUM_FAST,50,!1,!1,new p("East Sea","east",i.WATER,i.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0),new p("West Sea","west",i.WATER,i.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0)),new c(e.AMBIPOM,4,!1,!1,!1,"Long Tail Pokémon",i.NORMAL,null,1.2,20.3,O.TECHNICIAN,O.PICKUP,O.SKILL_LINK,482,75,100,66,60,66,115,45,100,169,_.FAST,50,!0),new c(e.DRIFLOON,4,!1,!1,!1,"Balloon Pokémon",i.GHOST,i.FLYING,.4,1.2,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,348,90,50,34,60,44,70,125,50,70,_.FLUCTUATING,50,!1),new c(e.DRIFBLIM,4,!1,!1,!1,"Blimp Pokémon",i.GHOST,i.FLYING,1.2,15,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,498,150,80,44,90,54,80,60,50,174,_.FLUCTUATING,50,!1),new c(e.BUNEARY,4,!1,!1,!1,"Rabbit Pokémon",i.NORMAL,null,.4,5.5,O.RUN_AWAY,O.KLUTZ,O.LIMBER,350,55,66,44,44,56,85,190,0,70,_.MEDIUM_FAST,50,!1),new c(e.LOPUNNY,4,!1,!1,!1,"Rabbit Pokémon",i.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,!1,null,!0),new p("Mega",oe.MEGA,i.NORMAL,i.FIGHTING,1.3,28.3,O.SCRAPPY,O.SCRAPPY,O.SCRAPPY,580,65,136,94,54,96,135,60,140,168)),new c(e.MISMAGIUS,4,!1,!1,!1,"Magical Pokémon",i.GHOST,null,.9,4.4,O.LEVITATE,O.NONE,O.NONE,495,60,60,60,105,105,105,45,35,173,_.FAST,50,!1),new c(e.HONCHKROW,4,!1,!1,!1,"Big Boss Pokémon",i.DARK,i.FLYING,.9,27.3,O.INSOMNIA,O.SUPER_LUCK,O.MOXIE,505,100,125,52,105,52,71,30,35,177,_.MEDIUM_SLOW,50,!1),new c(e.GLAMEOW,4,!1,!1,!1,"Catty Pokémon",i.NORMAL,null,.5,3.9,O.LIMBER,O.OWN_TEMPO,O.KEEN_EYE,310,49,55,42,42,37,85,190,70,62,_.FAST,25,!1),new c(e.PURUGLY,4,!1,!1,!1,"Tiger Cat Pokémon",i.NORMAL,null,1,43.8,O.THICK_FAT,O.OWN_TEMPO,O.DEFIANT,452,71,82,64,64,59,112,75,70,158,_.FAST,25,!1),new c(e.CHINGLING,4,!1,!1,!1,"Bell Pokémon",i.PSYCHIC,null,.2,.6,O.LEVITATE,O.NONE,O.NONE,285,45,30,50,65,50,45,120,70,57,_.FAST,50,!1),new c(e.STUNKY,4,!1,!1,!1,"Skunk Pokémon",i.POISON,i.DARK,.4,19.2,O.STENCH,O.AFTERMATH,O.KEEN_EYE,329,63,63,47,41,41,74,225,50,66,_.MEDIUM_FAST,50,!1),new c(e.SKUNTANK,4,!1,!1,!1,"Skunk Pokémon",i.POISON,i.DARK,1,38,O.STENCH,O.AFTERMATH,O.KEEN_EYE,479,103,93,67,71,61,84,60,50,168,_.MEDIUM_FAST,50,!1),new c(e.BRONZOR,4,!1,!1,!1,"Bronze Pokémon",i.STEEL,i.PSYCHIC,.5,60.5,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,300,57,24,86,24,86,23,255,50,60,_.MEDIUM_FAST,null,!1),new c(e.BRONZONG,4,!1,!1,!1,"Bronze Bell Pokémon",i.STEEL,i.PSYCHIC,1.3,187,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,500,67,89,116,79,116,33,90,50,175,_.MEDIUM_FAST,null,!1),new c(e.BONSLY,4,!1,!1,!1,"Bonsai Pokémon",i.ROCK,null,.5,15,O.STURDY,O.ROCK_HEAD,O.RATTLED,290,50,80,95,10,45,10,255,50,58,_.MEDIUM_FAST,50,!1),new c(e.MIME_JR,4,!1,!1,!1,"Mime Pokémon",i.PSYCHIC,i.FAIRY,.6,13,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,310,20,25,45,70,90,60,145,50,62,_.MEDIUM_FAST,50,!1),new c(e.HAPPINY,4,!1,!1,!1,"Playhouse Pokémon",i.NORMAL,null,.6,24.4,O.NATURAL_CURE,O.SERENE_GRACE,O.FRIEND_GUARD,220,100,5,5,15,65,30,130,140,110,_.FAST,0,!1),new c(e.CHATOT,4,!1,!1,!1,"Music Note Pokémon",i.NORMAL,i.FLYING,.5,1.9,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,411,76,65,45,92,42,91,30,35,144,_.MEDIUM_SLOW,50,!1),new c(e.SPIRITOMB,4,!1,!1,!1,"Forbidden Pokémon",i.GHOST,i.DARK,1,108,O.PRESSURE,O.NONE,O.INFILTRATOR,485,50,92,108,92,108,35,100,50,170,_.MEDIUM_FAST,50,!1),new c(e.GIBLE,4,!1,!1,!1,"Land Shark Pokémon",i.DRAGON,i.GROUND,.7,20.5,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,300,58,70,45,40,45,42,45,50,60,_.SLOW,50,!0),new c(e.GABITE,4,!1,!1,!1,"Cave Pokémon",i.DRAGON,i.GROUND,1.4,56,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,410,68,90,65,50,55,82,45,50,144,_.SLOW,50,!0),new c(e.GARCHOMP,4,!1,!1,!1,"Mach Pokémon",i.DRAGON,i.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,_.SLOW,50,!0,!0,new p("Normal","",i.DRAGON,i.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,!0,null,!0),new p("Mega",oe.MEGA,i.DRAGON,i.GROUND,1.9,95,O.SAND_FORCE,O.NONE,O.SAND_FORCE,700,108,170,115,120,95,92,45,50,300,!0)),new c(e.MUNCHLAX,4,!1,!1,!1,"Big Eater Pokémon",i.NORMAL,null,.6,105,O.PICKUP,O.THICK_FAT,O.GLUTTONY,390,135,85,40,40,85,5,50,50,78,_.SLOW,87.5,!1),new c(e.RIOLU,4,!1,!1,!1,"Emanation Pokémon",i.FIGHTING,null,.7,20.2,O.STEADFAST,O.INNER_FOCUS,O.PRANKSTER,285,40,70,40,35,40,60,75,50,57,_.MEDIUM_SLOW,87.5,!1),new c(e.LUCARIO,4,!1,!1,!1,"Aura Pokémon",i.FIGHTING,i.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,_.MEDIUM_SLOW,87.5,!1,!0,new p("Normal","",i.FIGHTING,i.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,!1,null,!0),new p("Mega",oe.MEGA,i.FIGHTING,i.STEEL,1.3,57.5,O.ADAPTABILITY,O.ADAPTABILITY,O.ADAPTABILITY,625,70,145,88,140,70,112,45,50,184)),new c(e.HIPPOPOTAS,4,!1,!1,!1,"Hippo Pokémon",i.GROUND,null,.8,49.5,O.SAND_STREAM,O.NONE,O.SAND_FORCE,330,68,72,78,38,42,32,140,50,66,_.SLOW,50,!0),new c(e.HIPPOWDON,4,!1,!1,!1,"Heavyweight Pokémon",i.GROUND,null,2,300,O.SAND_STREAM,O.NONE,O.SAND_FORCE,525,108,112,118,68,72,47,60,50,184,_.SLOW,50,!0),new c(e.SKORUPI,4,!1,!1,!1,"Scorpion Pokémon",i.POISON,i.BUG,.8,12,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,330,40,50,90,30,55,65,120,50,66,_.SLOW,50,!1),new c(e.DRAPION,4,!1,!1,!1,"Ogre Scorpion Pokémon",i.POISON,i.DARK,1.3,61.5,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,500,70,90,110,60,75,95,45,50,175,_.SLOW,50,!1),new c(e.CROAGUNK,4,!1,!1,!1,"Toxic Mouth Pokémon",i.POISON,i.FIGHTING,.7,23,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,300,48,61,40,61,40,50,140,100,60,_.MEDIUM_FAST,50,!0),new c(e.TOXICROAK,4,!1,!1,!1,"Toxic Mouth Pokémon",i.POISON,i.FIGHTING,1.3,44.4,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,490,83,106,65,86,65,85,75,50,172,_.MEDIUM_FAST,50,!0),new c(e.CARNIVINE,4,!1,!1,!1,"Bug Catcher Pokémon",i.GRASS,null,1.4,27,O.LEVITATE,O.NONE,O.NONE,454,74,100,72,90,72,46,200,70,159,_.SLOW,50,!1),new c(e.FINNEON,4,!1,!1,!1,"Wing Fish Pokémon",i.WATER,null,.4,7,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,330,49,49,56,49,61,66,190,70,66,_.ERRATIC,50,!0),new c(e.LUMINEON,4,!1,!1,!1,"Neon Pokémon",i.WATER,null,1.2,24,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,460,69,69,76,69,86,91,75,70,161,_.ERRATIC,50,!0),new c(e.MANTYKE,4,!1,!1,!1,"Kite Pokémon",i.WATER,i.FLYING,1,65,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,345,45,20,50,60,120,50,25,50,69,_.SLOW,50,!1),new c(e.SNOVER,4,!1,!1,!1,"Frost Tree Pokémon",i.GRASS,i.ICE,1,50.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,334,60,62,50,62,60,40,120,50,67,_.SLOW,50,!0),new c(e.ABOMASNOW,4,!1,!1,!1,"Frost Tree Pokémon",i.GRASS,i.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,_.SLOW,50,!0,!0,new p("Normal","",i.GRASS,i.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,!0,null,!0),new p("Mega",oe.MEGA,i.GRASS,i.ICE,2.7,185,O.SNOW_WARNING,O.NONE,O.SNOW_WARNING,594,90,132,105,132,105,30,60,50,173,!0)),new c(e.WEAVILE,4,!1,!1,!1,"Sharp Claw Pokémon",i.DARK,i.ICE,1.1,34,O.PRESSURE,O.NONE,O.PICKPOCKET,510,70,120,65,45,85,125,45,35,179,_.MEDIUM_SLOW,50,!0),new c(e.MAGNEZONE,4,!1,!1,!1,"Magnet Area Pokémon",i.ELECTRIC,i.STEEL,1.2,180,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,535,70,70,115,130,90,60,30,50,268,_.MEDIUM_FAST,null,!1),new c(e.LICKILICKY,4,!1,!1,!1,"Licking Pokémon",i.NORMAL,null,1.7,140,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,515,110,85,95,80,95,50,30,50,180,_.MEDIUM_FAST,50,!1),new c(e.RHYPERIOR,4,!1,!1,!1,"Drill Pokémon",i.GROUND,i.ROCK,2.4,282.8,O.LIGHTNING_ROD,O.SOLID_ROCK,O.RECKLESS,535,115,140,130,55,55,40,30,50,268,_.SLOW,50,!0),new c(e.TANGROWTH,4,!1,!1,!1,"Vine Pokémon",i.GRASS,null,2,128.6,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,535,100,100,125,110,50,50,30,50,187,_.MEDIUM_FAST,50,!0),new c(e.ELECTIVIRE,4,!1,!1,!1,"Thunderbolt Pokémon",i.ELECTRIC,null,1.8,138.6,O.MOTOR_DRIVE,O.NONE,O.VITAL_SPIRIT,540,75,123,67,95,85,95,30,50,270,_.MEDIUM_FAST,75,!1),new c(e.MAGMORTAR,4,!1,!1,!1,"Blast Pokémon",i.FIRE,null,1.6,68,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,540,75,95,67,125,95,83,30,50,270,_.MEDIUM_FAST,75,!1),new c(e.TOGEKISS,4,!1,!1,!1,"Jubilee Pokémon",i.FAIRY,i.FLYING,1.5,38,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,545,85,50,95,120,115,80,30,50,273,_.FAST,87.5,!1),new c(e.YANMEGA,4,!1,!1,!1,"Ogre Darner Pokémon",i.BUG,i.FLYING,1.9,51.5,O.SPEED_BOOST,O.TINTED_LENS,O.FRISK,515,86,76,86,116,56,95,30,70,180,_.MEDIUM_FAST,50,!1),new c(e.LEAFEON,4,!1,!1,!1,"Verdant Pokémon",i.GRASS,null,1,25.5,O.LEAF_GUARD,O.NONE,O.CHLOROPHYLL,525,65,110,130,60,65,95,45,35,184,_.MEDIUM_FAST,87.5,!1),new c(e.GLACEON,4,!1,!1,!1,"Fresh Snow Pokémon",i.ICE,null,.8,25.9,O.SNOW_CLOAK,O.NONE,O.ICE_BODY,525,65,60,110,130,95,65,45,35,184,_.MEDIUM_FAST,87.5,!1),new c(e.GLISCOR,4,!1,!1,!1,"Fang Scorpion Pokémon",i.GROUND,i.FLYING,2,42.5,O.HYPER_CUTTER,O.SAND_VEIL,O.POISON_HEAL,510,75,95,125,45,75,95,30,70,179,_.MEDIUM_SLOW,50,!1),new c(e.MAMOSWINE,4,!1,!1,!1,"Twin Tusk Pokémon",i.ICE,i.GROUND,2.5,291,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,530,110,130,80,70,60,80,50,50,265,_.SLOW,50,!0),new c(e.PORYGON_Z,4,!1,!1,!1,"Virtual Pokémon",i.NORMAL,null,.9,34,O.ADAPTABILITY,O.DOWNLOAD,O.ANALYTIC,535,85,80,70,135,75,90,30,50,268,_.MEDIUM_FAST,null,!1),new c(e.GALLADE,4,!1,!1,!1,"Blade Pokémon",i.PSYCHIC,i.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,_.SLOW,100,!1,!0,new p("Normal","",i.PSYCHIC,i.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,!1,null,!0),new p("Mega",oe.MEGA,i.PSYCHIC,i.FIGHTING,1.6,56.4,O.SHARPNESS,O.SHARPNESS,O.SHARPNESS,618,68,165,95,65,115,110,45,35,259)),new c(e.PROBOPASS,4,!1,!1,!1,"Compass Pokémon",i.ROCK,i.STEEL,1.4,340,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,525,60,55,145,75,150,40,60,70,184,_.MEDIUM_FAST,50,!1),new c(e.DUSKNOIR,4,!1,!1,!1,"Gripper Pokémon",i.GHOST,null,2.2,106.6,O.PRESSURE,O.NONE,O.FRISK,525,45,100,135,65,135,45,45,35,263,_.FAST,50,!1),new c(e.FROSLASS,4,!1,!1,!1,"Snow Land Pokémon",i.ICE,i.GHOST,1.3,26.6,O.SNOW_CLOAK,O.NONE,O.CURSED_BODY,480,70,80,70,80,70,110,75,50,168,_.MEDIUM_FAST,0,!1),new c(e.ROTOM,4,!1,!1,!1,"Plasma Pokémon",i.ELECTRIC,i.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,_.MEDIUM_FAST,null,!1,!1,new p("Normal","",i.ELECTRIC,i.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,!1,null,!0),new p("Heat","heat",i.ELECTRIC,i.FIRE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new p("Wash","wash",i.ELECTRIC,i.WATER,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new p("Frost","frost",i.ELECTRIC,i.ICE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new p("Fan","fan",i.ELECTRIC,i.FLYING,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0),new p("Mow","mow",i.ELECTRIC,i.GRASS,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,154,!1,null,!0)),new c(e.UXIE,4,!0,!1,!1,"Knowledge Pokémon",i.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,75,130,75,130,95,3,140,290,_.SLOW,null,!1),new c(e.MESPRIT,4,!0,!1,!1,"Emotion Pokémon",i.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,80,105,105,105,105,80,3,140,290,_.SLOW,null,!1),new c(e.AZELF,4,!0,!1,!1,"Willpower Pokémon",i.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,125,70,125,70,115,3,140,290,_.SLOW,null,!1),new c(e.DIALGA,4,!1,!0,!1,"Temporal Pokémon",i.STEEL,i.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,_.SLOW,null,!1,!1,new p("Normal","",i.STEEL,i.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,!1,null,!0),new p("Origin Forme","origin",i.STEEL,i.DRAGON,7,848.7,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,100,120,150,120,90,3,0,340)),new c(e.PALKIA,4,!1,!0,!1,"Spatial Pokémon",i.WATER,i.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,_.SLOW,null,!1,!1,new p("Normal","",i.WATER,i.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,!1,null,!0),new p("Origin Forme","origin",i.WATER,i.DRAGON,6.3,659,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,100,100,150,120,120,3,0,340)),new c(e.HEATRAN,4,!0,!1,!1,"Lava Dome Pokémon",i.FIRE,i.STEEL,1.7,430,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,600,91,90,106,130,106,77,3,100,300,_.SLOW,50,!1),new c(e.REGIGIGAS,4,!0,!1,!1,"Colossal Pokémon",i.NORMAL,null,3.7,420,O.SLOW_START,O.NONE,O.NORMALIZE,670,110,160,110,80,110,100,3,0,335,_.SLOW,null,!1),new c(e.GIRATINA,4,!1,!0,!1,"Renegade Pokémon",i.GHOST,i.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,_.SLOW,null,!1,!0,new p("Altered Forme","altered",i.GHOST,i.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,!1,null,!0),new p("Origin Forme","origin",i.GHOST,i.DRAGON,6.9,650,O.LEVITATE,O.NONE,O.NONE,680,150,120,100,120,100,90,3,0,340)),new c(e.CRESSELIA,4,!0,!1,!1,"Lunar Pokémon",i.PSYCHIC,null,1.5,85.6,O.LEVITATE,O.NONE,O.NONE,580,120,70,110,75,120,85,3,100,300,_.SLOW,0,!1),new c(e.PHIONE,4,!1,!1,!0,"Sea Drifter Pokémon",i.WATER,null,.4,3.1,O.HYDRATION,O.NONE,O.NONE,480,80,80,80,80,80,80,30,70,216,_.SLOW,null,!1),new c(e.MANAPHY,4,!1,!1,!0,"Seafaring Pokémon",i.WATER,null,.3,1.4,O.HYDRATION,O.NONE,O.NONE,600,100,100,100,100,100,100,3,70,270,_.SLOW,null,!1),new c(e.DARKRAI,4,!1,!1,!0,"Pitch-Black Pokémon",i.DARK,null,1.5,50.5,O.BAD_DREAMS,O.NONE,O.NONE,600,70,90,90,135,90,125,3,0,270,_.SLOW,null,!1),new c(e.SHAYMIN,4,!1,!1,!0,"Gratitude Pokémon",i.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,270,_.MEDIUM_SLOW,null,!1,!0,new p("Land Forme","land",i.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,270,!1,null,!0),new p("Sky Forme","sky",i.GRASS,i.FLYING,.4,5.2,O.SERENE_GRACE,O.NONE,O.NONE,600,100,103,75,120,75,127,45,100,270)),new c(e.ARCEUS,4,!1,!1,!0,"Alpha Pokémon",i.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324,_.SLOW,null,!1,!0,new p("Normal","normal",i.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324,!1,null,!0),new p("Fighting","fighting",i.FIGHTING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Flying","flying",i.FLYING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Poison","poison",i.POISON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Ground","ground",i.GROUND,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Rock","rock",i.ROCK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Bug","bug",i.BUG,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Ghost","ghost",i.GHOST,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Steel","steel",i.STEEL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Fire","fire",i.FIRE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Water","water",i.WATER,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Grass","grass",i.GRASS,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Electric","electric",i.ELECTRIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Psychic","psychic",i.PSYCHIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Ice","ice",i.ICE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Dragon","dragon",i.DRAGON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Dark","dark",i.DARK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("Fairy","fairy",i.FAIRY,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324),new p("???","unknown",i.UNKNOWN,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,324)),new c(e.VICTINI,5,!1,!1,!0,"Victory Pokémon",i.PSYCHIC,i.FIRE,.4,4,O.VICTORY_STAR,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,_.SLOW,null,!1),new c(e.SNIVY,5,!1,!1,!1,"Grass Snake Pokémon",i.GRASS,null,.6,8.1,O.OVERGROW,O.NONE,O.CONTRARY,308,45,45,55,45,55,63,45,70,62,_.MEDIUM_SLOW,87.5,!1),new c(e.SERVINE,5,!1,!1,!1,"Grass Snake Pokémon",i.GRASS,null,.8,16,O.OVERGROW,O.NONE,O.CONTRARY,413,60,60,75,60,75,83,45,70,145,_.MEDIUM_SLOW,87.5,!1),new c(e.SERPERIOR,5,!1,!1,!1,"Regal Pokémon",i.GRASS,null,3.3,63,O.OVERGROW,O.NONE,O.CONTRARY,528,75,75,95,75,95,113,45,70,238,_.MEDIUM_SLOW,87.5,!1),new c(e.TEPIG,5,!1,!1,!1,"Fire Pig Pokémon",i.FIRE,null,.5,9.9,O.BLAZE,O.NONE,O.THICK_FAT,308,65,63,45,45,45,45,45,70,62,_.MEDIUM_SLOW,87.5,!1),new c(e.PIGNITE,5,!1,!1,!1,"Fire Pig Pokémon",i.FIRE,i.FIGHTING,1,55.5,O.BLAZE,O.NONE,O.THICK_FAT,418,90,93,55,70,55,55,45,70,146,_.MEDIUM_SLOW,87.5,!1),new c(e.EMBOAR,5,!1,!1,!1,"Mega Fire Pig Pokémon",i.FIRE,i.FIGHTING,1.6,150,O.BLAZE,O.NONE,O.RECKLESS,528,110,123,65,100,65,65,45,70,238,_.MEDIUM_SLOW,87.5,!1),new c(e.OSHAWOTT,5,!1,!1,!1,"Sea Otter Pokémon",i.WATER,null,.5,5.9,O.TORRENT,O.NONE,O.SHELL_ARMOR,308,55,55,45,63,45,45,45,70,62,_.MEDIUM_SLOW,87.5,!1),new c(e.DEWOTT,5,!1,!1,!1,"Discipline Pokémon",i.WATER,null,.8,24.5,O.TORRENT,O.NONE,O.SHELL_ARMOR,413,75,75,60,83,60,60,45,70,145,_.MEDIUM_SLOW,87.5,!1),new c(e.SAMUROTT,5,!1,!1,!1,"Formidable Pokémon",i.WATER,null,1.5,94.6,O.TORRENT,O.NONE,O.SHELL_ARMOR,528,95,100,85,108,70,70,45,70,238,_.MEDIUM_SLOW,87.5,!1),new c(e.PATRAT,5,!1,!1,!1,"Scout Pokémon",i.NORMAL,null,.5,11.6,O.RUN_AWAY,O.KEEN_EYE,O.ANALYTIC,255,45,55,39,35,39,42,255,70,51,_.MEDIUM_FAST,50,!1),new c(e.WATCHOG,5,!1,!1,!1,"Lookout Pokémon",i.NORMAL,null,1.1,27,O.ILLUMINATE,O.KEEN_EYE,O.ANALYTIC,420,60,85,69,60,69,77,255,70,147,_.MEDIUM_FAST,50,!1),new c(e.LILLIPUP,5,!1,!1,!1,"Puppy Pokémon",i.NORMAL,null,.4,4.1,O.VITAL_SPIRIT,O.PICKUP,O.RUN_AWAY,275,45,60,45,25,45,55,255,50,55,_.MEDIUM_SLOW,50,!1),new c(e.HERDIER,5,!1,!1,!1,"Loyal Dog Pokémon",i.NORMAL,null,.9,14.7,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,370,65,80,65,35,65,60,120,50,130,_.MEDIUM_SLOW,50,!1),new c(e.STOUTLAND,5,!1,!1,!1,"Big-Hearted Pokémon",i.NORMAL,null,1.2,61,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,500,85,110,90,45,90,80,45,50,250,_.MEDIUM_SLOW,50,!1),new c(e.PURRLOIN,5,!1,!1,!1,"Devious Pokémon",i.DARK,null,.4,10.1,O.LIMBER,O.UNBURDEN,O.PRANKSTER,281,41,50,37,50,37,66,255,50,56,_.MEDIUM_FAST,50,!1),new c(e.LIEPARD,5,!1,!1,!1,"Cruel Pokémon",i.DARK,null,1.1,37.5,O.LIMBER,O.UNBURDEN,O.PRANKSTER,446,64,88,50,88,50,106,90,50,156,_.MEDIUM_FAST,50,!1),new c(e.PANSAGE,5,!1,!1,!1,"Grass Monkey Pokémon",i.GRASS,null,.6,10.5,O.GLUTTONY,O.NONE,O.OVERGROW,316,50,53,48,53,48,64,190,70,63,_.MEDIUM_FAST,87.5,!1),new c(e.SIMISAGE,5,!1,!1,!1,"Thorn Monkey Pokémon",i.GRASS,null,1.1,30.5,O.GLUTTONY,O.NONE,O.OVERGROW,498,75,98,63,98,63,101,75,70,174,_.MEDIUM_FAST,87.5,!1),new c(e.PANSEAR,5,!1,!1,!1,"High Temp Pokémon",i.FIRE,null,.6,11,O.GLUTTONY,O.NONE,O.BLAZE,316,50,53,48,53,48,64,190,70,63,_.MEDIUM_FAST,87.5,!1),new c(e.SIMISEAR,5,!1,!1,!1,"Ember Pokémon",i.FIRE,null,1,28,O.GLUTTONY,O.NONE,O.BLAZE,498,75,98,63,98,63,101,75,70,174,_.MEDIUM_FAST,87.5,!1),new c(e.PANPOUR,5,!1,!1,!1,"Spray Pokémon",i.WATER,null,.6,13.5,O.GLUTTONY,O.NONE,O.TORRENT,316,50,53,48,53,48,64,190,70,63,_.MEDIUM_FAST,87.5,!1),new c(e.SIMIPOUR,5,!1,!1,!1,"Geyser Pokémon",i.WATER,null,1,29,O.GLUTTONY,O.NONE,O.TORRENT,498,75,98,63,98,63,101,75,70,174,_.MEDIUM_FAST,87.5,!1),new c(e.MUNNA,5,!1,!1,!1,"Dream Eater Pokémon",i.PSYCHIC,null,.6,23.3,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,292,76,25,45,67,55,24,190,50,58,_.FAST,50,!1),new c(e.MUSHARNA,5,!1,!1,!1,"Drowsing Pokémon",i.PSYCHIC,null,1.1,60.5,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,487,116,55,85,107,95,29,75,50,170,_.FAST,50,!1),new c(e.PIDOVE,5,!1,!1,!1,"Tiny Pigeon Pokémon",i.NORMAL,i.FLYING,.3,2.1,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,264,50,55,50,36,30,43,255,50,53,_.MEDIUM_SLOW,50,!1),new c(e.TRANQUILL,5,!1,!1,!1,"Wild Pigeon Pokémon",i.NORMAL,i.FLYING,.6,15,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,358,62,77,62,50,42,65,120,50,125,_.MEDIUM_SLOW,50,!1),new c(e.UNFEZANT,5,!1,!1,!1,"Proud Pokémon",i.NORMAL,i.FLYING,1.2,29,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,488,80,115,80,65,55,93,45,50,244,_.MEDIUM_SLOW,50,!0),new c(e.BLITZLE,5,!1,!1,!1,"Electrified Pokémon",i.ELECTRIC,null,.8,29.8,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,295,45,60,32,50,32,76,190,70,59,_.MEDIUM_FAST,50,!1),new c(e.ZEBSTRIKA,5,!1,!1,!1,"Thunderbolt Pokémon",i.ELECTRIC,null,1.6,79.5,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,497,75,100,63,80,63,116,75,70,174,_.MEDIUM_FAST,50,!1),new c(e.ROGGENROLA,5,!1,!1,!1,"Mantle Pokémon",i.ROCK,null,.4,18,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,280,55,75,85,25,25,15,255,50,56,_.MEDIUM_SLOW,50,!1),new c(e.BOLDORE,5,!1,!1,!1,"Ore Pokémon",i.ROCK,null,.9,102,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,390,70,105,105,50,40,20,120,50,137,_.MEDIUM_SLOW,50,!1),new c(e.GIGALITH,5,!1,!1,!1,"Compressed Pokémon",i.ROCK,null,1.7,260,O.STURDY,O.SAND_STREAM,O.SAND_FORCE,515,85,135,130,60,80,25,45,50,258,_.MEDIUM_SLOW,50,!1),new c(e.WOOBAT,5,!1,!1,!1,"Bat Pokémon",i.PSYCHIC,i.FLYING,.4,2.1,O.UNAWARE,O.KLUTZ,O.SIMPLE,323,65,45,43,55,43,72,190,50,65,_.MEDIUM_FAST,50,!1),new c(e.SWOOBAT,5,!1,!1,!1,"Courting Pokémon",i.PSYCHIC,i.FLYING,.9,10.5,O.UNAWARE,O.KLUTZ,O.SIMPLE,425,67,57,55,77,55,114,45,50,149,_.MEDIUM_FAST,50,!1),new c(e.DRILBUR,5,!1,!1,!1,"Mole Pokémon",i.GROUND,null,.3,8.5,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,328,60,85,40,30,45,68,120,50,66,_.MEDIUM_FAST,50,!1),new c(e.EXCADRILL,5,!1,!1,!1,"Subterrene Pokémon",i.GROUND,i.STEEL,.7,40.4,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,508,110,135,60,50,65,88,60,50,178,_.MEDIUM_FAST,50,!1),new c(e.AUDINO,5,!1,!1,!1,"Hearing Pokémon",i.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,_.FAST,50,!1,!0,new p("Normal","",i.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,!1,null,!0),new p("Mega",oe.MEGA,i.NORMAL,i.FAIRY,1.5,32,O.REGENERATOR,O.REGENERATOR,O.REGENERATOR,545,103,60,126,80,126,50,255,50,390)),new c(e.TIMBURR,5,!1,!1,!1,"Muscular Pokémon",i.FIGHTING,null,.6,12.5,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,305,75,80,55,25,35,35,180,70,61,_.MEDIUM_SLOW,75,!1),new c(e.GURDURR,5,!1,!1,!1,"Muscular Pokémon",i.FIGHTING,null,1.2,40,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,405,85,105,85,40,50,40,90,50,142,_.MEDIUM_SLOW,75,!1),new c(e.CONKELDURR,5,!1,!1,!1,"Muscular Pokémon",i.FIGHTING,null,1.4,87,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,505,105,140,95,55,65,45,45,50,253,_.MEDIUM_SLOW,75,!1),new c(e.TYMPOLE,5,!1,!1,!1,"Tadpole Pokémon",i.WATER,null,.5,4.5,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,294,50,50,40,50,40,64,255,50,59,_.MEDIUM_SLOW,50,!1),new c(e.PALPITOAD,5,!1,!1,!1,"Vibration Pokémon",i.WATER,i.GROUND,.8,17,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,384,75,65,55,65,55,69,120,50,134,_.MEDIUM_SLOW,50,!1),new c(e.SEISMITOAD,5,!1,!1,!1,"Vibration Pokémon",i.WATER,i.GROUND,1.5,62,O.SWIFT_SWIM,O.POISON_TOUCH,O.WATER_ABSORB,509,105,95,75,85,75,74,45,50,255,_.MEDIUM_SLOW,50,!1),new c(e.THROH,5,!1,!1,!1,"Judo Pokémon",i.FIGHTING,null,1.3,55.5,O.GUTS,O.INNER_FOCUS,O.MOLD_BREAKER,465,120,100,85,30,85,45,45,50,163,_.MEDIUM_FAST,100,!1),new c(e.SAWK,5,!1,!1,!1,"Karate Pokémon",i.FIGHTING,null,1.4,51,O.STURDY,O.INNER_FOCUS,O.MOLD_BREAKER,465,75,125,75,30,75,85,45,50,163,_.MEDIUM_FAST,100,!1),new c(e.SEWADDLE,5,!1,!1,!1,"Sewing Pokémon",i.BUG,i.GRASS,.3,2.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,310,45,53,70,40,60,42,255,70,62,_.MEDIUM_SLOW,50,!1),new c(e.SWADLOON,5,!1,!1,!1,"Leaf-Wrapped Pokémon",i.BUG,i.GRASS,.5,7.3,O.LEAF_GUARD,O.CHLOROPHYLL,O.OVERCOAT,380,55,63,90,50,80,42,120,70,133,_.MEDIUM_SLOW,50,!1),new c(e.LEAVANNY,5,!1,!1,!1,"Nurturing Pokémon",i.BUG,i.GRASS,1.2,20.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,500,75,103,80,70,80,92,45,70,225,_.MEDIUM_SLOW,50,!1),new c(e.VENIPEDE,5,!1,!1,!1,"Centipede Pokémon",i.BUG,i.POISON,.4,5.3,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,260,30,45,59,30,39,57,255,50,52,_.MEDIUM_SLOW,50,!1),new c(e.WHIRLIPEDE,5,!1,!1,!1,"Curlipede Pokémon",i.BUG,i.POISON,1.2,58.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,360,40,55,99,40,79,47,120,50,126,_.MEDIUM_SLOW,50,!1),new c(e.SCOLIPEDE,5,!1,!1,!1,"Megapede Pokémon",i.BUG,i.POISON,2.5,200.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,485,60,100,89,55,69,112,45,50,243,_.MEDIUM_SLOW,50,!1),new c(e.COTTONEE,5,!1,!1,!1,"Cotton Puff Pokémon",i.GRASS,i.FAIRY,.3,.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,280,40,27,60,37,50,66,190,50,56,_.MEDIUM_FAST,50,!1),new c(e.WHIMSICOTT,5,!1,!1,!1,"Windveiled Pokémon",i.GRASS,i.FAIRY,.7,6.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,480,60,67,85,77,75,116,75,50,168,_.MEDIUM_FAST,50,!1),new c(e.PETILIL,5,!1,!1,!1,"Bulb Pokémon",i.GRASS,null,.5,6.6,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,280,45,35,50,70,50,30,190,50,56,_.MEDIUM_FAST,0,!1),new c(e.LILLIGANT,5,!1,!1,!1,"Flowering Pokémon",i.GRASS,null,1.1,16.3,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,480,70,60,75,110,75,90,75,50,168,_.MEDIUM_FAST,0,!1),new c(e.BASCULIN,5,!1,!1,!1,"Hostile Pokémon",i.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,_.MEDIUM_FAST,50,!1,!1,new p("Red-Striped Form","red-striped",i.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new p("Blue-Striped Form","blue-striped",i.WATER,null,1,18,O.ROCK_HEAD,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new p("White-Striped Form","white-striped",i.WATER,null,1,18,O.RATTLED,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0)),new c(e.SANDILE,5,!1,!1,!1,"Desert Croc Pokémon",i.GROUND,i.DARK,.7,15.2,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,292,50,72,35,35,35,65,180,50,58,_.MEDIUM_SLOW,50,!1),new c(e.KROKOROK,5,!1,!1,!1,"Desert Croc Pokémon",i.GROUND,i.DARK,1,33.4,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,351,60,82,45,45,45,74,90,50,123,_.MEDIUM_SLOW,50,!1),new c(e.KROOKODILE,5,!1,!1,!1,"Intimidation Pokémon",i.GROUND,i.DARK,1.5,96.3,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,519,95,117,80,65,70,92,45,50,260,_.MEDIUM_SLOW,50,!1),new c(e.DARUMAKA,5,!1,!1,!1,"Zen Charm Pokémon",i.FIRE,null,.6,37.5,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,_.MEDIUM_SLOW,50,!1),new c(e.DARMANITAN,5,!1,!1,!1,"Blazing Pokémon",i.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,_.MEDIUM_SLOW,50,!1,!0,new p("Standard Mode","",i.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new p("Zen Mode","zen",i.FIRE,i.PSYCHIC,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,540,105,30,105,140,105,55,60,50,168)),new c(e.MARACTUS,5,!1,!1,!1,"Cactus Pokémon",i.GRASS,null,1,28,O.WATER_ABSORB,O.CHLOROPHYLL,O.STORM_DRAIN,461,75,86,67,106,67,60,255,50,161,_.MEDIUM_FAST,50,!1),new c(e.DWEBBLE,5,!1,!1,!1,"Rock Inn Pokémon",i.BUG,i.ROCK,.3,14.5,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,325,50,65,85,35,35,55,190,50,65,_.MEDIUM_FAST,50,!1),new c(e.CRUSTLE,5,!1,!1,!1,"Stone Home Pokémon",i.BUG,i.ROCK,1.4,200,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,485,70,105,125,65,75,45,75,50,170,_.MEDIUM_FAST,50,!1),new c(e.SCRAGGY,5,!1,!1,!1,"Shedding Pokémon",i.DARK,i.FIGHTING,.6,11.8,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,348,50,75,70,35,70,48,180,35,70,_.MEDIUM_FAST,50,!1),new c(e.SCRAFTY,5,!1,!1,!1,"Hoodlum Pokémon",i.DARK,i.FIGHTING,1.1,30,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,488,65,90,115,45,115,58,90,50,171,_.MEDIUM_FAST,50,!1),new c(e.SIGILYPH,5,!1,!1,!1,"Avianoid Pokémon",i.PSYCHIC,i.FLYING,1.4,14,O.WONDER_SKIN,O.MAGIC_GUARD,O.TINTED_LENS,490,72,58,80,103,80,97,45,50,172,_.MEDIUM_FAST,50,!1),new c(e.YAMASK,5,!1,!1,!1,"Spirit Pokémon",i.GHOST,null,.5,1.5,O.MUMMY,O.NONE,O.NONE,303,38,30,85,55,65,30,190,50,61,_.MEDIUM_FAST,50,!1),new c(e.COFAGRIGUS,5,!1,!1,!1,"Coffin Pokémon",i.GHOST,null,1.7,76.5,O.MUMMY,O.NONE,O.NONE,483,58,50,145,95,105,30,90,50,169,_.MEDIUM_FAST,50,!1),new c(e.TIRTOUGA,5,!1,!1,!1,"Prototurtle Pokémon",i.WATER,i.ROCK,.7,16.5,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,355,54,78,103,53,45,22,45,50,71,_.MEDIUM_FAST,87.5,!1),new c(e.CARRACOSTA,5,!1,!1,!1,"Prototurtle Pokémon",i.WATER,i.ROCK,1.2,81,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,495,74,108,133,83,65,32,45,50,173,_.MEDIUM_FAST,87.5,!1),new c(e.ARCHEN,5,!1,!1,!1,"First Bird Pokémon",i.ROCK,i.FLYING,.5,9.5,O.DEFEATIST,O.NONE,O.EMERGENCY_EXIT,401,55,112,45,74,45,70,45,50,71,_.MEDIUM_FAST,87.5,!1),new c(e.ARCHEOPS,5,!1,!1,!1,"First Bird Pokémon",i.ROCK,i.FLYING,1.4,32,O.DEFEATIST,O.NONE,O.EMERGENCY_EXIT,567,75,140,65,112,65,110,45,50,177,_.MEDIUM_FAST,87.5,!1),new c(e.TRUBBISH,5,!1,!1,!1,"Trash Bag Pokémon",i.POISON,null,.6,31,O.STENCH,O.STICKY_HOLD,O.AFTERMATH,329,50,50,62,40,62,65,190,50,66,_.MEDIUM_FAST,50,!1),new c(e.GARBODOR,5,!1,!1,!1,"Trash Heap Pokémon",i.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.POISON,i.STEEL,21,999.9,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,574,135,125,102,57,102,53,60,50,166)),new c(e.ZORUA,5,!1,!1,!1,"Tricky Fox Pokémon",i.DARK,null,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,40,65,40,80,40,65,75,50,66,_.MEDIUM_SLOW,87.5,!1),new c(e.ZOROARK,5,!1,!1,!1,"Illusion Fox Pokémon",i.DARK,null,1.6,81.1,O.ILLUSION,O.NONE,O.NONE,510,60,105,60,120,60,105,45,50,179,_.MEDIUM_SLOW,87.5,!1),new c(e.MINCCINO,5,!1,!1,!1,"Chinchilla Pokémon",i.NORMAL,null,.4,5.8,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,300,55,50,40,40,40,75,255,50,60,_.FAST,25,!1),new c(e.CINCCINO,5,!1,!1,!1,"Scarf Pokémon",i.NORMAL,null,.5,7.5,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,470,75,95,60,65,60,115,60,50,165,_.FAST,25,!1),new c(e.GOTHITA,5,!1,!1,!1,"Fixation Pokémon",i.PSYCHIC,null,.4,5.8,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,290,45,30,50,55,65,45,200,50,58,_.MEDIUM_SLOW,25,!1),new c(e.GOTHORITA,5,!1,!1,!1,"Manipulate Pokémon",i.PSYCHIC,null,.7,18,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,390,60,45,70,75,85,55,100,50,137,_.MEDIUM_SLOW,25,!1),new c(e.GOTHITELLE,5,!1,!1,!1,"Astral Body Pokémon",i.PSYCHIC,null,1.5,44,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,490,70,55,95,95,110,65,50,50,245,_.MEDIUM_SLOW,25,!1),new c(e.SOLOSIS,5,!1,!1,!1,"Cell Pokémon",i.PSYCHIC,null,.3,1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,290,45,30,40,105,50,20,200,50,58,_.MEDIUM_SLOW,50,!1),new c(e.DUOSION,5,!1,!1,!1,"Mitosis Pokémon",i.PSYCHIC,null,.6,8,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,370,65,40,50,125,60,30,100,50,130,_.MEDIUM_SLOW,50,!1),new c(e.REUNICLUS,5,!1,!1,!1,"Multiplying Pokémon",i.PSYCHIC,null,1,20.1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,490,110,65,75,125,85,30,50,50,245,_.MEDIUM_SLOW,50,!1),new c(e.DUCKLETT,5,!1,!1,!1,"Water Bird Pokémon",i.WATER,i.FLYING,.5,5.5,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,305,62,44,50,44,50,55,190,70,61,_.MEDIUM_FAST,50,!1),new c(e.SWANNA,5,!1,!1,!1,"White Bird Pokémon",i.WATER,i.FLYING,1.3,24.2,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,473,75,87,63,87,63,98,45,70,166,_.MEDIUM_FAST,50,!1),new c(e.VANILLITE,5,!1,!1,!1,"Fresh Snow Pokémon",i.ICE,null,.4,5.7,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,305,36,50,50,65,60,44,255,50,61,_.SLOW,50,!1),new c(e.VANILLISH,5,!1,!1,!1,"Icy Snow Pokémon",i.ICE,null,1.1,41,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,395,51,65,65,80,75,59,120,50,138,_.SLOW,50,!1),new c(e.VANILLUXE,5,!1,!1,!1,"Snowstorm Pokémon",i.ICE,null,1.3,57.5,O.ICE_BODY,O.SNOW_WARNING,O.WEAK_ARMOR,535,71,95,85,110,95,79,45,50,268,_.SLOW,50,!1),new c(e.DEERLING,5,!1,!1,!1,"Season Pokémon",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,_.MEDIUM_FAST,50,!1,!0,new p("Spring Form","spring",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new p("Summer Form","summer",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new p("Autumn Form","autumn",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new p("Winter Form","winter",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0)),new c(e.SAWSBUCK,5,!1,!1,!1,"Season Pokémon",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,_.MEDIUM_FAST,50,!1,!0,new p("Spring Form","spring",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new p("Summer Form","summer",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new p("Autumn Form","autumn",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new p("Winter Form","winter",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0)),new c(e.EMOLGA,5,!1,!1,!1,"Sky Squirrel Pokémon",i.ELECTRIC,i.FLYING,.4,5,O.STATIC,O.NONE,O.MOTOR_DRIVE,428,55,75,60,75,60,103,200,50,150,_.MEDIUM_FAST,50,!1),new c(e.KARRABLAST,5,!1,!1,!1,"Clamping Pokémon",i.BUG,null,.5,5.9,O.SWARM,O.SHED_SKIN,O.NO_GUARD,315,50,75,45,40,45,60,200,50,63,_.MEDIUM_FAST,50,!1),new c(e.ESCAVALIER,5,!1,!1,!1,"Cavalry Pokémon",i.BUG,i.STEEL,1,33,O.SWARM,O.SHELL_ARMOR,O.OVERCOAT,495,70,135,105,60,105,20,75,50,173,_.MEDIUM_FAST,50,!1),new c(e.FOONGUS,5,!1,!1,!1,"Mushroom Pokémon",i.GRASS,i.POISON,.2,1,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,294,69,55,45,55,55,15,190,50,59,_.MEDIUM_FAST,50,!1),new c(e.AMOONGUSS,5,!1,!1,!1,"Mushroom Pokémon",i.GRASS,i.POISON,.6,10.5,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,464,114,85,70,85,80,30,75,50,162,_.MEDIUM_FAST,50,!1),new c(e.FRILLISH,5,!1,!1,!1,"Floating Pokémon",i.WATER,i.GHOST,1.2,33,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,335,55,40,50,65,85,40,190,50,67,_.MEDIUM_FAST,50,!0),new c(e.JELLICENT,5,!1,!1,!1,"Floating Pokémon",i.WATER,i.GHOST,2.2,135,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,480,100,60,70,85,105,60,60,50,168,_.MEDIUM_FAST,50,!0),new c(e.ALOMOMOLA,5,!1,!1,!1,"Caring Pokémon",i.WATER,null,1.2,31.6,O.HEALER,O.HYDRATION,O.REGENERATOR,470,165,75,80,40,45,65,75,70,165,_.FAST,50,!1),new c(e.JOLTIK,5,!1,!1,!1,"Attaching Pokémon",i.BUG,i.ELECTRIC,.1,.6,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,319,50,47,50,57,50,65,190,50,64,_.MEDIUM_FAST,50,!1),new c(e.GALVANTULA,5,!1,!1,!1,"EleSpider Pokémon",i.BUG,i.ELECTRIC,.8,14.3,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,472,70,77,60,97,60,108,75,50,165,_.MEDIUM_FAST,50,!1),new c(e.FERROSEED,5,!1,!1,!1,"Thorn Seed Pokémon",i.GRASS,i.STEEL,.6,18.8,O.IRON_BARBS,O.NONE,O.ANTICIPATION,305,44,50,91,24,86,10,255,50,61,_.MEDIUM_FAST,50,!1),new c(e.FERROTHORN,5,!1,!1,!1,"Thorn Pod Pokémon",i.GRASS,i.STEEL,1,110,O.IRON_BARBS,O.NONE,O.ANTICIPATION,489,74,94,131,54,116,20,90,50,171,_.MEDIUM_FAST,50,!1),new c(e.KLINK,5,!1,!1,!1,"Gear Pokémon",i.STEEL,null,.3,21,O.PLUS,O.MINUS,O.CLEAR_BODY,300,40,55,70,45,60,30,130,50,60,_.MEDIUM_SLOW,null,!1),new c(e.KLANG,5,!1,!1,!1,"Gear Pokémon",i.STEEL,null,.6,51,O.PLUS,O.MINUS,O.CLEAR_BODY,440,60,80,95,70,85,50,60,50,154,_.MEDIUM_SLOW,null,!1),new c(e.KLINKLANG,5,!1,!1,!1,"Gear Pokémon",i.STEEL,null,.6,81,O.PLUS,O.MINUS,O.CLEAR_BODY,520,60,100,115,70,85,90,30,50,260,_.MEDIUM_SLOW,null,!1),new c(e.TYNAMO,5,!1,!1,!1,"EleFish Pokémon",i.ELECTRIC,null,.2,.3,O.LEVITATE,O.NONE,O.NONE,275,35,55,40,45,40,60,190,70,55,_.SLOW,50,!1),new c(e.EELEKTRIK,5,!1,!1,!1,"EleFish Pokémon",i.ELECTRIC,null,1.2,22,O.LEVITATE,O.NONE,O.NONE,405,65,85,70,75,70,40,60,70,142,_.SLOW,50,!1),new c(e.EELEKTROSS,5,!1,!1,!1,"EleFish Pokémon",i.ELECTRIC,null,2.1,80.5,O.LEVITATE,O.NONE,O.NONE,515,85,115,80,105,80,50,30,70,232,_.SLOW,50,!1),new c(e.ELGYEM,5,!1,!1,!1,"Cerebral Pokémon",i.PSYCHIC,null,.5,9,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,335,55,55,55,85,55,30,255,50,67,_.MEDIUM_FAST,50,!1),new c(e.BEHEEYEM,5,!1,!1,!1,"Cerebral Pokémon",i.PSYCHIC,null,1,34.5,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,485,75,75,75,125,95,40,90,50,170,_.MEDIUM_FAST,50,!1),new c(e.LITWICK,5,!1,!1,!1,"Candle Pokémon",i.GHOST,i.FIRE,.3,3.1,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,275,50,30,55,65,55,20,190,50,55,_.MEDIUM_SLOW,50,!1),new c(e.LAMPENT,5,!1,!1,!1,"Lamp Pokémon",i.GHOST,i.FIRE,.6,13,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,370,60,40,60,95,60,55,90,50,130,_.MEDIUM_SLOW,50,!1),new c(e.CHANDELURE,5,!1,!1,!1,"Luring Pokémon",i.GHOST,i.FIRE,1,34.3,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,520,60,55,90,145,90,80,45,50,260,_.MEDIUM_SLOW,50,!1),new c(e.AXEW,5,!1,!1,!1,"Tusk Pokémon",i.DRAGON,null,.6,18,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,320,46,87,60,30,40,57,75,35,64,_.SLOW,50,!1),new c(e.FRAXURE,5,!1,!1,!1,"Axe Jaw Pokémon",i.DRAGON,null,1,36,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,410,66,117,70,40,50,67,60,35,144,_.SLOW,50,!1),new c(e.HAXORUS,5,!1,!1,!1,"Axe Jaw Pokémon",i.DRAGON,null,1.8,105.5,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,540,76,147,90,60,70,97,45,35,270,_.SLOW,50,!1),new c(e.CUBCHOO,5,!1,!1,!1,"Chill Pokémon",i.ICE,null,.5,8.5,O.SNOW_CLOAK,O.SLUSH_RUSH,O.RATTLED,305,55,70,40,60,40,40,120,50,61,_.MEDIUM_FAST,50,!1),new c(e.BEARTIC,5,!1,!1,!1,"Freezing Pokémon",i.ICE,null,2.6,260,O.SNOW_CLOAK,O.SLUSH_RUSH,O.SWIFT_SWIM,505,95,130,80,70,80,50,60,50,177,_.MEDIUM_FAST,50,!1),new c(e.CRYOGONAL,5,!1,!1,!1,"Crystallizing Pokémon",i.ICE,null,1.1,148,O.LEVITATE,O.NONE,O.NONE,515,80,50,50,95,135,105,25,50,180,_.MEDIUM_FAST,null,!1),new c(e.SHELMET,5,!1,!1,!1,"Snail Pokémon",i.BUG,null,.4,7.7,O.HYDRATION,O.SHELL_ARMOR,O.OVERCOAT,305,50,40,85,40,65,25,200,50,61,_.MEDIUM_FAST,50,!1),new c(e.ACCELGOR,5,!1,!1,!1,"Shell Out Pokémon",i.BUG,null,.8,25.3,O.HYDRATION,O.STICKY_HOLD,O.UNBURDEN,495,80,70,40,100,60,145,75,50,173,_.MEDIUM_FAST,50,!1),new c(e.STUNFISK,5,!1,!1,!1,"Trap Pokémon",i.GROUND,i.ELECTRIC,.7,11,O.STATIC,O.LIMBER,O.SAND_VEIL,471,109,66,84,81,99,32,75,70,165,_.MEDIUM_FAST,50,!1),new c(e.MIENFOO,5,!1,!1,!1,"Martial Arts Pokémon",i.FIGHTING,null,.9,20,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,350,45,85,50,55,50,65,180,50,70,_.MEDIUM_SLOW,50,!1),new c(e.MIENSHAO,5,!1,!1,!1,"Martial Arts Pokémon",i.FIGHTING,null,1.4,35.5,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,510,65,125,60,95,60,105,45,50,179,_.MEDIUM_SLOW,50,!1),new c(e.DRUDDIGON,5,!1,!1,!1,"Cave Pokémon",i.DRAGON,null,1.6,139,O.ROUGH_SKIN,O.SHEER_FORCE,O.MOLD_BREAKER,485,77,120,90,60,90,48,45,50,170,_.MEDIUM_FAST,50,!1),new c(e.GOLETT,5,!1,!1,!1,"Automaton Pokémon",i.GROUND,i.GHOST,1,92,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,303,59,74,50,35,50,35,190,50,61,_.MEDIUM_FAST,null,!1),new c(e.GOLURK,5,!1,!1,!1,"Automaton Pokémon",i.GROUND,i.GHOST,2.8,330,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,483,89,124,80,55,80,55,90,50,169,_.MEDIUM_FAST,null,!1),new c(e.PAWNIARD,5,!1,!1,!1,"Sharp Blade Pokémon",i.DARK,i.STEEL,.5,10.2,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,340,45,85,70,40,40,60,120,35,68,_.MEDIUM_FAST,50,!1),new c(e.BISHARP,5,!1,!1,!1,"Sword Blade Pokémon",i.DARK,i.STEEL,1.6,70,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,490,65,125,100,60,70,70,45,35,172,_.MEDIUM_FAST,50,!1),new c(e.BOUFFALANT,5,!1,!1,!1,"Bash Buffalo Pokémon",i.NORMAL,null,1.6,94.6,O.RECKLESS,O.SAP_SIPPER,O.SOUNDPROOF,490,95,110,95,40,95,55,45,50,172,_.MEDIUM_FAST,50,!1),new c(e.RUFFLET,5,!1,!1,!1,"Eaglet Pokémon",i.NORMAL,i.FLYING,.5,10.5,O.KEEN_EYE,O.SHEER_FORCE,O.HUSTLE,350,70,83,50,37,50,60,190,50,70,_.SLOW,100,!1),new c(e.BRAVIARY,5,!1,!1,!1,"Valiant Pokémon",i.NORMAL,i.FLYING,1.5,41,O.KEEN_EYE,O.SHEER_FORCE,O.DEFIANT,510,100,123,75,57,75,80,60,50,179,_.SLOW,100,!1),new c(e.VULLABY,5,!1,!1,!1,"Diapered Pokémon",i.DARK,i.FLYING,.5,9,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,370,70,55,75,45,65,60,190,35,74,_.SLOW,0,!1),new c(e.MANDIBUZZ,5,!1,!1,!1,"Bone Vulture Pokémon",i.DARK,i.FLYING,1.2,39.5,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,510,110,65,105,55,95,80,60,35,179,_.SLOW,0,!1),new c(e.HEATMOR,5,!1,!1,!1,"Anteater Pokémon",i.FIRE,null,1.4,58,O.GLUTTONY,O.FLASH_FIRE,O.WHITE_SMOKE,484,85,97,66,105,66,65,90,50,169,_.MEDIUM_FAST,50,!1),new c(e.DURANT,5,!1,!1,!1,"Iron Ant Pokémon",i.BUG,i.STEEL,.3,33,O.SWARM,O.HUSTLE,O.TRUANT,484,58,109,112,48,48,109,90,50,169,_.MEDIUM_FAST,50,!1),new c(e.DEINO,5,!1,!1,!1,"Irate Pokémon",i.DARK,i.DRAGON,.8,17.3,O.HUSTLE,O.NONE,O.NONE,300,52,65,50,45,50,38,45,35,60,_.SLOW,50,!1),new c(e.ZWEILOUS,5,!1,!1,!1,"Hostile Pokémon",i.DARK,i.DRAGON,1.4,50,O.HUSTLE,O.NONE,O.NONE,420,72,85,70,65,70,58,45,35,147,_.SLOW,50,!1),new c(e.HYDREIGON,5,!1,!1,!1,"Brutal Pokémon",i.DARK,i.DRAGON,1.8,160,O.LEVITATE,O.NONE,O.NONE,600,92,105,90,125,90,98,45,35,300,_.SLOW,50,!1),new c(e.LARVESTA,5,!1,!1,!1,"Torch Pokémon",i.BUG,i.FIRE,1.1,28.8,O.FLAME_BODY,O.NONE,O.SWARM,360,55,85,55,50,55,60,45,50,72,_.SLOW,50,!1),new c(e.VOLCARONA,5,!1,!1,!1,"Sun Pokémon",i.BUG,i.FIRE,1.6,46,O.FLAME_BODY,O.NONE,O.SWARM,550,85,60,65,135,105,100,15,50,275,_.SLOW,50,!1),new c(e.COBALION,5,!0,!1,!1,"Iron Will Pokémon",i.STEEL,i.FIGHTING,2.1,250,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,129,90,72,108,3,35,290,_.SLOW,null,!1),new c(e.TERRAKION,5,!0,!1,!1,"Cavern Pokémon",i.ROCK,i.FIGHTING,1.9,260,O.JUSTIFIED,O.NONE,O.NONE,580,91,129,90,72,90,108,3,35,290,_.SLOW,null,!1),new c(e.VIRIZION,5,!0,!1,!1,"Grassland Pokémon",i.GRASS,i.FIGHTING,2,200,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,72,90,129,108,3,35,290,_.SLOW,null,!1),new c(e.TORNADUS,5,!0,!1,!1,"Cyclone Pokémon",i.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,_.SLOW,100,!1,!0,new p("Incarnate Forme","incarnate",i.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new p("Therian Forme","therian",i.FLYING,null,1.4,63,O.REGENERATOR,O.NONE,O.REGENERATOR,580,79,100,80,110,90,121,3,90,290)),new c(e.THUNDURUS,5,!0,!1,!1,"Bolt Strike Pokémon",i.ELECTRIC,i.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,_.SLOW,100,!1,!0,new p("Incarnate Forme","incarnate",i.ELECTRIC,i.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new p("Therian Forme","therian",i.ELECTRIC,i.FLYING,3,61,O.VOLT_ABSORB,O.NONE,O.VOLT_ABSORB,580,79,105,70,145,80,101,3,90,290)),new c(e.RESHIRAM,5,!1,!0,!1,"Vast White Pokémon",i.DRAGON,i.FIRE,3.2,330,O.TURBOBLAZE,O.NONE,O.NONE,680,100,120,100,150,120,90,3,0,340,_.SLOW,null,!1),new c(e.ZEKROM,5,!1,!0,!1,"Deep Black Pokémon",i.DRAGON,i.ELECTRIC,2.9,345,O.TERAVOLT,O.NONE,O.NONE,680,100,150,120,120,100,90,3,0,340,_.SLOW,null,!1),new c(e.LANDORUS,5,!0,!1,!1,"Abundance Pokémon",i.GROUND,i.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,_.SLOW,100,!1,!0,new p("Incarnate Forme","incarnate",i.GROUND,i.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,!1,null,!0),new p("Therian Forme","therian",i.GROUND,i.FLYING,1.3,68,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,89,145,90,105,80,91,3,90,300)),new c(e.KYUREM,5,!1,!0,!1,"Boundary Pokémon",i.DRAGON,i.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,_.SLOW,null,!1,!0,new p("Normal","",i.DRAGON,i.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,!1,null,!0),new p("Black","black",i.DRAGON,i.ICE,3.3,325,O.TERAVOLT,O.NONE,O.NONE,700,125,170,100,120,90,95,3,0,330),new p("White","white",i.DRAGON,i.ICE,3.6,325,O.TURBOBLAZE,O.NONE,O.NONE,700,125,120,90,170,100,95,3,0,330)),new c(e.KELDEO,5,!1,!1,!0,"Colt Pokémon",i.WATER,i.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,_.SLOW,null,!1,!0,new p("Ordinary Form","ordinary",i.WATER,i.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,!1,null,!0),new p("Resolute","resolute",i.WATER,i.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290)),new c(e.MELOETTA,5,!1,!1,!0,"Melody Pokémon",i.NORMAL,i.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,270,_.SLOW,null,!1,!0,new p("Aria Forme","aria",i.NORMAL,i.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,270,!1,null,!0),new p("Pirouette Forme","pirouette",i.NORMAL,i.FIGHTING,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,128,90,77,77,128,3,100,270,!1,null,!0)),new c(e.GENESECT,5,!1,!1,!0,"Paleozoic Pokémon",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,_.SLOW,null,!1,!0,new p("Normal","",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,!1,null,!0),new p("Shock Drive","shock",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new p("Burn Drive","burn",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new p("Chill Drive","chill",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new p("Douse Drive","douse",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300)),new c(e.CHESPIN,6,!1,!1,!1,"Spiny Nut Pokémon",i.GRASS,null,.4,9,O.OVERGROW,O.NONE,O.BULLETPROOF,313,56,61,65,48,45,38,45,70,63,_.MEDIUM_SLOW,87.5,!1),new c(e.QUILLADIN,6,!1,!1,!1,"Spiny Armor Pokémon",i.GRASS,null,.7,29,O.OVERGROW,O.NONE,O.BULLETPROOF,405,61,78,95,56,58,57,45,70,142,_.MEDIUM_SLOW,87.5,!1),new c(e.CHESNAUGHT,6,!1,!1,!1,"Spiny Armor Pokémon",i.GRASS,i.FIGHTING,1.6,90,O.OVERGROW,O.NONE,O.BULLETPROOF,530,88,107,122,74,75,64,45,70,239,_.MEDIUM_SLOW,87.5,!1),new c(e.FENNEKIN,6,!1,!1,!1,"Fox Pokémon",i.FIRE,null,.4,9.4,O.BLAZE,O.NONE,O.MAGICIAN,307,40,45,40,62,60,60,45,70,61,_.MEDIUM_SLOW,87.5,!1),new c(e.BRAIXEN,6,!1,!1,!1,"Fox Pokémon",i.FIRE,null,1,14.5,O.BLAZE,O.NONE,O.MAGICIAN,409,59,59,58,90,70,73,45,70,143,_.MEDIUM_SLOW,87.5,!1),new c(e.DELPHOX,6,!1,!1,!1,"Fox Pokémon",i.FIRE,i.PSYCHIC,1.5,39,O.BLAZE,O.NONE,O.MAGICIAN,534,75,69,72,114,100,104,45,70,240,_.MEDIUM_SLOW,87.5,!1),new c(e.FROAKIE,6,!1,!1,!1,"Bubble Frog Pokémon",i.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,_.MEDIUM_SLOW,87.5,!1,!1,new p("Normal","",i.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,null,!0),new p("Battle Bond","battle-bond",i.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,"",!0)),new c(e.FROGADIER,6,!1,!1,!1,"Bubble Frog Pokémon",i.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,_.MEDIUM_SLOW,87.5,!1,!1,new p("Normal","",i.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,null,!0),new p("Battle Bond","battle-bond",i.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,"",!0)),new c(e.GRENINJA,6,!1,!1,!1,"Ninja Pokémon",i.WATER,i.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,239,_.MEDIUM_SLOW,87.5,!1,!1,new p("Normal","",i.WATER,i.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,239,!1,null,!0),new p("Battle Bond","battle-bond",i.WATER,i.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,530,72,95,67,103,71,122,45,70,239,!1,"",!0),new p("Ash","ash",i.WATER,i.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,640,72,145,67,153,71,132,45,70,239)),new c(e.BUNNELBY,6,!1,!1,!1,"Digging Pokémon",i.NORMAL,null,.4,5,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,237,38,36,38,32,36,57,255,50,47,_.MEDIUM_FAST,50,!1),new c(e.DIGGERSBY,6,!1,!1,!1,"Digging Pokémon",i.NORMAL,i.GROUND,1,42.4,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,423,85,56,77,50,77,78,127,50,148,_.MEDIUM_FAST,50,!1),new c(e.FLETCHLING,6,!1,!1,!1,"Tiny Robin Pokémon",i.NORMAL,i.FLYING,.3,1.7,O.BIG_PECKS,O.NONE,O.GALE_WINGS,278,45,50,43,40,38,62,255,50,56,_.MEDIUM_SLOW,50,!1),new c(e.FLETCHINDER,6,!1,!1,!1,"Ember Pokémon",i.FIRE,i.FLYING,.7,16,O.FLAME_BODY,O.NONE,O.GALE_WINGS,382,62,73,55,56,52,84,120,50,134,_.MEDIUM_SLOW,50,!1),new c(e.TALONFLAME,6,!1,!1,!1,"Scorching Pokémon",i.FIRE,i.FLYING,1.2,24.5,O.FLAME_BODY,O.NONE,O.GALE_WINGS,499,78,81,71,74,69,126,45,50,175,_.MEDIUM_SLOW,50,!1),new c(e.SCATTERBUG,6,!1,!1,!1,"Scatterdust Pokémon",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,_.MEDIUM_FAST,50,!1,!1,new p("Meadow Pattern","meadow",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Icy Snow Pattern","icy-snow",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Polar Pattern","polar",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Tundra Pattern","tundra",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Continental Pattern","continental",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Garden Pattern","garden",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Elegant Pattern","elegant",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Modern Pattern","modern",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Marine Pattern","marine",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Archipelago Pattern","archipelago",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("High Plains Pattern","high-plains",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Sandstorm Pattern","sandstorm",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("River Pattern","river",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Monsoon Pattern","monsoon",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Savanna Pattern","savanna",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Sun Pattern","sun",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Ocean Pattern","ocean",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Jungle Pattern","jungle",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Fancy Pattern","fancy",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new p("Poké Ball Pattern","poke-ball",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0)),new c(e.SPEWPA,6,!1,!1,!1,"Scatterdust Pokémon",i.BUG,null,.3,8.4,O.SHED_SKIN,O.SHED_SKIN,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,_.MEDIUM_FAST,50,!1,!1,new p("Meadow Pattern","meadow",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Icy Snow Pattern","icy-snow",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Polar Pattern","polar",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Tundra Pattern","tundra",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Continental Pattern","continental",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Garden Pattern","garden",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Elegant Pattern","elegant",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Modern Pattern","modern",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Marine Pattern","marine",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Archipelago Pattern","archipelago",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("High Plains Pattern","high-plains",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Sandstorm Pattern","sandstorm",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("River Pattern","river",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Monsoon Pattern","monsoon",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Savanna Pattern","savanna",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Sun Pattern","sun",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Ocean Pattern","ocean",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Jungle Pattern","jungle",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Fancy Pattern","fancy",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new p("Poké Ball Pattern","poke-ball",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0)),new c(e.VIVILLON,6,!1,!1,!1,"Scale Pokémon",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,_.MEDIUM_FAST,50,!1,!1,new p("Meadow Pattern","meadow",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Icy Snow Pattern","icy-snow",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Polar Pattern","polar",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Tundra Pattern","tundra",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Continental Pattern","continental",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Garden Pattern","garden",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Elegant Pattern","elegant",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Modern Pattern","modern",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Marine Pattern","marine",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Archipelago Pattern","archipelago",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("High Plains Pattern","high-plains",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Sandstorm Pattern","sandstorm",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("River Pattern","river",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Monsoon Pattern","monsoon",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Savanna Pattern","savanna",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Sun Pattern","sun",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Ocean Pattern","ocean",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Jungle Pattern","jungle",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Fancy Pattern","fancy",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0),new p("Poké Ball Pattern","poke-ball",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,185,!1,null,!0)),new c(e.LITLEO,6,!1,!1,!1,"Lion Cub Pokémon",i.FIRE,i.NORMAL,.6,13.5,O.RIVALRY,O.UNNERVE,O.MOXIE,369,62,50,58,73,54,72,220,70,74,_.MEDIUM_SLOW,12.5,!1),new c(e.PYROAR,6,!1,!1,!1,"Royal Pokémon",i.FIRE,i.NORMAL,1.5,81.5,O.RIVALRY,O.UNNERVE,O.MOXIE,507,86,68,72,109,66,106,65,70,177,_.MEDIUM_SLOW,12.5,!0),new c(e.FLABEBE,6,!1,!1,!1,"Single Bloom Pokémon",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,_.MEDIUM_FAST,0,!1,!1,new p("Red Flower","red",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new p("Yellow Flower","yellow",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new p("Orange Flower","orange",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new p("Blue Flower","blue",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new p("White Flower","white",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0)),new c(e.FLOETTE,6,!1,!1,!1,"Single Bloom Pokémon",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,_.MEDIUM_FAST,0,!1,!1,new p("Red Flower","red",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new p("Yellow Flower","yellow",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new p("Orange Flower","orange",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new p("Blue Flower","blue",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new p("White Flower","white",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0)),new c(e.FLORGES,6,!1,!1,!1,"Garden Pokémon",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,_.MEDIUM_FAST,0,!1,!1,new p("Red Flower","red",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new p("Yellow Flower","yellow",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new p("Orange Flower","orange",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new p("Blue Flower","blue",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0),new p("White Flower","white",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,248,!1,null,!0)),new c(e.SKIDDO,6,!1,!1,!1,"Mount Pokémon",i.GRASS,null,.9,31,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,350,66,65,48,62,57,52,200,70,70,_.MEDIUM_FAST,50,!1),new c(e.GOGOAT,6,!1,!1,!1,"Mount Pokémon",i.GRASS,null,1.7,91,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,531,123,100,62,97,81,68,45,70,186,_.MEDIUM_FAST,50,!1),new c(e.PANCHAM,6,!1,!1,!1,"Playful Pokémon",i.FIGHTING,null,.6,8,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,348,67,82,62,46,48,43,220,50,70,_.MEDIUM_FAST,50,!1),new c(e.PANGORO,6,!1,!1,!1,"Daunting Pokémon",i.FIGHTING,i.DARK,2.1,136,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,495,95,124,78,69,71,58,65,50,173,_.MEDIUM_FAST,50,!1),new c(e.FURFROU,6,!1,!1,!1,"Poodle Pokémon",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,_.MEDIUM_FAST,50,!1,!0,new p("Natural Form","",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("Heart Trim","heart",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("Star Trim","star",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("Diamond Trim","diamond",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("Debutante Trim","debutante",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("Matron Trim","matron",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("Dandy Trim","dandy",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("La Reine Trim","la-reine",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("Kabuki Trim","kabuki",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new p("Pharaoh Trim","pharaoh",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0)),new c(e.ESPURR,6,!1,!1,!1,"Restraint Pokémon",i.PSYCHIC,null,.3,3.5,O.KEEN_EYE,O.INFILTRATOR,O.OWN_TEMPO,355,62,48,54,63,60,68,190,50,71,_.MEDIUM_FAST,50,!1),new c(e.MEOWSTIC,6,!1,!1,!1,"Constraint Pokémon",i.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,_.MEDIUM_FAST,50,!1,!1,new p("Male","male",i.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,!1,"",!0),new p("Female","female",i.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.COMPETITIVE,466,74,48,76,83,81,104,75,50,163,!1,null,!0)),new c(e.HONEDGE,6,!1,!1,!1,"Sword Pokémon",i.STEEL,i.GHOST,.8,2,O.NO_GUARD,O.NONE,O.NONE,325,45,80,100,35,37,28,180,50,65,_.MEDIUM_FAST,50,!1),new c(e.DOUBLADE,6,!1,!1,!1,"Sword Pokémon",i.STEEL,i.GHOST,.8,4.5,O.NO_GUARD,O.NONE,O.NONE,448,59,110,150,45,49,35,90,50,157,_.MEDIUM_FAST,50,!1),new c(e.AEGISLASH,6,!1,!1,!1,"Royal Sword Pokémon",i.STEEL,i.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,_.MEDIUM_FAST,50,!1,!0,new p("Shield Forme","shield",i.STEEL,i.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,!1,"",!0),new p("Blade Forme","blade",i.STEEL,i.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,140,50,140,50,60,45,50,250)),new c(e.SPRITZEE,6,!1,!1,!1,"Perfume Pokémon",i.FAIRY,null,.2,.5,O.HEALER,O.NONE,O.AROMA_VEIL,341,78,52,60,63,65,23,200,50,68,_.MEDIUM_FAST,50,!1),new c(e.AROMATISSE,6,!1,!1,!1,"Fragrance Pokémon",i.FAIRY,null,.8,15.5,O.HEALER,O.NONE,O.AROMA_VEIL,462,101,72,72,99,89,29,140,50,162,_.MEDIUM_FAST,50,!1),new c(e.SWIRLIX,6,!1,!1,!1,"Cotton Candy Pokémon",i.FAIRY,null,.4,3.5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,341,62,48,66,59,57,49,200,50,68,_.MEDIUM_FAST,50,!1),new c(e.SLURPUFF,6,!1,!1,!1,"Meringue Pokémon",i.FAIRY,null,.8,5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,480,82,80,86,85,75,72,140,50,168,_.MEDIUM_FAST,50,!1),new c(e.INKAY,6,!1,!1,!1,"Revolving Pokémon",i.DARK,i.PSYCHIC,.4,3.5,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,288,53,54,53,37,46,45,190,50,58,_.MEDIUM_FAST,50,!1),new c(e.MALAMAR,6,!1,!1,!1,"Overturning Pokémon",i.DARK,i.PSYCHIC,1.5,47,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,482,86,92,88,68,75,73,80,50,169,_.MEDIUM_FAST,50,!1),new c(e.BINACLE,6,!1,!1,!1,"Two-Handed Pokémon",i.ROCK,i.WATER,.5,31,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,306,42,52,67,39,56,50,120,50,61,_.MEDIUM_FAST,50,!1),new c(e.BARBARACLE,6,!1,!1,!1,"Collective Pokémon",i.ROCK,i.WATER,1.3,96,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,500,72,105,115,54,86,68,45,50,175,_.MEDIUM_FAST,50,!1),new c(e.SKRELP,6,!1,!1,!1,"Mock Kelp Pokémon",i.POISON,i.WATER,.5,7.3,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,320,50,60,60,60,60,30,225,50,64,_.MEDIUM_FAST,50,!1),new c(e.DRAGALGE,6,!1,!1,!1,"Mock Kelp Pokémon",i.POISON,i.DRAGON,1.8,81.5,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,494,65,75,90,97,123,44,55,50,173,_.MEDIUM_FAST,50,!1),new c(e.CLAUNCHER,6,!1,!1,!1,"Water Gun Pokémon",i.WATER,null,.5,8.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,330,50,53,62,58,63,44,225,50,66,_.SLOW,50,!1),new c(e.CLAWITZER,6,!1,!1,!1,"Howitzer Pokémon",i.WATER,null,1.3,35.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,500,71,73,88,120,89,59,55,50,100,_.SLOW,50,!1),new c(e.HELIOPTILE,6,!1,!1,!1,"Generator Pokémon",i.ELECTRIC,i.NORMAL,.5,6,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,289,44,38,33,61,43,70,190,50,58,_.MEDIUM_FAST,50,!1),new c(e.HELIOLISK,6,!1,!1,!1,"Generator Pokémon",i.ELECTRIC,i.NORMAL,1,21,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,481,62,55,52,109,94,109,75,50,168,_.MEDIUM_FAST,50,!1),new c(e.TYRUNT,6,!1,!1,!1,"Royal Heir Pokémon",i.ROCK,i.DRAGON,.8,26,O.STRONG_JAW,O.NONE,O.STURDY,362,58,89,77,45,45,48,45,50,72,_.MEDIUM_FAST,87.5,!1),new c(e.TYRANTRUM,6,!1,!1,!1,"Despot Pokémon",i.ROCK,i.DRAGON,2.5,270,O.STRONG_JAW,O.NONE,O.ROCK_HEAD,521,82,121,119,69,59,71,45,50,182,_.MEDIUM_FAST,87.5,!1),new c(e.AMAURA,6,!1,!1,!1,"Tundra Pokémon",i.ROCK,i.ICE,1.3,25.2,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,362,77,59,50,67,63,46,45,50,72,_.MEDIUM_FAST,87.5,!1),new c(e.AURORUS,6,!1,!1,!1,"Tundra Pokémon",i.ROCK,i.ICE,2.7,225,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,521,123,77,72,99,92,58,45,50,104,_.MEDIUM_FAST,87.5,!1),new c(e.SYLVEON,6,!1,!1,!1,"Intertwining Pokémon",i.FAIRY,null,1,23.5,O.CUTE_CHARM,O.NONE,O.PIXILATE,525,95,65,65,110,130,60,45,50,184,_.MEDIUM_FAST,87.5,!1),new c(e.HAWLUCHA,6,!1,!1,!1,"Wrestling Pokémon",i.FIGHTING,i.FLYING,.8,21.5,O.LIMBER,O.UNBURDEN,O.MOLD_BREAKER,500,78,92,75,74,63,118,100,50,175,_.MEDIUM_FAST,50,!1),new c(e.DEDENNE,6,!1,!1,!1,"Antenna Pokémon",i.ELECTRIC,i.FAIRY,.2,2.2,O.CHEEK_POUCH,O.PICKUP,O.PLUS,431,67,58,57,81,67,101,180,50,151,_.MEDIUM_FAST,50,!1),new c(e.CARBINK,6,!1,!1,!1,"Jewel Pokémon",i.ROCK,i.FAIRY,.3,5.7,O.CLEAR_BODY,O.NONE,O.STURDY,500,50,50,150,50,150,50,60,50,100,_.SLOW,null,!1),new c(e.GOOMY,6,!1,!1,!1,"Soft Tissue Pokémon",i.DRAGON,null,.3,2.8,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,300,45,50,35,55,75,40,45,35,60,_.SLOW,50,!1),new c(e.SLIGGOO,6,!1,!1,!1,"Soft Tissue Pokémon",i.DRAGON,null,.8,17.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,452,68,75,53,83,113,60,45,35,158,_.SLOW,50,!1),new c(e.GOODRA,6,!1,!1,!1,"Dragon Pokémon",i.DRAGON,null,2,150.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,600,90,100,70,110,150,80,45,35,300,_.SLOW,50,!1),new c(e.KLEFKI,6,!1,!1,!1,"Key Ring Pokémon",i.STEEL,i.FAIRY,.2,3,O.PRANKSTER,O.NONE,O.MAGICIAN,470,57,80,91,80,87,75,75,50,165,_.FAST,50,!1),new c(e.PHANTUMP,6,!1,!1,!1,"Stump Pokémon",i.GHOST,i.GRASS,.4,7,O.NATURAL_CURE,O.FRISK,O.HARVEST,309,43,70,48,50,60,38,120,50,62,_.MEDIUM_FAST,50,!1),new c(e.TREVENANT,6,!1,!1,!1,"Elder Tree Pokémon",i.GHOST,i.GRASS,1.5,71,O.NATURAL_CURE,O.FRISK,O.HARVEST,474,85,110,76,65,82,56,60,50,166,_.MEDIUM_FAST,50,!1),new c(e.PUMPKABOO,6,!1,!1,!1,"Pumpkin Pokémon",i.GHOST,i.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,_.MEDIUM_FAST,50,!1,!1,new p("Average Size","",i.GHOST,i.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,!1,null,!0),new p("Small Size","small",i.GHOST,i.GRASS,.3,3.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,44,66,70,44,55,56,120,50,67,!1,"",!0),new p("Large Size","large",i.GHOST,i.GRASS,.5,7.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,54,66,70,44,55,46,120,50,67,!1,"",!0),new p("Super Size","super",i.GHOST,i.GRASS,.8,15,O.PICKUP,O.FRISK,O.INSOMNIA,335,59,66,70,44,55,41,120,50,67,!1,"",!0)),new c(e.GOURGEIST,6,!1,!1,!1,"Pumpkin Pokémon",i.GHOST,i.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,_.MEDIUM_FAST,50,!1,!1,new p("Average Size","",i.GHOST,i.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,!1,null,!0),new p("Small Size","small",i.GHOST,i.GRASS,.7,9.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,55,85,122,58,75,99,60,50,173,!1,"",!0),new p("Large Size","large",i.GHOST,i.GRASS,1.1,14,O.PICKUP,O.FRISK,O.INSOMNIA,494,75,95,122,58,75,69,60,50,173,!1,"",!0),new p("Super Size","super",i.GHOST,i.GRASS,1.7,39,O.PICKUP,O.FRISK,O.INSOMNIA,494,85,100,122,58,75,54,60,50,173,!1,"",!0)),new c(e.BERGMITE,6,!1,!1,!1,"Ice Chunk Pokémon",i.ICE,null,1,99.5,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,304,55,69,85,32,35,28,190,50,61,_.MEDIUM_FAST,50,!1),new c(e.AVALUGG,6,!1,!1,!1,"Iceberg Pokémon",i.ICE,null,2,505,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,514,95,117,184,44,46,28,55,50,180,_.MEDIUM_FAST,50,!1),new c(e.NOIBAT,6,!1,!1,!1,"Sound Wave Pokémon",i.FLYING,i.DRAGON,.5,8,O.FRISK,O.INFILTRATOR,O.TELEPATHY,245,40,30,35,45,40,55,190,50,49,_.MEDIUM_FAST,50,!1),new c(e.NOIVERN,6,!1,!1,!1,"Sound Wave Pokémon",i.FLYING,i.DRAGON,1.5,85,O.FRISK,O.INFILTRATOR,O.TELEPATHY,535,85,70,80,97,80,123,45,50,187,_.MEDIUM_FAST,50,!1),new c(e.XERNEAS,6,!1,!0,!1,"Life Pokémon",i.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,_.SLOW,null,!1,!0,new p("Neutral Mode","neutral",i.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,!1,null,!0),new p("Active Mode","active",i.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340)),new c(e.YVELTAL,6,!1,!0,!1,"Destruction Pokémon",i.DARK,i.FLYING,5.8,203,O.DARK_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,_.SLOW,null,!1),new c(e.ZYGARDE,6,!1,!0,!1,"Order Pokémon",i.DRAGON,i.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,_.SLOW,null,!1,!1,new p("50% Forme","50",i.DRAGON,i.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new p("10% Forme","10",i.DRAGON,i.GROUND,1.2,33.5,O.AURA_BREAK,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,300,!1,null,!0),new p("50% Forme Power Construct","50-pc",i.DRAGON,i.GROUND,5,305,O.POWER_CONSTRUCT,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new p("10% Forme Power Construct","10-pc",i.DRAGON,i.GROUND,1.2,33.5,O.POWER_CONSTRUCT,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,300,!1,"10",!0),new p("Complete Forme (50% PC)","complete",i.DRAGON,i.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,300),new p("Complete Forme (10% PC)","10-complete",i.DRAGON,i.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,300,!1,"complete")),new c(e.DIANCIE,6,!1,!1,!0,"Jewel Pokémon",i.ROCK,i.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,_.SLOW,null,!1,!0,new p("Normal","",i.ROCK,i.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,!1,null,!0),new p("Mega",oe.MEGA,i.ROCK,i.FAIRY,1.1,27.8,O.MAGIC_BOUNCE,O.NONE,O.NONE,700,50,160,110,160,110,110,3,50,300)),new c(e.HOOPA,6,!1,!1,!0,"Mischief Pokémon",i.PSYCHIC,i.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,270,_.SLOW,null,!1,!1,new p("Hoopa Confined","",i.PSYCHIC,i.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,270,!1,null,!0),new p("Hoopa Unbound","unbound",i.PSYCHIC,i.DARK,6.5,490,O.MAGICIAN,O.NONE,O.NONE,680,80,160,60,170,130,80,3,100,270)),new c(e.VOLCANION,6,!1,!1,!0,"Steam Pokémon",i.FIRE,i.WATER,1.7,195,O.WATER_ABSORB,O.NONE,O.NONE,600,80,110,120,130,90,70,3,100,300,_.SLOW,null,!1),new c(e.ROWLET,7,!1,!1,!1,"Grass Quill Pokémon",i.GRASS,i.FLYING,.3,1.5,O.OVERGROW,O.NONE,O.LONG_REACH,320,68,55,55,50,50,42,45,50,64,_.MEDIUM_SLOW,87.5,!1),new c(e.DARTRIX,7,!1,!1,!1,"Blade Quill Pokémon",i.GRASS,i.FLYING,.7,16,O.OVERGROW,O.NONE,O.LONG_REACH,420,78,75,75,70,70,52,45,50,147,_.MEDIUM_SLOW,87.5,!1),new c(e.DECIDUEYE,7,!1,!1,!1,"Arrow Quill Pokémon",i.GRASS,i.GHOST,1.6,36.6,O.OVERGROW,O.NONE,O.LONG_REACH,530,78,107,75,100,100,70,45,50,265,_.MEDIUM_SLOW,87.5,!1),new c(e.LITTEN,7,!1,!1,!1,"Fire Cat Pokémon",i.FIRE,null,.4,4.3,O.BLAZE,O.NONE,O.INTIMIDATE,320,45,65,40,60,40,70,45,50,64,_.MEDIUM_SLOW,87.5,!1),new c(e.TORRACAT,7,!1,!1,!1,"Fire Cat Pokémon",i.FIRE,null,.7,25,O.BLAZE,O.NONE,O.INTIMIDATE,420,65,85,50,80,50,90,45,50,147,_.MEDIUM_SLOW,87.5,!1),new c(e.INCINEROAR,7,!1,!1,!1,"Heel Pokémon",i.FIRE,i.DARK,1.8,83,O.BLAZE,O.NONE,O.INTIMIDATE,530,95,115,90,80,90,60,45,50,265,_.MEDIUM_SLOW,87.5,!1),new c(e.POPPLIO,7,!1,!1,!1,"Sea Lion Pokémon",i.WATER,null,.4,7.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,320,50,54,54,66,56,40,45,50,64,_.MEDIUM_SLOW,87.5,!1),new c(e.BRIONNE,7,!1,!1,!1,"Pop Star Pokémon",i.WATER,null,.6,17.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,420,60,69,69,91,81,50,45,50,147,_.MEDIUM_SLOW,87.5,!1),new c(e.PRIMARINA,7,!1,!1,!1,"Soloist Pokémon",i.WATER,i.FAIRY,1.8,44,O.TORRENT,O.NONE,O.LIQUID_VOICE,530,80,74,74,126,116,60,45,50,265,_.MEDIUM_SLOW,87.5,!1),new c(e.PIKIPEK,7,!1,!1,!1,"Woodpecker Pokémon",i.NORMAL,i.FLYING,.3,1.2,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,265,35,75,30,30,30,65,255,70,53,_.MEDIUM_FAST,50,!1),new c(e.TRUMBEAK,7,!1,!1,!1,"Bugle Beak Pokémon",i.NORMAL,i.FLYING,.6,14.8,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,355,55,85,50,40,50,75,120,70,124,_.MEDIUM_FAST,50,!1),new c(e.TOUCANNON,7,!1,!1,!1,"Cannon Pokémon",i.NORMAL,i.FLYING,1.1,26,O.KEEN_EYE,O.SKILL_LINK,O.SHEER_FORCE,485,80,120,75,75,75,60,45,70,218,_.MEDIUM_FAST,50,!1),new c(e.YUNGOOS,7,!1,!1,!1,"Loitering Pokémon",i.NORMAL,null,.4,6,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,253,48,70,30,30,30,45,255,70,51,_.MEDIUM_FAST,50,!1),new c(e.GUMSHOOS,7,!1,!1,!1,"Stakeout Pokémon",i.NORMAL,null,.7,14.2,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,418,88,110,60,55,60,45,127,70,146,_.MEDIUM_FAST,50,!1),new c(e.GRUBBIN,7,!1,!1,!1,"Larva Pokémon",i.BUG,null,.4,4.4,O.SWARM,O.NONE,O.NONE,300,47,62,45,55,45,46,255,50,60,_.MEDIUM_FAST,50,!1),new c(e.CHARJABUG,7,!1,!1,!1,"Battery Pokémon",i.BUG,i.ELECTRIC,.5,10.5,O.BATTERY,O.NONE,O.NONE,400,57,82,95,55,75,36,120,50,140,_.MEDIUM_FAST,50,!1),new c(e.VIKAVOLT,7,!1,!1,!1,"Stag Beetle Pokémon",i.BUG,i.ELECTRIC,1.5,45,O.LEVITATE,O.NONE,O.NONE,500,77,70,90,145,75,43,45,50,250,_.MEDIUM_FAST,50,!1),new c(e.CRABRAWLER,7,!1,!1,!1,"Boxing Pokémon",i.FIGHTING,null,.6,7,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,338,47,82,57,42,47,63,225,70,68,_.MEDIUM_FAST,50,!1),new c(e.CRABOMINABLE,7,!1,!1,!1,"Woolly Crab Pokémon",i.FIGHTING,i.ICE,1.7,180,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,478,97,132,77,62,67,43,60,70,167,_.MEDIUM_FAST,50,!1),new c(e.ORICORIO,7,!1,!1,!1,"Dancing Pokémon",i.FIRE,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,_.MEDIUM_FAST,25,!1,!1,new p("Baile Style","baile",i.FIRE,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,"",!0),new p("Pom-Pom Style","pompom",i.ELECTRIC,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new p("Pau Style","pau",i.PSYCHIC,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new p("Sensu Style","sensu",i.GHOST,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0)),new c(e.CUTIEFLY,7,!1,!1,!1,"Bee Fly Pokémon",i.BUG,i.FAIRY,.1,.2,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,304,40,45,40,55,40,84,190,50,61,_.MEDIUM_FAST,50,!1),new c(e.RIBOMBEE,7,!1,!1,!1,"Bee Fly Pokémon",i.BUG,i.FAIRY,.2,.5,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,464,60,55,60,95,70,124,75,50,162,_.MEDIUM_FAST,50,!1),new c(e.ROCKRUFF,7,!1,!1,!1,"Puppy Pokémon",i.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,_.MEDIUM_FAST,50,!1,!1,new p("Normal","",i.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,!1,null,!0),new p("Own Tempo","own-tempo",i.ROCK,null,.5,9.2,O.OWN_TEMPO,O.NONE,O.OWN_TEMPO,280,45,65,40,30,40,60,190,50,56,!1,"",!0)),new c(e.LYCANROC,7,!1,!1,!1,"Wolf Pokémon",i.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,_.MEDIUM_FAST,50,!1,!1,new p("Midday Form","midday",i.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,!1,"",!0),new p("Midnight Form","midnight",i.ROCK,null,1.1,25,O.KEEN_EYE,O.VITAL_SPIRIT,O.NO_GUARD,487,85,115,75,55,75,82,90,50,170,!1,null,!0),new p("Dusk Form","dusk",i.ROCK,null,.8,25,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,487,75,117,65,55,65,110,90,50,170,!1,null,!0)),new c(e.WISHIWASHI,7,!1,!1,!1,"Small Fry Pokémon",i.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,_.FAST,50,!1,!1,new p("Solo Form","",i.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,!1,null,!0),new p("School","school",i.WATER,null,8.2,78.6,O.SCHOOLING,O.NONE,O.NONE,620,45,140,130,140,135,30,60,50,61)),new c(e.MAREANIE,7,!1,!1,!1,"Brutal Star Pokémon",i.POISON,i.WATER,.4,8,O.MERCILESS,O.LIMBER,O.REGENERATOR,305,50,53,62,43,52,45,190,50,61,_.MEDIUM_FAST,50,!1),new c(e.TOXAPEX,7,!1,!1,!1,"Brutal Star Pokémon",i.POISON,i.WATER,.7,14.5,O.MERCILESS,O.LIMBER,O.REGENERATOR,495,50,63,152,53,142,35,75,50,173,_.MEDIUM_FAST,50,!1),new c(e.MUDBRAY,7,!1,!1,!1,"Donkey Pokémon",i.GROUND,null,1,110,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,385,70,100,70,45,55,45,190,50,77,_.MEDIUM_FAST,50,!1),new c(e.MUDSDALE,7,!1,!1,!1,"Draft Horse Pokémon",i.GROUND,null,2.5,920,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,500,100,125,100,55,85,35,60,50,175,_.MEDIUM_FAST,50,!1),new c(e.DEWPIDER,7,!1,!1,!1,"Water Bubble Pokémon",i.WATER,i.BUG,.3,4,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,269,38,40,52,40,72,27,200,50,54,_.MEDIUM_FAST,50,!1),new c(e.ARAQUANID,7,!1,!1,!1,"Water Bubble Pokémon",i.WATER,i.BUG,1.8,82,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,454,68,70,92,50,132,42,100,50,159,_.MEDIUM_FAST,50,!1),new c(e.FOMANTIS,7,!1,!1,!1,"Sickle Grass Pokémon",i.GRASS,null,.3,1.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,250,40,55,35,50,35,35,190,50,50,_.MEDIUM_FAST,50,!1),new c(e.LURANTIS,7,!1,!1,!1,"Bloom Sickle Pokémon",i.GRASS,null,.9,18.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,480,70,105,90,80,90,45,75,50,168,_.MEDIUM_FAST,50,!1),new c(e.MORELULL,7,!1,!1,!1,"Illuminating Pokémon",i.GRASS,i.FAIRY,.2,1.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,285,40,35,55,65,75,15,190,50,57,_.MEDIUM_FAST,50,!1),new c(e.SHIINOTIC,7,!1,!1,!1,"Illuminating Pokémon",i.GRASS,i.FAIRY,1,11.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,405,60,45,80,90,100,30,75,50,142,_.MEDIUM_FAST,50,!1),new c(e.SALANDIT,7,!1,!1,!1,"Toxic Lizard Pokémon",i.POISON,i.FIRE,.6,4.8,O.CORROSION,O.NONE,O.OBLIVIOUS,320,48,44,40,71,40,77,120,50,64,_.MEDIUM_FAST,87.5,!1),new c(e.SALAZZLE,7,!1,!1,!1,"Toxic Lizard Pokémon",i.POISON,i.FIRE,1.2,22.2,O.CORROSION,O.NONE,O.OBLIVIOUS,480,68,64,60,111,60,117,45,50,168,_.MEDIUM_FAST,0,!1),new c(e.STUFFUL,7,!1,!1,!1,"Flailing Pokémon",i.NORMAL,i.FIGHTING,.5,6.8,O.FLUFFY,O.KLUTZ,O.CUTE_CHARM,340,70,75,50,45,50,50,140,50,68,_.MEDIUM_FAST,50,!1),new c(e.BEWEAR,7,!1,!1,!1,"Strong Arm Pokémon",i.NORMAL,i.FIGHTING,2.1,135,O.FLUFFY,O.KLUTZ,O.UNNERVE,500,120,125,80,55,60,60,70,50,175,_.MEDIUM_FAST,50,!1),new c(e.BOUNSWEET,7,!1,!1,!1,"Fruit Pokémon",i.GRASS,null,.3,3.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,210,42,30,38,30,38,32,235,50,42,_.MEDIUM_SLOW,0,!1),new c(e.STEENEE,7,!1,!1,!1,"Fruit Pokémon",i.GRASS,null,.7,8.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,290,52,40,48,40,48,62,120,50,102,_.MEDIUM_SLOW,0,!1),new c(e.TSAREENA,7,!1,!1,!1,"Fruit Pokémon",i.GRASS,null,1.2,21.4,O.LEAF_GUARD,O.QUEENLY_MAJESTY,O.SWEET_VEIL,510,72,120,98,50,98,72,45,50,255,_.MEDIUM_SLOW,0,!1),new c(e.COMFEY,7,!1,!1,!1,"Posy Picker Pokémon",i.FAIRY,null,.1,.3,O.FLOWER_VEIL,O.TRIAGE,O.NATURAL_CURE,485,51,52,90,82,110,100,60,50,170,_.FAST,25,!1),new c(e.ORANGURU,7,!1,!1,!1,"Sage Pokémon",i.NORMAL,i.PSYCHIC,1.5,76,O.INNER_FOCUS,O.TELEPATHY,O.SYMBIOSIS,490,90,60,80,90,110,60,45,50,172,_.SLOW,50,!1),new c(e.PASSIMIAN,7,!1,!1,!1,"Teamwork Pokémon",i.FIGHTING,null,2,82.8,O.RECEIVER,O.NONE,O.DEFIANT,490,100,120,90,40,60,80,45,50,172,_.SLOW,50,!1),new c(e.WIMPOD,7,!1,!1,!1,"Turn Tail Pokémon",i.BUG,i.WATER,.5,12,O.WIMP_OUT,O.NONE,O.RUN_AWAY,230,25,35,40,20,30,80,90,50,46,_.MEDIUM_FAST,50,!1),new c(e.GOLISOPOD,7,!1,!1,!1,"Hard Scale Pokémon",i.BUG,i.WATER,2,108,O.EMERGENCY_EXIT,O.NONE,O.ANTICIPATION,530,75,125,140,60,90,40,45,50,186,_.MEDIUM_FAST,50,!1),new c(e.SANDYGAST,7,!1,!1,!1,"Sand Heap Pokémon",i.GHOST,i.GROUND,.5,70,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,320,55,55,80,70,45,15,140,50,64,_.MEDIUM_FAST,50,!1),new c(e.PALOSSAND,7,!1,!1,!1,"Sand Castle Pokémon",i.GHOST,i.GROUND,1.3,250,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,480,85,75,110,100,75,35,60,50,168,_.MEDIUM_FAST,50,!1),new c(e.PYUKUMUKU,7,!1,!1,!1,"Sea Cucumber Pokémon",i.WATER,null,.3,1.2,O.INNARDS_OUT,O.NONE,O.UNAWARE,410,55,60,130,30,130,5,60,50,144,_.FAST,50,!1),new c(e.TYPE_NULL,7,!0,!1,!1,"Synthetic Pokémon",i.NORMAL,null,1.9,120.5,O.BATTLE_ARMOR,O.NONE,O.NONE,534,95,95,95,95,95,59,3,0,107,_.SLOW,null,!1),new c(e.SILVALLY,7,!0,!1,!1,"Synthetic Pokémon",i.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,_.SLOW,null,!1,!1,new p("Type: Normal","normal",i.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,!1,"",!0),new p("Type: Fighting","fighting",i.FIGHTING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Flying","flying",i.FLYING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Poison","poison",i.POISON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Ground","ground",i.GROUND,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Rock","rock",i.ROCK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Bug","bug",i.BUG,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Ghost","ghost",i.GHOST,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Steel","steel",i.STEEL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Fire","fire",i.FIRE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Water","water",i.WATER,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Grass","grass",i.GRASS,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Electric","electric",i.ELECTRIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Psychic","psychic",i.PSYCHIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Ice","ice",i.ICE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Dragon","dragon",i.DRAGON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Dark","dark",i.DARK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new p("Type: Fairy","fairy",i.FAIRY,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285)),new c(e.MINIOR,7,!1,!1,!1,"Meteor Pokémon",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,_.MEDIUM_SLOW,null,!1,!1,new p("Red Meteor Form","red-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new p("Orange Meteor Form","orange-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new p("Yellow Meteor Form","yellow-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new p("Green Meteor Form","green-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new p("Blue Meteor Form","blue-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new p("Indigo Meteor Form","indigo-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new p("Violet Meteor Form","violet-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new p("Red Core Form","red",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new p("Orange Core Form","orange",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new p("Yellow Core Form","yellow",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new p("Green Core Form","green",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new p("Blue Core Form","blue",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new p("Indigo Core Form","indigo",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0),new p("Violet Core Form","violet",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,154,!1,null,!0)),new c(e.KOMALA,7,!1,!1,!1,"Drowsing Pokémon",i.NORMAL,null,.4,19.9,O.COMATOSE,O.NONE,O.NONE,480,65,115,65,75,95,65,45,70,168,_.SLOW,50,!1),new c(e.TURTONATOR,7,!1,!1,!1,"Blast Turtle Pokémon",i.FIRE,i.DRAGON,2,212,O.SHELL_ARMOR,O.NONE,O.NONE,485,60,78,135,91,85,36,70,50,170,_.MEDIUM_FAST,50,!1),new c(e.TOGEDEMARU,7,!1,!1,!1,"Roly-Poly Pokémon",i.ELECTRIC,i.STEEL,.3,3.3,O.IRON_BARBS,O.LIGHTNING_ROD,O.STURDY,435,65,98,63,40,73,96,180,50,152,_.MEDIUM_FAST,50,!1),new c(e.MIMIKYU,7,!1,!1,!1,"Disguise Pokémon",i.GHOST,i.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,_.MEDIUM_FAST,50,!1,!1,new p("Disguised Form","disguised",i.GHOST,i.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,!1,null,!0),new p("Busted Form","busted",i.GHOST,i.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167)),new c(e.BRUXISH,7,!1,!1,!1,"Gnash Teeth Pokémon",i.WATER,i.PSYCHIC,.9,19,O.DAZZLING,O.STRONG_JAW,O.WONDER_SKIN,475,68,105,70,70,70,92,80,70,166,_.MEDIUM_FAST,50,!1),new c(e.DRAMPA,7,!1,!1,!1,"Placid Pokémon",i.NORMAL,i.DRAGON,3,185,O.BERSERK,O.SAP_SIPPER,O.CLOUD_NINE,485,78,60,85,135,91,36,70,50,170,_.MEDIUM_FAST,50,!1),new c(e.DHELMISE,7,!1,!1,!1,"Sea Creeper Pokémon",i.GHOST,i.GRASS,3.9,210,O.STEELWORKER,O.NONE,O.NONE,517,70,131,100,86,90,40,25,50,181,_.MEDIUM_FAST,null,!1),new c(e.JANGMO_O,7,!1,!1,!1,"Scaly Pokémon",i.DRAGON,null,.6,29.7,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,300,45,55,65,45,45,45,45,50,60,_.SLOW,50,!1),new c(e.HAKAMO_O,7,!1,!1,!1,"Scaly Pokémon",i.DRAGON,i.FIGHTING,1.2,47,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,420,55,75,90,65,70,65,45,50,147,_.SLOW,50,!1),new c(e.KOMMO_O,7,!1,!1,!1,"Scaly Pokémon",i.DRAGON,i.FIGHTING,1.6,78.2,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,600,75,110,125,100,105,85,45,50,300,_.SLOW,50,!1),new c(e.TAPU_KOKO,7,!0,!1,!1,"Land Spirit Pokémon",i.ELECTRIC,i.FAIRY,1.8,20.5,O.ELECTRIC_SURGE,O.NONE,O.TELEPATHY,570,70,115,85,95,75,130,3,50,285,_.SLOW,null,!1),new c(e.TAPU_LELE,7,!0,!1,!1,"Land Spirit Pokémon",i.PSYCHIC,i.FAIRY,1.2,18.6,O.PSYCHIC_SURGE,O.NONE,O.TELEPATHY,570,70,85,75,130,115,95,3,50,285,_.SLOW,null,!1),new c(e.TAPU_BULU,7,!0,!1,!1,"Land Spirit Pokémon",i.GRASS,i.FAIRY,1.9,45.5,O.GRASSY_SURGE,O.NONE,O.TELEPATHY,570,70,130,115,85,95,75,3,50,285,_.SLOW,null,!1),new c(e.TAPU_FINI,7,!0,!1,!1,"Land Spirit Pokémon",i.WATER,i.FAIRY,1.3,21.2,O.MISTY_SURGE,O.NONE,O.TELEPATHY,570,70,75,115,95,130,85,3,50,285,_.SLOW,null,!1),new c(e.COSMOG,7,!0,!1,!1,"Nebula Pokémon",i.PSYCHIC,null,.2,.1,O.UNAWARE,O.NONE,O.NONE,200,43,29,31,29,31,37,45,0,40,_.SLOW,null,!1),new c(e.COSMOEM,7,!0,!1,!1,"Protostar Pokémon",i.PSYCHIC,null,.1,999.9,O.STURDY,O.NONE,O.NONE,400,43,29,131,29,131,37,45,0,140,_.SLOW,null,!1),new c(e.SOLGALEO,7,!1,!0,!1,"Sunne Pokémon",i.PSYCHIC,i.STEEL,3.4,230,O.FULL_METAL_BODY,O.NONE,O.NONE,680,137,137,107,113,89,97,45,0,340,_.SLOW,null,!1),new c(e.LUNALA,7,!1,!0,!1,"Moone Pokémon",i.PSYCHIC,i.GHOST,4,120,O.SHADOW_SHIELD,O.NONE,O.NONE,680,137,113,89,137,107,97,45,0,340,_.SLOW,null,!1),new c(e.NIHILEGO,7,!0,!1,!1,"Parasite Pokémon",i.ROCK,i.POISON,1.2,55.5,O.BEAST_BOOST,O.NONE,O.NONE,570,109,53,47,127,131,103,45,0,285,_.SLOW,null,!1),new c(e.BUZZWOLE,7,!0,!1,!1,"Swollen Pokémon",i.BUG,i.FIGHTING,2.4,333.6,O.BEAST_BOOST,O.NONE,O.NONE,570,107,139,139,53,53,79,45,0,285,_.SLOW,null,!1),new c(e.PHEROMOSA,7,!0,!1,!1,"Lissome Pokémon",i.BUG,i.FIGHTING,1.8,25,O.BEAST_BOOST,O.NONE,O.NONE,570,71,137,37,137,37,151,45,0,285,_.SLOW,null,!1),new c(e.XURKITREE,7,!0,!1,!1,"Glowing Pokémon",i.ELECTRIC,null,3.8,100,O.BEAST_BOOST,O.NONE,O.NONE,570,83,89,71,173,71,83,45,0,285,_.SLOW,null,!1),new c(e.CELESTEELA,7,!0,!1,!1,"Launch Pokémon",i.STEEL,i.FLYING,9.2,999.9,O.BEAST_BOOST,O.NONE,O.NONE,570,97,101,103,107,101,61,45,0,285,_.SLOW,null,!1),new c(e.KARTANA,7,!0,!1,!1,"Drawn Sword Pokémon",i.GRASS,i.STEEL,.3,.1,O.BEAST_BOOST,O.NONE,O.NONE,570,59,181,131,59,31,109,45,0,285,_.SLOW,null,!1),new c(e.GUZZLORD,7,!0,!1,!1,"Junkivore Pokémon",i.DARK,i.DRAGON,5.5,888,O.BEAST_BOOST,O.NONE,O.NONE,570,223,101,53,97,53,43,45,0,285,_.SLOW,null,!1),new c(e.NECROZMA,7,!1,!0,!1,"Prism Pokémon",i.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,_.SLOW,null,!1,!1,new p("Normal","",i.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,!1,null,!0),new p("Dusk Mane","dusk-mane",i.PSYCHIC,i.STEEL,3.8,460,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,157,127,113,109,77,255,0,300),new p("Dawn Wings","dawn-wings",i.PSYCHIC,i.GHOST,4.2,350,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,113,109,157,127,77,255,0,300),new p("Ultra","ultra",i.PSYCHIC,i.DRAGON,7.5,230,O.NEUROFORCE,O.NONE,O.NONE,754,97,167,97,167,97,129,255,0,300)),new c(e.MAGEARNA,7,!1,!1,!0,"Artificial Pokémon",i.STEEL,i.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,_.SLOW,null,!1,!1,new p("Normal","",i.STEEL,i.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0),new p("Original","original",i.STEEL,i.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0)),new c(e.MARSHADOW,7,!1,!1,!0,"Gloomdweller Pokémon",i.FIGHTING,i.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,_.SLOW,null,!1,!0,new p("Normal","",i.FIGHTING,i.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!0),new p("Zenith","zenith",i.FIGHTING,i.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300)),new c(e.POIPOLE,7,!0,!1,!1,"Poison Pin Pokémon",i.POISON,null,.6,1.8,O.BEAST_BOOST,O.NONE,O.NONE,420,67,73,67,73,67,73,45,0,210,_.SLOW,null,!1),new c(e.NAGANADEL,7,!0,!1,!1,"Poison Pin Pokémon",i.POISON,i.DRAGON,3.6,150,O.BEAST_BOOST,O.NONE,O.NONE,540,73,73,73,127,73,121,45,0,270,_.SLOW,null,!1),new c(e.STAKATAKA,7,!0,!1,!1,"Rampart Pokémon",i.ROCK,i.STEEL,5.5,820,O.BEAST_BOOST,O.NONE,O.NONE,570,61,131,211,53,101,13,30,0,285,_.SLOW,null,!1),new c(e.BLACEPHALON,7,!0,!1,!1,"Fireworks Pokémon",i.FIRE,i.GHOST,1.8,13,O.BEAST_BOOST,O.NONE,O.NONE,570,53,127,53,151,79,107,30,0,285,_.SLOW,null,!1),new c(e.ZERAORA,7,!1,!1,!0,"Thunderclap Pokémon",i.ELECTRIC,null,1.5,44.5,O.VOLT_ABSORB,O.NONE,O.NONE,600,88,112,75,102,80,143,3,0,300,_.SLOW,null,!1),new c(e.MELTAN,7,!1,!1,!0,"Hex Nut Pokémon",i.STEEL,null,.2,8,O.MAGNET_PULL,O.NONE,O.NONE,300,46,65,65,55,35,34,3,0,150,_.SLOW,null,!1),new c(e.MELMETAL,7,!1,!1,!0,"Hex Nut Pokémon",i.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,_.SLOW,null,!1,!0,new p("Normal","",i.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.STEEL,null,25,999.9,O.IRON_FIST,O.NONE,O.NONE,700,175,165,155,85,75,45,3,0,300)),new c(e.GROOKEY,8,!1,!1,!1,"Chimp Pokémon",i.GRASS,null,.3,5,O.OVERGROW,O.NONE,O.GRASSY_SURGE,310,50,65,50,40,40,65,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.THWACKEY,8,!1,!1,!1,"Beat Pokémon",i.GRASS,null,.7,14,O.OVERGROW,O.NONE,O.GRASSY_SURGE,420,70,85,70,55,60,80,45,50,147,_.MEDIUM_SLOW,87.5,!1),new c(e.RILLABOOM,8,!1,!1,!1,"Drummer Pokémon",i.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,_.MEDIUM_SLOW,87.5,!1,!0,new p("Normal","",i.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.GRASS,null,28,999.9,O.GRASSY_SURGE,O.NONE,O.GRASSY_SURGE,630,125,150,105,85,85,80,45,50,265)),new c(e.SCORBUNNY,8,!1,!1,!1,"Rabbit Pokémon",i.FIRE,null,.3,4.5,O.BLAZE,O.NONE,O.LIBERO,310,50,71,40,40,40,69,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.RABOOT,8,!1,!1,!1,"Rabbit Pokémon",i.FIRE,null,.6,9,O.BLAZE,O.NONE,O.LIBERO,420,65,86,60,55,60,94,45,50,147,_.MEDIUM_SLOW,87.5,!1),new c(e.CINDERACE,8,!1,!1,!1,"Striker Pokémon",i.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,_.MEDIUM_SLOW,87.5,!1,!0,new p("Normal","",i.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.FIRE,null,27,999.9,O.LIBERO,O.NONE,O.LIBERO,630,100,146,80,90,80,134,45,50,265)),new c(e.SOBBLE,8,!1,!1,!1,"Water Lizard Pokémon",i.WATER,null,.3,4,O.TORRENT,O.NONE,O.SNIPER,310,50,40,40,70,40,70,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.DRIZZILE,8,!1,!1,!1,"Water Lizard Pokémon",i.WATER,null,.7,11.5,O.TORRENT,O.NONE,O.SNIPER,420,65,60,55,95,55,90,45,50,147,_.MEDIUM_SLOW,87.5,!1),new c(e.INTELEON,8,!1,!1,!1,"Secret Agent Pokémon",i.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,_.MEDIUM_SLOW,87.5,!1,!0,new p("Normal","",i.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.WATER,null,40,999.9,O.SNIPER,O.NONE,O.SNIPER,630,95,97,77,147,77,137,45,50,265)),new c(e.SKWOVET,8,!1,!1,!1,"Cheeky Pokémon",i.NORMAL,null,.3,2.5,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,275,70,55,55,35,35,25,255,50,55,_.MEDIUM_FAST,50,!1),new c(e.GREEDENT,8,!1,!1,!1,"Greedy Pokémon",i.NORMAL,null,.6,6,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,460,120,95,95,55,75,20,90,50,161,_.MEDIUM_FAST,50,!1),new c(e.ROOKIDEE,8,!1,!1,!1,"Tiny Bird Pokémon",i.FLYING,null,.2,1.8,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,245,38,47,35,33,35,57,255,50,49,_.MEDIUM_SLOW,50,!1),new c(e.CORVISQUIRE,8,!1,!1,!1,"Raven Pokémon",i.FLYING,null,.8,16,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,365,68,67,55,43,55,77,120,50,128,_.MEDIUM_SLOW,50,!1),new c(e.CORVIKNIGHT,8,!1,!1,!1,"Raven Pokémon",i.FLYING,i.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,_.MEDIUM_SLOW,50,!1,!0,new p("Normal","",i.FLYING,i.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.FLYING,i.STEEL,14,999.9,O.MIRROR_ARMOR,O.MIRROR_ARMOR,O.MIRROR_ARMOR,595,128,102,140,53,95,77,45,50,248)),new c(e.BLIPBUG,8,!1,!1,!1,"Larva Pokémon",i.BUG,null,.4,8,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,180,25,20,20,25,45,45,255,50,36,_.MEDIUM_FAST,50,!1),new c(e.DOTTLER,8,!1,!1,!1,"Radome Pokémon",i.BUG,i.PSYCHIC,.4,19.5,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,335,50,35,80,50,90,30,120,50,117,_.MEDIUM_FAST,50,!1),new c(e.ORBEETLE,8,!1,!1,!1,"Seven Spot Pokémon",i.BUG,i.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.BUG,i.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.BUG,i.PSYCHIC,14,999.9,O.TRACE,O.TRACE,O.TRACE,605,90,45,130,110,140,90,45,50,253)),new c(e.NICKIT,8,!1,!1,!1,"Fox Pokémon",i.DARK,null,.6,8.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,245,40,28,28,47,52,50,255,50,49,_.FAST,50,!1),new c(e.THIEVUL,8,!1,!1,!1,"Fox Pokémon",i.DARK,null,1.2,19.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,455,70,58,58,87,92,90,127,50,159,_.FAST,50,!1),new c(e.GOSSIFLEUR,8,!1,!1,!1,"Flowering Pokémon",i.GRASS,null,.4,2.2,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,250,40,40,60,40,60,10,190,50,50,_.MEDIUM_FAST,50,!1),new c(e.ELDEGOSS,8,!1,!1,!1,"Cotton Bloom Pokémon",i.GRASS,null,.5,2.5,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,460,60,50,90,80,120,60,75,50,161,_.MEDIUM_FAST,50,!1),new c(e.WOOLOO,8,!1,!1,!1,"Sheep Pokémon",i.NORMAL,null,.6,6,O.FLUFFY,O.RUN_AWAY,O.BULLETPROOF,270,42,40,55,40,45,48,255,50,122,_.MEDIUM_FAST,50,!1),new c(e.DUBWOOL,8,!1,!1,!1,"Sheep Pokémon",i.NORMAL,null,1.3,43,O.FLUFFY,O.STEADFAST,O.BULLETPROOF,490,72,80,100,60,90,88,127,50,172,_.MEDIUM_FAST,50,!1),new c(e.CHEWTLE,8,!1,!1,!1,"Snapping Pokémon",i.WATER,null,.3,8.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,284,50,64,50,38,38,44,255,50,57,_.MEDIUM_FAST,50,!1),new c(e.DREDNAW,8,!1,!1,!1,"Bite Pokémon",i.WATER,i.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.WATER,i.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.WATER,i.ROCK,24,999.9,O.STRONG_JAW,O.STRONG_JAW,O.STRONG_JAW,585,115,145,115,43,83,84,75,50,170)),new c(e.YAMPER,8,!1,!1,!1,"Puppy Pokémon",i.ELECTRIC,null,.3,13.5,O.BALL_FETCH,O.NONE,O.RATTLED,270,59,45,50,40,50,26,255,50,54,_.FAST,50,!1),new c(e.BOLTUND,8,!1,!1,!1,"Dog Pokémon",i.ELECTRIC,null,1,34,O.STRONG_JAW,O.NONE,O.COMPETITIVE,490,69,90,60,90,60,121,45,50,172,_.FAST,50,!1),new c(e.ROLYCOLY,8,!1,!1,!1,"Coal Pokémon",i.ROCK,null,.3,12,O.STEAM_ENGINE,O.HEATPROOF,O.FLASH_FIRE,240,30,40,50,40,50,30,255,50,48,_.MEDIUM_SLOW,50,!1),new c(e.CARKOL,8,!1,!1,!1,"Coal Pokémon",i.ROCK,i.FIRE,1.1,78,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,410,80,60,90,60,70,50,120,50,144,_.MEDIUM_SLOW,50,!1),new c(e.COALOSSAL,8,!1,!1,!1,"Coal Pokémon",i.ROCK,i.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,_.MEDIUM_SLOW,50,!1,!0,new p("Normal","",i.ROCK,i.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.ROCK,i.FIRE,42,999.9,O.STEAM_ENGINE,O.STEAM_ENGINE,O.STEAM_ENGINE,610,140,95,130,95,110,40,45,50,255)),new c(e.APPLIN,8,!1,!1,!1,"Apple Core Pokémon",i.GRASS,i.DRAGON,.2,.5,O.RIPEN,O.GLUTTONY,O.BULLETPROOF,260,40,40,80,40,40,20,255,50,52,_.ERRATIC,50,!1),new c(e.FLAPPLE,8,!1,!1,!1,"Apple Wing Pokémon",i.GRASS,i.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,_.ERRATIC,50,!1,!0,new p("Normal","",i.GRASS,i.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.GRASS,i.DRAGON,24,999.9,O.HUSTLE,O.HUSTLE,O.HUSTLE,585,90,130,100,85,80,100,45,50,170)),new c(e.APPLETUN,8,!1,!1,!1,"Apple Nectar Pokémon",i.GRASS,i.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,_.ERRATIC,50,!1,!0,new p("Normal","",i.GRASS,i.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.GRASS,i.DRAGON,24,999.9,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,585,130,75,115,125,115,25,45,50,170)),new c(e.SILICOBRA,8,!1,!1,!1,"Sand Snake Pokémon",i.GROUND,null,2.2,7.6,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,315,52,57,75,35,50,46,255,50,63,_.MEDIUM_FAST,50,!1),new c(e.SANDACONDA,8,!1,!1,!1,"Sand Snake Pokémon",i.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.GROUND,null,22,999.9,O.SAND_SPIT,O.SAND_SPIT,O.SAND_SPIT,610,117,137,140,55,80,81,120,50,179)),new c(e.CRAMORANT,8,!1,!1,!1,"Gulp Pokémon",i.FLYING,i.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,_.MEDIUM_FAST,50,!1,!1,new p("Normal","",i.FLYING,i.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,!1,null,!0),new p("Gulping Form","gulping",i.FLYING,i.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166),new p("Gorging Form","gorging",i.FLYING,i.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166)),new c(e.ARROKUDA,8,!1,!1,!1,"Rush Pokémon",i.WATER,null,.5,1,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,280,41,63,40,40,30,66,255,50,56,_.SLOW,50,!1),new c(e.BARRASKEWDA,8,!1,!1,!1,"Skewer Pokémon",i.WATER,null,1.3,30,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,490,61,123,60,60,50,136,60,50,172,_.SLOW,50,!1),new c(e.TOXEL,8,!1,!1,!1,"Baby Pokémon",i.ELECTRIC,i.POISON,.4,11,O.RATTLED,O.STATIC,O.KLUTZ,242,40,38,35,54,35,40,75,50,48,_.MEDIUM_SLOW,50,!1),new c(e.TOXTRICITY,8,!1,!1,!1,"Punk Pokémon",i.ELECTRIC,i.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,_.MEDIUM_SLOW,50,!1,!0,new p("Amped Form","amped",i.ELECTRIC,i.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"",!0),new p("Low-Key Form","lowkey",i.ELECTRIC,i.POISON,1.6,40,O.PUNK_ROCK,O.MINUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"lowkey",!0),new p("G-Max",oe.GIGANTAMAX,i.ELECTRIC,i.POISON,24,999.9,O.PUNK_ROCK,O.PUNK_ROCK,O.PUNK_ROCK,602,114,98,82,144,82,82,45,50,176)),new c(e.SIZZLIPEDE,8,!1,!1,!1,"Radiator Pokémon",i.FIRE,i.BUG,.7,1,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,305,50,65,45,50,50,45,190,50,61,_.MEDIUM_FAST,50,!1),new c(e.CENTISKORCH,8,!1,!1,!1,"Radiator Pokémon",i.FIRE,i.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.FIRE,i.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.FIRE,i.BUG,75,999.9,O.FLASH_FIRE,O.FLASH_FIRE,O.FLASH_FIRE,625,140,145,75,90,100,75,75,50,184)),new c(e.CLOBBOPUS,8,!1,!1,!1,"Tantrum Pokémon",i.FIGHTING,null,.6,4,O.LIMBER,O.NONE,O.TECHNICIAN,310,50,68,60,50,50,32,180,50,62,_.MEDIUM_SLOW,50,!1),new c(e.GRAPPLOCT,8,!1,!1,!1,"Jujitsu Pokémon",i.FIGHTING,null,1.6,39,O.LIMBER,O.NONE,O.TECHNICIAN,480,80,118,90,70,80,42,45,50,168,_.MEDIUM_SLOW,50,!1),new c(e.SINISTEA,8,!1,!1,!1,"Black Tea Pokémon",i.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,_.MEDIUM_FAST,null,!1,!1,new p("Phony Form","phony",i.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0),new p("Antique Form","antique",i.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0)),new c(e.POLTEAGEIST,8,!1,!1,!1,"Black Tea Pokémon",i.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,_.MEDIUM_FAST,null,!1,!1,new p("Phony Form","phony",i.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0),new p("Antique Form","antique",i.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0)),new c(e.HATENNA,8,!1,!1,!1,"Calm Pokémon",i.PSYCHIC,null,.4,3.4,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,265,42,30,45,56,53,39,235,50,53,_.SLOW,0,!1),new c(e.HATTREM,8,!1,!1,!1,"Serene Pokémon",i.PSYCHIC,null,.6,4.8,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,370,57,40,65,86,73,49,120,50,130,_.SLOW,0,!1),new c(e.HATTERENE,8,!1,!1,!1,"Silent Pokémon",i.PSYCHIC,i.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,_.SLOW,0,!1,!0,new p("Normal","",i.PSYCHIC,i.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.PSYCHIC,i.FAIRY,26,999.9,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,610,97,90,105,146,122,50,45,50,255)),new c(e.IMPIDIMP,8,!1,!1,!1,"Wily Pokémon",i.DARK,i.FAIRY,.4,5.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,265,45,45,30,55,40,50,255,50,53,_.MEDIUM_FAST,100,!1),new c(e.MORGREM,8,!1,!1,!1,"Devious Pokémon",i.DARK,i.FAIRY,.8,12.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,370,65,60,45,75,55,70,120,50,130,_.MEDIUM_FAST,100,!1),new c(e.GRIMMSNARL,8,!1,!1,!1,"Bulk Up Pokémon",i.DARK,i.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,_.MEDIUM_FAST,100,!1,!0,new p("Normal","",i.DARK,i.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.DARK,i.FAIRY,32,999.9,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,610,135,138,77,110,85,65,45,50,255)),new c(e.OBSTAGOON,8,!1,!1,!1,"Blocking Pokémon",i.DARK,i.NORMAL,1.6,46,O.RECKLESS,O.GUTS,O.DEFIANT,520,93,90,101,60,81,95,45,50,260,_.MEDIUM_FAST,50,!1),new c(e.PERRSERKER,8,!1,!1,!1,"Viking Pokémon",i.STEEL,null,.8,28,O.BATTLE_ARMOR,O.TOUGH_CLAWS,O.STEELY_SPIRIT,440,70,110,100,50,60,50,90,50,154,_.MEDIUM_FAST,50,!1),new c(e.CURSOLA,8,!1,!1,!1,"Coral Pokémon",i.GHOST,null,1,.4,O.WEAK_ARMOR,O.NONE,O.PERISH_BODY,510,60,95,50,145,130,30,30,50,179,_.FAST,25,!1),new c(e.SIRFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",i.FIGHTING,null,.8,117,O.STEADFAST,O.NONE,O.SCRAPPY,507,62,135,95,68,82,65,45,50,177,_.MEDIUM_FAST,50,!1),new c(e.MR_RIME,8,!1,!1,!1,"Comedian Pokémon",i.ICE,i.PSYCHIC,1.5,58.2,O.TANGLED_FEET,O.SCREEN_CLEANER,O.ICE_BODY,520,80,85,75,110,100,70,45,50,182,_.MEDIUM_FAST,50,!1),new c(e.RUNERIGUS,8,!1,!1,!1,"Grudge Pokémon",i.GROUND,i.GHOST,1.6,66.6,O.WANDERING_SPIRIT,O.NONE,O.NONE,483,58,95,145,50,105,30,90,50,169,_.MEDIUM_FAST,50,!1),new c(e.MILCERY,8,!1,!1,!1,"Cream Pokémon",i.FAIRY,null,.2,.3,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,270,45,40,40,50,61,34,200,50,54,_.MEDIUM_FAST,0,!1),new c(e.ALCREMIE,8,!1,!1,!1,"Cream Pokémon",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,_.MEDIUM_FAST,0,!1,!0,new p("Vanilla Cream","vanilla-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,"",!0),new p("Ruby Cream","ruby-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new p("Matcha Cream","matcha-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new p("Mint Cream","mint-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new p("Lemon Cream","lemon-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new p("Salted Cream","salted-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new p("Ruby Swirl","ruby-swirl",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new p("Caramel Swirl","caramel-swirl",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new p("Rainbow Swirl","rainbow-swirl",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.FAIRY,null,30,999.9,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,595,135,60,75,130,131,64,100,50,173)),new c(e.FALINKS,8,!1,!1,!1,"Formation Pokémon",i.FIGHTING,null,3,62,O.BATTLE_ARMOR,O.NONE,O.DEFIANT,470,65,100,100,70,60,75,45,50,165,_.MEDIUM_FAST,null,!1),new c(e.PINCURCHIN,8,!1,!1,!1,"Sea Urchin Pokémon",i.ELECTRIC,null,.3,1,O.LIGHTNING_ROD,O.NONE,O.ELECTRIC_SURGE,435,48,101,95,91,85,15,75,50,152,_.MEDIUM_FAST,50,!1),new c(e.SNOM,8,!1,!1,!1,"Worm Pokémon",i.ICE,i.BUG,.3,3.8,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,185,30,25,35,45,30,20,190,50,37,_.MEDIUM_FAST,50,!1),new c(e.FROSMOTH,8,!1,!1,!1,"Frost Moth Pokémon",i.ICE,i.BUG,1.3,42,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,475,70,65,60,125,90,65,75,50,166,_.MEDIUM_FAST,50,!1),new c(e.STONJOURNER,8,!1,!1,!1,"Big Rock Pokémon",i.ROCK,null,2.5,520,O.POWER_SPOT,O.NONE,O.NONE,470,100,125,135,20,20,70,60,50,165,_.SLOW,50,!1),new c(e.EISCUE,8,!1,!1,!1,"Penguin Pokémon",i.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,_.SLOW,50,!1,!1,new p("Ice Face","",i.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,!1,null,!0),new p("No Ice","no-ice",i.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,70,65,50,130,60,50,165)),new c(e.INDEEDEE,8,!1,!1,!1,"Emotion Pokémon",i.PSYCHIC,i.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,_.FAST,50,!1,!1,new p("Male","male",i.PSYCHIC,i.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,!1,"",!0),new p("Female","female",i.PSYCHIC,i.NORMAL,.9,28,O.OWN_TEMPO,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,70,55,65,95,105,85,30,140,166,!1,null,!0)),new c(e.MORPEKO,8,!1,!1,!1,"Two-Sided Pokémon",i.ELECTRIC,i.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,_.MEDIUM_FAST,50,!1,!1,new p("Full Belly Mode","full-belly",i.ELECTRIC,i.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,!1,"",!0),new p("Hangry Mode","hangry",i.ELECTRIC,i.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153)),new c(e.CUFANT,8,!1,!1,!1,"Copperderm Pokémon",i.STEEL,null,1.2,100,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,330,72,80,49,40,49,40,190,50,66,_.MEDIUM_FAST,50,!1),new c(e.COPPERAJAH,8,!1,!1,!1,"Copperderm Pokémon",i.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.STEEL,i.GROUND,23,999.9,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,600,167,155,89,80,89,20,90,50,175)),new c(e.DRACOZOLT,8,!1,!1,!1,"Fossil Pokémon",i.ELECTRIC,i.DRAGON,1.8,190,O.VOLT_ABSORB,O.HUSTLE,O.SAND_RUSH,505,90,100,90,80,70,75,45,50,177,_.SLOW,null,!1),new c(e.ARCTOZOLT,8,!1,!1,!1,"Fossil Pokémon",i.ELECTRIC,i.ICE,2.3,150,O.VOLT_ABSORB,O.STATIC,O.SLUSH_RUSH,505,90,100,90,90,80,55,45,50,177,_.SLOW,null,!1),new c(e.DRACOVISH,8,!1,!1,!1,"Fossil Pokémon",i.WATER,i.DRAGON,2.3,215,O.WATER_ABSORB,O.STRONG_JAW,O.SAND_RUSH,505,90,90,100,70,80,75,45,50,177,_.SLOW,null,!1),new c(e.ARCTOVISH,8,!1,!1,!1,"Fossil Pokémon",i.WATER,i.ICE,2,175,O.WATER_ABSORB,O.ICE_BODY,O.SLUSH_RUSH,505,90,90,100,80,90,55,45,50,177,_.SLOW,null,!1),new c(e.DURALUDON,8,!1,!1,!1,"Alloy Pokémon",i.STEEL,i.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,_.MEDIUM_FAST,50,!1,!0,new p("Normal","",i.STEEL,i.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,!1,null,!0),new p("G-Max",oe.GIGANTAMAX,i.STEEL,i.DRAGON,43,999.9,O.LIGHTNING_ROD,O.LIGHTNING_ROD,O.LIGHTNING_ROD,635,100,110,120,175,60,70,45,50,187)),new c(e.DREEPY,8,!1,!1,!1,"Lingering Pokémon",i.DRAGON,i.GHOST,.5,2,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,270,28,60,30,40,30,82,45,50,54,_.SLOW,50,!1),new c(e.DRAKLOAK,8,!1,!1,!1,"Caretaker Pokémon",i.DRAGON,i.GHOST,1.4,11,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,410,68,80,50,60,50,102,45,50,144,_.SLOW,50,!1),new c(e.DRAGAPULT,8,!1,!1,!1,"Stealth Pokémon",i.DRAGON,i.GHOST,3,50,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,600,88,120,75,100,75,142,45,50,300,_.SLOW,50,!1),new c(e.ZACIAN,8,!1,!0,!1,"Warrior Pokémon",i.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,_.SLOW,null,!1,!1,new p("Hero of Many Battles","hero-of-many-battles",i.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new p("Crowned","crowned",i.FAIRY,i.STEEL,2.8,355,O.INTREPID_SWORD,O.NONE,O.NONE,700,92,150,115,80,115,148,10,0,335)),new c(e.ZAMAZENTA,8,!1,!0,!1,"Warrior Pokémon",i.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,_.SLOW,null,!1,!1,new p("Hero of Many Battles","hero-of-many-battles",i.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new p("Crowned","crowned",i.FIGHTING,i.STEEL,2.9,785,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,700,92,120,140,80,140,128,10,0,335)),new c(e.ETERNATUS,8,!1,!0,!1,"Gigantic Pokémon",i.POISON,i.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,_.SLOW,null,!1,!0,new p("Normal","",i.POISON,i.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,!1,null,!0),new p("E-Max","eternamax",i.POISON,i.DRAGON,100,999.9,O.PRESSURE,O.NONE,O.NONE,1125,255,115,250,125,250,130,255,0,345)),new c(e.KUBFU,8,!0,!1,!1,"Wushu Pokémon",i.FIGHTING,null,.6,12,O.INNER_FOCUS,O.NONE,O.NONE,385,60,90,60,53,50,72,3,50,77,_.SLOW,87.5,!1),new c(e.URSHIFU,8,!0,!1,!1,"Wushu Pokémon",i.FIGHTING,i.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,_.SLOW,87.5,!1,!0,new p("Single Strike Style","single-strike",i.FIGHTING,i.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,"",!0),new p("Rapid Strike Style","rapid-strike",i.FIGHTING,i.WATER,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,null,!0),new p("G-Max Single Strike Style",oe.GIGANTAMAX_SINGLE,i.FIGHTING,i.DARK,29,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,150,115,73,70,117,3,50,275),new p("G-Max Rapid Strike Style",oe.GIGANTAMAX_RAPID,i.FIGHTING,i.WATER,26,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,150,115,73,70,117,3,50,275)),new c(e.ZARUDE,8,!1,!1,!0,"Rogue Monkey Pokémon",i.DARK,i.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,_.SLOW,null,!1,!1,new p("Normal","",i.DARK,i.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0),new p("Dada","dada",i.DARK,i.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0)),new c(e.REGIELEKI,8,!0,!1,!1,"Electron Pokémon",i.ELECTRIC,null,1.2,145,O.TRANSISTOR,O.NONE,O.NONE,580,80,100,50,100,50,200,3,35,290,_.SLOW,null,!1),new c(e.REGIDRAGO,8,!0,!1,!1,"Dragon Orb Pokémon",i.DRAGON,null,2.1,200,O.DRAGONS_MAW,O.NONE,O.NONE,580,200,100,50,100,50,80,3,35,290,_.SLOW,null,!1),new c(e.GLASTRIER,8,!0,!1,!1,"Wild Horse Pokémon",i.ICE,null,2.2,800,O.CHILLING_NEIGH,O.NONE,O.NONE,580,100,145,130,65,110,30,3,35,290,_.SLOW,null,!1),new c(e.SPECTRIER,8,!0,!1,!1,"Swift Horse Pokémon",i.GHOST,null,2,44.5,O.GRIM_NEIGH,O.NONE,O.NONE,580,100,65,60,145,80,130,3,35,290,_.SLOW,null,!1),new c(e.CALYREX,8,!1,!0,!1,"King Pokémon",i.PSYCHIC,i.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,_.SLOW,null,!1,!0,new p("Normal","",i.PSYCHIC,i.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,!1,null,!0),new p("Ice","ice",i.PSYCHIC,i.ICE,2.4,809.1,O.AS_ONE_GLASTRIER,O.NONE,O.NONE,680,100,165,150,85,130,50,3,100,250),new p("Shadow","shadow",i.PSYCHIC,i.GHOST,2.4,53.6,O.AS_ONE_SPECTRIER,O.NONE,O.NONE,680,100,85,80,165,100,150,3,100,250)),new c(e.WYRDEER,8,!1,!1,!1,"Big Horn Pokémon",i.NORMAL,i.PSYCHIC,1.8,95.1,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,525,103,105,72,105,75,65,135,50,263,_.SLOW,50,!1),new c(e.KLEAVOR,8,!1,!1,!1,"Axe Pokémon",i.BUG,i.ROCK,1.8,89,O.SWARM,O.SHEER_FORCE,O.SHARPNESS,500,70,135,95,45,70,85,115,50,175,_.MEDIUM_FAST,50,!1),new c(e.URSALUNA,8,!1,!1,!1,"Peat Pokémon",i.GROUND,i.NORMAL,2.4,290,O.GUTS,O.BULLETPROOF,O.UNNERVE,550,130,140,105,45,80,50,75,50,275,_.MEDIUM_FAST,50,!1),new c(e.BASCULEGION,8,!1,!1,!1,"Big Fish Pokémon",i.WATER,i.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,_.MEDIUM_FAST,50,!1,!1,new p("Male","male",i.WATER,i.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,!1,"",!0),new p("Female","female",i.WATER,i.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,92,65,100,75,78,135,50,265,!1,null,!0)),new c(e.SNEASLER,8,!1,!1,!1,"Free Climb Pokémon",i.FIGHTING,i.POISON,1.3,43,O.PRESSURE,O.UNBURDEN,O.POISON_TOUCH,510,80,130,60,40,80,120,135,50,102,_.MEDIUM_SLOW,50,!1),new c(e.OVERQWIL,8,!1,!1,!1,"Pin Cluster Pokémon",i.DARK,i.POISON,2.5,60.5,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,510,85,115,95,65,65,85,135,50,179,_.MEDIUM_FAST,50,!1),new c(e.ENAMORUS,8,!0,!1,!1,"Love-Hate Pokémon",i.FAIRY,i.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,_.SLOW,0,!1,!0,new p("Incarnate Forme","incarnate",i.FAIRY,i.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,!1,null,!0),new p("Therian Forme","therian",i.FAIRY,i.FLYING,1.6,48,O.OVERCOAT,O.NONE,O.OVERCOAT,580,74,115,110,135,100,46,3,50,116)),new c(e.SPRIGATITO,9,!1,!1,!1,"Grass Cat Pokémon",i.GRASS,null,.4,4.1,O.OVERGROW,O.NONE,O.PROTEAN,310,40,61,54,45,45,65,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.FLORAGATO,9,!1,!1,!1,"Grass Cat Pokémon",i.GRASS,null,.9,12.2,O.OVERGROW,O.NONE,O.PROTEAN,410,61,80,63,60,63,83,45,50,144,_.MEDIUM_SLOW,87.5,!1),new c(e.MEOWSCARADA,9,!1,!1,!1,"Magician Pokémon",i.GRASS,i.DARK,1.5,31.2,O.OVERGROW,O.NONE,O.PROTEAN,530,76,110,70,81,70,123,45,50,265,_.MEDIUM_SLOW,87.5,!1),new c(e.FUECOCO,9,!1,!1,!1,"Fire Croc Pokémon",i.FIRE,null,.4,9.8,O.BLAZE,O.NONE,O.UNAWARE,310,67,45,59,63,40,36,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.CROCALOR,9,!1,!1,!1,"Fire Croc Pokémon",i.FIRE,null,1,30.7,O.BLAZE,O.NONE,O.UNAWARE,411,81,55,78,90,58,49,45,50,144,_.MEDIUM_SLOW,87.5,!1),new c(e.SKELEDIRGE,9,!1,!1,!1,"Singer Pokémon",i.FIRE,i.GHOST,1.6,326.5,O.BLAZE,O.NONE,O.UNAWARE,530,104,75,100,110,75,66,45,50,265,_.MEDIUM_SLOW,87.5,!1),new c(e.QUAXLY,9,!1,!1,!1,"Duckling Pokémon",i.WATER,null,.5,6.1,O.TORRENT,O.NONE,O.MOXIE,310,55,65,45,50,45,50,45,50,62,_.MEDIUM_SLOW,87.5,!1),new c(e.QUAXWELL,9,!1,!1,!1,"Practicing Pokémon",i.WATER,null,1.2,21.5,O.TORRENT,O.NONE,O.MOXIE,410,70,85,65,65,60,65,45,50,144,_.MEDIUM_SLOW,87.5,!1),new c(e.QUAQUAVAL,9,!1,!1,!1,"Dancer Pokémon",i.WATER,i.FIGHTING,1.8,61.9,O.TORRENT,O.NONE,O.MOXIE,530,85,120,80,85,75,85,45,50,265,_.MEDIUM_SLOW,87.5,!1),new c(e.LECHONK,9,!1,!1,!1,"Hog Pokémon",i.NORMAL,null,.5,10.2,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,254,54,45,40,35,45,35,255,50,51,_.MEDIUM_FAST,50,!1),new c(e.OINKOLOGNE,9,!1,!1,!1,"Hog Pokémon",i.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,_.MEDIUM_FAST,50,!1,!1,new p("Male","male",i.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,!1,"",!0),new p("Female","female",i.NORMAL,null,1,120,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,489,115,90,70,59,90,65,100,50,171,!1,null,!0)),new c(e.TAROUNTULA,9,!1,!1,!1,"String Ball Pokémon",i.BUG,null,.3,4,O.INSOMNIA,O.NONE,O.STAKEOUT,210,35,41,45,29,40,20,255,50,42,_.ERRATIC,50,!1),new c(e.SPIDOPS,9,!1,!1,!1,"Trap Pokémon",i.BUG,null,1,16.5,O.INSOMNIA,O.NONE,O.STAKEOUT,404,60,79,92,52,86,35,120,50,141,_.ERRATIC,50,!1),new c(e.NYMBLE,9,!1,!1,!1,"Grasshopper Pokémon",i.BUG,null,.2,1,O.SWARM,O.NONE,O.TINTED_LENS,210,33,46,40,21,25,45,190,20,42,_.MEDIUM_FAST,50,!1),new c(e.LOKIX,9,!1,!1,!1,"Grasshopper Pokémon",i.BUG,i.DARK,1,17.5,O.SWARM,O.NONE,O.TINTED_LENS,450,71,102,78,52,55,92,30,0,158,_.MEDIUM_FAST,50,!1),new c(e.PAWMI,9,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,null,.3,2.5,O.STATIC,O.NATURAL_CURE,O.IRON_FIST,240,45,50,20,40,25,60,190,50,48,_.MEDIUM_FAST,50,!1),new c(e.PAWMO,9,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,i.FIGHTING,.4,6.5,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,350,60,75,40,50,40,85,80,50,123,_.MEDIUM_FAST,50,!1),new c(e.PAWMOT,9,!1,!1,!1,"Hands-On Pokémon",i.ELECTRIC,i.FIGHTING,.9,41,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,490,70,115,70,70,60,105,45,50,245,_.MEDIUM_FAST,50,!1),new c(e.TANDEMAUS,9,!1,!1,!1,"Couple Pokémon",i.NORMAL,null,.3,1.8,O.RUN_AWAY,O.PICKUP,O.OWN_TEMPO,305,50,50,45,40,45,75,150,50,61,_.FAST,null,!1),new c(e.MAUSHOLD,9,!1,!1,!1,"Family Pokémon",i.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165,_.FAST,null,!1,!1,new p("Family of Four","four",i.NORMAL,null,.3,2.8,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165),new p("Family of Three","three",i.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165)),new c(e.FIDOUGH,9,!1,!1,!1,"Puppy Pokémon",i.FAIRY,null,.3,10.9,O.OWN_TEMPO,O.NONE,O.KLUTZ,312,37,55,70,30,55,65,190,50,62,_.MEDIUM_SLOW,50,!1),new c(e.DACHSBUN,9,!1,!1,!1,"Dog Pokémon",i.FAIRY,null,.5,14.9,O.WELL_BAKED_BODY,O.NONE,O.AROMA_VEIL,477,57,80,115,50,80,95,90,50,167,_.MEDIUM_SLOW,50,!1),new c(e.SMOLIV,9,!1,!1,!1,"Olive Pokémon",i.GRASS,i.NORMAL,.3,6.5,O.EARLY_BIRD,O.NONE,O.HARVEST,260,41,35,45,58,51,30,255,50,52,_.MEDIUM_SLOW,50,!1),new c(e.DOLLIV,9,!1,!1,!1,"Olive Pokémon",i.GRASS,i.NORMAL,.6,11.9,O.EARLY_BIRD,O.NONE,O.HARVEST,354,52,53,60,78,78,33,120,50,124,_.MEDIUM_SLOW,50,!1),new c(e.ARBOLIVA,9,!1,!1,!1,"Olive Pokémon",i.GRASS,i.NORMAL,1.4,48.2,O.SEED_SOWER,O.NONE,O.HARVEST,510,78,69,90,125,109,39,45,50,255,_.MEDIUM_SLOW,50,!1),new c(e.SQUAWKABILLY,9,!1,!1,!1,"Parrot Pokémon",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,_.ERRATIC,50,!1,!1,new p("Green Plumage","green-plumage",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new p("Blue Plumage","blue-plumage",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new p("Yellow Plumage","yellow-plumage",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new p("White Plumage","white-plumage",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0)),new c(e.NACLI,9,!1,!1,!1,"Rock Salt Pokémon",i.ROCK,null,.4,16,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,280,55,55,75,35,35,25,255,50,56,_.MEDIUM_SLOW,50,!1),new c(e.NACLSTACK,9,!1,!1,!1,"Rock Salt Pokémon",i.ROCK,null,.6,105,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,355,60,60,100,35,65,35,120,50,124,_.MEDIUM_SLOW,50,!1),new c(e.GARGANACL,9,!1,!1,!1,"Rock Salt Pokémon",i.ROCK,null,2.3,240,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,500,100,100,130,45,90,35,45,50,250,_.MEDIUM_SLOW,50,!1),new c(e.CHARCADET,9,!1,!1,!1,"Fire Child Pokémon",i.FIRE,null,.6,10.5,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,255,40,50,40,50,40,35,90,50,51,_.SLOW,50,!1),new c(e.ARMAROUGE,9,!1,!1,!1,"Fire Warrior Pokémon",i.FIRE,i.PSYCHIC,1.5,85,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,85,60,100,125,80,75,25,20,263,_.SLOW,50,!1),new c(e.CERULEDGE,9,!1,!1,!1,"Fire Blades Pokémon",i.FIRE,i.GHOST,1.6,62,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,75,125,80,60,100,85,25,20,263,_.SLOW,50,!1),new c(e.TADBULB,9,!1,!1,!1,"EleTadpole Pokémon",i.ELECTRIC,null,.3,.4,O.OWN_TEMPO,O.STATIC,O.DAMP,272,61,31,41,59,35,45,190,50,54,_.MEDIUM_FAST,50,!1),new c(e.BELLIBOLT,9,!1,!1,!1,"EleFrog Pokémon",i.ELECTRIC,null,1.2,113,O.ELECTROMORPHOSIS,O.STATIC,O.DAMP,495,109,64,91,103,83,45,50,50,173,_.MEDIUM_FAST,50,!1),new c(e.WATTREL,9,!1,!1,!1,"Storm Petrel Pokémon",i.ELECTRIC,i.FLYING,.4,3.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,280,40,40,35,55,40,70,180,50,56,_.MEDIUM_SLOW,50,!1),new c(e.KILOWATTREL,9,!1,!1,!1,"Frigatebird Pokémon",i.ELECTRIC,i.FLYING,1.4,38.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,490,70,70,60,105,60,125,90,50,172,_.MEDIUM_SLOW,50,!1),new c(e.MASCHIFF,9,!1,!1,!1,"Rascal Pokémon",i.DARK,null,.5,16,O.INTIMIDATE,O.RUN_AWAY,O.STAKEOUT,340,60,78,60,40,51,51,150,50,68,_.MEDIUM_SLOW,50,!1),new c(e.MABOSSTIFF,9,!1,!1,!1,"Boss Pokémon",i.DARK,null,1.1,61,O.INTIMIDATE,O.GUARD_DOG,O.STAKEOUT,505,80,120,90,60,70,85,75,50,177,_.MEDIUM_SLOW,50,!1),new c(e.SHROODLE,9,!1,!1,!1,"Toxic Mouse Pokémon",i.POISON,i.NORMAL,.2,.7,O.UNBURDEN,O.PICKPOCKET,O.PRANKSTER,290,40,65,35,40,35,75,190,50,58,_.MEDIUM_SLOW,50,!1),new c(e.GRAFAIAI,9,!1,!1,!1,"Toxic Monkey Pokémon",i.POISON,i.NORMAL,.7,27.2,O.UNBURDEN,O.POISON_TOUCH,O.PRANKSTER,485,63,95,65,80,72,110,90,50,170,_.MEDIUM_SLOW,50,!1),new c(e.BRAMBLIN,9,!1,!1,!1,"Tumbleweed Pokémon",i.GRASS,i.GHOST,.6,.6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,275,40,65,30,45,35,60,190,50,55,_.MEDIUM_FAST,50,!1),new c(e.BRAMBLEGHAST,9,!1,!1,!1,"Tumbleweed Pokémon",i.GRASS,i.GHOST,1.2,6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,480,55,115,70,80,70,90,45,50,168,_.MEDIUM_FAST,50,!1),new c(e.TOEDSCOOL,9,!1,!1,!1,"Woodear Pokémon",i.GROUND,i.GRASS,.9,33,O.MYCELIUM_MIGHT,O.NONE,O.NONE,335,40,40,35,50,100,70,190,50,67,_.MEDIUM_SLOW,50,!1),new c(e.TOEDSCRUEL,9,!1,!1,!1,"Woodear Pokémon",i.GROUND,i.GRASS,1.9,58,O.MYCELIUM_MIGHT,O.NONE,O.NONE,515,80,70,65,80,120,100,90,50,180,_.MEDIUM_SLOW,50,!1),new c(e.KLAWF,9,!1,!1,!1,"Ambush Pokémon",i.ROCK,null,1.3,79,O.ANGER_SHELL,O.SHELL_ARMOR,O.REGENERATOR,450,70,100,115,35,55,75,120,50,158,_.MEDIUM_FAST,50,!1),new c(e.CAPSAKID,9,!1,!1,!1,"Spicy Pepper Pokémon",i.GRASS,null,.3,3,O.CHLOROPHYLL,O.INSOMNIA,O.KLUTZ,304,50,62,40,62,40,50,190,50,61,_.MEDIUM_FAST,50,!1),new c(e.SCOVILLAIN,9,!1,!1,!1,"Spicy Pepper Pokémon",i.GRASS,i.FIRE,.9,15,O.CHLOROPHYLL,O.INSOMNIA,O.MOODY,486,65,108,65,108,65,75,75,50,170,_.MEDIUM_FAST,50,!1),new c(e.RELLOR,9,!1,!1,!1,"Rolling Pokémon",i.BUG,null,.2,1,O.COMPOUND_EYES,O.NONE,O.SHED_SKIN,270,41,50,60,31,58,30,190,50,54,_.FAST,50,!1),new c(e.RABSCA,9,!1,!1,!1,"Rolling Pokémon",i.BUG,i.PSYCHIC,.3,3.5,O.SYNCHRONIZE,O.NONE,O.TELEPATHY,470,75,50,85,115,100,45,45,50,165,_.FAST,50,!1),new c(e.FLITTLE,9,!1,!1,!1,"Frill Pokémon",i.PSYCHIC,null,.2,1.5,O.ANTICIPATION,O.FRISK,O.SPEED_BOOST,255,30,35,30,55,30,75,120,50,51,_.MEDIUM_SLOW,50,!1),new c(e.ESPATHRA,9,!1,!1,!1,"Ostrich Pokémon",i.PSYCHIC,null,1.9,90,O.OPPORTUNIST,O.FRISK,O.SPEED_BOOST,481,95,60,60,101,60,105,60,50,168,_.MEDIUM_SLOW,50,!1),new c(e.TINKATINK,9,!1,!1,!1,"Metalsmith Pokémon",i.FAIRY,i.STEEL,.4,8.9,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,297,50,45,45,35,64,58,190,50,59,_.MEDIUM_SLOW,0,!1),new c(e.TINKATUFF,9,!1,!1,!1,"Hammer Pokémon",i.FAIRY,i.STEEL,.7,59.1,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,380,65,55,55,45,82,78,90,50,133,_.MEDIUM_SLOW,0,!1),new c(e.TINKATON,9,!1,!1,!1,"Hammer Pokémon",i.FAIRY,i.STEEL,.7,112.8,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,506,85,75,77,70,105,94,45,50,253,_.MEDIUM_SLOW,0,!1),new c(e.WIGLETT,9,!1,!1,!1,"Garden Eel Pokémon",i.WATER,null,1.2,1.8,O.GOOEY,O.RATTLED,O.SAND_VEIL,245,10,55,25,35,25,95,255,50,49,_.MEDIUM_FAST,50,!1),new c(e.WUGTRIO,9,!1,!1,!1,"Garden Eel Pokémon",i.WATER,null,1.2,5.4,O.GOOEY,O.RATTLED,O.SAND_VEIL,425,35,100,50,50,70,120,50,50,149,_.MEDIUM_FAST,50,!1),new c(e.BOMBIRDIER,9,!1,!1,!1,"Item Drop Pokémon",i.FLYING,i.DARK,1.5,42.9,O.BIG_PECKS,O.KEEN_EYE,O.ROCKY_PAYLOAD,485,70,103,85,60,85,82,25,50,243,_.SLOW,50,!1),new c(e.FINIZEN,9,!1,!1,!1,"Dolphin Pokémon",i.WATER,null,1.3,60.2,O.WATER_VEIL,O.NONE,O.NONE,315,70,45,40,45,40,75,200,50,63,_.SLOW,50,!1),new c(e.PALAFIN,9,!1,!1,!1,"Dolphin Pokémon",i.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.NONE,457,100,70,72,53,62,100,45,50,160,_.SLOW,50,!1,!0,new p("Zero Form","zero",i.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,457,100,70,72,53,62,100,45,50,160,!1,null,!0),new p("Hero Form","hero",i.WATER,null,1.8,97.4,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,650,100,160,97,106,87,100,45,50,160)),new c(e.VAROOM,9,!1,!1,!1,"Single-Cyl Pokémon",i.STEEL,i.POISON,1,35,O.OVERCOAT,O.NONE,O.SLOW_START,300,45,70,63,30,45,47,190,50,60,_.MEDIUM_FAST,50,!1),new c(e.REVAVROOM,9,!1,!1,!1,"Multi-Cyl Pokémon",i.STEEL,i.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,_.MEDIUM_FAST,50,!1,!1,new p("Normal","",i.STEEL,i.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,!1,null,!0),new p("Segin Starmobile","segin-starmobile",i.STEEL,i.DARK,1.8,240,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,110,129,100,77,79,105,75,50,175),new p("Schedar Starmobile","schedar-starmobile",i.STEEL,i.FIRE,1.8,240,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,600,110,129,100,77,79,105,75,50,175),new p("Navi Starmobile","navi-starmobile",i.STEEL,i.POISON,1.8,240,O.TOXIC_DEBRIS,O.NONE,O.TOXIC_DEBRIS,600,110,129,100,77,79,105,75,50,175),new p("Ruchbah Starmobile","ruchbah-starmobile",i.STEEL,i.FAIRY,1.8,240,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,600,110,129,100,77,79,105,75,50,175),new p("Caph Starmobile","caph-starmobile",i.STEEL,i.FIGHTING,1.8,240,O.STAMINA,O.NONE,O.STAMINA,600,110,129,100,77,79,105,75,50,175)),new c(e.CYCLIZAR,9,!1,!1,!1,"Mount Pokémon",i.DRAGON,i.NORMAL,1.6,63,O.SHED_SKIN,O.NONE,O.REGENERATOR,501,70,95,65,85,65,121,190,50,175,_.MEDIUM_SLOW,50,!1),new c(e.ORTHWORM,9,!1,!1,!1,"Earthworm Pokémon",i.STEEL,null,2.5,310,O.EARTH_EATER,O.NONE,O.SAND_VEIL,480,70,85,145,60,55,65,25,50,240,_.SLOW,50,!1),new c(e.GLIMMET,9,!1,!1,!1,"Ore Pokémon",i.ROCK,i.POISON,.7,8,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,350,48,35,42,105,60,60,70,50,70,_.MEDIUM_SLOW,50,!1),new c(e.GLIMMORA,9,!1,!1,!1,"Ore Pokémon",i.ROCK,i.POISON,1.5,45,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,525,83,55,90,130,81,86,25,50,184,_.MEDIUM_SLOW,50,!1),new c(e.GREAVARD,9,!1,!1,!1,"Ghost Dog Pokémon",i.GHOST,null,.6,35,O.PICKUP,O.NONE,O.FLUFFY,290,50,61,60,30,55,34,120,50,58,_.MEDIUM_SLOW,50,!1),new c(e.HOUNDSTONE,9,!1,!1,!1,"Ghost Dog Pokémon",i.GHOST,null,2,15,O.SAND_RUSH,O.NONE,O.FLUFFY,488,72,101,100,50,97,68,60,50,171,_.MEDIUM_SLOW,50,!1),new c(e.FLAMIGO,9,!1,!1,!1,"Synchronize Pokémon",i.FLYING,i.FIGHTING,1.6,37,O.SCRAPPY,O.TANGLED_FEET,O.COSTAR,500,82,115,74,75,64,90,100,50,175,_.MEDIUM_SLOW,50,!1),new c(e.CETODDLE,9,!1,!1,!1,"Terra Whale Pokémon",i.ICE,null,1.2,45,O.THICK_FAT,O.SNOW_CLOAK,O.SHEER_FORCE,334,108,68,45,30,40,43,150,50,67,_.MEDIUM_SLOW,50,!1),new c(e.CETITAN,9,!1,!1,!1,"Terra Whale Pokémon",i.ICE,null,4.5,700,O.THICK_FAT,O.SLUSH_RUSH,O.SHEER_FORCE,521,170,113,65,45,55,73,50,50,182,_.MEDIUM_SLOW,50,!1),new c(e.VELUZA,9,!1,!1,!1,"Jettison Pokémon",i.WATER,i.PSYCHIC,2.5,90,O.MOLD_BREAKER,O.NONE,O.SHARPNESS,478,90,102,73,78,65,70,100,50,167,_.FAST,50,!1),new c(e.DONDOZO,9,!1,!1,!1,"Big Catfish Pokémon",i.WATER,null,12,220,O.UNAWARE,O.OBLIVIOUS,O.WATER_VEIL,530,150,100,115,65,65,35,25,50,265,_.SLOW,50,!1),new c(e.TATSUGIRI,9,!1,!1,!1,"Mimicry Pokémon",i.DRAGON,i.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,_.MEDIUM_SLOW,50,!1,!1,new p("Curly Form","curly",i.DRAGON,i.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new p("Droopy Form","droopy",i.DRAGON,i.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new p("Stretchy Form","stretchy",i.DRAGON,i.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0)),new c(e.ANNIHILAPE,9,!1,!1,!1,"Rage Monkey Pokémon",i.FIGHTING,i.GHOST,1.2,56,O.VITAL_SPIRIT,O.INNER_FOCUS,O.DEFIANT,535,110,115,80,50,90,90,45,50,268,_.MEDIUM_FAST,50,!1),new c(e.CLODSIRE,9,!1,!1,!1,"Spiny Fish Pokémon",i.POISON,i.GROUND,1.8,223,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,430,130,75,60,45,100,20,90,50,151,_.MEDIUM_FAST,50,!1),new c(e.FARIGIRAF,9,!1,!1,!1,"Long Neck Pokémon",i.NORMAL,i.PSYCHIC,3.2,160,O.CUD_CHEW,O.ARMOR_TAIL,O.SAP_SIPPER,520,120,90,70,110,70,60,45,50,260,_.MEDIUM_FAST,50,!1),new c(e.DUDUNSPARCE,9,!1,!1,!1,"Land Snake Pokémon",i.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,_.MEDIUM_FAST,50,!1,!1,new p("Two-Segment Form","two-segment",i.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,!1,""),new p("Three-Segment Form","three-segment",i.NORMAL,null,4.5,47.4,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182)),new c(e.KINGAMBIT,9,!1,!1,!1,"Big Blade Pokémon",i.DARK,i.STEEL,2,120,O.DEFIANT,O.SUPREME_OVERLORD,O.PRESSURE,550,100,135,120,60,85,50,25,50,275,_.MEDIUM_FAST,50,!1),new c(e.GREAT_TUSK,9,!1,!1,!1,"Paradox Pokémon",i.GROUND,i.FIGHTING,2.2,320,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,131,131,53,53,87,30,0,285,_.SLOW,null,!1),new c(e.SCREAM_TAIL,9,!1,!1,!1,"Paradox Pokémon",i.FAIRY,i.PSYCHIC,1.2,8,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,65,99,65,115,111,50,0,285,_.SLOW,null,!1),new c(e.BRUTE_BONNET,9,!1,!1,!1,"Paradox Pokémon",i.GRASS,i.DARK,1.2,21,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,111,127,99,79,99,55,50,0,285,_.SLOW,null,!1),new c(e.FLUTTER_MANE,9,!1,!1,!1,"Paradox Pokémon",i.GHOST,i.FAIRY,1.4,4,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,55,55,55,135,135,135,30,0,285,_.SLOW,null,!1),new c(e.SLITHER_WING,9,!1,!1,!1,"Paradox Pokémon",i.BUG,i.FIGHTING,3.2,92,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,135,79,85,105,81,30,0,285,_.SLOW,null,!1),new c(e.SANDY_SHOCKS,9,!1,!1,!1,"Paradox Pokémon",i.ELECTRIC,i.GROUND,2.3,60,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,81,97,121,85,101,30,0,285,_.SLOW,null,!1),new c(e.IRON_TREADS,9,!1,!1,!1,"Paradox Pokémon",i.GROUND,i.STEEL,.9,240,O.QUARK_DRIVE,O.NONE,O.NONE,570,90,112,120,72,70,106,30,0,285,_.SLOW,null,!1),new c(e.IRON_BUNDLE,9,!1,!1,!1,"Paradox Pokémon",i.ICE,i.WATER,.6,11,O.QUARK_DRIVE,O.NONE,O.NONE,570,56,80,114,124,60,136,50,0,285,_.SLOW,null,!1),new c(e.IRON_HANDS,9,!1,!1,!1,"Paradox Pokémon",i.FIGHTING,i.ELECTRIC,1.8,380.7,O.QUARK_DRIVE,O.NONE,O.NONE,570,154,140,108,50,68,50,50,0,285,_.SLOW,null,!1),new c(e.IRON_JUGULIS,9,!1,!1,!1,"Paradox Pokémon",i.DARK,i.FLYING,1.3,111,O.QUARK_DRIVE,O.NONE,O.NONE,570,94,80,86,122,80,108,30,0,285,_.SLOW,null,!1),new c(e.IRON_MOTH,9,!1,!1,!1,"Paradox Pokémon",i.FIRE,i.POISON,1.2,36,O.QUARK_DRIVE,O.NONE,O.NONE,570,80,70,60,140,110,110,30,0,285,_.SLOW,null,!1),new c(e.IRON_THORNS,9,!1,!1,!1,"Paradox Pokémon",i.ROCK,i.ELECTRIC,1.6,303,O.QUARK_DRIVE,O.NONE,O.NONE,570,100,134,110,70,84,72,30,0,285,_.SLOW,null,!1),new c(e.FRIGIBAX,9,!1,!1,!1,"Ice Fin Pokémon",i.DRAGON,i.ICE,.5,17,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,320,65,75,45,35,45,55,45,50,64,_.SLOW,50,!1),new c(e.ARCTIBAX,9,!1,!1,!1,"Ice Fin Pokémon",i.DRAGON,i.ICE,.8,30,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,423,90,95,66,45,65,62,25,50,148,_.SLOW,50,!1),new c(e.BAXCALIBUR,9,!1,!1,!1,"Ice Dragon Pokémon",i.DRAGON,i.ICE,2.1,210,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,600,115,145,92,75,86,87,10,50,300,_.SLOW,50,!1),new c(e.GIMMIGHOUL,9,!1,!1,!1,"Coin Chest Pokémon",i.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,_.SLOW,null,!1,!1,new p("Chest Form","chest",i.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,!1,"",!0),new p("Roaming Form","roaming",i.GHOST,null,.1,1,O.RUN_AWAY,O.NONE,O.NONE,300,45,30,25,75,45,80,45,50,60,!1,null,!0)),new c(e.GHOLDENGO,9,!1,!1,!1,"Coin Entity Pokémon",i.STEEL,i.GHOST,1.2,30,O.GOOD_AS_GOLD,O.NONE,O.NONE,550,87,60,95,133,91,84,45,50,275,_.SLOW,null,!1),new c(e.WO_CHIEN,9,!0,!1,!1,"Ruinous Pokémon",i.DARK,i.GRASS,1.5,74.2,O.TABLETS_OF_RUIN,O.NONE,O.NONE,570,85,85,100,95,135,70,6,0,285,_.SLOW,null,!1),new c(e.CHIEN_PAO,9,!0,!1,!1,"Ruinous Pokémon",i.DARK,i.ICE,1.9,152.2,O.SWORD_OF_RUIN,O.NONE,O.NONE,570,80,120,80,90,65,135,6,0,285,_.SLOW,null,!1),new c(e.TING_LU,9,!0,!1,!1,"Ruinous Pokémon",i.DARK,i.GROUND,2.7,699.7,O.VESSEL_OF_RUIN,O.NONE,O.NONE,570,155,110,125,55,80,45,6,0,285,_.SLOW,null,!1),new c(e.CHI_YU,9,!0,!1,!1,"Ruinous Pokémon",i.DARK,i.FIRE,.4,4.9,O.BEADS_OF_RUIN,O.NONE,O.NONE,570,55,80,80,135,120,100,6,0,285,_.SLOW,null,!1),new c(e.ROARING_MOON,9,!1,!1,!1,"Paradox Pokémon",i.DRAGON,i.DARK,2,380,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,139,71,55,101,119,10,0,295,_.SLOW,null,!1),new c(e.IRON_VALIANT,9,!1,!1,!1,"Paradox Pokémon",i.FAIRY,i.FIGHTING,1.4,35,O.QUARK_DRIVE,O.NONE,O.NONE,590,74,130,90,120,60,116,10,0,295,_.SLOW,null,!1),new c(e.KORAIDON,9,!1,!0,!1,"Paradox Pokémon",i.FIGHTING,i.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,_.SLOW,null,!1,!1,new p("Apex Build","apex-build",i.FIGHTING,i.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new p("Limited Build","limited-build",i.FIGHTING,i.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new p("Sprinting Build","sprinting-build",i.FIGHTING,i.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new p("Swimming Build","swimming-build",i.FIGHTING,i.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0),new p("Gliding Build","gliding-build",i.FIGHTING,i.DRAGON,3.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0)),new c(e.MIRAIDON,9,!1,!0,!1,"Paradox Pokémon",i.ELECTRIC,i.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,_.SLOW,null,!1,!1,new p("Ultimate Mode","ultimate-mode",i.ELECTRIC,i.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new p("Low-Power Mode","low-power-mode",i.ELECTRIC,i.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new p("Drive Mode","drive-mode",i.ELECTRIC,i.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new p("Aquatic Mode","aquatic-mode",i.ELECTRIC,i.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0),new p("Glide Mode","glide-mode",i.ELECTRIC,i.DRAGON,2.8,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0)),new c(e.WALKING_WAKE,9,!1,!1,!1,"Paradox Pokémon",i.WATER,i.DRAGON,3.5,280,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,99,83,91,125,83,109,10,0,295,_.SLOW,null,!1),new c(e.IRON_LEAVES,9,!1,!1,!1,"Paradox Pokémon",i.GRASS,i.PSYCHIC,1.5,125,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,130,88,70,108,104,10,0,295,_.SLOW,null,!1),new c(e.DIPPLIN,9,!1,!1,!1,"Candy Apple Pokémon",i.GRASS,i.DRAGON,.4,9.7,O.SUPERSWEET_SYRUP,O.GLUTTONY,O.STICKY_HOLD,485,80,80,110,95,80,40,45,50,170,_.ERRATIC,50,!1),new c(e.POLTCHAGEIST,9,!1,!1,!1,"Matcha Pokémon",i.GRASS,i.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,_.SLOW,null,!1,!1,new p("Counterfeit Form","counterfeit",i.GRASS,i.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0),new p("Artisan Form","artisan",i.GRASS,i.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0)),new c(e.SINISTCHA,9,!1,!1,!1,"Matcha Pokémon",i.GRASS,i.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,_.SLOW,null,!1,!1,new p("Unremarkable Form","unremarkable",i.GRASS,i.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178),new p("Masterpiece Form","masterpiece",i.GRASS,i.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178)),new c(e.OKIDOGI,9,!0,!1,!1,"Retainer Pokémon",i.POISON,i.FIGHTING,1.8,92.2,O.TOXIC_CHAIN,O.NONE,O.GUARD_DOG,555,88,128,115,58,86,80,3,0,276,_.SLOW,100,!1),new c(e.MUNKIDORI,9,!0,!1,!1,"Retainer Pokémon",i.POISON,i.PSYCHIC,1,12.2,O.TOXIC_CHAIN,O.NONE,O.FRISK,555,88,75,66,130,90,106,3,0,276,_.SLOW,100,!1),new c(e.FEZANDIPITI,9,!0,!1,!1,"Retainer Pokémon",i.POISON,i.FAIRY,1.4,30.1,O.TOXIC_CHAIN,O.NONE,O.TECHNICIAN,555,88,91,82,70,125,99,3,0,276,_.SLOW,100,!1),new c(e.OGERPON,9,!0,!1,!1,"Mask Pokémon",i.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,_.SLOW,0,!1,!1,new p("Teal Mask","teal-mask",i.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,!1,null,!0),new p("Wellspring Mask","wellspring-mask",i.GRASS,i.WATER,1.2,39.8,O.WATER_ABSORB,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new p("Hearthflame Mask","hearthflame-mask",i.GRASS,i.FIRE,1.2,39.8,O.MOLD_BREAKER,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new p("Cornerstone Mask","cornerstone-mask",i.GRASS,i.ROCK,1.2,39.8,O.STURDY,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new p("Teal Mask Terastallized","teal-mask-tera",i.GRASS,null,1.2,39.8,O.EMBODY_ASPECT_TEAL,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new p("Wellspring Mask Terastallized","wellspring-mask-tera",i.GRASS,i.WATER,1.2,39.8,O.EMBODY_ASPECT_WELLSPRING,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new p("Hearthflame Mask Terastallized","hearthflame-mask-tera",i.GRASS,i.FIRE,1.2,39.8,O.EMBODY_ASPECT_HEARTHFLAME,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new p("Cornerstone Mask Terastallized","cornerstone-mask-tera",i.GRASS,i.ROCK,1.2,39.8,O.EMBODY_ASPECT_CORNERSTONE,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275)),new c(e.ARCHALUDON,9,!1,!1,!1,"Alloy Pokémon",i.STEEL,i.DRAGON,2,60,O.STAMINA,O.STURDY,O.STALWART,600,90,105,130,125,65,85,10,50,300,_.MEDIUM_FAST,50,!1),new c(e.HYDRAPPLE,9,!1,!1,!1,"Apple Hydra Pokémon",i.GRASS,i.DRAGON,1.8,93,O.SUPERSWEET_SYRUP,O.REGENERATOR,O.STICKY_HOLD,540,106,80,110,120,80,44,10,50,270,_.ERRATIC,50,!1),new c(e.GOUGING_FIRE,9,!1,!1,!1,"Paradox Pokémon",i.FIRE,i.DRAGON,3.5,590,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,115,121,65,93,91,10,0,295,_.SLOW,null,!1),new c(e.RAGING_BOLT,9,!1,!1,!1,"Paradox Pokémon",i.ELECTRIC,i.DRAGON,5.2,480,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,125,73,91,137,89,75,10,0,295,_.SLOW,null,!1),new c(e.IRON_BOULDER,9,!1,!1,!1,"Paradox Pokémon",i.ROCK,i.PSYCHIC,1.5,162.5,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,120,80,68,108,124,10,0,295,_.SLOW,null,!1),new c(e.IRON_CROWN,9,!1,!1,!1,"Paradox Pokémon",i.STEEL,i.PSYCHIC,1.6,156,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,72,100,122,108,98,10,0,295,_.SLOW,null,!1),new c(e.TERAPAGOS,9,!1,!0,!1,"Tera Pokémon",i.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,_.SLOW,50,!1,!1,new p("Normal Form","",i.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,!1,null,!0),new p("Terastal Form","terastal",i.NORMAL,null,.3,16,O.TERA_SHELL,O.NONE,O.NONE,600,95,95,110,105,110,85,5,50,90),new p("Stellar Form","stellar",i.NORMAL,null,1.7,77,O.TERAFORM_ZERO,O.NONE,O.NONE,700,160,105,110,130,110,85,5,50,90)),new c(e.PECHARUNT,9,!1,!1,!0,"Subjugation Pokémon",i.POISON,i.GHOST,.3,.3,O.POISON_PUPPETEER,O.NONE,O.NONE,600,88,88,160,88,88,88,3,0,300,_.SLOW,null,!1),new c(e.ALOLA_RATTATA,7,!1,!1,!1,"Mouse Pokémon",i.DARK,i.NORMAL,.3,3.8,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,253,30,56,35,25,35,72,255,70,51,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_RATICATE,7,!1,!1,!1,"Mouse Pokémon",i.DARK,i.NORMAL,.7,25.5,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,413,75,71,70,40,80,77,127,70,145,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_RAICHU,7,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,i.PSYCHIC,.7,21,O.SURGE_SURFER,O.NONE,O.NONE,485,60,85,50,95,85,110,75,50,243,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_SANDSHREW,7,!1,!1,!1,"Mouse Pokémon",i.ICE,i.STEEL,.7,40,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,300,50,75,90,10,35,40,255,50,60,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_SANDSLASH,7,!1,!1,!1,"Mouse Pokémon",i.ICE,i.STEEL,1.2,55,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,450,75,100,120,25,65,65,90,50,158,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_VULPIX,7,!1,!1,!1,"Fox Pokémon",i.ICE,null,.6,9.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,299,38,41,40,50,65,65,190,50,60,_.MEDIUM_FAST,25,!1),new c(e.ALOLA_NINETALES,7,!1,!1,!1,"Fox Pokémon",i.ICE,i.FAIRY,1.1,19.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,505,73,67,75,81,100,109,75,50,177,_.MEDIUM_FAST,25,!1),new c(e.ALOLA_DIGLETT,7,!1,!1,!1,"Mole Pokémon",i.GROUND,i.STEEL,.2,1,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,265,10,55,30,35,45,90,255,50,53,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_DUGTRIO,7,!1,!1,!1,"Mole Pokémon",i.GROUND,i.STEEL,.7,66.6,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,425,35,100,60,50,70,110,50,50,149,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_MEOWTH,7,!1,!1,!1,"Scratch Cat Pokémon",i.DARK,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.RATTLED,290,40,35,35,50,40,90,255,50,58,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_PERSIAN,7,!1,!1,!1,"Classy Cat Pokémon",i.DARK,null,1.1,33,O.FUR_COAT,O.TECHNICIAN,O.RATTLED,440,65,60,60,75,65,115,90,50,154,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_GEODUDE,7,!1,!1,!1,"Rock Pokémon",i.ROCK,i.ELECTRIC,.4,20.3,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,300,40,80,100,30,30,20,255,70,60,_.MEDIUM_SLOW,50,!1),new c(e.ALOLA_GRAVELER,7,!1,!1,!1,"Rock Pokémon",i.ROCK,i.ELECTRIC,1,110,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,390,55,95,115,45,45,35,120,70,137,_.MEDIUM_SLOW,50,!1),new c(e.ALOLA_GOLEM,7,!1,!1,!1,"Megaton Pokémon",i.ROCK,i.ELECTRIC,1.7,316,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,495,80,120,130,55,65,45,45,70,223,_.MEDIUM_SLOW,50,!1),new c(e.ALOLA_GRIMER,7,!1,!1,!1,"Sludge Pokémon",i.POISON,i.DARK,.7,42,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,325,80,80,50,40,50,25,190,70,65,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_MUK,7,!1,!1,!1,"Sludge Pokémon",i.POISON,i.DARK,1,52,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,500,105,105,75,65,100,50,75,70,175,_.MEDIUM_FAST,50,!1),new c(e.ALOLA_EXEGGUTOR,7,!1,!1,!1,"Coconut Pokémon",i.GRASS,i.DRAGON,10.9,415.6,O.FRISK,O.NONE,O.HARVEST,530,95,105,85,125,75,45,45,50,186,_.SLOW,50,!1),new c(e.ALOLA_MAROWAK,7,!1,!1,!1,"Bone Keeper Pokémon",i.FIRE,i.GHOST,1,34,O.CURSED_BODY,O.LIGHTNING_ROD,O.ROCK_HEAD,425,60,80,110,50,80,45,75,50,149,_.MEDIUM_FAST,50,!1),new c(e.ETERNAL_FLOETTE,6,!0,!1,!1,"Single Bloom Pokémon",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,551,74,65,67,125,128,92,120,70,130,_.MEDIUM_FAST,0,!1),new c(e.GALAR_MEOWTH,8,!1,!1,!1,"Scratch Cat Pokémon",i.STEEL,null,.4,7.5,O.PICKUP,O.TOUGH_CLAWS,O.UNNERVE,290,50,65,55,40,40,40,255,50,58,_.MEDIUM_FAST,50,!1),new c(e.GALAR_PONYTA,8,!1,!1,!1,"Fire Horse Pokémon",i.PSYCHIC,null,.8,24,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,410,50,85,55,65,65,90,190,50,82,_.MEDIUM_FAST,50,!1),new c(e.GALAR_RAPIDASH,8,!1,!1,!1,"Fire Horse Pokémon",i.PSYCHIC,i.FAIRY,1.7,80,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,500,65,100,70,80,80,105,60,50,175,_.MEDIUM_FAST,50,!1),new c(e.GALAR_SLOWPOKE,8,!1,!1,!1,"Dopey Pokémon",i.PSYCHIC,null,1.2,36,O.GLUTTONY,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,_.MEDIUM_FAST,50,!1),new c(e.GALAR_SLOWBRO,8,!1,!1,!1,"Hermit Crab Pokémon",i.POISON,i.PSYCHIC,1.6,70.5,O.QUICK_DRAW,O.OWN_TEMPO,O.REGENERATOR,490,95,100,95,100,70,30,75,50,172,_.MEDIUM_FAST,50,!1),new c(e.GALAR_FARFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",i.FIGHTING,null,.8,42,O.STEADFAST,O.NONE,O.SCRAPPY,377,52,95,55,58,62,55,45,50,132,_.MEDIUM_FAST,50,!1),new c(e.GALAR_WEEZING,8,!1,!1,!1,"Poison Gas Pokémon",i.POISON,i.FAIRY,3,16,O.LEVITATE,O.NEUTRALIZING_GAS,O.MISTY_SURGE,490,65,90,120,85,70,60,60,50,172,_.MEDIUM_FAST,50,!1),new c(e.GALAR_MR_MIME,8,!1,!1,!1,"Barrier Pokémon",i.ICE,i.PSYCHIC,1.4,56.8,O.VITAL_SPIRIT,O.SCREEN_CLEANER,O.ICE_BODY,460,50,65,65,90,90,100,45,50,161,_.MEDIUM_FAST,50,!1),new c(e.GALAR_ARTICUNO,8,!0,!1,!1,"Freeze Pokémon",i.PSYCHIC,i.FLYING,1.7,50.9,O.COMPETITIVE,O.NONE,O.NONE,580,90,85,85,125,100,95,3,35,290,_.SLOW,null,!1),new c(e.GALAR_ZAPDOS,8,!0,!1,!1,"Electric Pokémon",i.FIGHTING,i.FLYING,1.6,58.2,O.DEFIANT,O.NONE,O.NONE,580,90,125,90,85,90,100,3,35,290,_.SLOW,null,!1),new c(e.GALAR_MOLTRES,8,!0,!1,!1,"Flame Pokémon",i.DARK,i.FLYING,2,66,O.BERSERK,O.NONE,O.NONE,580,90,85,90,100,125,90,3,35,290,_.SLOW,null,!1),new c(e.GALAR_SLOWKING,8,!1,!1,!1,"Royal Pokémon",i.POISON,i.PSYCHIC,1.8,79.5,O.CURIOUS_MEDICINE,O.OWN_TEMPO,O.REGENERATOR,490,95,65,80,110,110,30,70,50,172,_.MEDIUM_FAST,50,!1),new c(e.GALAR_CORSOLA,8,!1,!1,!1,"Coral Pokémon",i.GHOST,null,.6,.5,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,410,60,55,100,65,100,30,60,50,144,_.FAST,25,!1),new c(e.GALAR_ZIGZAGOON,8,!1,!1,!1,"Tiny Raccoon Pokémon",i.DARK,i.NORMAL,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,_.MEDIUM_FAST,50,!1),new c(e.GALAR_LINOONE,8,!1,!1,!1,"Rushing Pokémon",i.DARK,i.NORMAL,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,_.MEDIUM_FAST,50,!1),new c(e.GALAR_DARUMAKA,8,!1,!1,!1,"Zen Charm Pokémon",i.ICE,null,.7,40,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,_.MEDIUM_SLOW,50,!1),new c(e.GALAR_DARMANITAN,8,!1,!1,!1,"Blazing Pokémon",i.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,_.MEDIUM_SLOW,50,!1,!0,new p("Standard Mode","",i.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new p("Zen Mode","zen",i.ICE,i.FIRE,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,540,105,160,55,30,55,135,60,50,189)),new c(e.GALAR_YAMASK,8,!1,!1,!1,"Spirit Pokémon",i.GROUND,i.GHOST,.5,1.5,O.WANDERING_SPIRIT,O.NONE,O.NONE,303,38,55,85,30,65,30,190,50,61,_.MEDIUM_FAST,50,!1),new c(e.GALAR_STUNFISK,8,!1,!1,!1,"Trap Pokémon",i.GROUND,i.STEEL,.7,20.5,O.MIMICRY,O.NONE,O.NONE,471,109,81,99,66,84,32,75,70,165,_.MEDIUM_FAST,50,!1),new c(e.HISUI_GROWLITHE,8,!1,!1,!1,"Puppy Pokémon",i.FIRE,i.ROCK,.8,22.7,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,350,60,75,45,65,50,55,190,50,70,_.SLOW,75,!1),new c(e.HISUI_ARCANINE,8,!1,!1,!1,"Legendary Pokémon",i.FIRE,i.ROCK,2,168,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,555,95,115,80,95,80,90,85,50,194,_.SLOW,75,!1),new c(e.HISUI_VOLTORB,8,!1,!1,!1,"Ball Pokémon",i.ELECTRIC,i.GRASS,.5,13,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,80,66,_.MEDIUM_FAST,null,!1),new c(e.HISUI_ELECTRODE,8,!1,!1,!1,"Ball Pokémon",i.ELECTRIC,i.GRASS,1.2,81,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,_.MEDIUM_FAST,null,!1),new c(e.HISUI_TYPHLOSION,8,!1,!1,!1,"Volcano Pokémon",i.FIRE,i.GHOST,1.6,69.8,O.BLAZE,O.NONE,O.FRISK,534,73,84,78,119,85,95,45,70,240,_.MEDIUM_SLOW,87.5,!1),new c(e.HISUI_QWILFISH,8,!1,!1,!1,"Balloon Pokémon",i.DARK,i.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,_.MEDIUM_FAST,50,!1),new c(e.HISUI_SNEASEL,8,!1,!1,!1,"Sharp Claw Pokémon",i.FIGHTING,i.POISON,.9,27,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,_.MEDIUM_SLOW,50,!0),new c(e.HISUI_SAMUROTT,8,!1,!1,!1,"Formidable Pokémon",i.WATER,i.DARK,1.5,58.2,O.TORRENT,O.NONE,O.SHARPNESS,528,90,108,80,100,65,85,45,80,238,_.MEDIUM_SLOW,87.5,!1),new c(e.HISUI_LILLIGANT,8,!1,!1,!1,"Flowering Pokémon",i.GRASS,i.FIGHTING,1.2,19.2,O.CHLOROPHYLL,O.HUSTLE,O.LEAF_GUARD,480,70,105,75,50,75,105,75,50,168,_.MEDIUM_FAST,0,!1),new c(e.HISUI_ZORUA,8,!1,!1,!1,"Tricky Fox Pokémon",i.NORMAL,i.GHOST,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,35,60,40,85,40,70,75,50,66,_.MEDIUM_SLOW,87.5,!1),new c(e.HISUI_ZOROARK,8,!1,!1,!1,"Illusion Fox Pokémon",i.NORMAL,i.GHOST,1.6,83,O.ILLUSION,O.NONE,O.NONE,510,55,100,60,125,60,110,45,50,179,_.MEDIUM_SLOW,87.5,!1),new c(e.HISUI_BRAVIARY,8,!1,!1,!1,"Valiant Pokémon",i.PSYCHIC,i.FLYING,1.7,43.4,O.KEEN_EYE,O.SHEER_FORCE,O.TINTED_LENS,510,110,83,70,112,70,65,60,50,179,_.SLOW,100,!1),new c(e.HISUI_SLIGGOO,8,!1,!1,!1,"Soft Tissue Pokémon",i.STEEL,i.DRAGON,.7,68.5,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,452,58,75,83,83,113,40,45,35,158,_.SLOW,50,!1),new c(e.HISUI_GOODRA,8,!1,!1,!1,"Dragon Pokémon",i.STEEL,i.DRAGON,1.7,334.1,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,600,80,100,100,110,150,60,45,35,270,_.SLOW,50,!1),new c(e.HISUI_AVALUGG,8,!1,!1,!1,"Iceberg Pokémon",i.ICE,i.ROCK,1.4,262.4,O.STRONG_JAW,O.ICE_BODY,O.STURDY,514,95,127,184,34,36,38,55,50,180,_.MEDIUM_FAST,50,!1),new c(e.HISUI_DECIDUEYE,8,!1,!1,!1,"Arrow Quill Pokémon",i.GRASS,i.FIGHTING,1.6,37,O.OVERGROW,O.NONE,O.SCRAPPY,530,88,112,80,95,95,60,45,50,239,_.MEDIUM_SLOW,87.5,!1),new c(e.PALDEA_TAUROS,9,!1,!1,!1,"Wild Bull Pokémon",i.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,_.SLOW,100,!1,!1,new p("Combat Breed","combat",i.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,"",!0),new p("Blaze Breed","blaze",i.FIGHTING,i.FIRE,1.4,85,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0),new p("Aqua Breed","aqua",i.FIGHTING,i.WATER,1.4,110,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0)),new c(e.PALDEA_WOOPER,9,!1,!1,!1,"Water Fish Pokémon",i.POISON,i.GROUND,.4,11,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,_.MEDIUM_FAST,50,!1),new c(e.BLOODMOON_URSALUNA,9,!0,!1,!1,"Peat Pokémon",i.GROUND,i.NORMAL,2.7,333,O.MINDS_EYE,O.NONE,O.NONE,555,113,70,120,135,65,52,75,50,275,_.MEDIUM_FAST,50,!1))}L(h7,"initSpecies");const J1=class J1{constructor(A,s=null){this.cursor=0,this.active=!1,this.scene=A,this.mode=s}show(A){return this.active=!0,!0}getUi(){return this.scene.ui}getTextColor(A,s=!1){return IA(A,s,this.scene.uiTheme)}getCursor(){return this.cursor}setCursor(A){const s=this.cursor!==A;return s&&(this.cursor=A),s}setMouseCursorStyle(A){this.scene.input.manager.canvas.style.cursor=A}clear(){this.active=!1}};L(J1,"UiHandler");let Ws=J1;const $1=class $1 extends Ws{constructor(A,s=null){super(A,s),this.tutorialActive=!1}processTutorialInput(A){if((A===b.ACTION||A===b.CANCEL)&&this.onActionInput){this.getUi().playSelect();const s=this.onActionInput;return this.onActionInput=null,s(),this.awaitingActionInput=!1,!0}return!1}initTutorialOverlay(A){this.tutorialOverlay||(this.tutorialOverlay=new Phaser.GameObjects.Rectangle(this.scene,-1,-1,this.scene.scaledCanvas.width,this.scene.scaledCanvas.height,460551),this.tutorialOverlay.setName("tutorial-overlay"),this.tutorialOverlay.setOrigin(0,0),this.tutorialOverlay.setAlpha(0)),A&&A.add(this.tutorialOverlay)}};L($1,"AwaitableUiHandler");let xn=$1;const z1=class z1 extends xn{constructor(A,s=null){super(A,s),this.pendingPrompt=!1}initPromptSprite(A){if(!this.prompt){const s=this.scene.add.sprite(0,0,"prompt");s.setVisible(!1),s.setOrigin(0,0),this.prompt=s}A&&A.add(this.prompt)}showText(A,s,R,n,I,a){this.showTextInternal(A,s,R,n,I,a)}showDialogue(A,s,R,n,I,a,r){this.showTextInternal(A,R,n,I,a,r)}showTextInternal(A,s,R,n,I,a){s==null&&(s=20);const r=new Map,S=new Map,o=new Map,l=new Map,C=/@(c|d|s|f)\{(.*?)\}/;let M;for(;M=C.exec(A);){switch(M[1]){case"c":r.set(M.index,M[2]);break;case"d":S.set(M.index,parseInt(M[2]));break;case"s":o.set(M.index,M[2]);break;case"f":l.set(M.index,parseInt(M[2]));break}A=A.slice(0,M.index)+A.slice(M.index+M[2].length+4)}if(A){const u=A.split(" ");let h=1,P="";for(let G=0;G<u.length;G++){const d=P?`${P} ${u[G]}`:u[G];if(u[G].includes(`
`))P=d,h++;else{const H=this.message.runWordWrap(d).split(/\n/g).length;H>h?(h=H,P=`${P}
${u[G]}`):P=d}}A=P}if(this.textTimer&&(this.textTimer.remove(),this.textCallbackTimer&&this.textCallbackTimer.callback()),I){const u=R;R=L(()=>{const h=L(()=>this.showPrompt(u,n),"showPrompt");a?this.scene.time.delayedCall(a,h):h()},"callback")}s?(this.clearText(),I&&(this.pendingPrompt=!0),this.textTimer=this.scene.time.addEvent({delay:s,callback:L(()=>{var f;const u=A.length-((f=this.textTimer)==null?void 0:f.repeatCount),h=r.get(u),P=o.get(u),G=S.get(u),d=l.get(u);this.message.setText(A.slice(0,u));const H=L(()=>{var K;h&&this.scene.charSprite.setVariant(h),P&&this.scene.playSound(P),R&&!((K=this.textTimer)!=null&&K.repeatCount)&&(n&&!I?this.textCallbackTimer=this.scene.time.delayedCall(n,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),R()}):R())},"advance");G?(this.textTimer.paused=!0,this.scene.tweens.addCounter({duration:NE(G),onComplete:L(()=>{this.textTimer.paused=!1,H()},"onComplete")})):d?(this.textTimer.paused=!0,this.scene.time.delayedCall(150,()=>{this.scene.ui.fadeOut(750).then(()=>{const K=NE(d);this.scene.time.delayedCall(K,()=>{this.scene.ui.fadeIn(500).then(()=>{this.textTimer.paused=!1,H()})})})})):H()},"callback"),repeat:A.length})):(this.message.setText(A),I&&(this.pendingPrompt=!0),R&&R())}showPrompt(A,s){const R=this.message.runWordWrap(this.message.text).split(/\n/g),n=R.length,I=R[R.length-1],a=this.scene.add.text(0,0,I,{font:"96px emerald"});a.setScale(this.message.scale);const r=a.displayWidth;a.destroy(),this.prompt&&(this.prompt.setPosition(this.message.x+r+2,this.message.y+(n-1)*18+2),this.prompt.play("prompt")),this.pendingPrompt=!1,this.awaitingActionInput=!0,this.onActionInput=()=>{this.prompt&&(this.prompt.anims.stop(),this.prompt.setVisible(!1)),A&&(s?this.textCallbackTimer=this.scene.time.delayedCall(s,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),A()}):A())}}isTextAnimationInProgress(){return this.textTimer?this.textTimer.repeatCount<this.textTimer.repeat:!1}clearText(){this.message.setText(""),this.pendingPrompt=!1}clear(){super.clear()}};L(z1,"MessageUiHandler");let ps=z1;const q1=class q1 extends ps{constructor(A){super(A,Oe.MESSAGE),this.wordWrapWidth=1780}setup(){const A=this.getUi();this.textTimer=null,this.textCallbackTimer=null,this.bg=this.scene.add.sprite(0,0,"bg",this.scene.windowType),this.bg.setName("sprite-battle-msg-bg"),this.bg.setOrigin(0,1),A.add(this.bg),this.commandWindow=_t(this.scene,202,0,118,48),this.commandWindow.setName("window-command"),this.commandWindow.setOrigin(0,1),this.commandWindow.setVisible(!1),A.add(this.commandWindow),this.movesWindowContainer=this.scene.add.container(0,0),this.movesWindowContainer.setName("moves-bg"),this.movesWindowContainer.setVisible(!1);const s=_t(this.scene,0,0,243,48);s.setName("moves-window"),s.setOrigin(0,1);const R=_t(this.scene,240,0,80,48,!1,!1,-1,132);R.setName("move-details-window"),R.setOrigin(0,1),this.movesWindowContainer.add([s,R]),A.add(this.movesWindowContainer);const n=this.scene.add.container(12,-39);A.add(n);const I=le(this.scene,0,0,"",X.MESSAGE,{maxLines:2,wordWrap:{width:this.wordWrapWidth}});n.add(I),this.message=I,this.nameBoxContainer=this.scene.add.container(0,-16),this.nameBoxContainer.setVisible(!1),this.nameBox=this.scene.add.nineslice(0,0,"namebox",this.scene.windowType,72,16,8,8,5,5),this.nameBox.setOrigin(0,0),this.nameText=le(this.scene,8,0,"Rival",X.MESSAGE,{maxLines:1}),this.nameBoxContainer.add(this.nameBox),this.nameBoxContainer.add(this.nameText),n.add(this.nameBoxContainer),this.initPromptSprite(n);const a=this.scene.add.container(0,0);a.setVisible(!1),A.add(a),this.levelUpStatsContainer=a;const r=le(this.scene,this.scene.game.canvas.width/6-73,-94,"",X.WINDOW,{maxLines:6});r.setLineSpacing(D.resolvedLanguage==="ja"?25:5);let S="";for(const M of FO)S+=`${D.t(_E(M))}
`;r.text=S,r.x-=r.displayWidth;const o=_t(this.scene,this.scene.game.canvas.width/6,-100,80+r.displayWidth,100);o.setOrigin(1,0),a.add(o),a.add(r);const l=le(this.scene,this.scene.game.canvas.width/6-50,-94,`+
+
+
+
+
+`,X.WINDOW,{maxLines:6});l.setLineSpacing(D.resolvedLanguage==="ja"?25:5),a.add(l),this.levelUpStatsIncrContent=l;const C=yE(this.scene,this.scene.game.canvas.width/6-7,-94,"",X.WINDOW,{maxLines:6,lineSpacing:5});C.setLineSpacing(D.resolvedLanguage==="ja"?25:5),C.setOrigin(1,0),C.setAlign("right"),a.add(C),this.levelUpStatsValuesContent=C}show(A){return super.show(A),this.commandWindow.setVisible(!1),this.movesWindowContainer.setVisible(!1),this.message.setWordWrapWidth(this.wordWrapWidth),!0}processInput(A){const s=this.getUi();if(this.awaitingActionInput&&(A===b.CANCEL||A===b.ACTION)&&this.onActionInput){s.playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),!0}return!1}clear(){super.clear()}showText(A,s,R,n,I,a){this.hideNameText(),super.showText(A,s,R,n,I,a)}showDialogue(A,s,R,n,I,a,r){s&&this.showNameText(s),super.showDialogue(A,s,R,n,I,a,r)}promptLevelUpStats(A,s,R){return new Promise(n=>{if(!this.scene.showLevelUpStats)return n();const I=this.scene.getPlayerParty()[A].stats;let a="";for(const r of FO)a+=`${R?I[r]:I[r]-s[r]}
`;this.levelUpStatsValuesContent.text=a,this.levelUpStatsIncrContent.setVisible(!R),this.levelUpStatsContainer.setVisible(!0),this.awaitingActionInput=!0,this.onActionInput=()=>{if(R)this.levelUpStatsContainer.setVisible(!1),n();else return this.promptLevelUpStats(A,[],!0).then(()=>n())}})}promptIvs(A,s,R){return new Promise(n=>{this.scene.executeWithSeedOffset(()=>{let I="";const a=this.getTopIvs(s,R);for(const r of FO)I+=`${a.includes(r)?this.getIvDescriptor(s[r],r,A):"???"}
`;this.levelUpStatsValuesContent.text=I,this.levelUpStatsIncrContent.setVisible(!1),this.levelUpStatsContainer.setVisible(!0),this.awaitingActionInput=!0,this.onActionInput=()=>{this.levelUpStatsContainer.setVisible(!1),n()}},A)})}getTopIvs(A,s){let R=[];if(s<6){const n=FO.slice();n.sort((I,a)=>A[a]-A[I]);for(let I=0;I<s;I++)R.push(n[I])}else R=FO.slice();return R}getIvDescriptor(A,s,R){const n=this.scene.getPokemonById(R).species.getRootSpeciesId(),I=this.scene.gameData.dexData[n].ivs,a=this.scene.uiTheme,r=L((S,o,l)=>{let C;return o?l===31?C=X.PERFECT_IV:C=X.SUMMARY_GREEN:C=X.WINDOW,`[color=${IA(C,!1,a)}][shadow=${IA(C,!0,a)}]${S}[/shadow][/color]`},"coloredText");return A>30?r(D.t("battleMessageUiHandler:ivBest"),A>I[s],A):A===30?r(D.t("battleMessageUiHandler:ivFantastic"),A>I[s],A):A>20?r(D.t("battleMessageUiHandler:ivVeryGood"),A>I[s],A):A>10?r(D.t("battleMessageUiHandler:ivPrettyGood"),A>I[s],A):A>0?r(D.t("battleMessageUiHandler:ivDecent"),A>I[s],A):r(D.t("battleMessageUiHandler:ivNoGood"),A>I[s],A)}showNameText(A){this.nameBoxContainer.setVisible(!0),this.nameText.setText(A),this.nameBox.width=this.nameText.displayWidth+16}hideNameText(){this.nameBoxContainer.setVisible(!1)}};L(q1,"BattleMessageUiHandler");let ic=q1;var Qs=(E=>(E[E.NONE=0]="NONE",E[E.PASSIVE=1]="PASSIVE",E[E.ACTIVE=2]="ACTIVE",E))(Qs||{});const j1=class j1{setup(A){this.icons=new Map,this.toggled=!1;const s=L(R=>{const n=R.getValue();this.toggled=!!n;for(const I of this.icons.keys()){const a=this.icons.get(I),r=a?this.getModeYDelta(a):0;I.y+=r*(this.toggled?1:-1)}},"onAlternate");A.tweens.addCounter({duration:Et(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:s,onYoyo:s})}getModeYDelta(A){switch(A){case 0:return 0;case 1:return-1;case 2:return-2}}addOrUpdate(A,s){Array.isArray(A)||(A=[A]);for(const R of A)if(!(this.icons.has(R)&&this.icons.get(R)===s)){if(this.toggled){const n=this.icons.has(R)?this.icons.get(R):0,I=this.getModeYDelta(s);R.y+=I+n}this.icons.set(R,s)}}remove(A){Array.isArray(A)||(A=[A]);for(const s of A){if(this.toggled){const R=this.icons.get(s),n=R?this.getModeYDelta(R):0;s.y-=n}this.icons.delete(s)}}removeAll(){for(const A of this.icons.keys()){if(this.toggled){const s=this.icons.get(A),R=s?this.getModeYDelta(s):0;A.y-=R}this.icons.delete(A)}}};L(j1,"PokemonIconAnimHandler");let Ur=j1;var yt=(E=>(E[E.SINGLE_GENERATION=0]="SINGLE_GENERATION",E[E.SINGLE_TYPE=1]="SINGLE_TYPE",E[E.LOWER_MAX_STARTER_COST=2]="LOWER_MAX_STARTER_COST",E[E.LOWER_STARTER_POINTS=3]="LOWER_STARTER_POINTS",E[E.FRESH_START=4]="FRESH_START",E[E.INVERSE_BATTLE=5]="INVERSE_BATTLE",E))(yt||{}),XR=(E=>(E[E.NONE=0]="NONE",E[E.ABOMASITE=1]="ABOMASITE",E[E.ABSOLITE=2]="ABSOLITE",E[E.AERODACTYLITE=3]="AERODACTYLITE",E[E.AGGRONITE=4]="AGGRONITE",E[E.ALAKAZITE=5]="ALAKAZITE",E[E.ALTARIANITE=6]="ALTARIANITE",E[E.AMPHAROSITE=7]="AMPHAROSITE",E[E.AUDINITE=8]="AUDINITE",E[E.BANETTITE=9]="BANETTITE",E[E.BEEDRILLITE=10]="BEEDRILLITE",E[E.BLASTOISINITE=11]="BLASTOISINITE",E[E.BLAZIKENITE=12]="BLAZIKENITE",E[E.CAMERUPTITE=13]="CAMERUPTITE",E[E.CHARIZARDITE_X=14]="CHARIZARDITE_X",E[E.CHARIZARDITE_Y=15]="CHARIZARDITE_Y",E[E.DIANCITE=16]="DIANCITE",E[E.GALLADITE=17]="GALLADITE",E[E.GARCHOMPITE=18]="GARCHOMPITE",E[E.GARDEVOIRITE=19]="GARDEVOIRITE",E[E.GENGARITE=20]="GENGARITE",E[E.GLALITITE=21]="GLALITITE",E[E.GYARADOSITE=22]="GYARADOSITE",E[E.HERACRONITE=23]="HERACRONITE",E[E.HOUNDOOMINITE=24]="HOUNDOOMINITE",E[E.KANGASKHANITE=25]="KANGASKHANITE",E[E.LATIASITE=26]="LATIASITE",E[E.LATIOSITE=27]="LATIOSITE",E[E.LOPUNNITE=28]="LOPUNNITE",E[E.LUCARIONITE=29]="LUCARIONITE",E[E.MANECTITE=30]="MANECTITE",E[E.MAWILITE=31]="MAWILITE",E[E.MEDICHAMITE=32]="MEDICHAMITE",E[E.METAGROSSITE=33]="METAGROSSITE",E[E.MEWTWONITE_X=34]="MEWTWONITE_X",E[E.MEWTWONITE_Y=35]="MEWTWONITE_Y",E[E.PIDGEOTITE=36]="PIDGEOTITE",E[E.PINSIRITE=37]="PINSIRITE",E[E.RAYQUAZITE=38]="RAYQUAZITE",E[E.SABLENITE=39]="SABLENITE",E[E.SALAMENCITE=40]="SALAMENCITE",E[E.SCEPTILITE=41]="SCEPTILITE",E[E.SCIZORITE=42]="SCIZORITE",E[E.SHARPEDONITE=43]="SHARPEDONITE",E[E.SLOWBRONITE=44]="SLOWBRONITE",E[E.STEELIXITE=45]="STEELIXITE",E[E.SWAMPERTITE=46]="SWAMPERTITE",E[E.TYRANITARITE=47]="TYRANITARITE",E[E.VENUSAURITE=48]="VENUSAURITE",E[E.BLUE_ORB=50]="BLUE_ORB",E[E.RED_ORB=51]="RED_ORB",E[E.ADAMANT_CRYSTAL=52]="ADAMANT_CRYSTAL",E[E.LUSTROUS_GLOBE=53]="LUSTROUS_GLOBE",E[E.GRISEOUS_CORE=54]="GRISEOUS_CORE",E[E.REVEAL_GLASS=55]="REVEAL_GLASS",E[E.MAX_MUSHROOMS=56]="MAX_MUSHROOMS",E[E.DARK_STONE=57]="DARK_STONE",E[E.LIGHT_STONE=58]="LIGHT_STONE",E[E.PRISON_BOTTLE=59]="PRISON_BOTTLE",E[E.RUSTED_SWORD=60]="RUSTED_SWORD",E[E.RUSTED_SHIELD=61]="RUSTED_SHIELD",E[E.ICY_REINS_OF_UNITY=62]="ICY_REINS_OF_UNITY",E[E.SHADOW_REINS_OF_UNITY=63]="SHADOW_REINS_OF_UNITY",E[E.ULTRANECROZIUM_Z=64]="ULTRANECROZIUM_Z",E[E.SHARP_METEORITE=100]="SHARP_METEORITE",E[E.HARD_METEORITE=101]="HARD_METEORITE",E[E.SMOOTH_METEORITE=102]="SMOOTH_METEORITE",E[E.GRACIDEA=103]="GRACIDEA",E[E.SHOCK_DRIVE=104]="SHOCK_DRIVE",E[E.BURN_DRIVE=105]="BURN_DRIVE",E[E.CHILL_DRIVE=106]="CHILL_DRIVE",E[E.DOUSE_DRIVE=107]="DOUSE_DRIVE",E[E.N_SOLARIZER=108]="N_SOLARIZER",E[E.N_LUNARIZER=109]="N_LUNARIZER",E[E.WELLSPRING_MASK=110]="WELLSPRING_MASK",E[E.HEARTHFLAME_MASK=111]="HEARTHFLAME_MASK",E[E.CORNERSTONE_MASK=112]="CORNERSTONE_MASK",E[E.FIST_PLATE=113]="FIST_PLATE",E[E.SKY_PLATE=114]="SKY_PLATE",E[E.TOXIC_PLATE=115]="TOXIC_PLATE",E[E.EARTH_PLATE=116]="EARTH_PLATE",E[E.STONE_PLATE=117]="STONE_PLATE",E[E.INSECT_PLATE=118]="INSECT_PLATE",E[E.SPOOKY_PLATE=119]="SPOOKY_PLATE",E[E.IRON_PLATE=120]="IRON_PLATE",E[E.FLAME_PLATE=121]="FLAME_PLATE",E[E.SPLASH_PLATE=122]="SPLASH_PLATE",E[E.MEADOW_PLATE=123]="MEADOW_PLATE",E[E.ZAP_PLATE=124]="ZAP_PLATE",E[E.MIND_PLATE=125]="MIND_PLATE",E[E.ICICLE_PLATE=126]="ICICLE_PLATE",E[E.DRACO_PLATE=127]="DRACO_PLATE",E[E.DREAD_PLATE=128]="DREAD_PLATE",E[E.PIXIE_PLATE=129]="PIXIE_PLATE",E[E.BLANK_PLATE=130]="BLANK_PLATE",E[E.LEGEND_PLATE=131]="LEGEND_PLATE",E[E.FIGHTING_MEMORY=132]="FIGHTING_MEMORY",E[E.FLYING_MEMORY=133]="FLYING_MEMORY",E[E.POISON_MEMORY=134]="POISON_MEMORY",E[E.GROUND_MEMORY=135]="GROUND_MEMORY",E[E.ROCK_MEMORY=136]="ROCK_MEMORY",E[E.BUG_MEMORY=137]="BUG_MEMORY",E[E.GHOST_MEMORY=138]="GHOST_MEMORY",E[E.STEEL_MEMORY=139]="STEEL_MEMORY",E[E.FIRE_MEMORY=140]="FIRE_MEMORY",E[E.WATER_MEMORY=141]="WATER_MEMORY",E[E.GRASS_MEMORY=142]="GRASS_MEMORY",E[E.ELECTRIC_MEMORY=143]="ELECTRIC_MEMORY",E[E.PSYCHIC_MEMORY=144]="PSYCHIC_MEMORY",E[E.ICE_MEMORY=145]="ICE_MEMORY",E[E.DRAGON_MEMORY=146]="DRAGON_MEMORY",E[E.DARK_MEMORY=147]="DARK_MEMORY",E[E.FAIRY_MEMORY=148]="FAIRY_MEMORY",E[E.NORMAL_MEMORY=149]="NORMAL_MEMORY",E))(XR||{});const ef=class ef{constructor(A,s,R,n,I=!1,...a){this.speciesId=A,this.preFormKey=s,this.formKey=R,this.trigger=n,this.quiet=I,this.conditions=a}canChange(A){if(A.species.speciesId!==this.speciesId||!A.species.forms.length)return!1;const s=A.species.forms.map(R=>R.formKey);if(s[A.formIndex]!==this.preFormKey||s[A.formIndex]===this.formKey)return!1;for(const R of this.conditions)if(!R.predicate(A))return!1;return!!this.trigger.canChange(A)}findTrigger(A){if(!this.trigger.hasTriggerType(A))return null;const s=this.trigger;return s instanceof PT?s.triggers.find(R=>R.hasTriggerType(A)):s}};L(ef,"SpeciesFormChange");let Se=ef;const tf=class tf{constructor(A,s){this.predicate=A,this.enforceFunc=s}};L(tf,"SpeciesFormChangeCondition");let VR=tf;const Af=class Af{canChange(A){return!0}hasTriggerType(A){return this instanceof A}};L(Af,"SpeciesFormChangeTrigger");let BR=Af;const Ef=class Ef extends BR{canChange(A){return!0}};L(Ef,"SpeciesFormChangeManualTrigger");let bt=Ef;const sf=class sf{constructor(...A){this.triggers=A}canChange(A){for(const s of this.triggers)if(!s.canChange(A))return!1;return!0}hasTriggerType(A){return!!this.triggers.find(s=>s.hasTriggerType(A))}};L(sf,"SpeciesFormChangeCompoundTrigger");let PT=sf;const Rf=class Rf extends BR{constructor(A,s=!0){super(),this.item=A,this.active=s}canChange(A){return!!A.scene.findModifier(s=>s instanceof IR&&s.pokemonId===A.id&&s.formChangeItem===this.item&&s.active===this.active)}};L(Rf,"SpeciesFormChangeItemTrigger");let Pe=Rf;const Of=class Of extends BR{constructor(...A){super(),this.timesOfDay=A}canChange(A){return this.timesOfDay.indexOf(A.scene.arena.getTimeOfDay())>-1}};L(Of,"SpeciesFormChangeTimeOfDayTrigger");let Ic=Of;const nf=class nf extends BR{constructor(A=!1){super(),this.active=A}canChange(A){return A.isActive(!0)===this.active}};L(nf,"SpeciesFormChangeActiveTrigger");let ls=nf;const If=class If extends BR{constructor(A,s=!1){super(),Array.isArray(A)||(A=[A]),this.statusEffects=A,this.invert=s}canChange(A){var s;return this.statusEffects.indexOf(((s=A.status)==null?void 0:s.effect)||Re.NONE)>-1!==this.invert}};L(If,"SpeciesFormChangeStatusEffectTrigger");let ac=If;const af=class af extends BR{constructor(A,s=!0){super(),this.move=A,this.known=s}canChange(A){return!!A.moveset.filter(s=>(s==null?void 0:s.moveId)===this.move).length===this.known}};L(af,"SpeciesFormChangeMoveLearnedTrigger");let xI=af;const rf=class rf extends BR{constructor(A,s=!0){super(),this.movePredicate=typeof A=="function"?A:R=>R===A,this.used=s}};L(rf,"SpeciesFormChangeMoveTrigger");let cl=rf;const Lf=class Lf extends cl{canChange(A){const s=A.scene.currentBattle.turnCommands[A.getBattlerIndex()];return!!(s!=null&&s.move)&&this.movePredicate(s.move.move)===this.used}};L(Lf,"SpeciesFormChangePreMoveTrigger");let GT=Lf;const Nf=class Nf extends cl{canChange(A){return A.summonData&&!!A.getLastXMoves(1).filter(s=>this.movePredicate(s.move)).length===this.used}};L(Nf,"SpeciesFormChangePostMoveTrigger");let HT=Nf;const Tf=class Tf extends HT{canChange(A){return A.scene.gameMode.hasChallenge(yt.SINGLE_TYPE)||A.hasAbility(O.SHEER_FORCE)?!1:super.canChange(A)}};L(Tf,"MeloettaFormChangePostMoveTrigger");let _l=Tf;const Sf=class Sf extends BR{constructor(A){super(),this.formKey=A}canChange(A){return this.formKey===A.species.forms[A.scene.getSpeciesFormIndex(A.species,A.gender,A.getNature(),!0)].formKey}};L(Sf,"SpeciesDefaultFormMatchTrigger");let Pl=Sf;const of=class of extends BR{constructor(A){super(),this.teraType=A}canChange(A){return!!A.scene.findModifier(s=>s instanceof OR&&s.pokemonId===A.id&&s.teraType===this.teraType)}};L(of,"SpeciesFormChangeTeraTrigger");let Mi=of;const lf=class lf extends BR{canChange(A){return!!A.scene.findModifier(s=>s instanceof OR&&s.pokemonId===A.id)}};L(lf,"SpeciesFormChangeLapseTeraTrigger");let hi=lf;const Cf=class Cf extends BR{constructor(A,s){super(),this.ability=A,this.weathers=s}canChange(A){var I,a;const s=((I=A.scene.arena.weather)==null?void 0:I.weatherType)??se.NONE,R=(a=A.scene.arena.weather)==null?void 0:a.isEffectSuppressed(A.scene);return!A.summonData.abilitySuppressed&&!R&&A.hasAbility(this.ability)&&this.weathers.includes(s)}};L(Cf,"SpeciesFormChangeWeatherTrigger");let cR=Cf;const Uf=class Uf extends BR{constructor(A,s){super(),this.ability=A,this.weathers=s}canChange(A){var s,R;if(A.hasAbility(this.ability,!1,!0)){const n=((s=A.scene.arena.weather)==null?void 0:s.weatherType)??se.NONE,I=(R=A.scene.arena.weather)==null?void 0:R.isEffectSuppressed(A.scene),a=A.summonData.abilitySuppressed,r=A.summonData.ability,S=r!==this.ability&&r!==O.NONE;if(this.weathers.includes(n)||I||a||S)return!0}return!1}};L(Uf,"SpeciesFormChangeRevertWeatherFormTrigger");let mn=Uf;function rc(E,A,s){const R=A.formKey.indexOf(oe.MEGA)>-1,n=A.formKey.indexOf(oe.GIGANTAMAX)>-1,I=A.formKey.indexOf(oe.ETERNAMAX)>-1,a=!R&&A.formKey===E.species.forms[0].formKey;return R?D.t("battlePokemonForm:megaChange",{preName:s,pokemonName:E.name}):n?D.t("battlePokemonForm:gigantamaxChange",{preName:s,pokemonName:E.name}):I?D.t("battlePokemonForm:eternamaxChange",{preName:s,pokemonName:E.name}):a?D.t("battlePokemonForm:revertChange",{pokemonName:ee(E)}):E.getAbility().id===O.DISGUISE?D.t("battlePokemonForm:disguiseChange"):D.t("battlePokemonForm:formChange",{preName:s})}L(rc,"getSpeciesFormChangeMessage");function _a(E){return new VR(A=>!!A.scene.gameData.dexData[E].caughtAttr)}L(_a,"getSpeciesDependentFormChangeCondition");const VO={[e.VENUSAUR]:[new Se(e.VENUSAUR,"",oe.MEGA,new Pe(48)),new Se(e.VENUSAUR,"",oe.GIGANTAMAX,new Pe(56))],[e.BLASTOISE]:[new Se(e.BLASTOISE,"",oe.MEGA,new Pe(11)),new Se(e.BLASTOISE,"",oe.GIGANTAMAX,new Pe(56))],[e.CHARIZARD]:[new Se(e.CHARIZARD,"",oe.MEGA_X,new Pe(14)),new Se(e.CHARIZARD,"",oe.MEGA_Y,new Pe(15)),new Se(e.CHARIZARD,"",oe.GIGANTAMAX,new Pe(56))],[e.BUTTERFREE]:[new Se(e.BUTTERFREE,"",oe.GIGANTAMAX,new Pe(56))],[e.BEEDRILL]:[new Se(e.BEEDRILL,"",oe.MEGA,new Pe(10))],[e.PIDGEOT]:[new Se(e.PIDGEOT,"",oe.MEGA,new Pe(36))],[e.PIKACHU]:[new Se(e.PIKACHU,"",oe.GIGANTAMAX,new Pe(56)),new Se(e.PIKACHU,"partner",oe.GIGANTAMAX,new Pe(56))],[e.MEOWTH]:[new Se(e.MEOWTH,"",oe.GIGANTAMAX,new Pe(56))],[e.ALAKAZAM]:[new Se(e.ALAKAZAM,"",oe.MEGA,new Pe(5))],[e.MACHAMP]:[new Se(e.MACHAMP,"",oe.GIGANTAMAX,new Pe(56))],[e.SLOWBRO]:[new Se(e.SLOWBRO,"",oe.MEGA,new Pe(44))],[e.GENGAR]:[new Se(e.GENGAR,"",oe.MEGA,new Pe(20)),new Se(e.GENGAR,"",oe.GIGANTAMAX,new Pe(56))],[e.KINGLER]:[new Se(e.KINGLER,"",oe.GIGANTAMAX,new Pe(56))],[e.KANGASKHAN]:[new Se(e.KANGASKHAN,"",oe.MEGA,new Pe(25))],[e.PINSIR]:[new Se(e.PINSIR,"",oe.MEGA,new Pe(37))],[e.GYARADOS]:[new Se(e.GYARADOS,"",oe.MEGA,new Pe(22))],[e.LAPRAS]:[new Se(e.LAPRAS,"",oe.GIGANTAMAX,new Pe(56))],[e.EEVEE]:[new Se(e.EEVEE,"",oe.GIGANTAMAX,new Pe(56)),new Se(e.EEVEE,"partner",oe.GIGANTAMAX,new Pe(56))],[e.SNORLAX]:[new Se(e.SNORLAX,"",oe.GIGANTAMAX,new Pe(56))],[e.AERODACTYL]:[new Se(e.AERODACTYL,"",oe.MEGA,new Pe(3))],[e.MEWTWO]:[new Se(e.MEWTWO,"",oe.MEGA_X,new Pe(34)),new Se(e.MEWTWO,"",oe.MEGA_Y,new Pe(35))],[e.AMPHAROS]:[new Se(e.AMPHAROS,"",oe.MEGA,new Pe(7))],[e.STEELIX]:[new Se(e.STEELIX,"",oe.MEGA,new Pe(45))],[e.SCIZOR]:[new Se(e.SCIZOR,"",oe.MEGA,new Pe(42))],[e.HERACROSS]:[new Se(e.HERACROSS,"",oe.MEGA,new Pe(23))],[e.HOUNDOOM]:[new Se(e.HOUNDOOM,"",oe.MEGA,new Pe(24))],[e.TYRANITAR]:[new Se(e.TYRANITAR,"",oe.MEGA,new Pe(47))],[e.SCEPTILE]:[new Se(e.SCEPTILE,"",oe.MEGA,new Pe(41))],[e.BLAZIKEN]:[new Se(e.BLAZIKEN,"",oe.MEGA,new Pe(12))],[e.SWAMPERT]:[new Se(e.SWAMPERT,"",oe.MEGA,new Pe(46))],[e.GARDEVOIR]:[new Se(e.GARDEVOIR,"",oe.MEGA,new Pe(19))],[e.SABLEYE]:[new Se(e.SABLEYE,"",oe.MEGA,new Pe(39))],[e.MAWILE]:[new Se(e.MAWILE,"",oe.MEGA,new Pe(31))],[e.AGGRON]:[new Se(e.AGGRON,"",oe.MEGA,new Pe(4))],[e.MEDICHAM]:[new Se(e.MEDICHAM,"",oe.MEGA,new Pe(32))],[e.MANECTRIC]:[new Se(e.MANECTRIC,"",oe.MEGA,new Pe(30))],[e.SHARPEDO]:[new Se(e.SHARPEDO,"",oe.MEGA,new Pe(43))],[e.CAMERUPT]:[new Se(e.CAMERUPT,"",oe.MEGA,new Pe(13))],[e.ALTARIA]:[new Se(e.ALTARIA,"",oe.MEGA,new Pe(6))],[e.CASTFORM]:[new Se(e.CASTFORM,"","sunny",new cR(O.FORECAST,[se.SUNNY,se.HARSH_SUN]),!0),new Se(e.CASTFORM,"rainy","sunny",new cR(O.FORECAST,[se.SUNNY,se.HARSH_SUN]),!0),new Se(e.CASTFORM,"snowy","sunny",new cR(O.FORECAST,[se.SUNNY,se.HARSH_SUN]),!0),new Se(e.CASTFORM,"","rainy",new cR(O.FORECAST,[se.RAIN,se.HEAVY_RAIN]),!0),new Se(e.CASTFORM,"sunny","rainy",new cR(O.FORECAST,[se.RAIN,se.HEAVY_RAIN]),!0),new Se(e.CASTFORM,"snowy","rainy",new cR(O.FORECAST,[se.RAIN,se.HEAVY_RAIN]),!0),new Se(e.CASTFORM,"","snowy",new cR(O.FORECAST,[se.HAIL,se.SNOW]),!0),new Se(e.CASTFORM,"sunny","snowy",new cR(O.FORECAST,[se.HAIL,se.SNOW]),!0),new Se(e.CASTFORM,"rainy","snowy",new cR(O.FORECAST,[se.HAIL,se.SNOW]),!0),new Se(e.CASTFORM,"sunny","",new mn(O.FORECAST,[se.NONE,se.SANDSTORM,se.STRONG_WINDS,se.FOG]),!0),new Se(e.CASTFORM,"rainy","",new mn(O.FORECAST,[se.NONE,se.SANDSTORM,se.STRONG_WINDS,se.FOG]),!0),new Se(e.CASTFORM,"snowy","",new mn(O.FORECAST,[se.NONE,se.SANDSTORM,se.STRONG_WINDS,se.FOG]),!0),new Se(e.CASTFORM,"sunny","",new ls,!0),new Se(e.CASTFORM,"rainy","",new ls,!0),new Se(e.CASTFORM,"snowy","",new ls,!0)],[e.BANETTE]:[new Se(e.BANETTE,"",oe.MEGA,new Pe(9))],[e.ABSOL]:[new Se(e.ABSOL,"",oe.MEGA,new Pe(2))],[e.GLALIE]:[new Se(e.GLALIE,"",oe.MEGA,new Pe(21))],[e.SALAMENCE]:[new Se(e.SALAMENCE,"",oe.MEGA,new Pe(40))],[e.METAGROSS]:[new Se(e.METAGROSS,"",oe.MEGA,new Pe(33))],[e.LATIAS]:[new Se(e.LATIAS,"",oe.MEGA,new Pe(26))],[e.LATIOS]:[new Se(e.LATIOS,"",oe.MEGA,new Pe(27))],[e.KYOGRE]:[new Se(e.KYOGRE,"",oe.PRIMAL,new Pe(50))],[e.GROUDON]:[new Se(e.GROUDON,"",oe.PRIMAL,new Pe(51))],[e.RAYQUAZA]:[new Se(e.RAYQUAZA,"",oe.MEGA,new Pe(38))],[e.DEOXYS]:[new Se(e.DEOXYS,"normal","attack",new Pe(100)),new Se(e.DEOXYS,"normal","defense",new Pe(101)),new Se(e.DEOXYS,"normal","speed",new Pe(102))],[e.CHERRIM]:[new Se(e.CHERRIM,"overcast","sunshine",new cR(O.FLOWER_GIFT,[se.SUNNY,se.HARSH_SUN]),!0),new Se(e.CHERRIM,"sunshine","overcast",new mn(O.FLOWER_GIFT,[se.NONE,se.SANDSTORM,se.STRONG_WINDS,se.FOG,se.HAIL,se.HEAVY_RAIN,se.SNOW,se.RAIN]),!0),new Se(e.CHERRIM,"sunshine","overcast",new ls,!0)],[e.LOPUNNY]:[new Se(e.LOPUNNY,"",oe.MEGA,new Pe(28))],[e.GARCHOMP]:[new Se(e.GARCHOMP,"",oe.MEGA,new Pe(18))],[e.LUCARIO]:[new Se(e.LUCARIO,"",oe.MEGA,new Pe(29))],[e.ABOMASNOW]:[new Se(e.ABOMASNOW,"",oe.MEGA,new Pe(1))],[e.GALLADE]:[new Se(e.GALLADE,"",oe.MEGA,new Pe(17))],[e.AUDINO]:[new Se(e.AUDINO,"",oe.MEGA,new Pe(8))],[e.DIALGA]:[new Se(e.DIALGA,"",oe.ORIGIN,new Pe(52))],[e.PALKIA]:[new Se(e.PALKIA,"",oe.ORIGIN,new Pe(53))],[e.GIRATINA]:[new Se(e.GIRATINA,"altered",oe.ORIGIN,new Pe(54))],[e.SHAYMIN]:[new Se(e.SHAYMIN,"land","sky",new Pe(103))],[e.ARCEUS]:[new Se(e.ARCEUS,"normal","fighting",new Pe(113)),new Se(e.ARCEUS,"normal","flying",new Pe(114)),new Se(e.ARCEUS,"normal","poison",new Pe(115)),new Se(e.ARCEUS,"normal","ground",new Pe(116)),new Se(e.ARCEUS,"normal","rock",new Pe(117)),new Se(e.ARCEUS,"normal","bug",new Pe(118)),new Se(e.ARCEUS,"normal","ghost",new Pe(119)),new Se(e.ARCEUS,"normal","steel",new Pe(120)),new Se(e.ARCEUS,"normal","fire",new Pe(121)),new Se(e.ARCEUS,"normal","water",new Pe(122)),new Se(e.ARCEUS,"normal","grass",new Pe(123)),new Se(e.ARCEUS,"normal","electric",new Pe(124)),new Se(e.ARCEUS,"normal","psychic",new Pe(125)),new Se(e.ARCEUS,"normal","ice",new Pe(126)),new Se(e.ARCEUS,"normal","dragon",new Pe(127)),new Se(e.ARCEUS,"normal","dark",new Pe(128)),new Se(e.ARCEUS,"normal","fairy",new Pe(129))],[e.DARMANITAN]:[new Se(e.DARMANITAN,"","zen",new bt,!0),new Se(e.DARMANITAN,"zen","",new bt,!0)],[e.GARBODOR]:[new Se(e.GARBODOR,"",oe.GIGANTAMAX,new Pe(56))],[e.TORNADUS]:[new Se(e.TORNADUS,oe.INCARNATE,oe.THERIAN,new Pe(55))],[e.THUNDURUS]:[new Se(e.THUNDURUS,oe.INCARNATE,oe.THERIAN,new Pe(55))],[e.LANDORUS]:[new Se(e.LANDORUS,oe.INCARNATE,oe.THERIAN,new Pe(55))],[e.KYUREM]:[new Se(e.KYUREM,"","black",new Pe(57),!1,_a(e.ZEKROM)),new Se(e.KYUREM,"","white",new Pe(58),!1,_a(e.RESHIRAM))],[e.KELDEO]:[new Se(e.KELDEO,"ordinary","resolute",new xI(t.SECRET_SWORD)),new Se(e.KELDEO,"resolute","ordinary",new xI(t.SECRET_SWORD,!1))],[e.MELOETTA]:[new Se(e.MELOETTA,"aria","pirouette",new _l(t.RELIC_SONG),!0),new Se(e.MELOETTA,"pirouette","aria",new _l(t.RELIC_SONG),!0)],[e.GENESECT]:[new Se(e.GENESECT,"","shock",new Pe(104)),new Se(e.GENESECT,"","burn",new Pe(105)),new Se(e.GENESECT,"","chill",new Pe(106)),new Se(e.GENESECT,"","douse",new Pe(107))],[e.GRENINJA]:[new Se(e.GRENINJA,"battle-bond","ash",new bt,!0),new Se(e.GRENINJA,"ash","battle-bond",new bt,!0)],[e.PALAFIN]:[new Se(e.PALAFIN,"zero","hero",new bt,!0),new Se(e.PALAFIN,"hero","zero",new bt,!0)],[e.AEGISLASH]:[new Se(e.AEGISLASH,"blade","shield",new GT(t.KINGS_SHIELD),!0,new VR(E=>E.hasAbility(O.STANCE_CHANGE))),new Se(e.AEGISLASH,"shield","blade",new GT(E=>ye[E].category!==Mt.STATUS),!0,new VR(E=>E.hasAbility(O.STANCE_CHANGE))),new Se(e.AEGISLASH,"blade","shield",new ls(!1),!0)],[e.XERNEAS]:[new Se(e.XERNEAS,"neutral","active",new ls(!0),!0),new Se(e.XERNEAS,"active","neutral",new ls(!1),!0)],[e.ZYGARDE]:[new Se(e.ZYGARDE,"50-pc","complete",new bt,!0),new Se(e.ZYGARDE,"complete","50-pc",new bt,!0),new Se(e.ZYGARDE,"10-pc","10-complete",new bt,!0),new Se(e.ZYGARDE,"10-complete","10-pc",new bt,!0)],[e.DIANCIE]:[new Se(e.DIANCIE,"",oe.MEGA,new Pe(16))],[e.HOOPA]:[new Se(e.HOOPA,"","unbound",new Pe(59))],[e.WISHIWASHI]:[new Se(e.WISHIWASHI,"","school",new bt,!0),new Se(e.WISHIWASHI,"school","",new bt,!0)],[e.SILVALLY]:[new Se(e.SILVALLY,"normal","fighting",new Pe(132)),new Se(e.SILVALLY,"normal","flying",new Pe(133)),new Se(e.SILVALLY,"normal","poison",new Pe(134)),new Se(e.SILVALLY,"normal","ground",new Pe(135)),new Se(e.SILVALLY,"normal","rock",new Pe(136)),new Se(e.SILVALLY,"normal","bug",new Pe(137)),new Se(e.SILVALLY,"normal","ghost",new Pe(138)),new Se(e.SILVALLY,"normal","steel",new Pe(139)),new Se(e.SILVALLY,"normal","fire",new Pe(140)),new Se(e.SILVALLY,"normal","water",new Pe(141)),new Se(e.SILVALLY,"normal","grass",new Pe(142)),new Se(e.SILVALLY,"normal","electric",new Pe(143)),new Se(e.SILVALLY,"normal","psychic",new Pe(144)),new Se(e.SILVALLY,"normal","ice",new Pe(145)),new Se(e.SILVALLY,"normal","dragon",new Pe(146)),new Se(e.SILVALLY,"normal","dark",new Pe(147)),new Se(e.SILVALLY,"normal","fairy",new Pe(148))],[e.MINIOR]:[new Se(e.MINIOR,"red-meteor","red",new bt,!0),new Se(e.MINIOR,"red","red-meteor",new bt,!0),new Se(e.MINIOR,"orange-meteor","orange",new bt,!0),new Se(e.MINIOR,"orange","orange-meteor",new bt,!0),new Se(e.MINIOR,"yellow-meteor","yellow",new bt,!0),new Se(e.MINIOR,"yellow","yellow-meteor",new bt,!0),new Se(e.MINIOR,"green-meteor","green",new bt,!0),new Se(e.MINIOR,"green","green-meteor",new bt,!0),new Se(e.MINIOR,"blue-meteor","blue",new bt,!0),new Se(e.MINIOR,"blue","blue-meteor",new bt,!0),new Se(e.MINIOR,"indigo-meteor","indigo",new bt,!0),new Se(e.MINIOR,"indigo","indigo-meteor",new bt,!0),new Se(e.MINIOR,"violet-meteor","violet",new bt,!0),new Se(e.MINIOR,"violet","violet-meteor",new bt,!0)],[e.MIMIKYU]:[new Se(e.MIMIKYU,"disguised","busted",new bt,!0),new Se(e.MIMIKYU,"busted","disguised",new bt,!0)],[e.NECROZMA]:[new Se(e.NECROZMA,"","dawn-wings",new Pe(109),!1,_a(e.LUNALA)),new Se(e.NECROZMA,"","dusk-mane",new Pe(108),!1,_a(e.SOLGALEO)),new Se(e.NECROZMA,"dawn-wings","ultra",new Pe(64)),new Se(e.NECROZMA,"dusk-mane","ultra",new Pe(64))],[e.MELMETAL]:[new Se(e.MELMETAL,"",oe.GIGANTAMAX,new Pe(56))],[e.RILLABOOM]:[new Se(e.RILLABOOM,"",oe.GIGANTAMAX,new Pe(56))],[e.CINDERACE]:[new Se(e.CINDERACE,"",oe.GIGANTAMAX,new Pe(56))],[e.INTELEON]:[new Se(e.INTELEON,"",oe.GIGANTAMAX,new Pe(56))],[e.CORVIKNIGHT]:[new Se(e.CORVIKNIGHT,"",oe.GIGANTAMAX,new Pe(56))],[e.ORBEETLE]:[new Se(e.ORBEETLE,"",oe.GIGANTAMAX,new Pe(56))],[e.DREDNAW]:[new Se(e.DREDNAW,"",oe.GIGANTAMAX,new Pe(56))],[e.COALOSSAL]:[new Se(e.COALOSSAL,"",oe.GIGANTAMAX,new Pe(56))],[e.FLAPPLE]:[new Se(e.FLAPPLE,"",oe.GIGANTAMAX,new Pe(56))],[e.APPLETUN]:[new Se(e.APPLETUN,"",oe.GIGANTAMAX,new Pe(56))],[e.SANDACONDA]:[new Se(e.SANDACONDA,"",oe.GIGANTAMAX,new Pe(56))],[e.CRAMORANT]:[new Se(e.CRAMORANT,"","gulping",new bt,!0,new VR(E=>E.getHpRatio()>=.5)),new Se(e.CRAMORANT,"","gorging",new bt,!0,new VR(E=>E.getHpRatio()<.5)),new Se(e.CRAMORANT,"gulping","",new bt,!0),new Se(e.CRAMORANT,"gorging","",new bt,!0),new Se(e.CRAMORANT,"gulping","",new ls(!1),!0),new Se(e.CRAMORANT,"gorging","",new ls(!1),!0)],[e.TOXTRICITY]:[new Se(e.TOXTRICITY,"amped",oe.GIGANTAMAX,new Pe(56)),new Se(e.TOXTRICITY,"lowkey",oe.GIGANTAMAX,new Pe(56)),new Se(e.TOXTRICITY,oe.GIGANTAMAX,"amped",new PT(new Pe(56,!1),new Pl("amped"))),new Se(e.TOXTRICITY,oe.GIGANTAMAX,"lowkey",new PT(new Pe(56,!1),new Pl("lowkey")))],[e.CENTISKORCH]:[new Se(e.CENTISKORCH,"",oe.GIGANTAMAX,new Pe(56))],[e.HATTERENE]:[new Se(e.HATTERENE,"",oe.GIGANTAMAX,new Pe(56))],[e.GRIMMSNARL]:[new Se(e.GRIMMSNARL,"",oe.GIGANTAMAX,new Pe(56))],[e.ALCREMIE]:[new Se(e.ALCREMIE,"vanilla-cream",oe.GIGANTAMAX,new Pe(56)),new Se(e.ALCREMIE,"ruby-cream",oe.GIGANTAMAX,new Pe(56)),new Se(e.ALCREMIE,"matcha-cream",oe.GIGANTAMAX,new Pe(56)),new Se(e.ALCREMIE,"mint-cream",oe.GIGANTAMAX,new Pe(56)),new Se(e.ALCREMIE,"lemon-cream",oe.GIGANTAMAX,new Pe(56)),new Se(e.ALCREMIE,"salted-cream",oe.GIGANTAMAX,new Pe(56)),new Se(e.ALCREMIE,"ruby-swirl",oe.GIGANTAMAX,new Pe(56)),new Se(e.ALCREMIE,"caramel-swirl",oe.GIGANTAMAX,new Pe(56)),new Se(e.ALCREMIE,"rainbow-swirl",oe.GIGANTAMAX,new Pe(56))],[e.EISCUE]:[new Se(e.EISCUE,"","no-ice",new bt,!0),new Se(e.EISCUE,"no-ice","",new bt,!0)],[e.MORPEKO]:[new Se(e.MORPEKO,"full-belly","hangry",new bt,!0),new Se(e.MORPEKO,"hangry","full-belly",new bt,!0)],[e.COPPERAJAH]:[new Se(e.COPPERAJAH,"",oe.GIGANTAMAX,new Pe(56))],[e.DURALUDON]:[new Se(e.DURALUDON,"",oe.GIGANTAMAX,new Pe(56))],[e.ZACIAN]:[new Se(e.ZACIAN,"hero-of-many-battles","crowned",new Pe(60))],[e.ZAMAZENTA]:[new Se(e.ZAMAZENTA,"hero-of-many-battles","crowned",new Pe(61))],[e.ETERNATUS]:[new Se(e.ETERNATUS,"",oe.ETERNAMAX,new bt),new Se(e.ETERNATUS,"",oe.ETERNAMAX,new Pe(56))],[e.URSHIFU]:[new Se(e.URSHIFU,"single-strike",oe.GIGANTAMAX_SINGLE,new Pe(56)),new Se(e.URSHIFU,"rapid-strike",oe.GIGANTAMAX_RAPID,new Pe(56))],[e.CALYREX]:[new Se(e.CALYREX,"","ice",new Pe(62),!1,_a(e.GLASTRIER)),new Se(e.CALYREX,"","shadow",new Pe(63),!1,_a(e.SPECTRIER))],[e.ENAMORUS]:[new Se(e.ENAMORUS,oe.INCARNATE,oe.THERIAN,new Pe(55))],[e.OGERPON]:[new Se(e.OGERPON,"teal-mask","wellspring-mask",new Pe(110)),new Se(e.OGERPON,"teal-mask","hearthflame-mask",new Pe(111)),new Se(e.OGERPON,"teal-mask","cornerstone-mask",new Pe(112)),new Se(e.OGERPON,"teal-mask","teal-mask-tera",new Mi(i.GRASS)),new Se(e.OGERPON,"teal-mask-tera","teal-mask",new hi,!0,new VR(E=>E.getTeraType()!==i.GRASS)),new Se(e.OGERPON,"wellspring-mask","wellspring-mask-tera",new Mi(i.WATER)),new Se(e.OGERPON,"wellspring-mask-tera","wellspring-mask",new hi,!0,new VR(E=>E.getTeraType()!==i.WATER)),new Se(e.OGERPON,"hearthflame-mask","hearthflame-mask-tera",new Mi(i.FIRE)),new Se(e.OGERPON,"hearthflame-mask-tera","hearthflame-mask",new hi,!0,new VR(E=>E.getTeraType()!==i.FIRE)),new Se(e.OGERPON,"cornerstone-mask","cornerstone-mask-tera",new Mi(i.ROCK)),new Se(e.OGERPON,"cornerstone-mask-tera","cornerstone-mask",new hi,!0,new VR(E=>E.getTeraType()!==i.ROCK))],[e.TERAPAGOS]:[new Se(e.TERAPAGOS,"","terastal",new bt,!0),new Se(e.TERAPAGOS,"terastal","stellar",new Mi(i.STELLAR)),new Se(e.TERAPAGOS,"stellar","terastal",new hi,!0,new VR(E=>E.getTeraType()!==i.STELLAR))],[e.GALAR_DARMANITAN]:[new Se(e.GALAR_DARMANITAN,"","zen",new bt,!0),new Se(e.GALAR_DARMANITAN,"zen","",new bt,!0)]};function c7(){Object.keys(VO).forEach(A=>{const s=VO[A],R=[];for(const n of s){const I=n.findTrigger(Pe);I&&!s.find(a=>n.formKey===a.preFormKey&&n.preFormKey===a.formKey)&&R.push(new Se(n.speciesId,n.formKey,n.preFormKey,new Pe(I.item,!1)))}s.push(...R)})}L(c7,"initPokemonForms");const _7={},uf=class uf{constructor(){this.SEED_OVERRIDE="",this.WEATHER_OVERRIDE=se.NONE,this.BATTLE_TYPE_OVERRIDE=null,this.STARTING_WAVE_OVERRIDE=0,this.STARTING_BIOME_OVERRIDE=N.TOWN,this.ARENA_TINT_OVERRIDE=null,this.XP_MULTIPLIER_OVERRIDE=null,this.NEVER_CRIT_OVERRIDE=!1,this.STARTING_MONEY_OVERRIDE=0,this.WAIVE_SHOP_FEES_OVERRIDE=!1,this.WAIVE_ROLL_FEE_OVERRIDE=!1,this.FREE_CANDY_UPGRADE_OVERRIDE=!1,this.POKEBALL_OVERRIDE={active:!1,pokeballs:{[be.POKEBALL]:5,[be.GREAT_BALL]:0,[be.ULTRA_BALL]:0,[be.ROGUE_BALL]:0,[be.MASTER_BALL]:0}},this.ITEM_UNLOCK_OVERRIDE=[],this.BYPASS_TUTORIAL_SKIP_OVERRIDE=!1,this.ACHIEVEMENTS_REUNLOCK_OVERRIDE=!1,this.STATUS_ACTIVATION_OVERRIDE=null,this.STARTER_FORM_OVERRIDES={},this.STARTING_LEVEL_OVERRIDE=0,this.STARTER_SPECIES_OVERRIDE=0,this.STARTER_FUSION_OVERRIDE=!1,this.STARTER_FUSION_SPECIES_OVERRIDE=0,this.ABILITY_OVERRIDE=O.NONE,this.PASSIVE_ABILITY_OVERRIDE=O.NONE,this.STATUS_OVERRIDE=Re.NONE,this.GENDER_OVERRIDE=null,this.MOVESET_OVERRIDE=[],this.SHINY_OVERRIDE=null,this.VARIANT_OVERRIDE=null,this.OPP_SPECIES_OVERRIDE=0,this.OPP_FUSION_OVERRIDE=!1,this.OPP_FUSION_SPECIES_OVERRIDE=0,this.OPP_LEVEL_OVERRIDE=0,this.OPP_ABILITY_OVERRIDE=O.NONE,this.OPP_PASSIVE_ABILITY_OVERRIDE=O.NONE,this.OPP_STATUS_OVERRIDE=Re.NONE,this.OPP_GENDER_OVERRIDE=null,this.OPP_MOVESET_OVERRIDE=[],this.OPP_SHINY_OVERRIDE=null,this.OPP_VARIANT_OVERRIDE=null,this.OPP_IVS_OVERRIDE=[],this.OPP_FORM_OVERRIDES={},this.OPP_HEALTH_SEGMENTS_OVERRIDE=0,this.EGG_IMMEDIATE_HATCH_OVERRIDE=!1,this.EGG_TIER_OVERRIDE=null,this.EGG_SHINY_OVERRIDE=!1,this.EGG_VARIANT_OVERRIDE=null,this.EGG_FREE_GACHA_PULLS_OVERRIDE=!1,this.EGG_GACHA_PULL_COUNT_OVERRIDE=0,this.UNLIMITED_EGG_COUNT_OVERRIDE=!1,this.MYSTERY_ENCOUNTER_RATE_OVERRIDE=null,this.MYSTERY_ENCOUNTER_TIER_OVERRIDE=null,this.MYSTERY_ENCOUNTER_OVERRIDE=null,this.STARTING_MODIFIER_OVERRIDE=[],this.OPP_MODIFIER_OVERRIDE=[],this.STARTING_HELD_ITEMS_OVERRIDE=[],this.OPP_HELD_ITEMS_OVERRIDE=[],this.ITEM_REWARD_OVERRIDE=[]}};L(uf,"DefaultOverrides");let Lc=uf;const P7=new Lc,Ye={...P7,..._7},Df=class Df{constructor(A){Ve(A)||Object.assign(this,A),this.spriteScale=this.spriteScale??-1,this.ability=this.ability??-1,this.passive=this.passive??-1,this.nature=this.nature??-1,this.types=this.types??[]}};L(Df,"CustomPokemonData");let ns=Df;const Mf=class Mf{constructor(A,s=!1){var n,I,a;const R=A instanceof QR?A:null;this.id=A.id,this.player=R?R.isPlayer():A.player,this.species=R?R.species.speciesId:A.species,this.nickname=R?R.nickname:A.nickname,this.formIndex=Math.max(Math.min(A.formIndex,xe(this.species).forms.length-1),0),this.abilityIndex=A.abilityIndex,this.passive=A.passive,this.shiny=A.shiny,this.variant=A.variant,this.pokeball=A.pokeball,this.level=A.level,this.exp=A.exp,s||(this.levelExp=A.levelExp),this.gender=A.gender,s||(this.hp=A.hp),this.stats=A.stats,this.ivs=A.ivs,this.nature=A.nature!==void 0?A.nature:0,this.friendship=A.friendship!==void 0?A.friendship:xe(this.species).baseFriendship,this.metLevel=A.metLevel||5,this.metBiome=A.metBiome!==void 0?A.metBiome:-1,this.metSpecies=A.metSpecies,this.metWave=A.metWave??(this.metBiome===-1?-1:0),this.luck=A.luck!==void 0?A.luck:A.shiny?A.variant+1:0,s||(this.pauseEvolutions=!!A.pauseEvolutions,this.evoCounter=A.evoCounter??0),this.pokerus=!!A.pokerus,this.fusionSpecies=R?(n=R.fusionSpecies)==null?void 0:n.speciesId:A.fusionSpecies,this.fusionFormIndex=A.fusionFormIndex,this.fusionAbilityIndex=A.fusionAbilityIndex,this.fusionShiny=A.fusionShiny,this.fusionVariant=A.fusionVariant,this.fusionGender=A.fusionGender,this.fusionLuck=A.fusionLuck!==void 0?A.fusionLuck:A.fusionShiny?A.fusionVariant+1:0,this.fusionCustomPokemonData=new ns(A.fusionCustomPokemonData),this.usedTMs=A.usedTMs??[],this.customPokemonData=new ns(A.customPokemonData),this.natureOverride=A.natureOverride,this.mysteryEncounterPokemonData=A.mysteryEncounterPokemonData?new ns(A.mysteryEncounterPokemonData):null,this.fusionMysteryEncounterPokemonData=A.fusionMysteryEncounterPokemonData?new ns(A.fusionMysteryEncounterPokemonData):null,s||(this.boss=A instanceof rs&&!!A.bossSegments||!this.player&&!!A.boss,this.bossSegments=A.bossSegments),R?(this.moveset=R.moveset,s||(this.status=R.status,this.player&&(this.summonData=R.summonData))):(this.moveset=(A.moveset||[new Ot(t.TACKLE),new Ot(t.GROWL)]).filter(r=>r).map(r=>new Ot(r.moveId,r.ppUsed,r.ppUp,r.virtual,r.maxPpOverride)),s||(this.status=A.status?new VI(A.status.effect,A.status.toxicTurnCount,A.status.sleepTurnsRemaining):null),this.summonData=new kS,!s&&A.summonData&&(this.summonData.stats=A.summonData.stats,this.summonData.statStages=A.summonData.statStages,this.summonData.moveQueue=A.summonData.moveQueue,this.summonData.abilitySuppressed=A.summonData.abilitySuppressed,this.summonData.abilitiesApplied=A.summonData.abilitiesApplied,this.summonData.ability=A.summonData.ability,this.summonData.moveset=(I=A.summonData.moveset)==null?void 0:I.map(r=>Ot.loadMove(r)),this.summonData.types=A.summonData.types,A.summonData.tags?this.summonData.tags=(a=A.summonData.tags)==null?void 0:a.map(r=>qQ(r)):this.summonData.tags=[]))}toPokemon(A,s,R=0,n=!1){const I=xe(this.species),a=this.player?A.addPlayerPokemon(I,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this,r=>{this.nickname&&(r.nickname=this.nickname)}):A.addEnemyPokemon(I,this.level,s===ht.TRAINER?!n||!(R%2)?Tt.TRAINER:Tt.TRAINER_PARTNER:Tt.NONE,this.boss,!1,this);return this.summonData&&a.primeSummonData(this.summonData),a}};L(Mf,"PokemonData");let cs=Mf;const G7=[],bI={[t.MEGA_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.COALOSSAL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[t.PAY_DAY]:[e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.RHYDON,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.SKITTY,e.DELCATTY,e.MUNCHLAX,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.PURRLOIN,e.LIEPARD,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.ZERAORA,e.PERRSERKER,e.INDEEDEE,e.CALYREX,e.ANNIHILAPE,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.FIRE_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,[e.LYCANROC,"midnight"],e.KOMMO_O,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.CINDERACE,e.COALOSSAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[t.ICE_PUNCH]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.MELOETTA,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HOOPA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.KOMMO_O,e.TAPU_FINI,e.BUZZWOLE,e.MARSHADOW,e.MELMETAL,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.EISCUE,e.KUBFU,e.URSHIFU,e.URSALUNA,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.CETITAN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.BLOODMOON_URSALUNA],[t.THUNDER_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,[e.LYCANROC,"midnight"],e.KOMMO_O,e.TAPU_KOKO,e.BUZZWOLE,e.XURKITREE,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.URSALUNA,e.FLORAGATO,e.MEOWSCARADA,e.PAWMO,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[t.SWORDS_DANCE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.BANETTE,e.TROPIUS,e.ABSOL,e.WALREIN,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.CHERUBI,e.CHERRIM,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.LILLIGANT,e.DWEBBLE,e.CRUSTLE,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.FOMANTIS,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.KARTANA,e.NECROZMA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.INTELEON,e.GREEDENT,e.DUBWOOL,e.DREDNAW,e.HATTERENE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.DURALUDON,e.ZACIAN,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.LOKIX,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.KINGAMBIT,e.IRON_HANDS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.CUT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.BELLOSSOM,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.GLIGAR,e.STEELIX,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ROSELIA,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.KARTANA,e.OBSTAGOON,e.PERRSERKER,e.URSALUNA,e.BASCULEGION,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.FLY]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.GIRATINA,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GENESECT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRAGAPULT,e.ETERNATUS,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY],[t.MEGA_KICK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DUBWOOL,e.COALOSSAL,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.QUAQUAVAL,e.FLAMIGO,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_LILLIGANT],[t.BODY_SLAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.LUXRAY,e.ROSERADE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.THROH,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.GARBODOR,e.ZOROARK,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.BRIONNE,e.PRIMARINA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.ARAQUANID,e.SALAZZLE,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TAKE_DOWN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.RHYPERIOR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ROGGENROLA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.MAGEARNA,e.STAKATAKA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.DOUBLE_EDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TYROGUE,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.AMBIPOM,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KELDEO,e.CHESNAUGHT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.CARBINK,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.PERRSERKER,e.EISCUE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.LOKIX,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.PIN_MISSILE]:[e.BEEDRILL,e.SANDSLASH,e.CLOYSTER,e.JOLTEON,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.ZIGZAGOON,e.LINOONE,e.ROSELIA,e.CACNEA,e.CACTURNE,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.TOGEDEMARU,e.POIPOLE,e.NAGANADEL,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.OVERQWIL,e.IRON_THORNS,e.ALOLA_SANDSLASH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH],[t.ROAR]:[e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.ALTARIA,e.ZANGOOSE,e.TROPIUS,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.AVALUGG,e.XERNEAS,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.YAMPER,e.BOLTUND,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,[e.URSHIFU,"single-strike"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[t.FLAMETHROWER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.ZOROARK,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[t.HYDRO_PUMP]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MAGIKARP,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.AVALUGG,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.ROARING_MOON,e.WALKING_WAKE,e.HYDRAPPLE,[e.ROTOM,"wash"],e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.SURF]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.HERDIER,e.STOUTLAND,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.BOUFFALANT,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_RAICHU,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"combat","aqua"],e.PALDEA_WOOPER],[t.ICE_BEAM]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MELMETAL,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.BLIZZARD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,[e.ROTOM,"frost"],e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.PSYBEAM]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.CHINCHOU,e.CLEFFA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.REMORAID,e.OCTILLERY,e.MANTINE,e.PORYGON2,e.STANTLER,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.TAPU_LELE,e.MAGEARNA,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.HYPER_BEAM]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.KIRLIA,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.BASCULIN,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.LOW_KICK]:[e.SANDSHREW,e.SANDSLASH,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.PONYTA,e.RAPIDASH,e.DODUO,e.DODRIO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BONSLY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ZOROARK,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.ESPATHRA,e.FLAMIGO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.COUNTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.RIOLU,e.LUCARIO,e.SHELLOS,e.GASTRODON,e.CROAGUNK,e.TOXICROAK,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.ACCELGOR,e.AXEW,e.FRAXURE,e.HAXORUS,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.GOOMY,e.SLIGGOO,e.GOODRA,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.PYUKUMUKU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.FALINKS,e.KUBFU,e.URSHIFU,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.FINIZEN,e.PALAFIN,e.TATSUGIRI,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.IRON_BOULDER],[t.STRENGTH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.LOPUNNY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.HERDIER,e.STOUTLAND,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.REUNICLUS,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.URSALUNA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SOLAR_BEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ARCANINE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MOLTRES,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.ENTEI,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.TROPIUS,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.LICKILICKY,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.UXIE,e.HEATRAN,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.GIGALITH,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLURK,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.HELIOLISK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.CENTISKORCH,e.MR_RIME,e.ALCREMIE,e.DURALUDON,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.GLIMMORA,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_MOTH,e.WO_CHIEN,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.FIRE_SPIN]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.SOLROCK,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SKUNTANK,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.DRACOZOLT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.THUNDERBOLT]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.GOLURK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.NAGANADEL,e.ZERAORA,e.MELTAN,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.CYCLIZAR,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.THUNDER_WAVE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.GYARADOS,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.ZERAORA,e.MELTAN,e.MELMETAL,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.THUNDER]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.PORYGON_Z,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.AROMATISSE,e.SLURPUFF,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AURORUS,e.DEDENNE,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.EARTHQUAKE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.HAXORUS,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.GOGOAT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AURORUS,e.GOODRA,e.TREVENANT,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.SKELEDIRGE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.DIG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.REGIROCK,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.DURANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.WYRDEER,e.URSALUNA,e.SNEASLER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TOXIC]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.PSYCHIC]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.POLITOED,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GARBODOR,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_MOTH,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.AGILITY]:[e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.PARAS,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.HITMONCHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARMIE,e.SCYTHER,e.JOLTEON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.FERALIGATR,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SHEDINJA,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.GOREBYSS,e.LUVDISC,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CHATOT,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.DURANT,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VIKAVOLT,e.ORICORIO,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.WOOLOO,e.DUBWOOL,e.BOLTUND,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.HATTERENE,e.FALINKS,e.EISCUE,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,[e.DEOXYS,"speed"],e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.NIGHT_SHADE]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.VENONAT,e.VENOMOTH,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.NATU,e.XATU,e.MURKROW,e.MISDREAVUS,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.BRONZONG,e.CHATOT,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.LUNALA,e.BLACEPHALON,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.SCREECH]:[e.RATTATA,e.EKANS,e.ARBOK,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.ONIX,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MAREEP,e.POLITOED,e.AIPOM,e.YANMA,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.ELEKID,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SHIFTRY,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.HUNTAIL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.BLITZLE,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.NOIBAT,e.NOIVERN,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ETERNATUS,e.REGIELEKI,e.SNEASLER,e.NYMBLE,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.DUDUNSPARCE,e.SANDY_SHOCKS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL],[t.DOUBLE_TEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CONFUSE_RAY]:[e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.STARYU,e.STARMIE,e.MR_MIME,e.MAGMAR,e.LAPRAS,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.MANTINE,e.STANTLER,e.MAGBY,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LILEEP,e.CRADILY,e.FEEBAS,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.DELPHOX,e.VIVILLON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.MR_RIME,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.LIGHT_SCREEN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SCIZOR,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.WHIMSICOTT,e.LILLIGANT,e.SIGILYPH,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.BLACEPHALON,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.ALCREMIE,e.FROSMOTH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.INDEEDEE,"female"]],[t.HAZE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.QWILFISH,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SURSKIT,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.SEVIPER,e.FEEBAS,e.MILOTIC,e.DUSKULL,e.DUSCLOPS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MANTYKE,e.GLACEON,e.MAMOSWINE,e.DUSKNOIR,e.FROSLASS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.ZEKROM,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.MAREANIE,e.TOXAPEX,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.RUNERIGUS,e.SPECTRIER,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CLODSIRE,e.CHIEN_PAO,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER],[t.REFLECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BASTIODON,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.WEAVILE,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.LEAVANNY,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ARAQUANID,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_CORSOLA,[e.INDEEDEE,"female"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.FOCUS_ENERGY]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.SENTRET,e.FURRET,e.ARIADOS,e.ESPEON,e.UMBREON,e.SCIZOR,e.TEDDIURSA,e.REMORAID,e.OCTILLERY,e.KINGDRA,e.PHANPY,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.LUCARIO,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.SYLVEON,e.VOLCANION,e.PASSIMIAN,e.BUZZWOLE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.BOLTUND,e.FLAPPLE,e.ARROKUDA,e.BARRASKEWDA,e.GRIMMSNARL,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.IRON_HANDS,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.PIKACHU,e.ALOLA_MAROWAK,[e.LYCANROC,"dusk"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT],[t.METRONOME]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSCLOPS,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.FLOATZEL,e.AMBIPOM,e.HAPPINY,e.MUNCHLAX,e.LUCARIO,e.WEAVILE,e.TOGEKISS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GOTHORITA,e.GOTHITELLE,e.TORNADUS,e.MELOETTA,e.DELPHOX,e.FLOETTE,e.FLORGES,e.AROMATISSE,e.SLURPUFF,e.DIANCIE,e.INTELEON,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.URSALUNA,e.PAWMOT,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.MUNKIDORI,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_LILLIGANT],[t.SELF_DESTRUCT]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEWTWO,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.BONSLY,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.AZELF,e.HEATRAN,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.LANDORUS,e.GENESECT,e.VOLCANION,e.SILVALLY,e.MINIOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.POLTEAGEIST,e.CURSOLA,e.PINCURCHIN,e.STONJOURNER,e.REGIELEKI,e.REGIDRAGO,e.VAROOM,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH],[t.FIRE_BLAST]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[t.WATERFALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.PALDEA_WOOPER],[t.SWIFT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.SCYTHER,e.ELECTABUZZ,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.WIMPOD,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TOGEDEMARU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PINCURCHIN,e.FROSMOTH,e.INDEEDEE,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.WALKING_WAKE,e.IRON_LEAVES,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.AMNESIA]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.LICKITUNG,e.TANGELA,e.SNORLAX,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.GIRAFARIG,e.DUNSPARCE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.LILEEP,e.CRADILY,e.CASTFORM,e.WYNAUT,e.GOREBYSS,e.RELICANTH,e.REGICE,e.REGISTEEL,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MANTYKE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.UXIE,e.PANSEAR,e.SIMISEAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.BOUFFALANT,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.SWIRLIX,e.SLURPUFF,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.APPLETUN,e.CRAMORANT,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.EISCUE,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,[e.DEOXYS,"defense"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.PALDEA_WOOPER],[t.DREAM_EATER]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.LAPRAS,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.LUNALA,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_ARTICUNO],[t.LEECH_LIFE]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.KABUTO,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.DUSKULL,e.DUSCLOPS,e.KRICKETUNE,e.DRAPION,e.YANMEGA,e.DUSKNOIR,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.NOIBAT,e.NOIVERN,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.MIMIKYU,e.BUZZWOLE,e.NAGANADEL,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.FROSMOTH,e.DRACOVISH,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.FLASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SHUCKLE,e.SKARMORY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.GOLETT,e.GOLURK,e.VIRIZION,e.ZEKROM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.WYRDEER,e.CLODSIRE,e.FARIGIRAF,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_LILLIGANT,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[t.EXPLOSION]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.BONSLY,e.MAGNEZONE,e.LICKILICKY,e.PROBOPASS,e.AZELF,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.LANDORUS,e.GENESECT,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.VOLCANION,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.ROLYCOLY,e.REGIELEKI,e.REGIDRAGO,e.GARGANACL,e.GLIMMET,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.REST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.ROCK_SLIDE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TRI_ATTACK]:[e.SPEAROW,e.FEAROW,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNETON,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.PORYGON2,e.BLISSEY,e.LATIAS,e.LATIOS,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.BEHEEYEM,e.HYDREIGON,e.GENESECT,e.TYPE_NULL,e.SILVALLY,e.MAGEARNA,e.ALCREMIE,e.INDEEDEE,e.DRAGAPULT,e.CALYREX,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.ALOLA_DUGTRIO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.SUPER_FANG]:[e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEW,e.SENTRET,e.FURRET,e.CROBAT,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.MAWILE,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.BIDOOF,e.BIBAREL,e.PACHIRISU,e.GLAMEOW,e.PURUGLY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.PATRAT,e.WATCHOG,e.WOOBAT,e.SWOOBAT,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YUNGOOS,e.GUMSHOOS,e.KOMALA,e.TOGEDEMARU,e.BRUXISH,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SHROODLE,e.GRAFAIAI,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.SUBSTITUTE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.THIEF]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.QUAGSIRE,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.DARKRAI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.PANGORO,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.CUTIEFLY,e.RIBOMBEE,e.SALANDIT,e.SALAZZLE,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TOGEDEMARU,e.MIMIKYU,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZARUDE,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_BUNDLE,e.GIMMIGHOUL,e.GHOLDENGO,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SNORE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CATERPIE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WURMPLE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.URSALUNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[t.CURSE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.NOSEPASS,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.SPIRITOMB,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.GIRATINA,e.DARKRAI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SAWSBUCK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.BEARTIC,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SYLVEON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.DECIDUEYE,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.MIMIKYU,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.PINCURCHIN,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_THORNS,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.REVERSAL]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.YANMA,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.HITMONTOP,e.MILTANK,e.ENTEI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.SEVIPER,e.MONFERNO,e.INFERNAPE,e.VESPIQUEN,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.YANMEGA,e.MAMOSWINE,e.GALLADE,e.VICTINI,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.DARMANITAN,e.SCRAFTY,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.HAWLUCHA,e.ZYGARDE,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,[e.LYCANROC,"midnight","dusk"],e.BEWEAR,e.PASSIMIAN,e.SILVALLY,e.KOMALA,e.TOGEDEMARU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.MORPEKO,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,[e.LYCANROC,"midnight","dusk"],e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.SPITE]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.DECIDUEYE,e.MAREANIE,e.TOXAPEX,e.ORANGURU,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.CURSOLA,e.MORPEKO,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.LOKIX,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.FLUTTER_MANE,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.PROTECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SCARY_FACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.RATICATE,e.SPEAROW,e.EKANS,e.ARBOK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.HYPNO,e.ELECTRODE,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.SCYTHER,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.URSARING,e.SWINUB,e.PILOSWINE,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.STANTLER,e.MAGBY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.AGGRON,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.WHISCASH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.GLALIE,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SAMUROTT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.AMOONGUSS,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ZERAORA,e.THWACKEY,e.RILLABOOM,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.FLAPPLE,e.SILICOBRA,e.SANDACONDA,e.BARRASKEWDA,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.ENAMORUS,e.SKELEDIRGE,e.SPIDOPS,e.LOKIX,e.DACHSBUN,e.SQUAWKABILLY,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.GREAVARD,e.HOUNDSTONE,e.DONDOZO,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SLUDGE_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TORKOAL,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.METANG,e.METAGROSS,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.TANGROWTH,e.GLISCOR,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DRUDDIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.MUD_SLAP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.LILLIPUP,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MINCCINO,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.STUNFISK,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.LANDORUS,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.SALANDIT,e.SALAZZLE,e.SANDYGAST,e.PALOSSAND,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.SILICOBRA,e.SANDACONDA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.MUNKIDORI,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_STUNFISK,e.PALDEA_WOOPER],[t.SPIKES]:[e.SANDSHREW,e.SANDSLASH,e.SHELLDER,e.CLOYSTER,e.OMANYTE,e.OMASTAR,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.DELIBIRD,e.SKARMORY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.WHISCASH,e.SNORUNT,e.GLALIE,e.GROUDON,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.BONSLY,e.GARCHOMP,e.GLISCOR,e.FROSLASS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.TRUBBISH,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.SHELMET,e.ACCELGOR,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.CARBINK,e.KLEFKI,e.DIANCIE,e.WIMPOD,e.GOLISOPOD,e.MAGEARNA,e.NAGANADEL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.PINCURCHIN,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.OGERPON,[e.DEOXYS,"defense"],e.ALOLA_SANDSLASH,e.HISUI_QWILFISH,e.PALDEA_WOOPER],[t.ICY_WIND]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.TORNADUS,e.KYUREM,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.ORICORIO,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.CRAMORANT,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.QUAQUAVAL,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.TATSUGIRI,e.FLUTTER_MANE,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_AVALUGG],[t.OUTRAGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.NIDOQUEEN,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MAROWAK,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.GRANBULL,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.ABOMASNOW,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.GLASTRIER,e.BASCULEGION,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.MABOSSTIFF,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight","dusk"],[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.SANDSTORM]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.NINCADA,e.NINJASK,e.SHEDINJA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.ABSOL,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ACCELGOR,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.TORNADUS,e.LANDORUS,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NIHILEGO,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.ZAMAZENTA,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.OGERPON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.GIGA_DRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTO,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.UXIE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.TAPU_BULU,e.CELESTEELA,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.ALCREMIE,e.FROSMOTH,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.ENDURE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CHARM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.CHANSEY,e.MR_MIME,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.CHIMECHO,e.WYNAUT,e.LUVDISC,e.LATIAS,e.JIRACHI,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.MESPRIT,e.PHIONE,e.MANAPHY,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.TAPU_LELE,e.POIPOLE,e.NAGANADEL,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.TOXEL,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.FINIZEN,e.PALAFIN,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.FLUTTER_MANE,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.FALSE_SWIPE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.FARFETCHD,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.SCYTHER,e.PINSIR,e.JOLTEON,e.MEW,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAWILE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.EMPOLEON,e.KRICKETUNE,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.GALLADE,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CHEWTLE,e.DREDNAW,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.URSHIFU,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.KINGAMBIT,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_SANDSLASH,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[t.SWAGGER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.CUFANT,e.ZARUDE,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CHI_YU,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWKING,e.PALDEA_TAUROS],[t.STEEL_WING]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.LEAVANNY,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.ELGYEM,e.BEHEEYEM,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.DRAKLOAK,e.DRAGAPULT,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],[t.ATTRACT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.HEATRAN,e.CRESSELIA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SLEEP_TALK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.HEAL_BELL]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.LICKITUNG,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.DRAGONITE,e.MEW,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.GRANBULL,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.HAPPINY,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.UXIE,e.PHIONE,e.MANAPHY,e.MUNNA,e.MUSHARNA,e.AUDINO,e.PETILIL,e.LILLIGANT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DIANCIE,e.COMFEY,e.MAGEARNA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_LILLIGANT,e.ETERNAL_FLOETTE],[t.RETURN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FRUSTRATION]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SAFEGUARD]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.LAPRAS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.SCIZOR,e.SHUCKLE,e.CORSOLA,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.WYNAUT,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.APPLETUN,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.ZAMAZENTA,e.CALYREX,e.ARBOLIVA,e.RABSCA,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.INDEEDEE,"female"]],[t.PAIN_SPLIT]:[e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.TANGELA,e.STARYU,e.STARMIE,e.PORYGON,e.MEW,e.IGGLYBUFF,e.NATU,e.XATU,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.RAMPARDOS,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.TANGROWTH,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.GIRATINA,e.MUNNA,e.MUSHARNA,e.AUDINO,e.THROH,e.SAWK,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.MAREANIE,e.TOXAPEX,e.STUFFUL,e.BEWEAR,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NIHILEGO,e.MAGEARNA,e.BLACEPHALON,e.CLOBBOPUS,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.ALCREMIE,e.PINCURCHIN,e.SPECTRIER,e.BASCULEGION,e.OVERQWIL,e.SPIDOPS,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.WUGTRIO,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DUDUNSPARCE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.MEGAHORN]:[e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.SPINARAK,e.ARIADOS,e.HERACROSS,e.STANTLER,e.ABSOL,e.RHYPERIOR,e.SAMUROTT,e.SCOLIPEDE,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.CELESTEELA,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.WYRDEER,e.CLODSIRE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.IRON_BOULDER,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_SAMUROTT],[t.BATON_PASS]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.POLIWRATH,e.RAPIDASH,e.FARFETCHD,e.HYPNO,e.MR_MIME,e.SCYTHER,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ZAPDOS,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SKITTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.KRICKETUNE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.MIME_JR,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.SHELMET,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DURANT,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.PASSIMIAN,e.PYUKUMUKU,e.MAGEARNA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.DUBWOOL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.FIDOUGH,e.DACHSBUN,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.TATSUGIRI,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_DECIDUEYE],[t.ENCORE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SEEL,e.DEWGONG,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.MR_MIME,e.JYNX,e.SNORLAX,e.DRAGONITE,e.MEW,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SABLEYE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WYNAUT,e.SPHEAL,e.SEALEO,e.WALREIN,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.CHATOT,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOUCANNON,e.SALAZZLE,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MAGEARNA,e.BLACEPHALON,e.TOXEL,e.TOXTRICITY,e.MR_RIME,e.ALCREMIE,[e.INDEEDEE,"male"],e.ZARUDE,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_VALIANT,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT],[t.IRON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.SEEL,e.DEWGONG,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.KECLEON,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.TURTONATOR,e.TOGEDEMARU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.OBSTAGOON,e.PERRSERKER,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.WYRDEER,e.SNEASLER,e.CYCLIZAR,e.ORTHWORM,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.METAL_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.MEOWTH,e.PERSIAN,e.KRABBY,e.KINGLER,e.MEW,e.TOTODILE,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.METANG,e.METAGROSS,e.REGISTEEL,e.GROUDON,e.PRINPLUP,e.EMPOLEON,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.WEAVILE,e.GLISCOR,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BRAVIARY,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.WIMPOD,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NECROZMA,e.CORVIKNIGHT,e.PERRSERKER,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMI,e.PAWMO,e.PAWMOT,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.KINGAMBIT,e.IRON_THORNS,e.ROARING_MOON,e.OKIDOGI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.SYNTHESIS]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.TAPU_BULU,e.KARTANA,e.GOSSIFLEUR,e.ELDEGOSS,e.ZARUDE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRUTE_BONNET,e.OGERPON,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.HIDDEN_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.RAIN_DANCE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.BASCULIN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.LURANTIS,e.SHIINOTIC,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_FINI,e.XURKITREE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.WYRDEER,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.SCREAM_TAIL,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.WALKING_WAKE,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SUNNY_DAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.MAGEARNA,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.CORVISQUIRE,e.CORVIKNIGHT,e.GOSSIFLEUR,e.ELDEGOSS,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.STONJOURNER,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_DECIDUEYE,[e.PALDEA_TAUROS,"combat","blaze"],e.BLOODMOON_URSALUNA],[t.CRUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.OMASTAR,e.AERODACTYL,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CROBAT,e.UMBREON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.BUIZEL,e.FLOATZEL,e.STUNKY,e.SKUNTANK,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.RHYPERIOR,e.YANMEGA,e.GLISCOR,e.FROSLASS,e.HEATRAN,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DONDOZO,e.FARIGIRAF,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_QWILFISH,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.PSYCH_UP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.SNEASEL,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.GOLISOPOD,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.MARSHADOW,e.INDEEDEE,e.RABSCA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.SHADOW_BALL]:[e.BUTTERFREE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.LICKITUNG,e.KOFFING,e.WEEZING,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.VULLABY,e.MANDIBUZZ,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.MEOWSTIC,e.AEGISLASH,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.PRIMARINA,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.SKELEDIRGE,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.FUTURE_SIGHT]:[e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.MR_MIME,e.JYNX,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MARILL,e.AZUMARILL,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SPOINK,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CASTFORM,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.DELPHOX,e.INKAY,e.MALAMAR,e.ORANGURU,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,[e.MEOWSTIC,"female"],e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING],[t.ROCK_SMASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.REUNICLUS,e.SAWSBUCK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.GOLISOPOD,e.TAPU_BULU,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KUBFU,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.KORAIDON,e.ARCHALUDON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.WHIRLPOOL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.PALAFIN,e.TATSUGIRI,e.IRON_BUNDLE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.URSHIFU,"rapid-strike"],e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"]],[t.BEAT_UP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.KANGASKHAN,e.MEW,e.AIPOM,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VESPIQUEN,e.AMBIPOM,e.WEAVILE,e.COTTONEE,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.VANILLUXE,e.PAWNIARD,e.BISHARP,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.MIMIKYU,e.NICKIT,e.THIEVUL,e.FALINKS,e.DRAKLOAK,e.DRAGAPULT,e.URSHIFU,e.TANDEMAUS,e.MAUSHOLD,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.FEZANDIPITI,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN],[t.UPROAR]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.DODUO,e.DODRIO,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.WHISCASH,e.CHIMECHO,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.MUNCHLAX,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.ROTOM,e.AZELF,e.HEATRAN,e.PHIONE,e.MANAPHY,e.VICTINI,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.WISHIWASHI,e.PASSIMIAN,e.TURTONATOR,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.YAMPER,e.BOLTUND,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.FALINKS,e.MORPEKO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.KORAIDON,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.BLOODMOON_URSALUNA],[t.HEAT_WAVE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.WEEZING,e.MAGMAR,e.FLAREON,e.AERODACTYL,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.SOLROCK,e.SALAMENCE,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.MAGMORTAR,e.TOGEKISS,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DARUMAKA,e.DARMANITAN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.SQUAWKABILLY,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BOMBIRDIER,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.FEZANDIPITI,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY],[t.HAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HAPPINY,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.KELDEO,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.CARBINK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.CALYREX,"ice"]],[t.TORMENT]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LOUDRED,e.EXPLOUD,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.SALANDIT,e.SALAZZLE,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.PHEROMOSA,e.BLACEPHALON,e.NICKIT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MORPEKO,e.GLASTRIER,e.ENAMORUS,e.SQUAWKABILLY,e.BOMBIRDIER,e.VAROOM,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.CALYREX,"ice"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.WILL_O_WISP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.ALTARIA,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.LUNALA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.HOUNDSTONE,e.SLITHER_WING,e.CHI_YU,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,[e.PALDEA_TAUROS,"blaze"]],[t.FACADE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FOCUS_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.GRIMMSNARL,e.MR_RIME,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.PAWMO,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.ANNIHILAPE,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.NATURE_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.BELLOSSOM,e.SUDOWOODO,e.SUNKERN,e.SUNFLORA,e.STEELIX,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.CRAWDAUNT,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.BONSLY,e.CARNIVINE,e.FINNEON,e.TANGROWTH,e.LEAFEON,e.HEATRAN,e.REGIGIGAS,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.XURKITREE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CURSOLA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.CHARGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.TAUNT]:[e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.ESCAVALIER,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.BOMBIRDIER,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.FLAMIGO,e.TATSUGIRI,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.RAGING_BOLT,e.IRON_BOULDER,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.HELPING_HAND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PYUKUMUKU,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.LUNALA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.APPLETUN,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FALINKS,e.FROSMOTH,e.INDEEDEE,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_MOTH,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TRICK]:[e.CLEFAIRY,e.CLEFABLE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLURK,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.SCREAM_TAIL,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SUPERPOWER]:[e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.KRABBY,e.KINGLER,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.PINSIR,e.FLAREON,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.HONCHKROW,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAMOSWINE,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.STOUTLAND,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCOLIPEDE,e.BASCULIN,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.CARRACOSTA,e.REUNICLUS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.KOMALA,e.DRAMPA,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.SIRFETCHD,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.ENAMORUS,e.CETODDLE,e.SLITHER_WING,e.OKIDOGI,e.OGERPON,[e.DEOXYS,"attack"],e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_BRAVIARY],[t.RECYCLE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.PORYGON2,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.MAGNEZONE,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TRUBBISH,e.GARBODOR,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.HEATMOR,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.ESPURR,e.MEOWSTIC,e.DEDENNE,e.KLEFKI,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.FARIGIRAF,e.DIPPLIN,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MR_MIME,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.REVENGE]:[e.RATTATA,e.RATICATE,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.PINSIR,e.TAUROS,e.MEW,e.AIPOM,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.HITMONTOP,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.MAKUHITA,e.HARIYAMA,e.CACTURNE,e.ZANGOOSE,e.CRAWDAUNT,e.DUSKULL,e.DUSCLOPS,e.STARLY,e.STARAVIA,e.STARAPTOR,e.AMBIPOM,e.VESPIQUEN,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.KELDEO,e.PANGORO,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.TURTONATOR,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.SIRFETCHD,e.RUNERIGUS,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.BASCULEGION,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,[e.LYCANROC,"midnight"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.HISUI_SAMUROTT,e.GALAR_STUNFISK],[t.BRICK_BREAK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BONSLY,e.MIME_JR,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.DEWOTT,e.SAMUROTT,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.GARGANACL,e.CERULEDGE,e.KLAWF,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.KNOCK_OFF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.MARILL,e.AZUMARILL,e.AIPOM,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.PHANPY,e.DONPHAN,e.ELEKID,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.MAWILE,e.SWALOT,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.METAGROSS,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.KRICKETUNE,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.REUNICLUS,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.FERROSEED,e.FERROTHORN,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.GOODRA,e.TREVENANT,e.YVELTAL,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.TAPU_FINI,e.SOLGALEO,e.NIHILEGO,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GREEDENT,e.NICKIT,e.SIZZLIPEDE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZARUDE,e.MEOWSCARADA,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_JUGULIS,e.WO_CHIEN,e.ROARING_MOON,e.IRON_VALIANT,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.HISUI_DECIDUEYE],[t.ENDEAVOR]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.DODUO,e.DODRIO,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.FLAREON,e.MEW,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.POLITOED,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LUVDISC,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.SKUNTANK,e.HAPPINY,e.RHYPERIOR,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.AZELF,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.BOUFFALANT,e.DURANT,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.XERNEAS,e.DIANCIE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.ORANGURU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.SANDACONDA,e.CRAMORANT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.ALCREMIE,e.FALINKS,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.BASCULEGION,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[t.SKILL_SWAP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TAPU_LELE,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.IRON_VALIANT,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.IMPRISON]:[e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.LUGIA,e.HO_OH,e.CELEBI,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,[e.MEOWSTIC,"male"],e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.NECROZMA,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.SKELEDIRGE,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SECRET_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.DIVE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BEARTIC,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.ARAQUANID,e.GOLISOPOD,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.FINIZEN,e.PALAFIN,e.DONDOZO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"]],[t.FEATHER_DANCE]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.LUGIA,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.BLAZE_KICK]:[e.CHARIZARD,e.HITMONLEE,e.MEW,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.VICTINI,e.MIENSHAO,e.GENESECT,e.INCINEROAR,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GALAR_ZAPDOS],[t.HYPER_VOICE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ARCANINE,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.BLISSEY,e.LUGIA,e.HO_OH,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MANECTRIC,e.WAILMER,e.WAILORD,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.BAGON,e.SHELGON,e.SALAMENCE,e.RAYQUAZA,e.TORTERRA,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.HIPPOWDON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ROCKRUFF,e.LYCANROC,e.SALAZZLE,e.ORANGURU,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NECROZMA,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.INDEEDEE,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SQUAWKABILLY,e.TADBULB,e.BELLIBOLT,e.MABOSSTIFF,e.ESPATHRA,e.BOMBIRDIER,e.PALAFIN,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_JUGULIS,e.ROARING_MOON,e.IRON_VALIANT,e.RAGING_BOLT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.BLAST_BURN]:[e.CHARIZARD,e.MEW,e.TYPHLOSION,e.BLAZIKEN,e.INFERNAPE,e.EMBOAR,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[t.HYDRO_CANNON]:[e.BLASTOISE,e.MEW,e.FERALIGATR,e.SWAMPERT,e.EMPOLEON,e.SAMUROTT,e.GRENINJA,e.PRIMARINA,e.INTELEON,e.QUAQUAVAL,e.HISUI_SAMUROTT],[t.WEATHER_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.VULPIX,e.NINETALES,e.VILEPLUME,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.HORSEA,e.SEADRA,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.DELIBIRD,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.MASQUERAIN,e.ROSELIA,e.WAILMER,e.WAILORD,e.TORKOAL,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PHIONE,e.MANAPHY,e.GIGALITH,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.LILLIGANT,e.MARACTUS,e.SWANNA,e.VANILLUXE,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.GOODRA,e.VOLCANION,e.PRIMARINA,e.FOMANTIS,e.LURANTIS,e.SHIINOTIC,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ELDEGOSS,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.ENAMORUS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RELLOR,e.RABSCA,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_LILLIGANT,e.HISUI_GOODRA],[t.FAKE_TEARS]:[e.PIKACHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.TOTODILE,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.SHROOMISH,e.BRELOOM,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.MAWILE,e.PLUSLE,e.MINUN,e.ILLUMISE,e.SPINDA,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.BONSLY,e.WEAVILE,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DEERLING,e.SAWSBUCK,e.VULLABY,e.MANDIBUZZ,e.MELOETTA,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SYLVEON,e.DIANCIE,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.MORPEKO,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.SCREAM_TAIL,e.FLUTTER_MANE,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.AIR_CUTTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_BUNDLE,e.IRON_JUGULIS,e.FEZANDIPITI,e.SHAYMIN,e.GALAR_ARTICUNO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.OVERHEAT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOUDRED,e.EXPLOUD,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.DIALGA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.ANNIHILAPE,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.MIRAIDON,e.GOUGING_FIRE,[e.ROTOM,"heat"],e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.ROCK_TOMB]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPIDOPS,e.PAWMOT,e.GARGANACL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.METAL_SOUND]:[e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.KABUTO,e.KABUTOPS,e.ZAPDOS,e.MEW,e.FORRETRESS,e.SKARMORY,e.ELEKID,e.ARON,e.LAIRON,e.AGGRON,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.SHIELDON,e.BASTIODON,[e.WORMADAM,"trash"],e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.TYPE_NULL,e.SILVALLY,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.MAGEARNA,e.CORVIKNIGHT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.DURALUDON,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.IRON_LEAVES,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK],[t.COSMIC_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.STARYU,e.STARMIE,e.MEW,e.NATU,e.XATU,e.SKITTY,e.DELCATTY,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.CHIMECHO,e.METANG,e.METAGROSS,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","attack"],e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.ARCEUS,e.SIGILYPH,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.MINIOR,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ETERNATUS,e.RELLOR,e.RABSCA],[t.SIGNAL_BEAM]:[e.BLASTOISE,e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.PORYGON,e.ARTICUNO,e.ZAPDOS,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.YANMA,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.FORRETRESS,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.RAIKOU,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.GOREBYSS,e.METANG,e.METAGROSS,e.REGICE,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.VICTINI,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.GOLETT,e.GOLURK,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.HOOPA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.WYRDEER,e.FARIGIRAF,e.ALOLA_RAICHU],[t.SAND_TOMB]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.ONIX,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.LAIRON,e.AGGRON,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.LANDORUS,e.DIGGERSBY,e.CARBINK,e.DIANCIE,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.RUNERIGUS,e.STONJOURNER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO],[t.MUDDY_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CLAMPERL,e.RELICANTH,e.KYOGRE,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HIPPOPOTAS,e.HIPPOWDON,e.LICKILICKY,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.JELLICENT,e.STUNFISK,e.KELDEO,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.PINCURCHIN,e.BASCULEGION,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.TATSUGIRI,e.CLODSIRE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.BULLET_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MORPEKO,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,[e.WORMADAM,"plant"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.AERIAL_ACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.CUBONE,e.MAROWAK,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.PORYGON,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.PORYGON2,e.HITMONTOP,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.FLYGON,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.WEAVILE,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.LUNALA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRACOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.KINGAMBIT,e.SLITHER_WING,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.ICICLE_SPEAR]:[e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.SNORUNT,e.GLALIE,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.AURORUS,e.BERGMITE,e.AVALUGG,e.INTELEON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.CETODDLE,e.CETITAN,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[t.IRON_DEFENSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.METAPOD,e.BUTTERFREE,e.KAKUNA,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.RHYDON,e.MR_MIME,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.SUDOWOODO,e.SLOWKING,e.PINECO,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SILCOON,e.CASCOON,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.ANORITH,e.ARMALDO,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.JIRACHI,e.TORTERRA,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.RIOLU,e.LUCARIO,e.DRAPION,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SPEWPA,e.VIVILLON,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,e.ENAMORUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.KLAWF,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.IRON_CROWN,[e.DEOXYS,"defense"],[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[t.DRAGON_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.TYRANITAR,e.SCEPTILE,e.AGGRON,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.GOODRA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.DRACOZOLT,e.DURALUDON,e.DRAGAPULT,e.REGIDRAGO,e.CERULEDGE,e.CYCLIZAR,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.GOUGING_FIRE,e.HISUI_GOODRA],[t.FRENZY_PLANT]:[e.VENUSAUR,e.MEW,e.MEGANIUM,e.SCEPTILE,e.TORTERRA,e.SERPERIOR,e.CHESNAUGHT,e.DECIDUEYE,e.RILLABOOM,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[t.BULK_UP]:[e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.PINSIR,e.MEWTWO,e.MEW,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ELECTIVIRE,e.GALLADE,e.DIALGA,e.PALKIA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.EELEKTROSS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.TALONFLAME,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.CORVIKNIGHT,e.BOLTUND,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.FALINKS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.BOUNCE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PONYTA,e.RAPIDASH,e.HITMONLEE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.MAGIKARP,e.GYARADOS,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.DONPHAN,e.STANTLER,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.VICTINI,e.BLITZLE,e.ZEBSTRIKA,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PYROAR,e.GOGOAT,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.TOGEDEMARU,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DUBWOOL,e.ARROKUDA,e.BARRASKEWDA,e.REGIELEKI,e.LOKIX,e.FINIZEN,e.CETODDLE,e.CETITAN,e.CHI_YU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.GALAR_STUNFISK],[t.MUD_SHOT]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.PACHIRISU,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.BOUFFALANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDSDALE,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.WALKING_WAKE,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.POISON_TAIL]:[e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORAN_M,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DRUDDIGON,e.SKRELP,e.DRAGALGE,e.GOOMY,e.GOODRA,e.SALANDIT,e.SALAZZLE,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.GRAFAIAI,e.CLODSIRE,e.DUDUNSPARCE,e.OKIDOGI,e.FEZANDIPITI,e.PIKACHU,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.COVET]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.AIPOM,e.ESPEON,e.UMBREON,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LATIAS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.BONSLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.ELECTIVIRE,e.MAGMORTAR,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.POIPOLE,e.GREEDENT,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[t.MAGICAL_LEAF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.MR_MIME,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CLEFFA,e.TOGETIC,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.PANSAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.FLUTTER_MANE,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,[e.MEOWSTIC,"female"],e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.CALM_MIND]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.NATU,e.XATU,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNEASEL,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.LATIAS,e.LATIOS,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.SPIRITOMB,e.LUCARIO,e.WEAVILE,e.LEAFEON,e.GLACEON,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.MINIOR,e.KOMALA,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.SNEASLER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.LEAF_BLADE]:[e.VICTREEBEL,e.FARFETCHD,e.MEW,e.BELLOSSOM,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.LEAFEON,e.GALLADE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LEAVANNY,e.LILLIGANT,e.VIRIZION,e.SKIDDO,e.GOGOAT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.KARTANA,e.SIRFETCHD,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.DRAGON_DANCE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ONIX,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.STEELIX,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.TYRUNT,e.TYRANTRUM,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.FLAPPLE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.TATSUGIRI,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE],[t.ROCK_BLAST]:[e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SHELLDER,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.LAIRON,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.CONKELDURR,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.CINCCINO,e.TERRAKION,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.TRUMBEAK,e.TOUCANNON,e.LYCANROC,e.MINIOR,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.KLEAVOR,e.GARGANACL,e.KLAWF,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.IRON_THORNS,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG],[t.WATER_PULSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPINDA,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.GLACEON,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.KOMMO_O,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.ROOST]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.ROARING_MOON,e.FEZANDIPITI,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.GRAVITY]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.ESPEON,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.PORYGON2,e.STANTLER,e.BLISSEY,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MAGNEZONE,e.GLACEON,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.GOLETT,e.GOLURK,e.LANDORUS,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TOGEDEMARU,e.TAPU_LELE,e.TAPU_FINI,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.HATTERENE,e.STONJOURNER,e.INDEEDEE,e.ETERNATUS,e.CALYREX,e.WYRDEER,e.GARGANACL,e.RABSCA,e.FARIGIRAF,e.SANDY_SHOCKS,e.IRON_LEAVES,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,[e.INDEEDEE,"male"]],[t.GYRO_BALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.STARYU,e.STARMIE,e.OMANYTE,e.OMASTAR,e.MEW,e.TYPHLOSION,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MAGCARGO,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.SABLEYE,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.RAYQUAZA,e.DRIFLOON,e.DRIFBLIM,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.TEPIG,e.PIGNITE,e.EMBOAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARUMAKA,e.DARMANITAN,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.PASSIMIAN,e.MINIOR,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.PERRSERKER,e.DURALUDON,e.OVERQWIL,e.VAROOM,e.REVAVROOM,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_TREADS,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.BRINE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.CHINCHOU,e.LANTURN,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.WINGULL,e.PELIPPER,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.PANPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.TAPU_FINI,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.OVERQWIL,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH],[t.PLUCK]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.INKAY,e.MALAMAR,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.DRACOZOLT,e.ARCTOZOLT,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VELUZA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.TAILWIND]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.ZEKROM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.SILVALLY,e.DRAMPA,e.LUNALA,e.KARTANA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.FROSMOTH,e.KLEAVOR,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.SHAYMIN,e.GIRATINA,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.U_TURN]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.CELEBI,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.FINNEON,e.LUMINEON,e.YANMEGA,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PHIONE,e.MANAPHY,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.WHIMSICOTT,e.DARUMAKA,e.DARMANITAN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FURFROU,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.WISHIWASHI,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.NAGANADEL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.FLAPPLE,e.PERRSERKER,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.CLOSE_COMBAT]:[e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEW,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.ZANGOOSE,e.CRAWDAUNT,e.ABSOL,e.MONFERNO,e.INFERNAPE,e.STARAPTOR,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ESCAVALIER,e.EELEKTROSS,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.XERNEAS,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.IRON_BOULDER,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.PAYBACK]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.DODRIO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.MEW,e.CROBAT,e.POLITOED,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.YVELTAL,e.ZYGARDE,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.BLACEPHALON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.MORPEKO,e.COPPERAJAH,e.ARCTOZOLT,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.FLAMIGO,e.BRUTE_BONNET,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"]],[t.ASSURANCE]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.DODUO,e.KOFFING,e.WEEZING,e.KANGASKHAN,e.SCYTHER,e.TAUROS,e.AERODACTYL,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.ABSOL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.AZELF,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.LYCANROC,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.TOGEDEMARU,e.DHELMISE,e.TAPU_KOKO,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.GLASTRIER,e.SPECTRIER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.IRON_JUGULIS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice","shadow"],[e.PALDEA_TAUROS,"combat"]],[t.EMBARGO]:[e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.MEWTWO,e.MEW,e.MURKROW,e.MISDREAVUS,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.DARKRAI,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NECROZMA,e.MAGEARNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.FLING]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.EMOLGA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CINDERACE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.ARBOLIVA,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[t.GASTRO_ACID]:[e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SNORLAX,e.MEW,e.BELLOSSOM,e.SHUCKLE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.MUNCHLAX,e.CARNIVINE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PALPITOAD,e.SEISMITOAD,e.FOONGUS,e.AMOONGUSS,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DIGGERSBY,e.SWIRLIX,e.SLURPUFF,e.MAREANIE,e.TOXAPEX,e.PYUKUMUKU,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.TAROUNTULA,e.SPIDOPS,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.POWER_SWAP]:[e.VULPIX,e.NINETALES,e.ABRA,e.KADABRA,e.ALAKAZAM,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.MAGMAR,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.GIRAFARIG,e.PORYGON2,e.MAGBY,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MEDITITE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.TANGROWTH,e.MAGMORTAR,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.SIGILYPH,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO],[t.GUARD_SWAP]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.WOOPER,e.QUAGSIRE,e.UMBREON,e.GIRAFARIG,e.SLUGMA,e.MAGCARGO,e.SKARMORY,e.PORYGON2,e.GARDEVOIR,e.MAWILE,e.MEDITITE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.SHELMET,e.ACCELGOR,e.INKAY,e.MALAMAR,e.CARBINK,e.DIANCIE,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,[e.INDEEDEE,"female"]],[t.WORRY_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.NIHILEGO,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[t.TOXIC_SPIKES]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.VENONAT,e.VENOMOTH,e.TENTACOOL,e.TENTACRUEL,e.MUK,e.SHELLDER,e.CLOYSTER,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.OMANYTE,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SHIFTRY,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ROSERADE,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SHELMET,e.ACCELGOR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.RUNERIGUS,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.FLARE_BLITZ]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SOLGALEO,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.AURA_SPHERE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.HITMONLEE,e.HITMONCHAN,e.MEWTWO,e.MEW,e.RAIKOU,e.CELEBI,e.BLAZIKEN,e.GARDEVOIR,e.MEDICHAM,e.ZANGOOSE,e.LATIAS,e.LATIOS,e.JIRACHI,e.INFERNAPE,e.LOPUNNY,e.LUCARIO,e.TOGEKISS,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.MIENFOO,e.MIENSHAO,e.KELDEO,e.CLAUNCHER,e.CLAWITZER,e.KOMMO_O,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.URSHIFU,e.MEOWSCARADA,e.ARMAROUGE,e.PALAFIN,e.IRON_VALIANT,e.ARCHALUDON,e.TERAPAGOS,e.HISUI_DECIDUEYE],[t.ROCK_POLISH]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.MAGCARGO,e.CORSOLA,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.GLISCOR,e.PROBOPASS,e.REGIGIGAS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.LANDORUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.POISON_JAB]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SNEASEL,e.DONPHAN,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ROSELIA,e.GULPIN,e.SWALOT,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TOGEDEMARU,e.KOMMO_O,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.SNEASLER,e.OVERQWIL,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.PALDEA_WOOPER],[t.DARK_PULSE]:[e.BLASTOISE,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.GYARADOS,e.MEWTWO,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNEASEL,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.DEOXYS,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.DUSKNOIR,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.MIMIKYU,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.INTELEON,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.RUNERIGUS,e.MORPEKO,e.DURALUDON,e.ZARUDE,e.SPECTRIER,e.OVERQWIL,e.MEOWSCARADA,e.LOKIX,e.ARMAROUGE,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.FEZANDIPITI,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_YAMASK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.AQUA_TAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.KABUTOPS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LANTURN,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.QWILFISH,e.MANTINE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.AGGRON,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOODRA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.DUDUNSPARCE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_QWILFISH,e.HISUI_SAMUROTT],[t.SEED_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.PINECO,e.FORRETRESS,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.ROSELIA,e.GULPIN,e.SWALOT,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TAPU_BULU,e.CELESTEELA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.CALYREX,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.ANNIHILAPE,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.AIR_SLASH]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFBLIM,e.HONCHKROW,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GALLADE,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.AEGISLASH,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.TYPE_NULL,e.SILVALLY,e.LUNALA,e.CELESTEELA,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.ZACIAN,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.IRON_CROWN,e.SHAYMIN,[e.ROTOM,"fan"],e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.X_SCISSOR]:[e.BEEDRILL,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.KRABBY,e.KINGLER,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.SKARMORY,e.GROVYLE,e.SCEPTILE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.KRICKETUNE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GENESECT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MIMIKYU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT],[t.BUG_BUZZ]:[e.BUTTERFREE,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.SCIZOR,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.ARCEUS,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.VIVILLON,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.IRON_MOTH,e.TERAPAGOS],[t.DRAGON_PULSE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.ONIX,e.RHYHORN,e.RHYDON,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.FERALIGATR,e.AMPHAROS,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.LUGIA,e.SCEPTILE,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.FEEBAS,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NECROZMA,e.POIPOLE,e.NAGANADEL,e.FLAPPLE,e.APPLETUN,e.RUNERIGUS,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.ARMAROUGE,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.POWER_GEM]:[e.MEOWTH,e.PERSIAN,e.GOLDUCK,e.STARYU,e.STARMIE,e.MEWTWO,e.MEW,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.TYRANITAR,e.NOSEPASS,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.VESPIQUEN,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GABITE,e.GARCHOMP,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.CRESSELIA,e.ARCEUS,e.BOLDORE,e.GIGALITH,e.KLINK,e.KLANG,e.KLINKLANG,e.CARBINK,e.DIANCIE,e.MINIOR,e.NIHILEGO,e.NECROZMA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.MEOWSCARADA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.RABSCA,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GIMMIGHOUL,e.GHOLDENGO,e.MIRAIDON,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.DRAIN_PUNCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWBRO,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.BELLOSSOM,e.SUDOWOODO,e.QUAGSIRE,e.SLOWKING,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOMBRE,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.KECLEON,e.REGIROCK,e.JIRACHI,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.REUNICLUS,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.AROMATISSE,e.SLURPUFF,e.HAWLUCHA,e.TREVENANT,e.HOOPA,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.SHIINOTIC,e.BEWEAR,e.PASSIMIAN,e.MIMIKYU,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING],[t.VACUUM_WAVE]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.MEW,e.SCIZOR,e.HERACROSS,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.FLYGON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.DEWOTT,e.SAMUROTT,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.INTELEON,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.CERULEDGE,e.ANNIHILAPE,e.IRON_VALIANT,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.FOCUS_BLAST]:[e.CHARMANDER,e.CHARIZARD,e.BLASTOISE,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.WIGGLYTUFF,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.LEDIAN,e.AMPHAROS,e.AZUMARILL,e.POLITOED,e.QUAGSIRE,e.SLOWKING,e.GRANBULL,e.HERACROSS,e.URSARING,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.LUDICOLO,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.RAMPARDOS,e.FLOATZEL,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.ESCAVALIER,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BISHARP,e.HEATMOR,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.DELPHOX,e.PANGORO,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.MR_RIME,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.SNEASLER,e.ENAMORUS,e.PAWMOT,e.ARMAROUGE,e.PALAFIN,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.ENERGY_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.MISDREAVUS,e.GIRAFARIG,e.OCTILLERY,e.STANTLER,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SABLEYE,e.MEDICHAM,e.ROSELIA,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.MOTHIM,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.VIRIZION,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_BULU,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.GLIMMORA,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.BRAVE_BIRD]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TAPU_KOKO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.EARTH_POWER]:[e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.SHAYMIN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.STUNFISK,e.GOLETT,e.GOLURK,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.DIGGERSBY,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.NECROZMA,e.RILLABOOM,e.DREDNAW,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.SKELEDIRGE,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.GIGA_IMPACT]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.BASCULIN,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.NASTY_PLOT]:[e.PIKACHU,e.RAICHU,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ALAKAZAM,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.PICHU,e.TOGEPI,e.TOGETIC,e.AIPOM,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SKITTY,e.DELCATTY,e.SABLEYE,e.PLUSLE,e.MINUN,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LUNATONE,e.CRAWDAUNT,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.PORYGON_Z,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.POIPOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.ZARUDE,e.SPECTRIER,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.TATSUGIRI,e.FARIGIRAF,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.AVALANCHE]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.RHYDON,e.KANGASKHAN,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.ARTICUNO,e.MEWTWO,e.MEW,e.FERALIGATR,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.EXPLOUD,e.AGGRON,e.SHARPEDO,e.WAILMER,e.WAILORD,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.WALREIN,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.EMPOLEON,e.RAMPARDOS,e.BASTIODON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABOMINABLE,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.URSALUNA,e.GARGANACL,e.CETODDLE,e.CETITAN,e.DONDOZO,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.SHADOW_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.HAUNTER,e.GENGAR,e.RHYDON,e.KANGASKHAN,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.BANETTE,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.THIEVUL,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.RUNERIGUS,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.ANNIHILAPE,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.THUNDER_FANG]:[e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.JOLTEON,e.AERODACTYL,e.MEW,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.RAIKOU,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.EELEKTRIK,e.EELEKTROSS,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.ZEKROM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.TOXTRICITY,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.ICE_FANG]:[e.ARBOK,e.RHYHORN,e.RHYDON,e.GYARADOS,e.AERODACTYL,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SWINUB,e.PILOSWINE,e.DONPHAN,e.SUICUNE,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUIZEL,e.FLOATZEL,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BASCULIN,e.CUBCHOO,e.BEARTIC,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.YUNGOOS,e.GUMSHOOS,e.SILVALLY,e.BRUXISH,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.KORAIDON,e.OKIDOGI,e.GALAR_SLOWBRO,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_AVALUGG],[t.FIRE_FANG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.FLAREON,e.AERODACTYL,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.ENTEI,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.SHINX,e.LUXIO,e.LUXRAY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.HEATRAN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_THORNS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION],[t.PSYCHO_CUT]:[e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.SCYTHER,e.JYNX,e.KABUTOPS,e.MEWTWO,e.MEW,e.SCIZOR,e.SNEASEL,e.CELEBI,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.WEAVILE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.DECIDUEYE,e.LURANTIS,e.TAPU_LELE,e.LUNALA,e.KARTANA,e.NECROZMA,e.ORBEETLE,e.HATTERENE,e.ZACIAN,e.SPECTRIER,e.KLEAVOR,e.CERULEDGE,e.VELUZA,e.IRON_VALIANT,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,[e.CALYREX,"shadow"],e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[t.ZEN_HEADBUTT]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.MR_MIME,e.JYNX,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.LICKILICKY,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.THROH,e.SAWK,e.BASCULIN,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.APPLETUN,e.SANDACONDA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.KUBFU,e.URSHIFU,e.GLASTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_JUGULIS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.PALDEA_TAUROS],[t.FLASH_CANNON]:[e.BLASTOISE,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.OCTILLERY,e.SKARMORY,e.KINGDRA,e.NOSEPASS,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.ARMALDO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SIGILYPH,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BEHEEYEM,e.CRYOGONAL,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.KYUREM,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.VOLCANION,e.TOUCANNON,e.VIKAVOLT,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMORA,e.KINGAMBIT,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.IRON_CROWN,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.ROCK_CLIMB]:[e.VENUSAUR,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.OMASTAR,e.KABUTOPS,e.SNORLAX,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.GLIGAR,e.STEELIX,e.GRANBULL,e.URSARING,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LUDICOLO,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AGGRON,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.DRUDDIGON,e.BOUFFALANT,e.DURANT,e.ROCKRUFF,e.LYCANROC,e.OBSTAGOON,e.URSALUNA,e.ANNIHILAPE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.DEFOG]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDIAN,e.CROBAT,e.TOGETIC,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.CHATOT,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ROTOM,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.CRYOGONAL,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FLORGES,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.COMFEY,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.TAPU_FINI,e.LUNALA,e.KARTANA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.TRICK_ROOM]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.COMFEY,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_EXEGGUTOR,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.DRACO_METEOR]:[e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.KINGDRA,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.LEAF_STORM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.SHAYMIN,[e.ROTOM,"mow"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.POWER_WHIP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.LICKITUNG,e.TANGELA,e.GYARADOS,e.MEW,e.ROSELIA,e.CRADILY,e.ROSERADE,e.CARNIVINE,e.LICKILICKY,e.TANGROWTH,e.PALPITOAD,e.SEISMITOAD,e.FERROTHORN,e.GOODRA,e.GOURGEIST,e.TSAREENA,e.DHELMISE,e.XURKITREE,e.SIZZLIPEDE,e.CENTISKORCH,e.HATTERENE,e.GRIMMSNARL,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CYCLIZAR,e.WO_CHIEN,e.OGERPON,e.ALOLA_EXEGGUTOR],[t.CROSS_POISON]:[e.PARAS,e.PARASECT,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SCYTHER,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SCEPTILE,e.ANORITH,e.ARMALDO,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.GLISCOR,e.SCOLIPEDE,e.GARBODOR,e.JOLTIK,e.GALVANTULA,e.TOXAPEX,e.LURANTIS,e.SALAZZLE,e.NIHILEGO,e.NAGANADEL,e.OBSTAGOON,e.ETERNATUS,e.KLEAVOR,e.SHROODLE,e.GRAFAIAI,e.FEZANDIPITI],[t.GUNK_SHOT]:[e.EKANS,e.ARBOK,e.SANDSLASH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEW,e.AIPOM,e.GLIGAR,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.ZIGZAGOON,e.LINOONE,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.ZANGOOSE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.KROOKODILE,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DRUDDIGON,e.GENESECT,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.KOMALA,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.ETERNATUS,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,[e.WORMADAM,"trash"],e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.IRON_HEAD]:[e.ARCANINE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.CUBONE,e.MAROWAK,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PHANPY,e.DONPHAN,e.MILTANK,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.HARIYAMA,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.MILOTIC,e.GLALIE,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.STOUTLAND,e.GIGALITH,e.EXCADRILL,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.DURANT,e.COBALION,e.TERRAKION,e.KYUREM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.AVALUGG,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.CINDERACE,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.PERRSERKER,e.FALINKS,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.GHOLDENGO,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS],[t.STONE_EDGE]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.GYARADOS,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.ABSOL,e.RELICANTH,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.TOXICROAK,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.DURANT,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.STEALTH_ROCK]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.PRIMEAPE,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.CHANSEY,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HYDREIGON,e.COBALION,e.TERRAKION,e.ZEKROM,e.LANDORUS,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NIHILEGO,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ARCHALUDON,e.TERAPAGOS,[e.WORMADAM,"sandy","trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[t.GRASS_KNOT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SMOOCHUM,e.BLISSEY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.KECLEON,e.TROPIUS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROTHORN,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.ZYGARDE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.ZARUDE,e.CALYREX,e.SNEASLER,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.PALAFIN,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.MUNKIDORI,e.OGERPON,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.BUG_BITE]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.KRICKETOT,e.KRICKETUNE,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.DIPPLIN,e.HYDRAPPLE],[t.CHARGE_BEAM]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.MR_MIME,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.DRUDDIGON,e.GOLURK,e.HYDREIGON,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.SHIINOTIC,e.ORANGURU,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.TAPU_LELE,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.HONE_CLAWS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.KRABBY,e.KINGLER,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.AIPOM,e.GLIGAR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.VESPIQUEN,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.QUILLADIN,e.CHESNAUGHT,e.TALONFLAME,e.PANGORO,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.TREVENANT,e.NOIVERN,e.YVELTAL,e.MIMIKYU,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.OBSTAGOON,e.PERRSERKER,e.DURALUDON,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.WALKING_WAKE,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.WONDER_ROOM]:[e.CLEFAIRY,e.CLEFABLE,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.PORYGON2,e.SMOOCHUM,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.ALTARIA,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.LATIOS,e.DEOXYS,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.MUNNA,e.MUSHARNA,e.YAMASK,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.STONJOURNER,e.INDEEDEE,e.CALYREX,e.ALOLA_NINETALES,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.PSYSHOCK]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.LUGIA,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.AROMATISSE,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.FLUTTER_MANE,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.VENOSHOCK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.FOONGUS,e.AMOONGUSS,e.SHELMET,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TURTONATOR,e.BRUXISH,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.BRUTE_BONNET,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.MAGIC_ROOM]:[e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.MISDREAVUS,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LUNATONE,e.SHUPPET,e.BANETTE,e.LATIAS,e.JIRACHI,e.MISMAGIUS,e.MIME_JR,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.KLEFKI,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_MR_MIME],[t.SMACK_DOWN]:[e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.MEW,e.SUDOWOODO,e.AIPOM,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.AMBIPOM,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.DRUDDIGON,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.DIANCIE,e.VOLCANION,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.TURTONATOR,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.COPPERAJAH,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.GREAT_TUSK,e.IRON_THORNS,e.ARCHALUDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.SLUDGE_WAVE]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.VILEPLUME,e.VENOMOTH,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.GULPIN,e.SWALOT,e.SEVIPER,e.CRAWDAUNT,e.CRADILY,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.TRUBBISH,e.GARBODOR,e.FRILLISH,e.JELLICENT,e.STUNFISK,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.ZYGARDE,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.DHELMISE,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.HEAVY_SLAM]:[e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.RHYHORN,e.RHYDON,e.SNORLAX,e.MEW,e.FORRETRESS,e.STEELIX,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.WALREIN,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.COBALION,e.CARBINK,e.AVALUGG,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.TURTONATOR,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CORVIKNIGHT,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.PERRSERKER,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.GLASTRIER,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TINKATON,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.KORAIDON,e.MIRAIDON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GOLEM,[e.CALYREX,"ice"],e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.ELECTRO_BALL]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RABSCA,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.FLAME_CHARGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.BLITZLE,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.SOLGALEO,e.CELESTEELA,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.YAMPER,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.LOW_SWEEP]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.MAGMAR,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.ZANGOOSE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GRIMMSNARL,e.STONJOURNER,e.KUBFU,e.URSHIFU,e.ZARUDE,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.OGERPON,[e.LYCANROC,"midnight"],e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.ACID_SPRAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.MEW,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MAGBY,e.GULPIN,e.SWALOT,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MAGMORTAR,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.SLIGGOO,e.GOODRA,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.FLAPPLE,e.TOXTRICITY,e.SNEASLER,e.OVERQWIL,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.FOUL_PLAY]:[e.VULPIX,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.XATU,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.SABLEYE,e.MAWILE,e.CACNEA,e.CACTURNE,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.GLALIE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.ROTOM,e.UXIE,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.NIHILEGO,e.PHEROMOSA,e.MARSHADOW,e.BLACEPHALON,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DURALUDON,e.SPECTRIER,e.MEOWSCARADA,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FARIGIRAF,e.KINGAMBIT,e.WO_CHIEN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.ROUND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[t.ECHOED_VOICE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.CUBONE,e.MAROWAK,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.POLITOED,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ELGYEM,e.BEHEEYEM,e.CUBCHOO,e.BEARTIC,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.COMFEY,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.ARCTOZOLT,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.CETODDLE,e.CETITAN,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[t.STORED_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.CLAYDOL,e.CHIMECHO,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.DIANCIE,e.PRIMARINA,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.CERULEDGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ETERNAL_FLOETTE,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.ALLY_SWITCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.MAROWAK,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.PORYGON2,e.TYROGUE,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.YAMASK,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.BRUXISH,e.DHELMISE,e.TAPU_LELE,e.NIHILEGO,e.NECROZMA,e.NAGANADEL,e.STAKATAKA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.SPRIGATITO,e.ARMAROUGE,e.CERULEDGE,e.FLITTLE,e.GREAVARD,e.IRON_LEAVES,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_YAMASK],[t.SCALD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.RAIKOU,e.SUICUNE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.INTELEON,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.CURSOLA,e.PINCURCHIN,e.DRACOVISH,e.DRAKLOAK,e.DRAGAPULT,e.WALKING_WAKE,e.POLTCHAGEIST,e.SINISTCHA,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"]],[t.HEX]:[e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SHIFTRY,e.SHEDINJA,e.SABLEYE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.ARCEUS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.MARSHADOW,e.NAGANADEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.PINCURCHIN,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SKY_DROP]:[e.CHARIZARD,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.SKARMORY,e.LUGIA,e.HO_OH,e.PELIPPER,e.RAYQUAZA,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.HAWLUCHA,e.YVELTAL,e.VIKAVOLT,e.TAPU_KOKO,e.LUNALA,e.NAGANADEL],[t.INCINERATE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SABLEYE,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.DUDUNSPARCE,e.CHI_YU,e.ROARING_MOON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.QUASH]:[e.NIDOQUEEN,e.NIDOKING,e.KINGLER,e.MEW,e.MURKROW,e.SLOWKING,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.SLAKING,e.SABLEYE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.VESPIQUEN,e.HONCHKROW,e.SPIRITOMB,e.ARCEUS,e.PANCHAM,e.PANGORO,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.PYUKUMUKU,e.KOMALA,e.BLACEPHALON,e.HATENNA,e.MORPEKO,e.TINKATINK,e.IRON_LEAVES,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.ACROBATICS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.HONCHKROW,e.FINNEON,e.LUMINEON,e.MANTYKE,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.ARCHEN,e.ARCHEOPS,e.SWANNA,e.EMOLGA,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.THIEVUL,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.CHIEN_PAO,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.FEZANDIPITI,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[t.RETALIATE]:[e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.TOGETIC,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.CARVANHA,e.SHARPEDO,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.ABSOL,e.LATIAS,e.LATIOS,e.MONFERNO,e.INFERNAPE,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.SPIRITOMB,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.ZYGARDE,e.PASSIMIAN,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DUBWOOL,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.MASCHIFF,e.KINGAMBIT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT],[t.WATER_PLEDGE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.SILVALLY,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.HISUI_SAMUROTT],[t.FIRE_PLEDGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[t.GRASS_PLEDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SILVALLY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[t.VOLT_SWITCH]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.FORRETRESS,e.ELEKID,e.RAIKOU,e.NOSEPASS,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.COBALION,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.STRUGGLE_BUG]:[e.BUTTERFREE,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.WIMPOD,e.GOLISOPOD,e.BLIPBUG,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.IRON_MOTH],[t.BULLDOZE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.DEERLING,e.SAWSBUCK,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.KORAIDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FROST_BREATH]:[e.DEWGONG,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[t.DRAGON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ONIX,e.LICKITUNG,e.RHYDON,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.SLOWKING,e.STEELIX,e.TYRANITAR,e.LUGIA,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LICKILICKY,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.SAMUROTT,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.CHEWTLE,e.APPLETUN,e.DRACOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.WORK_UP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.DODUO,e.DODRIO,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.IRON_JUGULIS,e.IRON_LEAVES,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"dusk"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.PALDEA_TAUROS],[t.ELECTROWEB]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.PORYGON,e.MEW,e.SPINARAK,e.ARIADOS,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.PORYGON2,e.ELEKID,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.PLUSLE,e.MINUN,e.BURMY,e.WORMADAM,e.MOTHIM,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.ROTOM,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.STUNFISK,e.THUNDURUS,e.GENESECT,e.SPEWPA,e.VIVILLON,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.PASSIMIAN,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.MORPEKO,e.REGIELEKI,e.SPIDOPS,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM],[t.WILD_CHARGE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.ELECTABUZZ,e.TAUROS,e.JOLTEON,e.SNORLAX,e.ZAPDOS,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.SLAKING,e.SKITTY,e.DELCATTY,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SPINDA,e.RAYQUAZA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BOUFFALANT,e.LARVESTA,e.VOLCARONA,e.THUNDURUS,e.ZEKROM,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.SOLGALEO,e.XURKITREE,e.ZERAORA,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MABOSSTIFF,e.CYCLIZAR,e.DUDUNSPARCE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[t.DRILL_RUN]:[e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSLASH,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.DODRIO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.MEW,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SKARMORY,e.DELIBIRD,e.HITMONTOP,e.BALTOY,e.CLAYDOL,e.RHYPERIOR,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.KARRABLAST,e.ESCAVALIER,[e.LYCANROC,"midday","dusk"],e.GOLISOPOD,e.PHEROMOSA,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.BOMBIRDIER,e.VELUZA,e.DUDUNSPARCE,e.ALOLA_SANDSLASH,e.GALAR_RAPIDASH,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[t.RAZOR_SHELL]:[e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.KABUTOPS,e.MEW,e.SLOWKING,e.CORPHISH,e.CRAWDAUNT,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.CARRACOSTA,e.ESCAVALIER,e.BINACLE,e.BARBARACLE,e.GOLISOPOD,e.DREDNAW,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_SAMUROTT],[t.HEAT_CRASH]:[e.CHARIZARD,e.ARCANINE,e.RHYDON,e.SNORLAX,e.MEW,e.SLUGMA,e.MAGCARGO,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GROUDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.GOLURK,e.RESHIRAM,e.VOLCANION,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.GUZZLORD,e.STAKATAKA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.STONJOURNER,e.COPPERAJAH,e.SKELEDIRGE,e.SLITHER_WING,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.HISUI_ARCANINE],[t.TAIL_SLAP]:[e.VULPIX,e.NINETALES,e.MEW,e.AIPOM,e.ZIGZAGOON,e.LINOONE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MINCCINO,e.CINCCINO,e.MEOWSTIC,[e.LYCANROC,"midday","dusk"],e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.ZACIAN,e.ZAMAZENTA,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[t.HURRICANE]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.GYARADOS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.MANTINE,e.KINGDRA,e.LUGIA,e.SHIFTRY,e.TAILLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.VESPIQUEN,e.HONCHKROW,e.ARCEUS,e.UNFEZANT,e.WHIMSICOTT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.ORICORIO,e.DRAMPA,e.CORVISQUIRE,e.CORVIKNIGHT,e.SANDACONDA,e.CRAMORANT,e.FROSMOTH,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.WALKING_WAKE,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[t.SNARL]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.MEW,e.UMBREON,e.MURKROW,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SEVIPER,e.CRAWDAUNT,e.CHIMECHO,e.ABSOL,e.SHINX,e.LUXIO,e.LUXRAY,e.FLOATZEL,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.WEAVILE,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.THUNDURUS,e.LITLEO,e.PYROAR,e.PANGORO,e.FURFROU,e.YVELTAL,e.INCINEROAR,e.ROCKRUFF,e.LYCANROC,e.GOLISOPOD,e.SILVALLY,e.DRAMPA,e.TAPU_BULU,e.SOLGALEO,e.GUZZLORD,e.NAGANADEL,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.GREAVARD,e.HOUNDSTONE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA,[e.URSHIFU,"single-strike"]],[t.PHANTOM_FORCE]:[e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.GIRATINA,e.ARCEUS,e.COFAGRIGUS,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.PECHARUNT,[e.CALYREX,"shadow"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.PETAL_BLIZZARD]:[e.VENUSAUR,e.GLOOM,e.VILEPLUME,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.SUNFLORA,e.SHIFTRY,e.ROSELIA,e.TROPIUS,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LILLIGANT,e.MARACTUS,e.SAWSBUCK,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FOMANTIS,e.LURANTIS,e.STEENEE,e.TSAREENA,e.COMFEY,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.ARBOLIVA,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[t.DISARMING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CHANSEY,e.MEW,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.BLISSEY,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.SKITTY,e.DELCATTY,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.MILOTIC,e.CHIMECHO,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.HAPPINY,e.GALLADE,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.AUDINO,e.DUCKLETT,e.SWANNA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOGEDEMARU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.INDEEDEE,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[t.DRAINING_KISS]:[e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DROWZEE,e.HYPNO,e.JYNX,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.ESPEON,e.MISDREAVUS,e.SMOOCHUM,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.MAWILE,e.ILLUMISE,e.MILOTIC,e.CHIMECHO,e.GOREBYSS,e.LUVDISC,e.LATIAS,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.AUDINO,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MIMIKYU,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.ENAMORUS,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[t.GRASSY_TERRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.CACNEA,e.CACTURNE,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.TANGROWTH,e.ARCEUS,e.SNIVY,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.MISTY_TERRAIN]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MR_MIME,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MAWILE,e.MIME_JR,e.GALLADE,e.ARCEUS,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.ALOMOMOLA,e.FLABEBE,e.FLOETTE,e.FLORGES,[e.MEOWSTIC,"male"],e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.MIMIKYU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.ZACIAN,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FIDOUGH,e.DACHSBUN,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME],[t.PLAY_ROUGH]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.DEWGONG,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.PHANPY,e.DONPHAN,e.MILTANK,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SKITTY,e.DELCATTY,e.MAWILE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.ABSOL,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHERRIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.TOGEKISS,e.UXIE,e.MESPRIT,e.AZELF,e.SHAYMIN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WHIMSICOTT,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.ZERAORA,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.URSALUNA,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.HISUI_TYPHLOSION],[t.CONFIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[t.MYSTICAL_FIRE]:[e.CHARIZARD,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.PONYTA,e.RAPIDASH,e.MR_MIME,e.FLAREON,e.MOLTRES,e.MEW,e.TOGEPI,e.TOGETIC,e.HO_OH,e.RALTS,e.GARDEVOIR,e.LATIAS,e.LATIOS,e.MISMAGIUS,e.MAGMORTAR,e.TOGEKISS,e.VICTINI,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.VOLCARONA,e.RESHIRAM,e.DELPHOX,e.SYLVEON,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.SOLGALEO,e.BLACEPHALON,e.CENTISKORCH,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ETERNATUS,e.ENAMORUS,e.ARMAROUGE,e.FLUTTER_MANE,e.GALAR_PONYTA,e.GALAR_RAPIDASH],[t.EERIE_IMPULSE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEW,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.WOOPER,e.QUAGSIRE,e.PORYGON2,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.BALTOY,e.CLAYDOL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.PORYGON_Z,e.ROTOM,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU],[t.VENOM_DRENCH]:[e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.TENTACRUEL,e.KOFFING,e.WEEZING,e.MEW,e.CROBAT,e.QWILFISH,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PYUKUMUKU,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.PINCURCHIN,e.ETERNATUS,e.GALAR_WEEZING,e.GALAR_SLOWKING,[e.TOXTRICITY,"low-key"]],[t.ELECTRIC_TERRAIN]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.JOLTEON,e.ZAPDOS,e.MEW,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BLISSEY,e.RAIKOU,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.ARCEUS,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.DAZZLING_GLEAM]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.MEW,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.JIRACHI,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.MIME_JR,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.FRILLISH,e.JELLICENT,e.MELOETTA,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.MIMIKYU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.ENAMORUS,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_MOTH,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.FEZANDIPITI,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.HISUI_BRAVIARY],[t.INFESTATION]:[e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MR_MIME,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.WOOPER,e.QUAGSIRE,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.HUNTAIL,e.GOREBYSS,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.TANGROWTH,e.DUSKNOIR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DURANT,e.GENESECT,e.VIVILLON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.STAKATAKA,e.BLIPBUG,e.FROSMOTH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.BRAMBLIN,e.BRAMBLEGHAST,e.DIPPLIN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR],[t.POWER_UP_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GOTHITELLE,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.HOOPA,e.CRABRAWLER,e.CRABOMINABLE,e.BUZZWOLE,e.ZERAORA,e.TOXEL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.URSALUNA,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[t.DARKEST_LARIAT]:[e.POLIWRATH,e.MACHAMP,e.SNORLAX,e.MEW,e.SWAMPERT,e.ELECTIVIRE,e.DUSKNOIR,e.REGIGIGAS,e.KROOKODILE,e.GOLURK,e.PANGORO,e.INCINEROAR,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.MELMETAL,e.RILLABOOM,e.GRIMMSNARL,e.URSHIFU,e.ZARUDE],[t.HIGH_HORSEPOWER]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DUGTRIO,e.POLIWRATH,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.ONIX,e.KINGLER,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.SNORLAX,e.MEW,e.SUDOWOODO,e.QUAGSIRE,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.HERACROSS,e.URSARING,e.SLUGMA,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.MILTANK,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.NOSEPASS,e.AGGRON,e.NUMEL,e.CAMERUPT,e.BARBOACH,e.WHISCASH,e.GROUDON,e.TORTERRA,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.PIGNITE,e.EMBOAR,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.SAWSBUCK,e.GOLURK,e.BOUFFALANT,e.TERRAKION,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.TYRANTRUM,e.AVALUGG,e.ZYGARDE,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.GLASTRIER,e.WYRDEER,e.URSALUNA,e.OINKOLOGNE,e.KLAWF,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.OKIDOGI,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.GALAR_PONYTA,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SOLAR_BLADE]:[e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.MEW,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.CHERRIM,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.LILLIGANT,e.CRUSTLE,e.VIRIZION,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.DECIDUEYE,e.LURANTIS,e.TSAREENA,e.DHELMISE,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SIRFETCHD,e.ZACIAN,e.ZARUDE,e.CALYREX,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.CERULEDGE,e.WO_CHIEN,e.IRON_LEAVES,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT],[t.THROAT_CHOP]:[e.BEEDRILL,e.RATICATE,e.FEAROW,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PRIMEAPE,e.POLIWRATH,e.MACHAMP,e.RAPIDASH,e.FARFETCHD,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.GOLDEEN,e.SEAKING,e.PINSIR,e.TAUROS,e.MEW,e.TYPHLOSION,e.ARIADOS,e.UMBREON,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.SNEASEL,e.URSARING,e.CORSOLA,e.HOUNDOOM,e.STANTLER,e.RAIKOU,e.SCEPTILE,e.MIGHTYENA,e.LINOONE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.SEVIPER,e.BANETTE,e.ABSOL,e.DEOXYS,e.EMPOLEON,e.KRICKETUNE,e.LUXRAY,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.GLISCOR,e.GALLADE,e.DARKRAI,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.AUDINO,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.KROOKODILE,e.MARACTUS,e.SCRAFTY,e.ZOROARK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.BEARTIC,e.BISHARP,e.BOUFFALANT,e.HEATMOR,e.HYDREIGON,e.PANGORO,e.MALAMAR,e.HAWLUCHA,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZARUDE,e.GLASTRIER,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.WIGLETT,e.WUGTRIO,e.FLAMIGO,e.CHIEN_PAO,e.TING_LU,e.ROARING_MOON,e.OGERPON,e.IRON_BOULDER,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_LINOONE,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice"]],[t.POLLEN_PUFF]:[e.BUTTERFREE,e.GLOOM,e.VILEPLUME,e.MEW,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.CELEBI,e.VESPIQUEN,e.CHERUBI,e.CHERRIM,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.FOONGUS,e.AMOONGUSS,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.GOSSIFLEUR,e.ELDEGOSS,e.CALYREX,e.MEOWSCARADA,e.ARBOLIVA,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.HYDRAPPLE,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[t.PSYCHIC_TERRAIN]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.GALLADE,e.CRESSELIA,e.ARCEUS,e.MUSHARNA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.MEOWSTIC,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_LEAVES,e.MUNKIDORI,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.LUNGE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODUO,e.DODRIO,e.MUK,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.STANTLER,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.KRICKETOT,e.KRICKETUNE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.JOLTIK,e.EELEKTRIK,e.EELEKTROSS,e.LARVESTA,e.VOLCARONA,e.HAWLUCHA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.FALINKS,e.SNOM,e.FROSMOTH,e.WYRDEER,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.FLAMIGO,e.TATSUGIRI,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_MOTH],[t.SPEED_SWAP]:[e.RAICHU,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PORYGON,e.MEWTWO,e.MEW,e.PORYGON2,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.VICTINI,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.CUTIEFLY,e.RIBOMBEE,e.TAPU_LELE,e.PHEROMOSA,e.MAGEARNA,e.CALYREX,e.RABSCA,e.ALOLA_RAICHU],[t.SMART_STRIKE]:[e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.CLOYSTER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.ARIADOS,e.TOGETIC,e.FORRETRESS,e.DUNSPARCE,e.HERACROSS,e.DONPHAN,e.AGGRON,e.RHYPERIOR,e.TOGEKISS,e.SAMUROTT,e.EXCADRILL,e.SCOLIPEDE,e.SAWSBUCK,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.TAPU_FINI,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.OVERQWIL,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.GOUGING_FIRE,e.IRON_CROWN,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[t.BRUTAL_SWING]:[e.CHARIZARD,e.BEEDRILL,e.EKANS,e.ARBOK,e.RAICHU,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.ONIX,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYDON,e.SCYTHER,e.PINSIR,e.GYARADOS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.STEELIX,e.SCIZOR,e.HERACROSS,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.TYRANITAR,e.SCEPTILE,e.SHIFTRY,e.AZURILL,e.MAWILE,e.AGGRON,e.FLYGON,e.SEVIPER,e.ARMALDO,e.MILOTIC,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.METAGROSS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.GARCHOMP,e.DRAPION,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GIRATINA,e.SERPERIOR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROKOROK,e.KROOKODILE,e.ESCAVALIER,e.FERROTHORN,e.HAXORUS,e.MIENSHAO,e.HEATMOR,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.DIGGERSBY,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.BARBARACLE,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.HATTREM,e.HATTERENE,e.SIRFETCHD,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.ZACIAN,e.ETERNATUS,e.ZARUDE,e.KLEAVOR,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_YAMASK],[t.AURORA_VEIL]:[e.JYNX,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.REGICE,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.EISCUE,e.ARCTOVISH,e.IRON_BUNDLE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_AVALUGG],[t.PSYCHIC_FANGS]:[e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.AERODACTYL,e.MEW,e.CROCONAW,e.FERALIGATR,e.ESPEON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SALAMENCE,e.METAGROSS,e.SHINX,e.LUXIO,e.LUXRAY,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SWOOBAT,e.BASCULIN,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.NECROZMA,e.GREEDENT,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.CHIEN_PAO,e.OKIDOGI,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.STOMPING_TANTRUM]:[e.VENUSAUR,e.RATICATE,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORINA,e.NIDOQUEEN,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.DODRIO,e.ONIX,e.KINGLER,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TAUROS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.ARIADOS,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.LINOONE,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.TORTERRA,e.BIBAREL,e.RAMPARDOS,e.BASTIODON,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.STOUTLAND,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.CRUSTLE,e.GARBODOR,e.SAWSBUCK,e.AMOONGUSS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HEATMOR,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.CARBINK,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.DURALUDON,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_LINOONE,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.LIQUIDATION]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.LAPRAS,e.VAPOREON,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.CARVANHA,e.SHARPEDO,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.WALREIN,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.VOLCANION,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DHELMISE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.IRON_VALIANT,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.BODY_PRESS]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.ONIX,e.HYPNO,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.LAPRAS,e.SNORLAX,e.DRAGONITE,e.MEW,e.MEGANIUM,e.SUDOWOODO,e.QUAGSIRE,e.FORRETRESS,e.STEELIX,e.MANTINE,e.SKARMORY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.CLAYDOL,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DARMANITAN,e.CRUSTLE,e.COFAGRIGUS,e.GARBODOR,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLURK,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.HAWLUCHA,e.CARBINK,e.GOODRA,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.CRABOMINABLE,e.MUDSDALE,e.BEWEAR,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,[e.CALYREX,"","ice"],e.URSALUNA,e.OINKOLOGNE,e.PAWMOT,e.DACHSBUN,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.BREAKING_SWIPE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ARBOK,e.ONIX,e.RHYDON,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.AMPHAROS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.SEVIPER,e.MILOTIC,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.RAMPARDOS,e.GABITE,e.GARCHOMP,e.RHYPERIOR,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.SERPERIOR,e.KROKOROK,e.KROOKODILE,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.INTELEON,e.DRACOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.STEEL_BEAM]:[e.MAGNEMITE,e.MAGNETON,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SKARMORY,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.BELDUM,e.METANG,e.METAGROSS,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.EXCADRILL,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.SILVALLY,e.TOGEDEMARU,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.IRON_TREADS,e.GHOLDENGO,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.EXPANDING_FORCE]:[e.WIGGLYTUFF,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.JIRACHI,e.DEOXYS,e.BRONZOR,e.BRONZONG,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_CROWN,e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.STEEL_ROLLER]:[e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CLOYSTER,e.LICKITUNG,e.SNORLAX,e.MEW,e.MARILL,e.AZUMARILL,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MILTANK,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.METANG,e.METAGROSS,e.REGISTEEL,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.HEATRAN,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.IRON_TREADS,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.SCALE_SHOT]:[e.CHARIZARD,e.EKANS,e.ARBOK,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.KINGDRA,e.LUGIA,e.SCEPTILE,e.CARVANHA,e.SHARPEDO,e.FLYGON,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.ZYGARDE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NAGANADEL,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.REGIDRAGO,e.BASCULEGION,e.OVERQWIL,e.CYCLIZAR,e.VELUZA,e.DUDUNSPARCE,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_QWILFISH],[t.METEOR_BEAM]:[e.CLEFAIRY,e.CLEFABLE,e.ONIX,e.RHYDON,e.STARMIE,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.AMPHAROS,e.SUDOWOODO,e.STEELIX,e.SHUCKLE,e.CORSOLA,e.NOSEPASS,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BASTIODON,e.BRONZONG,e.RHYPERIOR,e.PROBOPASS,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ELGYEM,e.BEHEEYEM,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.MINIOR,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.CELESTEELA,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.KLAWF,e.GLIMMET,e.GLIMMORA,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ARCHALUDON,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_CORSOLA,e.HISUI_AVALUGG],[t.MISTY_EXPLOSION]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEW,e.MARILL,e.AZUMARILL,e.GARDEVOIR,e.MUSHARNA,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.CARBINK,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.MAGEARNA,e.HATTERENE,e.ALCREMIE,e.ENAMORUS,e.SCREAM_TAIL,e.GALAR_WEEZING],[t.GRASSY_GLIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.BELLOSSOM,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SIRFETCHD,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.RISING_VOLTAGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.RAGING_BOLT,e.ALOLA_RAICHU],[t.TERRAIN_PULSE]:[e.VENUSAUR,e.BLASTOISE,e.EXEGGUTOR,e.LICKITUNG,e.KANGASKHAN,e.SNORLAX,e.MEW,e.DUNSPARCE,e.EXPLOUD,e.LUCARIO,e.LICKILICKY,e.REGIGIGAS,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.XERNEAS,e.DIANCIE,e.ORANGURU,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.INDEEDEE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.DUDUNSPARCE,e.ALOLA_EXEGGUTOR,e.GALAR_STUNFISK],[t.SKITTER_SMACK]:[e.EKANS,e.ARBOK,e.VENONAT,e.VENOMOTH,e.PERSIAN,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.OCTILLERY,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.CACNEA,e.CACTURNE,e.SEVIPER,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.KRICKETOT,e.KRICKETUNE,e.COMBEE,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.DUSKNOIR,e.GIRATINA,e.LIEPARD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ZORUA,e.ZOROARK,e.JOLTIK,e.GALVANTULA,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.VIVILLON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.HOOPA,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SHROODLE,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.DUDUNSPARCE,e.SLITHER_WING,e.ALOLA_PERSIAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.BURNING_JEALOUSY]:[e.VULPIX,e.NINETALES,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.TORKOAL,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MISMAGIUS,e.SKUNTANK,e.SPIRITOMB,e.MAGMORTAR,e.HEATRAN,e.LIEPARD,e.DARMANITAN,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PYROAR,e.TREVENANT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.SCOVILLAIN,e.CHI_YU,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.LASH_OUT]:[e.EKANS,e.ARBOK,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.UMBREON,e.MURKROW,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.TYRUNT,e.TYRANTRUM,e.PHANTUMP,e.TREVENANT,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.MUDSDALE,e.TURTONATOR,e.DRAMPA,e.GUZZLORD,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.OINKOLOGNE,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.BOMBIRDIER,e.REVAVROOM,e.ANNIHILAPE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.POLTERGEIST]:[e.GASTLY,e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.SPECTRIER,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.GREAVARD,e.HOUNDSTONE,e.FLUTTER_MANE,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_MAROWAK,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK],[t.CORROSIVE_GAS]:[e.VILEPLUME,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.STUNKY,e.SKUNTANK,e.TOXICROAK,e.TRUBBISH,e.GARBODOR,e.SALAZZLE,e.NIHILEGO,e.GUZZLORD,e.GALAR_WEEZING],[t.COACHING]:[e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.HERACROSS,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.MAKUHITA,e.HARIYAMA,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.SIRFETCHD,e.FALINKS,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.SNEASLER,e.QUAQUAVAL,e.PAWMO,e.PAWMOT,e.ANNIHILAPE,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_ZAPDOS,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.FLIP_TURN]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SEEL,e.DEWGONG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.VAPOREON,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.QWILFISH,e.KINGDRA,e.SWAMPERT,e.CARVANHA,e.SHARPEDO,e.MILOTIC,e.LUVDISC,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.FINNEON,e.LUMINEON,e.PHIONE,e.MANAPHY,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.SWANNA,e.ALOMOMOLA,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.INTELEON,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.PALAFIN,e.VELUZA,e.IRON_BUNDLE,e.WALKING_WAKE,e.HISUI_SAMUROTT],[t.TRIPLE_AXEL]:[e.SEEL,e.DEWGONG,e.JYNX,e.ARTICUNO,e.MEW,e.BELLOSSOM,e.SNEASEL,e.DELIBIRD,e.HITMONTOP,e.KIRLIA,e.GARDEVOIR,e.MILOTIC,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.WEAVILE,e.GLACEON,e.GALLADE,e.FROSLASS,e.LEAVANNY,e.MINCCINO,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.MELOETTA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.STEENEE,e.TSAREENA,e.PHEROMOSA,e.MR_RIME,e.FROSMOTH,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.HISUI_LILLIGANT],[t.DUAL_WINGBEAT]:[e.CHARIZARD,e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.CELEBI,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.COMBEE,e.VESPIQUEN,e.HONCHKROW,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PALKIA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.EMOLGA,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LUNALA,e.BUZZWOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.KORAIDON,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.SCORCHING_SANDS]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.ARCANINE,e.RAPIDASH,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.TYPHLOSION,e.STEELIX,e.MAGCARGO,e.ENTEI,e.HO_OH,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BALTOY,e.CLAYDOL,e.GROUDON,e.INFERNAPE,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.GOLETT,e.GOLURK,e.HEATMOR,e.RESHIRAM,e.LANDORUS,e.DELPHOX,e.DIGGERSBY,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.SKELEDIRGE,e.ARMAROUGE,e.SANDY_SHOCKS,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.TERA_BLAST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.ICE_SPINNER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.LUDICOLO,e.SNORUNT,e.GLALIE,e.REGICE,e.REGISTEEL,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.BRONZOR,e.BRONZONG,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.FROSLASS,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.KOMALA,e.MAGEARNA,e.DREDNAW,e.FROSMOTH,e.EISCUE,e.QUAQUAVAL,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_BUNDLE,e.CHIEN_PAO,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,[e.URSHIFU,"rapid-strike"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.SNOWSCAPE]:[e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.LAPRAS,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.MISDREAVUS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.BLISSEY,e.SUICUNE,e.WINGULL,e.PELIPPER,e.SPOINK,e.GRUMPIG,e.ALTARIA,e.SNORUNT,e.GLALIE,e.LUVDISC,e.REGICE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHELLOS,e.GASTRODON,e.MISMAGIUS,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KYUREM,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.PRIMARINA,e.CRABOMINABLE,e.MAGEARNA,e.INTELEON,e.FROSMOTH,e.EISCUE,e.GLASTRIER,e.BASCULEGION,e.CETODDLE,e.CETITAN,e.VELUZA,e.SCREAM_TAIL,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG],[t.POUNCE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.HERACROSS,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKING,e.VOLBEAT,e.ILLUMISE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.KRICKETUNE,e.VESPIQUEN,e.YANMEGA,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.LARVESTA,e.VOLCARONA,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.MIMIKYU,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.CRAMORANT,e.SNOM,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_MOTH,e.DIPPLIN,e.HYDRAPPLE],[t.TRAILBLAZE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODRIO,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.SCYTHER,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.SEVIPER,e.BANETTE,e.TROPIUS,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.SCRAGGY,e.SCRAFTY,e.DUCKLETT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.MEOWSTIC,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.KOMALA,e.MIMIKYU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.CLODSIRE,e.FARIGIRAF,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CHILLING_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.DELIBIRD,e.KINGDRA,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.MINCCINO,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.BRUXISH,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.PINCURCHIN,e.EISCUE,e.BASCULEGION,e.OVERQWIL,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_BUNDLE,e.WALKING_WAKE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.HARD_PRESS]:[e.GRAVELER,e.GOLEM,e.SNORLAX,e.MEW,e.FORRETRESS,e.SCIZOR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.CRAWDAUNT,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.BRONZONG,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.MAMOSWINE,e.PROBOPASS,e.DUSKNOIR,e.HEATRAN,e.REGIGIGAS,e.EMBOAR,e.CONKELDURR,e.BEARTIC,e.GOLURK,e.CRABOMINABLE,e.STONJOURNER,e.COPPERAJAH,e.URSALUNA,e.GARGANACL,e.TINKATON,e.PALAFIN,e.REVAVROOM,e.CETITAN,e.IRON_TREADS,e.IRON_HANDS,e.OKIDOGI,e.ARCHALUDON,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.DRAGON_CHEER]:[e.CHARIZARD,e.GYARADOS,e.LAPRAS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.AMPHAROS,e.SCEPTILE,e.FLYGON,e.SWABLU,e.ALTARIA,e.MILOTIC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.AXEW,e.FRAXURE,e.HAXORUS,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.GOODRA,e.NOIVERN,e.SALAZZLE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.ALLURING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DEWGONG,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.ESPEON,e.UMBREON,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.PLUSLE,e.MINUN,e.FLYGON,e.ALTARIA,e.MILOTIC,e.LATIAS,e.PACHIRISU,e.FINNEON,e.LUMINEON,e.LEAFEON,e.GLACEON,e.GALLADE,e.PHIONE,e.MANAPHY,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.ALOMOMOLA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.SYLVEON,e.PRIMARINA,e.ORICORIO,e.RIBOMBEE,e.COMFEY,e.ALCREMIE,e.ENAMORUS,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ETERNAL_FLOETTE,[e.INDEEDEE,"female"]],[t.TEMPER_FLARE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.GROWLITHE,e.ARCANINE,e.MAGMAR,e.GYARADOS,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.RHYPERIOR,e.MAGMORTAR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.FLETCHINDER,e.TALONFLAME,e.PYROAR,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.KLAWF,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.GREAT_TUSK,e.SLITHER_WING,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.SUPERCELL_SLAM]:[e.ELECTRODE,e.RHYHORN,e.RHYDON,e.ELECTABUZZ,e.SNORLAX,e.ZAPDOS,e.MEW,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.MANECTRIC,e.LUXRAY,e.RAMPARDOS,e.MAGNEZONE,e.RHYPERIOR,e.ELECTIVIRE,e.PROBOPASS,e.ARCEUS,e.BLITZLE,e.ZEBSTRIKA,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.VIKAVOLT,e.PINCURCHIN,e.COPPERAJAH,e.REGIELEKI,e.URSALUNA,e.PAWMOT,e.BELLIBOLT,e.KILOWATTREL,e.CYCLIZAR,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_ELECTRODE],[t.PSYCHIC_NOISE]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.YANMA,e.ESPEON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.LUGIA,e.GARDEVOIR,e.GRUMPIG,e.FLYGON,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.YANMEGA,e.UXIE,e.MESPRIT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DELPHOX,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.TREVENANT,e.NOIVERN,e.HOOPA,e.PRIMARINA,e.RIBOMBEE,e.ORANGURU,e.BRUXISH,e.TOXTRICITY,e.HATTERENE,e.INDEEDEE,e.WYRDEER,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.UPPER_HAND]:[e.PIKACHU,e.RAICHU,e.POLIWRATH,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.SHIFTRY,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.SAMUROTT,e.CONKELDURR,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GRENINJA,e.TALONFLAME,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,[e.LYCANROC,"midnight"],e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.FALINKS,e.SNEASLER,e.QUAQUAVAL,e.SPIDOPS,e.PAWMO,e.PAWMOT,e.FLAMIGO,e.OKIDOGI,e.ALOLA_RAICHU,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE]},Ll={[t.MEGA_PUNCH]:v.GREAT,[t.PAY_DAY]:v.ULTRA,[t.FIRE_PUNCH]:v.GREAT,[t.ICE_PUNCH]:v.GREAT,[t.THUNDER_PUNCH]:v.GREAT,[t.SWORDS_DANCE]:v.COMMON,[t.CUT]:v.COMMON,[t.FLY]:v.COMMON,[t.MEGA_KICK]:v.GREAT,[t.BODY_SLAM]:v.GREAT,[t.TAKE_DOWN]:v.GREAT,[t.DOUBLE_EDGE]:v.ULTRA,[t.PIN_MISSILE]:v.COMMON,[t.ROAR]:v.COMMON,[t.FLAMETHROWER]:v.ULTRA,[t.HYDRO_PUMP]:v.ULTRA,[t.SURF]:v.ULTRA,[t.ICE_BEAM]:v.ULTRA,[t.BLIZZARD]:v.ULTRA,[t.PSYBEAM]:v.GREAT,[t.HYPER_BEAM]:v.ULTRA,[t.LOW_KICK]:v.COMMON,[t.COUNTER]:v.COMMON,[t.STRENGTH]:v.GREAT,[t.SOLAR_BEAM]:v.ULTRA,[t.FIRE_SPIN]:v.COMMON,[t.THUNDERBOLT]:v.ULTRA,[t.THUNDER_WAVE]:v.COMMON,[t.THUNDER]:v.ULTRA,[t.EARTHQUAKE]:v.ULTRA,[t.DIG]:v.GREAT,[t.TOXIC]:v.GREAT,[t.PSYCHIC]:v.ULTRA,[t.AGILITY]:v.COMMON,[t.NIGHT_SHADE]:v.COMMON,[t.SCREECH]:v.COMMON,[t.DOUBLE_TEAM]:v.COMMON,[t.CONFUSE_RAY]:v.COMMON,[t.LIGHT_SCREEN]:v.COMMON,[t.HAZE]:v.COMMON,[t.REFLECT]:v.COMMON,[t.FOCUS_ENERGY]:v.COMMON,[t.METRONOME]:v.COMMON,[t.SELF_DESTRUCT]:v.GREAT,[t.FIRE_BLAST]:v.ULTRA,[t.WATERFALL]:v.GREAT,[t.SWIFT]:v.COMMON,[t.AMNESIA]:v.COMMON,[t.DREAM_EATER]:v.GREAT,[t.LEECH_LIFE]:v.ULTRA,[t.FLASH]:v.COMMON,[t.EXPLOSION]:v.GREAT,[t.REST]:v.COMMON,[t.ROCK_SLIDE]:v.GREAT,[t.TRI_ATTACK]:v.ULTRA,[t.SUPER_FANG]:v.COMMON,[t.SUBSTITUTE]:v.COMMON,[t.THIEF]:v.GREAT,[t.SNORE]:v.COMMON,[t.CURSE]:v.COMMON,[t.REVERSAL]:v.COMMON,[t.SPITE]:v.COMMON,[t.PROTECT]:v.COMMON,[t.SCARY_FACE]:v.COMMON,[t.SLUDGE_BOMB]:v.GREAT,[t.MUD_SLAP]:v.COMMON,[t.SPIKES]:v.COMMON,[t.ICY_WIND]:v.GREAT,[t.OUTRAGE]:v.ULTRA,[t.SANDSTORM]:v.COMMON,[t.GIGA_DRAIN]:v.ULTRA,[t.ENDURE]:v.COMMON,[t.CHARM]:v.COMMON,[t.FALSE_SWIPE]:v.COMMON,[t.SWAGGER]:v.COMMON,[t.STEEL_WING]:v.GREAT,[t.ATTRACT]:v.COMMON,[t.SLEEP_TALK]:v.COMMON,[t.HEAL_BELL]:v.COMMON,[t.RETURN]:v.ULTRA,[t.FRUSTRATION]:v.COMMON,[t.SAFEGUARD]:v.COMMON,[t.PAIN_SPLIT]:v.COMMON,[t.MEGAHORN]:v.ULTRA,[t.BATON_PASS]:v.COMMON,[t.ENCORE]:v.COMMON,[t.IRON_TAIL]:v.GREAT,[t.METAL_CLAW]:v.COMMON,[t.SYNTHESIS]:v.GREAT,[t.HIDDEN_POWER]:v.GREAT,[t.RAIN_DANCE]:v.COMMON,[t.SUNNY_DAY]:v.COMMON,[t.CRUNCH]:v.GREAT,[t.PSYCH_UP]:v.COMMON,[t.SHADOW_BALL]:v.ULTRA,[t.FUTURE_SIGHT]:v.GREAT,[t.ROCK_SMASH]:v.COMMON,[t.WHIRLPOOL]:v.COMMON,[t.BEAT_UP]:v.COMMON,[t.UPROAR]:v.GREAT,[t.HEAT_WAVE]:v.ULTRA,[t.HAIL]:v.COMMON,[t.TORMENT]:v.COMMON,[t.WILL_O_WISP]:v.COMMON,[t.FACADE]:v.GREAT,[t.FOCUS_PUNCH]:v.COMMON,[t.NATURE_POWER]:v.COMMON,[t.CHARGE]:v.COMMON,[t.TAUNT]:v.COMMON,[t.HELPING_HAND]:v.COMMON,[t.TRICK]:v.COMMON,[t.SUPERPOWER]:v.ULTRA,[t.RECYCLE]:v.COMMON,[t.REVENGE]:v.GREAT,[t.BRICK_BREAK]:v.GREAT,[t.KNOCK_OFF]:v.GREAT,[t.ENDEAVOR]:v.COMMON,[t.SKILL_SWAP]:v.COMMON,[t.IMPRISON]:v.COMMON,[t.SECRET_POWER]:v.COMMON,[t.DIVE]:v.GREAT,[t.FEATHER_DANCE]:v.COMMON,[t.BLAZE_KICK]:v.GREAT,[t.HYPER_VOICE]:v.ULTRA,[t.BLAST_BURN]:v.ULTRA,[t.HYDRO_CANNON]:v.ULTRA,[t.WEATHER_BALL]:v.COMMON,[t.FAKE_TEARS]:v.COMMON,[t.AIR_CUTTER]:v.GREAT,[t.OVERHEAT]:v.ULTRA,[t.ROCK_TOMB]:v.GREAT,[t.METAL_SOUND]:v.COMMON,[t.COSMIC_POWER]:v.COMMON,[t.SIGNAL_BEAM]:v.GREAT,[t.SAND_TOMB]:v.COMMON,[t.MUDDY_WATER]:v.GREAT,[t.BULLET_SEED]:v.GREAT,[t.AERIAL_ACE]:v.GREAT,[t.ICICLE_SPEAR]:v.GREAT,[t.IRON_DEFENSE]:v.GREAT,[t.DRAGON_CLAW]:v.ULTRA,[t.FRENZY_PLANT]:v.ULTRA,[t.BULK_UP]:v.COMMON,[t.BOUNCE]:v.GREAT,[t.MUD_SHOT]:v.GREAT,[t.POISON_TAIL]:v.GREAT,[t.COVET]:v.GREAT,[t.MAGICAL_LEAF]:v.GREAT,[t.CALM_MIND]:v.GREAT,[t.LEAF_BLADE]:v.ULTRA,[t.DRAGON_DANCE]:v.GREAT,[t.ROCK_BLAST]:v.GREAT,[t.WATER_PULSE]:v.GREAT,[t.ROOST]:v.GREAT,[t.GRAVITY]:v.COMMON,[t.GYRO_BALL]:v.COMMON,[t.BRINE]:v.GREAT,[t.PLUCK]:v.GREAT,[t.TAILWIND]:v.GREAT,[t.U_TURN]:v.GREAT,[t.CLOSE_COMBAT]:v.ULTRA,[t.PAYBACK]:v.COMMON,[t.ASSURANCE]:v.COMMON,[t.EMBARGO]:v.COMMON,[t.FLING]:v.COMMON,[t.GASTRO_ACID]:v.GREAT,[t.POWER_SWAP]:v.COMMON,[t.GUARD_SWAP]:v.COMMON,[t.WORRY_SEED]:v.GREAT,[t.TOXIC_SPIKES]:v.GREAT,[t.FLARE_BLITZ]:v.ULTRA,[t.AURA_SPHERE]:v.GREAT,[t.ROCK_POLISH]:v.COMMON,[t.POISON_JAB]:v.GREAT,[t.DARK_PULSE]:v.GREAT,[t.AQUA_TAIL]:v.GREAT,[t.SEED_BOMB]:v.GREAT,[t.AIR_SLASH]:v.GREAT,[t.X_SCISSOR]:v.GREAT,[t.BUG_BUZZ]:v.GREAT,[t.DRAGON_PULSE]:v.GREAT,[t.POWER_GEM]:v.GREAT,[t.DRAIN_PUNCH]:v.GREAT,[t.VACUUM_WAVE]:v.COMMON,[t.FOCUS_BLAST]:v.GREAT,[t.ENERGY_BALL]:v.GREAT,[t.BRAVE_BIRD]:v.ULTRA,[t.EARTH_POWER]:v.ULTRA,[t.GIGA_IMPACT]:v.GREAT,[t.NASTY_PLOT]:v.COMMON,[t.AVALANCHE]:v.GREAT,[t.SHADOW_CLAW]:v.GREAT,[t.THUNDER_FANG]:v.GREAT,[t.ICE_FANG]:v.GREAT,[t.FIRE_FANG]:v.GREAT,[t.PSYCHO_CUT]:v.GREAT,[t.ZEN_HEADBUTT]:v.GREAT,[t.FLASH_CANNON]:v.GREAT,[t.ROCK_CLIMB]:v.GREAT,[t.DEFOG]:v.COMMON,[t.TRICK_ROOM]:v.COMMON,[t.DRACO_METEOR]:v.ULTRA,[t.LEAF_STORM]:v.ULTRA,[t.POWER_WHIP]:v.ULTRA,[t.CROSS_POISON]:v.GREAT,[t.GUNK_SHOT]:v.ULTRA,[t.IRON_HEAD]:v.GREAT,[t.STONE_EDGE]:v.ULTRA,[t.STEALTH_ROCK]:v.COMMON,[t.GRASS_KNOT]:v.ULTRA,[t.BUG_BITE]:v.GREAT,[t.CHARGE_BEAM]:v.GREAT,[t.HONE_CLAWS]:v.COMMON,[t.WONDER_ROOM]:v.COMMON,[t.PSYSHOCK]:v.GREAT,[t.VENOSHOCK]:v.GREAT,[t.MAGIC_ROOM]:v.COMMON,[t.SMACK_DOWN]:v.COMMON,[t.SLUDGE_WAVE]:v.GREAT,[t.HEAVY_SLAM]:v.GREAT,[t.ELECTRO_BALL]:v.GREAT,[t.FLAME_CHARGE]:v.GREAT,[t.LOW_SWEEP]:v.GREAT,[t.ACID_SPRAY]:v.COMMON,[t.FOUL_PLAY]:v.ULTRA,[t.ROUND]:v.COMMON,[t.ECHOED_VOICE]:v.COMMON,[t.STORED_POWER]:v.COMMON,[t.ALLY_SWITCH]:v.COMMON,[t.SCALD]:v.GREAT,[t.HEX]:v.GREAT,[t.SKY_DROP]:v.GREAT,[t.INCINERATE]:v.GREAT,[t.QUASH]:v.COMMON,[t.ACROBATICS]:v.GREAT,[t.RETALIATE]:v.GREAT,[t.WATER_PLEDGE]:v.GREAT,[t.FIRE_PLEDGE]:v.GREAT,[t.GRASS_PLEDGE]:v.GREAT,[t.VOLT_SWITCH]:v.GREAT,[t.STRUGGLE_BUG]:v.COMMON,[t.BULLDOZE]:v.GREAT,[t.FROST_BREATH]:v.GREAT,[t.DRAGON_TAIL]:v.GREAT,[t.WORK_UP]:v.COMMON,[t.ELECTROWEB]:v.GREAT,[t.WILD_CHARGE]:v.GREAT,[t.DRILL_RUN]:v.GREAT,[t.RAZOR_SHELL]:v.GREAT,[t.HEAT_CRASH]:v.GREAT,[t.TAIL_SLAP]:v.GREAT,[t.HURRICANE]:v.ULTRA,[t.SNARL]:v.COMMON,[t.PHANTOM_FORCE]:v.ULTRA,[t.PETAL_BLIZZARD]:v.GREAT,[t.DISARMING_VOICE]:v.GREAT,[t.DRAINING_KISS]:v.GREAT,[t.GRASSY_TERRAIN]:v.COMMON,[t.MISTY_TERRAIN]:v.COMMON,[t.PLAY_ROUGH]:v.GREAT,[t.CONFIDE]:v.COMMON,[t.MYSTICAL_FIRE]:v.GREAT,[t.EERIE_IMPULSE]:v.COMMON,[t.VENOM_DRENCH]:v.COMMON,[t.ELECTRIC_TERRAIN]:v.COMMON,[t.DAZZLING_GLEAM]:v.ULTRA,[t.INFESTATION]:v.COMMON,[t.POWER_UP_PUNCH]:v.GREAT,[t.DARKEST_LARIAT]:v.GREAT,[t.HIGH_HORSEPOWER]:v.ULTRA,[t.SOLAR_BLADE]:v.GREAT,[t.THROAT_CHOP]:v.GREAT,[t.POLLEN_PUFF]:v.GREAT,[t.PSYCHIC_TERRAIN]:v.COMMON,[t.LUNGE]:v.GREAT,[t.SPEED_SWAP]:v.COMMON,[t.SMART_STRIKE]:v.GREAT,[t.BRUTAL_SWING]:v.GREAT,[t.AURORA_VEIL]:v.COMMON,[t.PSYCHIC_FANGS]:v.GREAT,[t.STOMPING_TANTRUM]:v.GREAT,[t.LIQUIDATION]:v.ULTRA,[t.BODY_PRESS]:v.ULTRA,[t.BREAKING_SWIPE]:v.GREAT,[t.STEEL_BEAM]:v.ULTRA,[t.EXPANDING_FORCE]:v.GREAT,[t.STEEL_ROLLER]:v.COMMON,[t.SCALE_SHOT]:v.ULTRA,[t.METEOR_BEAM]:v.GREAT,[t.MISTY_EXPLOSION]:v.COMMON,[t.GRASSY_GLIDE]:v.COMMON,[t.RISING_VOLTAGE]:v.COMMON,[t.TERRAIN_PULSE]:v.COMMON,[t.SKITTER_SMACK]:v.GREAT,[t.BURNING_JEALOUSY]:v.GREAT,[t.LASH_OUT]:v.GREAT,[t.POLTERGEIST]:v.ULTRA,[t.CORROSIVE_GAS]:v.COMMON,[t.COACHING]:v.COMMON,[t.FLIP_TURN]:v.COMMON,[t.TRIPLE_AXEL]:v.COMMON,[t.DUAL_WINGBEAT]:v.COMMON,[t.SCORCHING_SANDS]:v.GREAT,[t.TERA_BLAST]:v.GREAT,[t.ICE_SPINNER]:v.GREAT,[t.SNOWSCAPE]:v.COMMON,[t.POUNCE]:v.COMMON,[t.TRAILBLAZE]:v.COMMON,[t.CHILLING_WATER]:v.COMMON,[t.HARD_PRESS]:v.GREAT,[t.DRAGON_CHEER]:v.COMMON,[t.ALLURING_VOICE]:v.GREAT,[t.TEMPER_FLARE]:v.GREAT,[t.SUPERCELL_SLAM]:v.GREAT,[t.PSYCHIC_NOISE]:v.GREAT,[t.UPPER_HAND]:v.COMMON};function xO(E,A=!1,s=!1,R=!1,n=NO.DEFAULT){let I=wn(At[E]);if(D.exists("nature:"+I)&&(I=D.t("nature:"+I)),A){let a=null,r=null;for(const l of Vn){const C=fo(E,l);C>1?a=l:C<1&&(r=l)}const S=s?X.SUMMARY_ALT:X.WINDOW,o=R?(l,C)=>l:(l,C)=>RO(l,C,n);a&&r?I=`${o(`${I}${s?" ":`
`}(`,S)}${o(`+${D.t(pa(a))}`,X.SUMMARY_PINK)}${o("/",S)}${o(`-${D.t(pa(r))}`,X.SUMMARY_BLUE)}${o(")",S)}`:I=o(`${I}${s?" ":`
`}(-)`,S)}return I}L(xO,"getNatureName");function fo(E,A){switch(A){case g.ATK:switch(E){case At.LONELY:case At.BRAVE:case At.ADAMANT:case At.NAUGHTY:return 1.1;case At.BOLD:case At.TIMID:case At.MODEST:case At.CALM:return .9}break;case g.DEF:switch(E){case At.BOLD:case At.RELAXED:case At.IMPISH:case At.LAX:return 1.1;case At.LONELY:case At.HASTY:case At.MILD:case At.GENTLE:return .9}break;case g.SPATK:switch(E){case At.MODEST:case At.MILD:case At.QUIET:case At.RASH:return 1.1;case At.ADAMANT:case At.IMPISH:case At.JOLLY:case At.CAREFUL:return .9}break;case g.SPDEF:switch(E){case At.CALM:case At.GENTLE:case At.SASSY:case At.CAREFUL:return 1.1;case At.NAUGHTY:case At.LAX:case At.NAIVE:case At.RASH:return .9}break;case g.SPD:switch(E){case At.TIMID:case At.HASTY:case At.JOLLY:case At.NAIVE:return 1.1;case At.BRAVE:case At.RELAXED:case At.QUIET:case At.SASSY:return .9}break}return 1}L(fo,"getNatureStatMultiplier");const jb=99;function TO(E){switch(E){case be.POKEBALL:return"pb";case be.GREAT_BALL:return"gb";case be.ULTRA_BALL:return"ub";case be.ROGUE_BALL:return"rb";case be.MASTER_BALL:return"mb";case be.LUXURY_BALL:return"lb"}}L(TO,"getPokeballAtlasKey");function Gl(E){let A;switch(E){case be.POKEBALL:A=D.t("pokeball:pokeBall");break;case be.GREAT_BALL:A=D.t("pokeball:greatBall");break;case be.ULTRA_BALL:A=D.t("pokeball:ultraBall");break;case be.ROGUE_BALL:A=D.t("pokeball:rogueBall");break;case be.MASTER_BALL:A=D.t("pokeball:masterBall");break;case be.LUXURY_BALL:A=D.t("pokeball:luxuryBall");break}return A}L(Gl,"getPokeballName");function Hl(E){switch(E){case be.POKEBALL:return 1;case be.GREAT_BALL:return 1.5;case be.ULTRA_BALL:return 2;case be.ROGUE_BALL:return 3;case be.MASTER_BALL:return-1;case be.LUXURY_BALL:return 1}}L(Hl,"getPokeballCatchMultiplier");function bO(E){switch(E){case be.POKEBALL:return 13969705;case be.GREAT_BALL:return 9745630;case be.ULTRA_BALL:return 15125809;case be.ROGUE_BALL:return 13969705;case be.MASTER_BALL:return 10764733;case be.LUXURY_BALL:return 16768618}}L(bO,"getPokeballTintColor");function H7(E,A){var I;if(E.gameMode.isFreshStartChallenge())return 0;const s=E.gameData.getSpeciesCount(a=>!!a.caughtAttr),R=new Rt(1);(I=E.findModifier(a=>a instanceof lo))==null||I.apply(R);const n=E.gameMode.isDaily||s>800?2.5:s>600?2:s>400?1.5:s>200?1:s>100?.5:0;return Math.floor(R.value*n*Math.min(255,A)/6)}L(H7,"getCriticalCaptureChance");function e6(E,A,s,R,n,I,a=!1){let r=1,S=s,o=R;const l=R-s,C=A.x,M=C+3,u=C-3;let h=4;const P=L(()=>{E.tweens.add({targets:A,y:R,duration:r*n,ease:"Cubic.easeIn",onComplete:L(()=>{E.playSound("se/pb_bounce_1",{volume:r}),r=r>.01?r*.5:0,r?(S=l*r,o=R-S,E.tweens.add({targets:A,y:o,duration:r*n,ease:"Cubic.easeOut",onComplete:L(()=>P(),"onComplete")})):I&&I()},"onComplete")})},"doBounce"),G=L(()=>{E.tweens.add({targets:A,x:u,duration:125,ease:"Linear",onComplete:L(()=>{E.tweens.add({targets:A,x:M,duration:125,ease:"Linear",onComplete:L(()=>{h--,h>0?G():E.tweens.add({targets:A,x:C,duration:60,ease:"Linear",onComplete:L(()=>E.time.delayedCall(500,P),"onComplete")})},"onComplete")})},"onComplete")})},"doCritShake");a?E.time.delayedCall(500,G):P()}L(e6,"doPokeballBounceAnim");var SA=(E=>(E[E.CLASSIC=0]="CLASSIC",E[E.ENDLESS=1]="ENDLESS",E[E.SPLICED_ENDLESS=2]="SPLICED_ENDLESS",E[E.DAILY=3]="DAILY",E[E.CHALLENGE=4]="CHALLENGE",E))(SA||{});const xA=[10,180],d7=[10,180],hf=class hf{constructor(A,s,R){this.modeId=A,this.challenges=[],Object.assign(this,s),this.isChallenge&&(this.challenges=x6.map(n=>V6(n))),this.battleConfig=R||{}}hasChallenge(A){return this.challenges.some(s=>s.id===A&&s.value!==0)}isFreshStartChallenge(){return this.hasChallenge(yt.FRESH_START)}getStartingLevel(){if(Ye.STARTING_LEVEL_OVERRIDE)return Ye.STARTING_LEVEL_OVERRIDE;switch(this.modeId){case 3:return 20;default:return 5}}getStartingMoney(){return Ye.STARTING_MONEY_OVERRIDE||1e3}getStartingBiome(A){switch(this.modeId){case 3:return A.generateRandomBiome(this.getWaveForDifficulty(1));default:return Ye.STARTING_BIOME_OVERRIDE||N.TOWN}}getWaveForDifficulty(A,s=!1){switch(this.modeId){case 3:return A+30+(s?0:Math.floor(A/5));default:return A}}isWaveTrainer(A,s){if(this.isDaily)return A%10===5||!(A%10)&&A>10&&!this.isWaveFinal(A);if(A%30===(s.scene.offsetGym?0:20)&&!this.isWaveFinal(A))return!0;if(A%10!==1&&A%10){const R=s.getTrainerChance();let n=!0;if(R){const I=Math.floor(A/10)*10;for(let a=Math.max(A-3,I+2);a<=Math.min(A+3,I+9);a++)if(a!==A){if(a%30===(s.scene.offsetGym?0:20)||this.isFixedBattle(a)){n=!1;break}else if(a<A&&(s.scene.executeWithSeedOffset(()=>{const r=s.getTrainerChance();_e(r)||(n=!1)},a),!n))break}}return!!(n&&R&&!_e(R))}return!1}isTrainerBoss(A,s,R){switch(this.modeId){case 3:return A>10&&A<50&&!(A%10);default:return A%30===(R?0:20)&&(s!==N.END||this.isClassic||this.isWaveFinal(A))}}getOverrideSpecies(A){if(this.isDaily&&this.isWaveFinal(A)){const s=fR.filter(R=>(R.subLegendary||R.legendary||R.mythical)&&R.baseTotal>=600&&R.speciesId!==e.ETERNATUS&&R.speciesId!==e.ARCEUS);return JA(s)}return null}isWaveFinal(A,s=this.modeId){switch(s){case 0:case 4:return A===200;case 1:case 2:return!(A%250);case 3:return A===50}}isBoss(A){return A%10===0}isBattleClassicFinalBoss(A){return(this.modeId===0||this.modeId===4)&&this.isWaveFinal(A)}isEndlessBoss(A){return A%50===0&&(this.modeId===1||this.modeId===2)}isEndlessMinorBoss(A){return A%250===0&&(this.modeId===1||this.modeId===2)}isEndlessMajorBoss(A){return A%1e3===0&&(this.modeId===1||this.modeId===2)}isFixedBattle(A){const s=new CE;return this.battleConfig.hasOwnProperty(A)||Fs(this,Us.FIXED_BATTLES,A,s)}getFixedBattle(A){const s=new CE;return Fs(this,Us.FIXED_BATTLES,A,s)?s:this.battleConfig[A]}getClearScoreBonus(){switch(this.modeId){case 0:case 4:return 5e3;case 3:return 2500;default:return 0}}getEnemyModifierChance(A){switch(this.modeId){case 0:case 4:case 3:return A?6:18;case 1:case 2:return A?4:12}}getName(){switch(this.modeId){case 0:return D.t("gameMode:classic");case 1:return D.t("gameMode:endless");case 2:return D.t("gameMode:endlessSpliced");case 3:return D.t("gameMode:dailyRun");case 4:return D.t("gameMode:challenge")}}getMysteryEncounterLegalWaves(){switch(this.modeId){default:return[0,0];case 0:return xA;case 4:return d7}}static getModeName(A){switch(A){case 0:return D.t("gameMode:classic");case 1:return D.t("gameMode:endless");case 2:return D.t("gameMode:endlessSpliced");case 3:return D.t("gameMode:dailyRun");case 4:return D.t("gameMode:challenge")}}};L(hf,"GameMode");let GR=hf;function dl(E){switch(E){case 0:return new GR(0,{isClassic:!0,hasTrainers:!0,hasMysteryEncounters:!0},fb);case 1:return new GR(1,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0});case 2:return new GR(2,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0,isSplicedOnly:!0});case 3:return new GR(3,{isDaily:!0,hasTrainers:!0,hasNoShop:!0});case 4:return new GR(4,{isClassic:!0,hasTrainers:!0,isChallenge:!0,hasMysteryEncounters:!0},fb)}}L(dl,"getGameMode");var ms=(E=>(E[E.ENDLESS_MODE=0]="ENDLESS_MODE",E[E.MINI_BLACK_HOLE=1]="MINI_BLACK_HOLE",E[E.SPLICED_ENDLESS_MODE=2]="SPLICED_ENDLESS_MODE",E[E.EVIOLITE=3]="EVIOLITE",E))(ms||{});function f7(E){switch(E){case 0:return`${GR.getModeName(SA.ENDLESS)} Mode`;case 1:return D.t("modifierType:ModifierType.MINI_BLACK_HOLE.name");case 2:return`${GR.getModeName(SA.SPLICED_ENDLESS)} Mode`;case 3:return D.t("modifierType:ModifierType.EVIOLITE.name")}}L(f7,"getUnlockableName");var vt=(E=>(E[E.UNSET=0]="UNSET",E[E.MALE=1]="MALE",E[E.FEMALE=2]="FEMALE",E))(vt||{}),DL=(E=>(E[E.COMMON=0]="COMMON",E[E.GREAT=1]="GREAT",E[E.ULTRA=2]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=4]="MASTER",E))(DL||{});const cf=class cf{constructor(A,s,R,n,I,a){this.name=s,this.description=R,this.iconImage=n,this.score=I,this.conditionFunc=a,this.localizationKey=A}getName(A=vt.UNSET){const s=vt[A].toLowerCase();return D.t(`achv:${this.localizationKey}.name`,{context:s})}getDescription(){return this.description}getIconImage(){return this.iconImage}setSecret(A){return this.secret=!0,this.hasParent=!!A,this}validate(A,s){return!this.conditionFunc||this.conditionFunc(A,s)}getTier(){return this.score>=100?4:this.score>=75?3:this.score>=50?2:this.score>=25?1:0}};L(cf,"Achv");let BA=cf;const _f=class _f extends BA{constructor(A,s,R,n,I){super(A,s,"",n,I,(a,r)=>a.money>=this.moneyAmount),this.moneyAmount=R}};L(_f,"MoneyAchv");let uI=_f;const Pf=class Pf extends BA{constructor(A,s,R,n,I){super(A,s,"",n,I,(a,r)=>a.gameData.gameStats.ribbonsOwned>=this.ribbonAmount),this.ribbonAmount=R}};L(Pf,"RibbonAchv");let II=Pf;const Gf=class Gf extends BA{constructor(A,s,R,n,I){super(A,s,"",n,I,(a,r)=>(r[0]instanceof Rt?r[0].value:r[0])>=this.damageAmount),this.damageAmount=R}};L(Gf,"DamageAchv");let DI=Gf;const Hf=class Hf extends BA{constructor(A,s,R,n,I){super(A,s,"",n,I,(a,r)=>(r[0]instanceof Rt?r[0].value:r[0])>=this.healAmount),this.healAmount=R}};L(Hf,"HealAchv");let MI=Hf;const df=class df extends BA{constructor(A,s,R,n,I){super(A,s,"",n,I,(a,r)=>(r[0]instanceof Rt?r[0].value:r[0])>=this.level),this.level=R}};L(df,"LevelAchv");let tr=df;const ff=class ff extends BA{constructor(A,s,R,n,I,a){super(A,s,R,n,I,(r,S)=>a(S[0]))}};L(ff,"ModifierAchv");let fl=ff;const Bf=class Bf extends BA{constructor(A,s,R,n,I,a){super(A,s,R,n,I,(r,S)=>a(S[0],r))}};L(Bf,"ChallengeAchv");let pA=Bf;function s1(E){var R,n;const A=((n=(R=this==null?void 0:this.scene)==null?void 0:R.gameData)==null?void 0:n.gender)??vt.MALE,s=vt[A].toLowerCase();switch(E){case"10K_MONEY":return D.t("achv:MoneyAchv.description",{context:s,moneyAmount:lt._10K_MONEY.moneyAmount.toLocaleString("en-US")});case"100K_MONEY":return D.t("achv:MoneyAchv.description",{context:s,moneyAmount:lt._100K_MONEY.moneyAmount.toLocaleString("en-US")});case"1M_MONEY":return D.t("achv:MoneyAchv.description",{context:s,moneyAmount:lt._1M_MONEY.moneyAmount.toLocaleString("en-US")});case"10M_MONEY":return D.t("achv:MoneyAchv.description",{context:s,moneyAmount:lt._10M_MONEY.moneyAmount.toLocaleString("en-US")});case"250_DMG":return D.t("achv:DamageAchv.description",{context:s,damageAmount:lt._250_DMG.damageAmount.toLocaleString("en-US")});case"1000_DMG":return D.t("achv:DamageAchv.description",{context:s,damageAmount:lt._1000_DMG.damageAmount.toLocaleString("en-US")});case"2500_DMG":return D.t("achv:DamageAchv.description",{context:s,damageAmount:lt._2500_DMG.damageAmount.toLocaleString("en-US")});case"10000_DMG":return D.t("achv:DamageAchv.description",{context:s,damageAmount:lt._10000_DMG.damageAmount.toLocaleString("en-US")});case"250_HEAL":return D.t("achv:HealAchv.description",{context:s,healAmount:lt._250_HEAL.healAmount.toLocaleString("en-US"),HP:D.t(pa(g.HP))});case"1000_HEAL":return D.t("achv:HealAchv.description",{context:s,healAmount:lt._1000_HEAL.healAmount.toLocaleString("en-US"),HP:D.t(pa(g.HP))});case"2500_HEAL":return D.t("achv:HealAchv.description",{context:s,healAmount:lt._2500_HEAL.healAmount.toLocaleString("en-US"),HP:D.t(pa(g.HP))});case"10000_HEAL":return D.t("achv:HealAchv.description",{context:s,healAmount:lt._10000_HEAL.healAmount.toLocaleString("en-US"),HP:D.t(pa(g.HP))});case"LV_100":return D.t("achv:LevelAchv.description",{context:s,level:lt.LV_100.level});case"LV_250":return D.t("achv:LevelAchv.description",{context:s,level:lt.LV_250.level});case"LV_1000":return D.t("achv:LevelAchv.description",{context:s,level:lt.LV_1000.level});case"10_RIBBONS":return D.t("achv:RibbonAchv.description",{context:s,ribbonAmount:lt._10_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"25_RIBBONS":return D.t("achv:RibbonAchv.description",{context:s,ribbonAmount:lt._25_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"50_RIBBONS":return D.t("achv:RibbonAchv.description",{context:s,ribbonAmount:lt._50_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"75_RIBBONS":return D.t("achv:RibbonAchv.description",{context:s,ribbonAmount:lt._75_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"100_RIBBONS":return D.t("achv:RibbonAchv.description",{context:s,ribbonAmount:lt._100_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"TRANSFER_MAX_STAT_STAGE":return D.t("achv:TRANSFER_MAX_STAT_STAGE.description",{context:s});case"MAX_FRIENDSHIP":return D.t("achv:MAX_FRIENDSHIP.description",{context:s});case"MEGA_EVOLVE":return D.t("achv:MEGA_EVOLVE.description",{context:s});case"GIGANTAMAX":return D.t("achv:GIGANTAMAX.description",{context:s});case"TERASTALLIZE":return D.t("achv:TERASTALLIZE.description",{context:s});case"STELLAR_TERASTALLIZE":return D.t("achv:STELLAR_TERASTALLIZE.description",{context:s});case"SPLICE":return D.t("achv:SPLICE.description",{context:s});case"MINI_BLACK_HOLE":return D.t("achv:MINI_BLACK_HOLE.description",{context:s});case"CATCH_MYTHICAL":return D.t("achv:CATCH_MYTHICAL.description",{context:s});case"CATCH_SUB_LEGENDARY":return D.t("achv:CATCH_SUB_LEGENDARY.description",{context:s});case"CATCH_LEGENDARY":return D.t("achv:CATCH_LEGENDARY.description",{context:s});case"SEE_SHINY":return D.t("achv:SEE_SHINY.description",{context:s});case"SHINY_PARTY":return D.t("achv:SHINY_PARTY.description",{context:s});case"HATCH_MYTHICAL":return D.t("achv:HATCH_MYTHICAL.description",{context:s});case"HATCH_SUB_LEGENDARY":return D.t("achv:HATCH_SUB_LEGENDARY.description",{context:s});case"HATCH_LEGENDARY":return D.t("achv:HATCH_LEGENDARY.description",{context:s});case"HATCH_SHINY":return D.t("achv:HATCH_SHINY.description",{context:s});case"HIDDEN_ABILITY":return D.t("achv:HIDDEN_ABILITY.description",{context:s});case"PERFECT_IVS":return D.t("achv:PERFECT_IVS.description",{context:s});case"CLASSIC_VICTORY":return D.t("achv:CLASSIC_VICTORY.description",{context:s});case"UNEVOLVED_CLASSIC_VICTORY":return D.t("achv:UNEVOLVED_CLASSIC_VICTORY.description",{context:s});case"MONO_GEN_ONE":return D.t("achv:MONO_GEN_ONE.description",{context:s});case"MONO_GEN_TWO":return D.t("achv:MONO_GEN_TWO.description",{context:s});case"MONO_GEN_THREE":return D.t("achv:MONO_GEN_THREE.description",{context:s});case"MONO_GEN_FOUR":return D.t("achv:MONO_GEN_FOUR.description",{context:s});case"MONO_GEN_FIVE":return D.t("achv:MONO_GEN_FIVE.description",{context:s});case"MONO_GEN_SIX":return D.t("achv:MONO_GEN_SIX.description",{context:s});case"MONO_GEN_SEVEN":return D.t("achv:MONO_GEN_SEVEN.description",{context:s});case"MONO_GEN_EIGHT":return D.t("achv:MONO_GEN_EIGHT.description",{context:s});case"MONO_GEN_NINE":return D.t("achv:MONO_GEN_NINE.description",{context:s});case"MONO_NORMAL":case"MONO_FIGHTING":case"MONO_FLYING":case"MONO_POISON":case"MONO_GROUND":case"MONO_ROCK":case"MONO_BUG":case"MONO_GHOST":case"MONO_STEEL":case"MONO_FIRE":case"MONO_WATER":case"MONO_GRASS":case"MONO_ELECTRIC":case"MONO_PSYCHIC":case"MONO_ICE":case"MONO_DRAGON":case"MONO_DARK":case"MONO_FAIRY":return D.t("achv:MonoType.description",{context:s,type:D.t(`pokemonInfo:Type.${E.slice(5)}`)});case"FRESH_START":return D.t("achv:FRESH_START.description",{context:s});case"INVERSE_BATTLE":return D.t("achv:INVERSE_BATTLE.description",{context:s});case"BREEDERS_IN_SPACE":return D.t("achv:BREEDERS_IN_SPACE.description",{context:s});default:return""}}L(s1,"getAchievementDescription");const lt={_10K_MONEY:new uI("10K_MONEY","",1e4,"nugget",10),_100K_MONEY:new uI("100K_MONEY","",1e5,"big_nugget",25).setSecret(!0),_1M_MONEY:new uI("1M_MONEY","",1e6,"relic_gold",50).setSecret(!0),_10M_MONEY:new uI("10M_MONEY","",1e7,"coin_case",100).setSecret(!0),_250_DMG:new DI("250_DMG","",250,"lucky_punch",10),_1000_DMG:new DI("1000_DMG","",1e3,"lucky_punch_great",25).setSecret(!0),_2500_DMG:new DI("2500_DMG","",2500,"lucky_punch_ultra",50).setSecret(!0),_10000_DMG:new DI("10000_DMG","",1e4,"lucky_punch_master",100).setSecret(!0),_250_HEAL:new MI("250_HEAL","",250,"potion",10),_1000_HEAL:new MI("1000_HEAL","",1e3,"super_potion",25).setSecret(!0),_2500_HEAL:new MI("2500_HEAL","",2500,"hyper_potion",50).setSecret(!0),_10000_HEAL:new MI("10000_HEAL","",1e4,"max_potion",100).setSecret(!0),LV_100:new tr("LV_100","",100,"rare_candy",25).setSecret(),LV_250:new tr("LV_250","",250,"rarer_candy",50).setSecret(!0),LV_1000:new tr("LV_1000","",1e3,"candy_jar",100).setSecret(!0),_10_RIBBONS:new II("10_RIBBONS","",10,"bronze_ribbon",10),_25_RIBBONS:new II("25_RIBBONS","",25,"great_ribbon",25).setSecret(!0),_50_RIBBONS:new II("50_RIBBONS","",50,"ultra_ribbon",50).setSecret(!0),_75_RIBBONS:new II("75_RIBBONS","",75,"rogue_ribbon",75).setSecret(!0),_100_RIBBONS:new II("100_RIBBONS","",100,"master_ribbon",100).setSecret(!0),TRANSFER_MAX_STAT_STAGE:new BA("TRANSFER_MAX_STAT_STAGE","","TRANSFER_MAX_STAT_STAGE.description","baton",20),MAX_FRIENDSHIP:new BA("MAX_FRIENDSHIP","","MAX_FRIENDSHIP.description","soothe_bell",25),MEGA_EVOLVE:new BA("MEGA_EVOLVE","","MEGA_EVOLVE.description","mega_bracelet",50),GIGANTAMAX:new BA("GIGANTAMAX","","GIGANTAMAX.description","dynamax_band",50),TERASTALLIZE:new BA("TERASTALLIZE","","TERASTALLIZE.description","tera_orb",25),STELLAR_TERASTALLIZE:new BA("STELLAR_TERASTALLIZE","","STELLAR_TERASTALLIZE.description","stellar_tera_shard",25).setSecret(!0),SPLICE:new BA("SPLICE","","SPLICE.description","dna_splicers",10),MINI_BLACK_HOLE:new fl("MINI_BLACK_HOLE","","MINI_BLACK_HOLE.description","mini_black_hole",25,E=>E instanceof Ca).setSecret(),CATCH_MYTHICAL:new BA("CATCH_MYTHICAL","","CATCH_MYTHICAL.description","strange_ball",50).setSecret(),CATCH_SUB_LEGENDARY:new BA("CATCH_SUB_LEGENDARY","","CATCH_SUB_LEGENDARY.description","rb",75).setSecret(),CATCH_LEGENDARY:new BA("CATCH_LEGENDARY","","CATCH_LEGENDARY.description","mb",100).setSecret(),SEE_SHINY:new BA("SEE_SHINY","","SEE_SHINY.description","pb_gold",75),SHINY_PARTY:new BA("SHINY_PARTY","","SHINY_PARTY.description","shiny_charm",100).setSecret(!0),HATCH_MYTHICAL:new BA("HATCH_MYTHICAL","","HATCH_MYTHICAL.description","mystery_egg",75).setSecret(),HATCH_SUB_LEGENDARY:new BA("HATCH_SUB_LEGENDARY","","HATCH_SUB_LEGENDARY.description","oval_stone",100).setSecret(),HATCH_LEGENDARY:new BA("HATCH_LEGENDARY","","HATCH_LEGENDARY.description","lucky_egg",125).setSecret(),HATCH_SHINY:new BA("HATCH_SHINY","","HATCH_SHINY.description","golden_egg",100).setSecret(),HIDDEN_ABILITY:new BA("HIDDEN_ABILITY","","HIDDEN_ABILITY.description","ability_charm",75),PERFECT_IVS:new BA("PERFECT_IVS","","PERFECT_IVS.description","blunder_policy",100),CLASSIC_VICTORY:new BA("CLASSIC_VICTORY","","CLASSIC_VICTORY.description","relic_crown",150,E=>E.gameData.gameStats.sessionsWon===0),UNEVOLVED_CLASSIC_VICTORY:new BA("UNEVOLVED_CLASSIC_VICTORY","","UNEVOLVED_CLASSIC_VICTORY.description","eviolite",175,E=>E.getPlayerParty().some(A=>A.getSpeciesForm(!0).speciesId in kt)),MONO_GEN_ONE_VICTORY:new pA("MONO_GEN_ONE","","MONO_GEN_ONE.description","ribbon_gen1",100,(E,A)=>E instanceof xR&&E.value===1&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GEN_TWO_VICTORY:new pA("MONO_GEN_TWO","","MONO_GEN_TWO.description","ribbon_gen2",100,(E,A)=>E instanceof xR&&E.value===2&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GEN_THREE_VICTORY:new pA("MONO_GEN_THREE","","MONO_GEN_THREE.description","ribbon_gen3",100,(E,A)=>E instanceof xR&&E.value===3&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GEN_FOUR_VICTORY:new pA("MONO_GEN_FOUR","","MONO_GEN_FOUR.description","ribbon_gen4",100,(E,A)=>E instanceof xR&&E.value===4&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GEN_FIVE_VICTORY:new pA("MONO_GEN_FIVE","","MONO_GEN_FIVE.description","ribbon_gen5",100,(E,A)=>E instanceof xR&&E.value===5&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GEN_SIX_VICTORY:new pA("MONO_GEN_SIX","","MONO_GEN_SIX.description","ribbon_gen6",100,(E,A)=>E instanceof xR&&E.value===6&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GEN_SEVEN_VICTORY:new pA("MONO_GEN_SEVEN","","MONO_GEN_SEVEN.description","ribbon_gen7",100,(E,A)=>E instanceof xR&&E.value===7&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GEN_EIGHT_VICTORY:new pA("MONO_GEN_EIGHT","","MONO_GEN_EIGHT.description","ribbon_gen8",100,(E,A)=>E instanceof xR&&E.value===8&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GEN_NINE_VICTORY:new pA("MONO_GEN_NINE","","MONO_GEN_NINE.description","ribbon_gen9",100,(E,A)=>E instanceof xR&&E.value===9&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_NORMAL:new pA("MONO_NORMAL","","MONO_NORMAL.description","silk_scarf",100,(E,A)=>E instanceof fE&&E.value===1&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_FIGHTING:new pA("MONO_FIGHTING","","MONO_FIGHTING.description","black_belt",100,(E,A)=>E instanceof fE&&E.value===2&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_FLYING:new pA("MONO_FLYING","","MONO_FLYING.description","sharp_beak",100,(E,A)=>E instanceof fE&&E.value===3&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_POISON:new pA("MONO_POISON","","MONO_POISON.description","poison_barb",100,(E,A)=>E instanceof fE&&E.value===4&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GROUND:new pA("MONO_GROUND","","MONO_GROUND.description","soft_sand",100,(E,A)=>E instanceof fE&&E.value===5&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_ROCK:new pA("MONO_ROCK","","MONO_ROCK.description","hard_stone",100,(E,A)=>E instanceof fE&&E.value===6&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_BUG:new pA("MONO_BUG","","MONO_BUG.description","silver_powder",100,(E,A)=>E instanceof fE&&E.value===7&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GHOST:new pA("MONO_GHOST","","MONO_GHOST.description","spell_tag",100,(E,A)=>E instanceof fE&&E.value===8&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_STEEL:new pA("MONO_STEEL","","MONO_STEEL.description","metal_coat",100,(E,A)=>E instanceof fE&&E.value===9&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_FIRE:new pA("MONO_FIRE","","MONO_FIRE.description","charcoal",100,(E,A)=>E instanceof fE&&E.value===10&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_WATER:new pA("MONO_WATER","","MONO_WATER.description","mystic_water",100,(E,A)=>E instanceof fE&&E.value===11&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_GRASS:new pA("MONO_GRASS","","MONO_GRASS.description","miracle_seed",100,(E,A)=>E instanceof fE&&E.value===12&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_ELECTRIC:new pA("MONO_ELECTRIC","","MONO_ELECTRIC.description","magnet",100,(E,A)=>E instanceof fE&&E.value===13&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_PSYCHIC:new pA("MONO_PSYCHIC","","MONO_PSYCHIC.description","twisted_spoon",100,(E,A)=>E instanceof fE&&E.value===14&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_ICE:new pA("MONO_ICE","","MONO_ICE.description","never_melt_ice",100,(E,A)=>E instanceof fE&&E.value===15&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_DRAGON:new pA("MONO_DRAGON","","MONO_DRAGON.description","dragon_fang",100,(E,A)=>E instanceof fE&&E.value===16&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_DARK:new pA("MONO_DARK","","MONO_DARK.description","black_glasses",100,(E,A)=>E instanceof fE&&E.value===17&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),MONO_FAIRY:new pA("MONO_FAIRY","","MONO_FAIRY.description","fairy_feather",100,(E,A)=>E instanceof fE&&E.value===18&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),FRESH_START:new pA("FRESH_START","","FRESH_START.description","reviver_seed",100,(E,A)=>E instanceof jT&&E.value>0&&!A.gameMode.challenges.some(s=>s.id===yt.INVERSE_BATTLE&&s.value>0)),INVERSE_BATTLE:new pA("INVERSE_BATTLE","","INVERSE_BATTLE.description","inverse",100,E=>E instanceof eS&&E.value>0),BREEDERS_IN_SPACE:new BA("BREEDERS_IN_SPACE","","BREEDERS_IN_SPACE.description","moon_stone",50).setSecret()};function B7(){const E=Object.keys(lt);E.forEach((A,s)=>{lt[A].id=A,lt[A].hasParent&&(lt[A].parentId=E[s-1])})}L(B7,"initAchievements");var U=(E=>(E[E.UNKNOWN=0]="UNKNOWN",E[E.ACE_TRAINER=1]="ACE_TRAINER",E[E.ARTIST=2]="ARTIST",E[E.BACKERS=3]="BACKERS",E[E.BACKPACKER=4]="BACKPACKER",E[E.BAKER=5]="BAKER",E[E.BEAUTY=6]="BEAUTY",E[E.BIKER=7]="BIKER",E[E.BLACK_BELT=8]="BLACK_BELT",E[E.BREEDER=9]="BREEDER",E[E.CLERK=10]="CLERK",E[E.CYCLIST=11]="CYCLIST",E[E.DANCER=12]="DANCER",E[E.DEPOT_AGENT=13]="DEPOT_AGENT",E[E.DOCTOR=14]="DOCTOR",E[E.FIREBREATHER=15]="FIREBREATHER",E[E.FISHERMAN=16]="FISHERMAN",E[E.GUITARIST=17]="GUITARIST",E[E.HARLEQUIN=18]="HARLEQUIN",E[E.HIKER=19]="HIKER",E[E.HOOLIGANS=20]="HOOLIGANS",E[E.HOOPSTER=21]="HOOPSTER",E[E.INFIELDER=22]="INFIELDER",E[E.JANITOR=23]="JANITOR",E[E.LINEBACKER=24]="LINEBACKER",E[E.MAID=25]="MAID",E[E.MUSICIAN=26]="MUSICIAN",E[E.HEX_MANIAC=27]="HEX_MANIAC",E[E.NURSERY_AIDE=28]="NURSERY_AIDE",E[E.OFFICER=29]="OFFICER",E[E.PARASOL_LADY=30]="PARASOL_LADY",E[E.PILOT=31]="PILOT",E[E.POKEFAN=32]="POKEFAN",E[E.PRESCHOOLER=33]="PRESCHOOLER",E[E.PSYCHIC=34]="PSYCHIC",E[E.RANGER=35]="RANGER",E[E.RICH=36]="RICH",E[E.RICH_KID=37]="RICH_KID",E[E.ROUGHNECK=38]="ROUGHNECK",E[E.SAILOR=39]="SAILOR",E[E.SCIENTIST=40]="SCIENTIST",E[E.SMASHER=41]="SMASHER",E[E.SNOW_WORKER=42]="SNOW_WORKER",E[E.STRIKER=43]="STRIKER",E[E.SCHOOL_KID=44]="SCHOOL_KID",E[E.SWIMMER=45]="SWIMMER",E[E.TWINS=46]="TWINS",E[E.VETERAN=47]="VETERAN",E[E.WAITER=48]="WAITER",E[E.WORKER=49]="WORKER",E[E.YOUNGSTER=50]="YOUNGSTER",E[E.ROCKET_GRUNT=51]="ROCKET_GRUNT",E[E.ARCHER=52]="ARCHER",E[E.ARIANA=53]="ARIANA",E[E.PROTON=54]="PROTON",E[E.PETREL=55]="PETREL",E[E.MAGMA_GRUNT=56]="MAGMA_GRUNT",E[E.TABITHA=57]="TABITHA",E[E.COURTNEY=58]="COURTNEY",E[E.AQUA_GRUNT=59]="AQUA_GRUNT",E[E.MATT=60]="MATT",E[E.SHELLY=61]="SHELLY",E[E.GALACTIC_GRUNT=62]="GALACTIC_GRUNT",E[E.JUPITER=63]="JUPITER",E[E.MARS=64]="MARS",E[E.SATURN=65]="SATURN",E[E.PLASMA_GRUNT=66]="PLASMA_GRUNT",E[E.ZINZOLIN=67]="ZINZOLIN",E[E.ROOD=68]="ROOD",E[E.FLARE_GRUNT=69]="FLARE_GRUNT",E[E.BRYONY=70]="BRYONY",E[E.XEROSIC=71]="XEROSIC",E[E.AETHER_GRUNT=72]="AETHER_GRUNT",E[E.FABA=73]="FABA",E[E.SKULL_GRUNT=74]="SKULL_GRUNT",E[E.PLUMERIA=75]="PLUMERIA",E[E.MACRO_GRUNT=76]="MACRO_GRUNT",E[E.OLEANA=77]="OLEANA",E[E.STAR_GRUNT=78]="STAR_GRUNT",E[E.GIACOMO=79]="GIACOMO",E[E.MELA=80]="MELA",E[E.ATTICUS=81]="ATTICUS",E[E.ORTEGA=82]="ORTEGA",E[E.ERI=83]="ERI",E[E.ROCKET_BOSS_GIOVANNI_1=84]="ROCKET_BOSS_GIOVANNI_1",E[E.ROCKET_BOSS_GIOVANNI_2=85]="ROCKET_BOSS_GIOVANNI_2",E[E.MAXIE=86]="MAXIE",E[E.MAXIE_2=87]="MAXIE_2",E[E.ARCHIE=88]="ARCHIE",E[E.ARCHIE_2=89]="ARCHIE_2",E[E.CYRUS=90]="CYRUS",E[E.CYRUS_2=91]="CYRUS_2",E[E.GHETSIS=92]="GHETSIS",E[E.GHETSIS_2=93]="GHETSIS_2",E[E.LYSANDRE=94]="LYSANDRE",E[E.LYSANDRE_2=95]="LYSANDRE_2",E[E.LUSAMINE=96]="LUSAMINE",E[E.LUSAMINE_2=97]="LUSAMINE_2",E[E.GUZMA=98]="GUZMA",E[E.GUZMA_2=99]="GUZMA_2",E[E.ROSE=100]="ROSE",E[E.ROSE_2=101]="ROSE_2",E[E.PENNY=102]="PENNY",E[E.PENNY_2=103]="PENNY_2",E[E.BUCK=104]="BUCK",E[E.CHERYL=105]="CHERYL",E[E.MARLEY=106]="MARLEY",E[E.MIRA=107]="MIRA",E[E.RILEY=108]="RILEY",E[E.VICTOR=109]="VICTOR",E[E.VICTORIA=110]="VICTORIA",E[E.VIVI=111]="VIVI",E[E.VICKY=112]="VICKY",E[E.VITO=113]="VITO",E[E.BUG_TYPE_SUPERFAN=114]="BUG_TYPE_SUPERFAN",E[E.EXPERT_POKEMON_BREEDER=115]="EXPERT_POKEMON_BREEDER",E[E.FUTURE_SELF_M=116]="FUTURE_SELF_M",E[E.FUTURE_SELF_F=117]="FUTURE_SELF_F",E[E.BROCK=200]="BROCK",E[E.MISTY=201]="MISTY",E[E.LT_SURGE=202]="LT_SURGE",E[E.ERIKA=203]="ERIKA",E[E.JANINE=204]="JANINE",E[E.SABRINA=205]="SABRINA",E[E.BLAINE=206]="BLAINE",E[E.GIOVANNI=207]="GIOVANNI",E[E.FALKNER=208]="FALKNER",E[E.BUGSY=209]="BUGSY",E[E.WHITNEY=210]="WHITNEY",E[E.MORTY=211]="MORTY",E[E.CHUCK=212]="CHUCK",E[E.JASMINE=213]="JASMINE",E[E.PRYCE=214]="PRYCE",E[E.CLAIR=215]="CLAIR",E[E.ROXANNE=216]="ROXANNE",E[E.BRAWLY=217]="BRAWLY",E[E.WATTSON=218]="WATTSON",E[E.FLANNERY=219]="FLANNERY",E[E.NORMAN=220]="NORMAN",E[E.WINONA=221]="WINONA",E[E.TATE=222]="TATE",E[E.LIZA=223]="LIZA",E[E.JUAN=224]="JUAN",E[E.ROARK=225]="ROARK",E[E.GARDENIA=226]="GARDENIA",E[E.MAYLENE=227]="MAYLENE",E[E.CRASHER_WAKE=228]="CRASHER_WAKE",E[E.FANTINA=229]="FANTINA",E[E.BYRON=230]="BYRON",E[E.CANDICE=231]="CANDICE",E[E.VOLKNER=232]="VOLKNER",E[E.CILAN=233]="CILAN",E[E.CHILI=234]="CHILI",E[E.CRESS=235]="CRESS",E[E.CHEREN=236]="CHEREN",E[E.LENORA=237]="LENORA",E[E.ROXIE=238]="ROXIE",E[E.BURGH=239]="BURGH",E[E.ELESA=240]="ELESA",E[E.CLAY=241]="CLAY",E[E.SKYLA=242]="SKYLA",E[E.BRYCEN=243]="BRYCEN",E[E.DRAYDEN=244]="DRAYDEN",E[E.MARLON=245]="MARLON",E[E.VIOLA=246]="VIOLA",E[E.GRANT=247]="GRANT",E[E.KORRINA=248]="KORRINA",E[E.RAMOS=249]="RAMOS",E[E.CLEMONT=250]="CLEMONT",E[E.VALERIE=251]="VALERIE",E[E.OLYMPIA=252]="OLYMPIA",E[E.WULFRIC=253]="WULFRIC",E[E.MILO=254]="MILO",E[E.NESSA=255]="NESSA",E[E.KABU=256]="KABU",E[E.BEA=257]="BEA",E[E.ALLISTER=258]="ALLISTER",E[E.OPAL=259]="OPAL",E[E.BEDE=260]="BEDE",E[E.GORDIE=261]="GORDIE",E[E.MELONY=262]="MELONY",E[E.PIERS=263]="PIERS",E[E.MARNIE=264]="MARNIE",E[E.RAIHAN=265]="RAIHAN",E[E.KATY=266]="KATY",E[E.BRASSIUS=267]="BRASSIUS",E[E.IONO=268]="IONO",E[E.KOFU=269]="KOFU",E[E.LARRY=270]="LARRY",E[E.RYME=271]="RYME",E[E.TULIP=272]="TULIP",E[E.GRUSHA=273]="GRUSHA",E[E.LORELEI=300]="LORELEI",E[E.BRUNO=301]="BRUNO",E[E.AGATHA=302]="AGATHA",E[E.LANCE=303]="LANCE",E[E.WILL=304]="WILL",E[E.KOGA=305]="KOGA",E[E.KAREN=306]="KAREN",E[E.SIDNEY=307]="SIDNEY",E[E.PHOEBE=308]="PHOEBE",E[E.GLACIA=309]="GLACIA",E[E.DRAKE=310]="DRAKE",E[E.AARON=311]="AARON",E[E.BERTHA=312]="BERTHA",E[E.FLINT=313]="FLINT",E[E.LUCIAN=314]="LUCIAN",E[E.SHAUNTAL=315]="SHAUNTAL",E[E.MARSHAL=316]="MARSHAL",E[E.GRIMSLEY=317]="GRIMSLEY",E[E.CAITLIN=318]="CAITLIN",E[E.MALVA=319]="MALVA",E[E.SIEBOLD=320]="SIEBOLD",E[E.WIKSTROM=321]="WIKSTROM",E[E.DRASNA=322]="DRASNA",E[E.HALA=323]="HALA",E[E.MOLAYNE=324]="MOLAYNE",E[E.OLIVIA=325]="OLIVIA",E[E.ACEROLA=326]="ACEROLA",E[E.KAHILI=327]="KAHILI",E[E.MARNIE_ELITE=328]="MARNIE_ELITE",E[E.NESSA_ELITE=329]="NESSA_ELITE",E[E.BEA_ELITE=330]="BEA_ELITE",E[E.ALLISTER_ELITE=331]="ALLISTER_ELITE",E[E.RAIHAN_ELITE=332]="RAIHAN_ELITE",E[E.RIKA=333]="RIKA",E[E.POPPY=334]="POPPY",E[E.LARRY_ELITE=335]="LARRY_ELITE",E[E.HASSEL=336]="HASSEL",E[E.CRISPIN=337]="CRISPIN",E[E.AMARYS=338]="AMARYS",E[E.LACEY=339]="LACEY",E[E.DRAYTON=340]="DRAYTON",E[E.BLUE=350]="BLUE",E[E.RED=351]="RED",E[E.LANCE_CHAMPION=352]="LANCE_CHAMPION",E[E.STEVEN=353]="STEVEN",E[E.WALLACE=354]="WALLACE",E[E.CYNTHIA=355]="CYNTHIA",E[E.ALDER=356]="ALDER",E[E.IRIS=357]="IRIS",E[E.DIANTHA=358]="DIANTHA",E[E.HAU=359]="HAU",E[E.LEON=360]="LEON",E[E.GEETA=361]="GEETA",E[E.NEMONA=362]="NEMONA",E[E.KIERAN=363]="KIERAN",E[E.RIVAL=375]="RIVAL",E[E.RIVAL_2=376]="RIVAL_2",E[E.RIVAL_3=377]="RIVAL_3",E[E.RIVAL_4=378]="RIVAL_4",E[E.RIVAL_5=379]="RIVAL_5",E[E.RIVAL_6=380]="RIVAL_6",E))(U||{}),aE=(E=>(E[E.REGULAR=0]="REGULAR",E[E.PLUS=1]="PLUS",E[E.PREMIUM=2]="PREMIUM",E[E.GOLDEN=3]="GOLDEN",E))(aE||{});const gf=class gf{constructor(A,s,R){this.description=s,this.voucherType=A,this.conditionFunc=R}validate(A,s){return!this.conditionFunc||this.conditionFunc(A,s)}getName(A){return Bl(this.voucherType)}getIconImage(){return gn(this.voucherType)}getTier(){switch(this.voucherType){case 0:return DL.COMMON;case 1:return DL.GREAT;case 2:return DL.ULTRA;case 3:return DL.ROGUE}}};L(gf,"Voucher");let dT=gf;function Bl(E){switch(E){case 0:return D.t("voucher:eggVoucher");case 1:return D.t("voucher:eggVoucherPlus");case 2:return D.t("voucher:eggVoucherPremium");case 3:return D.t("voucher:eggVoucherGold")}}L(Bl,"getVoucherTypeName");function gn(E){switch(E){case 0:return"coupon";case 1:return"pair_of_tickets";case 2:return"mystic_ticket";case 3:return"golden_mystic_ticket"}}L(gn,"getVoucherTypeIcon");const Ms={};function g7(){for(const s of[lt.CLASSIC_VICTORY]){const R=s.score>=150?3:s.score>=100?2:s.score>=75?1:0;Ms[s.id]=new dT(R,s1(s.localizationKey))}const E=Object.keys(ZA).filter(s=>ZA[s].isBoss&&ZA[s].getDerivedType()!==U.RIVAL&&ZA[s].hasVoucher);for(const s of E){const R=ZA[s].moneyMultiplier<10?1:2,n=U[s],I=ZA[s].name,a=ZA[s],r=a.title?` (${a.title})`:"";Ms[n]=new dT(R,`${D.t("voucher:defeatTrainer",{trainerName:I})} ${r}`)}const A=Object.keys(Ms);for(const s of A)Ms[s].id=s}L(g7,"initVouchers");var PE=(E=>(E[E.PLAYER=0]="PLAYER",E[E.WILD=1]="WILD",E[E.TRAINER=2]="TRAINER",E[E.ENEMY_BUFF=3]="ENEMY_BUFF",E[E.DAILY_STARTER=4]="DAILY_STARTER",E))(PE||{});const Kf=class Kf{constructor(A,s,R,n,I){this.localeKey=A,this.iconImage=s,this.group=n,this.soundName=I??"se/restore",this.newModifierFunc=R}get name(){return D.t(`${this.localeKey}.name`)}getDescription(A){return D.t(`${this.localeKey}.description`)}setTier(A){this.tier=A}getOrInferTier(A=0){if(this.tier)return this.tier;if(!this.id)return null;let s;switch(A){case 0:s=[A,2,1];break;case 1:s=[A,0,2];break;case 2:s=[A,0,1];break;default:s=[A];break}for(const R of s){const n=mT(R);for(const I of uE(v))if(n.hasOwnProperty(I)&&n[I].find(a=>a.modifierType.id===this.id))return this.tier=I}return null}withIdFromFunc(A){return this.id=Object.keys($).find(s=>$[s]===A),this}withTierFromPool(A=0,s,R=0){let n;for(const I of Object.values(mT(A)))for(const a of I)if(this.id===a.modifierType.id){let r;if(a.weight instanceof Function?r=s?a.weight(s,R):0:r=a.weight,r>0)return this.tier=a.modifierType.tier,this;Ve(n)&&(n=a.modifierType.tier)}return n&&(this.tier=n),this}newModifier(...A){return this.newModifierFunc&&this.newModifierFunc(this,A)}};L(Kf,"ModifierType");let RA=Kf;const mf=class mf extends RA{constructor(A){super(null,null,null),this.genTypeFunc=A}generateType(A,s){const R=this.genTypeFunc(A,s);return R&&(R.id=this.id,R.setTier(this.tier)),R}};L(mf,"ModifierTypeGenerator");let cE=mf;const Ff=class Ff extends RA{constructor(A,s,R){super("",A,(n,I)=>new rD(this,s,R),"pb","se/pb_bounce_1"),this.pokeballType=s,this.count=R}get name(){return D.t("modifierType:ModifierType.AddPokeballModifierType.name",{modifierCount:this.count,pokeballName:Gl(this.pokeballType)})}getDescription(A){return D.t("modifierType:ModifierType.AddPokeballModifierType.description",{modifierCount:this.count,pokeballName:Gl(this.pokeballType),catchRate:Hl(this.pokeballType)>-1?`${Hl(this.pokeballType)}x`:"100%",pokeballAmount:`${A.pokeballCounts[this.pokeballType]}`})}};L(Ff,"AddPokeballModifierType");let aI=Ff;const pf=class pf extends RA{constructor(A,s){super("",gn(A),(R,n)=>new LD(this,A,s),"voucher"),this.count=s,this.voucherType=A}get name(){return D.t("modifierType:ModifierType.AddVoucherModifierType.name",{modifierCount:this.count,voucherTypeName:Bl(this.voucherType)})}getDescription(A){return D.t("modifierType:ModifierType.AddVoucherModifierType.description",{modifierCount:this.count,voucherTypeName:Bl(this.voucherType)})}};L(pf,"AddVoucherModifierType");let GL=pf;const Wf=class Wf extends RA{constructor(A,s,R,n,I,a){super(A,s,R,I,a),this.selectFilter=n}};L(Wf,"PokemonModifierType");let LR=Wf;const Yf=class Yf extends LR{constructor(A,s,R,n,I){super(A,s,R,a=>{const r=this.newModifier(a),S=a.scene.findModifier(l=>l instanceof Ht&&l.pokemonId===a.id&&l.matchType(r)),o=r.getMaxStackCount(a.scene);return o?S&&S.stackCount===o?D.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.tooMany",{pokemonName:ee(a)}):null:D.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.inoperable",{pokemonName:ee(a)})},n,I)}newModifier(...A){return super.newModifier(...A)}};L(Yf,"PokemonHeldItemModifierType");let DA=Yf;const yf=class yf extends LR{constructor(A,s,R,n,I=!1,a,r,S){super(A,s,a||((o,l)=>new tI(this,l[0].id,this.restorePoints,this.restorePercent,this.healStatus,!1)),r||(o=>!o.hp||o.isFullHp()&&(!this.healStatus||!o.status&&!o.getTag(Y.CONFUSED))?vE.NoEffectMessage:null),S||"potion"),this.restorePoints=R,this.restorePercent=n,this.healStatus=I}getDescription(A){return this.restorePoints?D.t("modifierType:ModifierType.PokemonHpRestoreModifierType.description",{restorePoints:this.restorePoints,restorePercent:this.restorePercent}):this.healStatus?D.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fullyWithStatus"):D.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fully")}};L(yf,"PokemonHpRestoreModifierType");let ci=yf;const wf=class wf extends ci{constructor(A,s,R){super(A,s,0,R,!1,(n,I)=>new tI(this,I[0].id,0,this.restorePercent,!1,!0),n=>n.isFainted()?null:vE.NoEffectMessage,"revive"),this.selectFilter=n=>n.hp?vE.NoEffectMessage:null}getDescription(A){return D.t("modifierType:ModifierType.PokemonReviveModifierType.description",{restorePercent:this.restorePercent})}};L(wf,"PokemonReviveModifierType");let gl=wf;const vf=class vf extends LR{constructor(A,s){super(A,s,(R,n)=>new TD(this,n[0].id),R=>!R.hp||!R.status&&!R.getTag(Y.CONFUSED)?vE.NoEffectMessage:null)}getDescription(A){return D.t("modifierType:ModifierType.PokemonStatusHealModifierType.description")}};L(vf,"PokemonStatusHealModifierType");let Nc=vf;const Vf=class Vf extends LR{constructor(A,s,R,n,I,a){super(A,s,R,n,a),this.moveSelectFilter=I}};L(Vf,"PokemonMoveModifierType");let ur=Vf;const xf=class xf extends ur{constructor(A,s,R){super(A,s,(n,I)=>new SD(this,I[0].id,I[1],this.restorePoints),n=>null,n=>n.ppUsed?null:vE.NoEffectMessage,"ether"),this.restorePoints=R}getDescription(A){return this.restorePoints>-1?D.t("modifierType:ModifierType.PokemonPpRestoreModifierType.description",{restorePoints:this.restorePoints}):D.t("modifierType:ModifierType.PokemonPpRestoreModifierType.extra.fully")}};L(xf,"PokemonPpRestoreModifierType");let fT=xf;const bf=class bf extends LR{constructor(A,s,R){super(A,s,(n,I)=>new oD(this,I[0].id,this.restorePoints),n=>n.getMoveset().filter(I=>I==null?void 0:I.ppUsed).length?null:vE.NoEffectMessage,"elixir"),this.restorePoints=R}getDescription(A){return this.restorePoints>-1?D.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.description",{restorePoints:this.restorePoints}):D.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.extra.fully")}};L(bf,"PokemonAllMovePpRestoreModifierType");let Kl=bf;const kf=class kf extends ur{constructor(A,s,R){super(A,s,(n,I)=>new lD(this,I[0].id,I[1],this.upPoints),n=>null,n=>n.getMove().pp<5||n.ppUp>=3||n.maxPpOverride?vE.NoEffectMessage:null,"ppUp"),this.upPoints=R}getDescription(A){return D.t("modifierType:ModifierType.PokemonPpUpModifierType.description",{upPoints:this.upPoints})}};L(kf,"PokemonPpUpModifierType");let BT=kf;const Zf=class Zf extends LR{constructor(A){var s;super("",`mint_${((s=IO(g).find(R=>fo(A,g[R])>1))==null?void 0:s.toLowerCase())||"neutral"}`,(R,n)=>new CD(this,n[0].id,this.nature),R=>R.getNature()===this.nature?vE.NoEffectMessage:null,"mint"),this.nature=A}get name(){return D.t("modifierType:ModifierType.PokemonNatureChangeModifierType.name",{natureName:xO(this.nature)})}getDescription(A){return D.t("modifierType:ModifierType.PokemonNatureChangeModifierType.description",{natureName:xO(this.nature,!0,!0,!0)})}};L(Zf,"PokemonNatureChangeModifierType");let ml=Zf;const Xf=class Xf extends LR{constructor(A,s,R){super(A,s,(n,I)=>new no(n,I[0].id,I[1]),n=>n.getLearnableLevelMoves().length?null:vE.NoEffectMessage,R)}};L(Xf,"RememberMoveModifierType");let Ar=Xf;const Qf=class Qf extends RA{constructor(A,s,R){super(A,s,(n,I)=>new Qr(this,R),"lure"),this.maxBattles=R}getDescription(A){return D.t("modifierType:ModifierType.DoubleBattleChanceBoosterModifierType.description",{battleCount:this.maxBattles})}};L(Qf,"DoubleBattleChanceBoosterModifierType");let HL=Qf;const Jf=class Jf extends RA{constructor(A){const s=kl.items[A];super("",s,(R,n)=>new Jr(this,this.stat,5)),this.stat=A,this.nameKey=s,this.quantityKey=A!==g.ACC?"percentage":"stage"}get name(){return D.t(`modifierType:TempStatStageBoosterItem.${this.nameKey}`)}getDescription(A){return D.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:D.t(_E(this.stat)),amount:D.t(`modifierType:ModifierType.TempStatStageBoosterModifierType.extra.${this.quantityKey}`)})}getPregenArgs(){return[this.stat]}};L(Jf,"TempStatStageBoosterModifierType");let Fl=Jf;const $f=class $f extends DA{constructor(A){super("",`${Dt[A].toLowerCase()}_berry`,(s,R)=>new lE(s,R[0].id,A),"berry"),this.berryType=A}get name(){return Qd(this.berryType)}getDescription(A){return oJ(this.berryType)}getPregenArgs(){return[this.berryType]}};L($f,"BerryModifierType");let gT=$f;var Tc=(E=>(E[E.SILK_SCARF=0]="SILK_SCARF",E[E.BLACK_BELT=1]="BLACK_BELT",E[E.SHARP_BEAK=2]="SHARP_BEAK",E[E.POISON_BARB=3]="POISON_BARB",E[E.SOFT_SAND=4]="SOFT_SAND",E[E.HARD_STONE=5]="HARD_STONE",E[E.SILVER_POWDER=6]="SILVER_POWDER",E[E.SPELL_TAG=7]="SPELL_TAG",E[E.METAL_COAT=8]="METAL_COAT",E[E.CHARCOAL=9]="CHARCOAL",E[E.MYSTIC_WATER=10]="MYSTIC_WATER",E[E.MIRACLE_SEED=11]="MIRACLE_SEED",E[E.MAGNET=12]="MAGNET",E[E.TWISTED_SPOON=13]="TWISTED_SPOON",E[E.NEVER_MELT_ICE=14]="NEVER_MELT_ICE",E[E.DRAGON_FANG=15]="DRAGON_FANG",E[E.BLACK_GLASSES=16]="BLACK_GLASSES",E[E.FAIRY_FEATHER=17]="FAIRY_FEATHER",E))(Tc||{});const zf=class zf extends DA{constructor(A,s){var R;super("",`${(R=Tc[A])==null?void 0:R.toLowerCase()}`,(n,I)=>new Sn(this,I[0].id,A,s)),this.moveType=A,this.boostPercent=s}get name(){var A;return D.t(`modifierType:AttackTypeBoosterItem.${(A=Tc[this.moveType])==null?void 0:A.toLowerCase()}`)}getDescription(A){return D.t("modifierType:ModifierType.AttackTypeBoosterModifierType.description",{moveType:D.t(`pokemonInfo:Type.${i[this.moveType]}`)})}getPregenArgs(){return[this.moveType]}};L(zf,"AttackTypeBoosterModifierType");let pl=zf;const qf=class qf extends DA{constructor(A){const s=Zl.items[A];super(`modifierType:SpeciesBoosterItem.${A}`,A.toLowerCase(),(R,n)=>new La(R,n[0].id,s.stats,s.multiplier,s.species)),this.key=A}getPregenArgs(){return[this.key]}};L(qf,"SpeciesStatBoosterModifierType");let Wl=qf;const jf=class jf extends LR{constructor(A,s){super(A,s,(R,n)=>new Oo(this,n[0].id),R=>null)}getDescription(A){let s=1;const R=A.modifiers.find(n=>n instanceof eI);return R&&(s+=R.stackCount),D.t("modifierType:ModifierType.PokemonLevelIncrementModifierType.description",{levels:s})}};L(jf,"PokemonLevelIncrementModifierType");let Sc=jf;const eB=class eB extends RA{constructor(A,s){super(A,s,(R,n)=>new Oo(this,-1))}getDescription(A){let s=1;const R=A.modifiers.find(n=>n instanceof eI);return R&&(s+=R.stackCount),D.t("modifierType:ModifierType.AllPokemonLevelIncrementModifierType.description",{levels:s})}};L(eB,"AllPokemonLevelIncrementModifierType");let oc=eB;const tB=class tB extends DA{constructor(A){const s=bl.items[A];super("",s,(R,n)=>new qS(this,n[0].id,this.stat)),this.stat=A,this.key=s}get name(){return D.t(`modifierType:BaseStatBoosterItem.${this.key}`)}getDescription(A){return D.t("modifierType:ModifierType.BaseStatBoosterModifierType.description",{stat:D.t(_E(this.stat))})}getPregenArgs(){return[this.stat]}};L(tB,"BaseStatBoosterModifierType");let Yl=tB;const AB=class AB extends DA{constructor(A){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_SHUCKLE_JUICE","berry_juice",(s,R)=>new eo(this,R[0].id,this.statModifier)),this.statModifier=A}getDescription(A){return D.t("modifierType:ModifierType.PokemonBaseStatTotalModifierType.description",{increaseDecrease:D.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.increase":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.decrease"),blessCurse:D.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.blessed":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.cursed"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier]}};L(AB,"PokemonBaseStatTotalModifierType");let yl=AB;const EB=class EB extends DA{constructor(A,s){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_OLD_GATEAU","old_gateau",(R,n)=>new to(this,n[0].id,this.statModifier,this.stats)),this.statModifier=A,this.stats=s}getDescription(A){return D.t("modifierType:ModifierType.PokemonBaseStatFlatModifierType.description",{stats:this.stats.map(s=>D.t(_E(s))).join("/"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier,this.stats]}};L(EB,"PokemonBaseStatFlatModifierType");let wl=EB;const sB=class sB extends RA{constructor(A,s,R,n){super(A,s,n||((I,a)=>new tI(this,-1,0,100,!1))),this.descriptionKey=R}getDescription(A){return D.t(`${this.descriptionKey||"modifierType:ModifierType.AllPokemonFullHpRestoreModifierType"}.description`)}};L(sB,"AllPokemonFullHpRestoreModifierType");let lc=sB;const RB=class RB extends lc{constructor(A,s){super(A,s,"modifierType:ModifierType.AllPokemonFullReviveModifierType",(R,n)=>new tI(this,-1,0,100,!1,!0))}};L(RB,"AllPokemonFullReviveModifierType");let Cc=RB;const OB=class OB extends RA{constructor(A,s,R,n){super(A,s,(I,a)=>new DD(this,R),"money","se/buy"),this.moneyMultiplier=R,this.moneyMultiplierDescriptorKey=n}getDescription(A){const s=new Rt(A.getWaveMoneyAmount(this.moneyMultiplier));A.applyModifiers(mR,!0,s);const R=Go(A.moneyFormat,s.value);return D.t("modifierType:ModifierType.MoneyRewardModifierType.description",{moneyMultiplier:D.t(this.moneyMultiplierDescriptorKey),moneyAmount:R})}};L(OB,"MoneyRewardModifierType");let dL=OB;const nB=class nB extends RA{constructor(A,s,R){super(A,s,()=>new EL(this,R)),this.boostPercent=R}getDescription(A){return D.t("modifierType:ModifierType.ExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};L(nB,"ExpBoosterModifierType");let fL=nB;const iB=class iB extends DA{constructor(A,s,R){super(A,s,(n,I)=>new ao(this,I[0].id,R)),this.boostPercent=R}getDescription(A){return D.t("modifierType:ModifierType.PokemonExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};L(iB,"PokemonExpBoosterModifierType");let vl=iB;const IB=class IB extends DA{constructor(A,s){super(A,s,(R,n)=>new No(this,n[0].id))}getDescription(A){return D.t("modifierType:ModifierType.PokemonFriendshipBoosterModifierType.description")}};L(IB,"PokemonFriendshipBoosterModifierType");let Uc=IB;const aB=class aB extends DA{constructor(A,s,R,n,I){super(A,s,(a,r)=>new So(this,r[0].id,R),n,I),this.amount=R}getDescription(A){return D.t("modifierType:ModifierType.PokemonMoveAccuracyBoosterModifierType.description",{accuracyAmount:this.amount})}};L(aB,"PokemonMoveAccuracyBoosterModifierType");let uc=aB;const rB=class rB extends DA{constructor(A,s){super(A,s,(R,n)=>new Jn(R,n[0].id))}getDescription(A){return D.t("modifierType:ModifierType.PokemonMultiHitModifierType.description")}};L(rB,"PokemonMultiHitModifierType");let Dc=rB;const LB=class LB extends LR{constructor(A){super("",`tm_${i[ye[A].type].toLowerCase()}`,(s,R)=>new UD(this,R[0].id),s=>s.compatibleTms.indexOf(A)===-1||s.getMoveset().filter(R=>(R==null?void 0:R.moveId)===A).length?vE.NoEffectMessage:null,"tm"),this.moveId=A}get name(){return D.t("modifierType:ModifierType.TmModifierType.name",{moveId:Ln(Object.keys(bI).indexOf(this.moveId.toString())+1,3),moveName:ye[this.moveId].name})}getDescription(A){return D.t(A.enableMoveInfo?"modifierType:ModifierType.TmModifierTypeWithInfo.description":"modifierType:ModifierType.TmModifierType.description",{moveName:ye[this.moveId].name})}};L(LB,"TmModifierType");let kI=LB;const NB=class NB extends LR{constructor(A){super("",Tr[A].toLowerCase(),(s,R)=>new uD(this,R[0].id),s=>kt.hasOwnProperty(s.species.speciesId)&&kt[s.species.speciesId].filter(R=>R.item===this.evolutionItem&&(!R.condition||R.condition.predicate(s))&&(R.preFormKey===null||R.preFormKey===s.getFormKey())).length&&s.getFormKey()!==oe.GIGANTAMAX||s.isFusion()&&s.fusionSpecies&&kt.hasOwnProperty(s.fusionSpecies.speciesId)&&kt[s.fusionSpecies.speciesId].filter(R=>R.item===this.evolutionItem&&(!R.condition||R.condition.predicate(s))&&(R.preFormKey===null||R.preFormKey===s.getFusionFormKey())).length&&s.getFusionFormKey()!==oe.GIGANTAMAX?null:vE.NoEffectMessage),this.evolutionItem=A}get name(){return D.t(`modifierType:EvolutionItem.${Tr[this.evolutionItem]}`)}getDescription(A){return D.t("modifierType:ModifierType.EvolutionItemModifierType.description")}getPregenArgs(){return[this.evolutionItem]}};L(NB,"EvolutionItemModifierType");let Vl=NB;const TB=class TB extends LR{constructor(A){super("",XR[A].toLowerCase(),(s,R)=>new IR(this,R[0].id,A,!0),s=>VO.hasOwnProperty(s.species.speciesId)&&VO[s.species.speciesId].filter(R=>R.trigger.hasTriggerType(Pe)&&R.preFormKey===s.getFormKey()).map(R=>R.findTrigger(Pe)).flat().flatMap(R=>R.item).includes(this.formChangeItem)?null:vE.NoEffectMessage),this.formChangeItem=A}get name(){return D.t(`modifierType:FormChangeItem.${XR[this.formChangeItem]}`)}getDescription(A){return D.t("modifierType:ModifierType.FormChangeItemModifierType.description")}getPregenArgs(){return[this.formChangeItem]}};L(TB,"FormChangeItemModifierType");let KT=TB;const SB=class SB extends LR{constructor(A,s){super(A,s,(R,n)=>new io(this,n[0].id,n[1].id),R=>R.isFusion()?vE.NoEffectMessage:null)}getDescription(A){return D.t("modifierType:ModifierType.FusePokemonModifierType.description")}};L(SB,"FusePokemonModifierType");let xl=SB;const oB=class oB extends cE{constructor(){super((A,s)=>{if(s&&s.length===1&&s[0]in i)return new pl(s[0],20);const R=A.map(o=>o.getMoveset().map(l=>l==null?void 0:l.getMove()).filter(l=>l instanceof B).map(l=>l.type)).flat();if(!R.length)return null;const n=new Map;let I=0;for(const o of R){if(n.has(o))if(n.get(o)<3)n.set(o,n.get(o)+1);else continue;else n.set(o,1);I++}if(!I)return null;let a;const r=_e(I);let S=0;for(const o of n.keys()){const l=n.get(o);if(r<=S+l){a=o;break}S+=l}return new pl(a,20)})}};L(oB,"AttackTypeBoosterModifierTypeGenerator");let Mc=oB;const GD=class GD extends cE{constructor(){super((A,s)=>{if(s)return new Yl(s[0]);const R=_e(g.SPD+1);return new Yl(R)})}};L(GD,"BaseStatBoosterModifierTypeGenerator"),GD.items={[g.HP]:"hp_up",[g.ATK]:"protein",[g.DEF]:"iron",[g.SPATK]:"calcium",[g.SPDEF]:"zinc",[g.SPD]:"carbos"};let bl=GD;const HD=class HD extends cE{constructor(){super((A,s)=>{if(s&&s.length===1&&kb.includes(s[0]))return new Fl(s[0]);const R=_e(g.ACC,g.ATK);return new Fl(R)})}};L(HD,"TempStatStageBoosterModifierTypeGenerator"),HD.items={[g.ATK]:"x_attack",[g.DEF]:"x_defense",[g.SPATK]:"x_sp_atk",[g.SPDEF]:"x_sp_def",[g.SPD]:"x_speed",[g.ACC]:"x_accuracy"};let kl=HD;const IN=class IN extends cE{constructor(){super((A,s)=>{const R=IN.items;if(s&&s.length===1&&s[0]in R)return new Wl(s[0]);const n=Object.values(R),I=Object.keys(R),a=I.map(()=>0);for(const S of A){const o=S.getSpeciesForm(!0).speciesId,l=S.isFusion()?S.getFusionSpeciesForm(!0).speciesId:null,C=S.getMoveset(!0).some(M=>(M==null?void 0:M.moveId)===t.FLING);for(const M in n){const u=n[M].species,h=n[M].stats;S.getHeldItems().some(G=>G instanceof La&&G.contains(u[0],h[0]))||(u.includes(o)||l&&u.includes(l)||u.includes(e.PIKACHU)&&C)&&a[M]++}}let r=0;for(const S of a)r+=S;if(r!==0){const S=_e(r,1);let o=0;for(const l in a)if(a[l]!==0){const C=o+a[l];if(S<=o+a[l])return new Wl(I[l]);o=C}}return null})}};L(IN,"SpeciesStatBoosterModifierTypeGenerator"),IN.items={LIGHT_BALL:{stats:[g.ATK,g.SPATK],multiplier:2,species:[e.PIKACHU]},THICK_CLUB:{stats:[g.ATK],multiplier:2,species:[e.CUBONE,e.MAROWAK,e.ALOLA_MAROWAK]},METAL_POWDER:{stats:[g.DEF],multiplier:2,species:[e.DITTO]},QUICK_POWDER:{stats:[g.SPD],multiplier:2,species:[e.DITTO]}};let Zl=IN;const lB=class lB extends cE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in t)return new kI(R[0]);const I=s.map(r=>{const S=r.getLearnableLevelMoves();return r.compatibleTms.filter(o=>!r.moveset.find(l=>(l==null?void 0:l.moveId)===o)&&!S.find(l=>l===o))}).flat().filter(r=>Ll[r]===A).filter(r=>!ye[r].name.endsWith(" (N)")).filter((r,S,o)=>o.indexOf(r)===S);if(!I.length)return null;const a=_e(I.length);return new kI(I[a])})}};L(lB,"TmModifierTypeGenerator");let BL=lB;const CB=class CB extends cE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in Tr)return new Vl(R[0]);const n=[s.filter(I=>kt.hasOwnProperty(I.species.speciesId)&&(!I.pauseEvolutions||I.species.speciesId===e.SLOWPOKE||I.species.speciesId===e.EEVEE)).map(I=>kt[I.species.speciesId].filter(r=>r.item!==Tr.NONE&&(r.evoFormKey===null||(r.preFormKey||"")===I.getFormKey())&&(!r.condition||r.condition.predicate(I)))).flat(),s.filter(I=>I.isFusion()&&I.fusionSpecies&&kt.hasOwnProperty(I.fusionSpecies.speciesId)&&(!I.pauseEvolutions||I.fusionSpecies.speciesId===e.SLOWPOKE||I.fusionSpecies.speciesId===e.EEVEE)).map(I=>kt[I.fusionSpecies.speciesId].filter(r=>r.item!==Tr.NONE&&(r.evoFormKey===null||(r.preFormKey||"")===I.getFusionFormKey())&&(!r.condition||r.condition.predicate(I)))).flat()].flat().flatMap(I=>I.item).filter(I=>(!!I&&I>50)===A);return n.length?new Vl(n[_e(n.length)]):null})}};L(CB,"EvolutionItemModifierTypeGenerator");let Xl=CB;const UB=class UB extends cE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in XR)return new KT(R[0]);const n=[...new Set(s.filter(I=>VO.hasOwnProperty(I.species.speciesId)).map(I=>{let r=VO[I.species.speciesId].filter(S=>(S.formKey.indexOf(oe.MEGA)===-1&&S.formKey.indexOf(oe.PRIMAL)===-1||s[0].scene.getModifiers($r).length)&&(S.formKey.indexOf(oe.GIGANTAMAX)===-1&&S.formKey.indexOf(oe.ETERNAMAX)===-1||s[0].scene.getModifiers(zr).length)&&(!S.conditions.length||S.conditions.filter(o=>o instanceof VR&&o.predicate(I)).length)&&S.preFormKey===I.getFormKey()).map(S=>S.findTrigger(Pe)).filter(S=>S&&S.active&&!I.scene.findModifier(o=>o instanceof IR&&o.pokemonId===I.id&&o.formChangeItem===S.item));if(I.species.speciesId===e.NECROZMA){let S=!1,o=!1,l=!1;r.forEach((C,M)=>{switch(C.item){case XR.ULTRANECROZIUM_Z:S=!0;break;case XR.N_LUNARIZER:o=!0;break;case XR.N_SOLARIZER:l=!0;break}}),S&&o&&l&&(r=r.filter(C=>C.item!==XR.ULTRANECROZIUM_Z))}return r}).flat())].flat().flatMap(I=>I.item).filter(I=>(I&&I<100)===A);return n.length?new KT(n[_e(n.length)]):null})}};L(UB,"FormChangeItemModifierTypeGenerator");let Ql=UB;const uB=class uB extends DA{constructor(A){super("",`${i[A].toLowerCase()}_tera_shard`,(s,R)=>new OR(s,R[0].id,A),"tera_shard"),this.teraType=A}get name(){return D.t("modifierType:ModifierType.TerastallizeModifierType.name",{teraType:D.t(`pokemonInfo:Type.${i[this.teraType]}`)})}getDescription(A){return D.t("modifierType:ModifierType.TerastallizeModifierType.description",{teraType:D.t(`pokemonInfo:Type.${i[this.teraType]}`)})}getPregenArgs(){return[this.teraType]}};L(uB,"TerastallizeModifierType");let Jl=uB;const DB=class DB extends DA{constructor(A,s,R,n,I){super(A,s,(a,r)=>new Ua(a,r[0].id,R),n,I),this.chancePercent=R}getDescription(A){return D.t("modifierType:ModifierType.ContactHeldItemTransferChanceModifierType.description",{chancePercent:this.chancePercent})}};L(DB,"ContactHeldItemTransferChanceModifierType");let hc=DB;const MB=class MB extends DA{constructor(A,s,R,n){super(A,s,(I,a)=>new Ca(I,a[0].id),R,n)}getDescription(A){return D.t("modifierType:ModifierType.TurnHeldItemTransferModifierType.description")}};L(MB,"TurnHeldItemTransferModifierType");let cc=MB;const hB=class hB extends RA{constructor(A,s,R,n,I){super(A,s,(a,r)=>new sL(a,n,R,I),"enemy_status_chance"),this.chancePercent=R,this.effect=n}getDescription(A){return D.t("modifierType:ModifierType.EnemyAttackStatusEffectChanceModifierType.description",{chancePercent:this.chancePercent,statusEffect:Xb(this.effect)})}};L(hB,"EnemyAttackStatusEffectChanceModifierType");let gL=hB;const cB=class cB extends RA{constructor(A,s,R){super(A,s,(n,I)=>new _o(n,R),"enemy_endure"),this.chancePercent=R}getDescription(A){return D.t("modifierType:ModifierType.EnemyEndureChanceModifierType.description",{chancePercent:this.chancePercent})}};L(cB,"EnemyEndureChanceModifierType");let _c=cB;function t6(E,A){return s=>{const R=s[0].scene.gameMode,n=s[0].scene.currentBattle.waveIndex;return R.isClassic&&n>=E?0:A}}L(t6,"skipInClassicAfterWave");function _O(E){return t6(199,E)}L(_O,"skipInLastClassicWaveOrDefault");function oM(E,A){return s=>{const R=s[0].scene.getModifiers(Qr);return!(s[0].scene.gameMode.isClassic&&s[0].scene.currentBattle.waveIndex===199)&&(R.length===0||R.filter(n=>n.getMaxBattles()===E&&n.getBattleCount()>=E*.6).length===0)?A:0}}L(oM,"lureWeightFunc");const _B=class _B{constructor(A,s,R){this.modifierType=A(),this.modifierType.id=Object.keys($).find(n=>$[n]===A),this.weight=s,this.maxWeight=R||(s instanceof Function?0:s)}setTier(A){this.modifierType.setTier(A)}};L(_B,"WeightedModifierType");let Fe=_B;const $={POKEBALL:L(()=>new aI("pb",be.POKEBALL,5),"POKEBALL"),GREAT_BALL:L(()=>new aI("gb",be.GREAT_BALL,5),"GREAT_BALL"),ULTRA_BALL:L(()=>new aI("ub",be.ULTRA_BALL,5),"ULTRA_BALL"),ROGUE_BALL:L(()=>new aI("rb",be.ROGUE_BALL,5),"ROGUE_BALL"),MASTER_BALL:L(()=>new aI("mb",be.MASTER_BALL,1),"MASTER_BALL"),RARE_CANDY:L(()=>new Sc("modifierType:ModifierType.RARE_CANDY","rare_candy"),"RARE_CANDY"),RARER_CANDY:L(()=>new oc("modifierType:ModifierType.RARER_CANDY","rarer_candy"),"RARER_CANDY"),EVOLUTION_ITEM:L(()=>new Xl(!1),"EVOLUTION_ITEM"),RARE_EVOLUTION_ITEM:L(()=>new Xl(!0),"RARE_EVOLUTION_ITEM"),FORM_CHANGE_ITEM:L(()=>new Ql(!1),"FORM_CHANGE_ITEM"),RARE_FORM_CHANGE_ITEM:L(()=>new Ql(!0),"RARE_FORM_CHANGE_ITEM"),EVOLUTION_TRACKER_GIMMIGHOUL:L(()=>new DA("modifierType:ModifierType.EVOLUTION_TRACKER_GIMMIGHOUL","relic_gold",(E,A)=>new jS(E,A[0].id,e.GIMMIGHOUL,10)),"EVOLUTION_TRACKER_GIMMIGHOUL"),MEGA_BRACELET:L(()=>new RA("modifierType:ModifierType.MEGA_BRACELET","mega_bracelet",(E,A)=>new $r(E)),"MEGA_BRACELET"),DYNAMAX_BAND:L(()=>new RA("modifierType:ModifierType.DYNAMAX_BAND","dynamax_band",(E,A)=>new zr(E)),"DYNAMAX_BAND"),TERA_ORB:L(()=>new RA("modifierType:ModifierType.TERA_ORB","tera_orb",(E,A)=>new zS(E)),"TERA_ORB"),MAP:L(()=>new RA("modifierType:ModifierType.MAP","map",(E,A)=>new $S(E)),"MAP"),POTION:L(()=>new ci("modifierType:ModifierType.POTION","potion",20,10),"POTION"),SUPER_POTION:L(()=>new ci("modifierType:ModifierType.SUPER_POTION","super_potion",50,25),"SUPER_POTION"),HYPER_POTION:L(()=>new ci("modifierType:ModifierType.HYPER_POTION","hyper_potion",200,50),"HYPER_POTION"),MAX_POTION:L(()=>new ci("modifierType:ModifierType.MAX_POTION","max_potion",0,100),"MAX_POTION"),FULL_RESTORE:L(()=>new ci("modifierType:ModifierType.FULL_RESTORE","full_restore",0,100,!0),"FULL_RESTORE"),REVIVE:L(()=>new gl("modifierType:ModifierType.REVIVE","revive",50),"REVIVE"),MAX_REVIVE:L(()=>new gl("modifierType:ModifierType.MAX_REVIVE","max_revive",100),"MAX_REVIVE"),FULL_HEAL:L(()=>new Nc("modifierType:ModifierType.FULL_HEAL","full_heal"),"FULL_HEAL"),SACRED_ASH:L(()=>new Cc("modifierType:ModifierType.SACRED_ASH","sacred_ash"),"SACRED_ASH"),REVIVER_SEED:L(()=>new DA("modifierType:ModifierType.REVIVER_SEED","reviver_seed",(E,A)=>new tL(E,A[0].id)),"REVIVER_SEED"),WHITE_HERB:L(()=>new DA("modifierType:ModifierType.WHITE_HERB","white_herb",(E,A)=>new AL(E,A[0].id)),"WHITE_HERB"),ETHER:L(()=>new fT("modifierType:ModifierType.ETHER","ether",10),"ETHER"),MAX_ETHER:L(()=>new fT("modifierType:ModifierType.MAX_ETHER","max_ether",-1),"MAX_ETHER"),ELIXIR:L(()=>new Kl("modifierType:ModifierType.ELIXIR","elixir",10),"ELIXIR"),MAX_ELIXIR:L(()=>new Kl("modifierType:ModifierType.MAX_ELIXIR","max_elixir",-1),"MAX_ELIXIR"),PP_UP:L(()=>new BT("modifierType:ModifierType.PP_UP","pp_up",1),"PP_UP"),PP_MAX:L(()=>new BT("modifierType:ModifierType.PP_MAX","pp_max",3),"PP_MAX"),LURE:L(()=>new HL("modifierType:ModifierType.LURE","lure",10),"LURE"),SUPER_LURE:L(()=>new HL("modifierType:ModifierType.SUPER_LURE","super_lure",15),"SUPER_LURE"),MAX_LURE:L(()=>new HL("modifierType:ModifierType.MAX_LURE","max_lure",30),"MAX_LURE"),SPECIES_STAT_BOOSTER:L(()=>new Zl,"SPECIES_STAT_BOOSTER"),TEMP_STAT_STAGE_BOOSTER:L(()=>new kl,"TEMP_STAT_STAGE_BOOSTER"),DIRE_HIT:L(()=>new class extends RA{getDescription(E){return D.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:D.t("modifierType:ModifierType.DIRE_HIT.extra.raises"),amount:D.t("modifierType:ModifierType.TempStatStageBoosterModifierType.extra.stage")})}}("modifierType:ModifierType.DIRE_HIT","dire_hit",(E,A)=>new JS(E,5)),"DIRE_HIT"),BASE_STAT_BOOSTER:L(()=>new bl,"BASE_STAT_BOOSTER"),ATTACK_TYPE_BOOSTER:L(()=>new Mc,"ATTACK_TYPE_BOOSTER"),MINT:L(()=>new cE((E,A)=>A&&A.length===1&&A[0]in At?new ml(A[0]):new ml(_e(uE(At).length))),"MINT"),TERA_SHARD:L(()=>new cE((E,A)=>{if(A&&A.length===1&&A[0]in i)return new Jl(A[0]);if(!E[0].scene.getModifiers(zS).length)return null;let s;if(_e(3))s=_e(64)?_e(18):i.STELLAR;else{const R=E.map(n=>n.getTypes(!1,!1,!0)).flat();s=JA(R)}return new Jl(s)}),"TERA_SHARD"),BERRY:L(()=>new cE((E,A)=>{if(A&&A.length===1&&A[0]in Dt)return new gT(A[0]);const s=uE(Dt);let R;const n=_e(12);return n<2?R=Dt.SITRUS:n<4?R=Dt.LUM:n<6?R=Dt.LEPPA:R=s[_e(s.length-3)+2],new gT(R)}),"BERRY"),TM_COMMON:L(()=>new BL(v.COMMON),"TM_COMMON"),TM_GREAT:L(()=>new BL(v.GREAT),"TM_GREAT"),TM_ULTRA:L(()=>new BL(v.ULTRA),"TM_ULTRA"),MEMORY_MUSHROOM:L(()=>new Ar("modifierType:ModifierType.MEMORY_MUSHROOM","big_mushroom"),"MEMORY_MUSHROOM"),EXP_SHARE:L(()=>new RA("modifierType:ModifierType.EXP_SHARE","exp_share",(E,A)=>new ro(E)),"EXP_SHARE"),EXP_BALANCE:L(()=>new RA("modifierType:ModifierType.EXP_BALANCE","exp_balance",(E,A)=>new Lo(E)),"EXP_BALANCE"),OVAL_CHARM:L(()=>new RA("modifierType:ModifierType.OVAL_CHARM","oval_charm",(E,A)=>new Io(E)),"OVAL_CHARM"),EXP_CHARM:L(()=>new fL("modifierType:ModifierType.EXP_CHARM","exp_charm",25),"EXP_CHARM"),SUPER_EXP_CHARM:L(()=>new fL("modifierType:ModifierType.SUPER_EXP_CHARM","super_exp_charm",60),"SUPER_EXP_CHARM"),GOLDEN_EXP_CHARM:L(()=>new fL("modifierType:ModifierType.GOLDEN_EXP_CHARM","golden_exp_charm",100),"GOLDEN_EXP_CHARM"),LUCKY_EGG:L(()=>new vl("modifierType:ModifierType.LUCKY_EGG","lucky_egg",40),"LUCKY_EGG"),GOLDEN_EGG:L(()=>new vl("modifierType:ModifierType.GOLDEN_EGG","golden_egg",100),"GOLDEN_EGG"),SOOTHE_BELL:L(()=>new Uc("modifierType:ModifierType.SOOTHE_BELL","soothe_bell"),"SOOTHE_BELL"),SCOPE_LENS:L(()=>new DA("modifierType:ModifierType.SCOPE_LENS","scope_lens",(E,A)=>new eL(E,A[0].id,1)),"SCOPE_LENS"),LEEK:L(()=>new DA("modifierType:ModifierType.LEEK","leek",(E,A)=>new Ao(E,A[0].id,2,[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD])),"LEEK"),EVIOLITE:L(()=>new DA("modifierType:ModifierType.EVIOLITE","eviolite",(E,A)=>new ND(E,A[0].id,[g.DEF,g.SPDEF],1.5)),"EVIOLITE"),SOUL_DEW:L(()=>new DA("modifierType:ModifierType.SOUL_DEW","soul_dew",(E,A)=>new To(E,A[0].id)),"SOUL_DEW"),NUGGET:L(()=>new dL("modifierType:ModifierType.NUGGET","nugget",1,"modifierType:ModifierType.MoneyRewardModifierType.extra.small"),"NUGGET"),BIG_NUGGET:L(()=>new dL("modifierType:ModifierType.BIG_NUGGET","big_nugget",2.5,"modifierType:ModifierType.MoneyRewardModifierType.extra.moderate"),"BIG_NUGGET"),RELIC_GOLD:L(()=>new dL("modifierType:ModifierType.RELIC_GOLD","relic_gold",10,"modifierType:ModifierType.MoneyRewardModifierType.extra.large"),"RELIC_GOLD"),AMULET_COIN:L(()=>new RA("modifierType:ModifierType.AMULET_COIN","amulet_coin",(E,A)=>new mR(E)),"AMULET_COIN"),GOLDEN_PUNCH:L(()=>new DA("modifierType:ModifierType.GOLDEN_PUNCH","golden_punch",(E,A)=>new $n(E,A[0].id)),"GOLDEN_PUNCH"),COIN_CASE:L(()=>new RA("modifierType:ModifierType.COIN_CASE","coin_case",(E,A)=>new oo(E)),"COIN_CASE"),LOCK_CAPSULE:L(()=>new RA("modifierType:ModifierType.LOCK_CAPSULE","lock_capsule",(E,A)=>new Co(E)),"LOCK_CAPSULE"),GRIP_CLAW:L(()=>new hc("modifierType:ModifierType.GRIP_CLAW","grip_claw",10),"GRIP_CLAW"),WIDE_LENS:L(()=>new uc("modifierType:ModifierType.WIDE_LENS","wide_lens",5),"WIDE_LENS"),MULTI_LENS:L(()=>new Dc("modifierType:ModifierType.MULTI_LENS","zoom_lens"),"MULTI_LENS"),HEALING_CHARM:L(()=>new RA("modifierType:ModifierType.HEALING_CHARM","healing_charm",(E,A)=>new oa(E,1.1)),"HEALING_CHARM"),CANDY_JAR:L(()=>new RA("modifierType:ModifierType.CANDY_JAR","candy_jar",(E,A)=>new eI(E)),"CANDY_JAR"),BERRY_POUCH:L(()=>new RA("modifierType:ModifierType.BERRY_POUCH","berry_pouch",(E,A)=>new Sa(E)),"BERRY_POUCH"),FOCUS_BAND:L(()=>new DA("modifierType:ModifierType.FOCUS_BAND","focus_band",(E,A)=>new Eo(E,A[0].id)),"FOCUS_BAND"),QUICK_CLAW:L(()=>new DA("modifierType:ModifierType.QUICK_CLAW","quick_claw",(E,A)=>new Na(E,A[0].id)),"QUICK_CLAW"),KINGS_ROCK:L(()=>new DA("modifierType:ModifierType.KINGS_ROCK","kings_rock",(E,A)=>new so(E,A[0].id)),"KINGS_ROCK"),LEFTOVERS:L(()=>new DA("modifierType:ModifierType.LEFTOVERS","leftovers",(E,A)=>new Ta(E,A[0].id)),"LEFTOVERS"),SHELL_BELL:L(()=>new DA("modifierType:ModifierType.SHELL_BELL","shell_bell",(E,A)=>new ji(E,A[0].id)),"SHELL_BELL"),TOXIC_ORB:L(()=>new DA("modifierType:ModifierType.TOXIC_ORB","toxic_orb",(E,A)=>new qi(E,A[0].id)),"TOXIC_ORB"),FLAME_ORB:L(()=>new DA("modifierType:ModifierType.FLAME_ORB","flame_orb",(E,A)=>new qi(E,A[0].id)),"FLAME_ORB"),BATON:L(()=>new DA("modifierType:ModifierType.BATON","baton",(E,A)=>new Fi(E,A[0].id)),"BATON"),SHINY_CHARM:L(()=>new RA("modifierType:ModifierType.SHINY_CHARM","shiny_charm",(E,A)=>new la(E)),"SHINY_CHARM"),ABILITY_CHARM:L(()=>new RA("modifierType:ModifierType.ABILITY_CHARM","ability_charm",(E,A)=>new zn(E)),"ABILITY_CHARM"),CATCHING_CHARM:L(()=>new RA("modifierType:ModifierType.CATCHING_CHARM","catching_charm",(E,A)=>new lo(E)),"CATCHING_CHARM"),IV_SCANNER:L(()=>new RA("modifierType:ModifierType.IV_SCANNER","scanner",(E,A)=>new ua(E)),"IV_SCANNER"),DNA_SPLICERS:L(()=>new xl("modifierType:ModifierType.DNA_SPLICERS","dna_splicers"),"DNA_SPLICERS"),MINI_BLACK_HOLE:L(()=>new cc("modifierType:ModifierType.MINI_BLACK_HOLE","mini_black_hole"),"MINI_BLACK_HOLE"),VOUCHER:L(()=>new GL(aE.REGULAR,1),"VOUCHER"),VOUCHER_PLUS:L(()=>new GL(aE.PLUS,1),"VOUCHER_PLUS"),VOUCHER_PREMIUM:L(()=>new GL(aE.PREMIUM,1),"VOUCHER_PREMIUM"),GOLDEN_POKEBALL:L(()=>new RA("modifierType:ModifierType.GOLDEN_POKEBALL","pb_gold",(E,A)=>new qn(E),void 0,"se/pb_bounce_1"),"GOLDEN_POKEBALL"),SILVER_POKEBALL:L(()=>new RA("modifierType:ModifierType.SILVER_POKEBALL","pb_silver",(E,A)=>new jn(E,100),void 0,"se/pb_bounce_1"),"SILVER_POKEBALL"),ENEMY_DAMAGE_BOOSTER:L(()=>new RA("modifierType:ModifierType.ENEMY_DAMAGE_BOOSTER","wl_item_drop",(E,A)=>new Do(E,5)),"ENEMY_DAMAGE_BOOSTER"),ENEMY_DAMAGE_REDUCTION:L(()=>new RA("modifierType:ModifierType.ENEMY_DAMAGE_REDUCTION","wl_guard_spec",(E,A)=>new Mo(E,2.5)),"ENEMY_DAMAGE_REDUCTION"),ENEMY_HEAL:L(()=>new RA("modifierType:ModifierType.ENEMY_HEAL","wl_potion",(E,A)=>new ho(E,2,10)),"ENEMY_HEAL"),ENEMY_ATTACK_POISON_CHANCE:L(()=>new gL("modifierType:ModifierType.ENEMY_ATTACK_POISON_CHANCE","wl_antidote",5,Re.POISON,10),"ENEMY_ATTACK_POISON_CHANCE"),ENEMY_ATTACK_PARALYZE_CHANCE:L(()=>new gL("modifierType:ModifierType.ENEMY_ATTACK_PARALYZE_CHANCE","wl_paralyze_heal",2.5,Re.PARALYSIS,10),"ENEMY_ATTACK_PARALYZE_CHANCE"),ENEMY_ATTACK_BURN_CHANCE:L(()=>new gL("modifierType:ModifierType.ENEMY_ATTACK_BURN_CHANCE","wl_burn_heal",5,Re.BURN,10),"ENEMY_ATTACK_BURN_CHANCE"),ENEMY_STATUS_EFFECT_HEAL_CHANCE:L(()=>new RA("modifierType:ModifierType.ENEMY_STATUS_EFFECT_HEAL_CHANCE","wl_full_heal",(E,A)=>new co(E,2.5,10)),"ENEMY_STATUS_EFFECT_HEAL_CHANCE"),ENEMY_ENDURE_CHANCE:L(()=>new _c("modifierType:ModifierType.ENEMY_ENDURE_CHANCE","wl_reset_urge",2),"ENEMY_ENDURE_CHANCE"),ENEMY_FUSED_CHANCE:L(()=>new RA("modifierType:ModifierType.ENEMY_FUSED_CHANCE","wl_custom_spliced",(E,A)=>new Po(E,1)),"ENEMY_FUSED_CHANCE"),MYSTERY_ENCOUNTER_SHUCKLE_JUICE:L(()=>new cE((E,A)=>A?new yl(A[0]):new yl(_e(20,1))),"MYSTERY_ENCOUNTER_SHUCKLE_JUICE"),MYSTERY_ENCOUNTER_OLD_GATEAU:L(()=>new cE((E,A)=>A?new wl(A[0],A[1]):new wl(_e(20,1),[g.HP,g.ATK,g.DEF])),"MYSTERY_ENCOUNTER_OLD_GATEAU"),MYSTERY_ENCOUNTER_BLACK_SLUDGE:L(()=>new cE((E,A)=>A?new RA("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(s,R)=>new AI(s,A[0])):new RA("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(s,R)=>new AI(s,2.5))),"MYSTERY_ENCOUNTER_BLACK_SLUDGE"),MYSTERY_ENCOUNTER_MACHO_BRACE:L(()=>new DA("modifierType:ModifierType.MYSTERY_ENCOUNTER_MACHO_BRACE","macho_brace",(E,A)=>new ra(E,A[0].id)),"MYSTERY_ENCOUNTER_MACHO_BRACE"),MYSTERY_ENCOUNTER_GOLDEN_BUG_NET:L(()=>new RA("modifierType:ModifierType.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET","golden_net",(E,A)=>new Uo(E)),"MYSTERY_ENCOUNTER_GOLDEN_BUG_NET")};function rL(E,A){return E[0].scene.gameMode.isClassic&&E[0].scene.pokeballCounts[A]>=jb}L(rL,"hasMaximumBalls");const Wa={[v.COMMON]:[new Fe($.POKEBALL,E=>rL(E,be.POKEBALL)?0:6,6),new Fe($.RARE_CANDY,2),new Fe($.POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=10&&s.getHpRatio()<=.875&&!s.isFainted()).length,3)*3,9),new Fe($.SUPER_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=25&&s.getHpRatio()<=.75&&!s.isFainted()).length,3),3),new Fe($.ETHER,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof lE&&R.berryType===Dt.LEPPA)&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3)*3,9),new Fe($.MAX_ETHER,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof lE&&R.berryType===Dt.LEPPA)&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3),3),new Fe($.LURE,oM(10,2)),new Fe($.TEMP_STAT_STAGE_BOOSTER,4),new Fe($.BERRY,2),new Fe($.TM_COMMON,2)].map(E=>(E.setTier(v.COMMON),E)),[v.GREAT]:[new Fe($.GREAT_BALL,E=>rL(E,be.GREAT_BALL)?0:6,6),new Fe($.PP_UP,2),new Fe($.FULL_HEAL,E=>Math.min(E.filter(s=>s.hp&&!!s.status&&!s.getHeldItems().some(R=>{var n;return R instanceof qi?R.getStatusEffect()===((n=s.status)==null?void 0:n.effect):!1})).length,3)*6,18),new Fe($.REVIVE,E=>Math.min(E.filter(s=>s.isFainted()).length,3)*9,27),new Fe($.MAX_REVIVE,E=>Math.min(E.filter(s=>s.isFainted()).length,3)*3,9),new Fe($.SACRED_ASH,E=>E.filter(A=>A.isFainted()).length>=Math.ceil(E.length/2)?1:0,1),new Fe($.HYPER_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=100&&s.getHpRatio()<=.625&&!s.isFainted()).length,3)*3,9),new Fe($.MAX_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=100&&s.getHpRatio()<=.5&&!s.isFainted()).length,3),3),new Fe($.FULL_RESTORE,E=>{const A=Math.min(E.filter(R=>R.hp&&!!R.status&&!R.getHeldItems().some(n=>{var I;return n instanceof qi?n.getStatusEffect()===((I=R.status)==null?void 0:I.effect):!1})).length,3);return Math.floor((Math.min(E.filter(R=>R.getInverseHp()>=100&&R.getHpRatio()<=.5&&!R.isFainted()).length,3)+A)/2)},3),new Fe($.ELIXIR,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof lE&&R.berryType===Dt.LEPPA)&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3)*3,9),new Fe($.MAX_ELIXIR,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof lE&&R.berryType===Dt.LEPPA)&&s.getMoveset().filter(R=>(R==null?void 0:R.ppUsed)&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3),3),new Fe($.DIRE_HIT,4),new Fe($.SUPER_LURE,oM(15,4)),new Fe($.NUGGET,_O(5)),new Fe($.EVOLUTION_ITEM,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/15),8),8),new Fe($.MAP,E=>E[0].scene.gameMode.isClassic&&E[0].scene.currentBattle.waveIndex<180?2:0,2),new Fe($.SOOTHE_BELL,2),new Fe($.TM_GREAT,3),new Fe($.MEMORY_MUSHROOM,E=>{if(!E.find(s=>s.getLearnableLevelMoves().length))return 0;const A=E.map(s=>s.level).reduce((s,R)=>Math.max(s,R),1);return Math.min(Math.ceil(A/20),4)},4),new Fe($.BASE_STAT_BOOSTER,3),new Fe($.TERA_SHARD,1),new Fe($.DNA_SPLICERS,E=>E[0].scene.gameMode.isSplicedOnly&&E.filter(A=>!A.fusionSpecies).length>1?4:0),new Fe($.VOUCHER,(E,A)=>E[0].scene.gameMode.isDaily?0:Math.max(1-A,0),1)].map(E=>(E.setTier(v.GREAT),E)),[v.ULTRA]:[new Fe($.ULTRA_BALL,E=>rL(E,be.ULTRA_BALL)?0:15,15),new Fe($.MAX_LURE,oM(30,4)),new Fe($.BIG_NUGGET,_O(12)),new Fe($.PP_MAX,3),new Fe($.MINT,4),new Fe($.RARE_EVOLUTION_ITEM,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/15)*4,32),32),new Fe($.FORM_CHANGE_ITEM,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/50),4)*6,24),new Fe($.AMULET_COIN,_O(3)),new Fe($.EVIOLITE,E=>{const{gameMode:A,gameData:s}=E[0].scene;return(A.isDaily||!A.isFreshStartChallenge()&&s.isUnlocked(ms.EVIOLITE))&&E.some(R=>!R.isMax()&&(R.getSpeciesForm(!0).speciesId in kt||R.isFusion()&&R.getFusionSpeciesForm(!0).speciesId in kt)?!R.getHeldItems().some(n=>n.type.id==="EVIOLITE"):!1)?10:0}),new Fe($.SPECIES_STAT_BOOSTER,12),new Fe($.LEEK,E=>{const A=[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD];return E.some(s=>!s.getHeldItems().some(R=>R instanceof Ao)&&(A.includes(s.getSpeciesForm(!0).speciesId)||s.isFusion()&&A.includes(s.getFusionSpeciesForm(!0).speciesId)))?12:0},12),new Fe($.TOXIC_ORB,E=>E.some(A=>{const s=A.getMoveset(!0).filter(S=>!Ve(S)).map(S=>S.moveId),R=A.canSetStatus(Re.TOXIC,!0,!0,null,!0),n=A.getHeldItems().some(S=>S.type.id==="FLAME_ORB"||S.type.id==="TOXIC_ORB"),I=[t.FACADE,t.PSYCHO_SHIFT].some(S=>s.includes(S)),a=[].some(S=>s.includes(S)),r=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.TOXIC_BOOST,O.POISON_HEAL,O.MAGIC_GUARD].some(S=>A.hasAbility(S,!1,!0));return n?!1:R?r||I:a})?10:0,10),new Fe($.FLAME_ORB,E=>E.some(A=>{const s=A.getMoveset(!0).filter(S=>!Ve(S)).map(S=>S.moveId),R=A.canSetStatus(Re.BURN,!0,!0,null,!0),n=A.getHeldItems().some(S=>S.type.id==="FLAME_ORB"||S.type.id==="TOXIC_ORB"),I=[t.FACADE,t.PSYCHO_SHIFT].some(S=>s.includes(S)),a=[].some(S=>s.includes(S)),r=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.FLARE_BOOST,O.MAGIC_GUARD].some(S=>A.hasAbility(S,!1,!0));return n?!1:R?r||I:a})?10:0,10),new Fe($.WHITE_HERB,E=>{const A=[O.WEAK_ARMOR,O.CONTRARY,O.MOODY,O.ANGER_SHELL,O.COMPETITIVE,O.DEFIANT],s=E.filter(R=>!R.getHeldItems().some(n=>n instanceof AL&&n.stackCount>=n.getMaxHeldItemCount(R))&&(A.some(n=>R.hasAbility(n,!1,!0))||R.getMoveset(!0).some(n=>n&&i8.includes(n.moveId)))).length;return 0*(s?2:1)+(s?s*0:0)},10),new Fe($.REVIVER_SEED,4),new Fe($.CANDY_JAR,_O(5)),new Fe($.ATTACK_TYPE_BOOSTER,9),new Fe($.TM_ULTRA,11),new Fe($.RARER_CANDY,4),new Fe($.GOLDEN_PUNCH,_O(2)),new Fe($.IV_SCANNER,_O(4)),new Fe($.EXP_CHARM,_O(8)),new Fe($.EXP_SHARE,_O(10)),new Fe($.EXP_BALANCE,_O(3)),new Fe($.TERA_ORB,E=>Math.min(Math.max(Math.floor(E[0].scene.currentBattle.waveIndex/50)*2,1),4),4),new Fe($.QUICK_CLAW,3),new Fe($.WIDE_LENS,4)].map(E=>(E.setTier(v.ULTRA),E)),[v.ROGUE]:[new Fe($.ROGUE_BALL,E=>rL(E,be.ROGUE_BALL)?0:16,16),new Fe($.RELIC_GOLD,_O(2)),new Fe($.LEFTOVERS,3),new Fe($.SHELL_BELL,3),new Fe($.BERRY_POUCH,4),new Fe($.GRIP_CLAW,5),new Fe($.SCOPE_LENS,4),new Fe($.BATON,2),new Fe($.SOUL_DEW,7),new Fe($.CATCHING_CHARM,E=>!E[0].scene.gameMode.isFreshStartChallenge()&&E[0].scene.gameData.getSpeciesCount(A=>!!A.caughtAttr)>100?4:0,4),new Fe($.ABILITY_CHARM,t6(189,6)),new Fe($.FOCUS_BAND,5),new Fe($.KINGS_ROCK,3),new Fe($.LOCK_CAPSULE,E=>E[0].scene.gameMode.isClassic?0:3),new Fe($.SUPER_EXP_CHARM,_O(8)),new Fe($.RARE_FORM_CHANGE_ITEM,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/50),4)*6,24),new Fe($.MEGA_BRACELET,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/50),4)*9,36),new Fe($.DYNAMAX_BAND,E=>Math.min(Math.ceil(E[0].scene.currentBattle.waveIndex/50),4)*9,36),new Fe($.VOUCHER_PLUS,(E,A)=>E[0].scene.gameMode.isDaily?0:Math.max(3-A*1,0),3)].map(E=>(E.setTier(v.ROGUE),E)),[v.MASTER]:[new Fe($.MASTER_BALL,E=>rL(E,be.MASTER_BALL)?0:24,24),new Fe($.SHINY_CHARM,14),new Fe($.HEALING_CHARM,18),new Fe($.MULTI_LENS,18),new Fe($.VOUCHER_PREMIUM,(E,A)=>!E[0].scene.gameMode.isDaily&&!E[0].scene.gameMode.isEndless&&!E[0].scene.gameMode.isSplicedOnly?Math.max(5-A*2,0):0,5),new Fe($.DNA_SPLICERS,E=>!E[0].scene.gameMode.isSplicedOnly&&E.filter(A=>!A.fusionSpecies).length>1?24:0,24),new Fe($.MINI_BLACK_HOLE,E=>E[0].scene.gameMode.isDaily||!E[0].scene.gameMode.isFreshStartChallenge()&&E[0].scene.gameData.isUnlocked(ms.MINI_BLACK_HOLE)?1:0,1)].map(E=>(E.setTier(v.MASTER),E))},K7={[v.COMMON]:[new Fe($.BERRY,1)].map(E=>(E.setTier(v.COMMON),E)),[v.GREAT]:[new Fe($.BASE_STAT_BOOSTER,1)].map(E=>(E.setTier(v.GREAT),E)),[v.ULTRA]:[new Fe($.ATTACK_TYPE_BOOSTER,10),new Fe($.WHITE_HERB,0)].map(E=>(E.setTier(v.ULTRA),E)),[v.ROGUE]:[new Fe($.LUCKY_EGG,4)].map(E=>(E.setTier(v.ROGUE),E)),[v.MASTER]:[new Fe($.GOLDEN_EGG,1)].map(E=>(E.setTier(v.MASTER),E))},m7={[v.COMMON]:[new Fe($.BERRY,8),new Fe($.BASE_STAT_BOOSTER,3)].map(E=>(E.setTier(v.COMMON),E)),[v.GREAT]:[new Fe($.BASE_STAT_BOOSTER,3)].map(E=>(E.setTier(v.GREAT),E)),[v.ULTRA]:[new Fe($.ATTACK_TYPE_BOOSTER,10),new Fe($.WHITE_HERB,0)].map(E=>(E.setTier(v.ULTRA),E)),[v.ROGUE]:[new Fe($.FOCUS_BAND,2),new Fe($.LUCKY_EGG,4),new Fe($.QUICK_CLAW,1),new Fe($.GRIP_CLAW,1),new Fe($.WIDE_LENS,1)].map(E=>(E.setTier(v.ROGUE),E)),[v.MASTER]:[new Fe($.KINGS_ROCK,1),new Fe($.LEFTOVERS,1),new Fe($.SHELL_BELL,1),new Fe($.SCOPE_LENS,1)].map(E=>(E.setTier(v.MASTER),E))},F7={[v.COMMON]:[new Fe($.ENEMY_DAMAGE_BOOSTER,9),new Fe($.ENEMY_DAMAGE_REDUCTION,9),new Fe($.ENEMY_ATTACK_POISON_CHANCE,3),new Fe($.ENEMY_ATTACK_PARALYZE_CHANCE,3),new Fe($.ENEMY_ATTACK_BURN_CHANCE,3),new Fe($.ENEMY_STATUS_EFFECT_HEAL_CHANCE,9),new Fe($.ENEMY_ENDURE_CHANCE,4),new Fe($.ENEMY_FUSED_CHANCE,1)].map(E=>(E.setTier(v.COMMON),E)),[v.GREAT]:[new Fe($.ENEMY_DAMAGE_BOOSTER,5),new Fe($.ENEMY_DAMAGE_REDUCTION,5),new Fe($.ENEMY_STATUS_EFFECT_HEAL_CHANCE,5),new Fe($.ENEMY_ENDURE_CHANCE,5),new Fe($.ENEMY_FUSED_CHANCE,1)].map(E=>(E.setTier(v.GREAT),E)),[v.ULTRA]:[new Fe($.ENEMY_DAMAGE_BOOSTER,10),new Fe($.ENEMY_DAMAGE_REDUCTION,10),new Fe($.ENEMY_HEAL,10),new Fe($.ENEMY_STATUS_EFFECT_HEAL_CHANCE,10),new Fe($.ENEMY_ENDURE_CHANCE,10),new Fe($.ENEMY_FUSED_CHANCE,5)].map(E=>(E.setTier(v.ULTRA),E)),[v.ROGUE]:[].map(E=>(E.setTier(v.ROGUE),E)),[v.MASTER]:[].map(E=>(E.setTier(v.MASTER),E))},p7={[v.COMMON]:[new Fe($.BASE_STAT_BOOSTER,1),new Fe($.BERRY,3)].map(E=>(E.setTier(v.COMMON),E)),[v.GREAT]:[new Fe($.ATTACK_TYPE_BOOSTER,5)].map(E=>(E.setTier(v.GREAT),E)),[v.ULTRA]:[new Fe($.REVIVER_SEED,4),new Fe($.SOOTHE_BELL,1),new Fe($.SOUL_DEW,1),new Fe($.GOLDEN_PUNCH,1)].map(E=>(E.setTier(v.ULTRA),E)),[v.ROGUE]:[new Fe($.GRIP_CLAW,5),new Fe($.BATON,2),new Fe($.FOCUS_BAND,5),new Fe($.QUICK_CLAW,3),new Fe($.KINGS_ROCK,3)].map(E=>(E.setTier(v.ROGUE),E)),[v.MASTER]:[new Fe($.LEFTOVERS,1),new Fe($.SHELL_BELL,1)].map(E=>(E.setTier(v.MASTER),E))};function RM(E){const A=E();return A.id||(A.id=Object.keys($).find(s=>$[s]===E)),A}L(RM,"getModifierType");let A6={},Pc={},E6={},Gc={},s6={};function mT(E){let A;switch(E){case 0:A=Wa;break;case 1:A=K7;break;case 2:A=m7;break;case 3:A=F7;break;case 4:A=p7;break}return A}L(mT,"getModifierPoolForType");const W7=[768/1024,195/1024,48/1024,12/1024,1/1024],xo=new Map;function sI(E,A,s=0){const R=mT(A);xo.forEach((r,S)=>{xo.set(S,!1)});const n={},I={},a=Object.fromEntries(new Map(Object.keys(R).map(r=>{n[r]=[];const S=new Map,o=[];let l=0,C=0;R[r].reduce((M,u)=>{const h=u,P=E[0].scene.findModifiers(H=>H.type.id===h.modifierType.id,A===0),G=h.modifierType instanceof cE?h.modifierType.generateType(E):h.modifierType,d=!P.length||G instanceof DA||G instanceof KT||P.find(H=>H.stackCount<H.getMaxStackCount(E[0].scene,!0))?h.weight instanceof Function?h.weight(E,s):h.weight:0;if(h.maxWeight){const H=h.modifierType.id;o.push(H);const f=d;I[H]={weight:f,tier:parseInt(r),tierPercent:0,totalPercent:0},l+=f}if(d)M+=d;else return n[r].push(C++),M;return xo.has(u.modifierType.id)&&xo.set(u.modifierType.id,!0),S.set(M,C++),M},0);for(const M of o)I[M].tierPercent=Math.floor(I[M].weight/l*1e4)/100;return[r,Object.fromEntries(S)]})));for(const r of Object.keys(I))I[r].totalPercent=Math.floor(I[r].tierPercent*W7[I[r].tier]*100)/100,I[r].tier=v[I[r].tier];switch(A){case 0:A6=a,Pc=n;break;case 1:case 2:Gc=a;break;case 3:s6=a;break;case 4:E6=a;break}}L(sI,"regenerateModifierPoolThresholds");function Y7(E){return $[E]}L(Y7,"getModifierTypeFuncById");function R1(E,A,s,R){const n=[],I=Math.min(E*5,50);if(!R)new Array(E).fill(0).map((a,r)=>{n.push(lM(n,I,A,s&&s.length>r?s[r]:void 0))});else{if(R!=null&&R.guaranteedModifierTypeOptions&&R.guaranteedModifierTypeOptions.length>0&&n.push(...R.guaranteedModifierTypeOptions),R.guaranteedModifierTypeFuncs&&R.guaranteedModifierTypeFuncs.length>0&&R.guaranteedModifierTypeFuncs.forEach((a,r)=>{var C;const S=Object.keys($).find(M=>$[M]===a);let o=(C=$[S])==null?void 0:C.call($);o=o.withIdFromFunc($[S]).withTierFromPool(0,A);const l=o instanceof cE?o.generateType(A):o;if(l){const M=new Os(l,0);n.push(M)}}),R.guaranteedModifierTiers&&R.guaranteedModifierTiers.length>0){const a=R.allowLuckUpgrades??!0;R.guaranteedModifierTiers.forEach(r=>{n.push(lM(n,I,A,r,a))})}if(n.length<E&&R.fillRemaining)for(;n.length<E;)n.push(lM(n,I,A,void 0))}return y7(n,A),n}L(R1,"getPlayerModifierTypeOptions");function lM(E,A,s,R,n){n=n??!0;let I=ZI(s,0,R,void 0,0,n),a=0;for(;E.length&&++a<A&&E.filter(r=>r.type.name===(I==null?void 0:I.type.name)||r.type.group===(I==null?void 0:I.type.group)).length;)I=ZI(s,0,(I==null?void 0:I.type.tier)??R,I==null?void 0:I.upgradeCount,0,n);return I}L(lM,"getModifierTypeOptionWithRetry");function y7(E,A){const s=Math.min(E.length,Ye.ITEM_REWARD_OVERRIDE.length);for(let R=0;R<s;R++){const n=Ye.ITEM_REWARD_OVERRIDE[R],I=$[n.name];let a=I();if(a instanceof cE){const r="type"in n&&n.type!==null?[n.type]:void 0;a=a.generateType(A,r)}a&&(E[R].type=a.withIdFromFunc(I).withTierFromPool(0,A))}}L(y7,"overridePlayerModifierTypeOptions");function R6(E,A){return E%10?[[new Os($.POTION(),0,A*.2),new Os($.ETHER(),0,A*.4),new Os($.REVIVE(),0,A*2)],[new Os($.SUPER_POTION(),0,A*.45),new Os($.FULL_HEAL(),0,A)],[new Os($.ELIXIR(),0,A),new Os($.MAX_ETHER(),0,A)],[new Os($.HYPER_POTION(),0,A*.8),new Os($.MAX_REVIVE(),0,A*2.75),new Os($.MEMORY_MUSHROOM(),0,A*4)],[new Os($.MAX_POTION(),0,A*1.5),new Os($.MAX_ELIXIR(),0,A*2.5)],[new Os($.FULL_RESTORE(),0,A*2.25)],[new Os($.SACRED_ASH(),0,A*10)]].slice(0,Math.ceil(Math.max(E+10,0)/30)).flat():[]}L(R6,"getPlayerShopModifierTypeOptionsForWave");function w7(E,A,s){var o;let R;switch(E){case v.ULTRA:R=5;break;case v.GREAT:R=3;break;default:R=1;break}const n=50;let I=ZI([],3,E),a=0,r;for(;++a<n&&(r=A.find(l=>{var C;return l.type.id===((C=I==null?void 0:I.type)==null?void 0:C.id)}))&&r.getMaxStackCount(s)<r.stackCount+(a<10?R:1);)I=ZI([],3,E);const S=(o=I==null?void 0:I.type)==null?void 0:o.newModifier();return S.stackCount=R,S}L(w7,"getEnemyBuffModifierForWave");function v7(E,A,s,R,n=0){const I=new Array(A).fill(0).map(()=>{var a;return(a=ZI(s,R,void 0,n&&!_e(n)?1:0))==null?void 0:a.type});return E%1e3||I.push(RM($.MINI_BLACK_HOLE)),I}L(v7,"getEnemyModifierTypesForWave");function V7(E){var s,R;const A=[];for(const n of E)for(let I=0;I<3;I++){const a=_e(64);let r;a>25?r=v.COMMON:a>12?r=v.GREAT:a>4?r=v.ULTRA:a?r=v.ROGUE:r=v.MASTER;const S=(R=(s=ZI(E,4,r))==null?void 0:s.type)==null?void 0:R.newModifier(n);A.push(S)}return A}L(V7,"getDailyRunStarterModifiers");function ZI(E,A,s,R,n=0,I=!0){const a=!A,r=mT(A);let S;switch(A){case 0:S=A6;break;case 1:S=Gc;break;case 2:S=Gc;break;case 3:S=s6;break;case 4:S=E6;break}if(s===void 0){const h=_e(1024);if(R||(R=0),a&&h&&I){const P=pi(E),G=Math.floor(128/((P+4)/4));let d=!1;do d=_e(G)<4,d&&R++;while(d)}for(h>255?s=v.COMMON:h>60?s=v.GREAT:h>12?s=v.ULTRA:h?s=v.ROGUE:s=v.MASTER,s+=R;s&&(!Wa.hasOwnProperty(s)||!Wa[s].length);)s--,R&&R--}else if(R===void 0&&a){if(R=0,s<v.MASTER&&I){const h=E.filter(G=>G.isShiny()&&!G.isFainted()).length,P=Math.floor(32/((h+2)/2));for(;Wa.hasOwnProperty(s+R+1)&&Wa[s+R+1].length&&!_e(P);)R++;s+=R}}else n===10&&s&&(n=0,s--);const o=Object.keys(S[s]),l=parseInt(o[o.length-1]),C=_e(l);let M;for(const h of o){const P=parseInt(h);if(C<P){M=S[s][P];break}}if(M===void 0)return null;a&&console.log(M,Pc[s].filter(h=>h<=M).length,Pc[s]);let u=r[s][M].modifierType;return u instanceof cE&&(u=u.generateType(E),u===null)?(a&&console.log(v[s],R),ZI(E,A,s,R,++n)):(console.log(u,a?"":"(enemy)"),new Os(u,R))}L(ZI,"getNewModifierTypeOption");function x7(E){let A=Wa[E||v.COMMON][0];return A instanceof Fe&&(A=A.modifierType),A}L(x7,"getDefaultModifierTypeForTier");const PB=class PB{constructor(A,s,R=0){this.type=A,this.upgradeCount=s,this.cost=Math.min(Math.round(R),Number.MAX_SAFE_INTEGER)}};L(PB,"ModifierTypeOption");let Os=PB;function pi(E){if(E[0].scene.gameMode.isDaily){const s=new Rt(0);return E[0].scene.executeWithSeedOffset(()=>{s.value=_e(15)},0,E[0].scene.seed),s.value}return Phaser.Math.Clamp(E.map(s=>s.isAllowedInBattle()?s.getLuck():0).reduce((s,R)=>s+=R,0),0,14)??0}L(pi,"getPartyLuckValue");function O6(E){return["D","C","C+","B-","B","B+","A-","A","A+","A++","S","S+","SS","SS+","SSS"][E]}L(O6,"getLuckString");function n6(E){let A;return E>11?A=v.LUXURY:E>9?A=v.MASTER:E>5?A=v.ROGUE:E>2?A=v.ULTRA:E?A=v.GREAT:A=v.COMMON,Fa(A)}L(n6,"getLuckTextTint");const GB=class GB{constructor(A,s){const R=A instanceof VA?A:null;this.player=s,this.typeId=R?R.type.id:A.typeId,R?"getPregenArgs"in A.type&&(this.typePregenArgs=A.type.getPregenArgs()):A.typePregenArgs&&(this.typePregenArgs=A.typePregenArgs),this.args=R?R.getArgs():A.args||[],this.stackCount=A.stackCount,this.className=R?R.constructor.name:A.className}toModifier(A,s){const R=Y7(this.typeId);if(!R)return null;try{let n=R();n.id=this.typeId,n instanceof cE&&(n=n.generateType(this.player?A.getPlayerParty():A.getEnemyField(),this.typePregenArgs));const I=Reflect.construct(s,[n].concat(this.args).concat(this.stackCount));return I.stackCount>I.getMaxStackCount(A)&&(I.stackCount=I.getMaxStackCount(A)),I}catch(n){return console.error(n),null}}};L(GB,"ModifierData");let mI=GB;var Nt=(E=>(E[E.NONE=0]="NONE",E[E.MISTY=1]="MISTY",E[E.ELECTRIC=2]="ELECTRIC",E[E.GRASSY=3]="GRASSY",E[E.PSYCHIC=4]="PSYCHIC",E))(Nt||{});const HB=class HB{constructor(A,s){this.terrainType=A,this.turnsLeft=s||0}lapse(){return this.turnsLeft?!!--this.turnsLeft:!0}getAttackTypeMultiplier(A){switch(this.terrainType){case 2:if(A===i.ELECTRIC)return 1.3;break;case 3:if(A===i.GRASS)return 1.3;break;case 4:if(A===i.PSYCHIC)return 1.3;break}return 1}isMoveTerrainCancelled(A,s,R){switch(this.terrainType){case 4:if(!R.hasAttr(vR))return R.getPriority(A)>0&&A.getOpponents().some(n=>s.includes(n.getBattlerIndex())&&n.isGrounded())}return!1}};L(HB,"Terrain");let $l=HB;function b7(E){switch(E){case 1:return D.t("terrain:misty");case 2:return D.t("terrain:electric");case 3:return D.t("terrain:grassy");case 4:return D.t("terrain:psychic")}return""}L(b7,"getTerrainName");function k7(E){switch(E){case 1:return[232,136,200];case 2:return[248,248,120];case 3:return[120,200,80];case 4:return[160,64,160]}return[0,0,0]}L(k7,"getTerrainColor");const dB=class dB{constructor(A,s){this.weatherType=A,this.turnsLeft=this.isImmutable()?0:s||0}lapse(){return this.isImmutable()?!0:this.turnsLeft?!!--this.turnsLeft:!0}isImmutable(){switch(this.weatherType){case se.HEAVY_RAIN:case se.HARSH_SUN:case se.STRONG_WINDS:return!0}return!1}isDamaging(){switch(this.weatherType){case se.SANDSTORM:case se.HAIL:return!0}return!1}isTypeDamageImmune(A){switch(this.weatherType){case se.SANDSTORM:return A===i.GROUND||A===i.ROCK||A===i.STEEL;case se.HAIL:return A===i.ICE}return!1}getAttackTypeMultiplier(A){switch(this.weatherType){case se.SUNNY:case se.HARSH_SUN:if(A===i.FIRE)return 1.5;if(A===i.WATER)return .5;break;case se.RAIN:case se.HEAVY_RAIN:if(A===i.FIRE)return .5;if(A===i.WATER)return 1.5;break}return 1}isMoveWeatherCancelled(A,s){const R=A.getMoveType(s);switch(this.weatherType){case se.HARSH_SUN:return s instanceof B&&R===i.WATER;case se.HEAVY_RAIN:return s instanceof B&&R===i.FIRE}return!1}isEffectSuppressed(A){const s=A.getField(!0);for(const R of s){let n=R.getAbility().getAttrs(Ea)[0];if(n||(n=R.hasPassive()?R.getPassiveAbility().getAttrs(Ea)[0]:null),n&&(!this.isImmutable()||n.affectsImmutable))return!0}return!1}};L(dB,"Weather");let FT=dB;function wV(E){switch(E){case se.SUNNY:return D.t("weather:sunnyStartMessage");case se.RAIN:return D.t("weather:rainStartMessage");case se.SANDSTORM:return D.t("weather:sandstormStartMessage");case se.HAIL:return D.t("weather:hailStartMessage");case se.SNOW:return D.t("weather:snowStartMessage");case se.FOG:return D.t("weather:fogStartMessage");case se.HEAVY_RAIN:return D.t("weather:heavyRainStartMessage");case se.HARSH_SUN:return D.t("weather:harshSunStartMessage");case se.STRONG_WINDS:return D.t("weather:strongWindsStartMessage")}return null}L(wV,"getWeatherStartMessage");function Z7(E){switch(E){case se.SUNNY:return D.t("weather:sunnyLapseMessage");case se.RAIN:return D.t("weather:rainLapseMessage");case se.SANDSTORM:return D.t("weather:sandstormLapseMessage");case se.HAIL:return D.t("weather:hailLapseMessage");case se.SNOW:return D.t("weather:snowLapseMessage");case se.FOG:return D.t("weather:fogLapseMessage");case se.HEAVY_RAIN:return D.t("weather:heavyRainLapseMessage");case se.HARSH_SUN:return D.t("weather:harshSunLapseMessage");case se.STRONG_WINDS:return D.t("weather:strongWindsLapseMessage")}return null}L(Z7,"getWeatherLapseMessage");function X7(E,A){switch(E){case se.SANDSTORM:return D.t("weather:sandstormDamageMessage",{pokemonNameWithAffix:ee(A)});case se.HAIL:return D.t("weather:hailDamageMessage",{pokemonNameWithAffix:ee(A)})}return null}L(X7,"getWeatherDamageMessage");function Q7(E){switch(E){case se.SUNNY:return D.t("weather:sunnyClearMessage");case se.RAIN:return D.t("weather:rainClearMessage");case se.SANDSTORM:return D.t("weather:sandstormClearMessage");case se.HAIL:return D.t("weather:hailClearMessage");case se.SNOW:return D.t("weather:snowClearMessage");case se.FOG:return D.t("weather:fogClearMessage");case se.HEAVY_RAIN:return D.t("weather:heavyRainClearMessage");case se.HARSH_SUN:return D.t("weather:harshSunClearMessage");case se.STRONG_WINDS:return D.t("weather:strongWindsClearMessage")}return null}L(Q7,"getWeatherClearMessage");function J7(E){switch(E){case Nt.MISTY:return D.t("terrain:mistyStartMessage");case Nt.ELECTRIC:return D.t("terrain:electricStartMessage");case Nt.GRASSY:return D.t("terrain:grassyStartMessage");case Nt.PSYCHIC:return D.t("terrain:psychicStartMessage");default:return console.warn("getTerrainStartMessage not defined. Using default null"),null}}L(J7,"getTerrainStartMessage");function $7(E){switch(E){case Nt.MISTY:return D.t("terrain:mistyClearMessage");case Nt.ELECTRIC:return D.t("terrain:electricClearMessage");case Nt.GRASSY:return D.t("terrain:grassyClearMessage");case Nt.PSYCHIC:return D.t("terrain:psychicClearMessage");default:return console.warn("getTerrainClearMessage not defined. Using default null"),null}}L($7,"getTerrainClearMessage");function z7(E,A){return A===Nt.MISTY?D.t("terrain:mistyBlockMessage",{pokemonNameWithAffix:ee(E)}):D.t("terrain:defaultBlockMessage",{pokemonNameWithAffix:ee(E),terrainName:b7(A)})}L(z7,"getTerrainBlockMessage");function i6(E){var R,n;let A=[];const s=E.getTimeOfDay()<2;switch(E.biomeType){case N.GRASS:A=[{weatherType:se.NONE,weight:7}],s&&A.push({weatherType:se.SUNNY,weight:3});break;case N.TALL_GRASS:A=[{weatherType:se.NONE,weight:8},{weatherType:se.RAIN,weight:5}],s&&A.push({weatherType:se.SUNNY,weight:8});break;case N.FOREST:A=[{weatherType:se.NONE,weight:8},{weatherType:se.RAIN,weight:5}];break;case N.SEA:A=[{weatherType:se.NONE,weight:3},{weatherType:se.RAIN,weight:12}];break;case N.SWAMP:A=[{weatherType:se.NONE,weight:3},{weatherType:se.RAIN,weight:4},{weatherType:se.FOG,weight:1}];break;case N.BEACH:A=[{weatherType:se.NONE,weight:8},{weatherType:se.RAIN,weight:3}],s&&A.push({weatherType:se.SUNNY,weight:5});break;case N.LAKE:A=[{weatherType:se.NONE,weight:10},{weatherType:se.RAIN,weight:5},{weatherType:se.FOG,weight:1}];break;case N.SEABED:A=[{weatherType:se.RAIN,weight:1}];break;case N.BADLANDS:A=[{weatherType:se.NONE,weight:8},{weatherType:se.SANDSTORM,weight:2}],s&&A.push({weatherType:se.SUNNY,weight:5});break;case N.DESERT:A=[{weatherType:se.SANDSTORM,weight:2}],s&&A.push({weatherType:se.SUNNY,weight:2});break;case N.ICE_CAVE:A=[{weatherType:se.NONE,weight:3},{weatherType:se.SNOW,weight:4},{weatherType:se.HAIL,weight:1}];break;case N.MEADOW:A=[{weatherType:se.NONE,weight:2}],s&&A.push({weatherType:se.SUNNY,weight:2});case N.VOLCANO:A=[{weatherType:s?se.SUNNY:se.NONE,weight:1}];break;case N.GRAVEYARD:A=[{weatherType:se.NONE,weight:3},{weatherType:se.FOG,weight:1}];break;case N.JUNGLE:A=[{weatherType:se.NONE,weight:8},{weatherType:se.RAIN,weight:2}];break;case N.SNOWY_FOREST:A=[{weatherType:se.SNOW,weight:7},{weatherType:se.HAIL,weight:1}];break;case N.ISLAND:A=[{weatherType:se.NONE,weight:5},{weatherType:se.RAIN,weight:1}],s&&A.push({weatherType:se.SUNNY,weight:2});break}if(E.biomeType===N.TOWN&&E.scene.eventManager.isEventActive()&&((n=(R=E.scene.eventManager.activeEvent())==null?void 0:R.weather)==null?void 0:n.length)>0&&E.scene.eventManager.activeEvent().weather.map(I=>A.push(I)),A.length>1){let I=0;A.forEach(S=>I+=S.weight);const a=_e(I);let r=0;for(const S of A)if(r+=S.weight,a<r)return S.weatherType}return A.length?A[0].weatherType:se.NONE}L(i6,"getRandomWeatherType");const fB=class fB{constructor(A){const s=A instanceof hD?A:null;this.biome=s?s.biomeType:A.biome,this.weather=s?s.weather:A.weather?new FT(A.weather.weatherType,A.weather.turnsLeft):null,this.terrain=s?s.terrain:A.terrain?new $l(A.terrain.terrainType,A.terrain.turnsLeft):null,this.tags=[],A.tags&&(this.tags=A.tags.map(R=>BQ(R)))}};L(fB,"ArenaData");let pT=fB;const BB=class BB{constructor(A){const s=A instanceof Ds?A:null;this.trainerType=s?s.config.trainerType:A.trainerType,this.variant=A.hasOwnProperty("variant")?A.variant:A.female?OA.FEMALE:OA.DEFAULT,this.partyTemplateIndex=A.partyMemberTemplateIndex,this.name=A.name,this.partnerName=A.partnerName}toTrainer(A){return new Ds(A,this.trainerType,this.variant,this.partyTemplateIndex,this.name,this.partnerName)}};L(BB,"TrainerData");let WT=BB;var YT=(E=>(E[E.NONE=0]="NONE",E.LINEAR="Linear",E.QUADRATIC="Quad",E.CUBIC="Cubic",E.QUARTIC="Quart",E.QUINTIC="Quint",E.SINUSOIDAL="Sine",E.EXPONENTIAL="Expo",E.CIRCULAR="Circ",E.ELASTIC="Elastic",E.BACK="Back",E.BOUNCE="Bounce",E.STEPPED="Stepped",E))(YT||{}),Fn=(E=>(E[E.REROLL=0]="REROLL",E[E.REWARDS=1]="REWARDS",E[E.SHOP=2]="SHOP",E[E.CHECK_TEAM=3]="CHECK_TEAM",E))(Fn||{});function q7(E){return CR()||UR(),D.t(E)}L(q7,"getTranslation");const LL=new Array(11).fill(null).map((E,A)=>A?{value:(A*10).toString(),label:(A*10).toString()}:{value:"Mute",label:q7("settings:mute")}),j7=new Array(9).fill(null).map((E,A)=>{const s=((A+1)*10).toString();return{value:s,label:s}}),pR=[{value:"Off",label:D.t("settings:off")},{value:"On",label:D.t("settings:on")}],ek=[{value:"Auto",label:D.t("settings:auto")},{value:"Disabled",label:D.t("settings:disabled")}],tk=[{value:"Auto",label:D.t("settings:auto")},{value:"Disabled",label:D.t("settings:disabled"),needConfirmation:!0,confirmationMessage:D.t("settings:confirmDisableTouch")}],I6=[{value:"Rewards",label:D.t("settings:rewards")},{value:"Shop",label:D.t("settings:shop")},{value:"Reroll",label:D.t("settings:reroll")},{value:"Check Team",label:D.t("settings:checkTeam")}],Ak=I6.map(E=>{switch(E.value){case"Rewards":return Fn.REWARDS;case"Shop":return Fn.SHOP;case"Reroll":return Fn.REROLL;case"Check Team":return Fn.CHECK_TEAM;default:throw new Error(`Unknown value: ${E.value}`)}});var OM=(E=>(E[E.GENERAL=0]="GENERAL",E[E.DISPLAY=1]="DISPLAY",E[E.AUDIO=2]="AUDIO",E))(OM||{});const It={Game_Speed:"GAME_SPEED",HP_Bar_Speed:"HP_BAR_SPEED",EXP_Gains_Speed:"EXP_GAINS_SPEED",EXP_Party_Display:"EXP_PARTY_DISPLAY",Skip_Seen_Dialogues:"SKIP_SEEN_DIALOGUES",Egg_Skip:"EGG_SKIP",Battle_Style:"BATTLE_STYLE",Enable_Retries:"ENABLE_RETRIES",Hide_IVs:"HIDE_IVS",Tutorials:"TUTORIALS",Touch_Controls:"TOUCH_CONTROLS",Vibration:"VIBRATION",Language:"LANGUAGE",UI_Theme:"UI_THEME",Window_Type:"WINDOW_TYPE",Money_Format:"MONEY_FORMAT",Damage_Numbers:"DAMAGE_NUMBERS",Move_Animations:"MOVE_ANIMATIONS",Show_Stats_on_Level_Up:"SHOW_LEVEL_UP_STATS",Shop_Cursor_Target:"SHOP_CURSOR_TARGET",Candy_Upgrade_Notification:"CANDY_UPGRADE_NOTIFICATION",Candy_Upgrade_Display:"CANDY_UPGRADE_DISPLAY",Move_Info:"MOVE_INFO",Show_Moveset_Flyout:"SHOW_MOVESET_FLYOUT",Show_Arena_Flyout:"SHOW_ARENA_FLYOUT",Show_Time_Of_Day_Widget:"SHOW_TIME_OF_DAY_WIDGET",Time_Of_Day_Animation:"TIME_OF_DAY_ANIMATION",Sprite_Set:"SPRITE_SET",Fusion_Palette_Swaps:"FUSION_PALETTE_SWAPS",Player_Gender:"PLAYER_GENDER",Type_Hints:"TYPE_HINTS",Master_Volume:"MASTER_VOLUME",BGM_Volume:"BGM_VOLUME",Field_Volume:"FIELD_VOLUME",SE_Volume:"SE_VOLUME",UI_Volume:"UI_SOUND_EFFECTS",Music_Preference:"MUSIC_PREFERENCE",Show_BGM_Bar:"SHOW_BGM_BAR",Move_Touch_Controls:"MOVE_TOUCH_CONTROLS",Shop_Overlay_Opacity:"SHOP_OVERLAY_OPACITY"};var Er=(E=>(E[E.CONSISTENT=0]="CONSISTENT",E[E.MIXED=1]="MIXED",E))(Er||{});const wA=[{key:It.Game_Speed,label:D.t("settings:gameSpeed"),options:[{value:"1",label:"1x"},{value:"1.25",label:"1.25x"},{value:"1.5",label:"1.5x"},{value:"2",label:"2x"},{value:"2.5",label:"2.5x"},{value:"3",label:"3x"},{value:"4",label:"4x"},{value:"5",label:"5x"}],default:3,type:0},{key:It.HP_Bar_Speed,label:D.t("settings:hpBarSpeed"),options:[{value:"Normal",label:D.t("settings:normal")},{value:"Fast",label:D.t("settings:fast")},{value:"Faster",label:D.t("settings:faster")},{value:"Skip",label:D.t("settings:skip")}],default:0,type:0},{key:It.EXP_Gains_Speed,label:D.t("settings:expGainsSpeed"),options:[{value:"Normal",label:D.t("settings:normal")},{value:"Fast",label:D.t("settings:fast")},{value:"Faster",label:D.t("settings:faster")},{value:"Skip",label:D.t("settings:skip")}],default:0,type:0},{key:It.EXP_Party_Display,label:D.t("settings:expPartyDisplay"),options:[{value:"Normal",label:D.t("settings:normal")},{value:"Level Up Notification",label:D.t("settings:levelUpNotifications")},{value:"Skip",label:D.t("settings:skip")}],default:0,type:0},{key:It.Skip_Seen_Dialogues,label:D.t("settings:skipSeenDialogues"),options:pR,default:0,type:0},{key:It.Egg_Skip,label:D.t("settings:eggSkip"),options:[{value:"Never",label:D.t("settings:never")},{value:"Ask",label:D.t("settings:ask")},{value:"Always",label:D.t("settings:always")}],default:1,type:0},{key:It.Battle_Style,label:D.t("settings:battleStyle"),options:[{value:"Switch",label:D.t("settings:switch")},{value:"Set",label:D.t("settings:set")}],default:0,type:0},{key:It.Enable_Retries,label:D.t("settings:enableRetries"),options:pR,default:0,type:0},{key:It.Hide_IVs,label:D.t("settings:hideIvs"),options:pR,default:0,type:0},{key:It.Tutorials,label:D.t("settings:tutorials"),options:pR,default:1,type:0},{key:It.Vibration,label:D.t("settings:vibrations"),options:ek,default:0,type:0},{key:It.Touch_Controls,label:D.t("settings:touchControls"),options:tk,default:0,type:0,isHidden:L(()=>!ll(),"isHidden")},{key:It.Move_Touch_Controls,label:D.t("settings:moveTouchControls"),options:[{value:"Configure",label:D.t("settings:change")}],default:0,type:0,activatable:!0,isHidden:L(()=>!ll(),"isHidden")},{key:It.Language,label:D.t("settings:language"),options:[{value:"English",label:"English"},{value:"Change",label:D.t("settings:change")}],default:0,type:1,requireReload:!0},{key:It.UI_Theme,label:D.t("settings:uiTheme"),options:[{value:"Default",label:D.t("settings:default")},{value:"Legacy",label:D.t("settings:legacy")}],default:0,type:1,requireReload:!0},{key:It.Window_Type,label:D.t("settings:windowType"),options:new Array(5).fill(null).map((E,A)=>{const s=(A+1).toString();return{value:s,label:s}}),default:0,type:1},{key:It.Money_Format,label:D.t("settings:moneyFormat"),options:[{value:"Normal",label:D.t("settings:normal")},{value:"Abbreviated",label:D.t("settings:abbreviated")}],default:0,type:1},{key:It.Damage_Numbers,label:D.t("settings:damageNumbers"),options:[{value:"Off",label:D.t("settings:off")},{value:"Simple",label:D.t("settings:simple")},{value:"Fancy",label:D.t("settings:fancy")}],default:0,type:1},{key:It.Move_Animations,label:D.t("settings:moveAnimations"),options:pR,default:1,type:1},{key:It.Show_Stats_on_Level_Up,label:D.t("settings:showStatsOnLevelUp"),options:pR,default:1,type:1},{key:It.Candy_Upgrade_Notification,label:D.t("settings:candyUpgradeNotification"),options:[{value:"Off",label:D.t("settings:off")},{value:"Passives Only",label:D.t("settings:passivesOnly")},{value:"On",label:D.t("settings:on")}],default:0,type:1},{key:It.Candy_Upgrade_Display,label:D.t("settings:candyUpgradeDisplay"),options:[{value:"Icon",label:D.t("settings:icon")},{value:"Animation",label:D.t("settings:animation")}],default:0,type:1,requireReload:!0},{key:It.Move_Info,label:D.t("settings:moveInfo"),options:pR,default:1,type:1},{key:It.Show_Moveset_Flyout,label:D.t("settings:showMovesetFlyout"),options:pR,default:1,type:1},{key:It.Show_Arena_Flyout,label:D.t("settings:showArenaFlyout"),options:pR,default:1,type:1},{key:It.Show_Time_Of_Day_Widget,label:D.t("settings:showTimeOfDayWidget"),options:pR,default:1,type:1,requireReload:!0},{key:It.Time_Of_Day_Animation,label:D.t("settings:timeOfDayAnimation"),options:[{value:"Bounce",label:D.t("settings:bounce")},{value:"Back",label:D.t("settings:timeOfDay_back")}],default:0,type:1},{key:It.Sprite_Set,label:D.t("settings:spriteSet"),options:[{value:"Consistent",label:D.t("settings:consistent")},{value:"Mixed Animated",label:D.t("settings:mixedAnimated")}],default:0,type:1,requireReload:!0},{key:It.Fusion_Palette_Swaps,label:D.t("settings:fusionPaletteSwaps"),options:pR,default:1,type:1},{key:It.Player_Gender,label:D.t("settings:playerGender"),options:[{value:"Boy",label:D.t("settings:boy")},{value:"Girl",label:D.t("settings:girl")}],default:0,type:1},{key:It.Type_Hints,label:D.t("settings:typeHints"),options:pR,default:0,type:1},{key:It.Show_BGM_Bar,label:D.t("settings:showBgmBar"),options:pR,default:1,type:1},{key:It.Master_Volume,label:D.t("settings:masterVolume"),options:LL,default:5,type:2},{key:It.BGM_Volume,label:D.t("settings:bgmVolume"),options:LL,default:10,type:2},{key:It.Field_Volume,label:D.t("settings:fieldVolume"),options:LL,default:10,type:2},{key:It.SE_Volume,label:D.t("settings:seVolume"),options:LL,default:10,type:2},{key:It.UI_Volume,label:D.t("settings:uiVolume"),options:LL,default:10,type:2},{key:It.Music_Preference,label:D.t("settings:musicPreference"),options:[{value:"Consistent",label:D.t("settings:consistent")},{value:"Mixed",label:D.t("settings:mixed")}],default:1,type:2,requireReload:!0},{key:It.Shop_Cursor_Target,label:D.t("settings:shopCursorTarget"),options:I6,default:0,type:1},{key:It.Shop_Overlay_Opacity,label:D.t("settings:shopOverlayOpacity"),options:j7,default:7,type:1,requireReload:!1}];function a6(E){return wA.findIndex(A=>A.key===E)}L(a6,"settingIndex");function Ek(E){wA.forEach(A=>Hc(E,A.key,A.default))}L(Ek,"resetSettings");function Hc(E,A,s){const R=a6(A);if(R===-1)return!1;switch(wA[R].key){case It.Game_Speed:E.gameSpeed=parseFloat(wA[R].options[s].value.replace("x",""));break;case It.Master_Volume:E.masterVolume=s?parseInt(wA[R].options[s].value)*.01:0,E.updateSoundVolume();break;case It.BGM_Volume:E.bgmVolume=s?parseInt(wA[R].options[s].value)*.01:0,E.updateSoundVolume();break;case It.Field_Volume:E.fieldVolume=s?parseInt(wA[R].options[s].value)*.01:0,E.updateSoundVolume();break;case It.SE_Volume:E.seVolume=s?parseInt(wA[R].options[s].value)*.01:0,E.updateSoundVolume();break;case It.UI_Volume:E.uiVolume=s?parseInt(wA[R].options[s].value)*.01:0;break;case It.Music_Preference:E.musicPreference=s;break;case It.Damage_Numbers:E.damageNumbersMode=s;break;case It.UI_Theme:E.uiTheme=s;break;case It.Window_Type:j8(E,parseInt(wA[R].options[s].value));break;case It.Tutorials:E.enableTutorials=wA[R].options[s].value==="On";break;case It.Move_Info:E.enableMoveInfo=wA[R].options[s].value==="On";break;case It.Enable_Retries:E.enableRetries=wA[R].options[s].value==="On";break;case It.Hide_IVs:E.hideIvs=wA[R].options[s].value==="On";break;case It.Skip_Seen_Dialogues:E.skipSeenDialogues=wA[R].options[s].value==="On";break;case It.Egg_Skip:E.eggSkipPreference=s;break;case It.Battle_Style:E.battleStyle=s;break;case It.Show_BGM_Bar:E.showBgmBar=wA[R].options[s].value==="On";break;case It.Candy_Upgrade_Notification:if(E.candyUpgradeNotification===s)break;E.candyUpgradeNotification=s,E.eventTarget.dispatchEvent(new vh(s));break;case It.Candy_Upgrade_Display:E.candyUpgradeDisplay=s;case It.Money_Format:switch(wA[R].options[s].value){case"Normal":E.moneyFormat=Wh.NORMAL;break;case"Abbreviated":E.moneyFormat=Wh.ABBREVIATED;break}E.updateMoneyText(!1);break;case It.Sprite_Set:E.experimentalSprites=!!s,s&&E.initExpSprites();break;case It.Move_Animations:E.moveAnimations=wA[R].options[s].value==="On";break;case It.Show_Moveset_Flyout:E.showMovesetFlyout=wA[R].options[s].value==="On";break;case It.Show_Arena_Flyout:E.showArenaFlyout=wA[R].options[s].value==="On";break;case It.Show_Time_Of_Day_Widget:E.showTimeOfDayWidget=wA[R].options[s].value==="On";break;case It.Time_Of_Day_Animation:E.timeOfDayAnimation=wA[R].options[s].value==="Bounce"?YT.BOUNCE:YT.BACK;break;case It.Show_Stats_on_Level_Up:E.showLevelUpStats=wA[R].options[s].value==="On";break;case It.Shop_Cursor_Target:const n=Ak[s];E.shopCursorTarget=n;break;case It.EXP_Gains_Speed:E.expGainsSpeed=s;break;case It.EXP_Party_Display:E.expParty=s;break;case It.HP_Bar_Speed:E.hpBarSpeed=s;break;case It.Fusion_Palette_Swaps:E.fusionPaletteSwaps=!!s;break;case It.Player_Gender:if(E.gameData){const a=wA[R].options[s].value==="Girl";E.gameData.gender=a?vt.FEMALE:vt.MALE,E.trainer.setTexture(E.trainer.texture.key.replace(a?"m":"f",a?"f":"m"))}else return!1;break;case It.Touch_Controls:E.enableTouchControls=wA[R].options[s].value!=="Disabled"&&ll();const I=document.getElementById("touchControls");I&&I.classList.toggle("visible",E.enableTouchControls);break;case It.Vibration:E.enableVibration=wA[R].options[s].value!=="Disabled"&&ll();break;case It.Type_Hints:E.typeHints=wA[R].options[s].value==="On";break;case It.Language:if(s&&E.ui){const a=L(()=>{E.ui.revertMode(),E.ui.getHandler().setOptionCursor(-1,0,!0)},"cancelHandler"),r=L(S=>{try{return D.changeLanguage(S),localStorage.setItem("prLang",S),a(),window.location.reload(),!0}catch(o){return console.error("Error changing locale:",o),!1}},"changeLocaleHandler");return E.ui.setOverlayMode(Oe.OPTION_SELECT,{options:[{label:"English",handler:L(()=>r("en"),"handler")},{label:"Español (ES)",handler:L(()=>r("es-ES"),"handler")},{label:"Italiano",handler:L(()=>r("it"),"handler")},{label:"Français",handler:L(()=>r("fr"),"handler")},{label:"Deutsch",handler:L(()=>r("de"),"handler")},{label:"Português (BR)",handler:L(()=>r("pt-BR"),"handler")},{label:"简体中文",handler:L(()=>r("zh-CN"),"handler")},{label:"繁體中文",handler:L(()=>r("zh-TW"),"handler")},{label:"한국어",handler:L(()=>r("ko"),"handler")},{label:"日本語",handler:L(()=>r("ja"),"handler")},{label:D.t("settings:back"),handler:L(()=>a(),"handler")}],maxOptions:7}),!1}break;case It.Shop_Overlay_Opacity:E.updateShopOverlayOpacity(parseInt(wA[R].options[s].value)*.01);break}return!0}L(Hc,"setSetting");var pE=(E=>(E[E.GACHA_MOVE=0]="GACHA_MOVE",E[E.GACHA_LEGENDARY=1]="GACHA_LEGENDARY",E[E.GACHA_SHINY=2]="GACHA_SHINY",E[E.SAME_SPECIES_EGG=3]="SAME_SPECIES_EGG",E[E.EVENT=4]="EVENT",E))(pE||{});const vV=64,VV=256,sk=52,Rk=8,Ok=1,xV=1,nk=412,ik=59,Ik=9,ak=10,rk=25,Lk=50,Nk=100,Tk=50,Sk=128,ok=64,lk=12,Ck=8,bV=8,Uk=192,uk=6,Dk=3,Mk=3,r6=4,L6=1,KL={[e.BULBASAUR]:m.COMMON,[e.CHARMANDER]:m.COMMON,[e.SQUIRTLE]:m.COMMON,[e.CATERPIE]:m.COMMON,[e.WEEDLE]:m.COMMON,[e.PIDGEY]:m.COMMON,[e.RATTATA]:m.COMMON,[e.SPEAROW]:m.COMMON,[e.EKANS]:m.COMMON,[e.SANDSHREW]:m.COMMON,[e.NIDORAN_F]:m.COMMON,[e.NIDORAN_M]:m.COMMON,[e.VULPIX]:m.COMMON,[e.ZUBAT]:m.COMMON,[e.ODDISH]:m.COMMON,[e.PARAS]:m.COMMON,[e.VENONAT]:m.COMMON,[e.DIGLETT]:m.COMMON,[e.MEOWTH]:m.COMMON,[e.PSYDUCK]:m.COMMON,[e.MANKEY]:m.RARE,[e.GROWLITHE]:m.RARE,[e.POLIWAG]:m.COMMON,[e.ABRA]:m.RARE,[e.MACHOP]:m.COMMON,[e.BELLSPROUT]:m.COMMON,[e.TENTACOOL]:m.COMMON,[e.GEODUDE]:m.COMMON,[e.PONYTA]:m.COMMON,[e.SLOWPOKE]:m.COMMON,[e.MAGNEMITE]:m.RARE,[e.FARFETCHD]:m.RARE,[e.DODUO]:m.COMMON,[e.SEEL]:m.COMMON,[e.GRIMER]:m.COMMON,[e.SHELLDER]:m.RARE,[e.GASTLY]:m.RARE,[e.ONIX]:m.COMMON,[e.DROWZEE]:m.COMMON,[e.KRABBY]:m.COMMON,[e.VOLTORB]:m.COMMON,[e.EXEGGCUTE]:m.COMMON,[e.CUBONE]:m.COMMON,[e.LICKITUNG]:m.RARE,[e.KOFFING]:m.COMMON,[e.RHYHORN]:m.RARE,[e.TANGELA]:m.COMMON,[e.KANGASKHAN]:m.RARE,[e.HORSEA]:m.COMMON,[e.GOLDEEN]:m.COMMON,[e.STARYU]:m.COMMON,[e.SCYTHER]:m.RARE,[e.PINSIR]:m.RARE,[e.TAUROS]:m.RARE,[e.MAGIKARP]:m.COMMON,[e.LAPRAS]:m.RARE,[e.DITTO]:m.COMMON,[e.EEVEE]:m.COMMON,[e.PORYGON]:m.RARE,[e.OMANYTE]:m.RARE,[e.KABUTO]:m.RARE,[e.AERODACTYL]:m.RARE,[e.ARTICUNO]:m.EPIC,[e.ZAPDOS]:m.EPIC,[e.MOLTRES]:m.EPIC,[e.DRATINI]:m.RARE,[e.MEWTWO]:m.LEGENDARY,[e.MEW]:m.EPIC,[e.CHIKORITA]:m.COMMON,[e.CYNDAQUIL]:m.COMMON,[e.TOTODILE]:m.COMMON,[e.SENTRET]:m.COMMON,[e.HOOTHOOT]:m.COMMON,[e.LEDYBA]:m.COMMON,[e.SPINARAK]:m.COMMON,[e.CHINCHOU]:m.COMMON,[e.PICHU]:m.RARE,[e.CLEFFA]:m.COMMON,[e.IGGLYBUFF]:m.COMMON,[e.TOGEPI]:m.COMMON,[e.NATU]:m.COMMON,[e.MAREEP]:m.COMMON,[e.HOPPIP]:m.COMMON,[e.AIPOM]:m.COMMON,[e.SUNKERN]:m.COMMON,[e.YANMA]:m.COMMON,[e.WOOPER]:m.COMMON,[e.MURKROW]:m.COMMON,[e.MISDREAVUS]:m.COMMON,[e.UNOWN]:m.COMMON,[e.GIRAFARIG]:m.COMMON,[e.PINECO]:m.COMMON,[e.DUNSPARCE]:m.COMMON,[e.GLIGAR]:m.COMMON,[e.SNUBBULL]:m.COMMON,[e.QWILFISH]:m.COMMON,[e.SHUCKLE]:m.COMMON,[e.HERACROSS]:m.RARE,[e.SNEASEL]:m.RARE,[e.TEDDIURSA]:m.RARE,[e.SLUGMA]:m.COMMON,[e.SWINUB]:m.COMMON,[e.CORSOLA]:m.COMMON,[e.REMORAID]:m.COMMON,[e.DELIBIRD]:m.COMMON,[e.SKARMORY]:m.RARE,[e.HOUNDOUR]:m.COMMON,[e.PHANPY]:m.COMMON,[e.STANTLER]:m.COMMON,[e.SMEARGLE]:m.COMMON,[e.TYROGUE]:m.COMMON,[e.SMOOCHUM]:m.COMMON,[e.ELEKID]:m.COMMON,[e.MAGBY]:m.COMMON,[e.MILTANK]:m.RARE,[e.RAIKOU]:m.EPIC,[e.ENTEI]:m.EPIC,[e.SUICUNE]:m.EPIC,[e.LARVITAR]:m.RARE,[e.LUGIA]:m.LEGENDARY,[e.HO_OH]:m.LEGENDARY,[e.CELEBI]:m.EPIC,[e.TREECKO]:m.COMMON,[e.TORCHIC]:m.COMMON,[e.MUDKIP]:m.COMMON,[e.POOCHYENA]:m.COMMON,[e.ZIGZAGOON]:m.COMMON,[e.WURMPLE]:m.COMMON,[e.LOTAD]:m.COMMON,[e.SEEDOT]:m.COMMON,[e.TAILLOW]:m.COMMON,[e.WINGULL]:m.COMMON,[e.RALTS]:m.RARE,[e.SURSKIT]:m.COMMON,[e.SHROOMISH]:m.COMMON,[e.SLAKOTH]:m.RARE,[e.NINCADA]:m.RARE,[e.WHISMUR]:m.COMMON,[e.MAKUHITA]:m.COMMON,[e.AZURILL]:m.COMMON,[e.NOSEPASS]:m.COMMON,[e.SKITTY]:m.COMMON,[e.SABLEYE]:m.COMMON,[e.MAWILE]:m.COMMON,[e.ARON]:m.COMMON,[e.MEDITITE]:m.COMMON,[e.ELECTRIKE]:m.COMMON,[e.PLUSLE]:m.COMMON,[e.MINUN]:m.COMMON,[e.VOLBEAT]:m.COMMON,[e.ILLUMISE]:m.COMMON,[e.GULPIN]:m.COMMON,[e.CARVANHA]:m.COMMON,[e.WAILMER]:m.COMMON,[e.NUMEL]:m.COMMON,[e.TORKOAL]:m.COMMON,[e.SPOINK]:m.COMMON,[e.SPINDA]:m.COMMON,[e.TRAPINCH]:m.COMMON,[e.CACNEA]:m.COMMON,[e.SWABLU]:m.COMMON,[e.ZANGOOSE]:m.RARE,[e.SEVIPER]:m.COMMON,[e.LUNATONE]:m.COMMON,[e.SOLROCK]:m.COMMON,[e.BARBOACH]:m.COMMON,[e.CORPHISH]:m.COMMON,[e.BALTOY]:m.COMMON,[e.LILEEP]:m.RARE,[e.ANORITH]:m.RARE,[e.FEEBAS]:m.RARE,[e.CASTFORM]:m.COMMON,[e.KECLEON]:m.COMMON,[e.SHUPPET]:m.COMMON,[e.DUSKULL]:m.COMMON,[e.TROPIUS]:m.COMMON,[e.ABSOL]:m.RARE,[e.WYNAUT]:m.COMMON,[e.SNORUNT]:m.COMMON,[e.SPHEAL]:m.COMMON,[e.CLAMPERL]:m.COMMON,[e.RELICANTH]:m.RARE,[e.LUVDISC]:m.COMMON,[e.BAGON]:m.RARE,[e.BELDUM]:m.RARE,[e.REGIROCK]:m.EPIC,[e.REGICE]:m.EPIC,[e.REGISTEEL]:m.EPIC,[e.LATIAS]:m.EPIC,[e.LATIOS]:m.EPIC,[e.KYOGRE]:m.LEGENDARY,[e.GROUDON]:m.LEGENDARY,[e.RAYQUAZA]:m.LEGENDARY,[e.JIRACHI]:m.EPIC,[e.DEOXYS]:m.EPIC,[e.TURTWIG]:m.COMMON,[e.CHIMCHAR]:m.COMMON,[e.PIPLUP]:m.COMMON,[e.STARLY]:m.COMMON,[e.BIDOOF]:m.COMMON,[e.KRICKETOT]:m.COMMON,[e.SHINX]:m.COMMON,[e.BUDEW]:m.COMMON,[e.CRANIDOS]:m.RARE,[e.SHIELDON]:m.RARE,[e.BURMY]:m.COMMON,[e.COMBEE]:m.COMMON,[e.PACHIRISU]:m.COMMON,[e.BUIZEL]:m.COMMON,[e.CHERUBI]:m.COMMON,[e.SHELLOS]:m.COMMON,[e.DRIFLOON]:m.COMMON,[e.BUNEARY]:m.COMMON,[e.GLAMEOW]:m.COMMON,[e.CHINGLING]:m.COMMON,[e.STUNKY]:m.COMMON,[e.BRONZOR]:m.COMMON,[e.BONSLY]:m.COMMON,[e.MIME_JR]:m.COMMON,[e.HAPPINY]:m.RARE,[e.CHATOT]:m.COMMON,[e.SPIRITOMB]:m.RARE,[e.GIBLE]:m.RARE,[e.MUNCHLAX]:m.RARE,[e.RIOLU]:m.RARE,[e.HIPPOPOTAS]:m.COMMON,[e.SKORUPI]:m.COMMON,[e.CROAGUNK]:m.COMMON,[e.CARNIVINE]:m.COMMON,[e.FINNEON]:m.COMMON,[e.MANTYKE]:m.COMMON,[e.SNOVER]:m.COMMON,[e.ROTOM]:m.RARE,[e.UXIE]:m.EPIC,[e.MESPRIT]:m.EPIC,[e.AZELF]:m.EPIC,[e.DIALGA]:m.LEGENDARY,[e.PALKIA]:m.LEGENDARY,[e.HEATRAN]:m.EPIC,[e.REGIGIGAS]:m.LEGENDARY,[e.GIRATINA]:m.LEGENDARY,[e.CRESSELIA]:m.EPIC,[e.PHIONE]:m.EPIC,[e.MANAPHY]:m.EPIC,[e.DARKRAI]:m.EPIC,[e.SHAYMIN]:m.EPIC,[e.ARCEUS]:m.LEGENDARY,[e.VICTINI]:m.EPIC,[e.SNIVY]:m.COMMON,[e.TEPIG]:m.COMMON,[e.OSHAWOTT]:m.COMMON,[e.PATRAT]:m.COMMON,[e.LILLIPUP]:m.COMMON,[e.PURRLOIN]:m.COMMON,[e.PANSAGE]:m.COMMON,[e.PANSEAR]:m.COMMON,[e.PANPOUR]:m.COMMON,[e.MUNNA]:m.COMMON,[e.PIDOVE]:m.COMMON,[e.BLITZLE]:m.COMMON,[e.ROGGENROLA]:m.COMMON,[e.WOOBAT]:m.COMMON,[e.DRILBUR]:m.RARE,[e.AUDINO]:m.RARE,[e.TIMBURR]:m.RARE,[e.TYMPOLE]:m.COMMON,[e.THROH]:m.RARE,[e.SAWK]:m.RARE,[e.SEWADDLE]:m.COMMON,[e.VENIPEDE]:m.COMMON,[e.COTTONEE]:m.COMMON,[e.PETILIL]:m.COMMON,[e.BASCULIN]:m.RARE,[e.SANDILE]:m.RARE,[e.DARUMAKA]:m.RARE,[e.MARACTUS]:m.COMMON,[e.DWEBBLE]:m.COMMON,[e.SCRAGGY]:m.COMMON,[e.SIGILYPH]:m.RARE,[e.YAMASK]:m.COMMON,[e.TIRTOUGA]:m.RARE,[e.ARCHEN]:m.RARE,[e.TRUBBISH]:m.COMMON,[e.ZORUA]:m.COMMON,[e.MINCCINO]:m.COMMON,[e.GOTHITA]:m.COMMON,[e.SOLOSIS]:m.COMMON,[e.DUCKLETT]:m.COMMON,[e.VANILLITE]:m.COMMON,[e.DEERLING]:m.COMMON,[e.EMOLGA]:m.COMMON,[e.KARRABLAST]:m.COMMON,[e.FOONGUS]:m.COMMON,[e.FRILLISH]:m.COMMON,[e.ALOMOMOLA]:m.RARE,[e.JOLTIK]:m.COMMON,[e.FERROSEED]:m.COMMON,[e.KLINK]:m.COMMON,[e.TYNAMO]:m.COMMON,[e.ELGYEM]:m.COMMON,[e.LITWICK]:m.COMMON,[e.AXEW]:m.RARE,[e.CUBCHOO]:m.COMMON,[e.CRYOGONAL]:m.RARE,[e.SHELMET]:m.COMMON,[e.STUNFISK]:m.COMMON,[e.MIENFOO]:m.COMMON,[e.DRUDDIGON]:m.RARE,[e.GOLETT]:m.COMMON,[e.PAWNIARD]:m.RARE,[e.BOUFFALANT]:m.RARE,[e.RUFFLET]:m.COMMON,[e.VULLABY]:m.COMMON,[e.HEATMOR]:m.RARE,[e.DURANT]:m.RARE,[e.DEINO]:m.RARE,[e.LARVESTA]:m.RARE,[e.COBALION]:m.EPIC,[e.TERRAKION]:m.EPIC,[e.VIRIZION]:m.EPIC,[e.TORNADUS]:m.EPIC,[e.THUNDURUS]:m.EPIC,[e.RESHIRAM]:m.LEGENDARY,[e.ZEKROM]:m.LEGENDARY,[e.LANDORUS]:m.EPIC,[e.KYUREM]:m.LEGENDARY,[e.KELDEO]:m.EPIC,[e.MELOETTA]:m.EPIC,[e.GENESECT]:m.EPIC,[e.CHESPIN]:m.COMMON,[e.FENNEKIN]:m.COMMON,[e.FROAKIE]:m.COMMON,[e.BUNNELBY]:m.COMMON,[e.FLETCHLING]:m.COMMON,[e.SCATTERBUG]:m.COMMON,[e.LITLEO]:m.COMMON,[e.FLABEBE]:m.COMMON,[e.SKIDDO]:m.COMMON,[e.PANCHAM]:m.COMMON,[e.FURFROU]:m.COMMON,[e.ESPURR]:m.COMMON,[e.HONEDGE]:m.RARE,[e.SPRITZEE]:m.COMMON,[e.SWIRLIX]:m.COMMON,[e.INKAY]:m.COMMON,[e.BINACLE]:m.COMMON,[e.SKRELP]:m.COMMON,[e.CLAUNCHER]:m.COMMON,[e.HELIOPTILE]:m.COMMON,[e.TYRUNT]:m.RARE,[e.AMAURA]:m.RARE,[e.HAWLUCHA]:m.RARE,[e.DEDENNE]:m.COMMON,[e.CARBINK]:m.COMMON,[e.GOOMY]:m.RARE,[e.KLEFKI]:m.COMMON,[e.PHANTUMP]:m.COMMON,[e.PUMPKABOO]:m.COMMON,[e.BERGMITE]:m.COMMON,[e.NOIBAT]:m.RARE,[e.XERNEAS]:m.LEGENDARY,[e.YVELTAL]:m.LEGENDARY,[e.ZYGARDE]:m.LEGENDARY,[e.DIANCIE]:m.EPIC,[e.HOOPA]:m.EPIC,[e.VOLCANION]:m.EPIC,[e.ETERNAL_FLOETTE]:m.EPIC,[e.ROWLET]:m.COMMON,[e.LITTEN]:m.COMMON,[e.POPPLIO]:m.COMMON,[e.PIKIPEK]:m.COMMON,[e.YUNGOOS]:m.COMMON,[e.GRUBBIN]:m.COMMON,[e.CRABRAWLER]:m.COMMON,[e.ORICORIO]:m.COMMON,[e.CUTIEFLY]:m.COMMON,[e.ROCKRUFF]:m.COMMON,[e.WISHIWASHI]:m.COMMON,[e.MAREANIE]:m.COMMON,[e.MUDBRAY]:m.COMMON,[e.DEWPIDER]:m.COMMON,[e.FOMANTIS]:m.COMMON,[e.MORELULL]:m.COMMON,[e.SALANDIT]:m.COMMON,[e.STUFFUL]:m.COMMON,[e.BOUNSWEET]:m.COMMON,[e.COMFEY]:m.RARE,[e.ORANGURU]:m.RARE,[e.PASSIMIAN]:m.RARE,[e.WIMPOD]:m.COMMON,[e.SANDYGAST]:m.COMMON,[e.PYUKUMUKU]:m.COMMON,[e.TYPE_NULL]:m.EPIC,[e.MINIOR]:m.RARE,[e.KOMALA]:m.COMMON,[e.TURTONATOR]:m.RARE,[e.TOGEDEMARU]:m.COMMON,[e.MIMIKYU]:m.RARE,[e.BRUXISH]:m.RARE,[e.DRAMPA]:m.RARE,[e.DHELMISE]:m.RARE,[e.JANGMO_O]:m.RARE,[e.TAPU_KOKO]:m.EPIC,[e.TAPU_LELE]:m.EPIC,[e.TAPU_BULU]:m.EPIC,[e.TAPU_FINI]:m.EPIC,[e.COSMOG]:m.LEGENDARY,[e.NIHILEGO]:m.EPIC,[e.BUZZWOLE]:m.EPIC,[e.PHEROMOSA]:m.EPIC,[e.XURKITREE]:m.EPIC,[e.CELESTEELA]:m.EPIC,[e.KARTANA]:m.EPIC,[e.GUZZLORD]:m.EPIC,[e.NECROZMA]:m.LEGENDARY,[e.MAGEARNA]:m.EPIC,[e.MARSHADOW]:m.EPIC,[e.POIPOLE]:m.EPIC,[e.STAKATAKA]:m.EPIC,[e.BLACEPHALON]:m.EPIC,[e.ZERAORA]:m.EPIC,[e.MELTAN]:m.EPIC,[e.ALOLA_RATTATA]:m.COMMON,[e.ALOLA_SANDSHREW]:m.RARE,[e.ALOLA_VULPIX]:m.RARE,[e.ALOLA_DIGLETT]:m.RARE,[e.ALOLA_MEOWTH]:m.RARE,[e.ALOLA_GEODUDE]:m.RARE,[e.ALOLA_GRIMER]:m.RARE,[e.GROOKEY]:m.COMMON,[e.SCORBUNNY]:m.COMMON,[e.SOBBLE]:m.COMMON,[e.SKWOVET]:m.COMMON,[e.ROOKIDEE]:m.COMMON,[e.BLIPBUG]:m.COMMON,[e.NICKIT]:m.COMMON,[e.GOSSIFLEUR]:m.COMMON,[e.WOOLOO]:m.COMMON,[e.CHEWTLE]:m.COMMON,[e.YAMPER]:m.COMMON,[e.ROLYCOLY]:m.COMMON,[e.APPLIN]:m.COMMON,[e.SILICOBRA]:m.COMMON,[e.CRAMORANT]:m.COMMON,[e.ARROKUDA]:m.COMMON,[e.TOXEL]:m.COMMON,[e.SIZZLIPEDE]:m.COMMON,[e.CLOBBOPUS]:m.COMMON,[e.SINISTEA]:m.COMMON,[e.HATENNA]:m.COMMON,[e.IMPIDIMP]:m.COMMON,[e.MILCERY]:m.COMMON,[e.FALINKS]:m.RARE,[e.PINCURCHIN]:m.COMMON,[e.SNOM]:m.COMMON,[e.STONJOURNER]:m.COMMON,[e.EISCUE]:m.COMMON,[e.INDEEDEE]:m.RARE,[e.MORPEKO]:m.COMMON,[e.CUFANT]:m.COMMON,[e.DRACOZOLT]:m.RARE,[e.ARCTOZOLT]:m.RARE,[e.DRACOVISH]:m.RARE,[e.ARCTOVISH]:m.RARE,[e.DURALUDON]:m.RARE,[e.DREEPY]:m.RARE,[e.ZACIAN]:m.LEGENDARY,[e.ZAMAZENTA]:m.LEGENDARY,[e.ETERNATUS]:m.LEGENDARY,[e.KUBFU]:m.EPIC,[e.ZARUDE]:m.EPIC,[e.REGIELEKI]:m.EPIC,[e.REGIDRAGO]:m.EPIC,[e.GLASTRIER]:m.EPIC,[e.SPECTRIER]:m.EPIC,[e.CALYREX]:m.LEGENDARY,[e.ENAMORUS]:m.EPIC,[e.GALAR_MEOWTH]:m.RARE,[e.GALAR_PONYTA]:m.RARE,[e.GALAR_SLOWPOKE]:m.RARE,[e.GALAR_FARFETCHD]:m.RARE,[e.GALAR_ARTICUNO]:m.EPIC,[e.GALAR_ZAPDOS]:m.EPIC,[e.GALAR_MOLTRES]:m.EPIC,[e.GALAR_CORSOLA]:m.RARE,[e.GALAR_ZIGZAGOON]:m.RARE,[e.GALAR_DARUMAKA]:m.RARE,[e.GALAR_YAMASK]:m.RARE,[e.GALAR_STUNFISK]:m.RARE,[e.HISUI_GROWLITHE]:m.RARE,[e.HISUI_VOLTORB]:m.RARE,[e.HISUI_QWILFISH]:m.RARE,[e.HISUI_SNEASEL]:m.RARE,[e.HISUI_ZORUA]:m.RARE,[e.SPRIGATITO]:m.COMMON,[e.FUECOCO]:m.COMMON,[e.QUAXLY]:m.COMMON,[e.LECHONK]:m.COMMON,[e.TAROUNTULA]:m.COMMON,[e.NYMBLE]:m.COMMON,[e.PAWMI]:m.COMMON,[e.TANDEMAUS]:m.RARE,[e.FIDOUGH]:m.COMMON,[e.SMOLIV]:m.COMMON,[e.SQUAWKABILLY]:m.COMMON,[e.NACLI]:m.RARE,[e.CHARCADET]:m.RARE,[e.TADBULB]:m.COMMON,[e.WATTREL]:m.COMMON,[e.MASCHIFF]:m.COMMON,[e.SHROODLE]:m.COMMON,[e.BRAMBLIN]:m.COMMON,[e.TOEDSCOOL]:m.COMMON,[e.KLAWF]:m.COMMON,[e.CAPSAKID]:m.COMMON,[e.RELLOR]:m.COMMON,[e.FLITTLE]:m.COMMON,[e.TINKATINK]:m.RARE,[e.WIGLETT]:m.COMMON,[e.BOMBIRDIER]:m.COMMON,[e.FINIZEN]:m.RARE,[e.VAROOM]:m.RARE,[e.CYCLIZAR]:m.RARE,[e.ORTHWORM]:m.RARE,[e.GLIMMET]:m.RARE,[e.GREAVARD]:m.COMMON,[e.FLAMIGO]:m.RARE,[e.CETODDLE]:m.COMMON,[e.VELUZA]:m.RARE,[e.DONDOZO]:m.RARE,[e.TATSUGIRI]:m.RARE,[e.GREAT_TUSK]:m.EPIC,[e.SCREAM_TAIL]:m.EPIC,[e.BRUTE_BONNET]:m.EPIC,[e.FLUTTER_MANE]:m.EPIC,[e.SLITHER_WING]:m.EPIC,[e.SANDY_SHOCKS]:m.EPIC,[e.IRON_TREADS]:m.EPIC,[e.IRON_BUNDLE]:m.EPIC,[e.IRON_HANDS]:m.EPIC,[e.IRON_JUGULIS]:m.EPIC,[e.IRON_MOTH]:m.EPIC,[e.IRON_THORNS]:m.EPIC,[e.FRIGIBAX]:m.RARE,[e.GIMMIGHOUL]:m.RARE,[e.WO_CHIEN]:m.EPIC,[e.CHIEN_PAO]:m.EPIC,[e.TING_LU]:m.EPIC,[e.CHI_YU]:m.EPIC,[e.ROARING_MOON]:m.EPIC,[e.IRON_VALIANT]:m.EPIC,[e.KORAIDON]:m.LEGENDARY,[e.MIRAIDON]:m.LEGENDARY,[e.WALKING_WAKE]:m.EPIC,[e.IRON_LEAVES]:m.EPIC,[e.POLTCHAGEIST]:m.RARE,[e.OKIDOGI]:m.EPIC,[e.MUNKIDORI]:m.EPIC,[e.FEZANDIPITI]:m.EPIC,[e.OGERPON]:m.EPIC,[e.GOUGING_FIRE]:m.EPIC,[e.RAGING_BOLT]:m.EPIC,[e.IRON_BOULDER]:m.EPIC,[e.IRON_CROWN]:m.EPIC,[e.TERAPAGOS]:m.LEGENDARY,[e.PECHARUNT]:m.EPIC,[e.PALDEA_TAUROS]:m.RARE,[e.PALDEA_WOOPER]:m.RARE,[e.BLOODMOON_URSALUNA]:m.EPIC},FI=1073741824,gB=class gB{get id(){return this._id}get tier(){return this._tier}get sourceType(){return this._sourceType}get hatchWaves(){return this._hatchWaves}set hatchWaves(A){this._hatchWaves=A}get timestamp(){return this._timestamp}get species(){return this._species}get isShiny(){return this._isShiny}get variantTier(){return this._variantTier}get eggMoveIndex(){return this._eggMoveIndex}get overrideHiddenAbility(){return this._overrideHiddenAbility}constructor(A){const s=L(R=>{this._sourceType=R==null?void 0:R.sourceType,this._tier=(R==null?void 0:R.tier)??Ye.EGG_TIER_OVERRIDE??this.rollEggTier(),R!=null&&R.pulled&&this.checkForPityTierOverrides(R.scene),this._id=(R==null?void 0:R.id)??hA(FI,FI*this._tier),this._sourceType=(R==null?void 0:R.sourceType)??void 0,this._hatchWaves=(R==null?void 0:R.hatchWaves)??this.getEggTierDefaultHatchWaves(),this._timestamp=(R==null?void 0:R.timestamp)??new Date().getTime(),this._isShiny=(R==null?void 0:R.isShiny)??(Ye.EGG_SHINY_OVERRIDE||this.rollShiny()),this._variantTier=(R==null?void 0:R.variantTier)??Ye.EGG_VARIANT_OVERRIDE??this.rollVariant(),this._species=(R==null?void 0:R.species)??this.rollSpecies(R.scene),this._overrideHiddenAbility=(R==null?void 0:R.overrideHiddenAbility)??!1,R!=null&&R.species&&(this._tier=this.getEggTier(),this._hatchWaves=R.hatchWaves??this.getEggTierDefaultHatchWaves()),this._species&&!xe(this._species).hasVariants()&&(this._variantTier=mO.STANDARD),this._eggMoveIndex=(R==null?void 0:R.eggMoveIndex)??this.rollEggMoveIndex(),R!=null&&R.pulled&&(this.increasePullStatistic(R.scene),this.addEggToGameData(R.scene))},"generateEggProperties");if(A!=null&&A.scene){const R=tM(24);A==null||A.scene.executeWithSeedOffset(()=>{s(A)},0,R)}else s(A);this._eggDescriptor=A==null?void 0:A.eggDescriptor}isManaphyEgg(){return this._species===e.PHIONE||this._species===e.MANAPHY||this._tier===m.COMMON&&!(this._id%204)&&!this._species}getKey(){return this.isManaphyEgg()?"manaphy":this._tier.toString()}generatePlayerPokemon(A){let s;const R=L(n=>{this._species||(this._isShiny=this.rollShiny(),this._species=this.rollSpecies(n));let I=xe(this._species);this._species===e.PHIONE&&this._sourceType===pE.SAME_SPECIES_EGG&&(I=xe(_e(bV)?e.PHIONE:e.MANAPHY));let a;const r=this._sourceType===pE.SAME_SPECIES_EGG&&!_e(Ck),S=this._sourceType!==pE.SAME_SPECIES_EGG&&!_e(Uk);I.abilityHidden&&(this._overrideHiddenAbility||r||S)&&(a=2),s=n.addPlayerPokemon(I,1,a,void 0,void 0,!1),s.shiny=this._isShiny,s.variant=this._variantTier;const o=$d(_e(4294967295));for(let l=0;l<s.ivs.length;l++)s.ivs[l]=Math.max(s.ivs[l],o[l])},"generatePlayerPokemonHelper");return s=s,A.executeWithSeedOffset(()=>{R(A)},this._id,FI.toString()),s}addEggToGameData(A){A.gameData.eggs.push(this)}getEggDescriptor(){if(this.isManaphyEgg())return"Manaphy";switch(this.tier){case m.RARE:return D.t("egg:greatTier");case m.EPIC:return D.t("egg:ultraTier");case m.LEGENDARY:return D.t("egg:masterTier");default:return D.t("egg:defaultTier")}}getEggHatchWavesMessage(){return this.hatchWaves<=5?D.t("egg:hatchWavesMessageSoon"):this.hatchWaves<=15?D.t("egg:hatchWavesMessageClose"):this.hatchWaves<=50?D.t("egg:hatchWavesMessageNotClose"):D.t("egg:hatchWavesMessageLongTime")}getEggTypeDescriptor(A){switch(this.sourceType){case pE.SAME_SPECIES_EGG:return this._eggDescriptor??D.t("egg:sameSpeciesEgg",{species:xe(this._species).getName()});case pE.GACHA_LEGENDARY:return this._eggDescriptor??`${D.t("egg:gachaTypeLegendary")} (${xe(dc(A,this.timestamp)).getName()})`;case pE.GACHA_SHINY:return this._eggDescriptor??D.t("egg:gachaTypeShiny");case pE.GACHA_MOVE:return this._eggDescriptor??D.t("egg:gachaTypeMove");case pE.EVENT:return this._eggDescriptor??D.t("egg:eventType");default:return console.warn("getEggTypeDescriptor case not defined. Returning default empty string"),""}}rollEggMoveIndex(){let A=uk;switch(this._sourceType){case pE.SAME_SPECIES_EGG:A=Dk;break;case pE.GACHA_MOVE:A=Mk;break}const s=this.isManaphyEgg()?2:Math.pow(2,3-this.tier);return _e(A*s)?_e(3):3}getEggTierDefaultHatchWaves(A){if(this._species===e.PHIONE||this._species===e.MANAPHY)return Tk;switch(A??this._tier){case m.COMMON:return ak;case m.RARE:return rk;case m.EPIC:return Lk}return Nk}rollEggTier(){const A=this._sourceType===pE.GACHA_LEGENDARY?xV:0,s=hA(256);return s>=sk+A?m.COMMON:s>=Rk+A?m.RARE:s>=Ok+A?m.EPIC:m.LEGENDARY}rollSpecies(A){if(!A)return null;if(this.isManaphyEgg())return _e(bV)!==1?e.PHIONE:e.MANAPHY;if(this.tier===m.LEGENDARY&&this._sourceType===pE.GACHA_LEGENDARY&&!_e(2))return dc(A,this.timestamp);let s,R;switch(this.tier){case m.RARE:s=4,R=5;break;case m.EPIC:s=6,R=7;break;case m.LEGENDARY:s=8,R=9;break;default:s=1,R=3;break}const n=[e.PHIONE,e.MANAPHY,e.ETERNATUS];let I=Object.keys(KL).filter(l=>KL[l]===this.tier).map(l=>parseInt(l)).filter(l=>!QA.hasOwnProperty(l)&&xe(l).isObtainable()&&n.indexOf(l)===-1);if(A.gameData.unlockPity[this.tier]>=9){const l=I.filter(C=>!A.gameData.dexData[C].caughtAttr&&!A.gameData.eggs.some(M=>M.species===C));l.length&&(I=l)}this.variantTier&&(this.variantTier===mO.RARE||this.variantTier===mO.EPIC)&&(I=I.filter(l=>xe(l).hasVariants()));let a=0;const r=[];for(const l of I){const C=Phaser.Math.Clamp(KA[l],s,R),M=Math.floor(((R-C)/(R-s+1)*1.5+1)*100);r.push(a+M),a+=M}let S;const o=_e(a);for(let l=0;l<r.length;l++)if(o<r[l]){S=I[l];break}return S=S,A.gameData.dexData[S].caughtAttr||A.gameData.eggs.some(l=>l.species===S)?A.gameData.unlockPity[this.tier]=Math.min(A.gameData.unlockPity[this.tier]+1,10):A.gameData.unlockPity[this.tier]=0,S}rollShiny(){let A=Sk;switch(this._sourceType){case pE.GACHA_SHINY:A=ok;break;case pE.SAME_SPECIES_EGG:A=lk;break}return!_e(A)}rollVariant(){if(!this.isShiny)return mO.STANDARD;const A=_e(10);return A>=r6?mO.STANDARD:A>=L6?mO.RARE:mO.EPIC}checkForPityTierOverrides(A){const s=this._sourceType===pE.GACHA_LEGENDARY?xV:0;A.gameData.eggPity[m.RARE]+=1,A.gameData.eggPity[m.EPIC]+=1,A.gameData.eggPity[m.LEGENDARY]+=1+s,A.gameData.eggPity[m.LEGENDARY]>=nk&&this._tier===m.COMMON?this._tier=m.LEGENDARY:A.gameData.eggPity[m.EPIC]>=ik&&this._tier===m.COMMON?this._tier=m.EPIC:A.gameData.eggPity[m.RARE]>=Ik&&this._tier===m.COMMON&&(this._tier=m.RARE),A.gameData.eggPity[this._tier]=0}increasePullStatistic(A){if(A.gameData.gameStats.eggsPulled++,this.isManaphyEgg()){A.gameData.gameStats.manaphyEggsPulled++,this._hatchWaves=this.getEggTierDefaultHatchWaves(m.EPIC);return}switch(this.tier){case m.RARE:A.gameData.gameStats.rareEggsPulled++;break;case m.EPIC:A.gameData.gameStats.epicEggsPulled++;break;case m.LEGENDARY:A.gameData.gameStats.legendaryEggsPulled++;break}}getEggTier(){return KL[this.species]}};L(gB,"Egg");let gi=gB;function hk(){return Object.entries(KL).filter(E=>E[1]===m.LEGENDARY).map(E=>parseInt(E[0])).filter(E=>xe(E).isObtainable()&&E!==e.ETERNATUS)}L(hk,"getValidLegendaryGachaSpecies");function dc(E,A){const s=hk();let R;const I=new Date(A).getTime(),a=Math.floor(Math.floor(I/864e5)/s.length),r=Math.floor(I/864e5)%s.length;return E.executeWithSeedOffset(()=>{R=Phaser.Math.RND.shuffle(s)[r]},a,FI.toString()),R=R,R}L(dc,"getLegendaryGachaSpeciesForTimestamp");function Ya(E){return KL[E.getRootSpeciesId()]}L(Ya,"getEggTierForSpecies");const KB=class KB{constructor(A){const s=A instanceof gi?A:null;this.id=s?s.id:A.id,this.tier=s?s.tier:A.tier??Math.floor(this.id/FI),A.species===0?this.sourceType=A.gachaType??A.sourceType:this.sourceType=s?s.sourceType:A.sourceType,this.hatchWaves=s?s.hatchWaves:A.hatchWaves,this.timestamp=s?s.timestamp:A.timestamp,this.variantTier=s?s.variantTier:A.variantTier,this.isShiny=s?s.isShiny:A.isShiny,this.species=s?s.species:A.species,this.eggMoveIndex=s?s.eggMoveIndex:A.eggMoveIndex,this.overrideHiddenAbility=s?s.overrideHiddenAbility:A.overrideHiddenAbility}toEgg(){return this.species?new gi({id:this.id,tier:this.tier,sourceType:this.sourceType,hatchWaves:this.hatchWaves,timestamp:this.timestamp,variantTier:this.variantTier,isShiny:this.isShiny,species:this.species,eggMoveIndex:this.eggMoveIndex,overrideHiddenAbility:this.overrideHiddenAbility}):new gi({id:this.id,hatchWaves:this.hatchWaves,sourceType:this.sourceType,timestamp:this.timestamp,tier:Math.floor(this.id/FI)})}};L(KB,"EggData");let zl=KB;var N6={exports:{}},CM={exports:{}};const ck={},_k=Object.freeze(Object.defineProperty({__proto__:null,default:ck},Symbol.toStringTag,{value:"Module"})),Pk=M8(_k);var kV;function cA(){return kV||(kV=1,function(E,A){(function(s,R){E.exports=R()})(AA,function(){var s=s||function(R,n){var I;if(typeof window<"u"&&window.crypto&&(I=window.crypto),typeof self<"u"&&self.crypto&&(I=self.crypto),typeof globalThis<"u"&&globalThis.crypto&&(I=globalThis.crypto),!I&&typeof window<"u"&&window.msCrypto&&(I=window.msCrypto),!I&&typeof AA<"u"&&AA.crypto&&(I=AA.crypto),!I&&typeof UL=="function")try{I=Pk}catch{}var a=L(function(){if(I){if(typeof I.getRandomValues=="function")try{return I.getRandomValues(new Uint32Array(1))[0]}catch{}if(typeof I.randomBytes=="function")try{return I.randomBytes(4).readInt32LE()}catch{}}throw new Error("Native crypto module could not be used to get secure random number.")},"cryptoSecureRandomInt"),r=Object.create||function(){function H(){}return L(H,"F"),function(f){var K;return H.prototype=f,K=new H,H.prototype=null,K}}(),S={},o=S.lib={},l=o.Base=function(){return{extend:L(function(H){var f=r(this);return H&&f.mixIn(H),(!f.hasOwnProperty("init")||this.init===f.init)&&(f.init=function(){f.$super.init.apply(this,arguments)}),f.init.prototype=f,f.$super=this,f},"extend"),create:L(function(){var H=this.extend();return H.init.apply(H,arguments),H},"create"),init:L(function(){},"init"),mixIn:L(function(H){for(var f in H)H.hasOwnProperty(f)&&(this[f]=H[f]);H.hasOwnProperty("toString")&&(this.toString=H.toString)},"mixIn"),clone:L(function(){return this.init.prototype.extend(this)},"clone")}}(),C=o.WordArray=l.extend({init:L(function(H,f){H=this.words=H||[],f!=n?this.sigBytes=f:this.sigBytes=H.length*4},"init"),toString:L(function(H){return(H||u).stringify(this)},"toString"),concat:L(function(H){var f=this.words,K=H.words,W=this.sigBytes,V=H.sigBytes;if(this.clamp(),W%4)for(var k=0;k<V;k++){var Q=K[k>>>2]>>>24-k%4*8&255;f[W+k>>>2]|=Q<<24-(W+k)%4*8}else for(var j=0;j<V;j+=4)f[W+j>>>2]=K[j>>>2];return this.sigBytes+=V,this},"concat"),clamp:L(function(){var H=this.words,f=this.sigBytes;H[f>>>2]&=4294967295<<32-f%4*8,H.length=R.ceil(f/4)},"clamp"),clone:L(function(){var H=l.clone.call(this);return H.words=this.words.slice(0),H},"clone"),random:L(function(H){for(var f=[],K=0;K<H;K+=4)f.push(a());return new C.init(f,H)},"random")}),M=S.enc={},u=M.Hex={stringify:L(function(H){for(var f=H.words,K=H.sigBytes,W=[],V=0;V<K;V++){var k=f[V>>>2]>>>24-V%4*8&255;W.push((k>>>4).toString(16)),W.push((k&15).toString(16))}return W.join("")},"stringify"),parse:L(function(H){for(var f=H.length,K=[],W=0;W<f;W+=2)K[W>>>3]|=parseInt(H.substr(W,2),16)<<24-W%8*4;return new C.init(K,f/2)},"parse")},h=M.Latin1={stringify:L(function(H){for(var f=H.words,K=H.sigBytes,W=[],V=0;V<K;V++){var k=f[V>>>2]>>>24-V%4*8&255;W.push(String.fromCharCode(k))}return W.join("")},"stringify"),parse:L(function(H){for(var f=H.length,K=[],W=0;W<f;W++)K[W>>>2]|=(H.charCodeAt(W)&255)<<24-W%4*8;return new C.init(K,f)},"parse")},P=M.Utf8={stringify:L(function(H){try{return decodeURIComponent(escape(h.stringify(H)))}catch{throw new Error("Malformed UTF-8 data")}},"stringify"),parse:L(function(H){return h.parse(unescape(encodeURIComponent(H)))},"parse")},G=o.BufferedBlockAlgorithm=l.extend({reset:L(function(){this._data=new C.init,this._nDataBytes=0},"reset"),_append:L(function(H){typeof H=="string"&&(H=P.parse(H)),this._data.concat(H),this._nDataBytes+=H.sigBytes},"_append"),_process:L(function(H){var f,K=this._data,W=K.words,V=K.sigBytes,k=this.blockSize,Q=k*4,j=V/Q;H?j=R.ceil(j):j=R.max((j|0)-this._minBufferSize,0);var J=j*k,ne=R.min(J*4,V);if(J){for(var x=0;x<J;x+=k)this._doProcessBlock(W,x);f=W.splice(0,J),K.sigBytes-=ne}return new C.init(f,ne)},"_process"),clone:L(function(){var H=l.clone.call(this);return H._data=this._data.clone(),H},"clone"),_minBufferSize:0});o.Hasher=G.extend({cfg:l.extend(),init:L(function(H){this.cfg=this.cfg.extend(H),this.reset()},"init"),reset:L(function(){G.reset.call(this),this._doReset()},"reset"),update:L(function(H){return this._append(H),this._process(),this},"update"),finalize:L(function(H){H&&this._append(H);var f=this._doFinalize();return f},"finalize"),blockSize:16,_createHelper:L(function(H){return function(f,K){return new H.init(K).finalize(f)}},"_createHelper"),_createHmacHelper:L(function(H){return function(f,K){return new d.HMAC.init(H,K).finalize(f)}},"_createHmacHelper")});var d=S.algo={};return S}(Math);return s})}(CM)),CM.exports}L(cA,"requireCore");var UM={exports:{}},ZV;function nM(){return ZV||(ZV=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){return function(R){var n=s,I=n.lib,a=I.Base,r=I.WordArray,S=n.x64={};S.Word=a.extend({init:L(function(o,l){this.high=o,this.low=l},"init")}),S.WordArray=a.extend({init:L(function(o,l){o=this.words=o||[],l!=R?this.sigBytes=l:this.sigBytes=o.length*8},"init"),toX32:L(function(){for(var o=this.words,l=o.length,C=[],M=0;M<l;M++){var u=o[M];C.push(u.high),C.push(u.low)}return r.create(C,this.sigBytes)},"toX32"),clone:L(function(){for(var o=a.clone.call(this),l=o.words=this.words.slice(0),C=l.length,M=0;M<C;M++)l[M]=l[M].clone();return o},"clone")})}(),s})}(UM)),UM.exports}L(nM,"requireX64Core");var uM={exports:{}},XV;function Gk(){return XV||(XV=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){return function(){if(typeof ArrayBuffer=="function"){var R=s,n=R.lib,I=n.WordArray,a=I.init,r=I.init=function(S){if(S instanceof ArrayBuffer&&(S=new Uint8Array(S)),(S instanceof Int8Array||typeof Uint8ClampedArray<"u"&&S instanceof Uint8ClampedArray||S instanceof Int16Array||S instanceof Uint16Array||S instanceof Int32Array||S instanceof Uint32Array||S instanceof Float32Array||S instanceof Float64Array)&&(S=new Uint8Array(S.buffer,S.byteOffset,S.byteLength)),S instanceof Uint8Array){for(var o=S.byteLength,l=[],C=0;C<o;C++)l[C>>>2]|=S[C]<<24-C%4*8;a.call(this,l,o)}else a.apply(this,arguments)};r.prototype=I}}(),s.lib.WordArray})}(uM)),uM.exports}L(Gk,"requireLibTypedarrays");var DM={exports:{}},QV;function Hk(){return QV||(QV=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,a=R.enc;a.Utf16=a.Utf16BE={stringify:L(function(S){for(var o=S.words,l=S.sigBytes,C=[],M=0;M<l;M+=2){var u=o[M>>>2]>>>16-M%4*8&65535;C.push(String.fromCharCode(u))}return C.join("")},"stringify"),parse:L(function(S){for(var o=S.length,l=[],C=0;C<o;C++)l[C>>>1]|=S.charCodeAt(C)<<16-C%2*16;return I.create(l,o*2)},"parse")},a.Utf16LE={stringify:L(function(S){for(var o=S.words,l=S.sigBytes,C=[],M=0;M<l;M+=2){var u=r(o[M>>>2]>>>16-M%4*8&65535);C.push(String.fromCharCode(u))}return C.join("")},"stringify"),parse:L(function(S){for(var o=S.length,l=[],C=0;C<o;C++)l[C>>>1]|=r(S.charCodeAt(C)<<16-C%2*16);return I.create(l,o*2)},"parse")};function r(S){return S<<8&4278255360|S>>>8&16711935}L(r,"swapEndian")}(),s.enc.Utf16})}(DM)),DM.exports}L(Hk,"requireEncUtf16");var MM={exports:{}},JV;function Da(){return JV||(JV=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,a=R.enc;a.Base64={stringify:L(function(S){var o=S.words,l=S.sigBytes,C=this._map;S.clamp();for(var M=[],u=0;u<l;u+=3)for(var h=o[u>>>2]>>>24-u%4*8&255,P=o[u+1>>>2]>>>24-(u+1)%4*8&255,G=o[u+2>>>2]>>>24-(u+2)%4*8&255,d=h<<16|P<<8|G,H=0;H<4&&u+H*.75<l;H++)M.push(C.charAt(d>>>6*(3-H)&63));var f=C.charAt(64);if(f)for(;M.length%4;)M.push(f);return M.join("")},"stringify"),parse:L(function(S){var o=S.length,l=this._map,C=this._reverseMap;if(!C){C=this._reverseMap=[];for(var M=0;M<l.length;M++)C[l.charCodeAt(M)]=M}var u=l.charAt(64);if(u){var h=S.indexOf(u);h!==-1&&(o=h)}return r(S,o,C)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function r(S,o,l){for(var C=[],M=0,u=0;u<o;u++)if(u%4){var h=l[S.charCodeAt(u-1)]<<u%4*2,P=l[S.charCodeAt(u)]>>>6-u%4*2,G=h|P;C[M>>>2]|=G<<24-M%4*8,M++}return I.create(C,M)}L(r,"parseLoop")}(),s.enc.Base64})}(MM)),MM.exports}L(Da,"requireEncBase64");var hM={exports:{}},$V;function dk(){return $V||($V=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,a=R.enc;a.Base64url={stringify:L(function(S,o){o===void 0&&(o=!0);var l=S.words,C=S.sigBytes,M=o?this._safe_map:this._map;S.clamp();for(var u=[],h=0;h<C;h+=3)for(var P=l[h>>>2]>>>24-h%4*8&255,G=l[h+1>>>2]>>>24-(h+1)%4*8&255,d=l[h+2>>>2]>>>24-(h+2)%4*8&255,H=P<<16|G<<8|d,f=0;f<4&&h+f*.75<C;f++)u.push(M.charAt(H>>>6*(3-f)&63));var K=M.charAt(64);if(K)for(;u.length%4;)u.push(K);return u.join("")},"stringify"),parse:L(function(S,o){o===void 0&&(o=!0);var l=S.length,C=o?this._safe_map:this._map,M=this._reverseMap;if(!M){M=this._reverseMap=[];for(var u=0;u<C.length;u++)M[C.charCodeAt(u)]=u}var h=C.charAt(64);if(h){var P=S.indexOf(h);P!==-1&&(l=P)}return r(S,l,M)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"};function r(S,o,l){for(var C=[],M=0,u=0;u<o;u++)if(u%4){var h=l[S.charCodeAt(u-1)]<<u%4*2,P=l[S.charCodeAt(u)]>>>6-u%4*2,G=h|P;C[M>>>2]|=G<<24-M%4*8,M++}return I.create(C,M)}L(r,"parseLoop")}(),s.enc.Base64url})}(hM)),hM.exports}L(dk,"requireEncBase64url");var cM={exports:{}},zV;function Ma(){return zV||(zV=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){return function(R){var n=s,I=n.lib,a=I.WordArray,r=I.Hasher,S=n.algo,o=[];(function(){for(var P=0;P<64;P++)o[P]=R.abs(R.sin(P+1))*4294967296|0})();var l=S.MD5=r.extend({_doReset:L(function(){this._hash=new a.init([1732584193,4023233417,2562383102,271733878])},"_doReset"),_doProcessBlock:L(function(P,G){for(var d=0;d<16;d++){var H=G+d,f=P[H];P[H]=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360}var K=this._hash.words,W=P[G+0],V=P[G+1],k=P[G+2],Q=P[G+3],j=P[G+4],J=P[G+5],ne=P[G+6],x=P[G+7],q=P[G+8],F=P[G+9],Te=P[G+10],He=P[G+11],ue=P[G+12],me=P[G+13],Me=P[G+14],Ie=P[G+15],z=K[0],te=K[1],Le=K[2],Ue=K[3];z=C(z,te,Le,Ue,W,7,o[0]),Ue=C(Ue,z,te,Le,V,12,o[1]),Le=C(Le,Ue,z,te,k,17,o[2]),te=C(te,Le,Ue,z,Q,22,o[3]),z=C(z,te,Le,Ue,j,7,o[4]),Ue=C(Ue,z,te,Le,J,12,o[5]),Le=C(Le,Ue,z,te,ne,17,o[6]),te=C(te,Le,Ue,z,x,22,o[7]),z=C(z,te,Le,Ue,q,7,o[8]),Ue=C(Ue,z,te,Le,F,12,o[9]),Le=C(Le,Ue,z,te,Te,17,o[10]),te=C(te,Le,Ue,z,He,22,o[11]),z=C(z,te,Le,Ue,ue,7,o[12]),Ue=C(Ue,z,te,Le,me,12,o[13]),Le=C(Le,Ue,z,te,Me,17,o[14]),te=C(te,Le,Ue,z,Ie,22,o[15]),z=M(z,te,Le,Ue,V,5,o[16]),Ue=M(Ue,z,te,Le,ne,9,o[17]),Le=M(Le,Ue,z,te,He,14,o[18]),te=M(te,Le,Ue,z,W,20,o[19]),z=M(z,te,Le,Ue,J,5,o[20]),Ue=M(Ue,z,te,Le,Te,9,o[21]),Le=M(Le,Ue,z,te,Ie,14,o[22]),te=M(te,Le,Ue,z,j,20,o[23]),z=M(z,te,Le,Ue,F,5,o[24]),Ue=M(Ue,z,te,Le,Me,9,o[25]),Le=M(Le,Ue,z,te,Q,14,o[26]),te=M(te,Le,Ue,z,q,20,o[27]),z=M(z,te,Le,Ue,me,5,o[28]),Ue=M(Ue,z,te,Le,k,9,o[29]),Le=M(Le,Ue,z,te,x,14,o[30]),te=M(te,Le,Ue,z,ue,20,o[31]),z=u(z,te,Le,Ue,J,4,o[32]),Ue=u(Ue,z,te,Le,q,11,o[33]),Le=u(Le,Ue,z,te,He,16,o[34]),te=u(te,Le,Ue,z,Me,23,o[35]),z=u(z,te,Le,Ue,V,4,o[36]),Ue=u(Ue,z,te,Le,j,11,o[37]),Le=u(Le,Ue,z,te,x,16,o[38]),te=u(te,Le,Ue,z,Te,23,o[39]),z=u(z,te,Le,Ue,me,4,o[40]),Ue=u(Ue,z,te,Le,W,11,o[41]),Le=u(Le,Ue,z,te,Q,16,o[42]),te=u(te,Le,Ue,z,ne,23,o[43]),z=u(z,te,Le,Ue,F,4,o[44]),Ue=u(Ue,z,te,Le,ue,11,o[45]),Le=u(Le,Ue,z,te,Ie,16,o[46]),te=u(te,Le,Ue,z,k,23,o[47]),z=h(z,te,Le,Ue,W,6,o[48]),Ue=h(Ue,z,te,Le,x,10,o[49]),Le=h(Le,Ue,z,te,Me,15,o[50]),te=h(te,Le,Ue,z,J,21,o[51]),z=h(z,te,Le,Ue,ue,6,o[52]),Ue=h(Ue,z,te,Le,Q,10,o[53]),Le=h(Le,Ue,z,te,Te,15,o[54]),te=h(te,Le,Ue,z,V,21,o[55]),z=h(z,te,Le,Ue,q,6,o[56]),Ue=h(Ue,z,te,Le,Ie,10,o[57]),Le=h(Le,Ue,z,te,ne,15,o[58]),te=h(te,Le,Ue,z,me,21,o[59]),z=h(z,te,Le,Ue,j,6,o[60]),Ue=h(Ue,z,te,Le,He,10,o[61]),Le=h(Le,Ue,z,te,k,15,o[62]),te=h(te,Le,Ue,z,F,21,o[63]),K[0]=K[0]+z|0,K[1]=K[1]+te|0,K[2]=K[2]+Le|0,K[3]=K[3]+Ue|0},"_doProcessBlock"),_doFinalize:L(function(){var P=this._data,G=P.words,d=this._nDataBytes*8,H=P.sigBytes*8;G[H>>>5]|=128<<24-H%32;var f=R.floor(d/4294967296),K=d;G[(H+64>>>9<<4)+15]=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360,G[(H+64>>>9<<4)+14]=(K<<8|K>>>24)&16711935|(K<<24|K>>>8)&4278255360,P.sigBytes=(G.length+1)*4,this._process();for(var W=this._hash,V=W.words,k=0;k<4;k++){var Q=V[k];V[k]=(Q<<8|Q>>>24)&16711935|(Q<<24|Q>>>8)&4278255360}return W},"_doFinalize"),clone:L(function(){var P=r.clone.call(this);return P._hash=this._hash.clone(),P},"clone")});function C(P,G,d,H,f,K,W){var V=P+(G&d|~G&H)+f+W;return(V<<K|V>>>32-K)+G}L(C,"FF");function M(P,G,d,H,f,K,W){var V=P+(G&H|d&~H)+f+W;return(V<<K|V>>>32-K)+G}L(M,"GG");function u(P,G,d,H,f,K,W){var V=P+(G^d^H)+f+W;return(V<<K|V>>>32-K)+G}L(u,"HH");function h(P,G,d,H,f,K,W){var V=P+(d^(G|~H))+f+W;return(V<<K|V>>>32-K)+G}L(h,"II"),n.MD5=r._createHelper(l),n.HmacMD5=r._createHmacHelper(l)}(Math),s.MD5})}(cM)),cM.exports}L(Ma,"requireMd5");var _M={exports:{}},qV;function T6(){return qV||(qV=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,a=n.Hasher,r=R.algo,S=[],o=r.SHA1=a.extend({_doReset:L(function(){this._hash=new I.init([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:L(function(l,C){for(var M=this._hash.words,u=M[0],h=M[1],P=M[2],G=M[3],d=M[4],H=0;H<80;H++){if(H<16)S[H]=l[C+H]|0;else{var f=S[H-3]^S[H-8]^S[H-14]^S[H-16];S[H]=f<<1|f>>>31}var K=(u<<5|u>>>27)+d+S[H];H<20?K+=(h&P|~h&G)+1518500249:H<40?K+=(h^P^G)+1859775393:H<60?K+=(h&P|h&G|P&G)-1894007588:K+=(h^P^G)-899497514,d=G,G=P,P=h<<30|h>>>2,h=u,u=K}M[0]=M[0]+u|0,M[1]=M[1]+h|0,M[2]=M[2]+P|0,M[3]=M[3]+G|0,M[4]=M[4]+d|0},"_doProcessBlock"),_doFinalize:L(function(){var l=this._data,C=l.words,M=this._nDataBytes*8,u=l.sigBytes*8;return C[u>>>5]|=128<<24-u%32,C[(u+64>>>9<<4)+14]=Math.floor(M/4294967296),C[(u+64>>>9<<4)+15]=M,l.sigBytes=C.length*4,this._process(),this._hash},"_doFinalize"),clone:L(function(){var l=a.clone.call(this);return l._hash=this._hash.clone(),l},"clone")});R.SHA1=a._createHelper(o),R.HmacSHA1=a._createHmacHelper(o)}(),s.SHA1})}(_M)),_M.exports}L(T6,"requireSha1");var PM={exports:{}},jV;function O1(){return jV||(jV=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){return function(R){var n=s,I=n.lib,a=I.WordArray,r=I.Hasher,S=n.algo,o=[],l=[];(function(){function u(d){for(var H=R.sqrt(d),f=2;f<=H;f++)if(!(d%f))return!1;return!0}L(u,"isPrime");function h(d){return(d-(d|0))*4294967296|0}L(h,"getFractionalBits");for(var P=2,G=0;G<64;)u(P)&&(G<8&&(o[G]=h(R.pow(P,1/2))),l[G]=h(R.pow(P,1/3)),G++),P++})();var C=[],M=S.SHA256=r.extend({_doReset:L(function(){this._hash=new a.init(o.slice(0))},"_doReset"),_doProcessBlock:L(function(u,h){for(var P=this._hash.words,G=P[0],d=P[1],H=P[2],f=P[3],K=P[4],W=P[5],V=P[6],k=P[7],Q=0;Q<64;Q++){if(Q<16)C[Q]=u[h+Q]|0;else{var j=C[Q-15],J=(j<<25|j>>>7)^(j<<14|j>>>18)^j>>>3,ne=C[Q-2],x=(ne<<15|ne>>>17)^(ne<<13|ne>>>19)^ne>>>10;C[Q]=J+C[Q-7]+x+C[Q-16]}var q=K&W^~K&V,F=G&d^G&H^d&H,Te=(G<<30|G>>>2)^(G<<19|G>>>13)^(G<<10|G>>>22),He=(K<<26|K>>>6)^(K<<21|K>>>11)^(K<<7|K>>>25),ue=k+He+q+l[Q]+C[Q],me=Te+F;k=V,V=W,W=K,K=f+ue|0,f=H,H=d,d=G,G=ue+me|0}P[0]=P[0]+G|0,P[1]=P[1]+d|0,P[2]=P[2]+H|0,P[3]=P[3]+f|0,P[4]=P[4]+K|0,P[5]=P[5]+W|0,P[6]=P[6]+V|0,P[7]=P[7]+k|0},"_doProcessBlock"),_doFinalize:L(function(){var u=this._data,h=u.words,P=this._nDataBytes*8,G=u.sigBytes*8;return h[G>>>5]|=128<<24-G%32,h[(G+64>>>9<<4)+14]=R.floor(P/4294967296),h[(G+64>>>9<<4)+15]=P,u.sigBytes=h.length*4,this._process(),this._hash},"_doFinalize"),clone:L(function(){var u=r.clone.call(this);return u._hash=this._hash.clone(),u},"clone")});n.SHA256=r._createHelper(M),n.HmacSHA256=r._createHmacHelper(M)}(Math),s.SHA256})}(PM)),PM.exports}L(O1,"requireSha256");var GM={exports:{}},ex;function fk(){return ex||(ex=1,function(E,A){(function(s,R,n){E.exports=R(cA(),O1())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,a=R.algo,r=a.SHA256,S=a.SHA224=r.extend({_doReset:L(function(){this._hash=new I.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},"_doReset"),_doFinalize:L(function(){var o=r._doFinalize.call(this);return o.sigBytes-=4,o},"_doFinalize")});R.SHA224=r._createHelper(S),R.HmacSHA224=r._createHmacHelper(S)}(),s.SHA224})}(GM)),GM.exports}L(fk,"requireSha224");var HM={exports:{}},tx;function S6(){return tx||(tx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),nM())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.Hasher,a=R.x64,r=a.Word,S=a.WordArray,o=R.algo;function l(){return r.create.apply(r,arguments)}L(l,"X64Word_create");var C=[l(1116352408,3609767458),l(1899447441,602891725),l(3049323471,3964484399),l(3921009573,2173295548),l(961987163,4081628472),l(1508970993,3053834265),l(2453635748,2937671579),l(2870763221,3664609560),l(3624381080,2734883394),l(310598401,1164996542),l(607225278,1323610764),l(1426881987,3590304994),l(1925078388,4068182383),l(2162078206,991336113),l(2614888103,633803317),l(3248222580,3479774868),l(3835390401,2666613458),l(4022224774,944711139),l(264347078,2341262773),l(604807628,2007800933),l(770255983,1495990901),l(1249150122,1856431235),l(1555081692,3175218132),l(1996064986,2198950837),l(2554220882,3999719339),l(2821834349,766784016),l(2952996808,2566594879),l(3210313671,3203337956),l(3336571891,1034457026),l(3584528711,2466948901),l(113926993,3758326383),l(338241895,168717936),l(666307205,1188179964),l(773529912,1546045734),l(1294757372,1522805485),l(1396182291,2643833823),l(1695183700,2343527390),l(1986661051,1014477480),l(2177026350,1206759142),l(2456956037,344077627),l(2730485921,1290863460),l(2820302411,3158454273),l(3259730800,3505952657),l(3345764771,106217008),l(3516065817,3606008344),l(3600352804,1432725776),l(4094571909,1467031594),l(275423344,851169720),l(430227734,3100823752),l(506948616,1363258195),l(659060556,3750685593),l(883997877,3785050280),l(958139571,3318307427),l(1322822218,3812723403),l(1537002063,2003034995),l(1747873779,3602036899),l(1955562222,1575990012),l(2024104815,1125592928),l(2227730452,2716904306),l(2361852424,442776044),l(2428436474,593698344),l(2756734187,3733110249),l(3204031479,2999351573),l(3329325298,3815920427),l(3391569614,3928383900),l(3515267271,566280711),l(3940187606,3454069534),l(4118630271,4000239992),l(116418474,1914138554),l(174292421,2731055270),l(289380356,3203993006),l(460393269,320620315),l(685471733,587496836),l(852142971,1086792851),l(1017036298,365543100),l(1126000580,2618297676),l(1288033470,3409855158),l(1501505948,4234509866),l(1607167915,987167468),l(1816402316,1246189591)],M=[];(function(){for(var h=0;h<80;h++)M[h]=l()})();var u=o.SHA512=I.extend({_doReset:L(function(){this._hash=new S.init([new r.init(1779033703,4089235720),new r.init(3144134277,2227873595),new r.init(1013904242,4271175723),new r.init(2773480762,1595750129),new r.init(1359893119,2917565137),new r.init(2600822924,725511199),new r.init(528734635,4215389547),new r.init(1541459225,327033209)])},"_doReset"),_doProcessBlock:L(function(h,P){for(var G=this._hash.words,d=G[0],H=G[1],f=G[2],K=G[3],W=G[4],V=G[5],k=G[6],Q=G[7],j=d.high,J=d.low,ne=H.high,x=H.low,q=f.high,F=f.low,Te=K.high,He=K.low,ue=W.high,me=W.low,Me=V.high,Ie=V.low,z=k.high,te=k.low,Le=Q.high,Ue=Q.low,Be=j,st=J,ft=ne,tt=x,Pt=q,eA=F,Xt=Te,bA=He,YA=ue,y=me,Ke=Me,de=Ie,ae=z,ie=te,he=Le,Xe=Ue,ke=0;ke<80;ke++){var Ge,pe,$e=M[ke];if(ke<16)pe=$e.high=h[P+ke*2]|0,Ge=$e.low=h[P+ke*2+1]|0;else{var Qe=M[ke-15],ut=Qe.high,Qt=Qe.low,xt=(ut>>>1|Qt<<31)^(ut>>>8|Qt<<24)^ut>>>7,ME=(Qt>>>1|ut<<31)^(Qt>>>8|ut<<24)^(Qt>>>7|ut<<25),TR=M[ke-2],hE=TR.high,SR=TR.low,IE=(hE>>>19|SR<<13)^(hE<<3|SR>>>29)^hE>>>6,$O=(SR>>>19|hE<<13)^(SR<<3|hE>>>29)^(SR>>>6|hE<<26),Dn=M[ke-7],hO=Dn.high,po=Dn.low,Wo=M[ke-16],TM=Wo.high,Yo=Wo.low;Ge=ME+po,pe=xt+hO+(Ge>>>0<ME>>>0?1:0),Ge=Ge+$O,pe=pe+IE+(Ge>>>0<$O>>>0?1:0),Ge=Ge+Yo,pe=pe+TM+(Ge>>>0<Yo>>>0?1:0),$e.high=pe,$e.low=Ge}var yo=YA&Ke^~YA&ae,ei=y&de^~y&ie,ha=Be&ft^Be&Pt^ft&Pt,T8=st&tt^st&eA^tt&eA,S8=(Be>>>28|st<<4)^(Be<<30|st>>>2)^(Be<<25|st>>>7),PV=(st>>>28|Be<<4)^(st<<30|Be>>>2)^(st<<25|Be>>>7),o8=(YA>>>14|y<<18)^(YA>>>18|y<<14)^(YA<<23|y>>>9),l8=(y>>>14|YA<<18)^(y>>>18|YA<<14)^(y<<23|YA>>>9),GV=C[ke],C8=GV.high,HV=GV.low,FR=Xe+l8,ti=he+o8+(FR>>>0<Xe>>>0?1:0),FR=FR+ei,ti=ti+yo+(FR>>>0<ei>>>0?1:0),FR=FR+HV,ti=ti+C8+(FR>>>0<HV>>>0?1:0),FR=FR+Ge,ti=ti+pe+(FR>>>0<Ge>>>0?1:0),dV=PV+T8,U8=S8+ha+(dV>>>0<PV>>>0?1:0);he=ae,Xe=ie,ae=Ke,ie=de,Ke=YA,de=y,y=bA+FR|0,YA=Xt+ti+(y>>>0<bA>>>0?1:0)|0,Xt=Pt,bA=eA,Pt=ft,eA=tt,ft=Be,tt=st,st=FR+dV|0,Be=ti+U8+(st>>>0<FR>>>0?1:0)|0}J=d.low=J+st,d.high=j+Be+(J>>>0<st>>>0?1:0),x=H.low=x+tt,H.high=ne+ft+(x>>>0<tt>>>0?1:0),F=f.low=F+eA,f.high=q+Pt+(F>>>0<eA>>>0?1:0),He=K.low=He+bA,K.high=Te+Xt+(He>>>0<bA>>>0?1:0),me=W.low=me+y,W.high=ue+YA+(me>>>0<y>>>0?1:0),Ie=V.low=Ie+de,V.high=Me+Ke+(Ie>>>0<de>>>0?1:0),te=k.low=te+ie,k.high=z+ae+(te>>>0<ie>>>0?1:0),Ue=Q.low=Ue+Xe,Q.high=Le+he+(Ue>>>0<Xe>>>0?1:0)},"_doProcessBlock"),_doFinalize:L(function(){var h=this._data,P=h.words,G=this._nDataBytes*8,d=h.sigBytes*8;P[d>>>5]|=128<<24-d%32,P[(d+128>>>10<<5)+30]=Math.floor(G/4294967296),P[(d+128>>>10<<5)+31]=G,h.sigBytes=P.length*4,this._process();var H=this._hash.toX32();return H},"_doFinalize"),clone:L(function(){var h=I.clone.call(this);return h._hash=this._hash.clone(),h},"clone"),blockSize:1024/32});R.SHA512=I._createHelper(u),R.HmacSHA512=I._createHmacHelper(u)}(),s.SHA512})}(HM)),HM.exports}L(S6,"requireSha512");var dM={exports:{}},Ax;function Bk(){return Ax||(Ax=1,function(E,A){(function(s,R,n){E.exports=R(cA(),nM(),S6())})(AA,function(s){return function(){var R=s,n=R.x64,I=n.Word,a=n.WordArray,r=R.algo,S=r.SHA512,o=r.SHA384=S.extend({_doReset:L(function(){this._hash=new a.init([new I.init(3418070365,3238371032),new I.init(1654270250,914150663),new I.init(2438529370,812702999),new I.init(355462360,4144912697),new I.init(1731405415,4290775857),new I.init(2394180231,1750603025),new I.init(3675008525,1694076839),new I.init(1203062813,3204075428)])},"_doReset"),_doFinalize:L(function(){var l=S._doFinalize.call(this);return l.sigBytes-=16,l},"_doFinalize")});R.SHA384=S._createHelper(o),R.HmacSHA384=S._createHmacHelper(o)}(),s.SHA384})}(dM)),dM.exports}L(Bk,"requireSha384");var fM={exports:{}},Ex;function gk(){return Ex||(Ex=1,function(E,A){(function(s,R,n){E.exports=R(cA(),nM())})(AA,function(s){return function(R){var n=s,I=n.lib,a=I.WordArray,r=I.Hasher,S=n.x64,o=S.Word,l=n.algo,C=[],M=[],u=[];(function(){for(var G=1,d=0,H=0;H<24;H++){C[G+5*d]=(H+1)*(H+2)/2%64;var f=d%5,K=(2*G+3*d)%5;G=f,d=K}for(var G=0;G<5;G++)for(var d=0;d<5;d++)M[G+5*d]=d+(2*G+3*d)%5*5;for(var W=1,V=0;V<24;V++){for(var k=0,Q=0,j=0;j<7;j++){if(W&1){var J=(1<<j)-1;J<32?Q^=1<<J:k^=1<<J-32}W&128?W=W<<1^113:W<<=1}u[V]=o.create(k,Q)}})();var h=[];(function(){for(var G=0;G<25;G++)h[G]=o.create()})();var P=l.SHA3=r.extend({cfg:r.cfg.extend({outputLength:512}),_doReset:L(function(){for(var G=this._state=[],d=0;d<25;d++)G[d]=new o.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},"_doReset"),_doProcessBlock:L(function(G,d){for(var H=this._state,f=this.blockSize/2,K=0;K<f;K++){var W=G[d+2*K],V=G[d+2*K+1];W=(W<<8|W>>>24)&16711935|(W<<24|W>>>8)&4278255360,V=(V<<8|V>>>24)&16711935|(V<<24|V>>>8)&4278255360;var k=H[K];k.high^=V,k.low^=W}for(var Q=0;Q<24;Q++){for(var j=0;j<5;j++){for(var J=0,ne=0,x=0;x<5;x++){var k=H[j+5*x];J^=k.high,ne^=k.low}var q=h[j];q.high=J,q.low=ne}for(var j=0;j<5;j++)for(var F=h[(j+4)%5],Te=h[(j+1)%5],He=Te.high,ue=Te.low,J=F.high^(He<<1|ue>>>31),ne=F.low^(ue<<1|He>>>31),x=0;x<5;x++){var k=H[j+5*x];k.high^=J,k.low^=ne}for(var me=1;me<25;me++){var J,ne,k=H[me],Me=k.high,Ie=k.low,z=C[me];z<32?(J=Me<<z|Ie>>>32-z,ne=Ie<<z|Me>>>32-z):(J=Ie<<z-32|Me>>>64-z,ne=Me<<z-32|Ie>>>64-z);var te=h[M[me]];te.high=J,te.low=ne}var Le=h[0],Ue=H[0];Le.high=Ue.high,Le.low=Ue.low;for(var j=0;j<5;j++)for(var x=0;x<5;x++){var me=j+5*x,k=H[me],Be=h[me],st=h[(j+1)%5+5*x],ft=h[(j+2)%5+5*x];k.high=Be.high^~st.high&ft.high,k.low=Be.low^~st.low&ft.low}var k=H[0],tt=u[Q];k.high^=tt.high,k.low^=tt.low}},"_doProcessBlock"),_doFinalize:L(function(){var G=this._data,d=G.words;this._nDataBytes*8;var H=G.sigBytes*8,f=this.blockSize*32;d[H>>>5]|=1<<24-H%32,d[(R.ceil((H+1)/f)*f>>>5)-1]|=128,G.sigBytes=d.length*4,this._process();for(var K=this._state,W=this.cfg.outputLength/8,V=W/8,k=[],Q=0;Q<V;Q++){var j=K[Q],J=j.high,ne=j.low;J=(J<<8|J>>>24)&16711935|(J<<24|J>>>8)&4278255360,ne=(ne<<8|ne>>>24)&16711935|(ne<<24|ne>>>8)&4278255360,k.push(ne),k.push(J)}return new a.init(k,W)},"_doFinalize"),clone:L(function(){for(var G=r.clone.call(this),d=G._state=this._state.slice(0),H=0;H<25;H++)d[H]=d[H].clone();return G},"clone")});n.SHA3=r._createHelper(P),n.HmacSHA3=r._createHmacHelper(P)}(Math),s.SHA3})}(fM)),fM.exports}L(gk,"requireSha3");var BM={exports:{}},sx;function Kk(){return sx||(sx=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){/** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/return function(R){var n=s,I=n.lib,a=I.WordArray,r=I.Hasher,S=n.algo,o=a.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),l=a.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),C=a.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),M=a.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),u=a.create([0,1518500249,1859775393,2400959708,2840853838]),h=a.create([1352829926,1548603684,1836072691,2053994217,0]),P=S.RIPEMD160=r.extend({_doReset:L(function(){this._hash=a.create([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:L(function(V,k){for(var Q=0;Q<16;Q++){var j=k+Q,J=V[j];V[j]=(J<<8|J>>>24)&16711935|(J<<24|J>>>8)&4278255360}var ne=this._hash.words,x=u.words,q=h.words,F=o.words,Te=l.words,He=C.words,ue=M.words,me,Me,Ie,z,te,Le,Ue,Be,st,ft;Le=me=ne[0],Ue=Me=ne[1],Be=Ie=ne[2],st=z=ne[3],ft=te=ne[4];for(var tt,Q=0;Q<80;Q+=1)tt=me+V[k+F[Q]]|0,Q<16?tt+=G(Me,Ie,z)+x[0]:Q<32?tt+=d(Me,Ie,z)+x[1]:Q<48?tt+=H(Me,Ie,z)+x[2]:Q<64?tt+=f(Me,Ie,z)+x[3]:tt+=K(Me,Ie,z)+x[4],tt=tt|0,tt=W(tt,He[Q]),tt=tt+te|0,me=te,te=z,z=W(Ie,10),Ie=Me,Me=tt,tt=Le+V[k+Te[Q]]|0,Q<16?tt+=K(Ue,Be,st)+q[0]:Q<32?tt+=f(Ue,Be,st)+q[1]:Q<48?tt+=H(Ue,Be,st)+q[2]:Q<64?tt+=d(Ue,Be,st)+q[3]:tt+=G(Ue,Be,st)+q[4],tt=tt|0,tt=W(tt,ue[Q]),tt=tt+ft|0,Le=ft,ft=st,st=W(Be,10),Be=Ue,Ue=tt;tt=ne[1]+Ie+st|0,ne[1]=ne[2]+z+ft|0,ne[2]=ne[3]+te+Le|0,ne[3]=ne[4]+me+Ue|0,ne[4]=ne[0]+Me+Be|0,ne[0]=tt},"_doProcessBlock"),_doFinalize:L(function(){var V=this._data,k=V.words,Q=this._nDataBytes*8,j=V.sigBytes*8;k[j>>>5]|=128<<24-j%32,k[(j+64>>>9<<4)+14]=(Q<<8|Q>>>24)&16711935|(Q<<24|Q>>>8)&4278255360,V.sigBytes=(k.length+1)*4,this._process();for(var J=this._hash,ne=J.words,x=0;x<5;x++){var q=ne[x];ne[x]=(q<<8|q>>>24)&16711935|(q<<24|q>>>8)&4278255360}return J},"_doFinalize"),clone:L(function(){var V=r.clone.call(this);return V._hash=this._hash.clone(),V},"clone")});function G(V,k,Q){return V^k^Q}L(G,"f1");function d(V,k,Q){return V&k|~V&Q}L(d,"f2");function H(V,k,Q){return(V|~k)^Q}L(H,"f3");function f(V,k,Q){return V&Q|k&~Q}L(f,"f4");function K(V,k,Q){return V^(k|~Q)}L(K,"f5");function W(V,k){return V<<k|V>>>32-k}L(W,"rotl"),n.RIPEMD160=r._createHelper(P),n.HmacRIPEMD160=r._createHmacHelper(P)}(),s.RIPEMD160})}(BM)),BM.exports}L(Kk,"requireRipemd160");var gM={exports:{}},Rx;function n1(){return Rx||(Rx=1,function(E,A){(function(s,R){E.exports=R(cA())})(AA,function(s){(function(){var R=s,n=R.lib,I=n.Base,a=R.enc,r=a.Utf8,S=R.algo;S.HMAC=I.extend({init:L(function(o,l){o=this._hasher=new o.init,typeof l=="string"&&(l=r.parse(l));var C=o.blockSize,M=C*4;l.sigBytes>M&&(l=o.finalize(l)),l.clamp();for(var u=this._oKey=l.clone(),h=this._iKey=l.clone(),P=u.words,G=h.words,d=0;d<C;d++)P[d]^=1549556828,G[d]^=909522486;u.sigBytes=h.sigBytes=M,this.reset()},"init"),reset:L(function(){var o=this._hasher;o.reset(),o.update(this._iKey)},"reset"),update:L(function(o){return this._hasher.update(o),this},"update"),finalize:L(function(o){var l=this._hasher,C=l.finalize(o);l.reset();var M=l.finalize(this._oKey.clone().concat(C));return M},"finalize")})})()})}(gM)),gM.exports}L(n1,"requireHmac");var KM={exports:{}},Ox;function mk(){return Ox||(Ox=1,function(E,A){(function(s,R,n){E.exports=R(cA(),O1(),n1())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.Base,a=n.WordArray,r=R.algo,S=r.SHA256,o=r.HMAC,l=r.PBKDF2=I.extend({cfg:I.extend({keySize:128/32,hasher:S,iterations:25e4}),init:L(function(C){this.cfg=this.cfg.extend(C)},"init"),compute:L(function(C,M){for(var u=this.cfg,h=o.create(u.hasher,C),P=a.create(),G=a.create([1]),d=P.words,H=G.words,f=u.keySize,K=u.iterations;d.length<f;){var W=h.update(M).finalize(G);h.reset();for(var V=W.words,k=V.length,Q=W,j=1;j<K;j++){Q=h.finalize(Q),h.reset();for(var J=Q.words,ne=0;ne<k;ne++)V[ne]^=J[ne]}P.concat(W),H[0]++}return P.sigBytes=f*4,P},"compute")});R.PBKDF2=function(C,M,u){return l.create(u).compute(C,M)}}(),s.PBKDF2})}(KM)),KM.exports}L(mk,"requirePbkdf2");var mM={exports:{}},nx;function RI(){return nx||(nx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),T6(),n1())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.Base,a=n.WordArray,r=R.algo,S=r.MD5,o=r.EvpKDF=I.extend({cfg:I.extend({keySize:128/32,hasher:S,iterations:1}),init:L(function(l){this.cfg=this.cfg.extend(l)},"init"),compute:L(function(l,C){for(var M,u=this.cfg,h=u.hasher.create(),P=a.create(),G=P.words,d=u.keySize,H=u.iterations;G.length<d;){M&&h.update(M),M=h.update(l).finalize(C),h.reset();for(var f=1;f<H;f++)M=h.finalize(M),h.reset();P.concat(M)}return P.sigBytes=d*4,P},"compute")});R.EvpKDF=function(l,C,M){return o.create(M).compute(l,C)}}(),s.EvpKDF})}(mM)),mM.exports}L(RI,"requireEvpkdf");var FM={exports:{}},ix;function _s(){return ix||(ix=1,function(E,A){(function(s,R,n){E.exports=R(cA(),RI())})(AA,function(s){s.lib.Cipher||function(R){var n=s,I=n.lib,a=I.Base,r=I.WordArray,S=I.BufferedBlockAlgorithm,o=n.enc;o.Utf8;var l=o.Base64,C=n.algo,M=C.EvpKDF,u=I.Cipher=S.extend({cfg:a.extend(),createEncryptor:L(function(J,ne){return this.create(this._ENC_XFORM_MODE,J,ne)},"createEncryptor"),createDecryptor:L(function(J,ne){return this.create(this._DEC_XFORM_MODE,J,ne)},"createDecryptor"),init:L(function(J,ne,x){this.cfg=this.cfg.extend(x),this._xformMode=J,this._key=ne,this.reset()},"init"),reset:L(function(){S.reset.call(this),this._doReset()},"reset"),process:L(function(J){return this._append(J),this._process()},"process"),finalize:L(function(J){J&&this._append(J);var ne=this._doFinalize();return ne},"finalize"),keySize:128/32,ivSize:128/32,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function J(ne){return typeof ne=="string"?j:V}return L(J,"selectCipherStrategy"),function(ne){return{encrypt:L(function(x,q,F){return J(q).encrypt(ne,x,q,F)},"encrypt"),decrypt:L(function(x,q,F){return J(q).decrypt(ne,x,q,F)},"decrypt")}}}()});I.StreamCipher=u.extend({_doFinalize:L(function(){var J=this._process(!0);return J},"_doFinalize"),blockSize:1});var h=n.mode={},P=I.BlockCipherMode=a.extend({createEncryptor:L(function(J,ne){return this.Encryptor.create(J,ne)},"createEncryptor"),createDecryptor:L(function(J,ne){return this.Decryptor.create(J,ne)},"createDecryptor"),init:L(function(J,ne){this._cipher=J,this._iv=ne},"init")}),G=h.CBC=function(){var J=P.extend();J.Encryptor=J.extend({processBlock:L(function(x,q){var F=this._cipher,Te=F.blockSize;ne.call(this,x,q,Te),F.encryptBlock(x,q),this._prevBlock=x.slice(q,q+Te)},"processBlock")}),J.Decryptor=J.extend({processBlock:L(function(x,q){var F=this._cipher,Te=F.blockSize,He=x.slice(q,q+Te);F.decryptBlock(x,q),ne.call(this,x,q,Te),this._prevBlock=He},"processBlock")});function ne(x,q,F){var Te,He=this._iv;He?(Te=He,this._iv=R):Te=this._prevBlock;for(var ue=0;ue<F;ue++)x[q+ue]^=Te[ue]}return L(ne,"xorBlock"),J}(),d=n.pad={},H=d.Pkcs7={pad:L(function(J,ne){for(var x=ne*4,q=x-J.sigBytes%x,F=q<<24|q<<16|q<<8|q,Te=[],He=0;He<q;He+=4)Te.push(F);var ue=r.create(Te,q);J.concat(ue)},"pad"),unpad:L(function(J){var ne=J.words[J.sigBytes-1>>>2]&255;J.sigBytes-=ne},"unpad")};I.BlockCipher=u.extend({cfg:u.cfg.extend({mode:G,padding:H}),reset:L(function(){var J;u.reset.call(this);var ne=this.cfg,x=ne.iv,q=ne.mode;this._xformMode==this._ENC_XFORM_MODE?J=q.createEncryptor:(J=q.createDecryptor,this._minBufferSize=1),this._mode&&this._mode.__creator==J?this._mode.init(this,x&&x.words):(this._mode=J.call(q,this,x&&x.words),this._mode.__creator=J)},"reset"),_doProcessBlock:L(function(J,ne){this._mode.processBlock(J,ne)},"_doProcessBlock"),_doFinalize:L(function(){var J,ne=this.cfg.padding;return this._xformMode==this._ENC_XFORM_MODE?(ne.pad(this._data,this.blockSize),J=this._process(!0)):(J=this._process(!0),ne.unpad(J)),J},"_doFinalize"),blockSize:128/32});var f=I.CipherParams=a.extend({init:L(function(J){this.mixIn(J)},"init"),toString:L(function(J){return(J||this.formatter).stringify(this)},"toString")}),K=n.format={},W=K.OpenSSL={stringify:L(function(J){var ne,x=J.ciphertext,q=J.salt;return q?ne=r.create([1398893684,1701076831]).concat(q).concat(x):ne=x,ne.toString(l)},"stringify"),parse:L(function(J){var ne,x=l.parse(J),q=x.words;return q[0]==1398893684&&q[1]==1701076831&&(ne=r.create(q.slice(2,4)),q.splice(0,4),x.sigBytes-=16),f.create({ciphertext:x,salt:ne})},"parse")},V=I.SerializableCipher=a.extend({cfg:a.extend({format:W}),encrypt:L(function(J,ne,x,q){q=this.cfg.extend(q);var F=J.createEncryptor(x,q),Te=F.finalize(ne),He=F.cfg;return f.create({ciphertext:Te,key:x,iv:He.iv,algorithm:J,mode:He.mode,padding:He.padding,blockSize:J.blockSize,formatter:q.format})},"encrypt"),decrypt:L(function(J,ne,x,q){q=this.cfg.extend(q),ne=this._parse(ne,q.format);var F=J.createDecryptor(x,q).finalize(ne.ciphertext);return F},"decrypt"),_parse:L(function(J,ne){return typeof J=="string"?ne.parse(J,this):J},"_parse")}),k=n.kdf={},Q=k.OpenSSL={execute:L(function(J,ne,x,q,F){if(q||(q=r.random(64/8)),F)var Te=M.create({keySize:ne+x,hasher:F}).compute(J,q);else var Te=M.create({keySize:ne+x}).compute(J,q);var He=r.create(Te.words.slice(ne),x*4);return Te.sigBytes=ne*4,f.create({key:Te,iv:He,salt:q})},"execute")},j=I.PasswordBasedCipher=V.extend({cfg:V.cfg.extend({kdf:Q}),encrypt:L(function(J,ne,x,q){q=this.cfg.extend(q);var F=q.kdf.execute(x,J.keySize,J.ivSize,q.salt,q.hasher);q.iv=F.iv;var Te=V.encrypt.call(this,J,ne,F.key,q);return Te.mixIn(F),Te},"encrypt"),decrypt:L(function(J,ne,x,q){q=this.cfg.extend(q),ne=this._parse(ne,q.format);var F=q.kdf.execute(x,J.keySize,J.ivSize,ne.salt,q.hasher);q.iv=F.iv;var Te=V.decrypt.call(this,J,ne,F.key,q);return Te},"decrypt")})}()})}(FM)),FM.exports}L(_s,"requireCipherCore");var pM={exports:{}},Ix;function Fk(){return Ix||(Ix=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.mode.CFB=function(){var R=s.lib.BlockCipherMode.extend();R.Encryptor=R.extend({processBlock:L(function(I,a){var r=this._cipher,S=r.blockSize;n.call(this,I,a,S,r),this._prevBlock=I.slice(a,a+S)},"processBlock")}),R.Decryptor=R.extend({processBlock:L(function(I,a){var r=this._cipher,S=r.blockSize,o=I.slice(a,a+S);n.call(this,I,a,S,r),this._prevBlock=o},"processBlock")});function n(I,a,r,S){var o,l=this._iv;l?(o=l.slice(0),this._iv=void 0):o=this._prevBlock,S.encryptBlock(o,0);for(var C=0;C<r;C++)I[a+C]^=o[C]}return L(n,"generateKeystreamAndEncrypt"),R}(),s.mode.CFB})}(pM)),pM.exports}L(Fk,"requireModeCfb");var WM={exports:{}},ax;function pk(){return ax||(ax=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.mode.CTR=function(){var R=s.lib.BlockCipherMode.extend(),n=R.Encryptor=R.extend({processBlock:L(function(I,a){var r=this._cipher,S=r.blockSize,o=this._iv,l=this._counter;o&&(l=this._counter=o.slice(0),this._iv=void 0);var C=l.slice(0);r.encryptBlock(C,0),l[S-1]=l[S-1]+1|0;for(var M=0;M<S;M++)I[a+M]^=C[M]},"processBlock")});return R.Decryptor=n,R}(),s.mode.CTR})}(WM)),WM.exports}L(pk,"requireModeCtr");var YM={exports:{}},rx;function Wk(){return rx||(rx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){/** @preserve
 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
 * derived from CryptoJS.mode.CTR
 * Jan Hruby jhruby.web@gmail.com
 */return s.mode.CTRGladman=function(){var R=s.lib.BlockCipherMode.extend();function n(r){if((r>>24&255)===255){var S=r>>16&255,o=r>>8&255,l=r&255;S===255?(S=0,o===255?(o=0,l===255?l=0:++l):++o):++S,r=0,r+=S<<16,r+=o<<8,r+=l}else r+=1<<24;return r}L(n,"incWord");function I(r){return(r[0]=n(r[0]))===0&&(r[1]=n(r[1])),r}L(I,"incCounter");var a=R.Encryptor=R.extend({processBlock:L(function(r,S){var o=this._cipher,l=o.blockSize,C=this._iv,M=this._counter;C&&(M=this._counter=C.slice(0),this._iv=void 0),I(M);var u=M.slice(0);o.encryptBlock(u,0);for(var h=0;h<l;h++)r[S+h]^=u[h]},"processBlock")});return R.Decryptor=a,R}(),s.mode.CTRGladman})}(YM)),YM.exports}L(Wk,"requireModeCtrGladman");var yM={exports:{}},Lx;function Yk(){return Lx||(Lx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.mode.OFB=function(){var R=s.lib.BlockCipherMode.extend(),n=R.Encryptor=R.extend({processBlock:L(function(I,a){var r=this._cipher,S=r.blockSize,o=this._iv,l=this._keystream;o&&(l=this._keystream=o.slice(0),this._iv=void 0),r.encryptBlock(l,0);for(var C=0;C<S;C++)I[a+C]^=l[C]},"processBlock")});return R.Decryptor=n,R}(),s.mode.OFB})}(yM)),yM.exports}L(Yk,"requireModeOfb");var wM={exports:{}},Nx;function yk(){return Nx||(Nx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.mode.ECB=function(){var R=s.lib.BlockCipherMode.extend();return R.Encryptor=R.extend({processBlock:L(function(n,I){this._cipher.encryptBlock(n,I)},"processBlock")}),R.Decryptor=R.extend({processBlock:L(function(n,I){this._cipher.decryptBlock(n,I)},"processBlock")}),R}(),s.mode.ECB})}(wM)),wM.exports}L(yk,"requireModeEcb");var vM={exports:{}},Tx;function wk(){return Tx||(Tx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.pad.AnsiX923={pad:L(function(R,n){var I=R.sigBytes,a=n*4,r=a-I%a,S=I+r-1;R.clamp(),R.words[S>>>2]|=r<<24-S%4*8,R.sigBytes+=r},"pad"),unpad:L(function(R){var n=R.words[R.sigBytes-1>>>2]&255;R.sigBytes-=n},"unpad")},s.pad.Ansix923})}(vM)),vM.exports}L(wk,"requirePadAnsix923");var VM={exports:{}},Sx;function vk(){return Sx||(Sx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.pad.Iso10126={pad:L(function(R,n){var I=n*4,a=I-R.sigBytes%I;R.concat(s.lib.WordArray.random(a-1)).concat(s.lib.WordArray.create([a<<24],1))},"pad"),unpad:L(function(R){var n=R.words[R.sigBytes-1>>>2]&255;R.sigBytes-=n},"unpad")},s.pad.Iso10126})}(VM)),VM.exports}L(vk,"requirePadIso10126");var xM={exports:{}},ox;function Vk(){return ox||(ox=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.pad.Iso97971={pad:L(function(R,n){R.concat(s.lib.WordArray.create([2147483648],1)),s.pad.ZeroPadding.pad(R,n)},"pad"),unpad:L(function(R){s.pad.ZeroPadding.unpad(R),R.sigBytes--},"unpad")},s.pad.Iso97971})}(xM)),xM.exports}L(Vk,"requirePadIso97971");var bM={exports:{}},lx;function xk(){return lx||(lx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.pad.ZeroPadding={pad:L(function(R,n){var I=n*4;R.clamp(),R.sigBytes+=I-(R.sigBytes%I||I)},"pad"),unpad:L(function(R){for(var n=R.words,I=R.sigBytes-1,I=R.sigBytes-1;I>=0;I--)if(n[I>>>2]>>>24-I%4*8&255){R.sigBytes=I+1;break}},"unpad")},s.pad.ZeroPadding})}(bM)),bM.exports}L(xk,"requirePadZeropadding");var kM={exports:{}},Cx;function bk(){return Cx||(Cx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return s.pad.NoPadding={pad:L(function(){},"pad"),unpad:L(function(){},"unpad")},s.pad.NoPadding})}(kM)),kM.exports}L(bk,"requirePadNopadding");var ZM={exports:{}},Ux;function kk(){return Ux||(Ux=1,function(E,A){(function(s,R,n){E.exports=R(cA(),_s())})(AA,function(s){return function(R){var n=s,I=n.lib,a=I.CipherParams,r=n.enc,S=r.Hex,o=n.format;o.Hex={stringify:L(function(l){return l.ciphertext.toString(S)},"stringify"),parse:L(function(l){var C=S.parse(l);return a.create({ciphertext:C})},"parse")}}(),s.format.Hex})}(ZM)),ZM.exports}L(kk,"requireFormatHex");var XM={exports:{}},ux;function Zk(){return ux||(ux=1,function(E,A){(function(s,R,n){E.exports=R(cA(),Da(),Ma(),RI(),_s())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.BlockCipher,a=R.algo,r=[],S=[],o=[],l=[],C=[],M=[],u=[],h=[],P=[],G=[];(function(){for(var f=[],K=0;K<256;K++)K<128?f[K]=K<<1:f[K]=K<<1^283;for(var W=0,V=0,K=0;K<256;K++){var k=V^V<<1^V<<2^V<<3^V<<4;k=k>>>8^k&255^99,r[W]=k,S[k]=W;var Q=f[W],j=f[Q],J=f[j],ne=f[k]*257^k*16843008;o[W]=ne<<24|ne>>>8,l[W]=ne<<16|ne>>>16,C[W]=ne<<8|ne>>>24,M[W]=ne;var ne=J*16843009^j*65537^Q*257^W*16843008;u[k]=ne<<24|ne>>>8,h[k]=ne<<16|ne>>>16,P[k]=ne<<8|ne>>>24,G[k]=ne,W?(W=Q^f[f[f[J^Q]]],V^=f[f[V]]):W=V=1}})();var d=[0,1,2,4,8,16,32,64,128,27,54],H=a.AES=I.extend({_doReset:L(function(){var f;if(!(this._nRounds&&this._keyPriorReset===this._key)){for(var K=this._keyPriorReset=this._key,W=K.words,V=K.sigBytes/4,k=this._nRounds=V+6,Q=(k+1)*4,j=this._keySchedule=[],J=0;J<Q;J++)J<V?j[J]=W[J]:(f=j[J-1],J%V?V>6&&J%V==4&&(f=r[f>>>24]<<24|r[f>>>16&255]<<16|r[f>>>8&255]<<8|r[f&255]):(f=f<<8|f>>>24,f=r[f>>>24]<<24|r[f>>>16&255]<<16|r[f>>>8&255]<<8|r[f&255],f^=d[J/V|0]<<24),j[J]=j[J-V]^f);for(var ne=this._invKeySchedule=[],x=0;x<Q;x++){var J=Q-x;if(x%4)var f=j[J];else var f=j[J-4];x<4||J<=4?ne[x]=f:ne[x]=u[r[f>>>24]]^h[r[f>>>16&255]]^P[r[f>>>8&255]]^G[r[f&255]]}}},"_doReset"),encryptBlock:L(function(f,K){this._doCryptBlock(f,K,this._keySchedule,o,l,C,M,r)},"encryptBlock"),decryptBlock:L(function(f,K){var W=f[K+1];f[K+1]=f[K+3],f[K+3]=W,this._doCryptBlock(f,K,this._invKeySchedule,u,h,P,G,S);var W=f[K+1];f[K+1]=f[K+3],f[K+3]=W},"decryptBlock"),_doCryptBlock:L(function(f,K,W,V,k,Q,j,J){for(var ne=this._nRounds,x=f[K]^W[0],q=f[K+1]^W[1],F=f[K+2]^W[2],Te=f[K+3]^W[3],He=4,ue=1;ue<ne;ue++){var me=V[x>>>24]^k[q>>>16&255]^Q[F>>>8&255]^j[Te&255]^W[He++],Me=V[q>>>24]^k[F>>>16&255]^Q[Te>>>8&255]^j[x&255]^W[He++],Ie=V[F>>>24]^k[Te>>>16&255]^Q[x>>>8&255]^j[q&255]^W[He++],z=V[Te>>>24]^k[x>>>16&255]^Q[q>>>8&255]^j[F&255]^W[He++];x=me,q=Me,F=Ie,Te=z}var me=(J[x>>>24]<<24|J[q>>>16&255]<<16|J[F>>>8&255]<<8|J[Te&255])^W[He++],Me=(J[q>>>24]<<24|J[F>>>16&255]<<16|J[Te>>>8&255]<<8|J[x&255])^W[He++],Ie=(J[F>>>24]<<24|J[Te>>>16&255]<<16|J[x>>>8&255]<<8|J[q&255])^W[He++],z=(J[Te>>>24]<<24|J[x>>>16&255]<<16|J[q>>>8&255]<<8|J[F&255])^W[He++];f[K]=me,f[K+1]=Me,f[K+2]=Ie,f[K+3]=z},"_doCryptBlock"),keySize:256/32});R.AES=I._createHelper(H)}(),s.AES})}(XM)),XM.exports}L(Zk,"requireAes");var QM={exports:{}},Dx;function Xk(){return Dx||(Dx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),Da(),Ma(),RI(),_s())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,a=n.BlockCipher,r=R.algo,S=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],o=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],l=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],C=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],M=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],u=r.DES=a.extend({_doReset:L(function(){for(var d=this._key,H=d.words,f=[],K=0;K<56;K++){var W=S[K]-1;f[K]=H[W>>>5]>>>31-W%32&1}for(var V=this._subKeys=[],k=0;k<16;k++){for(var Q=V[k]=[],j=l[k],K=0;K<24;K++)Q[K/6|0]|=f[(o[K]-1+j)%28]<<31-K%6,Q[4+(K/6|0)]|=f[28+(o[K+24]-1+j)%28]<<31-K%6;Q[0]=Q[0]<<1|Q[0]>>>31;for(var K=1;K<7;K++)Q[K]=Q[K]>>>(K-1)*4+3;Q[7]=Q[7]<<5|Q[7]>>>27}for(var J=this._invSubKeys=[],K=0;K<16;K++)J[K]=V[15-K]},"_doReset"),encryptBlock:L(function(d,H){this._doCryptBlock(d,H,this._subKeys)},"encryptBlock"),decryptBlock:L(function(d,H){this._doCryptBlock(d,H,this._invSubKeys)},"decryptBlock"),_doCryptBlock:L(function(d,H,f){this._lBlock=d[H],this._rBlock=d[H+1],h.call(this,4,252645135),h.call(this,16,65535),P.call(this,2,858993459),P.call(this,8,16711935),h.call(this,1,1431655765);for(var K=0;K<16;K++){for(var W=f[K],V=this._lBlock,k=this._rBlock,Q=0,j=0;j<8;j++)Q|=C[j][((k^W[j])&M[j])>>>0];this._lBlock=k,this._rBlock=V^Q}var J=this._lBlock;this._lBlock=this._rBlock,this._rBlock=J,h.call(this,1,1431655765),P.call(this,8,16711935),P.call(this,2,858993459),h.call(this,16,65535),h.call(this,4,252645135),d[H]=this._lBlock,d[H+1]=this._rBlock},"_doCryptBlock"),keySize:64/32,ivSize:64/32,blockSize:64/32});function h(d,H){var f=(this._lBlock>>>d^this._rBlock)&H;this._rBlock^=f,this._lBlock^=f<<d}L(h,"exchangeLR");function P(d,H){var f=(this._rBlock>>>d^this._lBlock)&H;this._lBlock^=f,this._rBlock^=f<<d}L(P,"exchangeRL"),R.DES=a._createHelper(u);var G=r.TripleDES=a.extend({_doReset:L(function(){var d=this._key,H=d.words;if(H.length!==2&&H.length!==4&&H.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var f=H.slice(0,2),K=H.length<4?H.slice(0,2):H.slice(2,4),W=H.length<6?H.slice(0,2):H.slice(4,6);this._des1=u.createEncryptor(I.create(f)),this._des2=u.createEncryptor(I.create(K)),this._des3=u.createEncryptor(I.create(W))},"_doReset"),encryptBlock:L(function(d,H){this._des1.encryptBlock(d,H),this._des2.decryptBlock(d,H),this._des3.encryptBlock(d,H)},"encryptBlock"),decryptBlock:L(function(d,H){this._des3.decryptBlock(d,H),this._des2.encryptBlock(d,H),this._des1.decryptBlock(d,H)},"decryptBlock"),keySize:192/32,ivSize:64/32,blockSize:64/32});R.TripleDES=a._createHelper(G)}(),s.TripleDES})}(QM)),QM.exports}L(Xk,"requireTripledes");var JM={exports:{}},Mx;function Qk(){return Mx||(Mx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),Da(),Ma(),RI(),_s())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.StreamCipher,a=R.algo,r=a.RC4=I.extend({_doReset:L(function(){for(var l=this._key,C=l.words,M=l.sigBytes,u=this._S=[],h=0;h<256;h++)u[h]=h;for(var h=0,P=0;h<256;h++){var G=h%M,d=C[G>>>2]>>>24-G%4*8&255;P=(P+u[h]+d)%256;var H=u[h];u[h]=u[P],u[P]=H}this._i=this._j=0},"_doReset"),_doProcessBlock:L(function(l,C){l[C]^=S.call(this)},"_doProcessBlock"),keySize:256/32,ivSize:0});function S(){for(var l=this._S,C=this._i,M=this._j,u=0,h=0;h<4;h++){C=(C+1)%256,M=(M+l[C])%256;var P=l[C];l[C]=l[M],l[M]=P,u|=l[(l[C]+l[M])%256]<<24-h*8}return this._i=C,this._j=M,u}L(S,"generateKeystreamWord"),R.RC4=I._createHelper(r);var o=a.RC4Drop=r.extend({cfg:r.cfg.extend({drop:192}),_doReset:L(function(){r._doReset.call(this);for(var l=this.cfg.drop;l>0;l--)S.call(this)},"_doReset")});R.RC4Drop=I._createHelper(o)}(),s.RC4})}(JM)),JM.exports}L(Qk,"requireRc4");var $M={exports:{}},hx;function Jk(){return hx||(hx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),Da(),Ma(),RI(),_s())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.StreamCipher,a=R.algo,r=[],S=[],o=[],l=a.Rabbit=I.extend({_doReset:L(function(){for(var M=this._key.words,u=this.cfg.iv,h=0;h<4;h++)M[h]=(M[h]<<8|M[h]>>>24)&16711935|(M[h]<<24|M[h]>>>8)&4278255360;var P=this._X=[M[0],M[3]<<16|M[2]>>>16,M[1],M[0]<<16|M[3]>>>16,M[2],M[1]<<16|M[0]>>>16,M[3],M[2]<<16|M[1]>>>16],G=this._C=[M[2]<<16|M[2]>>>16,M[0]&4294901760|M[1]&65535,M[3]<<16|M[3]>>>16,M[1]&4294901760|M[2]&65535,M[0]<<16|M[0]>>>16,M[2]&4294901760|M[3]&65535,M[1]<<16|M[1]>>>16,M[3]&4294901760|M[0]&65535];this._b=0;for(var h=0;h<4;h++)C.call(this);for(var h=0;h<8;h++)G[h]^=P[h+4&7];if(u){var d=u.words,H=d[0],f=d[1],K=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,W=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360,V=K>>>16|W&4294901760,k=W<<16|K&65535;G[0]^=K,G[1]^=V,G[2]^=W,G[3]^=k,G[4]^=K,G[5]^=V,G[6]^=W,G[7]^=k;for(var h=0;h<4;h++)C.call(this)}},"_doReset"),_doProcessBlock:L(function(M,u){var h=this._X;C.call(this),r[0]=h[0]^h[5]>>>16^h[3]<<16,r[1]=h[2]^h[7]>>>16^h[5]<<16,r[2]=h[4]^h[1]>>>16^h[7]<<16,r[3]=h[6]^h[3]>>>16^h[1]<<16;for(var P=0;P<4;P++)r[P]=(r[P]<<8|r[P]>>>24)&16711935|(r[P]<<24|r[P]>>>8)&4278255360,M[u+P]^=r[P]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function C(){for(var M=this._X,u=this._C,h=0;h<8;h++)S[h]=u[h];u[0]=u[0]+1295307597+this._b|0,u[1]=u[1]+3545052371+(u[0]>>>0<S[0]>>>0?1:0)|0,u[2]=u[2]+886263092+(u[1]>>>0<S[1]>>>0?1:0)|0,u[3]=u[3]+1295307597+(u[2]>>>0<S[2]>>>0?1:0)|0,u[4]=u[4]+3545052371+(u[3]>>>0<S[3]>>>0?1:0)|0,u[5]=u[5]+886263092+(u[4]>>>0<S[4]>>>0?1:0)|0,u[6]=u[6]+1295307597+(u[5]>>>0<S[5]>>>0?1:0)|0,u[7]=u[7]+3545052371+(u[6]>>>0<S[6]>>>0?1:0)|0,this._b=u[7]>>>0<S[7]>>>0?1:0;for(var h=0;h<8;h++){var P=M[h]+u[h],G=P&65535,d=P>>>16,H=((G*G>>>17)+G*d>>>15)+d*d,f=((P&4294901760)*P|0)+((P&65535)*P|0);o[h]=H^f}M[0]=o[0]+(o[7]<<16|o[7]>>>16)+(o[6]<<16|o[6]>>>16)|0,M[1]=o[1]+(o[0]<<8|o[0]>>>24)+o[7]|0,M[2]=o[2]+(o[1]<<16|o[1]>>>16)+(o[0]<<16|o[0]>>>16)|0,M[3]=o[3]+(o[2]<<8|o[2]>>>24)+o[1]|0,M[4]=o[4]+(o[3]<<16|o[3]>>>16)+(o[2]<<16|o[2]>>>16)|0,M[5]=o[5]+(o[4]<<8|o[4]>>>24)+o[3]|0,M[6]=o[6]+(o[5]<<16|o[5]>>>16)+(o[4]<<16|o[4]>>>16)|0,M[7]=o[7]+(o[6]<<8|o[6]>>>24)+o[5]|0}L(C,"nextState"),R.Rabbit=I._createHelper(l)}(),s.Rabbit})}($M)),$M.exports}L(Jk,"requireRabbit");var zM={exports:{}},cx;function $k(){return cx||(cx=1,function(E,A){(function(s,R,n){E.exports=R(cA(),Da(),Ma(),RI(),_s())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.StreamCipher,a=R.algo,r=[],S=[],o=[],l=a.RabbitLegacy=I.extend({_doReset:L(function(){var M=this._key.words,u=this.cfg.iv,h=this._X=[M[0],M[3]<<16|M[2]>>>16,M[1],M[0]<<16|M[3]>>>16,M[2],M[1]<<16|M[0]>>>16,M[3],M[2]<<16|M[1]>>>16],P=this._C=[M[2]<<16|M[2]>>>16,M[0]&4294901760|M[1]&65535,M[3]<<16|M[3]>>>16,M[1]&4294901760|M[2]&65535,M[0]<<16|M[0]>>>16,M[2]&4294901760|M[3]&65535,M[1]<<16|M[1]>>>16,M[3]&4294901760|M[0]&65535];this._b=0;for(var G=0;G<4;G++)C.call(this);for(var G=0;G<8;G++)P[G]^=h[G+4&7];if(u){var d=u.words,H=d[0],f=d[1],K=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,W=(f<<8|f>>>24)&16711935|(f<<24|f>>>8)&4278255360,V=K>>>16|W&4294901760,k=W<<16|K&65535;P[0]^=K,P[1]^=V,P[2]^=W,P[3]^=k,P[4]^=K,P[5]^=V,P[6]^=W,P[7]^=k;for(var G=0;G<4;G++)C.call(this)}},"_doReset"),_doProcessBlock:L(function(M,u){var h=this._X;C.call(this),r[0]=h[0]^h[5]>>>16^h[3]<<16,r[1]=h[2]^h[7]>>>16^h[5]<<16,r[2]=h[4]^h[1]>>>16^h[7]<<16,r[3]=h[6]^h[3]>>>16^h[1]<<16;for(var P=0;P<4;P++)r[P]=(r[P]<<8|r[P]>>>24)&16711935|(r[P]<<24|r[P]>>>8)&4278255360,M[u+P]^=r[P]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function C(){for(var M=this._X,u=this._C,h=0;h<8;h++)S[h]=u[h];u[0]=u[0]+1295307597+this._b|0,u[1]=u[1]+3545052371+(u[0]>>>0<S[0]>>>0?1:0)|0,u[2]=u[2]+886263092+(u[1]>>>0<S[1]>>>0?1:0)|0,u[3]=u[3]+1295307597+(u[2]>>>0<S[2]>>>0?1:0)|0,u[4]=u[4]+3545052371+(u[3]>>>0<S[3]>>>0?1:0)|0,u[5]=u[5]+886263092+(u[4]>>>0<S[4]>>>0?1:0)|0,u[6]=u[6]+1295307597+(u[5]>>>0<S[5]>>>0?1:0)|0,u[7]=u[7]+3545052371+(u[6]>>>0<S[6]>>>0?1:0)|0,this._b=u[7]>>>0<S[7]>>>0?1:0;for(var h=0;h<8;h++){var P=M[h]+u[h],G=P&65535,d=P>>>16,H=((G*G>>>17)+G*d>>>15)+d*d,f=((P&4294901760)*P|0)+((P&65535)*P|0);o[h]=H^f}M[0]=o[0]+(o[7]<<16|o[7]>>>16)+(o[6]<<16|o[6]>>>16)|0,M[1]=o[1]+(o[0]<<8|o[0]>>>24)+o[7]|0,M[2]=o[2]+(o[1]<<16|o[1]>>>16)+(o[0]<<16|o[0]>>>16)|0,M[3]=o[3]+(o[2]<<8|o[2]>>>24)+o[1]|0,M[4]=o[4]+(o[3]<<16|o[3]>>>16)+(o[2]<<16|o[2]>>>16)|0,M[5]=o[5]+(o[4]<<8|o[4]>>>24)+o[3]|0,M[6]=o[6]+(o[5]<<16|o[5]>>>16)+(o[4]<<16|o[4]>>>16)|0,M[7]=o[7]+(o[6]<<8|o[6]>>>24)+o[5]|0}L(C,"nextState"),R.RabbitLegacy=I._createHelper(l)}(),s.RabbitLegacy})}(zM)),zM.exports}L($k,"requireRabbitLegacy");var qM={exports:{}},_x;function zk(){return _x||(_x=1,function(E,A){(function(s,R,n){E.exports=R(cA(),Da(),Ma(),RI(),_s())})(AA,function(s){return function(){var R=s,n=R.lib,I=n.BlockCipher,a=R.algo;const r=16,S=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],o=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var l={pbox:[],sbox:[]};function C(G,d){let H=d>>24&255,f=d>>16&255,K=d>>8&255,W=d&255,V=G.sbox[0][H]+G.sbox[1][f];return V=V^G.sbox[2][K],V=V+G.sbox[3][W],V}L(C,"F");function M(G,d,H){let f=d,K=H,W;for(let V=0;V<r;++V)f=f^G.pbox[V],K=C(G,f)^K,W=f,f=K,K=W;return W=f,f=K,K=W,K=K^G.pbox[r],f=f^G.pbox[r+1],{left:f,right:K}}L(M,"BlowFish_Encrypt");function u(G,d,H){let f=d,K=H,W;for(let V=r+1;V>1;--V)f=f^G.pbox[V],K=C(G,f)^K,W=f,f=K,K=W;return W=f,f=K,K=W,K=K^G.pbox[1],f=f^G.pbox[0],{left:f,right:K}}L(u,"BlowFish_Decrypt");function h(G,d,H){for(let k=0;k<4;k++){G.sbox[k]=[];for(let Q=0;Q<256;Q++)G.sbox[k][Q]=o[k][Q]}let f=0;for(let k=0;k<r+2;k++)G.pbox[k]=S[k]^d[f],f++,f>=H&&(f=0);let K=0,W=0,V=0;for(let k=0;k<r+2;k+=2)V=M(G,K,W),K=V.left,W=V.right,G.pbox[k]=K,G.pbox[k+1]=W;for(let k=0;k<4;k++)for(let Q=0;Q<256;Q+=2)V=M(G,K,W),K=V.left,W=V.right,G.sbox[k][Q]=K,G.sbox[k][Q+1]=W;return!0}L(h,"BlowFishInit");var P=a.Blowfish=I.extend({_doReset:L(function(){if(this._keyPriorReset!==this._key){var G=this._keyPriorReset=this._key,d=G.words,H=G.sigBytes/4;h(l,d,H)}},"_doReset"),encryptBlock:L(function(G,d){var H=M(l,G[d],G[d+1]);G[d]=H.left,G[d+1]=H.right},"encryptBlock"),decryptBlock:L(function(G,d){var H=u(l,G[d],G[d+1]);G[d]=H.left,G[d+1]=H.right},"decryptBlock"),blockSize:64/32,keySize:128/32,ivSize:64/32});R.Blowfish=I._createHelper(P)}(),s.Blowfish})}(qM)),qM.exports}L(zk,"requireBlowfish");(function(E,A){(function(s,R,n){E.exports=R(cA(),nM(),Gk(),Hk(),Da(),dk(),Ma(),T6(),O1(),fk(),S6(),Bk(),gk(),Kk(),n1(),mk(),RI(),_s(),Fk(),pk(),Wk(),Yk(),yk(),wk(),vk(),Vk(),xk(),bk(),kk(),Zk(),Xk(),Qk(),Jk(),$k(),zk())})(AA,function(s){return s})})(N6);var sr=N6.exports;let rt=null;const fc=tM(32);function pI(){return new Promise(E=>{{rt={username:"Guest",lastSessionSlot:-1,discordId:"",googleId:"",hasAdminRole:!1};let A=-1;for(let s=0;s<5;s++)if(localStorage.getItem(`sessionData${s||""}_${rt.username}`)){A=s;break}return rt.lastSessionSlot=A,["data","sessionData","sessionData1","sessionData2","sessionData3","sessionData4"].map(s=>{const R=localStorage.getItem(s);if(R&&(rt!=null&&rt.username)){const n=localStorage.getItem(`${s}_${rt.username}`);n&&localStorage.setItem(`${s}_${rt.username}_bak`,n),localStorage.setItem(`${s}_${rt.username}`,R),localStorage.removeItem(s)}}),E([!0,200])}})}L(pI,"updateUserInfo");const mB=class mB{constructor(A){this.playTime=(A==null?void 0:A.playTime)||0,this.battles=(A==null?void 0:A.battles)||0,this.classicSessionsPlayed=(A==null?void 0:A.classicSessionsPlayed)||0,this.sessionsWon=(A==null?void 0:A.sessionsWon)||0,this.ribbonsOwned=(A==null?void 0:A.ribbonsOwned)||0,this.dailyRunSessionsPlayed=(A==null?void 0:A.dailyRunSessionsPlayed)||0,this.dailyRunSessionsWon=(A==null?void 0:A.dailyRunSessionsWon)||0,this.endlessSessionsPlayed=(A==null?void 0:A.endlessSessionsPlayed)||0,this.highestEndlessWave=(A==null?void 0:A.highestEndlessWave)||0,this.highestLevel=(A==null?void 0:A.highestLevel)||0,this.highestMoney=(A==null?void 0:A.highestMoney)||0,this.highestDamage=(A==null?void 0:A.highestDamage)||0,this.highestHeal=(A==null?void 0:A.highestHeal)||0,this.pokemonSeen=(A==null?void 0:A.pokemonSeen)||0,this.pokemonDefeated=(A==null?void 0:A.pokemonDefeated)||0,this.pokemonCaught=(A==null?void 0:A.pokemonCaught)||0,this.pokemonHatched=(A==null?void 0:A.pokemonHatched)||0,this.subLegendaryPokemonSeen=(A==null?void 0:A.subLegendaryPokemonSeen)??0,this.subLegendaryPokemonCaught=(A==null?void 0:A.subLegendaryPokemonCaught)??0,this.subLegendaryPokemonHatched=(A==null?void 0:A.subLegendaryPokemonHatched)??0,this.legendaryPokemonSeen=(A==null?void 0:A.legendaryPokemonSeen)||0,this.legendaryPokemonCaught=(A==null?void 0:A.legendaryPokemonCaught)||0,this.legendaryPokemonHatched=(A==null?void 0:A.legendaryPokemonHatched)||0,this.mythicalPokemonSeen=(A==null?void 0:A.mythicalPokemonSeen)||0,this.mythicalPokemonCaught=(A==null?void 0:A.mythicalPokemonCaught)||0,this.mythicalPokemonHatched=(A==null?void 0:A.mythicalPokemonHatched)||0,this.shinyPokemonSeen=(A==null?void 0:A.shinyPokemonSeen)||0,this.shinyPokemonCaught=(A==null?void 0:A.shinyPokemonCaught)||0,this.shinyPokemonHatched=(A==null?void 0:A.shinyPokemonHatched)||0,this.pokemonFused=(A==null?void 0:A.pokemonFused)||0,this.trainersDefeated=(A==null?void 0:A.trainersDefeated)||0,this.eggsPulled=(A==null?void 0:A.eggsPulled)||0,this.rareEggsPulled=(A==null?void 0:A.rareEggsPulled)||0,this.epicEggsPulled=(A==null?void 0:A.epicEggsPulled)||0,this.legendaryEggsPulled=(A==null?void 0:A.legendaryEggsPulled)||0,this.manaphyEggsPulled=(A==null?void 0:A.manaphyEggsPulled)||0}};L(mB,"GameStats");let ql=mB;var JR=(E=>(E.Intro="INTRO",E.Access_Menu="ACCESS_MENU",E.Menu="MENU",E.Starter_Select="STARTER_SELECT",E.Pokerus="POKERUS",E.Stat_Change="STAT_CHANGE",E.Select_Item="SELECT_ITEM",E.Egg_Gacha="EGG_GACHA",E))(JR||{});const qk={INTRO:L(E=>new Promise(A=>{E.ui.showText(D.t("tutorial:intro"),null,()=>A(),null,!0)}),"INTRO"),ACCESS_MENU:L(E=>new Promise(A=>{if(E.enableTouchControls)return A();E.showFieldOverlay(1e3).then(()=>E.ui.showText(D.t("tutorial:accessMenu"),null,()=>E.hideFieldOverlay(1e3).then(()=>A()),null,!0))}),"ACCESS_MENU"),MENU:L(E=>new Promise(A=>{E.gameData.saveTutorialFlag("ACCESS_MENU",!0),E.ui.showText(D.t("tutorial:menu"),null,()=>E.ui.showText("",null,()=>A()),null,!0)}),"MENU"),STARTER_SELECT:L(E=>new Promise(A=>{E.ui.showText(D.t("tutorial:starterSelect"),null,()=>E.ui.showText("",null,()=>A()),null,!0)}),"STARTER_SELECT"),POKERUS:L(E=>new Promise(A=>{E.ui.showText(D.t("tutorial:pokerus"),null,()=>E.ui.showText("",null,()=>A()),null,!0)}),"POKERUS"),STAT_CHANGE:L(E=>new Promise(A=>{E.showFieldOverlay(1e3).then(()=>E.ui.showText(D.t("tutorial:statChange"),null,()=>E.ui.showText("",null,()=>E.hideFieldOverlay(1e3).then(()=>A())),null,!0))}),"STAT_CHANGE"),SELECT_ITEM:L(E=>new Promise(A=>{E.ui.setModeWithoutClear(Oe.MESSAGE).then(()=>{E.ui.showText(D.t("tutorial:selectItem"),null,()=>E.ui.showText("",null,()=>E.ui.setModeWithoutClear(Oe.MODIFIER_SELECT).then(()=>A())),null,!0)})}),"SELECT_ITEM"),EGG_GACHA:L(E=>new Promise(A=>{E.ui.showText(D.t("tutorial:eggGacha"),null,()=>E.ui.showText("",null,()=>A()),null,!0)}),"EGG_GACHA")};async function Wi(E,A){if(!E.enableTutorials&&!Ye.BYPASS_TUTORIAL_SKIP_OVERRIDE||E.gameData.getTutorialFlags()[A]&&!Ye.BYPASS_TUTORIAL_SKIP_OVERRIDE)return!1;const s=E.ui.getHandler(),R=E.disableMenu;return E.disableMenu=!0,s instanceof xn&&(s.tutorialActive=!0),await jk(E,s),await qk[A](E),await eZ(E,s),E.disableMenu=R,E.gameData.saveTutorialFlag(A,!0),s instanceof xn&&(s.tutorialActive=!1),!0}L(Wi,"handleTutorial");async function jk(E,A){if(A instanceof xn&&A.tutorialOverlay)E.tweens.add({targets:A.tutorialOverlay,alpha:.5,duration:750,ease:"Sine.easeOut",onComplete:L(()=>!0,"onComplete")});else return!0}L(jk,"showTutorialOverlay");async function eZ(E,A){if(A instanceof xn&&A.tutorialOverlay)E.tweens.add({targets:A.tutorialOverlay,alpha:0,duration:500,ease:"Sine.easeOut",onComplete:L(()=>!0,"onComplete")});else return!0}L(eZ,"hideTutorialOverlay");var at=(E=>(E.Button_Up="BUTTON_UP",E.Alt_Button_Up="ALT_BUTTON_UP",E.Button_Down="BUTTON_DOWN",E.Alt_Button_Down="ALT_BUTTON_DOWN",E.Button_Left="BUTTON_LEFT",E.Alt_Button_Left="ALT_BUTTON_LEFT",E.Button_Right="BUTTON_RIGHT",E.Alt_Button_Right="ALT_BUTTON_RIGHT",E.Button_Action="BUTTON_ACTION",E.Alt_Button_Action="ALT_BUTTON_ACTION",E.Button_Cancel="BUTTON_CANCEL",E.Alt_Button_Cancel="ALT_BUTTON_CANCEL",E.Button_Menu="BUTTON_MENU",E.Alt_Button_Menu="ALT_BUTTON_MENU",E.Button_Stats="BUTTON_STATS",E.Alt_Button_Stats="ALT_BUTTON_STATS",E.Button_Cycle_Form="BUTTON_CYCLE_FORM",E.Alt_Button_Cycle_Form="ALT_BUTTON_CYCLE_FORM",E.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",E.Alt_Button_Cycle_Shiny="ALT_BUTTON_CYCLE_SHINY",E.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",E.Alt_Button_Cycle_Gender="ALT_BUTTON_CYCLE_GENDER",E.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",E.Alt_Button_Cycle_Ability="ALT_BUTTON_CYCLE_ABILITY",E.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",E.Alt_Button_Cycle_Nature="ALT_BUTTON_CYCLE_NATURE",E.Button_Cycle_Variant="BUTTON_CYCLE_VARIANT",E.Alt_Button_Cycle_Variant="ALT_BUTTON_CYCLE_VARIANT",E.Button_Speed_Up="BUTTON_SPEED_UP",E.Alt_Button_Speed_Up="ALT_BUTTON_SPEED_UP",E.Button_Slow_Down="BUTTON_SLOW_DOWN",E.Alt_Button_Slow_Down="ALT_BUTTON_SLOW_DOWN",E.Button_Submit="BUTTON_SUBMIT",E.Alt_Button_Submit="ALT_BUTTON_SUBMIT",E))(at||{});const _A=D.t("settings:pressToBind"),tZ={BUTTON_UP:[`KEY ${b.UP.toString()}`,_A],BUTTON_DOWN:[`KEY ${b.DOWN.toString()}`,_A],ALT_BUTTON_UP:[`KEY ${b.UP.toString()}`,_A],BUTTON_LEFT:[`KEY ${b.LEFT.toString()}`,_A],BUTTON_RIGHT:[`KEY ${b.RIGHT.toString()}`,_A],BUTTON_ACTION:[`KEY ${b.ACTION.toString()}`,_A],BUTTON_MENU:[`KEY ${b.MENU.toString()}`,_A],BUTTON_SUBMIT:[`KEY ${b.SUBMIT.toString()}`,_A],ALT_BUTTON_DOWN:[`KEY ${b.DOWN.toString()}`,_A],ALT_BUTTON_LEFT:[`KEY ${b.LEFT.toString()}`,_A],ALT_BUTTON_RIGHT:[`KEY ${b.RIGHT.toString()}`,_A],ALT_BUTTON_ACTION:[`KEY ${b.ACTION.toString()}`,_A],BUTTON_CANCEL:[`KEY ${b.CANCEL.toString()}`,_A],ALT_BUTTON_CANCEL:[`KEY ${b.CANCEL.toString()}`,_A],ALT_BUTTON_MENU:[`KEY ${b.MENU.toString()}`,_A],BUTTON_STATS:[`KEY ${b.STATS.toString()}`,_A],ALT_BUTTON_STATS:[`KEY ${b.STATS.toString()}`,_A],BUTTON_CYCLE_FORM:[`KEY ${b.CYCLE_FORM.toString()}`,_A],ALT_BUTTON_CYCLE_FORM:[`KEY ${b.CYCLE_FORM.toString()}`,_A],BUTTON_CYCLE_SHINY:[`KEY ${b.CYCLE_SHINY.toString()}`,_A],ALT_BUTTON_CYCLE_SHINY:[`KEY ${b.CYCLE_SHINY.toString()}`,_A],BUTTON_CYCLE_GENDER:[`KEY ${b.CYCLE_GENDER.toString()}`,_A],ALT_BUTTON_CYCLE_GENDER:[`KEY ${b.CYCLE_GENDER.toString()}`,_A],BUTTON_CYCLE_ABILITY:[`KEY ${b.CYCLE_ABILITY.toString()}`,_A],ALT_BUTTON_CYCLE_ABILITY:[`KEY ${b.CYCLE_ABILITY.toString()}`,_A],BUTTON_CYCLE_NATURE:[`KEY ${b.CYCLE_NATURE.toString()}`,_A],ALT_BUTTON_CYCLE_NATURE:[`KEY ${b.CYCLE_NATURE.toString()}`,_A],BUTTON_CYCLE_VARIANT:[`KEY ${b.V.toString()}`,_A],ALT_BUTTON_CYCLE_VARIANT:[`KEY ${b.V.toString()}`,_A],BUTTON_SPEED_UP:[`KEY ${b.SPEED_UP.toString()}`,_A],ALT_BUTTON_SPEED_UP:[`KEY ${b.SPEED_UP.toString()}`,_A],BUTTON_SLOW_DOWN:[`KEY ${b.SLOW_DOWN.toString()}`,_A],ALT_BUTTON_SLOW_DOWN:[`KEY ${b.SLOW_DOWN.toString()}`,_A],ALT_BUTTON_SUBMIT:[`KEY ${b.SUBMIT.toString()}`,_A]},AZ={BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_MENU:0,BUTTON_SUBMIT:0,ALT_BUTTON_UP:0,ALT_BUTTON_DOWN:0,ALT_BUTTON_LEFT:0,ALT_BUTTON_RIGHT:0,ALT_BUTTON_ACTION:0,BUTTON_CANCEL:0,ALT_BUTTON_CANCEL:0,ALT_BUTTON_MENU:0,BUTTON_STATS:0,ALT_BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,ALT_BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,ALT_BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,ALT_BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,ALT_BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,ALT_BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_VARIANT:0,ALT_BUTTON_CYCLE_VARIANT:0,BUTTON_SPEED_UP:0,ALT_BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,ALT_BUTTON_SLOW_DOWN:0,ALT_BUTTON_SUBMIT:0},EZ=["BUTTON_SUBMIT","BUTTON_MENU","BUTTON_ACTION","BUTTON_CANCEL","BUTTON_UP","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT"];function o6(E,A,s){switch(A){case"BUTTON_UP":case"BUTTON_DOWN":case"BUTTON_LEFT":case"BUTTON_RIGHT":case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_VARIANT":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"ALT_BUTTON_UP":case"ALT_BUTTON_DOWN":case"ALT_BUTTON_LEFT":case"ALT_BUTTON_RIGHT":case"ALT_BUTTON_ACTION":case"ALT_BUTTON_CANCEL":case"ALT_BUTTON_MENU":case"ALT_BUTTON_STATS":case"ALT_BUTTON_CYCLE_SHINY":case"ALT_BUTTON_CYCLE_FORM":case"ALT_BUTTON_CYCLE_GENDER":case"ALT_BUTTON_CYCLE_ABILITY":case"ALT_BUTTON_CYCLE_NATURE":case"ALT_BUTTON_CYCLE_VARIANT":case"ALT_BUTTON_SPEED_UP":case"ALT_BUTTON_SLOW_DOWN":case"ALT_BUTTON_SUBMIT":if(s&&E.ui){const R=L((n=!1)=>(E.ui.revertMode(),E.ui.getHandler().updateBindings(),n),"cancelHandler");E.ui.setOverlayMode(Oe.KEYBOARD_BINDING,{target:A,cancelHandler:R})}break}return!0}L(o6,"setSettingKeyboard");var fe=(E=>(E.Controller="CONTROLLER",E.Gamepad_Support="GAMEPAD_SUPPORT",E.Button_Up="BUTTON_UP",E.Button_Down="BUTTON_DOWN",E.Button_Left="BUTTON_LEFT",E.Button_Right="BUTTON_RIGHT",E.Button_Action="BUTTON_ACTION",E.Button_Cancel="BUTTON_CANCEL",E.Button_Menu="BUTTON_MENU",E.Button_Stats="BUTTON_STATS",E.Button_Cycle_Form="BUTTON_CYCLE_FORM",E.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",E.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",E.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",E.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",E.Button_Cycle_Variant="BUTTON_CYCLE_VARIANT",E.Button_Speed_Up="BUTTON_SPEED_UP",E.Button_Slow_Down="BUTTON_SLOW_DOWN",E.Button_Submit="BUTTON_SUBMIT",E))(fe||{});const Ps="Press action to assign",l6={CONTROLLER:["Default","Change"],GAMEPAD_SUPPORT:["Auto","Disabled"],BUTTON_UP:[`KEY ${b.UP.toString()}`,Ps],BUTTON_DOWN:[`KEY ${b.DOWN.toString()}`,Ps],BUTTON_LEFT:[`KEY ${b.LEFT.toString()}`,Ps],BUTTON_RIGHT:[`KEY ${b.RIGHT.toString()}`,Ps],BUTTON_ACTION:[`KEY ${b.ACTION.toString()}`,Ps],BUTTON_CANCEL:[`KEY ${b.CANCEL.toString()}`,Ps],BUTTON_MENU:[`KEY ${b.MENU.toString()}`,Ps],BUTTON_STATS:[`KEY ${b.STATS.toString()}`,Ps],BUTTON_CYCLE_FORM:[`KEY ${b.CYCLE_FORM.toString()}`,Ps],BUTTON_CYCLE_SHINY:[`KEY ${b.CYCLE_SHINY.toString()}`,Ps],BUTTON_CYCLE_GENDER:[`KEY ${b.CYCLE_GENDER.toString()}`,Ps],BUTTON_CYCLE_ABILITY:[`KEY ${b.CYCLE_ABILITY.toString()}`,Ps],BUTTON_CYCLE_NATURE:[`KEY ${b.CYCLE_NATURE.toString()}`,Ps],BUTTON_CYCLE_VARIANT:[`KEY ${b.V.toString()}`,Ps],BUTTON_SPEED_UP:[`KEY ${b.SPEED_UP.toString()}`,Ps],BUTTON_SLOW_DOWN:[`KEY ${b.SLOW_DOWN.toString()}`,Ps],BUTTON_SUBMIT:[`KEY ${b.SUBMIT.toString()}`,Ps]},C6={CONTROLLER:0,GAMEPAD_SUPPORT:0,BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_CANCEL:0,BUTTON_MENU:0,BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_VARIANT:0,BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,BUTTON_SUBMIT:0},sZ=[at.Button_Up,at.Button_Down,at.Button_Left,at.Button_Right];function Nl(E,A,s){switch(A){case"GAMEPAD_SUPPORT":E.inputController.setGamepadSupport(l6[A][s]!=="Disabled");break;case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_VARIANT":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"BUTTON_SUBMIT":if(s&&E.ui){const R=L((n=!1)=>(E.ui.revertMode(),E.ui.getHandler().updateBindings(),n),"cancelHandler");E.ui.setOverlayMode(Oe.GAMEPAD_BINDING,{target:A,cancelHandler:R})}break;case"CONTROLLER":if(s){const R=E.inputController.getGamepadsName();if(E.ui&&R){const n=L(()=>(E.ui.revertMode(),E.ui.getHandler().setOptionCursor(Object.values(fe).indexOf("CONTROLLER"),0,!0),E.ui.getHandler().updateBindings(),!1),"cancelHandler"),I=L(a=>(E.inputController.setChosenGamepad(a),n(),!0),"changeGamepadHandler");return E.ui.setOverlayMode(Oe.OPTION_SELECT,{options:[...R.map(a=>({label:zd(a,30),handler:L(()=>I(a),"handler")})),{label:"Cancel",handler:n}]}),!1}}break}return!0}L(Nl,"setSettingGamepad");var hn=(E=>(E.WEATHER_CHANGED="onWeatherChanged",E.TERRAIN_CHANGED="onTerrainChanged",E.TAG_ADDED="onTagAdded",E.TAG_REMOVED="onTagRemoved",E))(hn||{});const FB=class FB extends Event{constructor(A,s){super(A),this.duration=s}};L(FB,"ArenaEvent");let Dr=FB;const pB=class pB extends Dr{constructor(A,s,R){super("onWeatherChanged",R),this.oldWeatherType=A,this.newWeatherType=s}};L(pB,"WeatherChangedEvent");let Hi=pB;const WB=class WB extends Dr{constructor(A,s,R){super("onTerrainChanged",R),this.oldTerrainType=A,this.newTerrainType=s}};L(WB,"TerrainChangedEvent");let yT=WB;const YB=class YB extends Dr{constructor(A,s,R,n,I){super("onTagAdded",R),this.arenaTagType=A,this.arenaTagSide=s,this.arenaTagLayers=n,this.arenaTagMaxLayers=I}};L(YB,"TagAddedEvent");let XI=YB;const yB=class yB extends Dr{constructor(A,s,R){super("onTagRemoved",R),this.arenaTagType=A,this.arenaTagSide=s}};L(yB,"TagRemovedEvent");let hI=yB;const wB=class wB{constructor(A){this.id=A.id,this.value=A.value,this.severity=A.severity}toChallenge(){return V6(this)}};L(wB,"ChallengeData");let wT=wB;var iA=(E=>(E[E.GAMEPAD=0]="GAMEPAD",E[E.KEYBOARD=1]="KEYBOARD",E))(iA||{}),UE=(E=>(E[E.SYSTEM=0]="SYSTEM",E[E.SESSION=1]="SESSION",E[E.SETTINGS=2]="SETTINGS",E[E.TUTORIALS=3]="TUTORIALS",E[E.SEEN_DIALOGUES=4]="SEEN_DIALOGUES",E[E.RUN_HISTORY=5]="RUN_HISTORY",E))(UE||{});const vB=class vB{constructor(A){this.scene=A}start(){this.scene.abilityBar.shown&&this.scene.abilityBar.resetAutoHideTimer()}end(){this.scene.shiftPhase()}};L(vB,"Phase");let iE=vB;var jl=(E=>(E.WHITE="#ffffff",E.OFF_WHITE="#f8f8f8",E.LIGHT_GREY="#a0a0a0",E.GREY="#484848",E.DARK_GREY="#404040",E.PINK="#f89890",E.RED="#e13d3d",E.RED2="#e70808",E.REDORANGE="#d64b00",E.ORANGE="#f8b050",E.LIGHT_YELLOW="#e8e8a8",E.YELLOW="#ccbe00",E.DARK_YELLOW="#a68e17",E.GREEN="#78c850",E.BLUE="#40c8f8",E.COMMON="#ffffff",E.GREAT="#3890f8",E.ULTRA="#f8d038",E.ROGUE="#d52929",E.MASTER="#e020c0",E.LUXURY="#e64a18",E))(jl||{}),i1=(E=>(E.NORMAL="#ADA594",E.FIGHTING="#A55239",E.FLYING="#9CADF7",E.POISON="#9141CB",E.GROUND="#AE7A3B",E.ROCK="#BDA55A",E.BUG="#ADBD21",E.GHOST="#6363B5",E.STEEL="#81A6BE",E.FIRE="#F75231",E.WATER="#399CFF",E.GRASS="#7BCE52",E.ELECTRIC="#FFC631",E.PSYCHIC="#EF4179",E.ICE="#5ACEE7",E.DRAGON="#7B63E7",E.DARK="#735A4A",E.FAIRY="#EF70EF",E))(i1||{}),I1=(E=>(E.NORMAL="#574F4A",E.FIGHTING="#4E637C",E.FLYING="#4E637C",E.POISON="#352166",E.GROUND="#572D1E",E.ROCK="#5F442D",E.BUG="#5F5010",E.GHOST="#323D5B",E.STEEL="#415C5F",E.FIRE="#7C1818",E.WATER="#1C4E80",E.GRASS="#4F6729",E.ELECTRIC="#804618",E.PSYCHIC="#782155",E.ICE="#2D5C74",E.DRAGON="#313874",E.DARK="#392725",E.FAIRY="#663878",E))(I1||{}),eC=(E=>(E.GREY="#636363",E.PURPLE="#6b5a73",E.LIGHT_GREY="#d0d0c8",E.BROWN="#69402a",E.PINK="#fca2a2",E.BRIGHT_RED="#f83018",E.RED="#984038",E.MAROON="#632929",E.GREEN="#306850",E.BLUE="#006090",E.LIGHT_YELLOW="#ded6b5",E.YELLOW="#ebd773",E.DARK_YELLOW="#a0a060",E.ORANGE="#c07800",E.LIGHT_ORANGE="#ffbd73",E))(eC||{}),a1=(E=>(E[E.RUN_HISTORY=0]="RUN_HISTORY",E[E.SESSION_PREVIEW=1]="SESSION_PREVIEW",E))(a1||{});const VB=class VB extends Ws{constructor(A){super(A,Oe.RUN_INFO)}async setup(){this.runContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.modifiersModule=Ul,this.runContainer.setVisible(!1),this.scene.loadImage("encounter_exclaim","mystery-encounters")}show(A){super.show(A);const s=this.scene.add.rectangle(0,0,this.scene.game.canvas.width,this.scene.game.canvas.height,26720);s.setOrigin(0,0),this.runContainer.add(s);const R=A[0];this.runDisplayMode=A[1],this.runDisplayMode===0?(this.runInfo=this.scene.gameData.parseSessionData(JSON.stringify(R.entry)),this.isVictory=R.isVictory??!1):this.runDisplayMode===1&&(this.runInfo=A[0]),this.pageMode=0,this.addHeader(),this.statsBgWidth=(this.scene.game.canvas.width/6-2)/3,this.runResultContainer=this.scene.add.container(0,24);const n=_t(this.scene,0,0,this.statsBgWidth-11,65);n.setOrigin(0,0),n.setName("Run_Result_Window"),this.runResultContainer.add(n),this.runDisplayMode===0?this.parseRunResult():this.runDisplayMode===1&&this.parseRunStatus(),this.runInfoContainer=this.scene.add.container(0,89);const I=_t(this.scene,0,0,this.statsBgWidth-11,90),a=I.getBottomRight();return this.runInfoContainer.add(I),this.parseRunInfo(a.x,a.y),this.partyContainer=this.scene.add.container(this.statsBgWidth-10,23),this.parsePartyInfo(),this.showParty(!0),this.runContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.getUi().bringToTop(this.runContainer),this.runContainer.setVisible(!0),this.isVictory&&(this.createHallofFame(),this.getUi().bringToTop(this.hallofFameContainer)),this.setCursor(0),this.getUi().add(this.runContainer),this.getUi().hideTooltip(),!0}addHeader(){var R;const A=_t(this.scene,0,0,this.scene.game.canvas.width/6-2,24);if(A.setOrigin(0,0),this.runContainer.add(A),this.runInfo.modifiers.length!==0){const n=A.getTopRight(),I=this.scene.add.container(0,0),a=le(this.scene,8,0,D.t("runHistory:viewHeldItems"),X.WINDOW,{fontSize:"34px"}),r=this.getUi().getGamepadType();let S;r==="touch"?S=new Phaser.GameObjects.Sprite(this.scene,0,2,"keyboard","E.png"):S=new Phaser.GameObjects.Sprite(this.scene,0,2,r,(R=this.scene.inputController)==null?void 0:R.getIconForLatestInputRecorded(at.Button_Cycle_Ability)),I.add([a,S]),I.setPosition(n.x-a.displayWidth-S.displayWidth-8,10),this.runContainer.add(I)}const s=le(this.scene,0,0,D.t("runHistory:runInfo"),X.SETTINGS_LABEL);s.setOrigin(0,0),s.setPositionRelative(A,8,4),this.runContainer.add(s)}async parseRunResult(){var a,r;const A=this.scene.gameData.gender??vt.UNSET,s=vt[A],R=this.isVictory?X.PERFECT_IV:X.SUMMARY_RED,n=this.isVictory?D.t("runHistory:victory"):D.t("runHistory:defeated",{context:s}),I=le(this.scene,6,5,`${n} - ${D.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,R,{fontSize:"65px",lineSpacing:.1});if(this.isVictory){const S=this.scene.add.container(0,0),o=le(this.scene,8,0,D.t("runHistory:viewHallOfFame"),X.WINDOW,{fontSize:"65px"}),l=le(this.scene,8,12,D.t("runHistory:viewEndingSplash"),X.WINDOW,{fontSize:"65px"}),C=this.getUi().getGamepadType();let M,u;C==="touch"?(M=new Phaser.GameObjects.Sprite(this.scene,0,4,"keyboard","R.png"),u=new Phaser.GameObjects.Sprite(this.scene,0,16,"keyboard","F.png")):(M=new Phaser.GameObjects.Sprite(this.scene,0,4,C,(a=this.scene.inputController)==null?void 0:a.getIconForLatestInputRecorded(at.Button_Cycle_Shiny)),u=new Phaser.GameObjects.Sprite(this.scene,0,16,C,(r=this.scene.inputController)==null?void 0:r.getIconForLatestInputRecorded(at.Button_Cycle_Form))),S.add([o,M]),S.add([l,u]),S.setPosition(12,25),this.runResultContainer.add(S)}if(this.runResultContainer.add(I),!this.isVictory){const S=this.scene.add.container(0,0);if(this.runInfo.battleType===ht.WILD||this.runInfo.battleType===ht.MYSTERY_ENCOUNTER&&!this.runInfo.trainer)switch(this.runInfo.enemyParty.length){case 1:this.parseWildSingleDefeat(S);break;case 2:this.parseWildDoubleDefeat(S);break}else(this.runInfo.battleType===ht.TRAINER||this.runInfo.battleType===ht.MYSTERY_ENCOUNTER&&this.runInfo.trainer)&&this.parseTrainerDefeat(S);this.runResultContainer.add(S)}this.runContainer.add(this.runResultContainer)}parseRunStatus(){const A=this.scene.add.container(0,0);if(this.runResultContainer.add(A),this.runInfo.battleType===ht.WILD)this.runInfo.enemyParty.length===1?this.parseWildSingleDefeat(A):this.runInfo.enemyParty.length===2&&this.parseWildDoubleDefeat(A);else if(this.runInfo.battleType===ht.TRAINER){this.showTrainerSprites(A);const r=3;this.runInfo.enemyParty.forEach((h,P)=>{const G=this.scene.add.sprite(0,0,"pb");G.setFrame(TO(h.pokeball)),G.setScale(.5),G.setPosition(58+P%r*8,P<=2?18:25),A.add(G)});const S=this.runInfo.trainer.toTrainer(this.scene),o=375;let l="";this.runInfo.trainer.trainerType>=o?l=S.variant===OA.FEMALE?D.t("trainerNames:rival_female"):D.t("trainerNames:rival"):l=S.getName(0,!0);const C=D.t(S.variant!==OA.DOUBLE?"battle:trainerAppeared":"battle:trainerAppearedDouble",{trainerName:l}).replace(/\n/g," "),M=this.scene.add.container(0,0),u=le(this.scene,0,0,C,X.WINDOW,{fontSize:"35px",wordWrap:{width:200}});M.add(u),M.setPosition(55,32),this.runResultContainer.add(M)}else if(this.runInfo.battleType===ht.MYSTERY_ENCOUNTER){const r=this.scene.add.sprite(0,0,"encounter_exclaim");r.setPosition(34,26),r.setScale(.65);const S=this.scene.add.sprite(56,-106,"pkmn__sub");S.setScale(.65),S.setPosition(34,46);const o=D.t(this.scene.getMysteryEncounter(this.runInfo.mysteryEncounterType,!0).localizationKey+":title"),l=this.scene.add.container(0,0),C=le(this.scene,0,0,o,X.WINDOW,{fontSize:"45px",wordWrap:{width:160}});l.add(C),l.setPosition(47,37),this.runResultContainer.add([r,S,l])}const s=this.runResultContainer.getByName("Run_Result_Window"),R=s.getTopCenter().x,n=s.getBottomCenter().y,I=le(this.scene,R,5,`${D.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,X.WINDOW,{fontSize:"60px",lineSpacing:.1});I.setOrigin(.5,0);const a=le(this.scene,R,n-5,`${RL(this.runInfo.arena.biome)}`,X.WINDOW,{fontSize:"60px"});a.setOrigin(.5,1),this.runResultContainer.add([I,a]),this.runContainer.add(this.runResultContainer)}parseWildSingleDefeat(A){const s=this.scene.add.container(0,0),R=this.runInfo.enemyParty[0],n=R.boss;R.boss=!1,R.player=!0;const I=R.toPokemon(this.scene),a=this.scene.addPokemonIcon(I,0,0,0,0),r=n?X.PARTY_RED:X.PARTY,S=le(this.scene,36,26,`${D.t("saveSlotSelectUiHandler:lv")}${za(I.level,1e3)}`,r,{fontSize:"44px",color:"#f8f8f8"});S.setShadow(0,0,void 0),S.setStroke("#424242",14),S.setOrigin(1,0),s.add(a),s.add(S),A.add(s),A.setPosition(27,12),I.destroy()}parseWildDoubleDefeat(A){this.runInfo.enemyParty.forEach((s,R)=>{const n=this.scene.add.container(0,0),I=s.boss;s.boss=!1,s.player=!0;const a=s.toPokemon(this.scene),r=this.scene.addPokemonIcon(a,0,0,0,0),S=le(this.scene,36,26,`${D.t("saveSlotSelectUiHandler:lv")}${za(a.level,1e3)}`,I?X.PARTY_RED:X.PARTY,{fontSize:"44px",color:"#f8f8f8"});S.setShadow(0,0,void 0),S.setStroke("#424242",14),S.setOrigin(1,0),n.add(r),n.add(S),n.setPosition(R*35,0),A.add(n),a.destroy()}),A.setPosition(8,14)}showTrainerSprites(A){const s=this.runInfo.trainer.toTrainer(this.scene);s.config.loadAssets(this.scene,this.runInfo.trainer.variant).then(()=>{const R=s.config.getSpriteKey(this.runInfo.trainer.variant===OA.FEMALE,!1),n=this.scene.add.sprite(0,5,R);if(this.runInfo.trainer.variant===OA.DOUBLE&&!s.config.doubleOnly){const I=this.scene.add.container(5,8);n.setPosition(-3,-3);const a=s.config.getSpriteKey(!0,!0),r=this.scene.add.sprite(5,-3,a);this.runDisplayMode===0?(r.setScale(.2),n.setScale(.2),I.add(n),I.add(r),I.setPosition(12,38)):(n.setScale(.55),n.setPosition(-9,-3),r.setScale(.55),I.add([n,r]),I.setPosition(28,34)),A.add(I)}else{const I=this.runDisplayMode===0?.35:.55,a=this.runDisplayMode===0?[12,28]:[30,32];n.setScale(I,I),n.setPosition(a[0],a[1]),A.add(n)}})}parseTrainerDefeat(A){this.showTrainerSprites(A);const s={};this.runInfo.enemyModifiers.forEach(n=>{const I=n.toModifier(this.scene,this.modifiersModule[n.className]);if(I instanceof OR){const a=I==null?void 0:I.getArgs(),r=a[0];s[r]=a[1]}});const R=this.scene.add.container(0,0);this.runInfo.enemyParty.forEach((n,I)=>{const a=Math.floor(I/3),r=this.scene.add.container(0,0);r.setScale(.6);const S=n.boss;n.boss=!1,n.player=!0;const o=n.toPokemon(this.scene),l=this.scene.addPokemonIcon(o,0,0,0,0),C=l.list[0],M=l.list.length>1?l.list[1]:void 0;if(s[n.id]){const h=dR(s[n.id]),P=new Phaser.Display.Color(h[0],h[1],h[2]);C.setTint(P.color),M&&M.setTint(P.color)}l.setPosition(39*(I%3)+5,35*a);const u=le(this.scene,43*(I%3),27*(a+1),`${D.t("saveSlotSelectUiHandler:lv")}${za(o.level,1e3)}`,S?X.PARTY_RED:X.PARTY,{fontSize:"54px"});u.setShadow(0,0,void 0),u.setStroke("#424242",14),u.setOrigin(0,0),r.add(l),r.add(u),R.add(r),o.destroy()}),R.setPosition(25,15),A.add(R)}async parseRunInfo(A,s){const R=yE(this.scene,7,0,"",X.WINDOW,{fontSize:"50px",lineSpacing:3});switch(R.setPosition(7,5),R.appendText(D.t("runHistory:mode")+": ",!1),this.runInfo.gameMode){case SA.DAILY:R.appendText(`${D.t("gameMode:dailyRun")}`,!1);break;case SA.SPLICED_ENDLESS:R.appendText(`${D.t("gameMode:endlessSpliced")}`,!1);break;case SA.CHALLENGE:R.appendText(`${D.t("gameMode:challenge")}`,!1),R.appendText(`${D.t("runHistory:challengeRules")}: `),R.setWrapMode(1),R.setWrapWidth(500);const u=this.challengeParser();if(u)for(let h=0;h<u.length;h++)h>0&&R.appendText(" + ",!1),R.appendText(u[h],!1);break;case SA.ENDLESS:R.appendText(`${D.t("gameMode:endless")}`,!1);break;case SA.CLASSIC:R.appendText(`${D.t("gameMode:classic")}`,!1);break}(this.runInfo.gameMode===SA.ENDLESS||this.runInfo.gameMode===SA.SPLICED_ENDLESS)&&this.runInfo.waveIndex===this.scene.gameData.gameStats.highestEndlessWave&&(R.appendText(` [${D.t("runHistory:personalBest")}]`),R.setTint(16772956,4718441,7039999,16738665));const n=this.scene.add.container(0,0),I=D.resolvedLanguage==="ja"?12:3,a=yE(this.scene,7,0,"",X.WINDOW,{fontSize:"50px",lineSpacing:I}),r=qd(this.runInfo.playTime);a.appendText(`${D.t("runHistory:runLength")}: ${r}`,!1);const S=Go(this.scene.moneyFormat,this.runInfo.money),o=IA(X.MONEY_WINDOW,!1,this.scene.uiTheme);a.appendText(`[color=${o}]${D.t("battleScene:moneyOwned",{formattedMoney:S})}[/color]`),a.setPosition(7,70),n.add(a);const l=yE(this.scene,0,0,"",X.WINDOW,{fontSize:"55px"}),C=Phaser.Math.Clamp(this.runInfo.party.map(u=>u.toPokemon(this.scene).getLuck()).reduce((u,h)=>u+=h,0),0,14);let M=D.t("runHistory:luck")+": "+O6(C);if(C<14?M="[color=#"+n6(C).toString(16)+"]"+M+"[/color]":l.setTint(16772956,4718441,7039999,16738665),l.appendText("[align=right]"+M+"[/align]",!1),l.setPosition(A-l.displayWidth-5,s-13),n.add(l),this.runInfo.modifiers.length){let u=0;const h=this.scene.add.container(8,this.runInfo.gameMode===SA.CHALLENGE?20:15);h.setScale(.45);for(const P of this.runInfo.modifiers){const G=P.toModifier(this.scene,this.modifiersModule[P.className]);if(G instanceof Ht)continue;const d=G==null?void 0:G.getIcon(this.scene,!1);if(d){const H=Math.floor(u/7);d.setPosition(24*(u%7),20+35*H),h.add(d)}if(++u===20){const H=le(this.scene,45,90,"+",X.WINDOW);H.setPositionRelative(h,70,45),this.runInfoContainer.add(H);break}}this.runInfoContainer.add(h)}this.runInfoContainer.add(R),this.runInfoContainer.add(n),this.runContainer.add(this.runInfoContainer)}challengeParser(){const A=[];for(let s=0;s<this.runInfo.challenges.length;s++)if(this.runInfo.challenges[s].value!==0)switch(this.runInfo.challenges[s].id){case yt.SINGLE_GENERATION:A.push(D.t(`runHistory:challengeMonoGen${this.runInfo.challenges[s].value}`));break;case yt.SINGLE_TYPE:const R=i[this.runInfo.challenges[s].value-1],n=`[color=${i1[R]}]`,I=`[shadow=${I1[R]}]`,a=n+I+D.t(`pokemonInfo:Type.${R}`)+"[/color][/shadow]";A.push(a);break;case yt.INVERSE_BATTLE:A.push(D.t("challenges:inverseBattle.shortName"));break;default:const r=yt[this.runInfo.challenges[s].id].split("_").map((S,o)=>o?`${S[0]}${S.slice(1).toLowerCase()}`:S.toLowerCase()).join("");A.push(D.t(`challenges:${r}.name`));break}return A}parsePartyInfo(){const A=this.runInfo.party,s=D.resolvedLanguage??"en",R=(this.scene.game.canvas.height/6-23)/6;A.forEach((n,I)=>{var YA;const a=new h8(this.scene,0,14,this.statsBgWidth*2+10,R-2,3),r=n.toPokemon(this.scene),S=this.scene.add.container(this.statsBgWidth+5,(R-.5)*I),o=r.getTypes(),l=dR(o[0]),C=new Phaser.Display.Color(l[0],l[1],l[2]),M=C.clone().darken(45);a.setFillStyle(M.color);const u=this.scene.add.container(0,0),h=this.scene.addPokemonIcon(r,0,0,0,0);h.setScale(.75),h.setPosition(-99,1);const P=o[1]?dR(o[1]):void 0,G=P?new Phaser.Display.Color(P[0],P[1],P[2]):void 0;G?a.setStrokeStyle(1,G.color,.95):a.setStrokeStyle(1,C.color,.95),this.getUi().bringToTop(h);const d=this.scene.add.container(-85,3.5),H="34px",f=r.getNature(),K=xO(f),W=r.getNameToRender(),V=["ko","zh_CN","zh_TW"];let k=D.t("starterSelectUiHandler:passive")??"-",Q=D.t("starterSelectUiHandler:ability")??"-";V.includes(s)||(k=k.charAt(0),Q=Q.charAt(0));const j=r.passive?k+": "+r.getPassiveAbility().name:"",J=Q+": "+r.getAbility().name,ne=D.resolvedLanguage==="ja"?12:3,x=yE(this.scene,0,0,W,X.SUMMARY,{fontSize:H,lineSpacing:ne});x.appendText(`${D.t("saveSlotSelectUiHandler:lv")}${Yh(r.level,1)} - ${K}`),x.appendText(J),x.appendText(j),d.add(x);const q=this.scene.add.container(-35,6),F=[];r.stats.forEach(y=>F.push(Yh(y,1)));for(let y=0;y<F.length;y++){const Ke=fo(f,y);F[y]=Ke<1?F[y]+"[color=#40c8f8]↓[/color]":F[y],F[y]=Ke>1?F[y]+"[color=#f89890]↑[/color]":F[y]}const Te=D.t("pokemonInfo:Stat.HPshortened")+": "+F[0],He=D.t("pokemonInfo:Stat.ATKshortened")+": "+F[1],ue=D.t("pokemonInfo:Stat.DEFshortened")+": "+F[2],me=D.t("pokemonInfo:Stat.SPATKshortened")+": "+F[3],Me=D.t("pokemonInfo:Stat.SPDEFshortened")+": "+F[4],z=(s==="es-ES"||s==="pt_BR"?D.t("runHistory:SPDshortened"):D.t("pokemonInfo:Stat.SPDshortened"))+": "+F[5],te=yE(this.scene,-5,0,Te,X.SUMMARY,{fontSize:H,lineSpacing:ne});te.appendText(He),te.appendText(ue),q.add(te);const Le=yE(this.scene,25,0,me,X.SUMMARY,{fontSize:H,lineSpacing:ne});Le.appendText(Me),Le.appendText(z),q.add(Le);const Ue=this.scene.add.container(0,0);if(r.fusionSpecies){const y=this.scene.add.image(0,0,"icon_spliced");y.setScale(.35),y.setOrigin(0,0),r.isShiny()?y.setPositionRelative(d,35,0):y.setPositionRelative(d,28,0),Ue.add(y),this.getUi().bringToTop(y)}if(r.isShiny()){const y=r.isFusion()&&r.shiny&&r.fusionShiny,Ke=this.scene.add.image(0,0,`shiny_star_small${y?"_1":""}`);if(Ke.setOrigin(0,0),Ke.setScale(.65),Ke.setPositionRelative(d,28,0),Ke.setTint(YE(y?r.variant:r.getVariant())),Ue.add(Ke),this.getUi().bringToTop(Ke),y){const de=this.scene.add.image(0,0,"shiny_star_small_2");de.setOrigin(0,0),de.setScale(.5),de.setPosition(Ke.x+1,Ke.y+1),de.setTint(YE(r.fusionVariant)),Ue.add(de),this.getUi().bringToTop(de)}}const Be=r.getMoveset(),st=this.scene.add.container(70,-29),ft=[],tt=[],Pt=[[-6.5,35.5],[37,35.5],[-6.5,43.5],[37,43.5]];for(let y=0;y<(Be==null?void 0:Be.length);y++){const Ke=this.scene.add.container(Pt[y][0],Pt[y][1]);Ke.setScale(.5);const de=this.scene.add.nineslice(0,0,"type_bgs","unknown",85,15,2,2,2,2);de.setOrigin(1,0);const ae=le(this.scene,-de.width/2,2,"-",X.PARTY);ae.setOrigin(.5,0),ae.setName("text-move-label"),ft.push(de),tt.push(ae),Ke.add(de),Ke.add(ae),st.add(Ke);const ie=(YA=Be[y])==null?void 0:YA.getMove();ft[y].setFrame(i[ie?ie.type:i.UNKNOWN].toString().toLowerCase()),tt[y].setText(ie?ie.name:"-")}const eA=this.runInfo.gameMode===SA.SPLICED_ENDLESS||this.runInfo.gameMode===SA.ENDLESS?.25:.5,Xt=this.scene.add.container(-82,2),bA=[];if(this.runInfo.modifiers.length){for(const y of this.runInfo.modifiers){const Ke=y.toModifier(this.scene,this.modifiersModule[y.className]);Ke instanceof Ht&&Ke.pokemonId===r.id&&(Ke.stackCount=y.stackCount,bA.push(Ke))}if(bA.length>0){bA.sort(ZS);let y=0;for(const[Ke,de]of bA.entries()){if(Ke>36){const ie=le(this.scene,182,4,"+",X.WINDOW);Xt.add(ie);break}const ae=de==null?void 0:de.getIcon(this.scene,!0);(de==null?void 0:de.stackCount)<(de==null?void 0:de.getMaxHeldItemCount(r))&&ae.list[1]instanceof Phaser.GameObjects.BitmapText&&ae.list[1].clearTint(),ae.setScale(eA),ae.setPosition(Ke%19*10,y*10),Xt.add(ae),Ke!==0&&Ke%18===0&&y++}}}Xt.setName("heldItems"),Xt.setVisible(!1),S.add(a),u.add(h),S.add(u),Ue.setName("PkmnMarks"),S.add(Ue),st.setName("PkmnMoves"),S.add(st),d.setName("PkmnInfoText"),S.add(d),q.setName("PkmnStatsText"),S.add(q),S.add(Xt),S.setName("PkmnInfo"),this.partyContainer.add(S),r.destroy()}),this.runContainer.add(this.partyContainer)}showParty(A){this.partyContainer.getAll("name","PkmnInfo").forEach(R=>{R.getByName("PkmnMoves").setVisible(A),R.getByName("PkmnInfoText").setVisible(A),R.getByName("PkmnStatsText").setVisible(A),R.getByName("PkmnMarks").setVisible(A),R.getByName("heldItems").setVisible(!A),this.partyVisibility=A})}createVictorySplash(){this.endCardContainer=this.scene.add.container(0,0);const s=(this.scene.gameData.gender??vt.UNSET)===vt.FEMALE,R=this.scene.add.image(0,0,`end_${s?"f":"m"}`);R.setOrigin(0),R.setScale(.5);const n=le(this.scene,this.scene.game.canvas.width/12,this.scene.game.canvas.height/6-16,D.t("battle:congratulations"),X.SUMMARY,{fontSize:"128px"});n.setOrigin(.5),this.endCardContainer.add(R),this.endCardContainer.add(n)}createHallofFame(){const A=this.scene.gameData.gender??vt.UNSET,s=A===vt.FEMALE,R=vt[A].toLowerCase();this.hallofFameContainer=this.scene.add.container(0,0);const n=this.scene.add.image(0,0,`end_${s?"f":"m"}`);n.setOrigin(0),n.setPosition(-1,-1),n.setScale(.5);const I=n.getBottomCenter(),a=s?"red":"blue",r=this.scene.add.image(0,0,"hall_of_fame_"+a);r.setPosition(159,89),r.setSize(this.scene.game.canvas.width,this.scene.game.canvas.height+10),r.setAlpha(.8),this.hallofFameContainer.add(n),this.hallofFameContainer.add(r);const S=le(this.scene,0,0,D.t("runHistory:hallofFameText",{context:R}),X.WINDOW);S.setPosition(I.x-S.displayWidth/2,164),this.hallofFameContainer.add(S),this.runInfo.party.forEach((o,l)=>{const C=o.toPokemon(this.scene),M=l%2,u=C.id,h=C.shiny,P=C.formIndex,G=C.variant,d=C.getSpeciesForm(),H=this.scene.add.sprite(60+40*l,40+M*80,"pkmn__sub");H.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.hallofFameContainer.add(H);const f=new Map;f.set(u,!1);const K=C.gender===1;if(d.loadAssets(this.scene,K,P,h,G,!0).then(()=>{f.set(u,!0),H.play(d.getSpriteKey(K,P,h,G)),H.setPipelineData("shiny",h),H.setPipelineData("variant",G),H.setPipelineData("spriteKey",d.getSpriteKey(K,P,h,G)),H.setVisible(!0)}),C.isFusion()){const W=this.scene.add.sprite(80+40*l,50+M*80,C.getFusionIconAtlasKey());W.setName("sprite-fusion-icon"),W.setOrigin(.5,0),W.setFrame(C.getFusionIconId(!0)),this.hallofFameContainer.add(W)}C.destroy()}),this.hallofFameContainer.setVisible(!1),this.runContainer.add(this.hallofFameContainer)}processInput(A){const s=this.getUi();let R=!1;const n=!1;switch(A){case b.CANCEL:R=!0,this.pageMode===0?(this.runInfoContainer.removeAll(!0),this.runResultContainer.removeAll(!0),this.partyContainer.removeAll(!0),this.runContainer.removeAll(!0),this.isVictory&&this.hallofFameContainer.removeAll(!0),super.clear(),this.runContainer.setVisible(!1),s.revertMode()):this.pageMode===1?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):this.pageMode===2&&(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0);break;case b.DOWN:case b.UP:break;case b.CYCLE_FORM:case b.CYCLE_SHINY:case b.CYCLE_ABILITY:this.buttonCycleOption(A);break}return R&&s.playSelect(),R||n}buttonCycleOption(A){switch(A){case b.CYCLE_FORM:this.isVictory&&this.pageMode!==1&&(!this.endCardContainer||!this.endCardContainer.visible?(this.createVictorySplash(),this.endCardContainer.setVisible(!0),this.runContainer.add(this.endCardContainer),this.pageMode=2):(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0));break;case b.CYCLE_SHINY:this.isVictory&&this.pageMode!==2&&(this.hallofFameContainer.visible?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):(this.hallofFameContainer.setVisible(!0),this.pageMode=1));break;case b.CYCLE_ABILITY:this.runInfo.modifiers.length!==0&&this.pageMode===0&&(this.partyVisibility?this.showParty(!1):this.showParty(!0));break}}};L(VB,"RunInfoUiHandler");let tC=VB;const RZ=25,xB=class xB extends ps{constructor(A){super(A,Oe.RUN_HISTORY),this.maxRows=3,this.scrollCursor=0}setup(){const A=this.getUi();this.runSelectContainer=this.scene.add.container(0,0),this.runSelectContainer.setVisible(!1),A.add(this.runSelectContainer);const s=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,-this.scene.game.canvas.height/6,26720);s.setOrigin(0,0),this.runSelectContainer.add(s),this.runContainerInitialY=-this.scene.game.canvas.height/6+8,this.runsContainer=this.scene.add.container(8,this.runContainerInitialY),this.runSelectContainer.add(this.runsContainer),this.runs=[],this.scene.loadImage("hall_of_fame_red","ui"),this.scene.loadImage("hall_of_fame_blue","ui"),this.scene.loadAtlas("rival_f","trainer"),this.scene.loadAtlas("rival_m","trainer")}show(A){return super.show(A),this.getUi().bringToTop(this.runSelectContainer),this.runSelectContainer.setVisible(!0),this.populateRuns(this.scene).then(()=>{this.setScrollCursor(0),this.setCursor(0),this.runs.length===0&&this.clearCursor()}),!0}processInput(A){const s=this.getUi();let R=!1;const n=!1;if([b.ACTION,b.CANCEL].includes(A))if(A===b.ACTION){const I=this.cursor+this.scrollCursor;if(this.runs[I])this.scene.ui.setOverlayMode(Oe.RUN_INFO,this.runs[I].entryData,a1.RUN_HISTORY,!0);else return!1;return R=!0,R}else this.runSelectCallback=null,R=!0,this.scene.ui.revertMode();else if(this.runs.length>0)switch(A){case b.UP:this.cursor?R=this.setCursor(this.cursor-1):this.scrollCursor?R=this.setScrollCursor(this.scrollCursor-1):this.runs.length>1&&(R=this.setCursor(Math.min(this.runs.length-1,this.maxRows-1)),R=this.setScrollCursor(Math.max(0,this.runs.length-this.maxRows))||R);break;case b.DOWN:this.cursor<Math.min(this.maxRows-1,this.runs.length-this.scrollCursor-1)?R=this.setCursor(this.cursor+1):this.scrollCursor<this.runs.length-this.maxRows?R=this.setScrollCursor(this.scrollCursor+1):this.runs.length>1&&(R=this.setCursor(0),R=this.setScrollCursor(0)||R);break}return R&&s.playSelect(),R||n}async populateRuns(A){const s=await this.scene.gameData.getRunHistoryData(this.scene),R=Object.keys(s);if(R.length===0){this.showEmpty();return}const n=R.map(Number);R.length>1&&n.sort((a,r)=>r-a);const I=R.length;for(let a=0;a<I;a++){const r=new gc(this.scene,s[n[a]],a);this.scene.add.existing(r),this.runsContainer.add(r),this.runs.push(r)}this.cursorObj&&R.length>0&&this.runsContainer.bringToTop(this.cursorObj)}async showEmpty(){const A=_t(this.scene,0,0,304,165);this.runsContainer.add(A);const s=A.getCenter(),R=le(this.scene,0,0,D.t("saveSlotSelectUiHandler:empty"),X.WINDOW,{fontSize:"128px"});R.setPosition(s.x-18,s.y-15),this.runsContainer.add(R)}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,46,6,6,6,6),this.cursorObj.setOrigin(0,0),this.runsContainer.add(this.cursorObj)),this.cursorObj.setPosition(4,4+(A+this.scrollCursor)*56),s}setScrollCursor(A){const s=A!==this.scrollCursor;return s&&(this.scrollCursor=A,this.setCursor(this.cursor),this.scene.tweens.add({targets:this.runsContainer,y:this.runContainerInitialY-56*A,duration:Et(325),ease:"Sine.easeInOut"})),s}clear(){super.clear(),this.runSelectContainer.setVisible(!1),this.setScrollCursor(0),this.clearCursor(),this.runSelectCallback=null,this.clearRuns()}clearCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearRuns(){this.runs.splice(0,this.runs.length),this.runsContainer.removeAll(!0)}};L(xB,"RunHistoryUiHandler");let Bc=xB;const bB=class bB extends Phaser.GameObjects.Container{constructor(A,s,R){super(A,0,R*56),this.slotId=R,this.entryData=s,this.setup(this.entryData)}setup(A){const s=A.isVictory,R=this.scene.gameData.parseSessionData(JSON.stringify(A.entry)),n=_t(this.scene,0,0,304,52);if(this.add(n),s){const o=le(this.scene,8,5,`${D.t("runHistory:victory")}`,X.WINDOW);this.add(o)}else{const o=this.scene.gameData.gender??vt.UNSET,l=vt[o].toLowerCase();if(R.battleType===ht.WILD||R.battleType===ht.MYSTERY_ENCOUNTER&&!R.trainer){const C=this.scene.add.container(8,5),M=le(this.scene,0,0,`${D.t("runHistory:defeatedWild",{context:l})}`,X.WINDOW);C.add(M),R.enemyParty.forEach((u,h)=>{const P=this.scene.add.container(65+h*25,-8);P.setScale(.75),u.boss=!1,u.player=!0;const G=u.toPokemon(this.scene),d=this.scene.addPokemonIcon(G,0,0,0,0),H=le(this.scene,32,20,`${D.t("saveSlotSelectUiHandler:lv")}${za(G.level,1e3)}`,X.PARTY,{fontSize:"54px",color:"#f8f8f8"});H.setShadow(0,0,void 0),H.setStroke("#424242",14),H.setOrigin(1,0),P.add(d),P.add(H),C.add(P),G.destroy()}),this.add(C)}else if(R.battleType===ht.TRAINER||R.battleType===ht.MYSTERY_ENCOUNTER&&R.trainer){const C=R.trainer.toTrainer(this.scene);if(R.trainer.trainerType>=375){const u=C.variant===OA.FEMALE?"trainerNames:rival_female":"trainerNames:rival",h=le(this.scene,8,5,`${D.t("runHistory:defeatedRival",{context:l})} ${D.t(u)}`,X.WINDOW);this.add(h)}else{const u=le(this.scene,8,5,`${D.t("runHistory:defeatedTrainer",{context:l})}${C.getName(0,!0)}`,X.WINDOW);this.add(u)}}}const I=le(this.scene,8,19,"",X.WINDOW);let a="";switch(R.gameMode){case SA.DAILY:a=D.t("gameMode:dailyRun");break;case SA.SPLICED_ENDLESS:case SA.ENDLESS:a=D.t("gameMode:endless");break;case SA.CLASSIC:a=D.t("gameMode:classic");break;case SA.CHALLENGE:a=D.t("gameMode:challenge");break}if(I.appendText(a,!1),R.gameMode===SA.SPLICED_ENDLESS){const o=this.scene.add.image(0,0,"icon_spliced");o.setScale(.75);const l=I.getTopRight();o.setPosition(l.x+5,27),this.add(o),I.appendText("    - ",!1)}else I.appendText(" - ",!1);I.appendText(D.t("saveSlotSelectUiHandler:wave")+" "+R.waveIndex,!1),this.add(I);const r=le(this.scene,8,33,new Date(R.timestamp).toLocaleString(),X.WINDOW);this.add(r);const S=this.scene.add.container(140,17);R.party.forEach((o,l)=>{const C=this.scene.add.container(26*l,0);C.setScale(.75);const M=o.toPokemon(this.scene),u=this.scene.addPokemonIcon(M,0,0,0,0),h=le(this.scene,32,20,`${D.t("saveSlotSelectUiHandler:lv")}${za(M.level,1e3)}`,X.PARTY,{fontSize:"54px",color:"#f8f8f8"});h.setShadow(0,0,void 0),h.setStroke("#424242",14),h.setOrigin(1,0),C.add(u),C.add(h),S.add(C),M.destroy()}),this.add(S)}};L(bB,"RunEntryContainer");let gc=bB;const OZ=[L(function(A){A.starterData&&A.dexData&&Object.keys(A.starterData).forEach(s=>{var R;(R=A.dexData[s])!=null&&R.caughtAttr&&A.starterData[s]&&!A.starterData[s].abilityAttr&&(A.starterData[s].abilityAttr=1)})},"migrateAbilityData"),L(function(A){A.gameStats&&A.gameStats.legendaryPokemonCaught!==void 0&&A.gameStats.subLegendaryPokemonCaught===void 0&&(A.gameStats.subLegendaryPokemonSeen=0,A.gameStats.subLegendaryPokemonCaught=0,A.gameStats.subLegendaryPokemonHatched=0,fR.filter(s=>s.subLegendary).forEach(s=>{const R=A.dexData[s.speciesId];A.gameStats.subLegendaryPokemonSeen+=R.seenCount,A.gameStats.legendaryPokemonSeen=Math.max(A.gameStats.legendaryPokemonSeen-R.seenCount,0),A.gameStats.subLegendaryPokemonCaught+=R.caughtCount,A.gameStats.legendaryPokemonCaught=Math.max(A.gameStats.legendaryPokemonCaught-R.caughtCount,0),A.gameStats.subLegendaryPokemonHatched+=R.hatchedCount,A.gameStats.legendaryPokemonHatched=Math.max(A.gameStats.legendaryPokemonHatched-R.hatchedCount,0)}),A.gameStats.subLegendaryPokemonSeen=Math.max(A.gameStats.subLegendaryPokemonSeen,A.gameStats.subLegendaryPokemonCaught),A.gameStats.legendaryPokemonSeen=Math.max(A.gameStats.legendaryPokemonSeen,A.gameStats.legendaryPokemonCaught),A.gameStats.mythicalPokemonSeen=Math.max(A.gameStats.mythicalPokemonSeen,A.gameStats.mythicalPokemonCaught))},"fixLegendaryStats"),L(function(A){var s,R;if(!Ve(A.starterData))for(const n of cI)(s=A.starterData[n])!=null&&s.abilityAttr&&(A.starterData[n].abilityAttr|=Cs.ABILITY_1),(R=A.dexData[n])!=null&&R.caughtAttr&&(A.dexData[n].caughtAttr|=Ze.FEMALE)},"fixStarterData")],nZ=[L(function(A){A.hasOwnProperty("REROLL_TARGET")&&!A.hasOwnProperty(It.Shop_Cursor_Target)&&(A[It.Shop_Cursor_Target]=A.REROLL_TARGET,delete A.REROLL_TARGET,localStorage.setItem("settings",JSON.stringify(A)))},"fixRerollTarget")],iZ=[L(function(A){A.modifiers.forEach(s=>{if(s.className==="PokemonBaseStatModifier")s.className="BaseStatModifier";else if(s.className==="PokemonResetNegativeStatStageModifier")s.className="ResetNegativeStatStageModifier";else if(s.className==="TempBattleStatBoosterModifier")if(s.typeId!=="DIRE_HIT"){s.className="TempStatStageBoosterModifier",s.typeId="TEMP_STAT_STAGE_BOOSTER";const n=s.typePregenArgs[0]+1;s.typePregenArgs[0]=n,s.args=[n,5,Math.min(s.args[1],5)]}else s.className="TempCritBoosterModifier",s.typePregenArgs=[],s.args=[5,Math.min(s.args[1],5)];else if(s.className==="DoubleBattleChanceBoosterModifier"&&s.args.length===1){let R;switch(s.typeId){case"MAX_LURE":R=30;break;case"SUPER_LURE":R=15;break;default:R=10;break}s.args=[R,Math.min(s.args[0],R)]}}),A.enemyModifiers.forEach(s=>{s.className==="PokemonBaseStatModifier"?s.className="BaseStatModifier":s.className==="PokemonResetNegativeStatStageModifier"&&(s.className="ResetNegativeStatStageModifier")})},"migrateModifiers"),L(function(A){A.party.forEach(s=>{s.mysteryEncounterPokemonData&&(s.customPokemonData=new ns(s.mysteryEncounterPokemonData),s.mysteryEncounterPokemonData=null),s.fusionMysteryEncounterPokemonData&&(s.fusionCustomPokemonData=new ns(s.fusionMysteryEncounterPokemonData),s.fusionMysteryEncounterPokemonData=null),s.customPokemonData=s.customPokemonData??new ns,!Ve(s.natureOverride)&&s.natureOverride>=0&&(s.customPokemonData.nature=s.natureOverride,s.natureOverride=-1)})},"migrateCustomPokemonDataAndNatureOverrides")],IZ=[],aZ=[],rZ=[],r1=Ho.split(".").map(E=>parseInt(E));function LZ(E){const A=E.gameVersion.split(".").map(s=>parseInt(s));if(!A.every((s,R)=>s===r1[R])){const s=new mc;s.applyStaticPreprocessors(E),s.applyMigration(E,A)}}L(LZ,"applySystemVersionMigration");function NZ(E){const A=E.gameVersion.split(".").map(s=>parseInt(s));if(!A.every((s,R)=>s===r1[R])){const s=new Kc;s.applyStaticPreprocessors(E),s.applyMigration(E,A)}}L(NZ,"applySessionVersionMigration");function TZ(E){const s=(E.hasOwnProperty("gameVersion")?E.gameVersion:"1.0.0").split(".").map(R=>parseInt(R));if(!s.every((R,n)=>R===r1[n])){const R=new Fc;R.applyStaticPreprocessors(E),R.applyMigration(E,s)}}L(TZ,"applySettingsVersionMigration");const kB=class kB{callMigrators(A,s){for(const R of s)R(A)}applyStaticPreprocessors(A){}};L(kB,"VersionConverter");let vT=kB;const ZB=class ZB extends vT{applyStaticPreprocessors(A){A.money=Math.floor(A.money)}applyMigration(A,s){const[R,n,I]=s;R===1&&(n===0&&I<=5&&(console.log("Applying v1.0.4 session data migration!"),this.callMigrators(A,iZ)),n<=1&&(console.log("Applying v1.1.0 session data migration!"),this.callMigrators(A,rZ))),console.log(`Session data successfully migrated to v${Ho}!`)}};L(ZB,"SessionVersionConverter");let Kc=ZB;const XB=class XB extends vT{applyMigration(A,s){const[R,n,I]=s;R===1&&(n===0&&I<=4&&(console.log("Applying v1.0.4 system data migraton!"),this.callMigrators(A,OZ)),n<=1&&(console.log("Applying v1.1.0 system data migraton!"),this.callMigrators(A,IZ))),console.log(`System data successfully migrated to v${Ho}!`)}};L(XB,"SystemVersionConverter");let mc=XB;const QB=class QB extends vT{applyMigration(A,s){const[R,n,I]=s;R===1&&(n===0&&I<=4&&(console.log("Applying v1.0.4 settings data migraton!"),this.callMigrators(A,nZ)),n<=1&&(console.log("Applying v1.1.0 settings data migraton!"),this.callMigrators(A,aZ))),console.log(`System data successfully migrated to v${Ho}!`)}};L(QB,"SettingsVersionConverter");let Fc=QB;var qe=(E=>(E[E.MYSTERIOUS_CHALLENGERS=0]="MYSTERIOUS_CHALLENGERS",E[E.MYSTERIOUS_CHEST=1]="MYSTERIOUS_CHEST",E[E.DARK_DEAL=2]="DARK_DEAL",E[E.FIGHT_OR_FLIGHT=3]="FIGHT_OR_FLIGHT",E[E.SLUMBERING_SNORLAX=4]="SLUMBERING_SNORLAX",E[E.TRAINING_SESSION=5]="TRAINING_SESSION",E[E.DEPARTMENT_STORE_SALE=6]="DEPARTMENT_STORE_SALE",E[E.SHADY_VITAMIN_DEALER=7]="SHADY_VITAMIN_DEALER",E[E.FIELD_TRIP=8]="FIELD_TRIP",E[E.SAFARI_ZONE=9]="SAFARI_ZONE",E[E.LOST_AT_SEA=10]="LOST_AT_SEA",E[E.FIERY_FALLOUT=11]="FIERY_FALLOUT",E[E.THE_STRONG_STUFF=12]="THE_STRONG_STUFF",E[E.THE_POKEMON_SALESMAN=13]="THE_POKEMON_SALESMAN",E[E.AN_OFFER_YOU_CANT_REFUSE=14]="AN_OFFER_YOU_CANT_REFUSE",E[E.DELIBIRDY=15]="DELIBIRDY",E[E.ABSOLUTE_AVARICE=16]="ABSOLUTE_AVARICE",E[E.A_TRAINERS_TEST=17]="A_TRAINERS_TEST",E[E.TRASH_TO_TREASURE=18]="TRASH_TO_TREASURE",E[E.BERRIES_ABOUND=19]="BERRIES_ABOUND",E[E.CLOWNING_AROUND=20]="CLOWNING_AROUND",E[E.PART_TIMER=21]="PART_TIMER",E[E.DANCING_LESSONS=22]="DANCING_LESSONS",E[E.WEIRD_DREAM=23]="WEIRD_DREAM",E[E.THE_WINSTRATE_CHALLENGE=24]="THE_WINSTRATE_CHALLENGE",E[E.TELEPORTING_HIJINKS=25]="TELEPORTING_HIJINKS",E[E.BUG_TYPE_SUPERFAN=26]="BUG_TYPE_SUPERFAN",E[E.FUN_AND_GAMES=27]="FUN_AND_GAMES",E[E.UNCOMMON_BREED=28]="UNCOMMON_BREED",E[E.GLOBAL_TRADE_SYSTEM=29]="GLOBAL_TRADE_SYSTEM",E[E.THE_EXPERT_POKEMON_BREEDER=30]="THE_EXPERT_POKEMON_BREEDER",E))(qe||{});function iM(E,A,s,R){switch(R){case be.POKEBALL:Px(E,A,s,48);break;case be.GREAT_BALL:Px(E,A,s,96);break;case be.ULTRA_BALL:Gx(E,A,s,8);break;case be.ROGUE_BALL:Gx(E,A,s,10);break;case be.MASTER_BALL:SZ(E,A,s);break}}L(iM,"addPokeballOpenParticles");function Px(E,A,s,R){const n=E.anims.generateFrameNames("pb_particles",{start:0,end:3,suffix:".png"});E.anims.exists("pb_open_particle")||E.anims.create({key:"pb_open_particle",frames:n,frameRate:16,repeat:-1});const I=L(r=>{const S=E.add.sprite(A,s,"pb_open_particle");E.field.add(S);const o=r*45,[l,C]=[R*Math.cos(o*Math.PI/180),R*Math.sin(o*Math.PI/180)];E.tweens.add({targets:S,x:A+l,y:s+C,duration:575}),S.play({key:"pb_open_particle",startFrame:(r+3)%4,frameRate:Math.floor(16*E.gameSpeed)}),E.tweens.add({targets:S,delay:500,duration:75,alpha:0,ease:"Sine.easeIn",onComplete:L(()=>S.destroy(),"onComplete")})},"addParticle");let a=0;E.time.addEvent({delay:20,repeat:16,callback:L(()=>I(++a),"callback")})}L(Px,"doDefaultPbOpenParticles");function Gx(E,A,s,R){const n=[];for(let I=0;I<10;I++)n.push(U6(E,I*25,A,s,1,1,5,R));E.tweens.add({targets:n,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:L(()=>{for(const I of n)I.destroy()},"onComplete")})}L(Gx,"doUbOpenParticles");function SZ(E,A,s){const R=[];for(let n=0;n<2;n++){for(let I=0;I<8;I++)R.push(U6(E,I*32,A,s,n?1:2,n?2:1,8,4));E.tweens.add({targets:R,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:L(()=>{for(const I of R)I.destroy()},"onComplete")})}}L(SZ,"doMbOpenParticles");function U6(E,A,s,R,n,I,a,r){let S=0;const o=E.add.image(s,R,"pb_particles",`${r}.png`);E.field.add(o);const l=L(()=>{if(!o.scene)return C.remove();o.x=s+In(A,S*n),o.y=R+WI(A,S*I),A=A+a,S++},"updateParticle"),C=E.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{l()},"onRepeat")});return o}L(U6,"doFanOutParticle");function u6(E,A){const s=L(()=>{const R=E.add.sprite(A.x,A.y,"pb_particles","4.png");R.setOrigin(A.originX,A.originY),R.setAlpha(.5),E.field.add(R),E.tweens.add({targets:R,y:A.y-10,ease:"Sine.easeOut",duration:250,onComplete:L(()=>{E.tweens.add({targets:R,y:A.y,alpha:0,ease:"Sine.easeIn",duration:250})},"onComplete")});const n=c8(25);E.tweens.add({targets:R,x:A.x+n,duration:500}),E.tweens.add({targets:R,alpha:0,delay:425,duration:75,onComplete:L(()=>R.destroy(),"onComplete")})},"addParticle");new Array(3).fill(null).map(()=>s())}L(u6,"addPokeballCaptureStars");function In(E,A){return A*Math.sin(E*(Math.PI/128))}L(In,"sin");function WI(E,A){return A*Math.cos(E*(Math.PI/128))}L(WI,"cos");function IM(E,A,s){const R=s?`_${s+1}`:"",n=`shiny${R}`,I=`sparkle${R}`;if(!E.anims.exists(I)){const a=E.anims.generateFrameNames(n,{suffix:".png",end:34});E.anims.create({key:`sparkle${R}`,frames:a,frameRate:32,showOnStart:!0,hideOnComplete:!0})}A.play(I),E.playSound("se/sparkle")}L(IM,"doShinySparkleAnim");function mA(E,A,s){if(Ve(A))return null;const R=E.uiTheme??NO.DEFAULT;let n=oZ(E,A);return s&&n&&(n=J8(n,s,R)),n}L(mA,"getEncounterText");function oZ(E,A){var R,n;const s=(n=(R=E.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:n.dialogueTokens;return D.exists(A,s)?D.t(A,s):A??null}L(oZ,"getTextWithDialogueTokens");function sE(E,A){const s=mA(E,A);E.queueMessage(s??"",null,!0)}L(sE,"queueEncounterMessage");function $t(E,A,s=null,R=0,n=!0,I=null){return new Promise(a=>{const r=mA(E,A);E.ui.showText(r??"",s,()=>a(),R,n,I)})}L($t,"showEncounterText");function an(E,A,s,R=null,n=0){return new Promise(I=>{const a=mA(E,A),r=mA(E,s);E.ui.showDialogue(a??"",r??"",R,()=>I(),n)})}L(an,"showEncounterDialogue");const JB=class JB extends iE{constructor(A){super(A)}showEnemyTrainer(A=Tt.NONE){var n,I;const s=(n=this.scene.currentBattle.trainer)==null?void 0:n.getSprites(),R=(I=this.scene.currentBattle.trainer)==null?void 0:I.getTintSprites();for(let a=0;a<s.length;a++){const r=!A||!a==(A===Tt.TRAINER)||s.length<2;[s[a],R[a]].map(S=>{r&&(S.x=A||s.length<2?0:a?16:-16),S.setVisible(r),S.clearTint()}),s[a].setVisible(r),R[a].setVisible(r),s[a].clearTint(),R[a].clearTint()}this.scene.tweens.add({targets:this.scene.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}hideEnemyTrainer(){this.scene.tweens.add({targets:this.scene.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};L(JB,"BattlePhase");let GE=JB;const Hx={[U.YOUNGSTER]:[{encounter:["dialogue:youngster.encounter.1","dialogue:youngster.encounter.2","dialogue:youngster.encounter.3","dialogue:youngster.encounter.4","dialogue:youngster.encounter.5","dialogue:youngster.encounter.6","dialogue:youngster.encounter.7","dialogue:youngster.encounter.8","dialogue:youngster.encounter.9","dialogue:youngster.encounter.10","dialogue:youngster.encounter.11","dialogue:youngster.encounter.12","dialogue:youngster.encounter.13"],victory:["dialogue:youngster.victory.1","dialogue:youngster.victory.2","dialogue:youngster.victory.3","dialogue:youngster.victory.4","dialogue:youngster.victory.5","dialogue:youngster.victory.6","dialogue:youngster.victory.7","dialogue:youngster.victory.8","dialogue:youngster.victory.9","dialogue:youngster.victory.10","dialogue:youngster.victory.11","dialogue:youngster.victory.12","dialogue:youngster.victory.13"]},{encounter:["dialogue:lass.encounter.1","dialogue:lass.encounter.2","dialogue:lass.encounter.3","dialogue:lass.encounter.4","dialogue:lass.encounter.5","dialogue:lass.encounter.6","dialogue:lass.encounter.7","dialogue:lass.encounter.8","dialogue:lass.encounter.9"],victory:["dialogue:lass.victory.1","dialogue:lass.victory.2","dialogue:lass.victory.3","dialogue:lass.victory.4","dialogue:lass.victory.5","dialogue:lass.victory.6","dialogue:lass.victory.7","dialogue:lass.victory.8","dialogue:lass.victory.9"]}],[U.BREEDER]:[{encounter:["dialogue:breeder.encounter.1","dialogue:breeder.encounter.2","dialogue:breeder.encounter.3"],victory:["dialogue:breeder.victory.1","dialogue:breeder.victory.2","dialogue:breeder.victory.3"],defeat:["dialogue:breeder.defeat.1","dialogue:breeder.defeat.2","dialogue:breeder.defeat.3"]},{encounter:["dialogue:breeder_female.encounter.1","dialogue:breeder_female.encounter.2","dialogue:breeder_female.encounter.3"],victory:["dialogue:breeder_female.victory.1","dialogue:breeder_female.victory.2","dialogue:breeder_female.victory.3"],defeat:["dialogue:breeder_female.defeat.1","dialogue:breeder_female.defeat.2","dialogue:breeder_female.defeat.3"]}],[U.FISHERMAN]:[{encounter:["dialogue:fisherman.encounter.1","dialogue:fisherman.encounter.2","dialogue:fisherman.encounter.3"],victory:["dialogue:fisherman.victory.1","dialogue:fisherman.victory.2","dialogue:fisherman.victory.3"]},{encounter:["dialogue:fisherman_female.encounter.1","dialogue:fisherman_female.encounter.2","dialogue:fisherman_female.encounter.3"],victory:["dialogue:fisherman_female.victory.1","dialogue:fisherman_female.victory.2","dialogue:fisherman_female.victory.3"]}],[U.SWIMMER]:[{encounter:["dialogue:swimmer.encounter.1","dialogue:swimmer.encounter.2","dialogue:swimmer.encounter.3"],victory:["dialogue:swimmer.victory.1","dialogue:swimmer.victory.2","dialogue:swimmer.victory.3"]}],[U.BACKPACKER]:[{encounter:["dialogue:backpacker.encounter.1","dialogue:backpacker.encounter.2","dialogue:backpacker.encounter.3","dialogue:backpacker.encounter.4"],victory:["dialogue:backpacker.victory.1","dialogue:backpacker.victory.2","dialogue:backpacker.victory.3","dialogue:backpacker.victory.4"]}],[U.ACE_TRAINER]:[{encounter:["dialogue:ace_trainer.encounter.1","dialogue:ace_trainer.encounter.2","dialogue:ace_trainer.encounter.3","dialogue:ace_trainer.encounter.4"],victory:["dialogue:ace_trainer.victory.1","dialogue:ace_trainer.victory.2","dialogue:ace_trainer.victory.3","dialogue:ace_trainer.victory.4"],defeat:["dialogue:ace_trainer.defeat.1","dialogue:ace_trainer.defeat.2","dialogue:ace_trainer.defeat.3","dialogue:ace_trainer.defeat.4"]}],[U.PARASOL_LADY]:[{encounter:["dialogue:parasol_lady.encounter.1"],victory:["dialogue:parasol_lady.victory.1"]}],[U.TWINS]:[{encounter:["dialogue:twins.encounter.1","dialogue:twins.encounter.2","dialogue:twins.encounter.3"],victory:["dialogue:twins.victory.1","dialogue:twins.victory.2","dialogue:twins.victory.3"],defeat:["dialogue:twins.defeat.1","dialogue:twins.defeat.2","dialogue:twins.defeat.3"]}],[U.CYCLIST]:[{encounter:["dialogue:cyclist.encounter.1","dialogue:cyclist.encounter.2","dialogue:cyclist.encounter.3"],victory:["dialogue:cyclist.victory.1","dialogue:cyclist.victory.2","dialogue:cyclist.victory.3"]}],[U.BLACK_BELT]:[{encounter:["dialogue:black_belt.encounter.1","dialogue:black_belt.encounter.2"],victory:["dialogue:black_belt.victory.1","dialogue:black_belt.victory.2"]},{encounter:["dialogue:battle_girl.encounter.1"],victory:["dialogue:battle_girl.victory.1"]}],[U.HIKER]:[{encounter:["dialogue:hiker.encounter.1","dialogue:hiker.encounter.2"],victory:["dialogue:hiker.victory.1","dialogue:hiker.victory.2"]}],[U.RANGER]:[{encounter:["dialogue:ranger.encounter.1","dialogue:ranger.encounter.2"],victory:["dialogue:ranger.victory.1","dialogue:ranger.victory.2"],defeat:["dialogue:ranger.defeat.1","dialogue:ranger.defeat.2"]}],[U.SCIENTIST]:[{encounter:["dialogue:scientist.encounter.1"],victory:["dialogue:scientist.victory.1"]}],[U.SCHOOL_KID]:[{encounter:["dialogue:school_kid.encounter.1","dialogue:school_kid.encounter.2"],victory:["dialogue:school_kid.victory.1","dialogue:school_kid.victory.2"]}],[U.ARTIST]:[{encounter:["dialogue:artist.encounter.1"],victory:["dialogue:artist.victory.1"]}],[U.GUITARIST]:[{encounter:["dialogue:guitarist.encounter.1"],victory:["dialogue:guitarist.victory.1"]}],[U.WORKER]:[{encounter:["dialogue:worker.encounter.1"],victory:["dialogue:worker.victory.1"]},{encounter:["dialogue:worker_female.encounter.1"],victory:["dialogue:worker_female.victory.1"],defeat:["dialogue:worker_female.defeat.1"]},{encounter:["dialogue:worker_double.encounter.1"],victory:["dialogue:worker_double.victory.1"]}],[U.SNOW_WORKER]:[{encounter:["dialogue:snow_worker.encounter.1"],victory:["dialogue:snow_worker.victory.1"]},{encounter:["dialogue:snow_worker_double.encounter.1"],victory:["dialogue:snow_worker_double.victory.1"]}],[U.HEX_MANIAC]:[{encounter:["dialogue:hex_maniac.encounter.1","dialogue:hex_maniac.encounter.2"],victory:["dialogue:hex_maniac.victory.1","dialogue:hex_maniac.victory.2"],defeat:["dialogue:hex_maniac.defeat.1","dialogue:hex_maniac.defeat.2"]}],[U.PSYCHIC]:[{encounter:["dialogue:psychic.encounter.1"],victory:["dialogue:psychic.victory.1"]}],[U.OFFICER]:[{encounter:["dialogue:officer.encounter.1","dialogue:officer.encounter.2"],victory:["dialogue:officer.victory.1","dialogue:officer.victory.2"]}],[U.BEAUTY]:[{encounter:["dialogue:beauty.encounter.1"],victory:["dialogue:beauty.victory.1"]}],[U.BAKER]:[{encounter:["dialogue:baker.encounter.1"],victory:["dialogue:baker.victory.1"]}],[U.BIKER]:[{encounter:["dialogue:biker.encounter.1"],victory:["dialogue:biker.victory.1"]}],[U.FIREBREATHER]:[{encounter:["dialogue:firebreather.encounter.1","dialogue:firebreather.encounter.2","dialogue:firebreather.encounter.3"],victory:["dialogue:firebreather.victory.1","dialogue:firebreather.victory.2","dialogue:firebreather.victory.3"]}],[U.SAILOR]:[{encounter:["dialogue:sailor.encounter.1","dialogue:sailor.encounter.2","dialogue:sailor.encounter.3"],victory:["dialogue:sailor.victory.1","dialogue:sailor.victory.2","dialogue:sailor.victory.3"]}],[U.ROCKET_GRUNT]:[{encounter:["dialogue:rocket_grunt.encounter.1","dialogue:rocket_grunt.encounter.2","dialogue:rocket_grunt.encounter.3","dialogue:rocket_grunt.encounter.4","dialogue:rocket_grunt.encounter.5"],victory:["dialogue:rocket_grunt.victory.1","dialogue:rocket_grunt.victory.2","dialogue:rocket_grunt.victory.3","dialogue:rocket_grunt.victory.4","dialogue:rocket_grunt.victory.5"]}],[U.ARCHER]:[{encounter:["dialogue:archer.encounter.1","dialogue:archer.encounter.2","dialogue:archer.encounter.3"],victory:["dialogue:archer.victory.1","dialogue:archer.victory.2","dialogue:archer.victory.3"]}],[U.ARIANA]:[{encounter:["dialogue:ariana.encounter.1","dialogue:ariana.encounter.2","dialogue:ariana.encounter.3"],victory:["dialogue:ariana.victory.1","dialogue:ariana.victory.2","dialogue:ariana.victory.3"]}],[U.PROTON]:[{encounter:["dialogue:proton.encounter.1","dialogue:proton.encounter.2","dialogue:proton.encounter.3"],victory:["dialogue:proton.victory.1","dialogue:proton.victory.2","dialogue:proton.victory.3"]}],[U.PETREL]:[{encounter:["dialogue:petrel.encounter.1","dialogue:petrel.encounter.2","dialogue:petrel.encounter.3"],victory:["dialogue:petrel.victory.1","dialogue:petrel.victory.2","dialogue:petrel.victory.3"]}],[U.MAGMA_GRUNT]:[{encounter:["dialogue:magma_grunt.encounter.1","dialogue:magma_grunt.encounter.2","dialogue:magma_grunt.encounter.3","dialogue:magma_grunt.encounter.4","dialogue:magma_grunt.encounter.5"],victory:["dialogue:magma_grunt.victory.1","dialogue:magma_grunt.victory.2","dialogue:magma_grunt.victory.3","dialogue:magma_grunt.victory.4","dialogue:magma_grunt.victory.5"]}],[U.TABITHA]:[{encounter:["dialogue:tabitha.encounter.1","dialogue:tabitha.encounter.2","dialogue:tabitha.encounter.3"],victory:["dialogue:tabitha.victory.1","dialogue:tabitha.victory.2","dialogue:tabitha.victory.3"]}],[U.COURTNEY]:[{encounter:["dialogue:courtney.encounter.1","dialogue:courtney.encounter.2","dialogue:courtney.encounter.3"],victory:["dialogue:courtney.victory.1","dialogue:courtney.victory.2","dialogue:courtney.victory.3"]}],[U.AQUA_GRUNT]:[{encounter:["dialogue:aqua_grunt.encounter.1","dialogue:aqua_grunt.encounter.2","dialogue:aqua_grunt.encounter.3","dialogue:aqua_grunt.encounter.4","dialogue:aqua_grunt.encounter.5"],victory:["dialogue:aqua_grunt.victory.1","dialogue:aqua_grunt.victory.2","dialogue:aqua_grunt.victory.3","dialogue:aqua_grunt.victory.4","dialogue:aqua_grunt.victory.5"]}],[U.MATT]:[{encounter:["dialogue:matt.encounter.1","dialogue:matt.encounter.2","dialogue:matt.encounter.3"],victory:["dialogue:matt.victory.1","dialogue:matt.victory.2","dialogue:matt.victory.3"]}],[U.SHELLY]:[{encounter:["dialogue:shelly.encounter.1","dialogue:shelly.encounter.2","dialogue:shelly.encounter.3"],victory:["dialogue:shelly.victory.1","dialogue:shelly.victory.2","dialogue:shelly.victory.3"]}],[U.GALACTIC_GRUNT]:[{encounter:["dialogue:galactic_grunt.encounter.1","dialogue:galactic_grunt.encounter.2","dialogue:galactic_grunt.encounter.3","dialogue:galactic_grunt.encounter.4","dialogue:galactic_grunt.encounter.5"],victory:["dialogue:galactic_grunt.victory.1","dialogue:galactic_grunt.victory.2","dialogue:galactic_grunt.victory.3","dialogue:galactic_grunt.victory.4","dialogue:galactic_grunt.victory.5"]}],[U.JUPITER]:[{encounter:["dialogue:jupiter.encounter.1","dialogue:jupiter.encounter.2","dialogue:jupiter.encounter.3"],victory:["dialogue:jupiter.victory.1","dialogue:jupiter.victory.2","dialogue:jupiter.victory.3"]}],[U.MARS]:[{encounter:["dialogue:mars.encounter.1","dialogue:mars.encounter.2","dialogue:mars.encounter.3"],victory:["dialogue:mars.victory.1","dialogue:mars.victory.2","dialogue:mars.victory.3"]}],[U.SATURN]:[{encounter:["dialogue:saturn.encounter.1","dialogue:saturn.encounter.2","dialogue:saturn.encounter.3"],victory:["dialogue:saturn.victory.1","dialogue:saturn.victory.2","dialogue:saturn.victory.3"]}],[U.PLASMA_GRUNT]:[{encounter:["dialogue:plasma_grunt.encounter.1","dialogue:plasma_grunt.encounter.2","dialogue:plasma_grunt.encounter.3","dialogue:plasma_grunt.encounter.4","dialogue:plasma_grunt.encounter.5"],victory:["dialogue:plasma_grunt.victory.1","dialogue:plasma_grunt.victory.2","dialogue:plasma_grunt.victory.3","dialogue:plasma_grunt.victory.4","dialogue:plasma_grunt.victory.5"]}],[U.ZINZOLIN]:[{encounter:["dialogue:zinzolin.encounter.1","dialogue:zinzolin.encounter.2","dialogue:zinzolin.encounter.3"],victory:["dialogue:zinzolin.victory.1","dialogue:zinzolin.victory.2","dialogue:zinzolin.victory.3"]}],[U.ROOD]:[{encounter:["dialogue:rood.encounter.1","dialogue:rood.encounter.2","dialogue:rood.encounter.3"],victory:["dialogue:rood.victory.1","dialogue:rood.victory.2","dialogue:rood.victory.3"]}],[U.FLARE_GRUNT]:[{encounter:["dialogue:flare_grunt.encounter.1","dialogue:flare_grunt.encounter.2","dialogue:flare_grunt.encounter.3","dialogue:flare_grunt.encounter.4","dialogue:flare_grunt.encounter.5"],victory:["dialogue:flare_grunt.victory.1","dialogue:flare_grunt.victory.2","dialogue:flare_grunt.victory.3","dialogue:flare_grunt.victory.4","dialogue:flare_grunt.victory.5"]}],[U.BRYONY]:[{encounter:["dialogue:bryony.encounter.1","dialogue:bryony.encounter.2","dialogue:bryony.encounter.3"],victory:["dialogue:bryony.victory.1","dialogue:bryony.victory.2","dialogue:bryony.victory.3"]}],[U.XEROSIC]:[{encounter:["dialogue:xerosic.encounter.1","dialogue:xerosic.encounter.2","dialogue:xerosic.encounter.3"],victory:["dialogue:xerosic.victory.1","dialogue:xerosic.victory.2","dialogue:xerosic.victory.3"]}],[U.AETHER_GRUNT]:[{encounter:["dialogue:aether_grunt.encounter.1","dialogue:aether_grunt.encounter.2","dialogue:aether_grunt.encounter.3","dialogue:aether_grunt.encounter.4","dialogue:aether_grunt.encounter.5"],victory:["dialogue:aether_grunt.victory.1","dialogue:aether_grunt.victory.2","dialogue:aether_grunt.victory.3","dialogue:aether_grunt.victory.4","dialogue:aether_grunt.victory.5"]}],[U.FABA]:[{encounter:["dialogue:faba.encounter.1","dialogue:faba.encounter.2","dialogue:faba.encounter.3"],victory:["dialogue:faba.victory.1","dialogue:faba.victory.2","dialogue:faba.victory.3"]}],[U.SKULL_GRUNT]:[{encounter:["dialogue:skull_grunt.encounter.1","dialogue:skull_grunt.encounter.2","dialogue:skull_grunt.encounter.3","dialogue:skull_grunt.encounter.4","dialogue:skull_grunt.encounter.5"],victory:["dialogue:skull_grunt.victory.1","dialogue:skull_grunt.victory.2","dialogue:skull_grunt.victory.3","dialogue:skull_grunt.victory.4","dialogue:skull_grunt.victory.5"]}],[U.PLUMERIA]:[{encounter:["dialogue:plumeria.encounter.1","dialogue:plumeria.encounter.2","dialogue:plumeria.encounter.3"],victory:["dialogue:plumeria.victory.1","dialogue:plumeria.victory.2","dialogue:plumeria.victory.3"]}],[U.MACRO_GRUNT]:[{encounter:["dialogue:macro_grunt.encounter.1","dialogue:macro_grunt.encounter.2","dialogue:macro_grunt.encounter.3","dialogue:macro_grunt.encounter.4","dialogue:macro_grunt.encounter.5"],victory:["dialogue:macro_grunt.victory.1","dialogue:macro_grunt.victory.2","dialogue:macro_grunt.victory.3","dialogue:macro_grunt.victory.4","dialogue:macro_grunt.victory.5"]}],[U.OLEANA]:[{encounter:["dialogue:oleana.encounter.1","dialogue:oleana.encounter.2","dialogue:oleana.encounter.3"],victory:["dialogue:oleana.victory.1","dialogue:oleana.victory.2","dialogue:oleana.victory.3"]}],[U.STAR_GRUNT]:[{encounter:["dialogue:star_grunt.encounter.1","dialogue:star_grunt.encounter.2","dialogue:star_grunt.encounter.3","dialogue:star_grunt.encounter.4","dialogue:star_grunt.encounter.5"],victory:["dialogue:star_grunt.victory.1","dialogue:star_grunt.victory.2","dialogue:star_grunt.victory.3","dialogue:star_grunt.victory.4","dialogue:star_grunt.victory.5"]}],[U.GIACOMO]:[{encounter:["dialogue:giacomo.encounter.1","dialogue:giacomo.encounter.2"],victory:["dialogue:giacomo.victory.1","dialogue:giacomo.victory.2"]}],[U.MELA]:[{encounter:["dialogue:mela.encounter.1","dialogue:mela.encounter.2"],victory:["dialogue:mela.victory.1","dialogue:mela.victory.2"]}],[U.ATTICUS]:[{encounter:["dialogue:atticus.encounter.1","dialogue:atticus.encounter.2"],victory:["dialogue:atticus.victory.1","dialogue:atticus.victory.2"]}],[U.ORTEGA]:[{encounter:["dialogue:ortega.encounter.1","dialogue:ortega.encounter.2"],victory:["dialogue:ortega.victory.1","dialogue:ortega.victory.2"]}],[U.ERI]:[{encounter:["dialogue:eri.encounter.1","dialogue:eri.encounter.2"],victory:["dialogue:eri.victory.1","dialogue:eri.victory.2"]}],[U.ROCKET_BOSS_GIOVANNI_1]:[{encounter:["dialogue:rocket_boss_giovanni_1.encounter.1"],victory:["dialogue:rocket_boss_giovanni_1.victory.1"],defeat:["dialogue:rocket_boss_giovanni_1.defeat.1"]}],[U.ROCKET_BOSS_GIOVANNI_2]:[{encounter:["dialogue:rocket_boss_giovanni_2.encounter.1"],victory:["dialogue:rocket_boss_giovanni_2.victory.1"],defeat:["dialogue:rocket_boss_giovanni_2.defeat.1"]}],[U.MAXIE]:[{encounter:["dialogue:magma_boss_maxie_1.encounter.1"],victory:["dialogue:magma_boss_maxie_1.victory.1"],defeat:["dialogue:magma_boss_maxie_1.defeat.1"]}],[U.MAXIE_2]:[{encounter:["dialogue:magma_boss_maxie_2.encounter.1"],victory:["dialogue:magma_boss_maxie_2.victory.1"],defeat:["dialogue:magma_boss_maxie_2.defeat.1"]}],[U.ARCHIE]:[{encounter:["dialogue:aqua_boss_archie_1.encounter.1"],victory:["dialogue:aqua_boss_archie_1.victory.1"],defeat:["dialogue:aqua_boss_archie_1.defeat.1"]}],[U.ARCHIE_2]:[{encounter:["dialogue:aqua_boss_archie_2.encounter.1"],victory:["dialogue:aqua_boss_archie_2.victory.1"],defeat:["dialogue:aqua_boss_archie_2.defeat.1"]}],[U.CYRUS]:[{encounter:["dialogue:galactic_boss_cyrus_1.encounter.1"],victory:["dialogue:galactic_boss_cyrus_1.victory.1"],defeat:["dialogue:galactic_boss_cyrus_1.defeat.1"]}],[U.CYRUS_2]:[{encounter:["dialogue:galactic_boss_cyrus_2.encounter.1"],victory:["dialogue:galactic_boss_cyrus_2.victory.1"],defeat:["dialogue:galactic_boss_cyrus_2.defeat.1"]}],[U.GHETSIS]:[{encounter:["dialogue:plasma_boss_ghetsis_1.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_1.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_1.defeat.1"]}],[U.GHETSIS_2]:[{encounter:["dialogue:plasma_boss_ghetsis_2.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_2.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_2.defeat.1"]}],[U.LYSANDRE]:[{encounter:["dialogue:flare_boss_lysandre_1.encounter.1"],victory:["dialogue:flare_boss_lysandre_1.victory.1"],defeat:["dialogue:flare_boss_lysandre_1.defeat.1"]}],[U.LYSANDRE_2]:[{encounter:["dialogue:flare_boss_lysandre_2.encounter.1"],victory:["dialogue:flare_boss_lysandre_2.victory.1"],defeat:["dialogue:flare_boss_lysandre_2.defeat.1"]}],[U.LUSAMINE]:[{encounter:["dialogue:aether_boss_lusamine_1.encounter.1"],victory:["dialogue:aether_boss_lusamine_1.victory.1"],defeat:["dialogue:aether_boss_lusamine_1.defeat.1"]}],[U.LUSAMINE_2]:[{encounter:["dialogue:aether_boss_lusamine_2.encounter.1"],victory:["dialogue:aether_boss_lusamine_2.victory.1"],defeat:["dialogue:aether_boss_lusamine_2.defeat.1"]}],[U.GUZMA]:[{encounter:["dialogue:skull_boss_guzma_1.encounter.1"],victory:["dialogue:skull_boss_guzma_1.victory.1"],defeat:["dialogue:skull_boss_guzma_1.defeat.1"]}],[U.GUZMA_2]:[{encounter:["dialogue:skull_boss_guzma_2.encounter.1"],victory:["dialogue:skull_boss_guzma_2.victory.1"],defeat:["dialogue:skull_boss_guzma_2.defeat.1"]}],[U.ROSE]:[{encounter:["dialogue:macro_boss_rose_1.encounter.1"],victory:["dialogue:macro_boss_rose_1.victory.1"],defeat:["dialogue:macro_boss_rose_1.defeat.1"]}],[U.ROSE_2]:[{encounter:["dialogue:macro_boss_rose_2.encounter.1"],victory:["dialogue:macro_boss_rose_2.victory.1"],defeat:["dialogue:macro_boss_rose_2.defeat.1"]}],[U.PENNY]:[{encounter:["dialogue:star_boss_penny_1.encounter.1"],victory:["dialogue:star_boss_penny_1.victory.1"],defeat:["dialogue:star_boss_penny_1.defeat.1"]}],[U.PENNY_2]:[{encounter:["dialogue:star_boss_penny_2.encounter.1"],victory:["dialogue:star_boss_penny_2.victory.1"],defeat:["dialogue:star_boss_penny_2.defeat.1"]}],[U.BUCK]:[{encounter:["dialogue:stat_trainer_buck.encounter.1","dialogue:stat_trainer_buck.encounter.2"],victory:["dialogue:stat_trainer_buck.victory.1","dialogue:stat_trainer_buck.victory.2"],defeat:["dialogue:stat_trainer_buck.defeat.1","dialogue:stat_trainer_buck.defeat.2"]}],[U.CHERYL]:[{encounter:["dialogue:stat_trainer_cheryl.encounter.1","dialogue:stat_trainer_cheryl.encounter.2"],victory:["dialogue:stat_trainer_cheryl.victory.1","dialogue:stat_trainer_cheryl.victory.2"],defeat:["dialogue:stat_trainer_cheryl.defeat.1","dialogue:stat_trainer_cheryl.defeat.2"]}],[U.MARLEY]:[{encounter:["dialogue:stat_trainer_marley.encounter.1","dialogue:stat_trainer_marley.encounter.2"],victory:["dialogue:stat_trainer_marley.victory.1","dialogue:stat_trainer_marley.victory.2"],defeat:["dialogue:stat_trainer_marley.defeat.1","dialogue:stat_trainer_marley.defeat.2"]}],[U.MIRA]:[{encounter:["dialogue:stat_trainer_mira.encounter.1","dialogue:stat_trainer_mira.encounter.2"],victory:["dialogue:stat_trainer_mira.victory.1","dialogue:stat_trainer_mira.victory.2"],defeat:["dialogue:stat_trainer_mira.defeat.1","dialogue:stat_trainer_mira.defeat.2"]}],[U.RILEY]:[{encounter:["dialogue:stat_trainer_riley.encounter.1","dialogue:stat_trainer_riley.encounter.2"],victory:["dialogue:stat_trainer_riley.victory.1","dialogue:stat_trainer_riley.victory.2"],defeat:["dialogue:stat_trainer_riley.defeat.1","dialogue:stat_trainer_riley.defeat.2"]}],[U.VICTOR]:[{encounter:["dialogue:winstrates_victor.encounter.1"],victory:["dialogue:winstrates_victor.victory.1"]}],[U.VICTORIA]:[{encounter:["dialogue:winstrates_victoria.encounter.1"],victory:["dialogue:winstrates_victoria.victory.1"]}],[U.VIVI]:[{encounter:["dialogue:winstrates_vivi.encounter.1"],victory:["dialogue:winstrates_vivi.victory.1"]}],[U.VICKY]:[{encounter:["dialogue:winstrates_vicky.encounter.1"],victory:["dialogue:winstrates_vicky.victory.1"]}],[U.VITO]:[{encounter:["dialogue:winstrates_vito.encounter.1"],victory:["dialogue:winstrates_vito.victory.1"]}],[U.BROCK]:{encounter:["dialogue:brock.encounter.1","dialogue:brock.encounter.2","dialogue:brock.encounter.3"],victory:["dialogue:brock.victory.1","dialogue:brock.victory.2","dialogue:brock.victory.3"],defeat:["dialogue:brock.defeat.1","dialogue:brock.defeat.2","dialogue:brock.defeat.3"]},[U.MISTY]:{encounter:["dialogue:misty.encounter.1","dialogue:misty.encounter.2","dialogue:misty.encounter.3"],victory:["dialogue:misty.victory.1","dialogue:misty.victory.2","dialogue:misty.victory.3"],defeat:["dialogue:misty.defeat.1","dialogue:misty.defeat.2","dialogue:misty.defeat.3"]},[U.LT_SURGE]:{encounter:["dialogue:lt_surge.encounter.1","dialogue:lt_surge.encounter.2","dialogue:lt_surge.encounter.3"],victory:["dialogue:lt_surge.victory.1","dialogue:lt_surge.victory.2","dialogue:lt_surge.victory.3"],defeat:["dialogue:lt_surge.defeat.1","dialogue:lt_surge.defeat.2","dialogue:lt_surge.defeat.3"]},[U.ERIKA]:{encounter:["dialogue:erika.encounter.1","dialogue:erika.encounter.2","dialogue:erika.encounter.3","dialogue:erika.encounter.4"],victory:["dialogue:erika.victory.1","dialogue:erika.victory.2","dialogue:erika.victory.3","dialogue:erika.victory.4"],defeat:["dialogue:erika.defeat.1","dialogue:erika.defeat.2","dialogue:erika.defeat.3","dialogue:erika.defeat.4"]},[U.JANINE]:{encounter:["dialogue:janine.encounter.1","dialogue:janine.encounter.2","dialogue:janine.encounter.3"],victory:["dialogue:janine.victory.1","dialogue:janine.victory.2","dialogue:janine.victory.3"],defeat:["dialogue:janine.defeat.1","dialogue:janine.defeat.2","dialogue:janine.defeat.3"]},[U.SABRINA]:{encounter:["dialogue:sabrina.encounter.1","dialogue:sabrina.encounter.2","dialogue:sabrina.encounter.3"],victory:["dialogue:sabrina.victory.1","dialogue:sabrina.victory.2","dialogue:sabrina.victory.3"],defeat:["dialogue:sabrina.defeat.1","dialogue:sabrina.defeat.2","dialogue:sabrina.defeat.3"]},[U.BLAINE]:{encounter:["dialogue:blaine.encounter.1","dialogue:blaine.encounter.2","dialogue:blaine.encounter.3"],victory:["dialogue:blaine.victory.1","dialogue:blaine.victory.2","dialogue:blaine.victory.3"],defeat:["dialogue:blaine.defeat.1","dialogue:blaine.defeat.2","dialogue:blaine.defeat.3"]},[U.GIOVANNI]:{encounter:["dialogue:giovanni.encounter.1","dialogue:giovanni.encounter.2","dialogue:giovanni.encounter.3"],victory:["dialogue:giovanni.victory.1","dialogue:giovanni.victory.2","dialogue:giovanni.victory.3"],defeat:["dialogue:giovanni.defeat.1","dialogue:giovanni.defeat.2","dialogue:giovanni.defeat.3"]},[U.ROXANNE]:{encounter:["dialogue:roxanne.encounter.1","dialogue:roxanne.encounter.2","dialogue:roxanne.encounter.3"],victory:["dialogue:roxanne.victory.1","dialogue:roxanne.victory.2","dialogue:roxanne.victory.3"],defeat:["dialogue:roxanne.defeat.1","dialogue:roxanne.defeat.2","dialogue:roxanne.defeat.3"]},[U.BRAWLY]:{encounter:["dialogue:brawly.encounter.1","dialogue:brawly.encounter.2","dialogue:brawly.encounter.3"],victory:["dialogue:brawly.victory.1","dialogue:brawly.victory.2","dialogue:brawly.victory.3"],defeat:["dialogue:brawly.defeat.1","dialogue:brawly.defeat.2","dialogue:brawly.defeat.3"]},[U.WATTSON]:{encounter:["dialogue:wattson.encounter.1","dialogue:wattson.encounter.2","dialogue:wattson.encounter.3"],victory:["dialogue:wattson.victory.1","dialogue:wattson.victory.2","dialogue:wattson.victory.3"],defeat:["dialogue:wattson.defeat.1","dialogue:wattson.defeat.2","dialogue:wattson.defeat.3"]},[U.FLANNERY]:{encounter:["dialogue:flannery.encounter.1","dialogue:flannery.encounter.2","dialogue:flannery.encounter.3"],victory:["dialogue:flannery.victory.1","dialogue:flannery.victory.2","dialogue:flannery.victory.3"],defeat:["dialogue:flannery.defeat.1","dialogue:flannery.defeat.2","dialogue:flannery.defeat.3"]},[U.NORMAN]:{encounter:["dialogue:norman.encounter.1","dialogue:norman.encounter.2","dialogue:norman.encounter.3"],victory:["dialogue:norman.victory.1","dialogue:norman.victory.2","dialogue:norman.victory.3"],defeat:["dialogue:norman.defeat.1","dialogue:norman.defeat.2","dialogue:norman.defeat.3"]},[U.WINONA]:{encounter:["dialogue:winona.encounter.1","dialogue:winona.encounter.2","dialogue:winona.encounter.3"],victory:["dialogue:winona.victory.1","dialogue:winona.victory.2","dialogue:winona.victory.3"],defeat:["dialogue:winona.defeat.1","dialogue:winona.defeat.2","dialogue:winona.defeat.3"]},[U.TATE]:{encounter:["dialogue:tate.encounter.1","dialogue:tate.encounter.2","dialogue:tate.encounter.3"],victory:["dialogue:tate.victory.1","dialogue:tate.victory.2","dialogue:tate.victory.3"],defeat:["dialogue:tate.defeat.1","dialogue:tate.defeat.2","dialogue:tate.defeat.3"]},[U.LIZA]:{encounter:["dialogue:liza.encounter.1","dialogue:liza.encounter.2","dialogue:liza.encounter.3"],victory:["dialogue:liza.victory.1","dialogue:liza.victory.2","dialogue:liza.victory.3"],defeat:["dialogue:liza.defeat.1","dialogue:liza.defeat.2","dialogue:liza.defeat.3"]},[U.JUAN]:{encounter:["dialogue:juan.encounter.1","dialogue:juan.encounter.2","dialogue:juan.encounter.3","dialogue:juan.encounter.4"],victory:["dialogue:juan.victory.1","dialogue:juan.victory.2","dialogue:juan.victory.3","dialogue:juan.victory.4"],defeat:["dialogue:juan.defeat.1","dialogue:juan.defeat.2","dialogue:juan.defeat.3","dialogue:juan.defeat.4"]},[U.CRASHER_WAKE]:{encounter:["dialogue:crasher_wake.encounter.1","dialogue:crasher_wake.encounter.2","dialogue:crasher_wake.encounter.3"],victory:["dialogue:crasher_wake.victory.1","dialogue:crasher_wake.victory.2","dialogue:crasher_wake.victory.3"],defeat:["dialogue:crasher_wake.defeat.1","dialogue:crasher_wake.defeat.2","dialogue:crasher_wake.defeat.3"]},[U.FALKNER]:{encounter:["dialogue:falkner.encounter.1","dialogue:falkner.encounter.2","dialogue:falkner.encounter.3"],victory:["dialogue:falkner.victory.1","dialogue:falkner.victory.2","dialogue:falkner.victory.3"],defeat:["dialogue:falkner.defeat.1","dialogue:falkner.defeat.2","dialogue:falkner.defeat.3"]},[U.NESSA]:{encounter:["dialogue:nessa.encounter.1","dialogue:nessa.encounter.2","dialogue:nessa.encounter.3"],victory:["dialogue:nessa.victory.1","dialogue:nessa.victory.2","dialogue:nessa.victory.3"],defeat:["dialogue:nessa.defeat.1","dialogue:nessa.defeat.2","dialogue:nessa.defeat.3"]},[U.MELONY]:{encounter:["dialogue:melony.encounter.1","dialogue:melony.encounter.2","dialogue:melony.encounter.3"],victory:["dialogue:melony.victory.1","dialogue:melony.victory.2","dialogue:melony.victory.3"],defeat:["dialogue:melony.defeat.1","dialogue:melony.defeat.2","dialogue:melony.defeat.3"]},[U.MARLON]:{encounter:["dialogue:marlon.encounter.1","dialogue:marlon.encounter.2","dialogue:marlon.encounter.3"],victory:["dialogue:marlon.victory.1","dialogue:marlon.victory.2","dialogue:marlon.victory.3"],defeat:["dialogue:marlon.defeat.1","dialogue:marlon.defeat.2","dialogue:marlon.defeat.3"]},[U.SHAUNTAL]:{encounter:["dialogue:shauntal.encounter.1","dialogue:shauntal.encounter.2","dialogue:shauntal.encounter.3"],victory:["dialogue:shauntal.victory.1","dialogue:shauntal.victory.2","dialogue:shauntal.victory.3"],defeat:["dialogue:shauntal.defeat.1","dialogue:shauntal.defeat.2","dialogue:shauntal.defeat.3"]},[U.MARSHAL]:{encounter:["dialogue:marshal.encounter.1","dialogue:marshal.encounter.2","dialogue:marshal.encounter.3"],victory:["dialogue:marshal.victory.1","dialogue:marshal.victory.2","dialogue:marshal.victory.3"],defeat:["dialogue:marshal.defeat.1","dialogue:marshal.defeat.2","dialogue:marshal.defeat.3"]},[U.CHEREN]:{encounter:["dialogue:cheren.encounter.1","dialogue:cheren.encounter.2","dialogue:cheren.encounter.3"],victory:["dialogue:cheren.victory.1","dialogue:cheren.victory.2","dialogue:cheren.victory.3"],defeat:["dialogue:cheren.defeat.1","dialogue:cheren.defeat.2","dialogue:cheren.defeat.3"]},[U.CHILI]:{encounter:["dialogue:chili.encounter.1","dialogue:chili.encounter.2","dialogue:chili.encounter.3"],victory:["dialogue:chili.victory.1","dialogue:chili.victory.2","dialogue:chili.victory.3"],defeat:["dialogue:chili.defeat.1","dialogue:chili.defeat.2","dialogue:chili.defeat.3"]},[U.CILAN]:{encounter:["dialogue:cilan.encounter.1","dialogue:cilan.encounter.2","dialogue:cilan.encounter.3"],victory:["dialogue:cilan.victory.1","dialogue:cilan.victory.2","dialogue:cilan.victory.3"],defeat:["dialogue:cilan.defeat.1","dialogue:cilan.defeat.2","dialogue:cilan.defeat.3"]},[U.ROARK]:{encounter:["dialogue:roark.encounter.1","dialogue:roark.encounter.2","dialogue:roark.encounter.3","dialogue:roark.encounter.4"],victory:["dialogue:roark.victory.1","dialogue:roark.victory.2","dialogue:roark.victory.3","dialogue:roark.victory.4"],defeat:["dialogue:roark.defeat.1","dialogue:roark.defeat.2","dialogue:roark.defeat.3"]},[U.MORTY]:{encounter:["dialogue:morty.encounter.1","dialogue:morty.encounter.2","dialogue:morty.encounter.3","dialogue:morty.encounter.4","dialogue:morty.encounter.5","dialogue:morty.encounter.6"],victory:["dialogue:morty.victory.1","dialogue:morty.victory.2","dialogue:morty.victory.3","dialogue:morty.victory.4","dialogue:morty.victory.5","dialogue:morty.victory.6"],defeat:["dialogue:morty.defeat.1","dialogue:morty.defeat.2","dialogue:morty.defeat.3","dialogue:morty.defeat.4","dialogue:morty.defeat.5","dialogue:morty.defeat.6"]},[U.CRISPIN]:{encounter:["dialogue:crispin.encounter.1","dialogue:crispin.encounter.2"],victory:["dialogue:crispin.victory.1","dialogue:crispin.victory.2"],defeat:["dialogue:crispin.defeat.1","dialogue:crispin.defeat.2"]},[U.AMARYS]:{encounter:["dialogue:amarys.encounter.1"],victory:["dialogue:amarys.victory.1"],defeat:["dialogue:amarys.defeat.1"]},[U.LACEY]:{encounter:["dialogue:lacey.encounter.1"],victory:["dialogue:lacey.victory.1"],defeat:["dialogue:lacey.defeat.1"]},[U.DRAYTON]:{encounter:["dialogue:drayton.encounter.1"],victory:["dialogue:drayton.victory.1"],defeat:["dialogue:drayton.defeat.1"]},[U.RAMOS]:{encounter:["dialogue:ramos.encounter.1"],victory:["dialogue:ramos.victory.1"],defeat:["dialogue:ramos.defeat.1"]},[U.VIOLA]:{encounter:["dialogue:viola.encounter.1","dialogue:viola.encounter.2"],victory:["dialogue:viola.victory.1","dialogue:viola.victory.2"],defeat:["dialogue:viola.defeat.1","dialogue:viola.defeat.2"]},[U.CANDICE]:{encounter:["dialogue:candice.encounter.1","dialogue:candice.encounter.2"],victory:["dialogue:candice.victory.1","dialogue:candice.victory.2"],defeat:["dialogue:candice.defeat.1","dialogue:candice.defeat.2"]},[U.GARDENIA]:{encounter:["dialogue:gardenia.encounter.1"],victory:["dialogue:gardenia.victory.1"],defeat:["dialogue:gardenia.defeat.1"]},[U.AARON]:{encounter:["dialogue:aaron.encounter.1"],victory:["dialogue:aaron.victory.1"],defeat:["dialogue:aaron.defeat.1"]},[U.CRESS]:{encounter:["dialogue:cress.encounter.1"],victory:["dialogue:cress.victory.1"],defeat:["dialogue:cress.defeat.1"]},[U.ALLISTER]:{encounter:["dialogue:allister.encounter.1"],victory:["dialogue:allister.victory.1"],defeat:["dialogue:allister.defeat.1"]},[U.CLAY]:{encounter:["dialogue:clay.encounter.1"],victory:["dialogue:clay.victory.1"],defeat:["dialogue:clay.defeat.1"]},[U.KOFU]:{encounter:["dialogue:kofu.encounter.1"],victory:["dialogue:kofu.victory.1"],defeat:["dialogue:kofu.defeat.1"]},[U.TULIP]:{encounter:["dialogue:tulip.encounter.1"],victory:["dialogue:tulip.victory.1"],defeat:["dialogue:tulip.defeat.1"]},[U.SIDNEY]:{encounter:["dialogue:sidney.encounter.1"],victory:["dialogue:sidney.victory.1"],defeat:["dialogue:sidney.defeat.1"]},[U.PHOEBE]:{encounter:["dialogue:phoebe.encounter.1"],victory:["dialogue:phoebe.victory.1"],defeat:["dialogue:phoebe.defeat.1"]},[U.GLACIA]:{encounter:["dialogue:glacia.encounter.1"],victory:["dialogue:glacia.victory.1"],defeat:["dialogue:glacia.defeat.1"]},[U.DRAKE]:{encounter:["dialogue:drake.encounter.1"],victory:["dialogue:drake.victory.1"],defeat:["dialogue:drake.defeat.1"]},[U.WALLACE]:{encounter:["dialogue:wallace.encounter.1"],victory:["dialogue:wallace.victory.1"],defeat:["dialogue:wallace.defeat.1"]},[U.LORELEI]:{encounter:["dialogue:lorelei.encounter.1"],victory:["dialogue:lorelei.victory.1"],defeat:["dialogue:lorelei.defeat.1"]},[U.WILL]:{encounter:["dialogue:will.encounter.1"],victory:["dialogue:will.victory.1"],defeat:["dialogue:will.defeat.1"]},[U.MALVA]:{encounter:["dialogue:malva.encounter.1"],victory:["dialogue:malva.victory.1"],defeat:["dialogue:malva.defeat.1"]},[U.HALA]:{encounter:["dialogue:hala.encounter.1"],victory:["dialogue:hala.victory.1"],defeat:["dialogue:hala.defeat.1"]},[U.MOLAYNE]:{encounter:["dialogue:molayne.encounter.1"],victory:["dialogue:molayne.victory.1"],defeat:["dialogue:molayne.defeat.1"]},[U.RIKA]:{encounter:["dialogue:rika.encounter.1"],victory:["dialogue:rika.victory.1"],defeat:["dialogue:rika.defeat.1"]},[U.BRUNO]:{encounter:["dialogue:bruno.encounter.1"],victory:["dialogue:bruno.victory.1"],defeat:["dialogue:bruno.defeat.1"]},[U.BUGSY]:{encounter:["dialogue:bugsy.encounter.1"],victory:["dialogue:bugsy.victory.1"],defeat:["dialogue:bugsy.defeat.1"]},[U.KOGA]:{encounter:["dialogue:koga.encounter.1"],victory:["dialogue:koga.victory.1"],defeat:["dialogue:koga.defeat.1"]},[U.BERTHA]:{encounter:["dialogue:bertha.encounter.1"],victory:["dialogue:bertha.victory.1"],defeat:["dialogue:bertha.defeat.1"]},[U.LENORA]:{encounter:["dialogue:lenora.encounter.1"],victory:["dialogue:lenora.victory.1"],defeat:["dialogue:lenora.defeat.1"]},[U.SIEBOLD]:{encounter:["dialogue:siebold.encounter.1"],victory:["dialogue:siebold.victory.1"],defeat:["dialogue:siebold.defeat.1"]},[U.ROXIE]:{encounter:["dialogue:roxie.encounter.1"],victory:["dialogue:roxie.victory.1"],defeat:["dialogue:roxie.defeat.1"]},[U.OLIVIA]:{encounter:["dialogue:olivia.encounter.1"],victory:["dialogue:olivia.victory.1"],defeat:["dialogue:olivia.defeat.1"]},[U.POPPY]:{encounter:["dialogue:poppy.encounter.1"],victory:["dialogue:poppy.victory.1"],defeat:["dialogue:poppy.defeat.1"]},[U.AGATHA]:{encounter:["dialogue:agatha.encounter.1"],victory:["dialogue:agatha.victory.1"],defeat:["dialogue:agatha.defeat.1"]},[U.FLINT]:{encounter:["dialogue:flint.encounter.1"],victory:["dialogue:flint.victory.1"],defeat:["dialogue:flint.defeat.1"]},[U.GRIMSLEY]:{encounter:["dialogue:grimsley.encounter.1"],victory:["dialogue:grimsley.victory.1"],defeat:["dialogue:grimsley.defeat.1"]},[U.CAITLIN]:{encounter:["dialogue:caitlin.encounter.1"],victory:["dialogue:caitlin.victory.1"],defeat:["dialogue:caitlin.defeat.1"]},[U.DIANTHA]:{encounter:["dialogue:diantha.encounter.1"],victory:["dialogue:diantha.victory.1"],defeat:["dialogue:diantha.defeat.1"]},[U.WIKSTROM]:{encounter:["dialogue:wikstrom.encounter.1"],victory:["dialogue:wikstrom.victory.1"],defeat:["dialogue:wikstrom.defeat.1"]},[U.ACEROLA]:{encounter:["dialogue:acerola.encounter.1"],victory:["dialogue:acerola.victory.1"],defeat:["dialogue:acerola.defeat.1"]},[U.LARRY_ELITE]:{encounter:["dialogue:larry_elite.encounter.1"],victory:["dialogue:larry_elite.victory.1"],defeat:["dialogue:larry_elite.defeat.1"]},[U.LANCE]:{encounter:["dialogue:lance.encounter.1","dialogue:lance.encounter.2"],victory:["dialogue:lance.victory.1","dialogue:lance.victory.2"],defeat:["dialogue:lance.defeat.1","dialogue:lance.defeat.2"]},[U.KAREN]:{encounter:["dialogue:karen.encounter.1","dialogue:karen.encounter.2","dialogue:karen.encounter.3"],victory:["dialogue:karen.victory.1","dialogue:karen.victory.2","dialogue:karen.victory.3"],defeat:["dialogue:karen.defeat.1","dialogue:karen.defeat.2","dialogue:karen.defeat.3"]},[U.MILO]:{encounter:["dialogue:milo.encounter.1"],victory:["dialogue:milo.victory.1"],defeat:["dialogue:milo.defeat.1"]},[U.LUCIAN]:{encounter:["dialogue:lucian.encounter.1"],victory:["dialogue:lucian.victory.1"],defeat:["dialogue:lucian.defeat.1"]},[U.DRASNA]:{encounter:["dialogue:drasna.encounter.1"],victory:["dialogue:drasna.victory.1"],defeat:["dialogue:drasna.defeat.1"]},[U.KAHILI]:{encounter:["dialogue:kahili.encounter.1"],victory:["dialogue:kahili.victory.1"],defeat:["dialogue:kahili.defeat.1"]},[U.HASSEL]:{encounter:["dialogue:hassel.encounter.1"],victory:["dialogue:hassel.victory.1"],defeat:["dialogue:hassel.defeat.1"]},[U.BLUE]:{encounter:["dialogue:blue.encounter.1"],victory:["dialogue:blue.victory.1"],defeat:["dialogue:blue.defeat.1"]},[U.PIERS]:{encounter:["dialogue:piers.encounter.1"],victory:["dialogue:piers.victory.1"],defeat:["dialogue:piers.defeat.1"]},[U.RED]:{encounter:["dialogue:red.encounter.1"],victory:["dialogue:red.victory.1"],defeat:["dialogue:red.defeat.1"]},[U.JASMINE]:{encounter:["dialogue:jasmine.encounter.1"],victory:["dialogue:jasmine.victory.1"],defeat:["dialogue:jasmine.defeat.1"]},[U.LANCE_CHAMPION]:{encounter:["dialogue:lance_champion.encounter.1"],victory:["dialogue:lance_champion.victory.1"],defeat:["dialogue:lance_champion.defeat.1"]},[U.STEVEN]:{encounter:["dialogue:steven.encounter.1"],victory:["dialogue:steven.victory.1"],defeat:["dialogue:steven.defeat.1"]},[U.CYNTHIA]:{encounter:["dialogue:cynthia.encounter.1"],victory:["dialogue:cynthia.victory.1"],defeat:["dialogue:cynthia.defeat.1"]},[U.IRIS]:{encounter:["dialogue:iris.encounter.1"],victory:["dialogue:iris.victory.1"],defeat:["dialogue:iris.defeat.1"]},[U.HAU]:{encounter:["dialogue:hau.encounter.1"],victory:["dialogue:hau.victory.1"],defeat:["dialogue:hau.defeat.1"]},[U.GEETA]:{encounter:["dialogue:geeta.encounter.1"],victory:["dialogue:geeta.victory.1"],defeat:["dialogue:geeta.defeat.1"]},[U.NEMONA]:{encounter:["dialogue:nemona.encounter.1"],victory:["dialogue:nemona.victory.1"],defeat:["dialogue:nemona.defeat.1"]},[U.LEON]:{encounter:["dialogue:leon.encounter.1"],victory:["dialogue:leon.victory.1"],defeat:["dialogue:leon.defeat.1"]},[U.WHITNEY]:{encounter:["dialogue:whitney.encounter.1"],victory:["dialogue:whitney.victory.1"],defeat:["dialogue:whitney.defeat.1"]},[U.CHUCK]:{encounter:["dialogue:chuck.encounter.1"],victory:["dialogue:chuck.victory.1"],defeat:["dialogue:chuck.defeat.1"]},[U.KATY]:{encounter:["dialogue:katy.encounter.1"],victory:["dialogue:katy.victory.1"],defeat:["dialogue:katy.defeat.1"]},[U.PRYCE]:{encounter:["dialogue:pryce.encounter.1"],victory:["dialogue:pryce.victory.1"],defeat:["dialogue:pryce.defeat.1"]},[U.CLAIR]:{encounter:["dialogue:clair.encounter.1"],victory:["dialogue:clair.victory.1"],defeat:["dialogue:clair.defeat.1"]},[U.MAYLENE]:{encounter:["dialogue:maylene.encounter.1"],victory:["dialogue:maylene.victory.1"],defeat:["dialogue:maylene.defeat.1"]},[U.FANTINA]:{encounter:["dialogue:fantina.encounter.1"],victory:["dialogue:fantina.victory.1"],defeat:["dialogue:fantina.defeat.1"]},[U.BYRON]:{encounter:["dialogue:byron.encounter.1"],victory:["dialogue:byron.victory.1"],defeat:["dialogue:byron.defeat.1"]},[U.OLYMPIA]:{encounter:["dialogue:olympia.encounter.1"],victory:["dialogue:olympia.victory.1"],defeat:["dialogue:olympia.defeat.1"]},[U.VOLKNER]:{encounter:["dialogue:volkner.encounter.1"],victory:["dialogue:volkner.victory.1"],defeat:["dialogue:volkner.defeat.1"]},[U.BURGH]:{encounter:["dialogue:burgh.encounter.1","dialogue:burgh.encounter.2"],victory:["dialogue:burgh.victory.1","dialogue:burgh.victory.2"],defeat:["dialogue:burgh.defeat.1","dialogue:burgh.defeat.2"]},[U.ELESA]:{encounter:["dialogue:elesa.encounter.1"],victory:["dialogue:elesa.victory.1"],defeat:["dialogue:elesa.defeat.1"]},[U.SKYLA]:{encounter:["dialogue:skyla.encounter.1"],victory:["dialogue:skyla.victory.1"],defeat:["dialogue:skyla.defeat.1"]},[U.BRYCEN]:{encounter:["dialogue:brycen.encounter.1"],victory:["dialogue:brycen.victory.1"],defeat:["dialogue:brycen.defeat.1"]},[U.DRAYDEN]:{encounter:["dialogue:drayden.encounter.1"],victory:["dialogue:drayden.victory.1"],defeat:["dialogue:drayden.defeat.1"]},[U.GRANT]:{encounter:["dialogue:grant.encounter.1"],victory:["dialogue:grant.victory.1"],defeat:["dialogue:grant.defeat.1"]},[U.KORRINA]:{encounter:["dialogue:korrina.encounter.1"],victory:["dialogue:korrina.victory.1"],defeat:["dialogue:korrina.defeat.1"]},[U.CLEMONT]:{encounter:["dialogue:clemont.encounter.1"],victory:["dialogue:clemont.victory.1"],defeat:["dialogue:clemont.defeat.1"]},[U.VALERIE]:{encounter:["dialogue:valerie.encounter.1"],victory:["dialogue:valerie.victory.1"],defeat:["dialogue:valerie.defeat.1"]},[U.WULFRIC]:{encounter:["dialogue:wulfric.encounter.1"],victory:["dialogue:wulfric.victory.1"],defeat:["dialogue:wulfric.defeat.1"]},[U.KABU]:{encounter:["dialogue:kabu.encounter.1"],victory:["dialogue:kabu.victory.1"],defeat:["dialogue:kabu.defeat.1"]},[U.BEA]:{encounter:["dialogue:bea.encounter.1"],victory:["dialogue:bea.victory.1"],defeat:["dialogue:bea.defeat.1"]},[U.OPAL]:{encounter:["dialogue:opal.encounter.1"],victory:["dialogue:opal.victory.1"],defeat:["dialogue:opal.defeat.1"]},[U.BEDE]:{encounter:["dialogue:bede.encounter.1"],victory:["dialogue:bede.victory.1"],defeat:["dialogue:bede.defeat.1"]},[U.GORDIE]:{encounter:["dialogue:gordie.encounter.1"],victory:["dialogue:gordie.victory.1"],defeat:["dialogue:gordie.defeat.1"]},[U.MARNIE]:{encounter:["dialogue:marnie.encounter.1"],victory:["dialogue:marnie.victory.1"],defeat:["dialogue:marnie.defeat.1"]},[U.RAIHAN]:{encounter:["dialogue:raihan.encounter.1"],victory:["dialogue:raihan.victory.1"],defeat:["dialogue:raihan.defeat.1"]},[U.BRASSIUS]:{encounter:["dialogue:brassius.encounter.1"],victory:["dialogue:brassius.victory.1"],defeat:["dialogue:brassius.defeat.1"]},[U.IONO]:{encounter:["dialogue:iono.encounter.1"],victory:["dialogue:iono.victory.1"],defeat:["dialogue:iono.defeat.1"]},[U.LARRY]:{encounter:["dialogue:larry.encounter.1"],victory:["dialogue:larry.victory.1"],defeat:["dialogue:larry.defeat.1"]},[U.RYME]:{encounter:["dialogue:ryme.encounter.1"],victory:["dialogue:ryme.victory.1"],defeat:["dialogue:ryme.defeat.1"]},[U.GRUSHA]:{encounter:["dialogue:grusha.encounter.1"],victory:["dialogue:grusha.victory.1"],defeat:["dialogue:grusha.defeat.1"]},[U.MARNIE_ELITE]:{encounter:["dialogue:marnie_elite.encounter.1","dialogue:marnie_elite.encounter.2"],victory:["dialogue:marnie_elite.victory.1","dialogue:marnie_elite.victory.2"],defeat:["dialogue:marnie_elite.defeat.1","dialogue:marnie_elite.defeat.2"]},[U.NESSA_ELITE]:{encounter:["dialogue:nessa_elite.encounter.1","dialogue:nessa_elite.encounter.2"],victory:["dialogue:nessa_elite.victory.1","dialogue:nessa_elite.victory.2"],defeat:["dialogue:nessa_elite.defeat.1","dialogue:nessa_elite.defeat.2"]},[U.BEA_ELITE]:{encounter:["dialogue:bea_elite.encounter.1","dialogue:bea_elite.encounter.2"],victory:["dialogue:bea_elite.victory.1","dialogue:bea_elite.victory.2"],defeat:["dialogue:bea_elite.defeat.1","dialogue:bea_elite.defeat.2"]},[U.ALLISTER_ELITE]:{encounter:["dialogue:allister_elite.encounter.1","dialogue:allister_elite.encounter.2"],victory:["dialogue:allister_elite.victory.1","dialogue:allister_elite.victory.2"],defeat:["dialogue:allister_elite.defeat.1","dialogue:allister_elite.defeat.2"]},[U.RAIHAN_ELITE]:{encounter:["dialogue:raihan_elite.encounter.1","dialogue:raihan_elite.encounter.2"],victory:["dialogue:raihan_elite.victory.1","dialogue:raihan_elite.victory.2"],defeat:["dialogue:raihan_elite.defeat.1","dialogue:raihan_elite.defeat.2"]},[U.ALDER]:{encounter:["dialogue:alder.encounter.1"],victory:["dialogue:alder.victory.1"],defeat:["dialogue:alder.defeat.1"]},[U.KIERAN]:{encounter:["dialogue:kieran.encounter.1"],victory:["dialogue:kieran.victory.1"],defeat:["dialogue:kieran.defeat.1"]},[U.RIVAL]:[{encounter:["dialogue:rival.encounter.1"],victory:["dialogue:rival.victory.1"]},{encounter:["dialogue:rival_female.encounter.1"],victory:["dialogue:rival_female.victory.1"]}],[U.RIVAL_2]:[{encounter:["dialogue:rival_2.encounter.1"],victory:["dialogue:rival_2.victory.1"]},{encounter:["dialogue:rival_2_female.encounter.1"],victory:["dialogue:rival_2_female.victory.1"],defeat:["dialogue:rival_2_female.defeat.1"]}],[U.RIVAL_3]:[{encounter:["dialogue:rival_3.encounter.1"],victory:["dialogue:rival_3.victory.1"]},{encounter:["dialogue:rival_3_female.encounter.1"],victory:["dialogue:rival_3_female.victory.1"],defeat:["dialogue:rival_3_female.defeat.1"]}],[U.RIVAL_4]:[{encounter:["dialogue:rival_4.encounter.1"],victory:["dialogue:rival_4.victory.1"]},{encounter:["dialogue:rival_4_female.encounter.1"],victory:["dialogue:rival_4_female.victory.1"],defeat:["dialogue:rival_4_female.defeat.1"]}],[U.RIVAL_5]:[{encounter:["dialogue:rival_5.encounter.1"],victory:["dialogue:rival_5.victory.1"]},{encounter:["dialogue:rival_5_female.encounter.1"],victory:["dialogue:rival_5_female.victory.1"],defeat:["dialogue:rival_5_female.defeat.1"]}],[U.RIVAL_6]:[{encounter:["dialogue:rival_6.encounter.1"],victory:["dialogue:rival_6.victory.1"]},{encounter:["dialogue:rival_6_female.encounter.1"],victory:["dialogue:rival_6_female.victory.1"]}]},bo={blue_red_double:{encounter:["doubleBattleDialogue:blue_red_double.encounter.1"],victory:["doubleBattleDialogue:blue_red_double.victory.1"]},red_blue_double:{encounter:["doubleBattleDialogue:red_blue_double.encounter.1"],victory:["doubleBattleDialogue:red_blue_double.victory.1"]},tate_liza_double:{encounter:["doubleBattleDialogue:tate_liza_double.encounter.1"],victory:["doubleBattleDialogue:tate_liza_double.victory.1"]},liza_tate_double:{encounter:["doubleBattleDialogue:liza_tate_double.encounter.1"],victory:["doubleBattleDialogue:liza_tate_double.victory.1"]},wallace_steven_double:{encounter:["doubleBattleDialogue:wallace_steven_double.encounter.1"],victory:["doubleBattleDialogue:wallace_steven_double.victory.1"]},steven_wallace_double:{encounter:["doubleBattleDialogue:steven_wallace_double.encounter.1"],victory:["doubleBattleDialogue:steven_wallace_double.victory.1"]},alder_iris_double:{encounter:["doubleBattleDialogue:alder_iris_double.encounter.1"],victory:["doubleBattleDialogue:alder_iris_double.victory.1"]},iris_alder_double:{encounter:["doubleBattleDialogue:iris_alder_double.encounter.1"],victory:["doubleBattleDialogue:iris_alder_double.victory.1"]},marnie_piers_double:{encounter:["doubleBattleDialogue:marnie_piers_double.encounter.1"],victory:["doubleBattleDialogue:marnie_piers_double.victory.1"]},piers_marnie_double:{encounter:["doubleBattleDialogue:piers_marnie_double.encounter.1"],victory:["doubleBattleDialogue:piers_marnie_double.victory.1"]}},D6={[TE.FINAL_BOSS]:{encounter:"battleSpecDialogue:encounter",firstStageWin:"battleSpecDialogue:firstStageWin",secondStageWin:"battleSpecDialogue:secondStageWin"}};function aM(E){const A=/@c\{(.*?)\}/.exec(E);return A?A[1]:"neutral"}L(aM,"getCharVariantFromDialogue");function lZ(){const E=Object.keys(Hx).map(A=>parseInt(A));for(const A of E){const s=Hx[A],R=["encounter","victory","defeat"];for(const n of R)Array.isArray(s)?(s[0][n]&&(ZA[A][`${n}Messages`]=s[0][n]),s.length>1&&(ZA[A][`female${n.slice(0,1).toUpperCase()}${n.slice(1)}Messages`]=s[1][n])):ZA[A][`${n}Messages`]=s[n]}}L(lZ,"initTrainerTypeDialogue");var L1=(E=>(E[E.SWITCH=0]="SWITCH",E[E.SET=1]="SET",E))(L1||{});const $B=class $B extends GE{executeForAll(A){this.scene.getField(!0).filter(R=>R.summonData).forEach(R=>A(R))}};L($B,"FieldPhase");let kO=$B;const zB=class zB extends kO{constructor(A,s,R){super(A),this.partyMemberIndex=s,this.fieldIndex=s<this.scene.currentBattle.getBattlerCount()?s:-1,this.player=R}getParty(){return this.player?this.scene.getPlayerParty():this.scene.getEnemyParty()}getPokemon(){return this.getParty()[this.partyMemberIndex]}};L(zB,"PartyMemberPokemonPhase");let AC=zB;const qB=class qB extends kO{constructor(A,s){super(A),s===void 0&&(s=A.getField().find(R=>R==null?void 0:R.isActive()).getBattlerIndex()),this.battlerIndex=s,this.player=s<2,this.fieldIndex=s%2}getPokemon(){return this.battlerIndex>Bt.ENEMY_2?this.scene.getPokemonById(this.battlerIndex):this.scene.getField()[this.battlerIndex]}};L(qB,"PokemonPhase");let as=qB;const jB=class jB extends as{constructor(A,s){super(A,s)}start(){var s;super.start();const A=this.getPokemon();((s=A.status)==null?void 0:s.effect)===Re.TOXIC&&(A.status.toxicTurnCount=0),this.scene.arena.applyTags(eO,!1,A),this.scene.currentBattle.isBattleMysteryEncounter()&&A.findTags(R=>R instanceof tu).length>0&&A.lapseTag(Y.MYSTERY_ENCOUNTER_POST_SUMMON),vQ(HE,A).then(()=>{(A.isPlayer()?this.scene.getPlayerField():this.scene.getEnemyField()).forEach(n=>Ct(pr,n,null,!1)),this.end()})}};L(jB,"PostSummonPhase");let QI=jB;const eg=class eg extends as{constructor(A,s){super(A,s)}start(){super.start(),this.getPokemon().sparkle(),this.scene.time.delayedCall(1e3,()=>this.end())}};L(eg,"ShinySparklePhase");let VT=eg;var oE=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.TRAINER_BATTLE=1]="TRAINER_BATTLE",E[E.WILD_BATTLE=2]="WILD_BATTLE",E[E.BOSS_BATTLE=3]="BOSS_BATTLE",E[E.NO_BATTLE=4]="NO_BATTLE",E))(oE||{});const tg=class tg extends AC{constructor(A,s,R=!0,n=!1){super(A,s,R),this.loaded=n}start(){super.start(),this.preSummon()}preSummon(){var s,R;const A=this.getPokemon();if(!A.isAllowedInBattle()||this.player&&!this.getParty().some(n=>n.id===A.id)){console.warn("The Pokemon about to be sent out is fainted or illegal under a challenge. Attempting to resolve..."),A.isOnField()&&A.leaveField();const n=this.getParty(),I=n.findIndex((a,r)=>r>this.partyMemberIndex&&a.isAllowedInBattle());if(I===-1){console.error(`Party Details:
`,n),console.error("All available Pokemon were fainted or illegal!"),this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new CO(this.scene)),this.end();return}[n[this.partyMemberIndex],n[I]]=[n[I],n[this.partyMemberIndex]],console.warn("Swapped %s %O with %s %O",ee(A),A,ee(n[0]),n[0])}if(this.player)this.scene.ui.showText(D.t("battle:playerGo",{pokemonName:ee(this.getPokemon())})),this.player&&this.scene.pbTray.hide(),this.scene.trainer.setTexture(`trainer_${this.scene.gameData.gender===vt.FEMALE?"f":"m"}_back_pb`),this.scene.time.delayedCall(562,()=>{this.scene.trainer.setFrame("2"),this.scene.time.delayedCall(64,()=>{this.scene.trainer.setFrame("3")})}),this.scene.tweens.add({targets:this.scene.trainer,x:-36,duration:1e3,onComplete:L(()=>this.scene.trainer.setVisible(!1),"onComplete")}),this.scene.time.delayedCall(750,()=>this.summon());else if(this.scene.currentBattle.battleType===ht.TRAINER||((s=this.scene.currentBattle.mysteryEncounter)==null?void 0:s.encounterMode)===oE.TRAINER_BATTLE){const n=(R=this.scene.currentBattle.trainer)==null?void 0:R.getName(this.fieldIndex%2?Tt.TRAINER_PARTNER:Tt.TRAINER),I=this.getPokemon().getNameToRender(),a=D.t("battle:trainerSendOut",{trainerName:n,pokemonName:I});this.scene.pbTrayEnemy.hide(),this.scene.ui.showText(a,null,()=>this.summon())}else this.scene.currentBattle.isBattleMysteryEncounter()&&(this.scene.pbTrayEnemy.hide(),this.summonWild())}summon(){const A=this.getPokemon(),s=this.scene.addFieldSprite(this.player?36:248,this.player?80:44,"pb",TO(A.pokeball));if(s.setVisible(!1),s.setOrigin(.5,.625),this.scene.field.add(s),this.fieldIndex===1)A.setFieldPosition(nR.RIGHT,0);else{const n=this.getParty().filter(I=>I.isAllowedInBattle()).length;A.setFieldPosition(!this.scene.currentBattle.double||n===1?nR.CENTER:nR.LEFT)}const R=A.getFieldPositionOffset();s.setVisible(!0),this.scene.tweens.add({targets:s,duration:650,x:(this.player?100:236)+R[0]}),this.scene.tweens.add({targets:s,duration:150,ease:"Cubic.easeOut",y:(this.player?70:34)+R[1],onComplete:L(()=>{this.scene.tweens.add({targets:s,duration:500,ease:"Cubic.easeIn",angle:1440,y:(this.player?132:86)+R[1],onComplete:L(()=>{if(this.scene.playSound("se/pb_rel"),s.destroy(),this.scene.add.existing(A),this.scene.field.add(A),!this.player){const n=this.scene.getPlayerPokemon();n!=null&&n.isOnField()&&this.scene.field.moveBelow(A,n),this.scene.currentBattle.seenEnemyPartyMemberIds.add(A.id)}iM(this.scene,A.x,A.y-16,A.pokeball),this.scene.updateModifiers(this.player),this.scene.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.5),A.tint(bO(A.pokeball)),A.untint(250,"Sine.easeIn"),this.scene.updateFieldScale(),this.scene.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:L(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),this.scene.time.delayedCall(1e3,()=>this.end())},"onComplete")})},"onComplete")})},"onComplete")})}summonWild(){const A=this.getPokemon();if(this.fieldIndex===1)A.setFieldPosition(nR.RIGHT,0);else{const s=this.getParty().filter(R=>!R.isFainted()).length;A.setFieldPosition(!this.scene.currentBattle.double||s===1?nR.CENTER:nR.LEFT)}if(this.scene.add.existing(A),this.scene.field.add(A),!this.player){const s=this.scene.getPlayerPokemon();s!=null&&s.isOnField()&&this.scene.field.moveBelow(A,s),this.scene.currentBattle.seenEnemyPartyMemberIds.add(A.id)}this.scene.updateModifiers(this.player),this.scene.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.75),A.tint(bO(A.pokeball)),A.untint(250,"Sine.easeIn"),this.scene.updateFieldScale(),A.x+=16,A.y-=20,A.alpha=0,this.scene.tweens.add({targets:A,x:"-=16",y:"+=16",alpha:1,duration:1e3,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:L(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),this.scene.updateFieldScale(),this.scene.time.delayedCall(1e3,()=>this.end())},"onComplete")})}onEnd(){const A=this.getPokemon();A.isShiny()&&this.scene.unshiftPhase(new VT(this.scene,A.getBattlerIndex())),A.resetTurnData(),(!this.loaded||[ht.TRAINER,ht.MYSTERY_ENCOUNTER].includes(this.scene.currentBattle.battleType)||this.scene.currentBattle.waveIndex%10===1)&&(this.scene.triggerPokemonFormChange(A,ls,!0),this.queuePostSummon())}queuePostSummon(){this.scene.pushPhase(new QI(this.scene,this.getPokemon().getBattlerIndex()))}end(){this.onEnd(),super.end()}};L(tg,"SummonPhase");let XE=tg;const Ag=class Ag extends XE{constructor(A,s){super(A,s)}preSummon(){this.scene.ui.showText(D.t("battle:sendOutPokemon",{pokemonName:ee(this.getPokemon())})),this.scene.time.delayedCall(250,()=>this.summon())}};L(Ag,"SummonMissingPhase");let pc=Ag;var aA=(E=>(E[E.INITIAL_SWITCH=0]="INITIAL_SWITCH",E[E.SWITCH=1]="SWITCH",E[E.BATON_PASS=2]="BATON_PASS",E[E.SHED_TAIL=3]="SHED_TAIL",E[E.FORCE_SWITCH=4]="FORCE_SWITCH",E))(aA||{});const Eg=class Eg extends XE{constructor(A,s,R,n,I,a){super(A,R,a!==void 0?a:!0),this.switchType=s,this.slotIndex=n,this.doReturn=I}start(){super.start()}preSummon(){var s,R;if(this.player||(this.slotIndex===-1&&(this.slotIndex=(s=this.scene.currentBattle.trainer)==null?void 0:s.getNextSummonIndex(this.fieldIndex?Tt.TRAINER_PARTNER:Tt.TRAINER)),this.slotIndex>-1&&(this.showEnemyTrainer(this.fieldIndex%2?Tt.TRAINER_PARTNER:Tt.TRAINER),this.scene.pbTrayEnemy.showPbTray(this.scene.getEnemyParty()))),!this.doReturn||this.slotIndex!==-1&&!(this.player?this.scene.getPlayerParty():this.scene.getEnemyParty())[this.slotIndex]){if(this.player)return this.switchAndSummon();this.scene.time.delayedCall(750,()=>this.switchAndSummon());return}const A=this.getPokemon();if((this.player?this.scene.getEnemyField():this.scene.getPlayerField()).forEach(n=>n.removeTagsBySourceId(A.id)),this.switchType===aA.SWITCH||this.switchType===aA.INITIAL_SWITCH){const n=A.getTag(KE);n&&this.scene.tweens.add({targets:n.sprite,duration:250,scale:n.sprite.scale*.5,ease:"Sine.easeIn",onComplete:L(()=>n.sprite.destroy(),"onComplete")})}this.scene.ui.showText(this.player?D.t("battle:playerComeBack",{pokemonName:ee(A)}):D.t("battle:trainerComeBack",{trainerName:(R=this.scene.currentBattle.trainer)==null?void 0:R.getName(this.fieldIndex%2?Tt.TRAINER_PARTNER:Tt.TRAINER),pokemonName:A.getNameToRender()})),this.scene.playSound("se/pb_rel"),A.hideInfo(),A.tint(bO(A.pokeball),1,250,"Sine.easeIn"),this.scene.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:L(()=>{A.leaveField(this.switchType===aA.SWITCH,!1),this.scene.time.delayedCall(750,()=>this.switchAndSummon())},"onComplete")})}switchAndSummon(){const A=this.player?this.getParty():this.scene.getEnemyParty(),s=A[this.slotIndex];if(this.lastPokemon=this.getPokemon(),VQ(Aa,this.lastPokemon),this.switchType===aA.BATON_PASS&&s&&((this.player?this.scene.getEnemyField():this.scene.getPlayerField()).forEach(R=>R.transferTagsBySourceId(this.lastPokemon.id,s.id)),!this.scene.findModifier(R=>R instanceof Fi&&R.pokemonId===s.id))){const R=this.scene.findModifier(n=>n instanceof Fi&&n.pokemonId===this.lastPokemon.id);R&&!this.scene.findModifier(n=>n instanceof Fi&&n.pokemonId===s.id)&&this.scene.tryTransferHeldItemModifier(R,s,!1,void 0,void 0,void 0,!1)}if(s){A[this.slotIndex]=this.lastPokemon,A[this.fieldIndex]=s;const R=L(()=>{var n;this.scene.ui.showText(this.player?D.t("battle:playerGo",{pokemonName:ee(s)}):D.t("battle:trainerGo",{trainerName:(n=this.scene.currentBattle.trainer)==null?void 0:n.getName(this.fieldIndex%2?Tt.TRAINER_PARTNER:Tt.TRAINER),pokemonName:this.getPokemon().getNameToRender()})),this.switchType===aA.BATON_PASS||this.switchType===aA.SHED_TAIL?this.lastPokemon.getTag(KE)&&(s.x+=this.lastPokemon.getSubstituteOffset()[0],s.y+=this.lastPokemon.getSubstituteOffset()[1],s.setAlpha(.5)):s.resetSummonData(),this.summon()},"showTextAndSummon");this.player?R():this.scene.time.delayedCall(1500,()=>{this.hideEnemyTrainer(),this.scene.pbTrayEnemy.hide(),R()})}else this.end()}onEnd(){var r,S,o;super.onEnd();const A=this.getPokemon(),s=(r=this.lastPokemon)==null?void 0:r.scene.currentBattle.lastMove,R=s?ye[s]:void 0,n=(S=A.scene.currentBattle.turnCommands[this.fieldIndex])==null?void 0:S.command,I=(R==null?void 0:R.hasAttr(ks))&&!this.lastPokemon.isFainted(),a=this.lastPokemon.hasAbilityWithAttr(Ra)&&!this.lastPokemon.isFainted();if((n===NA.POKEMON||I||a)&&(A.battleSummonData.turnCount--,A.battleSummonData.waveTurnCount--),this.switchType===aA.BATON_PASS&&A)A.transferSummon(this.lastPokemon);else if(this.switchType===aA.SHED_TAIL&&A){const l=this.lastPokemon.getTag(KE);l&&A.summonData.tags.push(l)}this.switchType!==aA.INITIAL_SWITCH&&(A.resetTurnData(),A.turnData.switchedInThisTurn=!0),(o=this.lastPokemon)==null||o.resetSummonData(),this.scene.triggerPokemonFormChange(A,ls,!0),this.scene.arena.triggerWeatherBasedFormChanges()}queuePostSummon(){this.scene.unshiftPhase(new QI(this.scene,this.getPokemon().getBattlerIndex()))}};L(Eg,"SwitchSummonPhase");let aR=Eg;const sg=class sg extends GE{constructor(A,s,R,n,I){super(A),this.switchType=s,this.fieldIndex=R,this.isModal=n,this.doReturn=I}start(){if(super.start(),this.isModal&&!this.scene.getPlayerParty().filter(s=>s.isAllowedInBattle()&&!s.isActive(!0)).length)return super.end();if(this.isModal&&!this.doReturn&&!this.scene.getPlayerParty()[this.fieldIndex].isFainted())return super.end();if(this.isModal&&this.scene.getPlayerField().filter(s=>s.isAllowedInBattle()&&s.isActive(!0)).length>=this.scene.currentBattle.getBattlerCount())return super.end();const A=this.scene.currentBattle.getBattlerCount()===1||this.scene.getPokemonAllowedInBattle().length>1?this.fieldIndex:0;this.scene.ui.setMode(Oe.PARTY,this.isModal?us.FAINT_SWITCH:us.POST_BATTLE_SWITCH,A,(s,R)=>{if(s>=this.scene.currentBattle.getBattlerCount()&&s<6){this.scene.tryRemovePhase(I=>I instanceof QI&&I.player&&I.fieldIndex===this.fieldIndex);const n=R===tS.PASS_BATON?aA.BATON_PASS:this.switchType;this.scene.unshiftPhase(new aR(this.scene,n,A,s,this.doReturn))}this.scene.ui.setMode(Oe.MESSAGE).then(()=>super.end())},vE.FilterNonFainted)}};L(sg,"SwitchPhase");let Yi=sg;const Rg=class Rg extends GE{constructor(A,s,R){super(A),this.fieldIndex=s,this.useName=R}start(){super.start();const A=this.scene.getPlayerField()[this.fieldIndex];if(this.scene.battleStyle===L1.SET)return super.end();if(this.scene.field.getAll().indexOf(A)===-1)return this.scene.unshiftPhase(new pc(this.scene,this.fieldIndex)),super.end();if(!this.scene.getPlayerParty().slice(1).filter(s=>s.isActive()).length)return super.end();if(A.getTag(Y.FRENZY)||A.isTrapped()||this.scene.getPlayerField().some(s=>s.getTag(Y.COMMANDED)))return super.end();this.scene.ui.showText(D.t("battle:switchQuestion",{pokemonName:this.useName?ee(A):D.t("battle:pokemon")}),null,()=>{this.scene.ui.setMode(Oe.CONFIRM,()=>{this.scene.ui.setMode(Oe.MESSAGE),this.scene.unshiftPhase(new Yi(this.scene,aA.INITIAL_SWITCH,this.fieldIndex,!1,!0)),this.end()},()=>{this.scene.ui.setMode(Oe.MESSAGE),this.end()})})}};L(Rg,"CheckSwitchPhase");let on=Rg;const Og=class Og extends GE{start(){super.start(),this.scene.newBattle(),this.end()}};L(Og,"NewBattlePhase");let JI=Og;const ng=class ng extends as{constructor(A,s){super(A,s)}start(){const A=this.getPokemon();if(A!=null&&A.isActive(!0)&&A.status&&A.status.isPostTurn()&&!A.switchOutStatus){A.status.incrementTurn();const s=new Lt(!1);if(Ct(DE,A,s),Ct(SU,A,s),s.value)this.end();else{this.scene.queueMessage(Zb(A.status.effect,ee(A)));const R=new Rt(0);switch(A.status.effect){case Re.POISON:R.value=Math.max(A.getMaxHp()>>3,1);break;case Re.TOXIC:R.value=Math.max(Math.floor(A.getMaxHp()/16*A.status.toxicTurnCount),1);break;case Re.BURN:R.value=Math.max(A.getMaxHp()>>4,1),Ct(GU,A,null,!1,R);break}R.value&&(this.scene.damageNumberHandler.add(this.getPokemon(),A.damage(R.value,!1,!0)),A.updateInfo(),C1(wr,A,R.value,A.hasPassive(),!1,[])),new Qi(oA.POISON+(A.status.effect-1),A).play(this.scene,!1,()=>this.end())}}else this.end()}end(){this.scene.currentBattle.battleSpec===TE.FINAL_BOSS?this.scene.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};L(ng,"PostTurnStatusEffectPhase");let xT=ng;const ig=class ig extends aR{constructor(A,s){super(A,aA.SWITCH,s,-1,!0)}switchAndSummon(){this.end()}summon(){}onEnd(){const A=this.getPokemon();A.resetSprite(),A.resetTurnData(),A.resetSummonData(),this.scene.updateFieldScale(),this.scene.triggerPokemonFormChange(A,ls)}};L(ig,"ReturnPhase");let Mr=ig;const Ig=class Ig extends as{constructor(A,s,R){super(A,s),this.shownIvs=R}start(){if(super.start(),!this.shownIvs)return this.end();const A=this.getPokemon();let s=[],R=[],n=[];const I=this.scene.getEnemyField(),a=this.scene.uiTheme;for(let r=0;r<I.length;r++){s=I[r].ivs;const S=this.scene.gameData.dexData[I[r].species.getRootSpeciesId()].ivs,o=this.scene.ui.getMessageHandler().getTopIvs(s,this.shownIvs);R=I[r].getBattleInfo().getStatsValueContainer().list,n=R.filter(l=>l.name.indexOf("icon_stat_label")>=0);for(let l=0;l<n.length;l++){const C=g[n[l].frame.name];if(s[C]>S[C]&&o.indexOf(Number(C))>=0){const M=s[C]===31?IA(X.PERFECT_IV,!1,a):IA(X.SUMMARY_GREEN,!1,a),u=Phaser.Display.Color.HexStringToColor(M).color;n[l].setTint(u)}n[l].setVisible(!0)}}this.scene.hideIvs?this.end():this.scene.ui.showText(D.t("battle:ivScannerUseQuestion",{pokemonName:ee(A)}),null,()=>{this.scene.ui.setMode(Oe.CONFIRM,()=>{this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.clearText(),new Qi(oA.LOCK_ON,A,A).play(this.scene,!1,()=>{this.scene.ui.getMessageHandler().promptIvs(A.id,A.ivs,this.shownIvs).then(()=>this.end())})},()=>{this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.clearText(),this.end()})})}};L(Ig,"ScanIvsPhase");let bT=Ig;const js=48,Ei=82,NL=48,si=8,ko=6,dD=class dD extends Phaser.GameObjects.Container{constructor(A,s){s!=null&&s.onSide&&(s.top=!1),super(A,s==null?void 0:s.x,s==null?void 0:s.y),this.active=!1,this.descScroll=null;const R=(s==null?void 0:s.scale)||1;this.setScale(R),this.options=s||{};const n=((s==null?void 0:s.width)||dD.getWidth(R,A))/R;this.descBg=_t(A,s!=null&&s.onSide&&!(s!=null&&s.right)?Ei:0,s!=null&&s.top?js:0,n-(s!=null&&s.onSide?Ei:0),NL),this.descBg.setOrigin(0,0),this.add(this.descBg),this.desc=le(A,(s!=null&&s.onSide&&!(s!=null&&s.right)?Ei:0)+si,(s!=null&&s.top?js:0)+si-2,"",X.BATTLE_INFO,{wordWrap:{width:(n-(si-2)*2-(s!=null&&s.onSide?Ei:0))*ko}}),this.desc.setLineSpacing(D.resolvedLanguage==="ja"?25:5);const I={x:(s==null?void 0:s.x)||0,y:(s==null?void 0:s.y)||0};I.x<0&&(I.x+=this.scene.game.canvas.width/ko),I.y<0&&(I.y+=this.scene.game.canvas.height/ko);const a=this.scene.make.graphics();a.fillStyle(16711680),a.fillRect(I.x+((s!=null&&s.onSide&&!(s!=null&&s.right)?Ei:0)+si)*R,I.y+((s!=null&&s.top?js:0)+si-2)*R,n-((s!=null&&s.onSide?Ei:0)-si*2)*R,(NL-(si-2)*2)*R),a.setScale(6);const r=this.createGeometryMask(a);this.add(this.desc),this.desc.setMask(r),this.val=new Phaser.GameObjects.Container(A,s!=null&&s.right?n-Ei:0,s!=null&&s.top||s!=null&&s.onSide?0:NL),this.add(this.val);const S=_t(A,0,0,Ei,js);S.setOrigin(0,0),this.val.add(S),this.typ=this.scene.add.sprite(25,js-35,HR("types"),"unknown"),this.typ.setScale(.8),this.val.add(this.typ),this.cat=this.scene.add.sprite(57,js-35,"categories","physical"),this.val.add(this.cat);const o=le(A,12,js-25,"PP",X.MOVE_INFO_CONTENT);o.setOrigin(0,.5),o.setText(D.t("fightUiHandler:pp")),this.val.add(o),this.pp=le(A,70,js-25,"--",X.MOVE_INFO_CONTENT),this.pp.setOrigin(1,.5),this.val.add(this.pp);const l=le(A,12,js-17,"POWER",X.MOVE_INFO_CONTENT);l.setOrigin(0,.5),l.setText(D.t("fightUiHandler:power")),this.val.add(l),this.pow=le(A,70,js-17,"---",X.MOVE_INFO_CONTENT),this.pow.setOrigin(1,.5),this.val.add(this.pow);const C=le(A,12,js-9,"ACC",X.MOVE_INFO_CONTENT);C.setOrigin(0,.5),C.setText(D.t("fightUiHandler:accuracy")),this.val.add(C),this.acc=le(A,70,js-9,"---",X.MOVE_INFO_CONTENT),this.acc.setOrigin(1,.5),this.val.add(this.acc),s!=null&&s.hideEffectBox&&this.val.setVisible(!1),s!=null&&s.hideBg&&this.descBg.setVisible(!1),this.setVisible(!1)}show(A){var R;if(!this.scene.enableMoveInfo)return!1;this.move=A,this.pow.setText(A.power>=0?A.power.toString():"---"),this.acc.setText(A.accuracy>=0?A.accuracy.toString():"---"),this.pp.setText(A.pp>=0?A.pp.toString():"---"),this.typ.setTexture(HR("types"),i[A.type].toLowerCase()),this.cat.setFrame(Mt[A.category].toLowerCase()),this.desc.setText((A==null?void 0:A.effect)||""),this.descScroll&&(this.descScroll.remove(),this.descScroll=null,this.desc.y=((R=this.options)!=null&&R.top?js:0)+si-2);const s=Math.floor(this.desc.displayHeight*(96/72)/14.83);return s>3&&(this.descScroll=this.scene.tweens.add({targets:this.desc,delay:Et(2e3),loop:-1,hold:Et(2e3),duration:Et((s-3)*2e3),y:`-=${14.83*(72/96)*(s-3)}`})),this.options.delayVisibility||this.setVisible(!0),this.active=!0,!0}clear(){this.setVisible(!1),this.active=!1}toggleInfo(A){A&&this.setVisible(!0),this.scene.tweens.add({targets:this.desc,duration:Et(125),ease:"Sine.easeInOut",alpha:A?1:0}),A||this.setVisible(!1)}isActive(){return this.active}static getWidth(A,s){return s.game.canvas.width/ko/2}static getHeight(A,s){return(s?Math.max(js,NL):js+NL)*A}};L(dD,"MoveInfoOverlay");let SO=dD;const ri=7,jM=12,eh=24,Mn=-62,ag=class ag extends xn{constructor(A){super(A,Oe.CONFIRM),this.moveInfoOverlayActive=!1,this.rowCursor=0,this.options=[],this.shopOptionsRows=[]}setup(){const A=this.getUi();this.modifierContainer=this.scene.add.container(0,0),A.add(this.modifierContainer);const R=document.createElement("canvas").getContext("2d"),n=un(X.PARTY,this.scene.uiTheme).styleOptions;R&&(R.font=n.fontSize+"px "+n.fontFamily,this.transferButtonWidth=R.measureText(D.t("modifierSelectUiHandler:transfer")).width,this.checkButtonWidth=R.measureText(D.t("modifierSelectUiHandler:checkTeam")).width),this.transferButtonContainer=this.scene.add.container((this.scene.game.canvas.width-this.checkButtonWidth)/6-21,Mn),this.transferButtonContainer.setName("transfer-btn"),this.transferButtonContainer.setVisible(!1),A.add(this.transferButtonContainer);const I=le(this.scene,-4,-2,D.t("modifierSelectUiHandler:transfer"),X.PARTY);I.setName("text-transfer-btn"),I.setOrigin(1,0),this.transferButtonContainer.add(I),this.checkButtonContainer=this.scene.add.container(this.scene.game.canvas.width/6-1,Mn),this.checkButtonContainer.setName("use-btn"),this.checkButtonContainer.setVisible(!1),A.add(this.checkButtonContainer);const a=le(this.scene,-4,-2,D.t("modifierSelectUiHandler:checkTeam"),X.PARTY);a.setName("text-use-btn"),a.setOrigin(1,0),this.checkButtonContainer.add(a),this.rerollButtonContainer=this.scene.add.container(16,Mn),this.rerollButtonContainer.setName("reroll-brn"),this.rerollButtonContainer.setVisible(!1),A.add(this.rerollButtonContainer);const r=le(this.scene,-4,-2,D.t("modifierSelectUiHandler:reroll"),X.PARTY);r.setName("text-reroll-btn"),r.setOrigin(0,0),this.rerollButtonContainer.add(r),this.rerollCostText=le(this.scene,0,0,"",X.MONEY),this.rerollCostText.setName("text-reroll-cost"),this.rerollCostText.setOrigin(0,0),this.rerollCostText.setPositionRelative(r,r.displayWidth+5,1),this.rerollButtonContainer.add(this.rerollCostText),this.lockRarityButtonContainer=this.scene.add.container(16,Mn),this.lockRarityButtonContainer.setVisible(!1),A.add(this.lockRarityButtonContainer),this.lockRarityButtonText=le(this.scene,-4,-2,D.t("modifierSelectUiHandler:lockRarities"),X.PARTY),this.lockRarityButtonText.setOrigin(0,0),this.lockRarityButtonContainer.add(this.lockRarityButtonText),this.continueButtonContainer=this.scene.add.container(this.scene.game.canvas.width/12,-(this.scene.game.canvas.height/12)),this.continueButtonContainer.setVisible(!1),A.add(this.continueButtonContainer);const S=le(this.scene,-24,5,D.t("modifierSelectUiHandler:continueNextWaveButton"),X.MESSAGE);S.setName("text-continue-btn"),this.continueButtonContainer.add(S);const o=1;this.moveInfoOverlay=new SO(this.scene,{delayVisibility:!0,scale:o,onSide:!0,right:!0,x:1,y:-SO.getHeight(o,!0)-1,width:this.scene.game.canvas.width/6-2}),A.add(this.moveInfoOverlay),this.scene.addInfoToggle(this.moveInfoOverlay)}show(A){if(this.scene.disableMenu=!1,this.active)return A.length>=3&&(this.awaitingActionInput=!0,this.onActionInput=A[2]),this.moveInfoOverlay.active=this.moveInfoOverlayActive,!1;if(A.length!==4||!(A[1]instanceof Array)||!(A[2]instanceof Function))return!1;super.show(A),this.getUi().clearText(),this.player=A[0];const s=this.player&&!!this.scene.findModifiers(M=>M instanceof Ht&&M.isTransferable).length,R=!!this.scene.findModifier(M=>M instanceof Co);this.transferButtonContainer.setVisible(!1),this.transferButtonContainer.setAlpha(0),this.checkButtonContainer.setVisible(!1),this.checkButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!1),this.rerollButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setVisible(!1),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setVisible(!1),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setPositionRelative(this.lockRarityButtonContainer,0,R?-12:0),this.rerollCost=A[3],this.updateRerollCostText();const n=A[1],I=this.scene.gameMode.hasNoShop,a=new ZE(this.scene.getWaveMoneyAmount(1));this.scene.applyModifier(AI,!0,a);const r=I?[]:R6(this.scene.currentBattle.waveIndex,a.value),S=r.length>ri?-jM:-eh;for(let M=0;M<n.length;M++){const u=this.scene.game.canvas.width/6/(n.length+2),h=new EC(this.scene,u*(M+1)+u*.5,-this.scene.game.canvas.height/12+S,n[M]);h.setScale(.5),this.scene.add.existing(h),this.modifierContainer.add(h),this.options.push(h)}const o=this.continueButtonContainer.getAt(0);o.y=S-5,o.setVisible(this.options.length===0);for(let M=0;M<r.length;M++){const u=M<ri?0:1,h=M<ri?M:M-ri,P=r.slice(u?ri:0,u?void 0:ri),G=this.scene.game.canvas.width/6/(P.length+2),d=new EC(this.scene,G*(h+1)+G*.5,-this.scene.game.canvas.height/12-this.scene.game.canvas.height/32-(42-(28*u-1)),r[M]);d.setScale(.375),this.scene.add.existing(d),this.modifierContainer.add(d),u>=this.shopOptionsRows.length&&this.shopOptionsRows.push([]),this.shopOptionsRows[u].push(d)}const l=n.map(M=>M.upgradeCount).reduce((M,u)=>Math.max(u,M),0);this.scene.getModifierBar().updateModifiers(this.scene.modifiers,!0),this.scene.showShopOverlay(750*this.scene.gameSpeed),this.scene.updateAndShowText(750),this.scene.updateBiomeWaveText(),this.scene.updateMoneyText();let C=0;return this.scene.tweens.addCounter({ease:"Sine.easeIn",duration:1250,onUpdate:L(M=>{const u=M.getValue(),h=Math.floor(u*n.length);if(h>C&&h<=n.length){const P=this.options[C];P==null||P.show(Math.floor((1-u)*1250)*.325+2e3*l,-(l-n[C].upgradeCount)),C++}},"onUpdate")}),this.scene.time.delayedCall(1e3+l*2e3,()=>{for(const M of this.shopOptionsRows.flat())M.show(0,0)}),this.scene.time.delayedCall(4e3+l*2e3,()=>{s&&(this.transferButtonContainer.setAlpha(0),this.transferButtonContainer.setVisible(!0),this.scene.tweens.add({targets:this.transferButtonContainer,alpha:1,duration:250})),this.rerollButtonContainer.setAlpha(0),this.checkButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!0),this.checkButtonContainer.setVisible(!0),this.continueButtonContainer.setVisible(this.rerollCost<0),this.lockRarityButtonContainer.setVisible(R),this.scene.tweens.add({targets:[this.checkButtonContainer,this.continueButtonContainer],alpha:1,duration:250}),this.scene.tweens.add({targets:[this.rerollButtonContainer,this.lockRarityButtonContainer],alpha:this.rerollCost<0?.5:1,duration:250});const M=L(()=>{this.scene.shopCursorTarget===Fn.CHECK_TEAM?(this.setRowCursor(0),this.setCursor(2)):this.scene.shopCursorTarget===Fn.SHOP&&this.scene.gameMode.hasNoShop?(this.setRowCursor(Fn.REWARDS),this.setCursor(0)):(this.setRowCursor(this.scene.shopCursorTarget),this.setCursor(0))},"updateCursorTarget");M(),Wi(this.scene,JR.Select_Item).then(u=>{u&&M(),this.awaitingActionInput=!0,this.onActionInput=A[2]})}),!0}processInput(A){const s=this.getUi();if(!this.awaitingActionInput)return!1;let R=!1;if(A===b.ACTION){if(R=!0,this.onActionInput){const n=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,n(this.rowCursor,this.cursor)?(this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1):(this.awaitingActionInput=!0,this.onActionInput=n)}}else if(A===b.CANCEL){if(this.player&&(R=!0,this.onActionInput)){const n=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,n(-1),this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1}}else switch(A){case b.UP:this.rowCursor===0&&this.cursor===3?R=this.setCursor(0):this.rowCursor<this.shopOptionsRows.length+1&&(R=this.setRowCursor(this.rowCursor+1));break;case b.DOWN:this.rowCursor?R=this.setRowCursor(this.rowCursor-1):this.lockRarityButtonContainer.visible&&this.cursor===0&&(R=this.setCursor(3));break;case b.LEFT:if(this.rowCursor)this.cursor?R=this.setCursor(this.cursor-1):this.rowCursor===1&&this.rerollButtonContainer.visible&&(R=this.setRowCursor(0));else switch(this.cursor){case 0:R=!1;break;case 1:this.lockRarityButtonContainer.visible?R=this.setCursor(3):R=this.rerollButtonContainer.visible&&this.setCursor(0);break;case 2:this.transferButtonContainer.visible?R=this.setCursor(1):this.rerollButtonContainer.visible?R=this.setCursor(0):R=!1;break}break;case b.RIGHT:if(this.rowCursor)this.cursor<this.getRowItems(this.rowCursor)-1?R=this.setCursor(this.cursor+1):this.rowCursor===1&&this.transferButtonContainer.visible&&(R=this.setRowCursor(0));else switch(this.cursor){case 0:this.transferButtonContainer.visible?R=this.setCursor(1):R=this.setCursor(2);break;case 1:R=this.setCursor(2);break;case 2:R=!1;break;case 3:this.transferButtonContainer.visible?R=this.setCursor(1):R=this.setCursor(2);break}break}return R&&s.playSelect(),R}setCursor(A){const s=this.getUi(),R=super.setCursor(A);this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.modifierContainer.add(this.cursorObj));const n=this.rowCursor===1?this.options:this.shopOptionsRows[this.shopOptionsRows.length-(this.rowCursor-1)];if(this.cursorObj.setScale(this.rowCursor===1?2:this.rowCursor>=2?1.5:1),this.moveInfoOverlay.clear(),this.rowCursor){if(this.rowCursor===1&&n.length===0)return this.cursorObj.setScale(1.25),this.cursorObj.setPosition(this.scene.game.canvas.width/18+23,-this.scene.game.canvas.height/12-(this.shopOptionsRows.length>1?jM-2:eh-2)),s.showText(D.t("modifierSelectUiHandler:continueNextWaveDescription")),R;const I=this.scene.game.canvas.width/6/(n.length+2);this.rowCursor<2?this.cursorObj.setPosition(I*(A+1)+I*.5-20,-this.scene.game.canvas.height/12-(this.shopOptionsRows.length>1?jM-2:eh-2)):this.cursorObj.setPosition(I*(A+1)+I*.5-16,-this.scene.game.canvas.height/12-this.scene.game.canvas.height/32-(-14+28*(this.rowCursor-(this.shopOptionsRows.length-1))));const a=n[this.cursor].modifierTypeOption.type;a&&s.showText(a.getDescription(this.scene)),a instanceof kI&&this.moveInfoOverlay.show(ye[a.moveId])}else A===0?(this.cursorObj.setPosition(6,this.lockRarityButtonContainer.visible?Mn-8:Mn+4),s.showText(D.t("modifierSelectUiHandler:rerollDesc"))):A===1?(this.cursorObj.setPosition((this.scene.game.canvas.width-this.transferButtonWidth-this.checkButtonWidth)/6-30,Mn+4),s.showText(D.t("modifierSelectUiHandler:transferDesc"))):A===2?(this.cursorObj.setPosition((this.scene.game.canvas.width-this.checkButtonWidth)/6-10,Mn+4),s.showText(D.t("modifierSelectUiHandler:checkTeamDesc"))):(this.cursorObj.setPosition(6,Mn+4),s.showText(D.t("modifierSelectUiHandler:lockRaritiesDesc")));return R}setRowCursor(A){const s=this.rowCursor;if(A!==s){this.rowCursor=A;let R=Math.round(this.cursor/Math.max(this.getRowItems(s)-1,1)*(this.getRowItems(A)-1));return A===1&&this.options.length===0&&(R=0),A===0&&(this.options.length===0&&(R=1),R===0&&!this.rerollButtonContainer.visible&&(R=1),R===1&&!this.transferButtonContainer.visible&&(R=2)),this.cursor=-1,this.setCursor(R),!0}return!1}getRowItems(A){switch(A){case 0:return 3;case 1:return this.options.length;default:return this.shopOptionsRows[this.shopOptionsRows.length-(A-1)].length}}setRerollCost(A){this.rerollCost=A}updateCostText(){const A=this.shopOptionsRows.flat();for(const s of A)s.updateCostText();this.updateRerollCostText()}updateRerollCostText(){if(this.rerollCost<0){this.rerollCostText.setVisible(!1);return}else this.rerollCostText.setVisible(!0);const s=this.scene.money>=this.rerollCost,R=Go(this.scene.moneyFormat,this.rerollCost);this.rerollCostText.setText(D.t("modifierSelectUiHandler:rerollCost",{formattedMoney:R})),this.rerollCostText.setColor(this.getTextColor(s?X.MONEY:X.PARTY_RED)),this.rerollCostText.setShadowColor(this.getTextColor(s?X.MONEY:X.PARTY_RED,!0))}updateLockRaritiesText(){const A=this.scene.lockModifierTiers?X.SUMMARY_BLUE:X.PARTY;this.lockRarityButtonText.setColor(this.getTextColor(A)),this.lockRarityButtonText.setShadowColor(this.getTextColor(A,!0))}clear(){super.clear(),this.moveInfoOverlay.clear(),this.moveInfoOverlayActive=!1,this.awaitingActionInput=!1,this.onActionInput=null,this.getUi().clearText(),this.eraseCursor(),this.cursor=0,this.rowCursor=0,this.scene.hideShopOverlay(750*this.scene.gameSpeed),this.scene.hideLuckText(250),this.scene.getModifierBar().updateModifiers(this.scene.modifiers);const A=this.options.concat(this.shopOptionsRows.flat());this.options.splice(0,this.options.length),this.shopOptionsRows.splice(0,this.shopOptionsRows.length),this.scene.tweens.add({targets:A,scale:.01,duration:250,ease:"Cubic.easeIn",onComplete:L(()=>A.forEach(s=>s.destroy()),"onComplete")}),[this.rerollButtonContainer,this.checkButtonContainer,this.transferButtonContainer,this.lockRarityButtonContainer,this.continueButtonContainer].forEach(s=>{s.visible&&this.scene.tweens.add({targets:s,alpha:0,duration:250,ease:"Cubic.easeIn",onComplete:L(()=>{this.options.length?s.setAlpha(1):s.setVisible(!1)},"onComplete")})})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(ag,"ModifierSelectUiHandler");let Wc=ag;const rg=class rg extends EE.GameObjects.Container{constructor(A,s,R,n){super(A,s,R),this.modifierTypeOption=n,this.setup()}setup(){var s,R,n;if(!this.modifierTypeOption.cost){const I=L(()=>{const a=this.scene.add.sprite(0,-182,"pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount));return a.setScale(2),a},"getPb");this.pb=I(),this.add(this.pb),this.pbTint=I(),this.pbTint.setVisible(!1),this.add(this.pbTint)}this.itemContainer=this.scene.add.container(0,0),this.itemContainer.setScale(.5),this.itemContainer.setAlpha(0),this.add(this.itemContainer);const A=L(()=>{var a;return this.scene.add.sprite(0,0,"items",(a=this.modifierTypeOption.type)==null?void 0:a.iconImage)},"getItem");this.item=A(),this.itemContainer.add(this.item),this.modifierTypeOption.cost||(this.itemTint=A(),this.itemTint.setTintFill(EE.Display.Color.GetColor(255,192,255)),this.itemContainer.add(this.itemTint)),this.itemText=le(this.scene,0,35,(s=this.modifierTypeOption.type)==null?void 0:s.name,X.PARTY,{align:"center"}),this.itemText.setOrigin(.5,0),this.itemText.setAlpha(0),this.itemText.setTint((R=this.modifierTypeOption.type)!=null&&R.tier?Fa((n=this.modifierTypeOption.type)==null?void 0:n.tier):void 0),this.add(this.itemText),this.modifierTypeOption.cost&&(this.itemCostText=le(this.scene,0,45,"",X.MONEY,{align:"center"}),this.itemCostText.setOrigin(.5,0),this.itemCostText.setAlpha(0),this.add(this.itemCostText),this.updateCostText())}show(A,s){if(!this.modifierTypeOption.cost){this.scene.tweens.add({targets:this.pb,y:0,duration:1250,ease:"Bounce.Out"});let R=1,n=0,I=!1;this.scene.tweens.addCounter({from:1,to:0,duration:1250,ease:"Bounce.Out",onUpdate:L(a=>{if(!this.scene)return;const r=a.getValue();!I&&r>R?(this.scene.playSound("se/pb_bounce_1",{volume:1/++n}),I=!0):I&&r<R&&(I=!1),R=r},"onUpdate")});for(let a=0;a<this.modifierTypeOption.upgradeCount;a++){const r=a;this.scene.time.delayedCall(A-2e3*(this.modifierTypeOption.upgradeCount-(r+1+s)),()=>{this.scene.playSound("se/upgrade",{rate:1+.25*r}),this.pbTint.setPosition(this.pb.x,this.pb.y),this.pbTint.setTintFill(16777215),this.pbTint.setAlpha(0),this.pbTint.setVisible(!0),this.scene.tweens.add({targets:this.pbTint,alpha:1,duration:1e3,ease:"Sine.easeIn",onComplete:L(()=>{this.pb.setTexture("pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount+(r+1))),this.scene.tweens.add({targets:this.pbTint,alpha:0,duration:750,ease:"Sine.easeOut",onComplete:L(()=>{this.pbTint.setVisible(!1)},"onComplete")})},"onComplete")})})}}this.scene.time.delayedCall(A+2e3,()=>{this.scene&&(this.modifierTypeOption.cost||(this.pb.setTexture("pb",`${this.getPbAtlasKey(0)}_open`),this.scene.playSound("se/pb_rel"),this.scene.tweens.add({targets:this.pb,duration:500,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:L(()=>this.pb.destroy(),"onComplete")})),this.scene.tweens.add({targets:this.itemContainer,duration:500,ease:"Elastic.Out",scale:2,alpha:1}),this.modifierTypeOption.cost||this.scene.tweens.add({targets:this.itemTint,alpha:0,duration:500,ease:"Sine.easeIn",onComplete:L(()=>this.itemTint.destroy(),"onComplete")}),this.scene.tweens.add({targets:this.itemText,duration:500,alpha:1,y:25,ease:"Cubic.easeInOut"}),this.itemCostText&&this.scene.tweens.add({targets:this.itemCostText,duration:500,alpha:1,y:35,ease:"Cubic.easeInOut"}))})}getPbAtlasKey(A=0){var s;return TO(((s=this.modifierTypeOption.type)==null?void 0:s.tier)+A)}updateCostText(){const A=this.scene,s=Ye.WAIVE_ROLL_FEE_OVERRIDE?0:this.modifierTypeOption.cost,R=s<=A.money?X.MONEY:X.PARTY_RED,n=Go(A.moneyFormat,s);this.itemCostText.setText(D.t("modifierSelectUiHandler:itemCost",{formattedMoney:n})),this.itemCostText.setColor(IA(R,!1,A.uiTheme)),this.itemCostText.setShadowColor(IA(R,!0,A.uiTheme))}};L(rg,"ModifierOption");let EC=rg;const aN=class aN extends GE{constructor(A,s=0,R,n,I=!1){super(A),this.rerollCount=s,this.modifierTiers=R,this.customModifierSettings=n,this.isCopy=I}start(){var n,I,a;super.start(),!this.rerollCount&&!this.isCopy?this.updateSeed():this.rerollCount&&(this.scene.reroll=!1);const A=this.scene.getPlayerParty();this.isCopy||sI(A,this.getPoolType(),this.rerollCount);const s=new ZE(3);if(this.isPlayer()&&(this.scene.applyModifiers(qn,!0,s),this.scene.applyModifiers(jn,!0,s)),this.customModifierSettings){const r=(((n=this.customModifierSettings.guaranteedModifierTiers)==null?void 0:n.length)||0)+(((I=this.customModifierSettings.guaranteedModifierTypeOptions)==null?void 0:I.length)||0)+(((a=this.customModifierSettings.guaranteedModifierTypeFuncs)==null?void 0:a.length)||0);if(this.customModifierSettings.fillRemaining){const S=s.value;s.value=S>r?S:r}else s.value=r}this.typeOptions=this.getModifierTypeOptions(s.value);const R=L((r,S)=>{if(r<0||S<0)return this.scene.ui.showText(D.t("battle:skipItemQuestion"),null,()=>{this.scene.ui.setOverlayMode(Oe.CONFIRM,()=>{this.scene.ui.revertMode(),this.scene.ui.setMode(Oe.MESSAGE),super.end()},()=>this.scene.ui.setMode(Oe.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers)))}),!1;let o,l;const C=this.getRerollCost(this.scene.lockModifierTiers);switch(r){case 0:switch(S){case 0:if(C<0||this.scene.money<C)return this.scene.ui.playError(),!1;this.scene.reroll=!0,this.scene.unshiftPhase(new aN(this.scene,this.rerollCount+1,this.typeOptions.map(d=>{var H;return(H=d.type)==null?void 0:H.tier}).filter(d=>d!==void 0))),this.scene.ui.clearText(),this.scene.ui.setMode(Oe.MESSAGE).then(()=>super.end()),Ye.WAIVE_ROLL_FEE_OVERRIDE||(this.scene.money-=C,this.scene.updateMoneyText(),this.scene.animateMoneyChanged(!1)),this.scene.playSound("se/buy");break;case 1:this.scene.ui.setModeWithoutClear(Oe.PARTY,us.MODIFIER_TRANSFER,-1,(d,H,f,K)=>{if(K!==void 0&&d<6&&K<6&&d!==K&&H>-1){const V=this.scene.findModifiers(k=>k instanceof Ht&&k.isTransferable&&k.pokemonId===A[d].id)[H];this.scene.tryTransferHeldItemModifier(V,A[K],!0,f,void 0,void 0,!1)}else this.scene.ui.setMode(Oe.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))},vE.FilterItemMaxStacks);break;case 2:this.scene.ui.setModeWithoutClear(Oe.PARTY,us.CHECK,-1,()=>{this.scene.ui.setMode(Oe.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))});break;case 3:if(C<0)return this.scene.ui.playError(),!1;this.scene.lockModifierTiers=!this.scene.lockModifierTiers;const G=this.scene.ui.getHandler();return G.setRerollCost(this.getRerollCost(this.scene.lockModifierTiers)),G.updateLockRaritiesText(),G.updateRerollCostText(),!1}return!0;case 1:if(this.typeOptions.length===0)return this.scene.ui.clearText(),this.scene.ui.setMode(Oe.MESSAGE),super.end(),!0;this.typeOptions[S].type&&(o=this.typeOptions[S].type);break;default:const u=R6(this.scene.currentBattle.waveIndex,this.scene.getWaveMoneyAmount(1)),h=u[r>2||u.length<=ri?S:S+ri];h.type&&(o=h.type);const P=new Rt(h.cost);this.scene.applyModifier(AI,!0,P),l=P.value;break}if(l&&this.scene.money<l&&!Ye.WAIVE_ROLL_FEE_OVERRIDE)return this.scene.ui.playError(),!1;const M=L((u,h=!1)=>{const P=this.scene.addModifier(u,!1,h,void 0,void 0,l);if((u.type instanceof Ar||u.type instanceof kI)&&this.scene.unshiftPhase(this.copy()),l&&!(u.type instanceof Ar))P.then(G=>{G?(Ye.WAIVE_ROLL_FEE_OVERRIDE||(this.scene.money-=l,this.scene.updateMoneyText(),this.scene.animateMoneyChanged(!1)),this.scene.playSound("se/buy"),this.scene.ui.getHandler().updateCostText()):this.scene.ui.playError()});else{const G=L(()=>{this.scene.ui.clearText(),this.scene.ui.setMode(Oe.MESSAGE),super.end()},"doEnd");P instanceof Promise?P.then(()=>G()):G()}},"applyModifier");if(o instanceof LR)if(o instanceof xl)this.scene.ui.setModeWithoutClear(Oe.PARTY,us.SPLICE,-1,(u,h)=>{h!==void 0&&u<6&&h<6&&u!==h?this.scene.ui.setMode(Oe.MODIFIER_SELECT,this.isPlayer()).then(()=>{const P=o.newModifier(A[u],A[h]);M(P,!0)}):this.scene.ui.setMode(Oe.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))},o.selectFilter);else{const u=o,h=o instanceof ur,P=o instanceof kI,G=o instanceof Ar,d=o instanceof fT||o instanceof BT,H=h?us.MOVE_MODIFIER:P?us.TM_MODIFIER:G?us.REMEMBER_MOVE_MODIFIER:us.MODIFIER,f=P?o.moveId:void 0;this.scene.ui.setModeWithoutClear(Oe.PARTY,H,-1,(K,W)=>{K<6?this.scene.ui.setMode(Oe.MODIFIER_SELECT,this.isPlayer()).then(()=>{const V=h?o.newModifier(A[K],W-tS.MOVE_1):G?o.newModifier(A[K],W):o.newModifier(A[K]);M(V,!0)}):this.scene.ui.setMode(Oe.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))},u.selectFilter,o instanceof ur?o.moveSelectFilter:void 0,f,d)}else M(o.newModifier());return!l},"modifierSelectCallback");this.scene.ui.setMode(Oe.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(this.scene.lockModifierTiers))}updateSeed(){this.scene.resetSeed()}isPlayer(){return!0}getRerollCost(A){var a;let s=0;if(Ye.WAIVE_ROLL_FEE_OVERRIDE)return s;if(A){const r=[50,125,300,750,2e3];for(const S of this.typeOptions)s+=r[S.type.tier??0]}else s=250;let R=1;if(!Ve((a=this.customModifierSettings)==null?void 0:a.rerollMultiplier)){if(this.customModifierSettings.rerollMultiplier<0)return-1;R=this.customModifierSettings.rerollMultiplier}const n=Math.min(Math.ceil(this.scene.currentBattle.waveIndex/10)*s*2**this.rerollCount*R,Number.MAX_SAFE_INTEGER),I=new Rt(n);return this.scene.applyModifier(AI,!0,I),I.value}getPoolType(){return PE.PLAYER}getModifierTypeOptions(A){return R1(A,this.scene.getPlayerParty(),this.scene.lockModifierTiers?this.modifierTiers:void 0,this.customModifierSettings)}copy(){var A;return new aN(this.scene,this.rerollCount,this.modifierTiers,{guaranteedModifierTypeOptions:this.typeOptions,rerollMultiplier:(A=this.customModifierSettings)==null?void 0:A.rerollMultiplier,allowLuckUpgrades:!1},!0)}addModifier(A){return this.scene.addModifier(A,!1,!0)}};L(aN,"SelectModifierPhase");let oO=aN;const Lg=class Lg extends GE{constructor(A,s){super(A),this.double=s}start(){super.start();const A=this.scene.getPlayerField().find(s=>s.isActive(!0));A?A.setFieldPosition(this.double&&this.scene.getPokemonAllowedInBattle().length>1?nR.LEFT:nR.CENTER,500).then(()=>{if(A.getFieldIndex()===1){const s=this.scene.getPlayerParty();s[1]=s[0],s[0]=A}this.end()}):this.end()}};L(Lg,"ToggleDoublePositionPhase");let lO=Lg;const Ng=class Ng extends iE{constructor(A,s){super(A),this.FIRST_DIALOGUE_PROMPT_DELAY=300,this.optionSelectSettings=s}start(){super.start(),this.scene.clearPhaseQueue(),this.scene.clearPhaseQueueSplice();const A=this.scene.currentBattle.mysteryEncounter;A.updateSeedOffset(this.scene),this.optionSelectSettings||this.scene.mysteryEncounterSaveData.encounteredEvents.push(new r0(A.encounterType,A.encounterTier,this.scene.currentBattle.waveIndex)),this.scene.ui.setMode(Oe.MYSTERY_ENCOUNTER,this.optionSelectSettings)}handleOptionSelect(A,s){var R,n;if(this.scene.currentBattle.mysteryEncounter.selectedOption=A,!this.optionSelectSettings){const I=this.scene.mysteryEncounterSaveData.encounteredEvents[this.scene.mysteryEncounterSaveData.encounteredEvents.length-1];I.type===((R=this.scene.currentBattle.mysteryEncounter)==null?void 0:R.encounterType)&&(I.selectedOption=s)}return A.onOptionPhase?(this.scene.currentBattle.mysteryEncounter.populateDialogueTokensFromRequirements(this.scene),A.onPreOptionPhase?this.scene.executeWithSeedOffset(async()=>await A.onPreOptionPhase(this.scene).then(I=>{(Ve(I)||I)&&this.continueEncounter()}),(n=this.scene.currentBattle.mysteryEncounter)==null?void 0:n.getSeedOffset()):this.continueEncounter(),!0):!1}continueEncounter(){var R,n,I;const A=L(()=>{this.scene.pushPhase(new Yc(this.scene)),this.end()},"endDialogueAndContinueEncounter"),s=(I=(n=(R=this.scene.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:n.selectedOption)==null?void 0:I.dialogue;if(s!=null&&s.selected&&s.selected.length>0){this.scene.ui.setMode(Oe.MESSAGE);const a=s.selected;let r=0;const S=L(()=>{const o=r===a.length-1?A:S,l=a[r];let C=null;const M=mA(this.scene,l.text);l.speaker&&(C=mA(this.scene,l.speaker)),r++,C?this.scene.ui.showDialogue(M??"",C,null,o,0,r===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):this.scene.ui.showText(M??"",null,o,r===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");S()}else A()}end(){this.scene.ui.setMode(Oe.MESSAGE).then(()=>super.end())}};L(Ng,"MysteryEncounterPhase");let sC=Ng;const Tg=class Tg extends iE{constructor(A){super(A),this.onOptionSelect=this.scene.currentBattle.mysteryEncounter.selectedOption.onOptionPhase}start(){var A,s;super.start(),(A=this.scene.currentBattle.mysteryEncounter)!=null&&A.autoHideIntroVisuals?XA(this.scene).then(()=>{var R;this.scene.executeWithSeedOffset(()=>{this.onOptionSelect(this.scene).finally(()=>{this.end()})},((R=this.scene.currentBattle.mysteryEncounter)==null?void 0:R.getSeedOffset())*500)}):this.scene.executeWithSeedOffset(()=>{this.onOptionSelect(this.scene).finally(()=>{this.end()})},((s=this.scene.currentBattle.mysteryEncounter)==null?void 0:s.getSeedOffset())*500)}};L(Tg,"MysteryEncounterOptionSelectedPhase");let Yc=Tg;const Sg=class Sg extends iE{constructor(A){super(A)}start(){super.start();const A=[Y.FLINCHED,Y.ENDURING];for(this.scene.getField(!0).filter(a=>a.summonData).forEach(a=>{const r=a.summonData.tags;r.filter(S=>A.includes(S.tagType)&&S.lapseTypes.includes(QE.TURN_END)&&!S.lapse(a,QE.TURN_END)).forEach(S=>{S.onRemove(a),r.splice(r.indexOf(S),1)})});this.scene.findPhase(a=>a instanceof xT);)this.scene.tryRemovePhase(a=>a instanceof xT);const R=this.scene.getPokemonAllowedInBattle(),n=R.filter(a=>!a.isActive(!0));if(!R.length)return this.scene.unshiftPhase(new CO(this.scene)),this.end();this.scene.getPlayerField().forEach((a,r)=>{!a.isAllowedInBattle()&&n.length>r&&this.scene.unshiftPhase(new Yi(this.scene,aA.SWITCH,r,!0,!1))}),this.scene.currentBattle.double&&R.length===1&&n.length===0&&this.scene.unshiftPhase(new lO(this.scene,!0)),this.end()}};L(Sg,"MysteryEncounterBattleStartCleanupPhase");let yc=Sg;const og=class og extends iE{constructor(A,s=!1){super(A),this.disableSwitch=s}start(){super.start(),this.doMysteryEncounterBattle(this.scene)}getBattleMessage(A){var n,I;const s=A.getEnemyField(),R=A.currentBattle.mysteryEncounter.encounterMode;return A.currentBattle.battleSpec===TE.FINAL_BOSS?D.t("battle:bossAppeared",{bossName:s[0].name}):R===oE.TRAINER_BATTLE?A.currentBattle.double?D.t("battle:trainerAppearedDouble",{trainerName:(n=A.currentBattle.trainer)==null?void 0:n.getName(Tt.NONE,!0)}):D.t("battle:trainerAppeared",{trainerName:(I=A.currentBattle.trainer)==null?void 0:I.getName(Tt.NONE,!0)}):s.length===1?D.t("battle:singleWildAppeared",{pokemonName:s[0].name}):D.t("battle:multiWildAppeared",{pokemonName1:s[0].name,pokemonName2:s[1].name})}doMysteryEncounterBattle(A){var R,n,I,a;const s=A.currentBattle.mysteryEncounter.encounterMode;if(s===oE.WILD_BATTLE||s===oE.BOSS_BATTLE){s===oE.BOSS_BATTLE&&A.playBgm(void 0);const r=A.getEnemyParty().filter(S=>!S.isFainted()).length;A.unshiftPhase(new XE(A,0,!1)),A.currentBattle.double&&r>1&&A.unshiftPhase(new XE(A,1,!1)),(R=A.currentBattle.mysteryEncounter)!=null&&R.hideBattleIntroMessage?this.endBattleSetup(A):A.ui.showText(this.getBattleMessage(A),null,()=>this.endBattleSetup(A),0)}else if(s===oE.TRAINER_BATTLE){this.showEnemyTrainer();const r=L(()=>{var l;A.currentBattle.started=!0,A.playBgm(void 0),A.pbTray.showPbTray(A.getPlayerParty()),A.pbTrayEnemy.showPbTray(A.getEnemyParty());const o=L(()=>{this.hideEnemyTrainer();const C=A.getEnemyParty().filter(M=>!M.isFainted()).length;A.unshiftPhase(new XE(A,0,!1)),A.currentBattle.double&&C>1&&A.unshiftPhase(new XE(A,1,!1)),this.endBattleSetup(A)},"doTrainerSummon");(l=A.currentBattle.mysteryEncounter)!=null&&l.hideBattleIntroMessage?o():A.ui.showText(this.getBattleMessage(A),null,o,1e3,!0)},"doSummon"),S=(n=A.currentBattle.trainer)==null?void 0:n.getEncounterMessages();if(!S||!S.length)r();else{const o=this.scene.currentBattle.trainer;let l;A.executeWithSeedOffset(()=>l=JA(S),(I=this.scene.currentBattle.mysteryEncounter)==null?void 0:I.getSeedOffset()),l=l;const C=L(()=>{A.ui.showDialogue(l,o==null?void 0:o.getName(Tt.NONE,!0),null,()=>{A.charSprite.hide().then(()=>A.hideFieldOverlay(250).then(()=>r()))})},"showDialogueAndSummon");(a=this.scene.currentBattle.trainer)!=null&&a.config.hasCharSprite&&!this.scene.ui.shouldSkipDialogue(l)?this.scene.showFieldOverlay(500).then(()=>this.scene.charSprite.showCharacter(o==null?void 0:o.getKey(),aM(S[0])).then(()=>C())):C()}}}endBattleSetup(A){const s=A.getEnemyField(),R=A.currentBattle.mysteryEncounter.encounterMode;if(R!==oE.TRAINER_BATTLE){const I=this.scene.findModifier(a=>a instanceof ua);I&&s.map(a=>this.scene.pushPhase(new bT(this.scene,a.getBattlerIndex(),Math.min(I.getStackCount()*2,6))))}const n=A.getPlayerParty().filter(I=>I.isAllowedInBattle());if(n[0].isOnField()||A.pushPhase(new XE(A,0)),A.currentBattle.double?n.length>1&&(A.pushPhase(new lO(A,!0)),n[1].isOnField()||A.pushPhase(new XE(A,1))):(n.length>1&&n[1].isOnField()&&(A.getPlayerField().forEach(I=>I.lapseTag(Y.COMMANDED)),A.pushPhase(new Mr(A,1))),A.pushPhase(new lO(A,!1))),R!==oE.TRAINER_BATTLE&&!this.disableSwitch){const I=A.currentBattle.double?2:1;n.length>I&&(A.pushPhase(new on(A,0,A.currentBattle.double)),A.currentBattle.double&&A.pushPhase(new on(A,1,A.currentBattle.double)))}this.end()}showEnemyTrainer(){const A=this.scene.currentBattle.trainer;A&&(A.alpha=0,A.x+=16,A.y-=16,A.setVisible(!0),this.scene.tweens.add({targets:A,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750,onComplete:L(()=>{A.untint(100,"Sine.easeOut"),A.playAnim()},"onComplete")}))}hideEnemyTrainer(){this.scene.tweens.add({targets:this.scene.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};L(og,"MysteryEncounterBattlePhase");let wc=og;const lg=class lg extends iE{constructor(A,s=!1){super(A),this.addHealPhase=s}start(){super.start();const A=this.scene.currentBattle.mysteryEncounter;A.doContinueEncounter?A.doContinueEncounter(this.scene).then(()=>{this.end()}):this.scene.executeWithSeedOffset(()=>{A.onRewards?A.onRewards(this.scene).then(()=>{this.doEncounterRewardsAndContinue()}):this.doEncounterRewardsAndContinue()},this.scene.currentBattle.waveIndex*1e3)}doEncounterRewardsAndContinue(){const A=this.scene.currentBattle.mysteryEncounter;A.doEncounterExp&&A.doEncounterExp(this.scene),A.doEncounterRewards?A.doEncounterRewards(this.scene):this.addHealPhase&&(this.scene.tryRemovePhase(s=>s instanceof oO),this.scene.unshiftPhase(new oO(this.scene,0,void 0,{fillRemaining:!1,rerollMultiplier:-1}))),this.scene.pushPhase(new vc(this.scene)),this.end()}};L(lg,"MysteryEncounterRewardsPhase");let kT=lg;const Cg=class Cg extends iE{constructor(A){var s,R;super(A),this.FIRST_DIALOGUE_PROMPT_DELAY=750,this.onPostOptionSelect=(R=(s=this.scene.currentBattle.mysteryEncounter)==null?void 0:s.selectedOption)==null?void 0:R.onPostOptionPhase}start(){var A;super.start(),this.onPostOptionSelect?this.scene.executeWithSeedOffset(async()=>await this.onPostOptionSelect(this.scene).then(s=>{(Ve(s)||s)&&this.continueEncounter()}),((A=this.scene.currentBattle.mysteryEncounter)==null?void 0:A.getSeedOffset())*2e3):this.continueEncounter()}continueEncounter(){var R,n,I;const A=L(()=>{this.scene.pushPhase(new JI(this.scene)),this.end()},"endPhase"),s=(I=(n=(R=this.scene.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:n.dialogue)==null?void 0:I.outro;if(s&&s.length>0){let a=0;const r=L(()=>{const S=a===s.length-1?A:r,o=s[a];let l=null;const C=mA(this.scene,o.text);o.speaker&&(l=mA(this.scene,o.speaker)),a++,this.scene.ui.setMode(Oe.MESSAGE),l?this.scene.ui.showDialogue(C??"",l,null,S,0,a===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):this.scene.ui.showText(C??"",null,S,a===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");r()}else A()}};L(Cg,"PostMysteryEncounterPhase");let vc=Cg;const Ug=class Ug extends as{constructor(A,s,R,n,I=!1){super(A,s),this.anim=n,this.targetIndex=R,this.playOnEmptyField=I}setAnimation(A){this.anim=A}start(){const A=this.targetIndex!==void 0?(this.player?this.scene.getEnemyField():this.scene.getPlayerField())[this.targetIndex]:this.getPokemon();new Qi(this.anim,this.getPokemon(),A).play(this.scene,!1,()=>{this.end()})}};L(Ug,"CommonAnimPhase");let Is=Ug;const ug=class ug extends as{constructor(A,s){super(A,s)}start(){super.start();const A=this.getPokemon();A.isActive(!0)&&A.lapseTags(QE.AFTER_MOVE),this.scene.arena.setIgnoreAbilities(!1),this.end()}};L(ug,"MoveEndPhase");let nO=ug;const Dg=class Dg extends as{constructor(A,s,R,n){super(A,s),this.move=n,this.targetIndex=R}start(){super.start();const A=this.getUserPokemon(),s=this.getTargetPokemon(),R=this.move.getMove();if(!s||!R.isChargingMove())return console.warn("Invalid parameters for MoveChargePhase"),super.end();new yS(R.chargeAnim,R.id,A).play(this.scene,!1,()=>{R.showChargeText(A,s),yb(Ut,A,s,R).then(()=>{A.addTag(Y.CHARGING,1,R.id,A.id),this.end()})})}end(){const A=this.getUserPokemon(),s=this.move.getMove();if(s.isChargingMove()){const R=new Lt(!1);yb(Pu,A,null,s,R),R.value?(this.scene.tryRemovePhase(n=>n instanceof nO&&n.getPokemon()===A),this.scene.unshiftPhase(new HA(this.scene,A,[this.targetIndex],this.move,!1))):A.getMoveQueue().push({move:s.id,targets:[this.targetIndex]}),A.pushMoveHistory({move:this.move.moveId,targets:[this.targetIndex],result:CA.OTHER})}super.end()}getUserPokemon(){return(this.player?this.scene.getPlayerField():this.scene.getEnemyField())[this.fieldIndex]}getTargetPokemon(){return this.scene.getField(!0).find(A=>this.targetIndex===A.getBattlerIndex())}};L(Dg,"MoveChargePhase");let Vc=Dg;const Mg=class Mg extends as{constructor(A,s,R=!1){super(A,s),this.passive=R}start(){super.start();const A=this.getPokemon();A&&(this.scene.abilityBar.showAbility(A,this.passive),A!=null&&A.battleData&&(A.battleData.abilityRevealed=!0)),this.end()}};L(Mg,"ShowAbilityPhase");let bn=Mg;const hg=class hg extends GE{constructor(A,s,R,n,I=!1,a=!1){super(A),this.failed=!1,this.cancelled=!1,this.pokemon=s,this.targets=R,this.move=n,this.followUp=I,this.ignorePp=a}get pokemon(){return this._pokemon}set pokemon(A){this._pokemon=A}get move(){return this._move}set move(A){this._move=A}get targets(){return this._targets}set targets(A){this._targets=A}canMove(A=!1){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon,this.ignorePp,A)&&!!this.targets.length}fail(){this.failed=!0}cancel(){this.cancelled=!0}start(){if(super.start(),console.log(t[this.move.moveId]),!this.canMove(!0))return this.pokemon.isActive(!0)&&(this.fail(),this.showMoveText(),this.showFailedText()),this.end();this.pokemon.turnData.acted=!0,this.followUp&&(this.pokemon.turnData.hitsLeft=-1,this.pokemon.turnData.hitCount=0),this.followUp||this.move.getMove().checkFlag(tA.IGNORE_ABILITIES,this.pokemon,null)&&this.scene.arena.setIgnoreAbilities(!0,this.pokemon.getBattlerIndex()),this.resolveRedirectTarget(),this.resolveCounterAttackTarget(),this.resolvePreMoveStatusEffects(),this.lapsePreMoveAndMoveTags(),this.failed||this.cancelled||this.resolveFinalPreMoveCancellationChecks(),this.cancelled||this.failed?this.handlePreMoveFailures():this.move.getMove().isChargingMove()&&!this.pokemon.getTag(Y.CHARGING)?this.chargeMove():this.useMove(),this.end()}resolveFinalPreMoveCancellationChecks(){const A=this.getActiveTargetPokemon(),s=this.pokemon.getMoveQueue();(A.length===0||s.length&&s[0].move===t.NONE)&&(this.showMoveText(),this.showFailedText(),this.cancel())}getActiveTargetPokemon(){return this.scene.getField(!0).filter(A=>this.targets.includes(A.getBattlerIndex()))}resolvePreMoveStatusEffects(){if(!this.followUp&&this.pokemon.status&&!this.pokemon.status.isPostTurn()){this.pokemon.status.incrementTurn();let A=!1,s=!1;switch(this.pokemon.status.effect){case Re.PARALYSIS:A=(!this.pokemon.randSeedInt(4)||Ye.STATUS_ACTIVATION_OVERRIDE===!0)&&Ye.STATUS_ACTIVATION_OVERRIDE!==!1;break;case Re.SLEEP:MA(VS,this.pokemon,null,this.move.getMove());const R=new Rt(this.pokemon.status.sleepTurnsRemaining??0);Ct(KU,this.pokemon,null,!1,this.pokemon.status.effect,R),this.pokemon.status.sleepTurnsRemaining=R.value,s=this.pokemon.status.sleepTurnsRemaining<=0,A=!s&&!this.pokemon.getTag(Y.BYPASS_SLEEP);break;case Re.FREEZE:s=!!this.move.getMove().findAttr(n=>n instanceof jA&&n.selfTarget&&n.isOfEffect(Re.FREEZE))||!this.pokemon.randSeedInt(5)&&Ye.STATUS_ACTIVATION_OVERRIDE!==!0||Ye.STATUS_ACTIVATION_OVERRIDE===!1,A=!s;break}A?(this.cancel(),this.scene.queueMessage(Zb(this.pokemon.status.effect,ee(this.pokemon))),this.scene.unshiftPhase(new Is(this.scene,this.pokemon.getBattlerIndex(),void 0,oA.POISON+(this.pokemon.status.effect-1)))):s&&(this.scene.queueMessage(EI(this.pokemon.status.effect,ee(this.pokemon))),this.pokemon.resetStatus(),this.pokemon.updateInfo())}}lapsePreMoveAndMoveTags(){this.pokemon.lapseTags(QE.PRE_MOVE),!this.followUp&&this.canMove()&&!this.cancelled&&this.pokemon.lapseTags(QE.MOVE)}useMove(){var o,l,C;const A=this.getActiveTargetPokemon(),s=this.pokemon.getMoveQueue();if(this.scene.triggerPokemonFormChange(this.pokemon,GT),this.move.getMove().hasAttr(Xn)){const M=this.scene.arena.findTags(G=>G.tagType===ge.FUTURE_SIGHT),u=this.scene.arena.findTags(G=>G.tagType===ge.DOOM_DESIRE);let h=!1;const P=A[0].getBattlerIndex();for(const G of M)if(G.targetIndex===P){h=!0;break}for(const G of u)if(G.targetIndex===P){h=!0;break}if(h)return this.showMoveText(),this.showFailedText(),this.end()}if(this.showMoveText(),s.length>0&&(this.ignorePp=((o=s.shift())==null?void 0:o.ignorePP)??!1),((l=this.pokemon.getTag(Y.CHARGING))==null?void 0:l.sourceMove)===this.move.moveId&&this.pokemon.lapseTag(Y.CHARGING),!this.ignorePp){const M=1+this.getPpIncreaseFromPressure(A);this.move.usePp(M),this.scene.eventTarget.dispatchEvent(new DT((C=this.pokemon)==null?void 0:C.id,this.move.getMove(),this.move.ppUsed))}ye[this.move.moveId].hasAttr(Xr)||(this.scene.currentBattle.lastMove=this.move.moveId);const n=this.move.getMove(),I=n.applyConditions(this.pokemon,A[0],n),a=this.scene.arena.isMoveWeatherCancelled(this.pokemon,n),r=this.scene.arena.isMoveTerrainCancelled(this.pokemon,this.targets,n);if(I&&!a&&!r)wO(yI,this.pokemon,null,this.move.getMove()),this.scene.unshiftPhase(new NR(this.scene,this.pokemon.getBattlerIndex(),this.targets,this.move));else{[t.ROAR,t.WHIRLWIND,t.TRICK_OR_TREAT,t.FORESTS_CURSE].includes(this.move.moveId)&&wO(yI,this.pokemon,null,this.move.getMove()),this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:CA.FAIL,virtual:this.move.virtual});let M;const u=n.getFailedText(this.pokemon,A[0],n,new Lt(!1));u?M=u:r&&(M=z7(this.pokemon,this.scene.arena.getTerrainType())),this.showFailedText(M),this.pokemon.lapseTags(QE.MOVE_EFFECT)}this.move.getMove().hasFlag(tA.DANCE_MOVE)&&!this.followUp&&this.scene.getField(!0).forEach(M=>{pQ(cU,M,this.move,this.pokemon,this.targets)})}chargeMove(){const A=this.move.getMove(),s=this.getActiveTargetPokemon();if(A.applyConditions(this.pokemon,s[0],A))wO(yI,this.pokemon,null,this.move.getMove()),this.showMoveText(),this.scene.unshiftPhase(new Vc(this.scene,this.pokemon.getBattlerIndex(),this.targets[0],this.move));else{this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:CA.FAIL,virtual:this.move.virtual});const R=A.getFailedText(this.pokemon,s[0],A,new Lt(!1));this.showMoveText(),this.showFailedText(R??void 0),this.pokemon.lapseTags(QE.MOVE_EFFECT)}}end(){!this.followUp&&this.canMove()&&this.scene.unshiftPhase(new nO(this.scene,this.pokemon.getBattlerIndex())),super.end()}getPpIncreaseFromPressure(A){return this.pokemon.getOpponents().filter(R=>A.includes(R)&&R.isActive(!0)&&R.hasAbilityWithAttr(FU)).length}resolveRedirectTarget(){if(this.targets.length===1){const A=this.targets[0],s=new Rt(A);this.scene.getField(!0).filter(n=>n!==this.pokemon).forEach(n=>Ct(BU,n,null,!1,this.move.moveId,s));let R=A!==s.value;this.pokemon.getOpponents().forEach(n=>{const I=n.getTag(XU);I&&(!I.powder||!this.pokemon.isOfType(i.GRASS)&&!this.pokemon.hasAbility(O.OVERCOAT))&&(s.value=n.getBattlerIndex(),R=!1)}),A!==s.value&&(this.move.getMove().getAttrs(gI).forEach(I=>{(!I.abilitiesOnly||R)&&(s.value=A)}),this.pokemon.hasAbilityWithAttr(Yr)&&(s.value=A,this.scene.unshiftPhase(new bn(this.scene,this.pokemon.getBattlerIndex(),this.pokemon.getPassiveAbility().hasAttr(Yr)))),this.targets[0]=s.value)}}resolveCounterAttackTarget(){var A;if(this.targets.length===1&&this.targets[0]===Bt.ATTACKER){if(this.pokemon.turnData.attacksReceived.length&&(this.targets[0]=this.pokemon.turnData.attacksReceived[0].sourceBattlerIndex,this.scene.currentBattle.double&&this.move.getMove().hasFlag(tA.REDIRECT_COUNTER)&&this.scene.getField()[this.targets[0]].hp===0)){const s=this.pokemon.isPlayer()?this.scene.getEnemyField():this.scene.getPlayerField();this.targets[0]=((A=s.find(R=>R.hp>0))==null?void 0:A.getBattlerIndex())??Bt.ATTACKER}this.targets[0]===Bt.ATTACKER&&(this.fail(),this.showMoveText(),this.showFailedText())}}handlePreMoveFailures(){var A,s,R;if(this.cancelled||this.failed){if(this.failed){const n=this.ignorePp?0:1;n&&this.move.usePp(),this.scene.eventTarget.dispatchEvent(new DT((A=this.pokemon)==null?void 0:A.id,this.move.getMove(),n))}this.cancelled&&((R=(s=this.pokemon.summonData)==null?void 0:s.tags)!=null&&R.find(n=>n.tagType===Y.FRENZY))&&_n(this.pokemon,this.move.getMove()),this.pokemon.pushMoveHistory({move:t.NONE,result:CA.FAIL}),this.pokemon.lapseTags(QE.MOVE_EFFECT),this.pokemon.lapseTags(QE.AFTER_MOVE),this.pokemon.getMoveQueue().shift()}}showMoveText(){this.move.moveId!==t.NONE&&(this.pokemon.getTag(Y.RECHARGING)||this.pokemon.getTag(Y.INTERRUPTED)||(this.scene.queueMessage(D.t("battle:useMove",{pokemonNameWithAffix:ee(this.pokemon),moveName:this.move.getName()}),500),MA(rr,this.pokemon,this.pokemon.getOpponents()[0],this.move.getMove())))}showFailedText(A){this.scene.queueMessage(A??D.t("battle:attackFailed"))}};L(hg,"MovePhase");let HA=hg;var M6=(E=>(E.EGG_COUNT_CHANGED="onEggCountChanged",E))(M6||{});const cg=class cg extends Event{constructor(A){super("onEggCountChanged"),this.eggCount=A}};L(cg,"EggCountChangedEvent");let xc=cg;const _g=class _g extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,0),this.WINDOW_DEFAULT_WIDTH=37,this.WINDOW_MEDIUM_WIDTH=42,this.WINDOW_HEIGHT=26,this.onEggCountChangedEvent=n=>this.onEggCountChanged(n),this.eggCount=s,this.battleScene=A,this.battleScene.ui.getHandler().eventTarget.addEventListener(M6.EGG_COUNT_CHANGED,this.onEggCountChangedEvent),this.setup()}setup(){const A=this.eggCount>9?this.WINDOW_MEDIUM_WIDTH:this.WINDOW_DEFAULT_WIDTH;this.eggCountWindow=_t(this.battleScene,5,5,A,this.WINDOW_HEIGHT),this.setVisible(this.eggCount>1),this.add(this.eggCountWindow);const s=this.battleScene.add.sprite(19,18,"egg","egg_0");s.setScale(.32),this.eggCountText=le(this.battleScene,28,13,`${this.eggCount}`,X.MESSAGE,{fontSize:"66px"}),this.eggCountText.setName("text-egg-count"),this.add(s),this.add(this.eggCountText)}setWindowToDefaultSize(){this.eggCountWindow.setSize(this.WINDOW_DEFAULT_WIDTH,this.WINDOW_HEIGHT)}onEggCountChanged(A){var n;const s=A;if(!s||!((n=this.eggCountText)!=null&&n.data))return;const R=s.eggCount;R<10&&this.setWindowToDefaultSize(),R>0?this.eggCountText.setText(R.toString()):this.eggCountText.setVisible(!1)}};L(_g,"EggCounterContainer");let bc=_g;const CZ="↑",dx="↓",Pg=class Pg extends Ws{constructor(A,s){super(A,s),this.scrollCursor=0,this.scale=.1666666667}getWindowHeight(){var A,s;return(Math.min((((A=this.config)==null?void 0:A.options)||[]).length,((s=this.config)==null?void 0:s.maxOptions)||99)+1)*96*this.scale}setup(){const A=this.getUi();this.optionSelectContainer=this.scene.add.container(this.scene.game.canvas.width/6-1,-48),this.optionSelectContainer.setName(`option-select-${this.mode?Oe[this.mode]:"UNKNOWN"}`),this.optionSelectContainer.setVisible(!1),A.add(this.optionSelectContainer),this.optionSelectBg=_t(this.scene,0,0,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setName("option-select-bg"),this.optionSelectBg.setOrigin(1,1),this.optionSelectContainer.add(this.optionSelectBg),this.optionSelectIcons=[],this.scale=un(X.WINDOW,this.scene.uiTheme).scale,this.setCursor(0)}setupOptions(){var R,n,I,a,r,S,o,l,C,M;const A=((R=this.config)==null?void 0:R.options)??[];let s;if(A.length>=10&&this.scene.ui.getMode()===Oe.AUTO_COMPLETE){const u=A.length,h=this.scrollCursor,P=Math.min(u,h+(!h||this.scrollCursor+(((n=this.config)==null?void 0:n.maxOptions)-1)>=u?((I=this.config)==null?void 0:I.maxOptions)-1:((a=this.config)==null?void 0:a.maxOptions)-2));s=A.slice(h,P+2)}else s=A;this.optionSelectText&&this.optionSelectText.destroy(),(r=this.optionSelectIcons)!=null&&r.length&&(this.optionSelectIcons.map(u=>u.destroy()),this.optionSelectIcons.splice(0,this.optionSelectIcons.length)),this.optionSelectText=le(this.scene,0,0,s.map(u=>u.item?`    ${u.label}`:u.label).join(`
`),X.WINDOW,{maxLines:s.length}),this.optionSelectText.setLineSpacing(this.scale*72),this.optionSelectText.setName("text-option-select"),this.optionSelectText.setLineSpacing(12),this.optionSelectContainer.add(this.optionSelectText),this.optionSelectContainer.setPosition(this.scene.game.canvas.width/6-1-(((S=this.config)==null?void 0:S.xOffset)||0),-48+(((o=this.config)==null?void 0:o.yOffset)||0)),this.optionSelectBg.width=Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth()),(l=this.config)!=null&&l.options&&((C=this.config)==null?void 0:C.options.length)>((M=this.config)==null?void 0:M.maxOptions)&&this.optionSelectText.setText(this.getOptionsWithScroll().map(u=>u.label).join(`
`)),this.optionSelectBg.height=this.getWindowHeight(),this.optionSelectText.setPositionRelative(this.optionSelectBg,12+24*this.scale,2+42*this.scale),s.forEach((u,h)=>{if(u.item){const P=this.scene.add.sprite(0,0,"items",u.item);if(P.setScale(3*this.scale),this.optionSelectIcons.push(P),this.optionSelectContainer.add(P),P.setPositionRelative(this.optionSelectText,36*this.scale,7+h*(114*this.scale-3)),u.item==="candy"){const G=this.scene.add.sprite(0,0,"items","candy_overlay");G.setScale(3*this.scale),this.optionSelectIcons.push(G),this.optionSelectContainer.add(G),G.setPositionRelative(this.optionSelectText,36*this.scale,7+h*(114*this.scale-3)),u.itemArgs&&(P.setTint(Xs(hs(u.itemArgs[0]))),G.setTint(Xs(hs(u.itemArgs[1]))))}}})}show(A){var s;return!A.length||!A[0].hasOwnProperty("options")||!A[0].options.length?!1:(super.show(A),this.config=A[0],this.setupOptions(),this.scene.ui.bringToTop(this.optionSelectContainer),this.optionSelectContainer.setVisible(!0),this.scrollCursor=0,this.setCursor(0),this.config.delay&&(this.blockInput=!0,this.optionSelectText.setAlpha(.5),(s=this.cursorObj)==null||s.setAlpha(.8),this.scene.time.delayedCall(Et(this.config.delay),()=>this.unblockInput())),!0)}processInput(A){var a,r,S,o,l,C,M,u;const s=this.getUi();let R=!1;const n=this.getOptionsWithScroll();let I=!0;if(A===b.ACTION||A===b.CANCEL){if(this.blockInput)return s.playError(),!1;if(R=!0,A===b.CANCEL)if((a=this.config)!=null&&a.maxOptions&&this.config.options.length>this.config.maxOptions)this.scrollCursor=this.config.options.length-this.config.maxOptions+1,this.cursor=n.length-1;else if(!((r=this.config)!=null&&r.noCancel))this.setCursor(n.length-1);else return!1;const h=(S=this.config)==null?void 0:S.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))];h!=null&&h.handler()?(h.keepOpen||this.clear(),I=!h.overrideSound):s.playError()}else if(A===b.SUBMIT&&s.getMode()===Oe.AUTO_COMPLETE){R=!0;const h=(o=this.config)==null?void 0:o.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))];h!=null&&h.handler()?(h.keepOpen||this.clear(),I=!h.overrideSound):s.playError()}else{switch(A){case b.UP:this.cursor?R=this.setCursor(this.cursor-1):this.cursor===0&&(R=this.setCursor(n.length-1));break;case b.DOWN:this.cursor<n.length-1?R=this.setCursor(this.cursor+1):R=this.setCursor(0);break}(l=this.config)!=null&&l.supportHover&&((u=(M=(C=this.config)==null?void 0:C.options[this.cursor+(this.scrollCursor-(this.scrollCursor?1:0))])==null?void 0:M.onHover)==null||u.call(M))}return R&&I&&s.playSelect(),R}unblockInput(){var A;this.blockInput&&(this.blockInput=!1,this.optionSelectText.setAlpha(1),(A=this.cursorObj)==null||A.setAlpha(1))}getOptionsWithScroll(){var I;if(!this.config)return[];const A=this.config.options.slice(0);if(!this.config.maxOptions||this.config.options.length<this.config.maxOptions)return A;const s=A.length,R=this.scrollCursor,n=Math.min(s,R+(!R||this.scrollCursor+(this.config.maxOptions-1)>=s?this.config.maxOptions-1:this.config.maxOptions-2));return(I=this.config)!=null&&I.maxOptions&&A.length>this.config.maxOptions&&(A.splice(n,s),A.splice(0,R),R&&A.unshift({label:CZ,handler:L(()=>!0,"handler")}),n<s&&A.push({label:dx,handler:L(()=>!0,"handler")})),A}setCursor(A){var I;const s=this.cursor!==A;let R=!1;const n=this.getOptionsWithScroll();if(s&&((I=this.config)!=null&&I.maxOptions)&&this.config.options.length>this.config.maxOptions)if(Math.abs(A-this.cursor)===n.length-1){const a=this.config.options.length;this.scrollCursor=A?a-(this.config.maxOptions-1):0,this.setupOptions()}else{const a=A&&A>this.cursor;a?n[A].label===dx&&(R=!0,this.scrollCursor++):!A&&this.scrollCursor&&(R=!0,this.scrollCursor--),R&&this.scrollCursor===1&&(this.scrollCursor+=a?1:-1)}return R?this.setupOptions():this.cursor=A,this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.optionSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.optionSelectBg,12,102*this.scale+this.cursor*(114*this.scale-3)),s}clear(){super.clear(),this.config=null,this.optionSelectContainer.setVisible(!1),this.scrollCursor=0,this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(Pg,"AbstractOptionSelectUiHandler");let ZT=Pg;const rN=class rN extends ZT{constructor(A){super(A,Oe.CONFIRM)}getWindowWidth(){return rN.windowWidth}show(A){if(A.length===4&&A[0]instanceof Function&&A[1]instanceof Function&&A[2]instanceof Function&&A[3]==="fullParty"){const s={options:[{label:D.t("partyUiHandler:SUMMARY"),handler:L(()=>(A[0](),!0),"handler")},{label:D.t("menu:yes"),handler:L(()=>(A[1](),!0),"handler")},{label:D.t("menu:no"),handler:L(()=>(A[2](),!0),"handler")}],delay:A.length>=8&&A[7]!==null?A[7]:0};super.show([s]),this.switchCheck=A.length>=5&&A[4]!==null&&A[4];const R=A.length>=6&&A[5]!==null?A[5]:0,n=A.length>=7&&A[6]!==null?A[6]:0;return this.optionSelectContainer.setPosition(this.scene.game.canvas.width/6-1+R,-48+n),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}else if(A.length>=2&&A[0]instanceof Function&&A[1]instanceof Function){const s={options:[{label:D.t("menu:yes"),handler:L(()=>(A[0](),!0),"handler")},{label:D.t("menu:no"),handler:L(()=>(A[1](),!0),"handler")}],delay:A.length>=6&&A[5]!==null?A[5]:0,noCancel:A.length>=7&&A[6]!==null?A[6]:!1};super.show([s]),this.switchCheck=A.length>=3&&A[2]!==null&&A[2];const R=A.length>=4&&A[3]!==null?A[3]:0,n=A.length>=5&&A[4]!==null?A[4]:0;return this.optionSelectContainer.setPosition(this.scene.game.canvas.width/6-1+R,-48+n),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}return!1}processInput(A){var s;return A===b.CANCEL&&this.blockInput&&!((s=this.config)!=null&&s.noCancel)&&this.unblockInput(),super.processInput(A)}setCursor(A){const s=super.setCursor(A);return s&&this.switchCheck&&(this.switchCheckCursor=this.cursor),s}};L(rN,"ConfirmUiHandler"),rN.windowWidth=48;let RC=rN;const zO=24,Pa=[[0,-1],[.825,-.5],[.825,.5],[-.825,-.5],[-.825,.5],[0,1]],UZ=-3,Zo=1,fx=[0,Zo,-Zo,Zo,-Zo,UZ],uZ=[0,5,0,5,0,0],Ga=[0,1,2,5,4,3],Xo=new Array(12).fill(null).map(()=>0),Gg=class Gg extends Phaser.GameObjects.Container{constructor(A,s,R,n){super(A,s,R),this.showDiff=!!n,this.setup()}setup(){this.setName("stats");const A=new Array(6).fill(null).map((I,a)=>[zO*Pa[Ga[a]][0],zO*Pa[Ga[a]][1]]).flat(),s=this.scene.add.polygon(48,44,A,14213360,.625);s.setOrigin(0,0);const R=this.scene.add.polygon(s.x,s.y,A).setStrokeStyle(1,4735056);R.setOrigin(0,0);const n=[[0,-1,0,1],[-.825,-.5,.825,.5],[.825,-.5,-.825,.5]].map(I=>{const a=new Phaser.GameObjects.Line(this.scene,s.x,s.y,zO*I[0],zO*I[1],zO*I[2],zO*I[3],16777215).setLineWidth(.5);return a.setOrigin(0,0),a});this.ivChart=this.scene.add.polygon(s.x,s.y,Xo,10016928,.75),this.ivChart.setOrigin(0,0),this.add(s),n.map(I=>this.add(I)),this.add(this.ivChart),this.add(R),this.ivStatValueTexts=[];for(const I of FO){const a=le(this.scene,s.x+zO*Pa[I][0]*1.325+(this.showDiff?0:fx[I]),s.y+zO*Pa[I][1]*1.325-4+(this.showDiff?0:uZ[I]),D.t(_E(I)),X.TOOLTIP_CONTENT);a.setOrigin(.5),this.ivStatValueTexts[I]=yE(this.scene,a.x-(this.showDiff?0:fx[I]),a.y+8,"0",X.TOOLTIP_CONTENT),this.ivStatValueTexts[I].setOrigin(.5),this.add(a),this.add(this.ivStatValueTexts[I])}}updateIvs(A,s){if(A){const R=new Array(6).fill(null).map((o,l)=>[A[Ga[l]]/31*zO*Pa[Ga[l]][0],A[Ga[l]]/31*zO*Pa[Ga[l]][1]]).flat(),n=this.statsIvsCache||Xo,I=IA(X.SUMMARY_GOLD,!1,this.scene.uiTheme);this.statsIvsCache=R.slice(0),this.ivStatValueTexts.map((o,l)=>{let C="";A[l]===31?C+=`[color=${I}][shadow]${A[l].toString()}[/shadow][/color]`:C=A[l].toString(),this.showDiff&&s&&(s[l]<A[l]?C+=` ([color=${IA(X.SUMMARY_BLUE,!1,this.scene.uiTheme)}][shadow=${IA(X.SUMMARY_BLUE,!0,this.scene.uiTheme)}]+${A[l]-s[l]}[/shadow][/color])`:C+=" (-)"),o.setText(`[shadow]${C}[/shadow]`)});const a=A.every(o=>o===31)?parseInt(I.substr(1),16):10016928,r=this.ivChart.fillColor,S=r!==a?[Phaser.Display.Color.IntegerToColor(r),Phaser.Display.Color.IntegerToColor(a)]:null;this.scene.tweens.addCounter({from:0,to:1,duration:1e3,ease:"Cubic.easeOut",onUpdate:L(o=>{const l=o.getValue(),C=R.map((M,u)=>M*l+n[u]*(1-l));S&&this.ivChart.setFillStyle(Phaser.Display.Color.ValueToColor(Phaser.Display.Color.Interpolate.ColorWithColor(S[0],S[1],1,l)).color,.75),this.ivChart.setTo(C)},"onUpdate")})}else this.statsIvsCache=Xo,this.ivChart.setTo(Xo)}};L(Gg,"StatsContainer");let OC=Gg;const Qo={pt:{infoContainerTextSize:"60px",infoContainerLabelXPos:-15,infoContainerTextXPos:-12}},Hg=class Hg extends Phaser.GameObjects.Container{constructor(A,s=372,R=66){super(A,s,R),this.infoWindowWidth=104,this.numCharsBeforeCutoff=16,this.initialX=s}setup(){this.setName("pkmn-info");const A=D.resolvedLanguage,s=Object.keys(Qo).find(o=>A==null?void 0:A.includes(o)),R=Qo[s];this.infoBg=_t(this.scene,0,0,this.infoWindowWidth,132),this.infoBg.setOrigin(.5,.5),this.infoBg.setName("window-info-bg"),this.pokemonMovesContainer=this.scene.add.container(6,14),this.pokemonMovesContainer.setName("pkmn-moves"),this.movesContainerInitialX=this.pokemonMovesContainer.x,this.pokemonMovesContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[];const n=_t(this.scene,0,0,58,52);n.setOrigin(1,0),n.setName("window-moves-bg"),this.pokemonMovesContainer.add(n);const I=le(this.scene,-n.width/2,6,D.t("pokemonInfoContainer:moveset"),X.WINDOW,{fontSize:"64px"});I.setOrigin(.5,0),I.setName("text-moves"),this.pokemonMovesContainer.add(I);for(let o=0;o<4;o++){const l=this.scene.add.container(-6,18+7*o);l.setScale(.5),l.setName("move");const C=this.scene.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);C.setOrigin(1,0),C.setName("nineslice-move-bg");const M=le(this.scene,-C.width/2,0,"-",X.PARTY);M.setOrigin(.5,0),M.setName("text-move-label"),this.pokemonMoveBgs.push(C),this.pokemonMoveLabels.push(M),l.add(C),l.add(M),this.pokemonMovesContainers.push(l),this.pokemonMovesContainer.add(l)}this.add(this.pokemonMovesContainer),this.statsContainer=new OC(this.scene,-48,-64,!0),this.add(this.infoBg),this.add(this.statsContainer);const a=(R==null?void 0:R.infoContainerLabelXPos)||-18,r=(R==null?void 0:R.infoContainerTextXPos)||-14,S=(R==null?void 0:R.infoContainerTextSize)||"64px";this.pokemonFormLabelText=le(this.scene,a,19,D.t("pokemonInfoContainer:form"),X.WINDOW,{fontSize:S}),this.pokemonFormLabelText.setOrigin(1,0),this.pokemonFormLabelText.setVisible(!1),this.add(this.pokemonFormLabelText),this.pokemonFormText=le(this.scene,r,19,"",X.WINDOW,{fontSize:S}),this.pokemonFormText.setOrigin(0,0),this.pokemonFormText.setVisible(!1),this.add(this.pokemonFormText),this.pokemonGenderText=le(this.scene,-42,-61,"",X.WINDOW,{fontSize:S}),this.pokemonGenderText.setOrigin(0,0),this.pokemonGenderText.setVisible(!1),this.pokemonGenderText.setName("text-pkmn-gender"),this.add(this.pokemonGenderText),this.pokemonGenderNewText=le(this.scene,-36,-61,"",X.WINDOW,{fontSize:"64px"}),this.pokemonGenderNewText.setOrigin(0,0),this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderNewText.setName("text-pkmn-new-gender"),this.add(this.pokemonGenderNewText),this.pokemonAbilityLabelText=le(this.scene,a,29,D.t("pokemonInfoContainer:ability"),X.WINDOW,{fontSize:S}),this.pokemonAbilityLabelText.setOrigin(1,0),this.pokemonAbilityLabelText.setName("text-pkmn-ability-label"),this.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=le(this.scene,r,29,"",X.WINDOW,{fontSize:S}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setName("text-pkmn-ability"),this.add(this.pokemonAbilityText),this.pokemonNatureLabelText=le(this.scene,a,39,D.t("pokemonInfoContainer:nature"),X.WINDOW,{fontSize:S}),this.pokemonNatureLabelText.setOrigin(1,0),this.pokemonNatureLabelText.setName("text-pkmn-nature-label"),this.add(this.pokemonNatureLabelText),this.pokemonNatureText=yE(this.scene,r,39,"",X.WINDOW,{fontSize:S,lineSpacing:3,maxLines:2}),this.pokemonNatureText.setOrigin(0,0),this.pokemonNatureText.setName("text-pkmn-nature"),this.add(this.pokemonNatureText),this.pokemonShinyIcon=this.scene.add.image(-43.5,48.5,"shiny_star"),this.pokemonShinyIcon.setOrigin(0,0),this.pokemonShinyIcon.setScale(.75),this.pokemonShinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.pokemonShinyIcon.setName("img-pkmn-shiny-icon"),this.add(this.pokemonShinyIcon),this.pokemonShinyNewIcon=le(this.scene,this.pokemonShinyIcon.x+12,this.pokemonShinyIcon.y,"",X.WINDOW,{fontSize:S}),this.pokemonShinyNewIcon.setOrigin(0,0),this.pokemonShinyNewIcon.setName("text-pkmn-shiny-new-icon"),this.add(this.pokemonShinyNewIcon),this.pokemonShinyNewIcon.setVisible(!1),this.pokemonFusionShinyIcon=this.scene.add.image(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y,"shiny_star_2"),this.pokemonFusionShinyIcon.setOrigin(0,0),this.pokemonFusionShinyIcon.setScale(.75),this.pokemonFusionShinyIcon.setName("img-pkmn-fusion-shiny-icon"),this.add(this.pokemonFusionShinyIcon),this.setVisible(!1)}show(A,s=!1,R=1,n,I,a=!1){return new Promise(r=>{var V,k,Q;n||(n=A.scene.gameData.dexData[A.species.speciesId]),I||(I=A.scene.gameData.starterData[A.species.getRootSpeciesId()]);const S=BigInt(n.caughtAttr);if(A.gender>je.GENDERLESS){this.pokemonGenderText.setText(OL(A.gender)),this.pokemonGenderText.setColor(vn(A.gender)),this.pokemonGenderText.setShadowColor(vn(A.gender,!0)),this.pokemonGenderText.setVisible(!0);const j=BigInt(1<<A.gender)*Ze.MALE;this.pokemonGenderNewText.setText("(+)"),this.pokemonGenderNewText.setColor(IA(X.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonGenderNewText.setShadowColor(IA(X.SUMMARY_BLUE,!0,this.scene.uiTheme)),this.pokemonGenderNewText.setVisible((j&S)===BigInt(0))}else this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderText.setVisible(!1);const o=(Q=(k=(V=A.species)==null?void 0:V.forms)==null?void 0:k[A.formIndex])==null?void 0:Q.formKey,l=ML(o,"-",!1,!1)||"",C=ML(e[A.species.speciesId],"_",!0,!1);let M="";if(A.species.speciesId===e.ARCEUS)M=D.t(`pokemonInfo:Type.${l==null?void 0:l.toUpperCase()}`);else{const j=`pokemonForm:${C}${l}`;if(D.exists(j))M=D.t(j);else{const ne=`pokemonForm:${ML(e[A.species.getRootSpeciesId()],"_",!0,!1)}${l}`;M=D.exists(ne)?D.t(ne):l}}M?(this.pokemonFormLabelText.setVisible(!0),this.pokemonFormText.setVisible(!0),(BigInt(1<<A.formIndex)*Ze.DEFAULT_FORM&S)===BigInt(0)?(this.pokemonFormLabelText.setColor(IA(X.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonFormLabelText.setShadowColor(IA(X.SUMMARY_BLUE,!0,this.scene.uiTheme))):(this.pokemonFormLabelText.setColor(IA(X.WINDOW,!1,this.scene.uiTheme)),this.pokemonFormLabelText.setShadowColor(IA(X.WINDOW,!0,this.scene.uiTheme))),this.pokemonFormText.setText(M.length>this.numCharsBeforeCutoff?M.substring(0,this.numCharsBeforeCutoff-3)+"...":M),M.length>this.numCharsBeforeCutoff?(this.pokemonFormText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.pokemonFormText.width,this.pokemonFormText.height),Phaser.Geom.Rectangle.Contains),this.pokemonFormText.on("pointerover",()=>this.scene.ui.showTooltip("",M,!0)),this.pokemonFormText.on("pointerout",()=>this.scene.ui.hideTooltip())):this.pokemonFormText.disableInteractive()):(this.pokemonFormLabelText.setVisible(!1),this.pokemonFormText.setVisible(!1),this.pokemonFormText.disableInteractive());const u=A.abilityIndex===2?X.MONEY:X.WINDOW;this.pokemonAbilityText.setText(A.getAbility(!0).name),this.pokemonAbilityText.setColor(IA(u,!1,this.scene.uiTheme)),this.pokemonAbilityText.setShadowColor(IA(u,!0,this.scene.uiTheme)),A.checkIfPlayerHasAbilityOfStarter(I.abilityAttr)?(this.pokemonAbilityLabelText.setColor(IA(X.WINDOW,!1,this.scene.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(IA(X.WINDOW,!0,this.scene.uiTheme))):(this.pokemonAbilityLabelText.setColor(IA(X.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(IA(X.SUMMARY_BLUE,!0,this.scene.uiTheme))),this.pokemonNatureText.setText(xO(A.getNature(),!0,!1,!1,this.scene.uiTheme));const P=n.natureAttr,G=1<<A.nature+1;P&G?(this.pokemonNatureLabelText.setColor(IA(X.WINDOW,!1,this.scene.uiTheme)),this.pokemonNatureLabelText.setShadowColor(IA(X.WINDOW,!0,this.scene.uiTheme))):(this.pokemonNatureLabelText.setColor(IA(X.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonNatureLabelText.setShadowColor(IA(X.SUMMARY_BLUE,!0,this.scene.uiTheme)));const d=A.isFusion(),H=d&&A.shiny&&A.fusionShiny,f=H?A.variant:A.getVariant();if(this.pokemonShinyIcon.setTexture(`shiny_star${H?"_1":""}`),this.pokemonShinyIcon.setVisible(A.isShiny()),this.pokemonShinyIcon.setTint(YE(f)),this.pokemonShinyIcon.visible){const j=H||f?`${f===2?D.t("common:epicShiny"):f===1?D.t("common:rareShiny"):D.t("common:commonShiny")}${H?`/${A.fusionVariant===2?D.t("common:epicShiny"):A.fusionVariant===1?D.t("common:rareShiny"):D.t("common:commonShiny")}`:""}`:"";this.pokemonShinyIcon.on("pointerover",()=>this.scene.ui.showTooltip("",`${D.t("common:shinyOnHover")}${j?` (${j})`:""}`,!0)),this.pokemonShinyIcon.on("pointerout",()=>this.scene.ui.hideTooltip());const J=BigInt(1<<(A.shiny?1:0)),ne=BigInt(1<<A.variant+4);this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(IA(X.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(IA(X.SUMMARY_BLUE,!0,this.scene.uiTheme));const x=(J&S)===BigInt(0)||(ne&S)===BigInt(0);this.pokemonShinyNewIcon.setVisible(!!x)}else(S&Ze.NON_SHINY)===BigInt(0)&&(S&Ze.SHINY)===Ze.SHINY?(this.pokemonShinyNewIcon.setVisible(!0),this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(IA(X.SUMMARY_BLUE,!1,this.scene.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(IA(X.SUMMARY_BLUE,!0,this.scene.uiTheme))):this.pokemonShinyNewIcon.setVisible(!1);this.pokemonFusionShinyIcon.setPosition(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y),this.pokemonFusionShinyIcon.setVisible(H),d&&this.pokemonFusionShinyIcon.setTint(YE(A.fusionVariant));const K=A.species.getRootSpeciesId(),W=a?n.caughtAttr?n.ivs:null:this.scene.gameData.dexData[K].caughtAttr?this.scene.gameData.dexData[K].ivs:null;this.statsContainer.updateIvs(A.ivs,W),a||(this.scene.tweens.add({targets:this,duration:Et(Math.floor(750/R)),ease:"Cubic.easeInOut",x:this.initialX-this.infoWindowWidth,onComplete:L(()=>{r()},"onComplete")}),s&&this.scene.tweens.add({delay:Et(Math.floor(325/R)),targets:this.pokemonMovesContainer,duration:Et(Math.floor(325/R)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX-57,onComplete:L(()=>r(),"onComplete")}));for(let j=0;j<4;j++){const J=j<A.moveset.length&&A.moveset[j]?A.moveset[j].getMove():null;this.pokemonMoveBgs[j].setFrame(i[J?J.type:i.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[j].setText(J?J.name:"-"),this.pokemonMovesContainers[j].setVisible(!!J)}this.setVisible(!0),this.shown=!0,this.scene.hideEnemyModifierBar()})}changeToEggSummaryLayout(){const A=D.resolvedLanguage,s=Object.keys(Qo).find(r=>A==null?void 0:A.includes(r)),R=Qo[s],n=43,I=((R==null?void 0:R.infoContainerLabelXPos)||-18)+n,a=((R==null?void 0:R.infoContainerTextXPos)||-14)+n;this.x=this.initialX-this.infoWindowWidth,this.pokemonGenderText.setPosition(89,-2),this.pokemonGenderNewText.setPosition(79,-2),this.pokemonShinyIcon.setPosition(82,87),this.pokemonShinyNewIcon.setPosition(72,87),this.pokemonFormLabelText.setPosition(I,152),this.pokemonFormText.setPosition(a,152),this.pokemonAbilityLabelText.setPosition(I,110),this.pokemonAbilityText.setPosition(a,110),this.pokemonNatureLabelText.setPosition(I,125),this.pokemonNatureText.setPosition(a,125),this.statsContainer.setScale(.7),this.statsContainer.setPosition(30,-3),this.infoBg.setVisible(!1),this.pokemonMovesContainer.setVisible(!1)}makeRoomForConfirmUi(A=1,s=!1){const R=s?this.initialX-this.infoWindowWidth-65:this.initialX-this.infoWindowWidth-RC.windowWidth;return new Promise(n=>{this.scene.tweens.add({targets:this,duration:Et(Math.floor(150/A)),ease:"Cubic.easeInOut",x:R,onComplete:L(()=>{n()},"onComplete")})})}hide(A=1){return new Promise(s=>{if(!this.shown)return this.scene.showEnemyModifierBar(),s();this.scene.tweens.add({targets:this.pokemonMovesContainer,duration:Et(Math.floor(750/A)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX}),this.scene.tweens.add({targets:this,duration:Et(Math.floor(750/A)),ease:"Cubic.easeInOut",x:this.initialX,onComplete:L(()=>{this.setVisible(!1),this.pokemonShinyIcon.off("pointerover"),this.pokemonShinyIcon.off("pointerout"),this.scene.ui.hideTooltip(),this.scene.showEnemyModifierBar(),s()},"onComplete")}),this.shown=!1})}};L(Hg,"PokemonInfoContainer");let XT=Hg;const $R={fadeIn:_8,fadeOut:P8},fD=class fD extends iE{constructor(A,s,R,n){super(A),this.eggLapsePhase=s,this.egg=R,this.eggsToHatchCount=n}start(){super.start(),this.scene.ui.setModeForceTransition(Oe.EGG_HATCH_SCENE).then(()=>{if(!this.egg)return this.end();const A=this.scene.gameData.eggs.findIndex(n=>n.id===this.egg.id);if(A===-1)return this.end();this.scene.gameData.eggs.splice(A,1),this.scene.fadeOutBgm(void 0,!1),this.eggHatchHandler=this.scene.ui.getHandler(),this.eggHatchContainer=this.eggHatchHandler.eggHatchContainer,this.eggHatchBg=this.scene.add.image(0,0,"default_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.eggContainer=this.scene.add.container(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2),this.eggSprite=this.scene.add.sprite(0,0,"egg",`egg_${this.egg.getKey()}`),this.eggCrackSprite=this.scene.add.sprite(0,0,"egg_crack","0"),this.eggCrackSprite.setVisible(!1),this.eggLightraysOverlay=this.scene.add.sprite(-this.eggHatchBg.displayWidth/2+4,-this.eggHatchBg.displayHeight/2,"egg_lightrays","3"),this.eggLightraysOverlay.setOrigin(0,0),this.eggLightraysOverlay.setVisible(!1),this.eggContainer.add(this.eggSprite),this.eggContainer.add(this.eggCrackSprite),this.eggContainer.add(this.eggLightraysOverlay),this.eggHatchContainer.add(this.eggContainer),this.eggCounterContainer=new bc(this.scene,this.eggsToHatchCount),this.eggHatchContainer.add(this.eggCounterContainer);const s=L(()=>{const n=this.scene.add.sprite(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2,"pkmn__sub");return n.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),n},"getPokemonSprite");this.eggHatchContainer.add(this.pokemonSprite=s()),this.pokemonShinySparkle=this.scene.add.sprite(this.pokemonSprite.x,this.pokemonSprite.y,"shiny"),this.pokemonShinySparkle.setVisible(!1),this.eggHatchContainer.add(this.pokemonShinySparkle),this.eggHatchOverlay=this.scene.add.rectangle(0,-this.scene.game.canvas.height/6,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,16777215),this.eggHatchOverlay.setOrigin(0,0),this.eggHatchOverlay.setAlpha(0),this.scene.fieldUI.add(this.eggHatchOverlay),this.infoContainer=new XT(this.scene),this.infoContainer.setup(),this.eggHatchContainer.add(this.infoContainer);const R=this.generatePokemon();R.fusionSpecies&&R.clearFusionSpecies(),this.pokemonSprite.setVisible(!1),this.pokemon=R,R.loadAssets().then(()=>{this.canSkip=!0,this.scene.time.delayedCall(1e3,()=>{this.hatched||(this.evolutionBgm=this.scene.playSoundWithoutBgm("evolution"))}),this.scene.time.delayedCall(2e3,()=>{this.hatched||(this.eggCrackSprite.setVisible(!0),this.doSpray(1,this.eggSprite.displayHeight/-2),this.doEggShake(2).then(()=>{this.hatched||this.scene.time.delayedCall(1e3,()=>{this.hatched||(this.doSpray(2,this.eggSprite.displayHeight/-4),this.eggCrackSprite.setFrame("1"),this.scene.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("2")),this.doEggShake(4).then(()=>{this.hatched||this.scene.time.delayedCall(1e3,()=>{this.hatched||(this.scene.playSound("se/egg_crack"),this.doSpray(4),this.eggCrackSprite.setFrame("3"),this.scene.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("4")),this.doEggShake(8,2).then(()=>{this.hatched||this.doHatch()}))})}))})}))})})})}end(){this.scene.findPhase(A=>A instanceof fD)?this.eggHatchHandler.clear():this.scene.time.delayedCall(250,()=>this.scene.setModifiersVisible(!0)),super.end()}doEggShake(A,s,R){return new Promise(n=>{s===void 0&&(s=0),R===void 0&&(R=0),this.scene.playSound("se/pb_move"),this.scene.tweens.add({targets:this.eggContainer,x:`-=${A/(R?1:2)}`,ease:"Sine.easeInOut",duration:125,onComplete:L(()=>{this.scene.tweens.add({targets:this.eggContainer,x:`+=${A}`,ease:"Sine.easeInOut",duration:250,onComplete:L(()=>{if(R++,R<s)return this.doEggShake(A,s,R).then(()=>n());this.scene.tweens.add({targets:this.eggContainer,x:`-=${A/2}`,ease:"Sine.easeInOut",duration:125,onComplete:L(()=>n(),"onComplete")})},"onComplete")})},"onComplete")})})}trySkip(){var A;return!this.canSkip||this.skipped||((A=this.eggCounterContainer.eggCountText)==null?void 0:A.data)===void 0?!1:(this.skipped=!0,this.hatched?this.doReveal():this.doHatch(),!0)}doHatch(){this.canSkip=!1,this.hatched=!0,this.evolutionBgm&&$R.fadeOut(this.scene,this.evolutionBgm,Et(100));for(let A=0;A<5;A++)this.scene.time.delayedCall(Et(375*A),()=>this.scene.playSound("se/egg_hatch",{volume:1-A*.2}));this.eggLightraysOverlay.setVisible(!0),this.eggLightraysOverlay.play("egg_lightrays"),this.scene.tweens.add({duration:Et(125),targets:this.eggHatchOverlay,alpha:1,ease:"Cubic.easeIn",onComplete:L(()=>{this.skipped=!1,this.canSkip=!0},"onComplete")}),this.scene.time.delayedCall(Et(1500),()=>{this.canSkip=!1,this.skipped||this.doReveal()})}doReveal(){const A=this.pokemon.isShiny();this.pokemon.species.subLegendary&&this.scene.validateAchv(lt.HATCH_SUB_LEGENDARY),this.pokemon.species.legendary&&this.scene.validateAchv(lt.HATCH_LEGENDARY),this.pokemon.species.mythical&&this.scene.validateAchv(lt.HATCH_MYTHICAL),A&&this.scene.validateAchv(lt.HATCH_SHINY),this.eggContainer.setVisible(!1);const s=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(s)}catch(R){console.error(`Failed to play animation for ${s}`,R)}this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),this.pokemonSprite.setVisible(!0),this.scene.time.delayedCall(Et(250),()=>{this.eggsToHatchCount--,this.eggHatchHandler.eventTarget.dispatchEvent(new xc(this.eggsToHatchCount)),this.pokemon.cry(),A&&this.scene.time.delayedCall(Et(500),()=>{IM(this.scene,this.pokemonShinySparkle,this.pokemon.variant)}),this.scene.time.delayedCall(Et(this.skipped?A?750:250:A?1750:1250),()=>{this.infoContainer.show(this.pokemon,!1,this.skipped?2:1),this.scene.playSoundWithoutBgm("evolution_fanfare"),this.scene.ui.showText(D.t("egg:hatchFromTheEgg",{pokemonName:ee(this.pokemon)}),null,()=>{this.scene.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),this.scene.gameData.setPokemonCaught(this.pokemon,!0,!0).then(()=>{this.scene.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex).then(R=>{this.eggHatchData.setEggMoveUnlocked(R),this.scene.ui.showText("",0),this.end()})})},null,!0,3e3)})}),this.scene.tweens.add({duration:Et(this.skipped?500:3e3),targets:this.eggHatchOverlay,alpha:0,ease:"Cubic.easeOut"})}sin(A,s){return s*Math.sin(A*(Math.PI/128))}doSpray(A,s){this.scene.tweens.addCounter({repeat:A,duration:NE(1),onRepeat:L(()=>{this.doSprayParticle(hA(8),s||0)},"onRepeat")})}doSprayParticle(A,s){const R=this.eggHatchBg.displayWidth/2,n=this.eggHatchBg.displayHeight/2+s,I=this.egg.isManaphyEgg()?"1":this.egg.tier.toString(),a=this.scene.add.image(R,n,"egg_shard",`${I}_${Math.floor(A/2)}`);this.eggHatchContainer.add(a);let r=0,S=0;const o=3-hA(8),l=24+hA(32),C=this.scene.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{M()},"onRepeat")}),M=L(()=>{const u=this.skipped?6:1;S+=u,A<160?(a.setPosition(R+o*r/3,n+S),a.y+=-this.sin(A,l),r>108&&a.setScale(1-(r-108)/20),A+=2*u,r+=u):(a.destroy(),C.remove())},"updateParticle");M()}generatePokemon(){return this.eggHatchData=this.eggLapsePhase.generatePokemon(this.egg),this.eggMoveIndex=this.eggHatchData.eggMoveIndex,this.eggHatchData.pokemon}};L(fD,"EggHatchPhase");let nC=fD;const dg=class dg extends iE{constructor(A,s){super(A),this.eggHatchData=s}start(){super.start();const A=L(s=>{s>=this.eggHatchData.length?this.scene.ui.setModeForceTransition(Oe.EGG_HATCH_SUMMARY,this.eggHatchData).then(()=>{this.scene.fadeOutBgm(void 0,!1)}):(this.eggHatchData[s].setDex(),this.eggHatchData[s].updatePokemon().then(()=>{s<this.eggHatchData.length&&A(s+1)}))},"updateNextPokemon");A(0)}end(){this.scene.time.delayedCall(250,()=>this.scene.setModifiersVisible(!0)),this.scene.ui.setModeForceTransition(Oe.MESSAGE).then(()=>{super.end()})}};L(dg,"EggSummaryPhase");let iC=dg;const fg=class fg{constructor(A,s,R){this.scene=A,this.pokemon=s,this.eggMoveIndex=R}setEggMoveUnlocked(A){this.eggMoveUnlocked=A}setDex(){const A=this.scene.gameData.dexData[this.pokemon.species.speciesId],s=this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId()];this.dexEntryBeforeUpdate={seenAttr:A.seenAttr,caughtAttr:A.caughtAttr,natureAttr:A.natureAttr,seenCount:A.seenCount,caughtCount:A.caughtCount,hatchedCount:A.hatchedCount,ivs:[...A.ivs]},this.starterDataEntryBeforeUpdate={moveset:s.moveset,eggMoves:s.eggMoves,candyCount:s.candyCount,friendship:s.friendship,abilityAttr:s.abilityAttr,passiveAttr:s.passiveAttr,valueReduction:s.valueReduction,classicWinCount:s.classicWinCount}}getDex(){return this.dexEntryBeforeUpdate}getStarterEntry(){return this.starterDataEntryBeforeUpdate}updatePokemon(A=!1){return new Promise(s=>{this.scene.gameData.setPokemonCaught(this.pokemon,!0,!0,A).then(()=>{this.scene.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),this.scene.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex,A).then(R=>{this.setEggMoveUnlocked(R),s()})})})}};L(fg,"EggHatchData");let kc=fg;const Bg=class Bg extends iE{constructor(A){super(A),this.eggHatchData=[],this.minEggsToSkip=2}start(){super.start();const A=this.scene.gameData.eggs.filter(R=>Ye.EGG_IMMEDIATE_HATCH_OVERRIDE?!0:--R.hatchWaves<1),s=A.length;this.eggHatchData=[],s>0?s>=this.minEggsToSkip&&this.scene.eggSkipPreference===1?this.scene.ui.showText(D.t("battle:eggHatching"),0,()=>{this.scene.ui.showText(D.t("battle:eggSkipPrompt",{eggsToHatch:s}),0),this.scene.ui.setModeWithoutClear(Oe.CONFIRM,()=>{this.hatchEggsSkipped(A),this.showSummary()},()=>{this.hatchEggsRegular(A),this.end()},null,null,null,1e3,!0)},100,!0):s>=this.minEggsToSkip&&this.scene.eggSkipPreference===2?(this.scene.queueMessage(D.t("battle:eggHatching")),this.hatchEggsSkipped(A),this.showSummary()):(this.scene.queueMessage(D.t("battle:eggHatching")),this.hatchEggsRegular(A),this.end()):this.end()}hatchEggsRegular(A){let s=A.length;for(const R of A)this.scene.unshiftPhase(new nC(this.scene,this,R,s)),s--}hatchEggsSkipped(A){for(const s of A)this.hatchEggSilently(s)}showSummary(){this.scene.unshiftPhase(new iC(this.scene,this.eggHatchData)),this.end()}hatchEggSilently(A){const s=this.scene.gameData.eggs.findIndex(I=>I.id===A.id);if(s===-1)return this.end();this.scene.gameData.eggs.splice(s,1);const n=this.generatePokemon(A).pokemon;n.fusionSpecies&&n.clearFusionSpecies(),n.species.subLegendary&&this.scene.validateAchv(lt.HATCH_SUB_LEGENDARY),n.species.legendary&&this.scene.validateAchv(lt.HATCH_LEGENDARY),n.species.mythical&&this.scene.validateAchv(lt.HATCH_MYTHICAL),n.isShiny()&&this.scene.validateAchv(lt.HATCH_SHINY)}generatePokemon(A){let s,R;return this.scene.executeWithSeedOffset(()=>{s=A.generatePlayerPokemon(this.scene),R=new kc(this.scene,s,A.eggMoveIndex),R.setDex(),this.eggHatchData.push(R)},A.id,FI.toString()),R}};L(Bg,"EggLapsePhase");let hr=Bg;const gg=class gg extends GE{constructor(A,s){super(A),this.modifierType=RM(s)}start(){super.start(),this.doReward().then(()=>this.end())}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();this.scene.addModifier(s).then(()=>{this.scene.playSound("item_fanfare"),this.scene.ui.showText(D.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name}),null,()=>A(),null,!0)})})}};L(gg,"ModifierRewardPhase");let gE=gg;const Kg=class Kg extends GE{constructor(A,s){super(A),this.moneyMultiplier=s}start(){const A=new ZE(this.scene.getWaveMoneyAmount(this.moneyMultiplier));this.scene.applyModifiers(mR,!0,A),this.scene.arena.getTag(ge.HAPPY_HOUR)&&(A.value*=2),this.scene.addMoney(A.value);const s=navigator.language||"en-US",R=A.value.toLocaleString(s),n=D.t("battle:moneyWon",{moneyAmount:R});this.scene.ui.showText(n,null,()=>this.end(),null,!0)}};L(Kg,"MoneyRewardPhase");let Zc=Kg;const mg=class mg extends GE{constructor(A){super(A)}start(){var R,n,I,a,r,S,o;this.scene.disableMenu=!0,this.scene.playBgm((R=this.scene.currentBattle.trainer)==null?void 0:R.config.victoryBgm),this.scene.unshiftPhase(new Zc(this.scene,(n=this.scene.currentBattle.trainer)==null?void 0:n.config.moneyMultiplier));const A=(I=this.scene.currentBattle.trainer)==null?void 0:I.config.modifierRewardFuncs;for(const l of A)this.scene.unshiftPhase(new gE(this.scene,l));if(this.scene.eventManager.isEventActive())for(const l of(a=this.scene.currentBattle.trainer)==null?void 0:a.config.eventRewardFuncs)this.scene.unshiftPhase(new gE(this.scene,l));const s=(r=this.scene.currentBattle.trainer)==null?void 0:r.config.trainerType;Ms.hasOwnProperty(U[s])&&!this.scene.validateVoucher(Ms[U[s]])&&(S=this.scene.currentBattle.trainer)!=null&&S.config.isBoss&&this.scene.unshiftPhase(new gE(this.scene,[$.VOUCHER_PLUS,$.VOUCHER_PLUS,$.VOUCHER_PLUS,$.VOUCHER_PREMIUM][Ms[U[s]].voucherType])),this.scene.arena.biomeType===N.SPACE&&(s===U.BREEDER||s===U.EXPERT_POKEMON_BREEDER)&&this.scene.validateAchv(lt.BREEDERS_IN_SPACE),this.scene.ui.showText(D.t("battle:trainerDefeated",{trainerName:(o=this.scene.currentBattle.trainer)==null?void 0:o.getName(Tt.NONE,!0)}),null,()=>{var h,P;const l=(h=this.scene.currentBattle.trainer)==null?void 0:h.getVictoryMessages();let C;this.scene.executeWithSeedOffset(()=>C=JA(l),this.scene.currentBattle.waveIndex),C=C;const M=L(()=>{const G=u;u=L(()=>{var d;return this.scene.ui.showDialogue(C,(d=this.scene.currentBattle.trainer)==null?void 0:d.getName(Tt.TRAINER,!0),null,G)},"showMessageOrEnd"),u()},"showMessage");let u=L(()=>this.end(),"showMessageOrEnd");if(l!=null&&l.length)if((P=this.scene.currentBattle.trainer)!=null&&P.config.hasCharSprite&&!this.scene.ui.shouldSkipDialogue(C)){const G=u;u=L(()=>this.scene.charSprite.hide().then(()=>this.scene.hideFieldOverlay(250).then(()=>G())),"showMessageOrEnd"),this.scene.showFieldOverlay(500).then(()=>{var d;return this.scene.charSprite.showCharacter((d=this.scene.currentBattle.trainer)==null?void 0:d.getKey(),aM(l[0])).then(()=>M())})}else M();else u()},null,!0),this.showEnemyTrainer()}};L(mg,"TrainerVictoryPhase");let IC=mg;const Fg=class Fg extends iE{constructor(A,s,R,n){super(A),this.expValue=s,this.useWaveIndexMultiplier=R,this.pokemonParticipantIds=n}start(){super.start(),this.scene.applyPartyExp(this.expValue,!1,this.useWaveIndexMultiplier,this.pokemonParticipantIds),this.end()}};L(Fg,"PartyExpPhase");let Xc=Fg;function DZ(E){const A=E.add.sprite(0,0,"encounter_exclaim");A.setName("exclamation"),E.field.add(A),E.field.moveTo(A,E.field.getAll().length-1),A.setVisible(!0),A.setPosition(110,68),E.tweens.add({targets:A,y:"-=25",ease:"Cubic.easeOut",duration:300,yoyo:!0,onComplete:L(()=>{E.time.delayedCall(800,()=>{E.field.remove(A,!0)})},"onComplete")}),E.playSound("battle_anims/GEN8- Exclaim",{volume:.7})}L(DZ,"doTrainerExclamation");async function $A(E,A){var l,C;const s=[],R=E.currentBattle;let n=(A==null?void 0:A.doubleBattle)??!1;const I=A==null?void 0:A.trainerType,a=A==null?void 0:A.trainerConfig;let r;if(!Ve(I)||a){E.currentBattle.mysteryEncounter.encounterMode=oE.TRAINER_BATTLE,E.currentBattle.trainer&&(E.currentBattle.trainer.setVisible(!1),E.currentBattle.trainer.destroy()),r=a||ZA[I];const M=r.doubleOnly||r.hasDouble&&!!A.doubleBattle;n=M;const u=Ve(A.female)?!!_e(2):A.female,h=new Ds(E,r.trainerType,M?OA.DOUBLE:u?OA.FEMALE:OA.DEFAULT,void 0,void 0,void 0,r);h.x+=300,h.setVisible(!1),E.field.add(h),E.currentBattle.trainer=h,s.push(h.loadAssets().then(()=>h.initSprite())),R.enemyLevels=E.currentBattle.trainer.getPartyLevels(E.currentBattle.waveIndex)}else{E.currentBattle.mysteryEncounter.encounterMode=oE.WILD_BATTLE;const M=A!=null&&A.pokemonConfigs&&A.pokemonConfigs.length>0?(l=A==null?void 0:A.pokemonConfigs)==null?void 0:l.length:n?2:1;R.enemyLevels=new Array(M).fill(null).map(()=>E.currentBattle.getLevelForWave())}E.getEnemyParty().forEach(M=>{E.field.remove(M,!0)}),R.enemyParty=[],R.double=n;const S=Ve(A.levelAdditiveModifier)?0:A.levelAdditiveModifier,o=Math.max(Math.round(E.currentBattle.waveIndex/10*S),0);R.enemyLevels=R.enemyLevels.map(M=>M+o),R.enemyLevels.forEach((M,u)=>{let h,P,G=!1;if((!Ve(I)||r)&&R.trainer)if(A!=null&&A.pokemonConfigs&&u<A.pokemonConfigs.length){const H=A.pokemonConfigs[u];M=H.level?H.level:M,P=H.dataSource,h=H.species,G=H.isBoss,R.enemyParty[u]=E.addEnemyPokemon(h,M,Tt.TRAINER,G,!1,P)}else R.enemyParty[u]=R.trainer.genPartyMember(u);else{if(A!=null&&A.pokemonConfigs&&u<A.pokemonConfigs.length){const H=A.pokemonConfigs[u];M=H.level?H.level:M,P=H.dataSource,h=H.species,G=H.isBoss,G&&(E.currentBattle.mysteryEncounter.encounterMode=oE.BOSS_BATTLE)}else h=E.randomSpecies(R.waveIndex,M,!0);R.enemyParty[u]=E.addEnemyPokemon(h,M,Tt.NONE,G,!1,P)}const d=E.getEnemyParty()[u];if(d.hp=d.getMaxHp(),d.status=null,d.passive=!1,u<(n?2:1)&&(d.setX(-66+d.getFieldPositionOffset()[0]),d.resetSummonData()),(Ve(A.countAsSeen)||A.countAsSeen)&&E.gameData.setPokemonSeen(d,!0,!!(I||r)),A!=null&&A.pokemonConfigs&&u<A.pokemonConfigs.length){const H=A.pokemonConfigs[u];if(Ve(H.nickname)||(d.nickname=btoa(unescape(encodeURIComponent(H.nickname)))),H.dataSource&&(d.id=_e(4294967296)),Ve(H.formIndex)||(d.formIndex=H.formIndex),Ve(H.shiny)||(d.shiny=H.shiny),d.shiny&&!Ve(H.variant)&&(d.variant=H.variant),Ve(H.customPokemonData)||(d.customPokemonData=H.customPokemonData),H.isBoss){let K=Ve(H.bossSegments)?E.getEncounterBossSegments(E.currentBattle.waveIndex,M,h,!0):H.bossSegments;Ve(H.bossSegmentModifier)||(K+=H.bossSegmentModifier),d.setBoss(!0,K)}H.passive&&(d.passive=!0),H.nature&&(d.nature=H.nature),H.ivs&&(d.ivs=H.ivs);const f=H.status;if(f){const K=Array.isArray(f)?f[0]:f,W=Array.isArray(f)?f[1]:f===Re.SLEEP?3:void 0;d.status=new VI(K,0,W)}if(d.summonData||(d.summonData=new kS),Ve(H.abilityIndex)||(d.abilityIndex=H.abilityIndex),Ve(H.gender)||(d.gender=H.gender,d.summonData.gender=H.gender),Ve(H.aiType)||(d.aiType=H.aiType),H!=null&&H.moveSet&&H.moveSet.length>0){const K=H.moveSet.map(W=>new Ot(W));d.moveset=K,d.summonData.moveset=K}H.tags&&H.tags.length>0&&H.tags.forEach(W=>d.addTag(W)),H.mysteryEncounterBattleEffects&&(d.mysteryEncounterBattleEffects=H.mysteryEncounterBattleEffects),d.primeSummonData(d.summonData),d.isShiny()&&!d.shinySparkle&&d.initShinySparkle(),d.initBattleInfo(),d.getBattleInfo().initInfo(d),d.generateName()}s.push(d.loadAssets()),console.log(`Pokemon: ${d.name}`,`Species ID: ${d.species.speciesId}`,`Stats: ${d.stats}`,`Ability: ${d.getAbility().name}`,`Passive Ability: ${d.getPassiveAbility().name}`)}),E.pushPhase(new wc(E,A.disableSwitch)),await Promise.all(s),R.enemyParty.forEach((M,u)=>{u<(n?2:1)&&(M.setVisible(!1),R.double&&M.setFieldPosition(u?nR.RIGHT:nR.LEFT),M.x+=300)});{sI(E.getEnemyField(),R.battleType===ht.TRAINER?PE.TRAINER:PE.WILD);const M=(C=A==null?void 0:A.pokemonConfigs)==null?void 0:C.filter(u=>u==null?void 0:u.modifierConfigs).map(u=>u.modifierConfigs);E.generateEnemyModifiers(M)}}L($A,"initBattleWithEnemyConfig");function Bo(E,A){return A=Array.isArray(A)?A:[A],Promise.all(A.map(s=>iL(E,s))).then(()=>IL(E,A))}L(Bo,"loadCustomMovesForEncounter");function jR(E,A,s=!0,R=!0){E.money=Math.min(Math.max(E.money+A,0),Number.MAX_SAFE_INTEGER),E.updateMoneyText(),E.animateMoneyChanged(!1),s&&E.playSound("se/buy"),R&&(A<0?E.queueMessage(D.t("mysteryEncounterMessages:paid_money",{amount:-A}),null,!0):E.queueMessage(D.t("mysteryEncounterMessages:receive_money",{amount:A}),null,!0))}L(jR,"updatePlayerMoney");function gt(E,A,s){const R=Object.keys($).find(I=>$[I]===A);if(!R)return null;let n=$[R]();return n=n.withIdFromFunc($[R]).withTierFromPool(PE.PLAYER,E.getPlayerParty()),n instanceof cE?n.generateType(E.getPlayerParty(),s):n}L(gt,"generateModifierType");function tE(E,A,s){const R=gt(E,A,s);return R&&new Os(R,0)}L(tE,"generateModifierTypeOption");function $E(E,A,s,R){return new Promise(n=>{const I=E.ui.getMode();E.ui.setMode(Oe.PARTY,us.SELECT,-1,(a,r)=>{a<E.getPlayerParty().length?E.ui.setMode(I).then(()=>{const S=E.getPlayerParty()[a],o=A(S);if(!o){E.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",S.getNameToRender()),n(!0);return}E.ui.setMode(Oe.MESSAGE).then(()=>{var M,u,h;const l=L(()=>{const P=o.map(d=>{const H=d.handler;return d.handler=()=>(H(),E.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",S.getNameToRender()),n(!0),!0),d}).concat({label:D.t("menu:cancel"),handler:L(()=>(E.ui.clearText(),E.ui.setMode(I),n(!1),!0),"handler"),onHover:L(()=>{$t(E,D.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),G={options:P,maxOptions:7,yOffset:0,supportHover:!0};P[0].onHover&&P[0].onHover(),E.ui.setModeWithoutClear(Oe.OPTION_SELECT,G,null,!0)},"displayOptions"),C=(h=(u=(M=E.currentBattle.mysteryEncounter)==null?void 0:M.selectedOption)==null?void 0:u.dialogue)==null?void 0:h.secondOptionPrompt;C?$t(E,C).then(()=>l()):l()})}):E.ui.setMode(I).then(()=>{s&&s(),n(!1)})},R)})}L($E,"selectPokemonForOption");function MZ(E,A,s,R,n){return new Promise(I=>{const a=E.ui.getMode(),r=L(C=>{E.ui.setMode(Oe.MESSAGE).then(()=>{s?$t(E,s).then(()=>{o[0].onHover&&o[0].onHover(),E.ui.setMode(Oe.OPTION_SELECT,C)}):(o[0].onHover&&o[0].onHover(),E.ui.setMode(Oe.OPTION_SELECT,C))})},"displayOptions"),S=L(C=>{E.ui.setMode(Oe.PARTY,us.SELECT,-1,(M,u)=>{M<E.getPlayerParty().length?E.ui.setMode(a).then(()=>{I({selectedPokemonIndex:M,selectedOptionIndex:C})}):r(l)},R)},"selectPokemonAfterOption"),o=A.map((C,M)=>{const u=C.handler;return C.handler=()=>(u(),S(M),!0),C}).concat({label:D.t("menu:cancel"),handler:L(()=>(E.ui.clearText(),E.ui.setMode(a),I(null),!0),"handler"),onHover:L(()=>{n&&n(),$t(E,D.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),l={options:o,maxOptions:7,yOffset:0,supportHover:!0};r(l)})}L(MZ,"selectOptionThenPokemon");function mt(E,A,s,R){E.currentBattle.mysteryEncounter.doEncounterRewards=n=>(R&&R(),A?n.unshiftPhase(new oO(n,0,void 0,A)):n.tryRemovePhase(I=>I instanceof oO),s&&s.forEach(I=>{new gi(I).addEggToGameData(n)}),!0)}L(mt,"setEncounterRewards");function rR(E,A,s,R=!0){const n=Array.isArray(A)?A:[A];E.currentBattle.mysteryEncounter.doEncounterExp=I=>(I.unshiftPhase(new Xc(I,s,R,new Set(n))),!0)}L(rR,"setEncounterExp");function QT(E,A){E.pushPhase(new sC(E,A))}L(QT,"initSubsequentOptionSelect");function dt(E,A=!1,s=oE.NO_BATTLE){E.currentBattle.mysteryEncounter.encounterMode=s,E.clearPhaseQueue(),E.clearPhaseQueueSplice(),h6(E,A)}L(dt,"leaveEncounterWithoutBattle");function h6(E,A=!1,s=!1){if(E.getPlayerParty().filter(I=>I.isAllowedInBattle()).length===0){E.clearPhaseQueue(),E.unshiftPhase(new CO(E));return}const n=E.currentBattle.mysteryEncounter;n.continuousEncounter||s||(n.encounterMode===oE.NO_BATTLE?(E.pushPhase(new kT(E,A)),E.pushPhase(new hr(E))):E.getEnemyParty().find(I=>n.encounterMode!==oE.TRAINER_BATTLE?I.isOnField():!(I!=null&&I.isFainted(!0)))||(E.pushPhase(new yi(E,!0)),n.encounterMode===oE.TRAINER_BATTLE&&E.pushPhase(new IC(E)),(E.gameMode.isEndless||!E.gameMode.isWaveFinal(E.currentBattle.waveIndex))&&(E.pushPhase(new kT(E,A)),n.doContinueEncounter||E.pushPhase(new hr(E)))))}L(h6,"handleMysteryEncounterVictory");function hZ(E,A=!1,s=!1){if(E.getPlayerParty().filter(I=>I.isAllowedInBattle()).length===0){E.clearPhaseQueue(),E.unshiftPhase(new CO(E));return}const n=E.currentBattle.mysteryEncounter;n.continuousEncounter||s||(n.encounterMode!==oE.NO_BATTLE&&E.pushPhase(new yi(E,!1)),E.pushPhase(new kT(E,A)),n.doContinueEncounter||E.pushPhase(new hr(E)))}L(hZ,"handleMysteryEncounterBattleFailed");function XA(E,A=!0,s=!0,R=750){return new Promise(n=>{const I=E.currentBattle.mysteryEncounter.introVisuals,a=E.getEnemyField();a&&(E.currentBattle.enemyParty=[]),I?(A||(I.setVisible(!0),I.x=244,I.y=60,I.alpha=0),E.tweens.add({targets:[I,a],x:`${A?"+":"-"}=16`,y:`${A?"-":"+"}=16`,alpha:A?0:1,ease:"Sine.easeInOut",duration:R,onComplete:L(()=>{A&&s&&(E.field.remove(I,!0),a.forEach(r=>{E.field.remove(r,!0)}),E.currentBattle.mysteryEncounter.introVisuals=void 0),n(!0)},"onComplete")})):n(!0)})}L(XA,"transitionMysteryEncounterIntroVisuals");function cZ(E){const A=E.currentBattle.mysteryEncounter;E.currentBattle.isBattleMysteryEncounter()&&A&&A.encounterMode!==oE.NO_BATTLE&&!A.startOfBattleEffectsComplete&&(A.startOfBattleEffects.forEach(R=>{let n;R.sourcePokemon?n=R.sourcePokemon:Ve(R.sourceBattlerIndex)||R.sourceBattlerIndex===Bt.ATTACKER||R.sourceBattlerIndex===Bt.ENEMY?n=E.getEnemyField()[0]:R.sourceBattlerIndex===Bt.ENEMY_2?n=E.getEnemyField()[1]:R.sourceBattlerIndex===Bt.PLAYER?n=E.getPlayerField()[0]:R.sourceBattlerIndex===Bt.PLAYER_2&&(n=E.getPlayerField()[1]),E.pushPhase(new HA(E,n,R.targets,R.move,R.followUp,R.ignorePp))}),E.pushPhase(new yc(E)),A.startOfBattleEffectsComplete=!0)}L(cZ,"handleMysteryEncounterBattleStartEffects");function _Z(E){const A=E.currentBattle.mysteryEncounter;return E.currentBattle.isBattleMysteryEncounter()&&A&&A.onTurnStart?A.onTurnStart(E):!1}L(_Z,"handleMysteryEncounterTurnStartEffects");const pg=class pg extends GE{constructor(A,s){super(A),this.loaded=!!s}start(){var I,a,r,S;super.start(),this.scene.updateGameInfo(),this.scene.initSession(),this.scene.eventTarget.dispatchEvent(new xh),this.scene.gameMode.isClassic&&this.scene.currentBattle.waveIndex>200&&this.scene.unshiftPhase(new CO(this.scene));const A=[],s=this.scene.currentBattle;s.isBattleMysteryEncounter()&&!s.mysteryEncounter&&this.scene.executeWithSeedOffset(()=>{const o=s.mysteryEncounterType;s.mysteryEncounter=this.scene.getMysteryEncounter(o)},s.waveIndex*16);const R=s.mysteryEncounter;R&&(this.scene.executeWithSeedOffset(()=>{R.onInit&&R.onInit(this.scene),R.populateDialogueTokensFromRequirements(this.scene)},s.waveIndex),R.encounterAnimations&&R.encounterAnimations.length>0&&A.push(eJ(this.scene,R.encounterAnimations).then(()=>EJ(this.scene,!0))),R.initIntroVisuals(this.scene),this.scene.field.add(R.introVisuals));let n=0;if((I=s.enemyLevels)==null||I.every((o,l)=>{var M,u;if(s.isBattleMysteryEncounter())return!1;if(!this.loaded)if(s.battleType===ht.TRAINER)s.enemyParty[l]=(M=s.trainer)==null?void 0:M.genPartyMember(l);else{let h=this.scene.randomSpecies(s.waveIndex,o,!0);this.scene.findModifier(P=>P instanceof Uo)&&!this.scene.gameMode.isBoss(s.waveIndex)&&this.scene.arena.biomeType!==N.END&&_e(10)===0&&(h=FZ(o)),s.enemyParty[l]=this.scene.addEnemyPokemon(h,o,Tt.NONE,!!this.scene.getEncounterBossSegments(s.waveIndex,o,h)),this.scene.currentBattle.battleSpec===TE.FINAL_BOSS&&(s.enemyParty[l].ivs=new Array(6).fill(31)),this.scene.getPlayerParty().slice(0,s.double?2:1).reverse().forEach(P=>{Ct(pU,P,null,!1,s.enemyParty[l])})}const C=this.scene.getEnemyParty()[l];return l<(s.double?2:1)&&(C.setX(-66+C.getFieldPositionOffset()[0]),C.resetSummonData()),this.loaded||this.scene.gameData.setPokemonSeen(C,!0,s.battleType===ht.TRAINER||((u=s==null?void 0:s.mysteryEncounter)==null?void 0:u.encounterMode)===oE.TRAINER_BATTLE),C.species.speciesId===e.ETERNATUS&&(this.scene.gameMode.isClassic&&(s.battleSpec===TE.FINAL_BOSS||this.scene.gameMode.isWaveFinal(s.waveIndex))?(s.battleSpec!==TE.FINAL_BOSS&&(C.formIndex=1,C.updateScale()),C.setBoss()):s.waveIndex%1e3||(C.formIndex=1,C.updateScale())),n+=C.getSpeciesForm().baseTotal,A.push(C.loadAssets()),console.log(`Pokemon: ${ee(C)}`,`Species ID: ${C.species.speciesId}`,`Stats: ${C.stats}`,`Ability: ${C.getAbility().name}`,`Passive Ability: ${C.getPassiveAbility().name}`),!0}),this.scene.getPlayerParty().filter(o=>o.isShiny()).length===or&&this.scene.validateAchv(lt.SHINY_PARTY),s.battleType===ht.TRAINER)A.push((a=s.trainer)==null?void 0:a.loadAssets().then(()=>{var o;return(o=s.trainer)==null?void 0:o.initSprite()}));else if(s.isBattleMysteryEncounter())(r=s.mysteryEncounter)!=null&&r.introVisuals&&A.push(s.mysteryEncounter.introVisuals.loadAssets().then(()=>s.mysteryEncounter.introVisuals.initSprite())),(S=s.mysteryEncounter)!=null&&S.loadAssets&&s.mysteryEncounter.loadAssets.length>0&&A.push(...s.mysteryEncounter.loadAssets),A.push(new Promise(o=>{this.scene.loadSe("GEN8- Exclaim","battle_anims","GEN8- Exclaim.wav"),this.scene.loadImage("encounter_exclaim","mystery-encounters"),this.scene.load.once(Phaser.Loader.Events.COMPLETE,()=>o()),this.scene.load.isLoading()||this.scene.load.start()}));else if(!(Ye.OPP_HEALTH_SEGMENTS_OVERRIDE>1)&&s.enemyParty.filter(l=>l.isBoss()).length>1)for(const l of s.enemyParty)l.isBoss()&&!l.isPopulatedFromDataSource&&(l.setBoss(!0,Math.ceil(l.bossSegments*(l.getSpeciesForm().baseTotal/n))),l.initBattleInfo());Promise.all(A).then(()=>{s.enemyParty.every((o,l)=>{var C;if(s.isBattleMysteryEncounter())return!1;if(l<(s.double?2:1)){if(s.battleType===ht.WILD){this.scene.field.add(o),s.seenEnemyPartyMemberIds.add(o.id);const M=this.scene.getPlayerPokemon();M!=null&&M.isOnField()&&this.scene.field.moveBelow(o,M),o.tint(0,.5)}else s.battleType===ht.TRAINER&&(o.setVisible(!1),(C=this.scene.currentBattle.trainer)==null||C.tint(0,.5));s.double&&o.setFieldPosition(l?nR.RIGHT:nR.LEFT)}return!0}),!this.loaded&&s.battleType!==ht.MYSTERY_ENCOUNTER&&(sI(this.scene.getEnemyField(),s.battleType===ht.TRAINER?PE.TRAINER:PE.WILD),this.scene.generateEnemyModifiers(),D1(this.scene,!1),this.scene.getEnemyField().forEach(o=>{M1(this.scene,o,!1)})),this.scene.ui.setMode(Oe.MESSAGE).then(()=>{this.loaded?(this.doEncounter(),this.scene.resetSeed()):(this.trySetWeatherIfNewBiome(),this.scene.gameData.saveAll(this.scene,!0,s.waveIndex%5===1||(this.scene.lastSavePlayTime??0)>=300).then(o=>{if(this.scene.disableMenu=!1,!o)return this.scene.reset(!0);this.doEncounter(),this.scene.resetSeed()}))})})}doEncounter(){var I,a;this.scene.playBgm(void 0,!0),this.scene.updateModifiers(!1),this.scene.setFieldScale(1);const{battleType:A,waveIndex:s}=this.scene.currentBattle;this.scene.isMysteryEncounterValidForWave(A,s)&&!this.scene.currentBattle.isBattleMysteryEncounter()&&(this.scene.mysteryEncounterSaveData.encounterSpawnChance+=mX);for(const r of this.scene.getPlayerParty())r&&r.resetBattleData();const R=this.scene.getEnemyField();this.scene.tweens.add({targets:[this.scene.arenaEnemy,this.scene.currentBattle.trainer,R,this.scene.arenaPlayer,this.scene.trainer].flat(),x:L((r,S,o,l)=>l<2+R.length?o+300:o-300,"x"),duration:2e3,onComplete:L(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")});const n=(a=(I=this.scene.currentBattle)==null?void 0:I.mysteryEncounter)==null?void 0:a.introVisuals;if(n){const r=n.enterFromRight;r&&(n.x+=500),this.scene.tweens.add({targets:n,x:r?"-=200":"+=300",duration:2e3})}}getEncounterMessage(){var s,R;const A=this.scene.getEnemyField();return this.scene.currentBattle.battleSpec===TE.FINAL_BOSS?D.t("battle:bossAppeared",{bossName:ee(A[0])}):this.scene.currentBattle.battleType===ht.TRAINER?this.scene.currentBattle.double?D.t("battle:trainerAppearedDouble",{trainerName:(s=this.scene.currentBattle.trainer)==null?void 0:s.getName(Tt.NONE,!0)}):D.t("battle:trainerAppeared",{trainerName:(R=this.scene.currentBattle.trainer)==null?void 0:R.getName(Tt.NONE,!0)}):A.length===1?D.t("battle:singleWildAppeared",{pokemonName:A[0].getNameToRender()}):D.t("battle:multiWildAppeared",{pokemonName1:A[0].getNameToRender(),pokemonName2:A[1].getNameToRender()})}doEncounterCommon(A=!0){var R,n;const s=this.scene.getEnemyField();if(this.scene.currentBattle.battleType===ht.WILD)s.forEach(I=>{I.untint(100,"Sine.easeOut"),I.cry(),I.showInfo(),I.isShiny()&&this.scene.validateAchv(lt.SEE_SHINY)}),this.scene.updateFieldScale(),A?this.scene.ui.showText(this.getEncounterMessage(),null,()=>this.end(),1500):this.end();else if(this.scene.currentBattle.battleType===ht.TRAINER){const I=this.scene.currentBattle.trainer;I==null||I.untint(100,"Sine.easeOut"),I==null||I.playAnim();const a=L(()=>{this.scene.currentBattle.started=!0,this.scene.playBgm(void 0),this.scene.pbTray.showPbTray(this.scene.getPlayerParty()),this.scene.pbTrayEnemy.showPbTray(this.scene.getEnemyParty());const S=L(()=>{this.hideEnemyTrainer();const o=this.scene.getEnemyParty().filter(l=>!l.isFainted()).length;this.scene.unshiftPhase(new XE(this.scene,0,!1)),this.scene.currentBattle.double&&o>1&&this.scene.unshiftPhase(new XE(this.scene,1,!1)),this.end()},"doTrainerSummon");A?this.scene.ui.showText(this.getEncounterMessage(),null,S,1500,!0):S()},"doSummon"),r=(R=this.scene.currentBattle.trainer)==null?void 0:R.getEncounterMessages();if(!(r!=null&&r.length))a();else{let S;this.scene.executeWithSeedOffset(()=>S=JA(r),this.scene.currentBattle.waveIndex),S=S;const o=L(()=>{this.scene.ui.showDialogue(S,I==null?void 0:I.getName(Tt.NONE,!0),null,()=>{this.scene.charSprite.hide().then(()=>this.scene.hideFieldOverlay(250).then(()=>a()))})},"showDialogueAndSummon");(n=this.scene.currentBattle.trainer)!=null&&n.config.hasCharSprite&&!this.scene.ui.shouldSkipDialogue(S)?this.scene.showFieldOverlay(500).then(()=>this.scene.charSprite.showCharacter(I==null?void 0:I.getKey(),aM(r[0])).then(()=>o())):o()}}else if(this.scene.currentBattle.isBattleMysteryEncounter()&&this.scene.currentBattle.mysteryEncounter){const I=this.scene.currentBattle.mysteryEncounter,a=I.introVisuals;a==null||a.playAnim(),I.onVisualsStart?I.onVisualsStart(this.scene):I.spriteConfigs&&a&&a.playShinySparkles();const r=L(()=>{const o=L(()=>{this.scene.ui.clearText(),this.scene.ui.getMessageHandler().hideNameText(),this.scene.unshiftPhase(new sC(this.scene)),this.end()},"doShowEncounterOptions");if(A){const l=I.dialogue.intro;if(!l)o();else{let M=0;const u=L(()=>{const h=M===l.length-1?o:u,P=l[M],G=mA(this.scene,P==null?void 0:P.speaker),d=mA(this.scene,P.text);M++,G?this.scene.ui.showDialogue(d,G,null,h,0,M===1?750:0):this.scene.ui.showText(d,null,h,M===1?750:0,!0)},"showNextDialogue");l.length>0&&u()}}else o()},"doEncounter"),S=D.t("battle:mysteryEncounterAppeared");S?(DZ(this.scene),this.scene.ui.showDialogue(S,"???",null,()=>{this.scene.charSprite.hide().then(()=>this.scene.hideFieldOverlay(250).then(()=>r()))})):r()}}end(){const A=this.scene.getEnemyField();if(A.forEach((s,R)=>{if(s.isShiny()&&this.scene.unshiftPhase(new VT(this.scene,Bt.ENEMY+R)),s.species.speciesId===e.ETERNATUS&&(this.scene.gameMode.isBattleClassicFinalBoss(this.scene.currentBattle.waveIndex)||this.scene.gameMode.isEndlessMajorBoss(this.scene.currentBattle.waveIndex))){const n=this.scene.findModifier(I=>I instanceof Ca,!1);n&&(this.scene.removeModifier(n,!0),n.setTransferrableFalse(),this.scene.addEnemyModifier(n))}}),![ht.TRAINER,ht.MYSTERY_ENCOUNTER].includes(this.scene.currentBattle.battleType)){A.map(R=>this.scene.pushConditionalPhase(new QI(this.scene,R.getBattlerIndex()),()=>{if(!this.scene.getPlayerParty().length)return!1;const n=this.scene.getPlayerParty().filter(a=>a.isOnField()).length,I=Math.min(this.scene.getPlayerParty().filter(a=>!a.isFainted()).length,2);return this.scene.currentBattle.double?n===I:n===1}));const s=this.scene.findModifier(R=>R instanceof ua);s&&A.map(R=>this.scene.pushPhase(new bT(this.scene,R.getBattlerIndex(),Math.min(s.getStackCount()*2,6))))}if(!this.loaded){const s=this.scene.getPokemonAllowedInBattle();if(s[0].isOnField()||this.scene.pushPhase(new XE(this.scene,0)),this.scene.currentBattle.double?s.length>1&&(this.scene.pushPhase(new lO(this.scene,!0)),s[1].isOnField()||this.scene.pushPhase(new XE(this.scene,1))):(s.length>1&&s[1].isOnField()&&this.scene.pushPhase(new Mr(this.scene,1)),this.scene.pushPhase(new lO(this.scene,!1))),this.scene.currentBattle.battleType!==ht.TRAINER&&(this.scene.currentBattle.waveIndex>1||!this.scene.gameMode.isDaily)){const R=this.scene.currentBattle.double?2:1;s.length>R&&(this.scene.pushPhase(new on(this.scene,0,this.scene.currentBattle.double)),this.scene.currentBattle.double&&this.scene.pushPhase(new on(this.scene,1,this.scene.currentBattle.double)))}}Wi(this.scene,JR.Access_Menu).then(()=>super.end())}tryOverrideForBattleSpec(){switch(this.scene.currentBattle.battleSpec){case TE.FINAL_BOSS:const A=this.scene.getEnemyPokemon();return this.scene.ui.showText(this.getEncounterMessage(),null,()=>{const s="battleSpecDialogue:encounter";if(this.scene.ui.shouldSkipDialogue(s))console.log(`Dialogue ${s} skipped`),this.doEncounterCommon(!1);else{const R=5643853+this.scene.gameData.gameStats.classicSessionsPlayed,n=!D.exists(s,{fallbackLng:[]})||D.resolvedLanguage==="en"?D.t("battleSpecDialogue:key",{count:R,ordinal:!0}):"",I=R.toLocaleString()+n,a=this.scene.gameData.gender??vt.UNSET,r=vt[a].toLowerCase(),S=D.t(s,{context:r,cycleCount:I});this.scene.gameData.getSeenDialogues()[s]||this.scene.gameData.saveSeenDialogue(s),this.scene.ui.showDialogue(S,A==null?void 0:A.species.name,null,()=>{this.doEncounterCommon(!1)})}},1500,!0),!0}return!1}trySetWeatherIfNewBiome(){this.loaded||this.scene.arena.trySetWeather(i6(this.scene.arena),!1)}};L(pg,"EncounterPhase");let cr=pg;const Wg=class Wg extends iE{constructor(A){super(A)}start(){super.start(),this.scene.ui.getMessageHandler().bg.setVisible(!1),this.scene.ui.getMessageHandler().nameBoxContainer.setVisible(!1),this.endCard=this.scene.add.image(0,0,`end_${this.scene.gameData.gender===vt.FEMALE?"f":"m"}`),this.endCard.setOrigin(0),this.endCard.setScale(.5),this.scene.field.add(this.endCard),this.text=le(this.scene,this.scene.game.canvas.width/12,this.scene.game.canvas.height/6-16,D.t("battle:congratulations"),X.SUMMARY,{fontSize:"128px"}),this.text.setOrigin(.5),this.scene.field.add(this.text),this.scene.ui.clearText(),this.scene.ui.fadeIn(1e3).then(()=>{this.scene.ui.showText("",null,()=>{this.scene.ui.getMessageHandler().bg.setVisible(!0),this.end()},null,!0)})}};L(Wg,"EndCardPhase");let aC=Wg;const Yg=class Yg extends gE{constructor(A,s){super(A,s)}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();this.scene.addModifier(s).then(()=>{this.scene.playSound("level_up_fanfare"),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.fadeIn(250).then(()=>{this.scene.ui.showText(D.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name}),null,()=>{this.scene.time.delayedCall(1500,()=>this.scene.arenaBg.setVisible(!0)),A()},null,!0,1500)})})})}};L(Yg,"GameOverModifierRewardPhase");let Qc=Yg;function PZ(){return new Promise((E,A)=>{OO.daily.getSeed().then(s=>{E(s)})})}L(PZ,"fetchDailyRunSeed");function GZ(E,A){const s=[];return E.executeWithSeedOffset(()=>{const R=E.gameMode.getStartingLevel();if(/\d{18}$/.test(A)){for(let I=0;I<3;I++){const a=6+I*6,r=Bi(parseInt(A.slice(a,a+4)),parseInt(A.slice(a+4,a+6)));s.push(Bx(E,r,R))}return}const n=[];n.push(Math.min(Math.round(3.5+Math.abs(ph(1))),8)),n.push(_e(9-n[0],1)),n.push(10-(n[0]+n[1]));for(let I=0;I<n.length;I++){const a=n[I],r=Object.keys(KA).map(l=>parseInt(l)).filter(l=>KA[l]===a),S=xe(JA(r)),o=xe(S.getTrainerSpeciesForLevel(R,!0,we.STRONGER));s.push(Bx(E,o,R))}},0,A),s}L(GZ,"getDailyRunStarters");function Bx(E,A,s){const R=A instanceof c?A:xe(A.speciesId),n=A instanceof c?void 0:A.formIndex,I=new wE(E,R,s,void 0,n,void 0,void 0,void 0,void 0,void 0,void 0),a={species:R,dexAttr:I.getDexAttr(),abilityIndex:I.abilityIndex,passive:!1,nature:I.getNature(),pokerus:I.pokerus};return I.destroy(),a}L(Bx,"getDailyRunStarter");const gx=5,Kx=3;var rC=(E=>(E[E.LOAD=0]="LOAD",E[E.SAVE=1]="SAVE",E))(rC||{});const yg=class yg extends ps{constructor(A){super(A,Oe.SAVE_SLOT),this.scrollCursor=0}setup(){const A=this.getUi();this.saveSlotSelectContainer=this.scene.add.container(0,0),this.saveSlotSelectContainer.setVisible(!1),A.add(this.saveSlotSelectContainer);const s=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,-this.scene.game.canvas.height/6,26720);s.setOrigin(0,0),this.saveSlotSelectContainer.add(s),this.sessionSlotsContainerInitialY=-this.scene.game.canvas.height/6+8,this.sessionSlotsContainer=this.scene.add.container(8,this.sessionSlotsContainerInitialY),this.saveSlotSelectContainer.add(this.sessionSlotsContainer),this.saveSlotSelectMessageBoxContainer=this.scene.add.container(0,0),this.saveSlotSelectMessageBoxContainer.setVisible(!1),this.saveSlotSelectContainer.add(this.saveSlotSelectMessageBoxContainer),this.saveSlotSelectMessageBox=_t(this.scene,1,-1,318,28),this.saveSlotSelectMessageBox.setOrigin(0,1),this.saveSlotSelectMessageBoxContainer.add(this.saveSlotSelectMessageBox),this.message=le(this.scene,8,8,"",X.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.saveSlotSelectMessageBoxContainer.add(this.message),this.sessionSlots=[]}show(A){return A.length<2||!(A[1]instanceof Function)?!1:(super.show(A),this.uiMode=A[0],this.saveSlotSelectCallback=A[1],this.saveSlotSelectContainer.setVisible(!0),this.populateSessionSlots(),this.setScrollCursor(0),this.setCursor(0),!0)}processInput(A){const s=this.getUi();let R=!1,n=!1;if(A===b.ACTION||A===b.CANCEL){const I=this.saveSlotSelectCallback;if(A===b.ACTION){const a=this.cursor+this.scrollCursor;if(this.uiMode===0&&!this.sessionSlots[a].hasData)n=!0;else{switch(this.uiMode){case 0:this.saveSlotSelectCallback=null,I&&I(a);break;case 1:const r=L(()=>{const S=this.saveSlotSelectCallback;this.saveSlotSelectCallback=null,s.revertMode(),s.showText("",0),s.setMode(Oe.MESSAGE),S&&S(a)},"saveAndCallback");if(this.sessionSlots[a].hasData)s.showText(D.t("saveSlotSelectUiHandler:overwriteData"),null,()=>{s.setOverlayMode(Oe.CONFIRM,()=>{this.scene.gameData.deleteSession(a).then(S=>{S===!1?this.scene.reset(!0):r()})},()=>{s.revertMode(),s.showText("",0)},!1,0,19,2e3)});else if(this.sessionSlots[a].hasData===!1)r();else return!1;break}R=!0}}else this.saveSlotSelectCallback=null,I&&I(-1),R=!0}else{const I=this.cursor+this.scrollCursor;switch(A){case b.UP:this.cursor?R=this.cursor===0?this.setCursor(this.cursor):this.setCursor(this.cursor-1,I):this.scrollCursor&&(R=this.setScrollCursor(this.scrollCursor-1,I));break;case b.DOWN:this.cursor<Kx-1?R=this.setCursor(this.cursor+1,I):this.scrollCursor<gx-Kx&&(R=this.setScrollCursor(this.scrollCursor+1,I));break;case b.RIGHT:this.sessionSlots[I].hasData&&this.sessionSlots[I].saveData&&(this.scene.ui.setOverlayMode(Oe.RUN_INFO,this.sessionSlots[I].saveData,a1.SESSION_PREVIEW),R=!0)}}return R?s.playSelect():n&&s.playError(),R||n}populateSessionSlots(){for(let A=0;A<gx;A++){const s=new $c(this.scene,A);this.scene.add.existing(s),this.sessionSlotsContainer.add(s),this.sessionSlots.push(s),s.load().then(R=>{R&&this.cursor+this.scrollCursor===A&&this.setCursor(A)})}}showText(A,s,R,n,I,a){super.showText(A,s,R,n,I,a),(A==null?void 0:A.indexOf(`
`))===-1?(this.saveSlotSelectMessageBox.setSize(318,28),this.message.setY(-22)):(this.saveSlotSelectMessageBox.setSize(318,42),this.message.setY(-37)),this.saveSlotSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}setCursor(A,s){const R=super.setCursor(A);if(!this.cursorObj){this.cursorObj=this.scene.add.container(0,0);const a=this.scene.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,44,6,6,6,6),r=this.scene.add.image(0,0,"cursor");r.setPosition(160,0),r.setName("rightArrow"),this.cursorObj.add([a,r]),this.sessionSlotsContainer.add(this.cursorObj)}const n=A+this.scrollCursor,I=n*56;if(this.sessionSlots[n]&&this.cursorObj){const a=this.sessionSlots[n].hasData;a?(this.cursorObj.setPosition(145,26+I),this.sessionSlots[n].setPosition(-6,I)):(this.cursorObj.setPosition(151,26+I),this.sessionSlots[n].setPosition(0,I)),this.setArrowVisibility(a)}return Ve(s)||this.revertSessionSlot(s),R}revertSessionSlot(A){const s=this.sessionSlots[A];s&&s.setPosition(0,A*56)}setArrowVisibility(A){var s;this.cursorObj&&((s=this.cursorObj)==null?void 0:s.getByName("rightArrow")).setVisible(A)}setScrollCursor(A,s){const R=A!==this.scrollCursor;return R&&(this.scrollCursor=A,this.setCursor(this.cursor,s),this.scene.tweens.add({targets:this.sessionSlotsContainer,y:this.sessionSlotsContainerInitialY-56*A,duration:Et(325),ease:"Sine.easeInOut"})),R}clear(){super.clear(),this.saveSlotSelectContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.saveSlotSelectCallback=null,this.clearSessionSlots()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearSessionSlots(){this.sessionSlots.splice(0,this.sessionSlots.length),this.sessionSlotsContainer.removeAll(!0)}};L(yg,"SaveSlotSelectUiHandler");let Jc=yg;const wg=class wg extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,s*56),this.slotId=s,this.setup()}setup(){const A=_t(this.scene,0,0,304,52);this.add(A),this.loadingLabel=le(this.scene,152,26,D.t("saveSlotSelectUiHandler:loading"),X.WINDOW),this.loadingLabel.setOrigin(.5,.5),this.add(this.loadingLabel)}async setupWithData(A){this.remove(this.loadingLabel,!0);const s=le(this.scene,8,5,`${GR.getModeName(A.gameMode)||D.t("gameMode:unkown")} - ${D.t("saveSlotSelectUiHandler:wave")} ${A.waveIndex}`,X.WINDOW);this.add(s);const R=le(this.scene,8,19,new Date(A.timestamp).toLocaleString(),X.WINDOW);this.add(R);const n=le(this.scene,8,33,qd(A.playTime),X.WINDOW);this.add(n);const I=this.scene.add.container(144,4);A.party.forEach((S,o)=>{const l=this.scene.add.container(26*o,0);l.setScale(.75);const C=S.toPokemon(this.scene),M=this.scene.addPokemonIcon(C,0,0,0,0),u=le(this.scene,32,20,`${D.t("saveSlotSelectUiHandler:lv")}${za(C.level,1e3)}`,X.PARTY,{fontSize:"54px",color:"#f8f8f8"});u.setShadow(0,0,void 0),u.setStroke("#424242",14),u.setOrigin(1,0),l.add(M),l.add(u),I.add(l),C.destroy()}),this.add(I);const a=this.scene.add.container(148,30);a.setScale(.5);let r=0;for(const S of A.modifiers){const o=S.toModifier(this.scene,Ul[S.className]);if(o instanceof Ht)continue;const l=o==null?void 0:o.getIcon(this.scene,!1);if(l&&(l.setPosition(24*r,0),a.add(l)),++r===12)break}this.add(a)}load(){return new Promise(A=>{this.scene.gameData.getSession(this.slotId).then(async s=>{if(this.active){if(!s){this.hasData=!1,this.loadingLabel.setText(D.t("saveSlotSelectUiHandler:empty")),A(!1);return}this.hasData=!0,this.saveData=s,await this.setupWithData(s),A(!0)}})})}};L(wg,"SessionSlot");let $c=wg;const vg=class vg extends iE{constructor(A){super(A)}start(){super.start(),this.scene.playBgm("menu"),this.scene.ui.setMode(Oe.CHALLENGE_SELECT)}};L(vg,"SelectChallengePhase");let LC=vg;const Vg=class Vg extends iE{constructor(A){super(A)}start(){super.start(),this.scene.playBgm("menu"),this.scene.ui.setMode(Oe.STARTER_SELECT,A=>{this.scene.ui.clearText(),this.scene.ui.setMode(Oe.SAVE_SLOT,rC.SAVE,s=>{if(s===-1)return this.scene.clearPhaseQueue(),this.scene.pushPhase(new $I(this.scene)),this.end();this.scene.sessionSlotId=s,this.initBattle(A)})})}initBattle(A){const s=this.scene.getPlayerParty(),R=[];A.forEach((n,I)=>{!I&&Ye.STARTER_SPECIES_OVERRIDE&&(n.species=xe(Ye.STARTER_SPECIES_OVERRIDE));const a=this.scene.gameData.getSpeciesDexAttrProps(n.species,n.dexAttr);let r=Math.min(a.formIndex,Math.max(n.species.forms.length-1,0));n.species.speciesId in Ye.STARTER_FORM_OVERRIDES&&n.species.forms[Ye.STARTER_FORM_OVERRIDES[n.species.speciesId]]&&(r=Ye.STARTER_FORM_OVERRIDES[n.species.speciesId]);let S=n.species.malePercent!==null?a.female?je.FEMALE:je.MALE:je.GENDERLESS;Ye.GENDER_OVERRIDE!==null&&(S=Ye.GENDER_OVERRIDE);const o=this.scene.gameData.dexData[n.species.speciesId].ivs.slice(0),l=this.scene.addPlayerPokemon(n.species,this.scene.gameMode.getStartingLevel(),n.abilityIndex,r,S,a.shiny,a.variant,o,n.nature);n.moveset&&l.tryPopulateMoveset(n.moveset),n.passive&&(l.passive=!0),l.luck=this.scene.gameData.getDexAttrLuck(this.scene.gameData.dexData[n.species.speciesId].caughtAttr),n.pokerus&&(l.pokerus=!0),n.nickname&&(l.nickname=n.nickname),(this.scene.gameMode.isSplicedOnly||Ye.STARTER_FUSION_OVERRIDE)&&l.generateFusionSpecies(!0),l.setVisible(!1),Fs(this.scene.gameMode,Us.STARTER_MODIFY,l),s.push(l),R.push(l.loadAssets())}),D1(this.scene),M1(this.scene,s[0]),Promise.all(R).then(()=>{$R.fadeOut(this.scene,this.scene.sound.get("menu"),500,!0),this.scene.time.delayedCall(500,()=>this.scene.playBgm()),this.scene.gameMode.isClassic?this.scene.gameData.gameStats.classicSessionsPlayed++:this.scene.gameData.gameStats.endlessSessionsPlayed++,this.scene.newBattle(),this.scene.arena.init(),this.scene.sessionPlayTime=0,this.scene.lastSavePlayTime=0,this.scene.getPlayerParty().forEach(n=>{this.scene.triggerPokemonFormChange(n,xI)}),this.end()})}};L(Vg,"SelectStarterPhase");let NC=Vg;const LN=class LN extends iE{constructor(A){super(A),this.loaded=!1}start(){super.start(),this.scene.ui.clearText(),this.scene.ui.fadeIn(250),this.scene.playBgm("title",!0),this.scene.gameData.getSession((rt==null?void 0:rt.lastSessionSlot)??-1).then(A=>{if(A){this.lastSessionData=A;const R=`${Fo(A.arena.biome)}_bg`;this.scene.arenaBg.setTexture(R)}this.showOptions()}).catch(A=>{console.error(A),this.showOptions()})}showOptions(){const A=[];rt&&rt.lastSessionSlot>-1&&A.push({label:D.t("continue",{ns:"menu"}),handler:L(()=>(this.loadSaveSlot(this.lastSessionData||!rt?-1:rt.lastSessionSlot),!0),"handler")}),A.push({label:D.t("menu:newGame"),handler:L(()=>{const R=L(I=>{this.gameMode=I,this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.clearText(),this.end()},"setModeAndEnd"),{gameData:n}=this.scene;if(n.isUnlocked(ms.ENDLESS_MODE)){const I=[{label:GR.getModeName(SA.CLASSIC),handler:L(()=>(R(SA.CLASSIC),!0),"handler")},{label:GR.getModeName(SA.CHALLENGE),handler:L(()=>(R(SA.CHALLENGE),!0),"handler")},{label:GR.getModeName(SA.ENDLESS),handler:L(()=>(R(SA.ENDLESS),!0),"handler")}];n.isUnlocked(ms.SPLICED_ENDLESS_MODE)&&I.push({label:GR.getModeName(SA.SPLICED_ENDLESS),handler:L(()=>(R(SA.SPLICED_ENDLESS),!0),"handler")}),I.push({label:D.t("menu:cancel"),handler:L(()=>(this.scene.clearPhaseQueue(),this.scene.pushPhase(new LN(this.scene)),super.end(),!0),"handler")}),this.scene.ui.showText(D.t("menu:selectGameMode"),null,()=>this.scene.ui.setOverlayMode(Oe.OPTION_SELECT,{options:I}))}else this.gameMode=SA.CLASSIC,this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.clearText(),this.end();return!0},"handler")},{label:D.t("menu:loadGame"),handler:L(()=>(this.scene.ui.setOverlayMode(Oe.SAVE_SLOT,rC.LOAD,R=>{if(R===-1)return this.showOptions();this.loadSaveSlot(R)}),!0),"handler")},{label:D.t("menu:dailyRun"),handler:L(()=>(this.initDailyRun(),!0),"handler"),keepOpen:!0},{label:D.t("menu:settings"),handler:L(()=>(this.scene.ui.setOverlayMode(Oe.SETTINGS),!0),"handler"),keepOpen:!0});const s={options:A,noCancel:!0,yOffset:47};this.scene.ui.setMode(Oe.TITLE,s)}loadSaveSlot(A){this.scene.sessionSlotId=A>-1||!rt?A:rt.lastSessionSlot,this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.resetModeChain(),this.scene.gameData.loadSession(this.scene,A,A===-1?this.lastSessionData:void 0).then(s=>{s?(this.loaded=!0,this.scene.ui.showText(D.t("menu:sessionSuccess"),null,()=>this.end())):this.end()}).catch(s=>{console.error(s),this.scene.ui.showText(D.t("menu:failedToLoadSession"),null)})}initDailyRun(){this.scene.ui.setMode(Oe.SAVE_SLOT,rC.SAVE,A=>{if(this.scene.clearPhaseQueue(),A===-1)return this.scene.pushPhase(new LN(this.scene)),super.end();this.scene.sessionSlotId=A;const s=L(R=>{this.scene.gameMode=dl(SA.DAILY),this.scene.setSeed(R),this.scene.resetSeed(0),this.scene.money=this.scene.gameMode.getStartingMoney();const n=GZ(this.scene,R),I=this.scene.gameMode.getStartingLevel(),a=this.scene.getPlayerParty(),r=[];for(const o of n){const l=this.scene.gameData.getSpeciesDexAttrProps(o.species,o.dexAttr),C=Math.min(l.formIndex,Math.max(o.species.forms.length-1,0)),M=o.species.malePercent!==null?l.female?je.FEMALE:je.MALE:je.GENDERLESS,u=this.scene.addPlayerPokemon(o.species,I,o.abilityIndex,C,M,l.shiny,l.variant,void 0,o.nature);u.setVisible(!1),a.push(u),r.push(u.loadAssets())}sI(a,PE.DAILY_STARTER);const S=Array(3).fill(null).map(()=>$.EXP_SHARE().withIdFromFunc($.EXP_SHARE).newModifier()).concat(Array(3).fill(null).map(()=>$.GOLDEN_EXP_CHARM().withIdFromFunc($.GOLDEN_EXP_CHARM).newModifier())).concat([$.MAP().withIdFromFunc($.MAP).newModifier()]).concat(V7(a)).filter(o=>o!==null);for(const o of S)this.scene.addModifier(o,!0,!1,!1,!0);this.scene.updateModifiers(!0,!0),Promise.all(r).then(()=>{this.scene.time.delayedCall(500,()=>this.scene.playBgm()),this.scene.gameData.gameStats.dailyRunSessionsPlayed++,this.scene.newArena(this.scene.gameMode.getStartingBiome(this.scene)),this.scene.newBattle(),this.scene.arena.init(),this.scene.sessionPlayTime=0,this.scene.lastSavePlayTime=0,this.end()})},"generateDaily");!qa||Vb?PZ().then(R=>{if(R)s(R);else throw new Error("Daily run seed is null!")}).catch(R=>{console.error(`Failed to load daily run:
`,R)}):s(btoa(new Date().toISOString().substring(0,10)))})}end(){if(!this.loaded&&!this.scene.gameMode.isDaily?(this.scene.arena.preloadBgm(),this.scene.gameMode=dl(this.gameMode),this.gameMode===SA.CHALLENGE?this.scene.pushPhase(new LC(this.scene)):this.scene.pushPhase(new NC(this.scene)),this.scene.newArena(this.scene.gameMode.getStartingBiome(this.scene))):this.scene.playBgm(),this.scene.pushPhase(new cr(this.scene,this.loaded)),this.loaded){const A=this.scene.getPokemonAllowedInBattle().length;if(this.scene.pushPhase(new XE(this.scene,0,!0,!0)),this.scene.currentBattle.double&&A>1&&this.scene.pushPhase(new XE(this.scene,1,!0,!0)),this.scene.currentBattle.battleType!==ht.TRAINER&&(this.scene.currentBattle.waveIndex>1||!this.scene.gameMode.isDaily)){const s=this.scene.currentBattle.double?2:1;A>s&&(this.scene.pushPhase(new on(this.scene,0,this.scene.currentBattle.double)),this.scene.currentBattle.double&&this.scene.pushPhase(new on(this.scene,1,this.scene.currentBattle.double)))}}for(const A of Object.keys(this.scene.gameData.achvUnlocks))Ms.hasOwnProperty(A)&&A!=="CLASSIC_VICTORY"&&this.scene.validateVoucher(Ms[A]);super.end()}};L(LN,"TitlePhase");let $I=LN;const xg=class xg extends iE{constructor(A,s){super(A),this.endCardPhase=s}start(){super.start();const A=L(()=>{this.scene.gameData.saveAll(this.scene,!0,!0,!0).then(s=>{if(!s)return this.scene.reset(!0);this.scene.gameData.tryClearSession(this.scene,this.scene.sessionSlotId).then(R=>{if(!R[0])return this.scene.reset(!0);this.scene.reset(),this.scene.unshiftPhase(new $I(this.scene)),this.end()})})},"saveAndReset");this.endCardPhase?this.scene.ui.fadeOut(500).then(()=>{var s,R;this.scene.ui.getMessageHandler().bg.setVisible(!0),(s=this.endCardPhase)==null||s.endCard.destroy(),(R=this.endCardPhase)==null||R.text.destroy(),A()}):A()}};L(xg,"PostGameOverPhase");let zc=xg;const bg=class bg extends gE{constructor(A,s,R){super(A,s),this.species=R}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();this.scene.addModifier(s).then(()=>{this.scene.playSound("level_up_fanfare"),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:beatModeFirstTime",{speciesName:this.species.name,gameMode:this.scene.gameMode.getName(),newModifier:s==null?void 0:s.type.name}),null,()=>{A()},null,!0,1500)})})}};L(bg,"RibbonModifierRewardPhase");let qc=bg;const kg=class kg extends iE{constructor(A,s){super(A),this.unlockable=s}start(){this.scene.time.delayedCall(2e3,()=>{this.scene.gameData.unlocks[this.unlockable]=!0,this.scene.playSound("level_up_fanfare"),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:unlockedSomething",{unlockedThing:f7(this.unlockable)}),null,()=>{this.scene.time.delayedCall(1500,()=>this.scene.arenaBg.setVisible(!0)),this.end()},null,!0,1500)})}};L(kg,"UnlockPhase");let ya=kg;const Zg=class Zg extends GE{constructor(A,s=!1){super(A),this.firstRibbons=[],this.isVictory=s}start(){var A;if(super.start(),this.scene.gameMode.isClassic&&this.scene.currentBattle.waveIndex>200&&(this.isVictory=!0),!this.isVictory&&((A=this.scene.currentBattle.mysteryEncounter)!=null&&A.onGameOver)&&!this.scene.currentBattle.mysteryEncounter.onGameOver(this.scene))return this.end();if(this.isVictory&&this.scene.gameMode.isEndless){const s=this.scene.gameData.gender??vt.UNSET,R=vt[s].toLowerCase();this.scene.ui.showDialogue(D.t("miscDialogue:ending_endless",{context:R}),D.t("miscDialogue:ending_name"),0,()=>this.handleGameOver())}else this.isVictory||!this.scene.enableRetries?this.handleGameOver():this.scene.ui.showText(D.t("battle:retryBattle"),null,()=>{this.scene.ui.setMode(Oe.CONFIRM,()=>{this.scene.ui.fadeOut(1250).then(()=>{this.scene.reset(),this.scene.clearPhaseQueue(),this.scene.gameData.loadSession(this.scene,this.scene.sessionSlotId).then(()=>{this.scene.pushPhase(new cr(this.scene,!0));const s=this.scene.getPokemonAllowedInBattle().length;this.scene.pushPhase(new XE(this.scene,0)),this.scene.currentBattle.double&&s>1&&this.scene.pushPhase(new XE(this.scene,1)),this.scene.currentBattle.waveIndex>1&&this.scene.currentBattle.battleType!==ht.TRAINER&&(this.scene.pushPhase(new on(this.scene,0,this.scene.currentBattle.double)),this.scene.currentBattle.double&&s>1&&this.scene.pushPhase(new on(this.scene,1,this.scene.currentBattle.double))),this.scene.ui.fadeIn(1250),this.end()})})},()=>this.handleGameOver(),!1,0,0,1e3)})}handleGameOver(){const A=L(s=>{this.scene.disableMenu=!0,this.scene.time.delayedCall(1e3,()=>{let R=!1;if(this.isVictory&&s)if(this.scene.gameMode.isClassic){R=this.scene.validateAchv(lt.CLASSIC_VICTORY),this.scene.validateAchv(lt.UNEVOLVED_CLASSIC_VICTORY),this.scene.gameData.gameStats.sessionsWon++;for(const a of this.scene.getPlayerParty())this.awardRibbon(a),a.species.getRootSpeciesId()!==a.species.getRootSpeciesId(!0)&&this.awardRibbon(a,!0)}else this.scene.gameMode.isDaily&&s&&this.scene.gameData.gameStats.dailyRunSessionsWon++;const n=this.isVictory?1e4:5e3;this.scene.fadeOutBgm(n,!0);const I=this.scene.getField().filter(a=>a==null?void 0:a.isActive(!0));I.map(a=>a.hideInfo()),this.scene.ui.fadeOut(n).then(()=>{I.map(r=>r.setVisible(!1)),this.scene.setFieldScale(1,!0),this.scene.clearPhaseQueue(),this.scene.ui.clearText(),this.isVictory&&this.scene.gameMode.isChallenge&&this.scene.gameMode.challenges.forEach(r=>this.scene.validateAchvs(pA,r));const a=L(r=>{if(this.isVictory&&s){this.handleUnlocks();for(const S of this.firstRibbons)this.scene.unshiftPhase(new qc(this.scene,$.VOUCHER_PLUS,S));R||this.scene.unshiftPhase(new Qc(this.scene,$.VOUCHER_PREMIUM))}this.getRunHistoryEntry().then(S=>{this.scene.gameData.saveRunHistory(this.scene,S,this.isVictory),this.scene.pushPhase(new zc(this.scene,r)),this.end()})},"clear");if(this.isVictory&&this.scene.gameMode.isClassic){const r="miscDialogue:ending";if(!this.scene.ui.shouldSkipDialogue(r))this.scene.ui.fadeIn(500).then(()=>{const S=this.scene.gameData.gender??vt.UNSET,o=vt[S].toLowerCase(),l=D.t(r,{context:o});this.scene.charSprite.showCharacter(`rival_${this.scene.gameData.gender===vt.FEMALE?"m":"f"}`,aM(l)).then(()=>{this.scene.ui.showDialogue(r,this.scene.gameData.gender===vt.FEMALE?ZA[U.RIVAL].name:ZA[U.RIVAL].nameFemale,null,()=>{this.scene.ui.fadeOut(500).then(()=>{this.scene.charSprite.hide().then(()=>{const C=new aC(this.scene);this.scene.unshiftPhase(C),a(C)})})})})});else{const S=new aC(this.scene);this.scene.unshiftPhase(S),a(S)}}else a()})})},"doGameOver");!qa||Vb?OO.savedata.session.newclear({slot:this.scene.sessionSlotId,isVictory:this.isVictory,clientSessionId:fc}).then(s=>A(!!s)):this.isVictory?this.scene.gameData.offlineNewClear(this.scene).then(s=>{A(s)}):A(!1)}handleUnlocks(){this.isVictory&&this.scene.gameMode.isClassic&&(this.scene.gameData.unlocks[ms.ENDLESS_MODE]||this.scene.unshiftPhase(new ya(this.scene,ms.ENDLESS_MODE)),this.scene.getPlayerParty().filter(A=>A.fusionSpecies).length&&!this.scene.gameData.unlocks[ms.SPLICED_ENDLESS_MODE]&&this.scene.unshiftPhase(new ya(this.scene,ms.SPLICED_ENDLESS_MODE)),this.scene.gameData.unlocks[ms.MINI_BLACK_HOLE]||this.scene.unshiftPhase(new ya(this.scene,ms.MINI_BLACK_HOLE)),!this.scene.gameData.unlocks[ms.EVIOLITE]&&this.scene.getPlayerParty().some(A=>A.getSpeciesForm(!0).speciesId in kt)&&this.scene.unshiftPhase(new ya(this.scene,ms.EVIOLITE)))}awardRibbon(A,s=!1){const R=xe(A.species.speciesId);this.scene.gameData.incrementRibbonCount(R,s)===1&&this.firstRibbons.push(xe(A.species.getRootSpeciesId(s)))}async getRunHistoryEntry(){var s;const A=await this.scene.gameData.getSession(this.scene.sessionSlotId);return{seed:this.scene.seed,playTime:this.scene.sessionPlayTime,gameMode:this.scene.gameMode.modeId,party:this.scene.getPlayerParty().map(R=>new cs(R)),enemyParty:this.scene.getEnemyParty().map(R=>new cs(R)),modifiers:A?A.modifiers:this.scene.findModifiers(()=>!0).map(R=>new mI(R,!0)),enemyModifiers:A?A.enemyModifiers:this.scene.findModifiers(()=>!0,!1).map(R=>new mI(R,!1)),arena:new pT(this.scene.arena),pokeballCounts:this.scene.pokeballCounts,money:Math.floor(this.scene.money),score:this.scene.score,waveIndex:this.scene.currentBattle.waveIndex,battleType:this.scene.currentBattle.battleType,trainer:this.scene.currentBattle.trainer?new WT(this.scene.currentBattle.trainer):null,gameVersion:this.scene.game.config.gameVersion,timestamp:new Date().getTime(),challenges:this.scene.gameMode.challenges.map(R=>new wT(R)),mysteryEncounterType:((s=this.scene.currentBattle.mysteryEncounter)==null?void 0:s.encounterType)??-1,mysteryEncounterSaveData:this.scene.mysteryEncounterSaveData}}};L(Zg,"GameOverPhase");let CO=Zg;const Xg=class Xg extends GE{constructor(A,s){super(A),this.isVictory=s}start(){super.start(),this.scene.gameData.gameStats.battles++,this.scene.gameMode.isEndless&&this.scene.currentBattle.waveIndex+1>this.scene.gameData.gameStats.highestEndlessWave&&(this.scene.gameData.gameStats.highestEndlessWave=this.scene.currentBattle.waveIndex+1),this.isVictory&&(this.scene.currentBattle.addBattleScore(this.scene),this.scene.currentBattle.trainer&&this.scene.gameData.gameStats.trainersDefeated++),this.scene.gameMode.isEndless&&this.scene.currentBattle.waveIndex>=5850&&(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new CO(this.scene,!0)));for(const s of this.scene.getField())s&&s.battleSummonData&&(s.battleSummonData.waveTurnCount=1);for(const s of this.scene.getPokemonAllowedInBattle())$Q(HS,s,!1,this.isVictory);this.scene.currentBattle.moneyScattered&&this.scene.currentBattle.pickUpScatteredMoney(this.scene),this.scene.clearEnemyHeldItemModifiers();const A=this.scene.findModifiers(s=>s instanceof zi||s instanceof qr);for(const s of A){const R=[];s instanceof qr&&R.push(this.scene.getPokemonById(s.pokemonId)),s.lapse(...R)||this.scene.removeModifier(s)}this.scene.updateModifiers().then(()=>this.end())}};L(Xg,"BattleEndPhase");let yi=Xg;const Qg=class Qg extends iE{constructor(A){super(A)}start(){super.start();const A=this.scene.currentBattle.waveIndex,s=A%1e3?A%250?v.COMMON:v.GREAT:v.ULTRA;sI(this.scene.getEnemyParty(),PE.ENEMY_BUFF);const R=Math.ceil(A/250);for(let n=0;n<R;n++)this.scene.addEnemyModifier(w7(s,this.scene.findModifiers(I=>I instanceof Un,!1),this.scene),!0,!0);this.scene.updateModifiers(!1,!0).then(()=>this.end())}};L(Qg,"AddEnemyBuffModifierPhase");let jc=Qg;const Jg=class Jg extends as{constructor(A,s,R=!1){super(A,s),this.isExpOnly=R}start(){var R;super.start();const A=this.scene.currentBattle.isBattleMysteryEncounter();(!A||!((R=this.scene.currentBattle.mysteryEncounter)!=null&&R.preventGameStatsUpdates))&&this.scene.gameData.gameStats.pokemonDefeated++;const s=this.getPokemon().getExpValue();if(this.scene.applyPartyExp(s,!0),A)return h6(this.scene,!1,this.isExpOnly),this.end();if(!this.scene.getEnemyParty().find(n=>this.scene.currentBattle.battleType===ht.WILD?n.isOnField():!(n!=null&&n.isFainted(!0))))if(this.scene.pushPhase(new yi(this.scene,!0)),this.scene.currentBattle.battleType===ht.TRAINER&&this.scene.pushPhase(new IC(this.scene)),this.scene.gameMode.isEndless||!this.scene.gameMode.isWaveFinal(this.scene.currentBattle.waveIndex)){if(this.scene.pushPhase(new hr(this.scene)),this.scene.gameMode.isClassic&&this.scene.currentBattle.waveIndex===$6.EVIL_BOSS_2&&this.scene.pushPhase(new gE(this.scene,$.LOCK_CAPSULE)),this.scene.currentBattle.waveIndex%10)this.scene.pushPhase(new oO(this.scene,void 0,void 0,this.getFixedBattleCustomModifiers()));else if(this.scene.gameMode.isDaily)this.scene.pushPhase(new gE(this.scene,$.EXP_CHARM)),this.scene.currentBattle.waveIndex>10&&!this.scene.gameMode.isWaveFinal(this.scene.currentBattle.waveIndex)&&this.scene.pushPhase(new gE(this.scene,$.GOLDEN_POKEBALL));else{const n=this.scene.gameMode.isEndless?10:this.scene.offsetGym?0:20;this.scene.gameMode.isEndless&&this.scene.currentBattle.waveIndex===10&&this.scene.pushPhase(new gE(this.scene,$.EXP_SHARE)),this.scene.currentBattle.waveIndex<=750&&(this.scene.currentBattle.waveIndex<=500||this.scene.currentBattle.waveIndex%30===n)&&this.scene.pushPhase(new gE(this.scene,this.scene.currentBattle.waveIndex%30!==n||this.scene.currentBattle.waveIndex>250?$.EXP_CHARM:$.SUPER_EXP_CHARM)),this.scene.currentBattle.waveIndex<=150&&!(this.scene.currentBattle.waveIndex%50)&&this.scene.pushPhase(new gE(this.scene,$.GOLDEN_POKEBALL)),this.scene.gameMode.isEndless&&!(this.scene.currentBattle.waveIndex%50)&&(this.scene.pushPhase(new gE(this.scene,this.scene.currentBattle.waveIndex%250?$.VOUCHER_PLUS:$.VOUCHER_PREMIUM)),this.scene.pushPhase(new jc(this.scene)))}this.scene.pushPhase(new JI(this.scene))}else this.scene.currentBattle.battleType=ht.CLEAR,this.scene.score+=this.scene.gameMode.getClearScoreBonus(),this.scene.updateScoreText(),this.scene.pushPhase(new CO(this.scene,!0));this.end()}getFixedBattleCustomModifiers(){const A=this.scene.gameMode,s=this.scene.currentBattle.waveIndex;if(A.isFixedBattle(s))return A.getFixedBattle(s).customModifierRewardSettings}};L(Jg,"VictoryPhase");let JT=Jg;var e0=(E=>(E[E.PROFILE=0]="PROFILE",E[E.STATS=1]="STATS",E[E.MOVES=2]="MOVES",E))(e0||{}),rM=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.LEARN_MOVE=1]="LEARN_MOVE",E))(rM||{});const $g=class $g extends Ws{constructor(A){super(A,Oe.SUMMARY)}setup(){const A=this.getUi();this.summaryContainer=this.scene.add.container(0,0),this.summaryContainer.setVisible(!1),A.add(this.summaryContainer);const s=this.scene.add.image(0,0,"summary_bg");s.setOrigin(0,1),this.summaryContainer.add(s),this.tabSprite=this.scene.add.sprite(134,-s.displayHeight+16,"summary_tabs_1"),this.tabSprite.setOrigin(1,1),this.summaryContainer.add(this.tabSprite);const R=le(this.scene,4,-165,D.t("pokemonSummary:pokemonInfo"),X.SUMMARY);R.setOrigin(0,1),this.summaryContainer.add(R),this.shinyOverlay=this.scene.add.image(6,-54,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,1),this.shinyOverlay.setVisible(!1),this.summaryContainer.add(this.shinyOverlay),this.numberText=le(this.scene,17,-149,"0000",X.SUMMARY),this.numberText.setOrigin(0,1),this.summaryContainer.add(this.numberText),this.pokemonSprite=this.scene.initPokemonSprite(this.scene.add.sprite(56,-106,"pkmn__sub"),void 0,!1,!0),this.summaryContainer.add(this.pokemonSprite),this.nameText=le(this.scene,6,-54,"",X.SUMMARY),this.nameText.setOrigin(0,0),this.summaryContainer.add(this.nameText),this.splicedIcon=this.scene.add.sprite(0,-54,"icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.75),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.splicedIcon),this.shinyIcon=this.scene.add.image(0,-54,"shiny_star"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.75),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.shinyIcon),this.fusionShinyIcon=this.scene.add.image(0,0,"shiny_star_2"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.75),this.summaryContainer.add(this.fusionShinyIcon),this.pokeball=this.scene.add.sprite(6,-19,"pb"),this.pokeball.setOrigin(0,1),this.summaryContainer.add(this.pokeball),this.candyIcon=this.scene.add.sprite(13,-140,"candy"),this.candyIcon.setScale(.8),this.summaryContainer.add(this.candyIcon),this.candyOverlay=this.scene.add.sprite(13,-140,"candy_overlay"),this.candyOverlay.setScale(.8),this.summaryContainer.add(this.candyOverlay),this.candyShadow=this.scene.add.sprite(13,-140,"candy"),this.candyShadow.setTint(0),this.candyShadow.setAlpha(.5),this.candyShadow.setScale(.8),this.candyShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,30,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.candyShadow),this.candyCountText=le(this.scene,20,-146,"x0",X.WINDOW_ALT,{fontSize:"76px"}),this.candyCountText.setOrigin(0,0),this.summaryContainer.add(this.candyCountText),this.friendshipIcon=this.scene.add.sprite(13,-60,"friendship"),this.friendshipIcon.setScale(.8),this.summaryContainer.add(this.friendshipIcon),this.friendshipOverlay=this.scene.add.sprite(13,-60,"friendship_overlay"),this.friendshipOverlay.setScale(.8),this.summaryContainer.add(this.friendshipOverlay),this.friendshipShadow=this.scene.add.sprite(13,-60,"friendship"),this.friendshipShadow.setTint(0),this.friendshipShadow.setAlpha(.5),this.friendshipShadow.setScale(.8),this.friendshipShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,50,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.friendshipShadow),this.friendshipText=le(this.scene,20,-66,"x0",X.WINDOW_ALT,{fontSize:"76px"}),this.friendshipText.setOrigin(0,0),this.summaryContainer.add(this.friendshipText),this.championRibbon=this.scene.add.image(88,-146,"champion_ribbon"),this.championRibbon.setOrigin(0,0),this.championRibbon.setScale(1.25),this.summaryContainer.add(this.championRibbon),this.championRibbon.setVisible(!1),this.levelText=le(this.scene,36,-17,"",X.SUMMARY_ALT),this.levelText.setOrigin(0,1),this.summaryContainer.add(this.levelText),this.genderText=le(this.scene,96,-17,"",X.SUMMARY),this.genderText.setOrigin(0,1),this.summaryContainer.add(this.genderText),this.statusContainer=this.scene.add.container(-106,-16);const n=this.scene.add.image(0,0,"summary_status");n.setOrigin(0,0),this.statusContainer.add(n);const I=le(this.scene,3,0,D.t("pokemonSummary:status"),X.SUMMARY);I.setOrigin(0,0),this.statusContainer.add(I),this.status=this.scene.add.sprite(91,4,HR("statuses")),this.status.setOrigin(.5,0),this.statusContainer.add(this.status),this.summaryContainer.add(this.statusContainer),this.moveEffectContainer=this.scene.add.container(106,-62),this.summaryContainer.add(this.moveEffectContainer);const a=this.scene.add.image(0,0,"summary_moves_effect");a.setOrigin(0,0),this.moveEffectContainer.add(a);const r=le(this.scene,8,12,D.t("pokemonSummary:powerAccuracyCategory"),X.SUMMARY);r.setLineSpacing(9),r.setOrigin(0,0),this.moveEffectContainer.add(r),this.movePowerText=le(this.scene,99,27,"0",X.WINDOW_ALT),this.movePowerText.setOrigin(1,1),this.moveEffectContainer.add(this.movePowerText),this.moveAccuracyText=le(this.scene,99,43,"0",X.WINDOW_ALT),this.moveAccuracyText.setOrigin(1,1),this.moveEffectContainer.add(this.moveAccuracyText),this.moveCategoryIcon=this.scene.add.sprite(99,57,"categories"),this.moveCategoryIcon.setOrigin(1,1),this.moveEffectContainer.add(this.moveCategoryIcon);const S=L(()=>{const o=this.scene.add.sprite(0,0,this.getPageKey(0));return o.setOrigin(0,1),o},"getSummaryPageBg");this.summaryContainer.add(this.summaryPageContainer=this.scene.add.container(106,0)),this.summaryPageContainer.add(S()),this.summaryPageContainer.setVisible(!1),this.summaryContainer.add(this.summaryPageTransitionContainer=this.scene.add.container(106,0)),this.summaryPageTransitionContainer.add(S()),this.summaryPageTransitionContainer.setVisible(!1)}getPageKey(A){return A===void 0&&(A=this.cursor),`summary_${e0[A].toLowerCase()}`}show(A){var C,M;super.show(A),this.pokemon=A[0],this.summaryUiMode=A.length>1?A[1]:0,this.playerParty=A[4]??!0,this.scene.ui.bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.cursor=-1,this.shinyOverlay.setVisible(this.pokemon.isShiny());const s=RR[this.pokemon.species.getRootSpeciesId()];this.candyIcon.setTint(Xs(hs(s[0]))),this.candyOverlay.setTint(Xs(hs(s[1]))),this.numberText.setText(Ln(this.pokemon.species.speciesId,4)),this.numberText.setColor(this.getTextColor(this.pokemon.isShiny()?X.SUMMARY_GOLD:X.SUMMARY)),this.numberText.setShadowColor(this.getTextColor(this.pokemon.isShiny()?X.SUMMARY_GOLD:X.SUMMARY,!0));const R=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(R)}catch(u){console.error(`Failed to play animation for ${R}`,u)}this.pokemonSprite.setPipelineData("teraColor",dR(this.pokemon.getTeraType())),this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(u=>{var h,P,G;delete this.pokemonSprite.pipelineData[`${u}Base`],(P=(h=this.pokemon)==null?void 0:h.summonData)!=null&&P.speciesForm&&(u+="Base"),this.pokemonSprite.pipelineData[u]=(G=this.pokemon)==null?void 0:G.getSprite().pipelineData[u]}),this.pokemon.cry(),this.nameText.setText(this.pokemon.getNameToRender());const n=this.pokemon.isFusion();this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+2,3),this.splicedIcon.setVisible(n),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var u,h,P,G;return this.scene.ui.showTooltip("",`${(u=this.pokemon)==null?void 0:u.species.getName(this.pokemon.formIndex)}/${(G=(h=this.pokemon)==null?void 0:h.fusionSpecies)==null?void 0:G.getName((P=this.pokemon)==null?void 0:P.fusionFormIndex)}`,!0)}),this.splicedIcon.on("pointerout",()=>this.scene.ui.hideTooltip())),this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId()].classicWinCount>0&&this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId(!0)].classicWinCount>0?this.championRibbon.setVisible(!0):this.championRibbon.setVisible(!1);let I=this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId()].friendship;(!I||I===void 0)&&(I=0);const a=A1(KA[this.pokemon.species.getRootSpeciesId()]),r=16-16*(I/a);this.candyShadow.visible&&(this.candyShadow.on("pointerover",()=>this.scene.ui.showTooltip("",`${I}/${a}`,!0)),this.candyShadow.on("pointerout",()=>this.scene.ui.hideTooltip())),this.candyCountText.setText(`x${this.scene.gameData.starterData[this.pokemon.species.getRootSpeciesId()].candyCount}`),this.candyShadow.setCrop(0,0,16,r),this.friendshipShadow.visible&&(this.friendshipShadow.on("pointerover",()=>this.scene.ui.showTooltip("",`${D.t("pokemonSummary:friendship")}`,!0)),this.friendshipShadow.on("pointerout",()=>this.scene.ui.hideTooltip())),this.friendshipText.setText(`${((C=this.pokemon)==null?void 0:C.friendship)||"0"} / 255`),this.friendshipShadow.setCrop(0,0,16,16-16*((((M=this.pokemon)==null?void 0:M.friendship)||0)/255));const S=n&&this.pokemon.shiny&&this.pokemon.fusionShiny,o=S?this.pokemon.variant:this.pokemon.getVariant();if(this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0)+1,3),this.shinyIcon.setTexture(`shiny_star${S?"_1":""}`),this.shinyIcon.setVisible(this.pokemon.isShiny()),this.shinyIcon.setTint(YE(o)),this.shinyIcon.visible){const u=S||o?`${o===2?D.t("common:epicShiny"):o===1?D.t("common:rareShiny"):D.t("common:commonShiny")}${S?`/${this.pokemon.fusionVariant===2?D.t("common:epicShiny"):this.pokemon.fusionVariant===1?D.t("common:rareShiny"):D.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>this.scene.ui.showTooltip("",`${D.t("common:shinyOnHover")}${u?` (${u})`:""}`,!0)),this.shinyIcon.on("pointerout",()=>this.scene.ui.hideTooltip())}switch(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(S),n&&this.fusionShinyIcon.setTint(YE(this.pokemon.fusionVariant)),this.pokeball.setFrame(TO(this.pokemon.pokeball)),this.levelText.setText(this.pokemon.level.toString()),this.genderText.setText(OL(this.pokemon.getGender(!0))),this.genderText.setColor(vn(this.pokemon.getGender(!0))),this.genderText.setShadowColor(vn(this.pokemon.getGender(!0),!0)),this.summaryUiMode){case 0:const u=A.length<2?0:A[2];this.hideMoveEffect(!0),this.setCursor(u),A.length>3&&(this.selectCallback=A[3]);break;case 1:this.newMove=A[2],this.moveSelectFunction=A[3],this.showMoveEffect(!0),this.setCursor(2),this.showMoveSelect();break}const l=A.length>=2;return this.pokemon.status||this.pokemon.pokerus?(this.showStatus(!l),this.status.setFrame(this.pokemon.status?Re[this.pokemon.status.effect].toLowerCase():"pokerus")):this.hideStatus(!l),!0}processInput(A){var a,r,S,o,l,C,M,u;if(this.transitioning)return!1;const s=this.getUi(),R=s.handlers[Oe.PARTY].active;let n=!1,I=!1;if(this.moveSelect)if(A===b.ACTION)if(this.pokemon&&this.moveCursor<this.pokemon.moveset.length){if(this.summaryUiMode===1)this.moveSelectFunction&&this.moveSelectFunction(this.moveCursor);else if(this.selectedMoveIndex===-1)this.selectedMoveIndex=this.moveCursor,this.setCursor(this.moveCursor);else{if(this.selectedMoveIndex!==this.moveCursor){const h=(a=this.pokemon)==null?void 0:a.moveset[this.selectedMoveIndex];this.pokemon.moveset[this.selectedMoveIndex]=this.pokemon.moveset[this.moveCursor],this.pokemon.moveset[this.moveCursor]=h;const P=this.moveRowsContainer.getAt(this.selectedMoveIndex),G=this.moveRowsContainer.getAt(this.moveCursor);this.moveRowsContainer.moveTo(P,this.moveCursor),this.moveRowsContainer.moveTo(G,this.selectedMoveIndex),P.setY(this.moveCursor*16),G.setY(this.selectedMoveIndex*16)}this.selectedMoveIndex=-1,this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}n=!0}else{if(this.moveCursor===4)return this.processInput(b.CANCEL);I=!0}else if(A===b.CANCEL)this.hideMoveSelect(),n=!0;else switch(A){case b.UP:n=this.setCursor(this.moveCursor?this.moveCursor-1:4);break;case b.DOWN:n=this.setCursor(this.moveCursor<4?this.moveCursor+1:0);break;case b.LEFT:if(this.moveSelect=!1,this.setCursor(1),this.summaryUiMode===1){this.hideMoveEffect(),this.destroyBlinkCursor(),n=!0;break}else{this.hideMoveSelect(),n=!0;break}}else if(A===b.ACTION)this.cursor===2?(this.showMoveSelect(),n=!0):this.cursor===0&&((r=this.pokemon)!=null&&r.hasPassive())&&((o=this.abilityContainer.nameText)==null||o.setVisible(!((S=this.abilityContainer.descriptionText)!=null&&S.visible)),(l=this.abilityContainer.descriptionText)==null||l.setVisible(!this.abilityContainer.descriptionText.visible),this.abilityContainer.labelImage.setVisible(!this.abilityContainer.labelImage.visible),(M=this.passiveContainer.nameText)==null||M.setVisible(!((C=this.passiveContainer.descriptionText)!=null&&C.visible)),(u=this.passiveContainer.descriptionText)==null||u.setVisible(!this.passiveContainer.descriptionText.visible),this.passiveContainer.labelImage.setVisible(!this.passiveContainer.labelImage.visible));else if(A===b.CANCEL){if(this.summaryUiMode===1)this.hideMoveSelect();else{if(this.selectCallback instanceof Function){const h=this.selectCallback;this.selectCallback=null,h()}R?s.setMode(Oe.PARTY):s.setMode(Oe.MESSAGE)}n=!0}else{const h=uE(e0);switch(A){case b.UP:case b.DOWN:if(this.summaryUiMode===1)break;if(!R)break;const P=A===b.DOWN,G=this.scene.getPlayerParty(),d=this.pokemon?G.indexOf(this.pokemon):-1;if(P&&d<G.length-1||!P&&d){const H=this.cursor;this.clear(),this.show([G[d+(P?1:-1)],this.summaryUiMode,H])}break;case b.LEFT:this.cursor&&(n=this.setCursor(this.cursor-1));break;case b.RIGHT:this.cursor<h.length-1&&(n=this.setCursor(this.cursor+1),this.summaryUiMode===1&&this.cursor===2&&(this.moveSelect=!0));break}}return n?s.playSelect():I&&s.playError(),n||I}setCursor(A,s=!1){let R=s||this.moveCursor!==A;if(this.moveSelect){this.moveCursor=A;const n=this.getSelectedMove();n?(this.moveDescriptionText.setY(84),this.movePowerText.setText(n.power>=0?n.power.toString():"---"),this.moveAccuracyText.setText(n.accuracy>=0?n.accuracy.toString():"---"),this.moveCategoryIcon.setFrame(Mt[n.category].toLowerCase()),this.showMoveEffect()):this.hideMoveEffect(),this.moveDescriptionText.setText((n==null?void 0:n.effect)||"");const I=Math.floor(this.moveDescriptionText.displayHeight/14.83);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),I>3&&(this.descriptionScrollTween=this.scene.tweens.add({targets:this.moveDescriptionText,delay:Et(2e3),loop:-1,hold:Et(2e3),duration:Et((I-3)*2e3),y:`-=${14.83*(I-3)}`})),this.moveCursorObj||(this.moveCursorObj=this.scene.add.sprite(-2,0,"summary_moves_cursor","highlight"),this.moveCursorObj.setOrigin(0,1),this.movesContainer.add(this.moveCursorObj)),this.moveCursorObj.setY(16*this.moveCursor+1),this.moveCursorBlinkTimer&&this.moveCursorBlinkTimer.destroy(),this.moveCursorObj.setVisible(!0),this.moveCursorBlinkTimer=this.scene.time.addEvent({loop:!0,delay:Et(600),callback:L(()=>{var a;(a=this.moveCursorObj)==null||a.setVisible(!1),this.scene.time.delayedCall(Et(100),()=>{this.moveCursorObj&&this.moveCursorObj.setVisible(!0)})},"callback")}),this.selectedMoveIndex>-1&&(this.selectedMoveCursorObj||(this.selectedMoveCursorObj=this.scene.add.sprite(-2,0,"summary_moves_cursor","select"),this.selectedMoveCursorObj.setOrigin(0,1),this.movesContainer.add(this.selectedMoveCursorObj),this.movesContainer.moveBelow(this.selectedMoveCursorObj,this.moveCursorObj)),this.selectedMoveCursorObj.setY(16*this.selectedMoveIndex+1))}else if(R=this.cursor!==A,R){const n=this.cursor<A;this.cursor=A,this.tabSprite.setTexture(`summary_tabs_${this.cursor+1}`),this.getUi().hideTooltip(),this.summaryPageContainer.visible?(this.transitioning=!0,this.populatePageContainer(this.summaryPageTransitionContainer,n?A:A+1),n?this.summaryPageTransitionContainer.x+=214:this.populatePageContainer(this.summaryPageContainer),this.scene.tweens.add({targets:this.summaryPageTransitionContainer,x:n?"-=214":"+=214",duration:250,onComplete:L(()=>{n?(this.populatePageContainer(this.summaryPageContainer),this.cursor===2&&(this.moveCursorObj=null,this.showMoveSelect(),this.showMoveEffect())):this.summaryPageTransitionContainer.x-=214,this.summaryPageTransitionContainer.setVisible(!1),this.transitioning=!1},"onComplete")}),this.summaryPageTransitionContainer.setVisible(!0)):(this.populatePageContainer(this.summaryPageContainer),this.summaryPageContainer.setVisible(!0))}return R}populatePageContainer(A,s){var n,I,a,r,S,o,l,C,M,u,h,P,G,d,H,f,K,W,V,k,Q,j,J;s===void 0&&(s=this.cursor),A.getAll().length>1&&(A.each(ne=>{ne instanceof Phaser.GameObjects.Container&&ne.removeAll(!0)}),A.removeBetween(1,void 0,!0));const R=A.getAt(0);switch(R.setTexture(this.getPageKey(s)),this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),s){case 0:const ne=this.scene.add.container(0,-R.height);A.add(ne);const x=yE(this.scene,7,12,`${D.t("pokemonSummary:ot")}/${RO((rt==null?void 0:rt.username)||D.t("pokemonSummary:unknown"),this.scene.gameData.gender===vt.FEMALE?X.SUMMARY_PINK:X.SUMMARY_BLUE)}`,X.SUMMARY_ALT);x.setOrigin(0,0),ne.add(x);const q=le(this.scene,174,12,this.scene.gameData.trainerId.toString(),X.SUMMARY_ALT);q.setOrigin(0,0),ne.add(q);const F=le(this.scene,7,28,`${D.t("pokemonSummary:type")}/`,X.WINDOW_ALT);F.setOrigin(0,0),ne.add(F);const Te=L((pe,$e,Qe=!1)=>{const ut=F.width*F.scale+9+34*pe,Qt=Qe?this.scene.add.sprite(ut,42,"type_tera"):this.scene.add.sprite(ut,42,HR("types"),i[$e].toLowerCase());if(Qe){Qt.setScale(.5);const xt=dR($e);Qt.setTint(Phaser.Display.Color.GetColor(xt[0],xt[1],xt[2]))}return Qt.setOrigin(0,1),Qt},"getTypeIcon"),He=(n=this.pokemon)==null?void 0:n.getTypes(!1,!1,!0);if(ne.add(Te(0,He[0])),He.length>1&&ne.add(Te(1,He[1])),(I=this.pokemon)!=null&&I.isTerastallized()&&ne.add(Te(He.length,this.pokemon.getTeraType(),!0)),(a=this.pokemon)!=null&&a.getLuck()){const pe=le(this.scene,141,28,D.t("common:luckIndicator"),X.SUMMARY_ALT);pe.setOrigin(0,0),ne.add(pe);const $e=le(this.scene,141+pe.displayWidth+2,28,this.pokemon.getLuck().toString(),X.SUMMARY);$e.setOrigin(0,0),$e.setTint(YE(Math.min(this.pokemon.getLuck()-1,2))),ne.add($e)}this.abilityContainer={labelImage:this.scene.add.image(0,0,"summary_profile_ability"),ability:(r=this.pokemon)==null?void 0:r.getAbility(!0),nameText:null,descriptionText:null};const ue=[this.abilityContainer];(S=this.pokemon)!=null&&S.hasPassive()&&(this.passiveContainer={labelImage:this.scene.add.image(0,0,"summary_profile_passive"),ability:this.pokemon.getPassiveAbility(),nameText:null,descriptionText:null},ue.push(this.passiveContainer),this.abilityPrompt=this.scene.add.image(0,0,(o=this.scene.inputController)!=null&&o.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,43),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),ne.add(this.abilityPrompt)),ue.forEach(pe=>{var Qt,xt;pe.labelImage.setPosition(17,43),pe.labelImage.setVisible(!0),pe.labelImage.setOrigin(0,0),ne.add(pe.labelImage),pe.nameText=le(this.scene,7,66,(Qt=pe.ability)==null?void 0:Qt.name,X.SUMMARY_ALT),pe.nameText.setOrigin(0,1),ne.add(pe.nameText),pe.descriptionText=le(this.scene,7,69,(xt=pe.ability)==null?void 0:xt.description,X.WINDOW_ALT,{wordWrap:{width:1224}}),pe.descriptionText.setOrigin(0,0),ne.add(pe.descriptionText);const $e=this.scene.make.graphics({});$e.setScale(6),$e.fillStyle(16777215),$e.beginPath(),$e.fillRect(110,90.5,206,31);const Qe=$e.createGeometryMask();pe.descriptionText.setMask(Qe);const ut=Math.floor(pe.descriptionText.displayHeight/14.83);ut>2&&(pe.descriptionText.setY(69),this.descriptionScrollTween=this.scene.tweens.add({targets:pe.descriptionText,delay:Et(2e3),loop:-1,hold:Et(2e3),duration:Et((ut-2)*2e3),y:`-=${14.83*(ut-2)}`}))}),(l=this.passiveContainer)==null||l.labelImage.setVisible(!1),(M=(C=this.passiveContainer)==null?void 0:C.nameText)==null||M.setVisible(!1),(h=(u=this.passiveContainer)==null?void 0:u.descriptionText)==null||h.setVisible(!1);const me=RO("",X.WINDOW_ALT),Me=wn(At[(P=this.pokemon)==null?void 0:P.getNature()]),Ie=`${RO(wn(xO((G=this.pokemon)==null?void 0:G.getNature())),X.SUMMARY_RED)}${me}`,z=D.t("pokemonSummary:memoString",{metFragment:D.t(`pokemonSummary:metFragment.${((d=this.pokemon)==null?void 0:d.metBiome)===-1?"apparently":"normal"}`,{biome:`${RO(RL((H=this.pokemon)==null?void 0:H.metBiome),X.SUMMARY_RED)}${me}`,level:`${RO((f=this.pokemon)==null?void 0:f.metLevel.toString(),X.SUMMARY_RED)}${me}`,wave:`${RO((K=this.pokemon)!=null&&K.metWave?this.pokemon.metWave.toString():D.t("pokemonSummary:unknownTrainer"),X.SUMMARY_RED)}${me}`}),natureFragment:D.t(`pokemonSummary:natureFragment.${Me}`,{nature:Ie})}),te=yE(this.scene,7,113,String(z),X.WINDOW_ALT);te.setOrigin(0,0),ne.add(te);break;case 1:const Le=this.scene.add.container(0,-R.height);A.add(Le),FO.forEach((pe,$e)=>{var SR,IE,$O,Dn;const Qe=D.t(_E(pe)),ut=$e%3,Qt=Math.floor($e/3),xt=fo((SR=this.pokemon)==null?void 0:SR.getNature(),$e),ME=le(this.scene,27+115*Qt+(Qt===1?5:0),56+16*ut,Qe,xt===1?X.SUMMARY:xt>1?X.SUMMARY_PINK:X.SUMMARY_BLUE);ME.setOrigin(.5,0),Le.add(ME);const TR=pe!==g.HP?Il((IE=this.pokemon)==null?void 0:IE.getStat(pe)):`${Il(($O=this.pokemon)==null?void 0:$O.hp,!0)}/${Il((Dn=this.pokemon)==null?void 0:Dn.getMaxHp(),!0)}`,hE=le(this.scene,120+88*Qt,56+16*ut,TR,X.WINDOW_ALT);hE.setOrigin(1,0),Le.add(hE)}),this.scene.findModifiers(pe=>{var $e;return pe instanceof Ht&&pe.pokemonId===(($e=this.pokemon)==null?void 0:$e.id)},this.playerParty).sort(ZS).forEach((pe,$e)=>{const Qe=pe.getIcon(this.scene,!0);Qe.setPosition($e%17*12+3,14*Math.floor($e/17)+15),Le.add(Qe),Qe.setInteractive(new Phaser.Geom.Rectangle(0,0,32,32),Phaser.Geom.Rectangle.Contains),Qe.on("pointerover",()=>this.scene.ui.showTooltip(pe.type.name,pe.type.getDescription(this.scene),!0)),Qe.on("pointerout",()=>this.scene.ui.hideTooltip())});const Be=(W=this.pokemon)==null?void 0:W.level,st=(V=this.pokemon)==null?void 0:V.levelExp,ft=(k=this.pokemon)==null?void 0:k.exp,tt=(Q=this.pokemon)==null?void 0:Q.species.growthRate,Pt=bb(Be+1,tt),eA=Be<this.scene.getMaxExpLevel()?st/Pt:0,Xt=le(this.scene,6,112,D.t("pokemonSummary:expPoints"),X.SUMMARY);Xt.setOrigin(0,0),Le.add(Xt);const bA=le(this.scene,6,128,D.t("pokemonSummary:nextLv"),X.SUMMARY);bA.setOrigin(0,0),Le.add(bA);const YA=le(this.scene,208,112,ft.toString(),X.WINDOW_ALT);YA.setOrigin(1,0),Le.add(YA);const y=Be<this.scene.getMaxExpLevel()?ZR(Be+1,tt)-ft:0,Ke=le(this.scene,208,128,y.toString(),X.WINDOW_ALT);Ke.setOrigin(1,0),Le.add(Ke);const de=this.scene.add.image(140,145,"summary_stats_overlay_exp");de.setOrigin(0,0),Le.add(de);const ae=this.scene.make.graphics({});ae.setScale(6),ae.fillStyle(16777215),ae.beginPath(),ae.fillRect(140+A.x,145+A.y+21,Math.floor(eA*64),3);const ie=ae.createGeometryMask();de.setMask(ie);break;case 2:this.movesContainer=this.scene.add.container(5,-R.height+26),A.add(this.movesContainer),this.extraMoveRowContainer=this.scene.add.container(0,64),this.extraMoveRowContainer.setVisible(!1),this.movesContainer.add(this.extraMoveRowContainer);const he=this.scene.add.image(-2,1,"summary_moves_overlay_row");he.setOrigin(0,1),this.extraMoveRowContainer.add(he);const Xe=le(this.scene,35,0,this.summaryUiMode===1&&this.newMove?this.newMove.name:D.t("pokemonSummary:cancel"),this.summaryUiMode===1?X.SUMMARY_PINK:X.SUMMARY);if(Xe.setOrigin(0,1),this.extraMoveRowContainer.add(Xe),this.summaryUiMode===1){if(this.extraMoveRowContainer.setVisible(!0),this.newMove&&this.pokemon){const ut=HR("types"),Qt=this.pokemon.getMoveType(this.newMove),xt=this.scene.add.sprite(0,0,ut,i[Qt].toLowerCase());xt.setOrigin(0,1),this.extraMoveRowContainer.add(xt)}const pe=this.scene.add.image(163,-1,"summary_moves_overlay_pp");pe.setOrigin(0,1),this.extraMoveRowContainer.add(pe);const $e=Ln((j=this.newMove)==null?void 0:j.pp,2,"  "),Qe=le(this.scene,173,1,`${$e}/${$e}`,X.WINDOW);Qe.setOrigin(0,1),this.extraMoveRowContainer.add(Qe)}this.moveRowsContainer=this.scene.add.container(0,0),this.movesContainer.add(this.moveRowsContainer);for(let pe=0;pe<4;pe++){const $e=this.pokemon&&this.pokemon.moveset.length>pe?(J=this.pokemon)==null?void 0:J.moveset[pe]:null,Qe=this.scene.add.container(0,16*pe);if(this.moveRowsContainer.add(Qe),$e&&this.pokemon){const ME=HR("types"),TR=this.pokemon.getMoveType($e.getMove()),hE=this.scene.add.sprite(0,0,ME,i[TR].toLowerCase());hE.setOrigin(0,1),Qe.add(hE)}const ut=le(this.scene,35,0,$e?$e.getName():"-",X.SUMMARY);ut.setOrigin(0,1),Qe.add(ut);const Qt=this.scene.add.image(163,-1,"summary_moves_overlay_pp");Qt.setOrigin(0,1),Qe.add(Qt);const xt=le(this.scene,173,1,"--/--",X.WINDOW);if(xt.setOrigin(0,1),$e){const ME=$e.getMovePp(),TR=ME-$e.ppUsed;xt.setText(`${Ln(TR,2,"  ")}/${Ln(ME,2,"  ")}`)}Qe.add(xt)}this.moveDescriptionText=le(this.scene,2,84,"",X.WINDOW_ALT,{wordWrap:{width:1212}}),this.movesContainer.add(this.moveDescriptionText);const ke=this.scene.make.graphics({});ke.setScale(6),ke.fillStyle(16777215),ke.beginPath(),ke.fillRect(112,130,202,46);const Ge=ke.createGeometryMask();this.moveDescriptionText.setMask(Ge);break}}showStatus(A){this.statusVisible||(this.statusVisible=!0,this.scene.tweens.add({targets:this.statusContainer,x:0,duration:A?0:250,ease:"Sine.easeOut"}))}hideStatus(A){this.statusVisible&&(this.statusVisible=!1,this.scene.tweens.add({targets:this.statusContainer,x:-106,duration:A?0:250,ease:"Sine.easeIn"}))}getSelectedMove(){return this.cursor!==2?null:this.moveCursor<4&&this.pokemon&&this.moveCursor<this.pokemon.moveset.length?this.pokemon.moveset[this.moveCursor].getMove():this.summaryUiMode===1&&this.moveCursor===4?this.newMove:null}showMoveSelect(){this.moveSelect=!0,this.extraMoveRowContainer.setVisible(!0),this.selectedMoveIndex=-1,this.setCursor(0),this.showMoveEffect()}hideMoveSelect(){if(this.summaryUiMode===1){this.moveSelectFunction&&this.moveSelectFunction(4);return}this.moveSelect=!1,this.extraMoveRowContainer.setVisible(!1),this.moveDescriptionText.setText(""),this.destroyBlinkCursor(),this.hideMoveEffect()}destroyBlinkCursor(){this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}showMoveEffect(A){this.moveEffectsVisible||(this.moveEffectsVisible=!0,this.scene.tweens.add({targets:this.moveEffectContainer,x:6,duration:A?0:250,ease:"Sine.easeOut"}))}hideMoveEffect(A){this.moveEffectsVisible&&(this.moveEffectsVisible=!1,this.scene.tweens.add({targets:this.moveEffectContainer,x:106,duration:A?0:250,ease:"Sine.easeIn"}))}clear(){super.clear(),this.pokemon=null,this.cursor=-1,this.newMove=null,this.moveSelect&&(this.moveSelect=!1,this.moveSelectFunction=null,this.extraMoveRowContainer.setVisible(!1),this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null),this.hideMoveEffect(!0)),this.summaryContainer.setVisible(!1),this.summaryPageContainer.setVisible(!1)}};L($g,"SummaryUiHandler");let t0=$g;const go=1;function rn(E,A,s,R,n){const I=xe(E).getSpriteKey(A??!1,s??0,R??!1,n??0),a=xe(E).getSpriteAtlasPath(A??!1,s??0,R??!1,n??0);return{spriteKey:I,fileRoot:a}}L(rn,"getSpriteKeysFromSpecies");function LM(E){const A=E.getSpeciesForm().getSpriteKey(E.getGender()===je.FEMALE,E.formIndex,E.shiny,E.variant),s=E.getSpeciesForm().getSpriteAtlasPath(E.getGender()===je.FEMALE,E.formIndex,E.shiny,E.variant);return{spriteKey:A,fileRoot:s}}L(LM,"getSpriteKeysFromPokemon");function HZ(E,A=!1,s=!1,R=!1){const n=E.getPlayerParty();let I,a=null;const r=n.filter(o=>(!A||o.isAllowedInChallenge())&&(s||!o.isFainted())),S=n.filter(o=>o.isAllowedInChallenge());if(R&&r.length===1){const o=n.filter(l=>(!A||l.isAllowedInChallenge())&&l.isFainted());o.length>0&&(I=_e(o.length),a=o[I])}return!a&&r.length>0&&(I=_e(r.length),a=r[I]),!a&&A&&S.length>0&&(I=_e(S.length),a=S[I]),a||(I=_e(n.length),a=n[I]),a}L(HZ,"getRandomPlayerPokemon");function N1(E,A=!1,s=!1){const R=E.getPlayerParty();let n=null;for(const I of R)A&&!I.isAllowedInChallenge()||!s&&I.isFainted()||(n=n?(n==null?void 0:n.level)<(I==null?void 0:I.level)?I:n:I);return n}L(N1,"getHighestLevelPlayerPokemon");function dZ(E,A,s=!1,R=!1){const n=E.getPlayerParty();let I=null;for(const a of n)s&&!a.isAllowedInChallenge()||!R&&a.isFainted()||(I=I?I.getStat(A)<(a==null?void 0:a.getStat(A))?a:I:a);return I}L(dZ,"getHighestStatPlayerPokemon");function fZ(E,A=!1,s=!1){const R=E.getPlayerParty();let n=null;for(const I of R)A&&!I.isAllowedInChallenge()||!s&&I.isFainted()||(n=n?(n==null?void 0:n.stats.reduce((a,r)=>a+r))<(I==null?void 0:I.stats.reduce((a,r)=>a+r))?I:n:I);return n}L(fZ,"getHighestStatTotalPlayerPokemon");function T1(E,A,s,R=!0,n=!0,I=!0){let a=Array.isArray(E)?E[0]:E,r=Array.isArray(E)?E[1]:E,S=Object.keys(KA).map(l=>[parseInt(l),KA[l]]).filter(l=>{const C=xe(l[0]);return C&&(!A||!A.includes(l[0]))&&(R||!C.subLegendary)&&(n||!C.legendary)&&(I||!C.mythical)}).map(l=>[xe(l[0]),l[1]]);s&&s.length>0&&(S=S.filter(l=>s.includes(l[0].type1)||!Ve(l[0].type2)&&s.includes(l[0].type2)));let o=S.filter(l=>l[1]>=a&&l[1]<=r);for(;o.length===0&&!(a===0&&r===10);)a>0?a--:r++,o=S.filter(l=>l[1]>=a&&l[1]<=r);if(o.length>0){const l=_e(o.length);return Phaser.Math.RND.shuffle(o)[l][0].speciesId}return e.BULBASAUR}L(T1,"getRandomSpeciesByStarterCost");function c6(E,A){A.hp=0,A.trySetStatus(Re.FAINT),A.updateInfo(),sE(E,D.t("battle:fainted",{pokemonNameWithAffix:ee(A)}))}L(c6,"koPlayerPokemon");function BZ(E,A,s){const R=Math.round(A.hp+s),n=Math.max(Math.min(R,A.getMaxHp()),0);n===0?c6(E,A):A.hp=n}L(BZ,"applyHpChangeToPokemon");function S1(E,A,s){s<=0&&console.warn("Healing pokemon with `applyDamageToPokemon` is not recommended! Please use `applyHealToPokemon` instead."),A.isAllowedInBattle()&&A.hp-s<=0&&(s=A.hp-1),BZ(E,A,-s)}L(S1,"applyDamageToPokemon");async function mx(E,A){var n;const s=(n=$.MYSTERY_ENCOUNTER_SHUCKLE_JUICE().generateType(E.scene.getPlayerParty(),[A]))==null?void 0:n.withIdFromFunc($.MYSTERY_ENCOUNTER_SHUCKLE_JUICE),R=s==null?void 0:s.newModifier(E);R&&(await E.scene.addModifier(R,!1,!1,!1,!0),E.calculateStats())}L(mx,"modifyPlayerPokemonBST");async function iR(E,A,s,R){const n=s.newModifier(A),I=E.findModifier(a=>a instanceof Ht&&a.type.id===s.id&&a.pokemonId===A.id&&a.matchType(n));I&&I.getStackCount()>=I.getMaxStackCount(E)||await E.addModifier(n,!1,!1,!1,!0)}L(iR,"applyModifierTypeToPlayerPokemon");function gZ(E,A,s,R){const n=A.y;if(!R){const S=3*A.getMaxHp(),o=2*A.hp,l=A.species.catchRate,C=Hl(s),M=A.status?Qb(A.status.effect):1,u=Math.round((S-o)*l*C/S*M);R=Math.round(65536/Math.sqrt(Math.sqrt(255/u)))}const I=A.getFieldPositionOffset(),a=TO(s),r=E.addFieldSprite(91,105,"pb",a);return r.setOrigin(.5,.625),E.field.add(r),E.time.delayedCall(300,()=>{E.field.moveBelow(r,A)}),new Promise(S=>{E.trainer.setTexture(`trainer_${E.gameData.gender===vt.FEMALE?"f":"m"}_back_pb`),E.time.delayedCall(512,()=>{E.playSound("se/pb_throw"),E.trainer.setFrame("2"),E.time.delayedCall(256,()=>{E.trainer.setFrame("3"),E.time.delayedCall(768,()=>{E.trainer.setTexture(`trainer_${E.gameData.gender===vt.FEMALE?"f":"m"}_back`)})}),E.tweens.add({targets:r,x:{value:236+I[0],ease:"Linear"},y:{value:16+I[1],ease:"Cubic.easeOut"},duration:500,onComplete:L(()=>{r.setTexture("pb",`${a}_opening`),E.time.delayedCall(17,()=>r.setTexture("pb",`${a}_open`)),E.playSound("se/pb_rel"),A.tint(bO(s)),iM(E,r.x,r.y,s),E.tweens.add({targets:A,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:L(()=>{r.setTexture("pb",`${a}_opening`),A.setVisible(!1),E.playSound("se/pb_catch"),E.time.delayedCall(17,()=>r.setTexture("pb",`${a}`));const o=L(()=>{let l=0;const C=r.x,M=E.tweens.addCounter({from:0,to:1,repeat:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:L(u=>{if(l&&l<4){const h=u.getValue(),P=l%2===1?1:-1;r.setX(C+h*4*P),r.setAngle(h*27.5*P)}},"onUpdate"),onRepeat:L(()=>{if(!A.species.isObtainable())M.stop(),Fx(E,A,n,r,s).then(()=>S(!1));else if(l++<3)_e(65536)<R?E.playSound("se/pb_move"):(M.stop(),Fx(E,A,n,r,s).then(()=>S(!1)));else{E.playSound("se/pb_lock"),u6(E,r);const u=E.add.sprite(r.x,r.y,"pb","pb");u.setOrigin(r.originX,r.originY),u.setTintFill(0),u.setAlpha(0),E.field.add(u),E.tweens.add({targets:u,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:L(()=>{E.tweens.add({targets:u,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:L(()=>u.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:L(()=>{_r(E,A,r,s).then(()=>S(!0))},"onComplete")})},"doShake");E.time.delayedCall(250,()=>e6(E,r,16,72,350,o))},"onComplete")})},"onComplete")})})})}L(gZ,"trainerThrowPokeball");function Fx(E,A,s,R,n){return new Promise(I=>{var r;E.playSound("se/pb_rel"),A.setY(s),((r=A.status)==null?void 0:r.effect)!==Re.SLEEP&&A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.tint(bO(n)),A.setVisible(!0),A.untint(250,"Sine.easeOut");const a=TO(n);R.setTexture("pb",`${a}_opening`),E.time.delayedCall(17,()=>R.setTexture("pb",`${a}_open`)),E.tweens.add({targets:A,duration:250,ease:"Sine.easeOut",scale:1}),E.currentBattle.lastUsedPokeball=n,_6(E,R),E.ui.showText(D.t("battle:pokemonBrokeFree",{pokemonName:A.getNameToRender()}),null,()=>I(),null,!0)})}L(Fx,"failCatch");async function _r(E,A,s,R,n=!0,I=!1){const a=A.fusionSpecies?A.getFusionSpeciesForm():A.getSpeciesForm();return a.abilityHidden&&(A.fusionSpecies?A.fusionAbilityIndex:A.abilityIndex)===a.getAbilityCount()-1&&E.validateAchv(lt.HIDDEN_ABILITY),A.species.subLegendary&&E.validateAchv(lt.CATCH_SUB_LEGENDARY),A.species.legendary&&E.validateAchv(lt.CATCH_LEGENDARY),A.species.mythical&&E.validateAchv(lt.CATCH_MYTHICAL),E.pokemonInfoContainer.show(A,!0),E.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),new Promise(r=>{const S=L(()=>{const o=L(()=>{E.getEnemyParty().some(M=>M.id===A.id)||E.getEnemyParty().push(A),E.unshiftPhase(new JT(E,A.id,!0)),E.pokemonInfoContainer.hide(),s&&_6(E,s),r()},"end"),l=L(()=>{A&&E.field.remove(A,!0)},"removePokemon"),C=L(M=>{const u=A.addToParty(R,M),h=E.findModifiers(P=>P instanceof Ht,!1);E.getPlayerParty().filter(P=>P.isShiny()).length===6&&E.validateAchv(lt.SHINY_PARTY),Promise.all(h.map(P=>E.addModifier(P,!0))).then(()=>{E.updateModifiers(!0),l(),u?u.loadAssets().then(o):o()})},"addToParty");Promise.all([A.hideInfo(),E.gameData.setPokemonCaught(A)]).then(()=>{if(E.getPlayerParty().length===6){const M=L(()=>{E.ui.showText(D.t("battle:partyFull",{pokemonName:A.getNameToRender()}),null,()=>{E.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),E.ui.setMode(Oe.CONFIRM,()=>{const u=E.addPlayerPokemon(A.species,A.level,A.abilityIndex,A.formIndex,A.gender,A.shiny,A.variant,A.ivs,A.nature,A);E.ui.setMode(Oe.SUMMARY,u,0,rM.DEFAULT,()=>{E.ui.setMode(Oe.MESSAGE).then(()=>{M()})},!1)},()=>{E.ui.setMode(Oe.PARTY,us.RELEASE,0,(u,h)=>{E.ui.setMode(Oe.MESSAGE).then(()=>{u<6?C(u):M()})})},()=>{E.ui.setMode(Oe.MESSAGE).then(()=>{l(),o()})},"fullParty")})},"promptRelease");M()}else C()})},"doPokemonCatchMenu");n?E.ui.showText(D.t(I?"battle:pokemonObtained":"battle:pokemonCaught",{pokemonName:A.getNameToRender()}),null,S,0,!0):S()})}L(_r,"catchPokemon");function _6(E,A){A&&E.tweens.add({targets:A,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:L(()=>{A.destroy()},"onComplete")})}L(_6,"removePb");async function KZ(E,A){await new Promise(s=>{E.playSound("se/flee"),E.tweens.add({targets:A,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:L(()=>{A.setVisible(!1),E.field.remove(A,!0),$t(E,D.t("battle:pokemonFled",{pokemonName:A.getNameToRender()}),null,600,!1).then(()=>{s()})},"onComplete")})})}L(KZ,"doPokemonFlee");function mZ(E,A){return new Promise(s=>{E.tweens.add({targets:A,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:L(()=>{A.setVisible(!1),E.field.remove(A,!0),$t(E,D.t("battle:playerFled",{pokemonName:A.getNameToRender()}),null,600,!1).then(()=>{s()})},"onComplete")})})}L(mZ,"doPlayerFlee");const px=[[e.SCYTHER,40],[e.SCIZOR,40],[e.KLEAVOR,40],[e.PINSIR,40],[e.HERACROSS,40],[e.YANMA,40],[e.YANMEGA,40],[e.SHUCKLE,40],[e.ANORITH,40],[e.ARMALDO,40],[e.ESCAVALIER,40],[e.ACCELGOR,40],[e.JOLTIK,40],[e.GALVANTULA,40],[e.DURANT,40],[e.LARVESTA,40],[e.VOLCARONA,40],[e.DEWPIDER,40],[e.ARAQUANID,40],[e.WIMPOD,40],[e.GOLISOPOD,40],[e.SIZZLIPEDE,40],[e.CENTISKORCH,40],[e.NYMBLE,40],[e.LOKIX,40],[e.BUZZWOLE,1],[e.PHEROMOSA,1]];function FZ(E){const A=px.reduce((n,I)=>n+I[1],0),s=_e(A);let R=0;for(const n of px)if(R+=n[1],s<R){const I=xe(n[0]);return xe(I.getSpeciesForLevel(E,!0))}return xe(e.SCYTHER)}L(FZ,"getGoldenBugNetSpecies");function Ko(E,A=0){const s=E.currentBattle;return s.getLevelForWave()+Math.max(Math.round(s.waveIndex/10*A),0)}L(Ko,"getEncounterPokemonLevelForWave");async function Wx(E,A){const s=A.fusionSpecies?A.getFusionSpeciesForm():A.getSpeciesForm();return s.abilityHidden&&(A.fusionSpecies?A.fusionAbilityIndex:A.abilityIndex)===s.getAbilityCount()-1&&E.validateAchv(lt.HIDDEN_ABILITY),A.species.subLegendary&&E.validateAchv(lt.CATCH_SUB_LEGENDARY),A.species.legendary&&E.validateAchv(lt.CATCH_LEGENDARY),A.species.mythical&&E.validateAchv(lt.CATCH_MYTHICAL),E.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),E.gameData.setPokemonCaught(A,!0,!1,!1)}L(Wx,"addPokemonDataToDexAndValidateAchievements");function YI(E,A,s){return E.isAllowedInChallenge()?E.isAllowedInBattle()?null:mA(A,s)??null:D.t("partyUiHandler:cantBeUsed",{pokemonName:E.getNameToRender()})??null}L(YI,"isPokemonValidForEncounterOptionSelection");function P6(E,A){E.isFusion()?(E.fusionCustomPokemonData||(E.fusionCustomPokemonData=new ns),E.fusionCustomPokemonData.ability=A):(E.customPokemonData||(E.customPokemonData=new ns),E.customPokemonData.ability=A)}L(P6,"applyAbilityOverrideToPokemon");const zg=class zg extends Phaser.GameObjects.Container{constructor(A,s){var C;if(super(A,-72,76),this.encounter=s,this.enterFromRight=s.enterIntroVisualsFromRight??!1,this.spriteConfigs=s.spriteConfigs.map(M=>{const u={...M};if(!Ve(u.species)){const h=rn(u.species,void 0,void 0,u.isShiny,u.variant);u.spriteKey=h.spriteKey,u.fileRoot=h.fileRoot,u.isPokemon=!0}return u}),!this.spriteConfigs)return;const R=L((M,u,h)=>{const P=this.scene.addFieldSprite(0,0,M);return P.setOrigin(.5,1),P.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!!u,yShadowOffset:h??0}),P},"getSprite"),n=L((M,u,h)=>{const P=this.scene.add.sprite(-19,2,"items",M);return P.setOrigin(.5,1),P.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!!u,yShadowOffset:h??0}),P},"getItemSprite"),I=-40,a=40,r=4;let S=0;const o=Math.round((a-I)/Math.max(this.spriteConfigs.filter(M=>!M.x&&!M.y).length,1));this.shinySparkleSprites=[];const l=A.add.container(0,0);(C=this.spriteConfigs)==null||C.forEach(M=>{const{spriteKey:u,isItem:h,hasShadow:P,scale:G,x:d,y:H,yShadow:f,alpha:K,isPokemon:W,isShiny:V,variant:k}=M;let Q,j,J;h?(Q=n(u,P,f),j=n(u)):(Q=R(u,P,f),j=R(u),W&&V&&(Q.setPipelineData("spriteKey",u),j.setPipelineData("spriteKey",u),Q.setPipelineData("shiny",!0),Q.setPipelineData("variant",k),j.setPipelineData("shiny",!0),j.setPipelineData("variant",k),J=A.add.sprite(Q.x,Q.y,"shiny"),J.setOrigin(.5,1),J.setVisible(!1),this.shinySparkleSprites.push({sprite:J,variant:k??0}),l.add(J))),Q.setVisible(!M.hidden),j.setVisible(!1),G&&(Q.setScale(G),j.setScale(G)),d||H?(d&&(Q.setPosition(r+d,Q.y),j.setPosition(r+d,j.y)),H&&(Q.setPosition(Q.x,Q.y+H),j.setPosition(j.x,j.y+H))):this.spriteConfigs.length===1?(Q.x=r,j.x=r):(Q.x=I+(S+.5)*o+r,j.x=I+(S+.5)*o+r,S++),Ve(J)||J.setPosition(Q.x,Q.y),Ve(K)||(Q.setAlpha(K),j.setAlpha(K)),this.add(Q),this.add(j)}),this.add(l)}loadAssets(){return new Promise(A=>{this.spriteConfigs||A(),this.spriteConfigs.forEach(s=>{s.isPokemon?(this.scene.loadPokemonAtlas(s.spriteKey,s.fileRoot),s.isShiny&&this.scene.loadPokemonVariantAssets(s.spriteKey,s.fileRoot,s.variant)):s.isItem?this.scene.loadAtlas("items",""):this.scene.loadAtlas(s.spriteKey,s.fileRoot)}),this.scene.load.once(Phaser.Loader.Events.COMPLETE,()=>{this.spriteConfigs.every(s=>{if(s.isItem)return!0;const R=console.warn;console.warn=()=>{};const n=this.scene.anims.generateFrameNames(s.spriteKey,{zeroPad:4,suffix:".png",start:1,end:128});return console.warn=R,this.scene.anims.exists(s.spriteKey)||this.scene.anims.create({key:s.spriteKey,frames:n,frameRate:10,repeat:-1}),!0}),A()}),this.scene.load.isLoading()||this.scene.load.start()})}initSprite(){this.spriteConfigs&&(this.getSprites().map((A,s)=>{if(!this.spriteConfigs[s].isItem&&(A.setTexture(this.spriteConfigs[s].spriteKey).setFrame(0),A.texture.frameTotal>1)){const R=A.texture.frames["0001.png"];A.setFrame(R??0)}}),this.getTintSprites().map((A,s)=>{if(!this.spriteConfigs[s].isItem&&(A.setTexture(this.spriteConfigs[s].spriteKey).setFrame(0),A.texture.frameTotal>1)){const R=A.texture.frames["0001.png"];A.setFrame(R??0)}}),this.spriteConfigs.every((A,s)=>{if(!A.tint)return!0;const R=this.getAt(s*2+1);return this.tint(R,0,A.tint),!0}))}tryPlaySprite(A,s,R){return A.texture.key==="__MISSING"?(console.error(`No texture found for '${R.key}'!`),!1):A.texture.frameTotal<=1?(console.warn(`No animation found for '${R.key}'. Is this intentional?`),!1):(A.play(R),s.play(R),!0)}playShinySparkles(){for(const A of this.shinySparkleSprites)this.scene.time.delayedCall(500,()=>{IM(this.scene,A.sprite,A.variant)})}playAnim(){if(!this.spriteConfigs)return;const A=this.getSprites(),s=this.getTintSprites();this.spriteConfigs.forEach((R,n)=>{if(!R.disableAnimation){const I={key:R.spriteKey,repeat:R!=null&&R.repeat?-1:0,startFrame:(R==null?void 0:R.startFrame)??0};this.tryPlaySprite(A[n],s[n],I)}})}getSpriteAtIndex(A){if(!this.spriteConfigs)return[];const s=[];return s.push(this.getAt(A*2)),s.push(this.getAt(A*2+1)),s}getSprites(){if(!this.spriteConfigs)return[];const A=[];return this.spriteConfigs.forEach((s,R)=>{A.push(this.getAt(R*2))}),A}getTintSprites(){if(!this.spriteConfigs)return[];const A=[];return this.spriteConfigs.forEach((s,R)=>{A.push(this.getAt(R*2+1))}),A}tint(A,s,R,n,I){A.setTintFill(s),A.setVisible(!0),n?(A.setAlpha(0),this.scene.tweens.add({targets:A,alpha:R||1,duration:n,ease:I||"Linear"})):A.setAlpha(R)}tintAll(A,s,R,n){this.getTintSprites().map(a=>{this.tint(a,A,s,R,n)})}untint(A,s,R){s?this.scene.tweens.add({targets:A,alpha:0,duration:s,ease:R||"Linear",onComplete:L(()=>{A.setVisible(!1),A.setAlpha(1)},"onComplete")}):(A.setVisible(!1),A.setAlpha(1))}untintAll(A,s){this.getTintSprites().map(n=>{this.untint(n,A,s)})}setVisible(A){return this.getSprites().forEach(s=>{s.setVisible(A)}),super.setVisible(A)}};L(zg,"MysteryEncounterIntroVisuals");let $T=zg;const qg=class qg{};L(qg,"EncounterSceneRequirement");let zI=qg;const jg=class jg{};L(jg,"EncounterPokemonRequirement");let ZO=jg;const NN=class NN extends ZO{static Some(...A){return new NN(!1,...A)}static Every(...A){return new NN(!0,...A)}constructor(A,...s){super(),this.isAnd=A,this.invertQuery=!1,this.minNumberOfPokemon=1,this.requirements=s}meetsRequirement(A){return this.isAnd?this.requirements.every(s=>s.meetsRequirement(A)):this.requirements.some(s=>s.meetsRequirement(A))}queryParty(A){if(this.isAnd)return this.requirements.reduce((s,R)=>R.queryParty(s),A);{const s=this.requirements.find(R=>R.queryParty(A).length>0);return s?s.queryParty(A):[]}}getDialogueToken(A,s){if(this.isAnd)throw new Error("Not implemented (Sorry)");for(const R of this.requirements)if(R.meetsRequirement(A))return R.getDialogueToken(A,s);return this.requirements[0].getDialogueToken(A,s)}};L(NN,"CombinationPokemonRequirement");let qI=NN;const eK=class eK extends zI{constructor(A){super(),this.waveRange=A}meetsRequirement(A){if(!Ve(this.waveRange)&&this.waveRange[0]<=this.waveRange[1]){const s=A.currentBattle.waveIndex;if(s>=0&&this.waveRange[0]>=0&&this.waveRange[0]>s||this.waveRange[1]>=0&&this.waveRange[1]<s)return!1}return!0}getDialogueToken(A,s){return["waveIndex",A.currentBattle.waveIndex.toString()]}};L(eK,"WaveRangeRequirement");let A0=eK;const tK=class tK extends zI{constructor(A,s){super(),this.waveModuli=A,this.modulusValue=s}meetsRequirement(A){return this.waveModuli.includes(A.currentBattle.waveIndex%this.modulusValue)}getDialogueToken(A,s){return["waveIndex",A.currentBattle.waveIndex.toString()]}};L(tK,"WaveModulusRequirement");let E0=tK;const AK=class AK extends zI{constructor(A,s){super(),this.partySizeRange=A,this.excludeDisallowedPokemon=s}meetsRequirement(A){if(!Ve(this.partySizeRange)&&this.partySizeRange[0]<=this.partySizeRange[1]){const s=this.excludeDisallowedPokemon?A.getPokemonAllowedInBattle().length:A.getPlayerParty().length;if(s>=0&&this.partySizeRange[0]>=0&&this.partySizeRange[0]>s||this.partySizeRange[1]>=0&&this.partySizeRange[1]<s)return!1}return!0}getDialogueToken(A,s){return["partySize",A.getPlayerParty().length.toString()]}};L(AK,"PartySizeRequirement");let s0=AK;const EK=class EK extends zI{constructor(A,s=1){super(),this.minNumberOfItems=s,this.requiredHeldItemModifiers=Array.isArray(A)?A:[A]}meetsRequirement(A){var n;const s=A.getPlayerParty();if(Ve(s)||((n=this.requiredHeldItemModifiers)==null?void 0:n.length)<0)return!1;let R=0;return this.requiredHeldItemModifiers.forEach(I=>{const a=A.findModifiers(r=>r.constructor.name===I);(a==null?void 0:a.length)>0&&a.forEach(r=>{R+=r.stackCount})}),R>=this.minNumberOfItems}getDialogueToken(A,s){return["requiredItem",this.requiredHeldItemModifiers[0]]}};L(EK,"PersistentModifierRequirement");let TC=EK;const sK=class sK extends zI{constructor(A,s){super(),this.requiredMoney=A??0,this.scalingMultiplier=s??0}meetsRequirement(A){const s=A.money;return Ve(s)?!1:(this.scalingMultiplier>0&&(this.requiredMoney=A.getWaveMoneyAmount(this.scalingMultiplier)),!(this.requiredMoney>0&&this.requiredMoney>s))}getDialogueToken(A,s){return["money",this.scalingMultiplier>0?A.getWaveMoneyAmount(this.scalingMultiplier).toString():this.requiredMoney.toString()]}};L(sK,"MoneyRequirement");let XO=sK;const RK=class RK extends ZO{constructor(A,s=!0,R=1,n=!1){super(),this.excludeFainted=s,this.minNumberOfPokemon=R,this.invertQuery=n,this.requiredType=Array.isArray(A)?A:[A]}meetsRequirement(A){let s=A.getPlayerParty();return Ve(s)?!1:(this.excludeFainted&&(s=s.filter(R=>!R.isFainted())),this.queryParty(s).length>=this.minNumberOfPokemon)}queryParty(A){return this.invertQuery?A.filter(s=>this.requiredType.filter(R=>s.getTypes().includes(R)).length===0):A.filter(s=>this.requiredType.filter(R=>s.getTypes().includes(R)).length>0)}getDialogueToken(A,s){const R=this.requiredType.filter(n=>s==null?void 0:s.getTypes().includes(n));return R.length>0?["type",i[R[0]]]:["type",""]}};L(RK,"TypeRequirement");let Pr=RK;const OK=class OK extends ZO{constructor(A,s,R=1,n=!1){super(),this.requiredMoves=[],this.excludeDisallowedPokemon=s,this.minNumberOfPokemon=R,this.invertQuery=n,this.requiredMoves=Array.isArray(A)?A:[A]}meetsRequirement(A){var R;const s=A.getPlayerParty();return Ve(s)||((R=this.requiredMoves)==null?void 0:R.length)<0?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&!s.moveset.some(R=>(R==null?void 0:R.moveId)&&this.requiredMoves.includes(R.moveId))):A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&s.moveset.some(R=>(R==null?void 0:R.moveId)&&this.requiredMoves.includes(R.moveId)))}getDialogueToken(A,s){const R=s==null?void 0:s.moveset.filter(n=>(n==null?void 0:n.moveId)&&this.requiredMoves.includes(n.moveId));return R&&R.length>0&&R[0]?["move",R[0].getName()]:["move",""]}};L(OK,"MoveRequirement");let wi=OK;const nK=class nK extends ZO{constructor(A,s,R=1,n=!1){super(),this.excludeDisallowedPokemon=s,this.minNumberOfPokemon=R,this.invertQuery=n,this.requiredAbilities=Array.isArray(A)?A:[A]}meetsRequirement(A){var R;const s=A.getPlayerParty();return Ve(s)||((R=this.requiredAbilities)==null?void 0:R.length)<0?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&this.requiredAbilities.filter(R=>s.hasAbility(R,!1)).length===0):A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&this.requiredAbilities.some(R=>s.hasAbility(R,!1)))}getDialogueToken(A,s){const R=this.requiredAbilities.find(n=>s==null?void 0:s.hasAbility(n,!1));return Ve(R)?["ability",""]:["ability",LE[R].name]}};L(nK,"AbilityRequirement");let SC=nK;const iK=class iK extends ZO{constructor(A,s=1,R=!1){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredStatusEffect=Array.isArray(A)?A:[A]}meetsRequirement(A){var n;const s=A.getPlayerParty();if(Ve(s)||((n=this.requiredStatusEffect)==null?void 0:n.length)<0)return!1;const R=this.queryParty(s).length>=this.minNumberOfPokemon;return console.log(R),R}queryParty(A){return this.invertQuery?A.filter(s=>!this.requiredStatusEffect.some(R=>{var n;return R===Re.NONE?Ve(s.status)||Ve(s.status.effect)||s.status.effect===R:((n=s.status)==null?void 0:n.effect)===R})):A.filter(s=>this.requiredStatusEffect.some(R=>{var n;return R===Re.NONE?Ve(s.status)||Ve(s.status.effect)||s.status.effect===R:((n=s.status)==null?void 0:n.effect)===R}))}getDialogueToken(A,s){const R=this.requiredStatusEffect.filter(n=>{var I;return n===Re.NONE?Ve(s==null?void 0:s.status)||Ve(s.status.effect)||s.status.effect===n:((I=s.status)==null?void 0:I.effect)===n});return R.length>0?["status",Re[R[0]]]:["status",""]}};L(iK,"StatusEffectRequirement");let R0=iK;const IK=class IK extends ZO{constructor(A,s=1,R=!1,n=!0){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHeldItemModifiers=Array.isArray(A)?A:[A],this.requireTransferable=n}meetsRequirement(A){const s=A.getPlayerParty();return Ve(s)?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>s.getHeldItems().filter(R=>!this.requiredHeldItemModifiers.some(n=>R.constructor.name===n)&&(!this.requireTransferable||R.isTransferable)).length>0):A.filter(s=>this.requiredHeldItemModifiers.some(R=>s.getHeldItems().some(n=>n.constructor.name===R&&(!this.requireTransferable||n.isTransferable))))}getDialogueToken(A,s){const R=s==null?void 0:s.getHeldItems().filter(n=>this.requiredHeldItemModifiers.some(I=>n.constructor.name===I)&&(!this.requireTransferable||n.isTransferable));return R&&R.length>0?["heldItem",R[0].type.name]:["heldItem",""]}};L(IK,"HeldItemRequirement");let di=IK;const aK=class aK extends ZO{constructor(A,s=1,R=!1,n=!0){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHeldItemTypes=Array.isArray(A)?A:[A],this.requireTransferable=n}meetsRequirement(A){const s=A.getPlayerParty();return Ve(s)?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>s.getHeldItems().filter(R=>!this.requiredHeldItemTypes.some(n=>R instanceof Sn&&R.type.moveType===n&&(!this.requireTransferable||R.isTransferable))).length>0):A.filter(s=>this.requiredHeldItemTypes.some(R=>s.getHeldItems().some(n=>n instanceof Sn&&n.type.moveType===R&&(!this.requireTransferable||n.isTransferable))))}getDialogueToken(A,s){const R=s==null?void 0:s.getHeldItems().filter(n=>this.requiredHeldItemTypes.some(I=>n instanceof Sn&&n.type.moveType===I)&&(!this.requireTransferable||n.isTransferable));return R&&R.length>0?["heldItem",R[0].type.name]:["heldItem",""]}};L(aK,"AttackTypeBoosterHeldItemTypeRequirement");let oC=aK;const rK=class rK extends ZO{constructor(A,s=1,R=!1){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHealthRange=A}meetsRequirement(A){if(!Ve(this.requiredHealthRange)&&this.requiredHealthRange[0]<=this.requiredHealthRange[1]){const s=A.getPlayerParty();if(this.queryParty(s).length<this.minNumberOfPokemon)return!1}return!0}queryParty(A){return this.invertQuery?A.filter(s=>s.getHpRatio()<this.requiredHealthRange[0]||s.getHpRatio()>this.requiredHealthRange[1]):A.filter(s=>s.getHpRatio()>=this.requiredHealthRange[0]&&s.getHpRatio()<=this.requiredHealthRange[1])}getDialogueToken(A,s){const R=s==null?void 0:s.getHpRatio();return Ve(R)?["healthRatio",""]:["healthRatio",Math.floor(R*100).toString()+"%"]}};L(rK,"HealthRatioRequirement");let O0=rK;const LK=class LK extends ZO{constructor(A,s={}){super(),this.requiredMoves=Array.isArray(A)?A:[A],this.excludeLevelMoves=s.excludeLevelMoves??!1,this.excludeTmMoves=s.excludeTmMoves??!1,this.excludeEggMoves=s.excludeEggMoves??!1,this.includeFainted=s.includeFainted??!1,this.minNumberOfPokemon=s.minNumberOfPokemon??1,this.invertQuery=s.invertQuery??!1}meetsRequirement(A){var R;const s=A.getPlayerParty().filter(n=>this.includeFainted?n.isAllowedInChallenge():n.isAllowedInBattle());return Ve(s)||((R=this.requiredMoves)==null?void 0:R.length)<0?!1:this.queryParty(s).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>!this.requiredMoves.some(R=>this.getAllPokemonMoves(s).includes(R))):A.filter(s=>this.requiredMoves.every(R=>this.getAllPokemonMoves(s).includes(R)))}getDialogueToken(A,s){return["requiredMoves",this.requiredMoves.map(R=>new Ot(R).getName()).join(", ")]}getPokemonLevelMoves(A){return A.getLevelMoves().map(([s,R])=>R)}getAllPokemonMoves(A){const s=[];return this.excludeLevelMoves||s.push(...this.getPokemonLevelMoves(A)??[]),this.excludeTmMoves||s.push(...A.compatibleTms??[]),this.excludeEggMoves||s.push(...A.getEggMoves()??[]),s}};L(LK,"CanLearnMoveRequirement");let n0=LK;var ct=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.DISABLED_OR_DEFAULT=1]="DISABLED_OR_DEFAULT",E[E.DEFAULT_OR_SPECIAL=2]="DEFAULT_OR_SPECIAL",E[E.DISABLED_OR_SPECIAL=3]="DISABLED_OR_SPECIAL",E))(ct||{});const NK=class NK{constructor(A){Ve(A)||Object.assign(this,A),this.hasDexProgress=this.hasDexProgress??!1,this.requirements=this.requirements??[],this.primaryPokemonRequirements=this.primaryPokemonRequirements??[],this.secondaryPokemonRequirements=this.secondaryPokemonRequirements??[]}hasRequirements(){return this.requirements.length>0||this.primaryPokemonRequirements.length>0||this.secondaryPokemonRequirements.length>0}meetsRequirements(A){return!this.requirements.some(s=>!s.meetsRequirement(A))&&this.meetsSupportingRequirementAndSupportingPokemonSelected(A)&&this.meetsPrimaryRequirementAndPrimaryPokemonSelected(A)}pokemonMeetsPrimaryRequirements(A,s){return!this.primaryPokemonRequirements.some(R=>!R.queryParty(A.getPlayerParty()).map(n=>n.id).includes(s.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(A){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0)return!0;let s=A.getPlayerParty();for(const R of this.primaryPokemonRequirements)if(R.meetsRequirement(A)){const n=R.queryParty(A.getPlayerParty());s=s.filter(I=>n.includes(I))}else return this.primaryPokemon=void 0,!1;if(s.length===0)return!1;if(this.excludePrimaryFromSecondaryRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const R=[],n=[];for(const I of s)this.secondaryPokemon.includes(I)?n.push(I):R.push(I);return R.length>0?(this.primaryPokemon=R[_e(R.length)],!0):n.length>1||this.secondaryPokemon.length-n.length>=1?(this.primaryPokemon=n[_e(n.length)],this.secondaryPokemon=this.secondaryPokemon.filter(I=>I!==this.primaryPokemon),!0):(console.log("Mystery Encounter Edge Case: Requirement not met due to primay pokemon overlapping with support pokemon. There's no valid primary pokemon left."),!1)}else return this.primaryPokemon=s[0],!0}meetsSupportingRequirementAndSupportingPokemonSelected(A){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let s=A.getPlayerParty();for(const R of this.secondaryPokemonRequirements)if(R.meetsRequirement(A)){const n=R.queryParty(A.getPlayerParty());s=s.filter(I=>n.includes(I))}else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=s,!0}};L(NK,"MysteryEncounterOption");let i0=NK;const BD=class BD{constructor(){this.optionMode=ct.DEFAULT,this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSecondaryRequirements=!1,this.isDisabledOnRequirementsNotMet=!0,this.hasDexProgress=!1}static newOptionWithMode(A){return Object.assign(new BD,{optionMode:A})}withHasDexProgress(A){return Object.assign(this,{hasDexProgress:A})}withSceneRequirement(A){return this.requirements.push(A),Object.assign(this,{requirements:this.requirements})}withSceneMoneyRequirement(A,s){return this.withSceneRequirement(new XO(A,s))}withPreOptionPhase(A){return Object.assign(this,{onPreOptionPhase:A})}withOptionPhase(A){return Object.assign(this,{onOptionPhase:A})}withPostOptionPhase(A){return Object.assign(this,{onPostOptionPhase:A})}withPrimaryPokemonRequirement(A){return this.primaryPokemonRequirements.push(A),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPokemonTypeRequirement(A,s,R,n){return this.withPrimaryPokemonRequirement(new Pr(A,s,R,n))}withPokemonCanLearnMoveRequirement(A,s){return this.withPrimaryPokemonRequirement(new n0(A,s))}withSecondaryPokemonRequirement(A,s=!0){return this.secondaryPokemonRequirements.push(A),this.excludePrimaryFromSecondaryRequirements=s,Object.assign(this,{secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withDialogue(A){return this.dialogue=A,this}build(){return new i0(this)}};L(BD,"MysteryEncounterOptionBuilder");let Ft=BD;var Vt=(E=>(E[E.COMMON=66]="COMMON",E[E.GREAT=40]="GREAT",E[E.ULTRA=19]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=0]="MASTER",E))(Vt||{});const pZ=2,WZ=1,TK=class TK{constructor(A){this.startOfBattleEffects=[],Ve(A)||Object.assign(this,A),this.encounterTier=this.encounterTier??Vt.COMMON,this.localizationKey=this.localizationKey??"",this.dialogue=this.dialogue??{},this.spriteConfigs=this.spriteConfigs?[...this.spriteConfigs]:[],this.maxAllowedEncounters=this.maxAllowedEncounters??this.encounterTier===Vt.ROGUE?WZ:pZ,this.encounterMode=oE.DEFAULT,this.requirements=this.requirements?this.requirements:[],this.hideBattleIntroMessage=this.hideBattleIntroMessage??!1,this.autoHideIntroVisuals=this.autoHideIntroVisuals??!0,this.enterIntroVisualsFromRight=this.enterIntroVisualsFromRight??!1,this.continuousEncounter=this.continuousEncounter??!1,this.startOfBattleEffectsComplete=!1,this.lockEncounterRewardTiers=!0,this.dialogueTokens={},this.enemyPartyConfigs=[],this.startOfBattleEffects=[],this.introVisuals=void 0,this.misc=null,this.expMultiplier=1,this.loadAssets=[]}meetsRequirements(A){const s=!this.requirements.some(I=>!I.meetsRequirement(A)),R=this.meetsSecondaryRequirementAndSecondaryPokemonSelected(A),n=this.meetsPrimaryRequirementAndPrimaryPokemonSelected(A);return s&&R&&n}pokemonMeetsPrimaryRequirements(A,s){return!this.primaryPokemonRequirements.some(R=>!R.queryParty(A.getPlayerParty()).map(n=>n.id).includes(s.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(A){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0){const R=A.getPlayerParty().filter(n=>n.isActive(!0));return R.length>0?this.primaryPokemon=R[0]:this.primaryPokemon=A.getPlayerParty().filter(n=>n.isAllowedInBattle())[0],!0}let s=A.getPlayerParty();for(const R of this.primaryPokemonRequirements)if(R.meetsRequirement(A))s=s.filter(n=>R.queryParty(A.getPlayerParty()).includes(n));else return this.primaryPokemon=void 0,!1;if(s.length===0)return!1;if(this.excludePrimaryFromSupportRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const R=[],n=[];for(const I of s)this.secondaryPokemon.includes(I)?n.push(I):R.push(I);return R.length>0?(this.primaryPokemon=R[_e(R.length,0)],!0):n.length>1||this.secondaryPokemon.length-n.length>=1?(this.primaryPokemon=n[_e(n.length,0)],this.secondaryPokemon=this.secondaryPokemon.filter(I=>I!==this.primaryPokemon),!0):(console.log("Mystery Encounter Edge Case: Requirement not met due to primary pokemon overlapping with secondary pokemon. There's no valid primary pokemon left."),!1)}else return this.primaryPokemon=s[_e(s.length,0)],!0}meetsSecondaryRequirementAndSecondaryPokemonSelected(A){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let s=A.getPlayerParty();for(const R of this.secondaryPokemonRequirements)if(R.meetsRequirement(A))s=s.filter(n=>R.queryParty(A.getPlayerParty()).includes(n));else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=s,!0}initIntroVisuals(A){this.introVisuals=new $T(A,this)}populateDialogueTokensFromRequirements(A){var s,R,n;if(this.meetsRequirements(A),((s=this.requirements)==null?void 0:s.length)>0)for(const I of this.requirements){const a=I.getDialogueToken(A);(a==null?void 0:a.length)===2&&this.setDialogueToken(...a)}if(this.primaryPokemon&&this.primaryPokemon.length>0){this.setDialogueToken("primaryName",this.primaryPokemon.getNameToRender());for(const I of this.primaryPokemonRequirements)if(!I.invertQuery){const a=I.getDialogueToken(A,this.primaryPokemon);(a==null?void 0:a.length)===2&&this.setDialogueToken("primary"+ca(a[0]),a[1])}}if(((R=this.secondaryPokemonRequirements)==null?void 0:R.length)>0&&this.secondaryPokemon&&this.secondaryPokemon.length>0){this.setDialogueToken("secondaryName",this.secondaryPokemon[0].getNameToRender());for(const I of this.secondaryPokemonRequirements)if(!I.invertQuery){const a=I.getDialogueToken(A,this.secondaryPokemon[0]);(a==null?void 0:a.length)===2&&this.setDialogueToken("primary"+ca(a[0]),a[1]),this.setDialogueToken("secondary"+ca(a[0]),a[1])}}for(let I=0;I<this.options.length;I++){const a=this.options[I];a.meetsRequirements(A);const r=I+1;if(a.requirements.length>0)for(const S of a.requirements){const o=S.getDialogueToken(A);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+r+ca(o[0]),o[1])}if(a.primaryPokemonRequirements.length>0&&a.primaryPokemon){this.setDialogueToken("option"+r+"PrimaryName",a.primaryPokemon.getNameToRender());for(const S of a.primaryPokemonRequirements)if(!S.invertQuery){const o=S.getDialogueToken(A,a.primaryPokemon);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+r+"Primary"+ca(o[0]),o[1])}}if(((n=a.secondaryPokemonRequirements)==null?void 0:n.length)>0&&a.secondaryPokemon&&a.secondaryPokemon.length>0){this.setDialogueToken("option"+r+"SecondaryName",a.secondaryPokemon[0].getNameToRender());for(const S of a.secondaryPokemonRequirements)if(!S.invertQuery){const o=S.getDialogueToken(A,a.secondaryPokemon[0]);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+r+"Secondary"+ca(o[0]),o[1])}}}}setDialogueToken(A,s){this.dialogueTokens[A]=s}getSeedOffset(){return this.seedOffset}updateSeedOffset(A){const s=this.seedOffset??A.currentBattle.waveIndex*1e3;this.seedOffset=s+512}};L(TK,"MysteryEncounter");let zT=TK;const gD=class gD{constructor(){this.enemyPartyConfigs=[],this.localizationKey="",this.dialogue={},this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSupportRequirements=!0,this.dialogueTokens={},this.hideBattleIntroMessage=!1,this.autoHideIntroVisuals=!0,this.enterIntroVisualsFromRight=!1,this.continuousEncounter=!1,this.catchAllowed=!1,this.fleeAllowed=!0,this.lockEncounterRewardTiers=!1,this.startOfBattleEffectsComplete=!1,this.hasBattleAnimationsWithoutTargets=!1,this.skipEnemyBattleTurns=!1,this.skipToFightInput=!1,this.preventGameStatsUpdates=!1,this.maxAllowedEncounters=3,this.expMultiplier=1}static withEncounterType(A){return Object.assign(new gD,{encounterType:A})}withOption(A){return this.options?(this.options.push(A),this):Object.assign(this,{options:[A]})}withSimpleOption(A,s){return this.withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue(A).withOptionPhase(s).build())}withSimpleDexProgressOption(A,s){return this.withOption(Ft.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue(A).withOptionPhase(s).build())}withIntroSpriteConfigs(A){return Object.assign(this,{spriteConfigs:A})}withIntroDialogue(A=[]){return this.dialogue={...this.dialogue,intro:A},this}withIntro({spriteConfigs:A,dialogue:s}){return this.withIntroSpriteConfigs(A).withIntroDialogue(s)}setLocalizationKey(A){return this.localizationKey=A,this}withEncounterTier(A){return Object.assign(this,{encounterTier:A})}withAnimations(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{encounterAnimations:s})}withDisallowedGameModes(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{disallowedGameModes:s})}withDisallowedChallenges(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{disallowedChallenges:s})}withContinuousEncounter(A){return Object.assign(this,{continuousEncounter:A})}withBattleAnimationsWithoutTargets(A){return Object.assign(this,{hasBattleAnimationsWithoutTargets:A})}withSkipEnemyBattleTurns(A){return Object.assign(this,{skipEnemyBattleTurns:A})}withSkipToFightInput(A){return Object.assign(this,{skipToFightInput:A})}withPreventGameStatsUpdates(A){return Object.assign(this,{preventGameStatsUpdates:A})}withMaxAllowedEncounters(A){return Object.assign(this,{maxAllowedEncounters:A})}withSceneRequirement(A){return this.requirements.push(A),this}withSceneWaveRangeRequirement(A,s){return this.withSceneRequirement(new A0([A,s??A]))}withScenePartySizeRequirement(A,s,R=!1){return this.withSceneRequirement(new s0([A,s??A],R))}withPrimaryPokemonRequirement(A){return this.primaryPokemonRequirements.push(A),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPrimaryPokemonStatusEffectRequirement(A,s=1,R=!1){return this.withPrimaryPokemonRequirement(new R0(A,s,R))}withPrimaryPokemonHealthRatioRequirement(A,s=1,R=!1){return this.withPrimaryPokemonRequirement(new O0(A,s,R))}withSecondaryPokemonRequirement(A,s=!1){return this.secondaryPokemonRequirements.push(A),this.excludePrimaryFromSupportRequirements=s,Object.assign(this,{excludePrimaryFromSecondaryRequirements:this.excludePrimaryFromSupportRequirements,secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withRewards(A){return Object.assign(this,{doEncounterRewards:A})}withExp(A){return Object.assign(this,{doEncounterExp:A})}withOnInit(A){return Object.assign(this,{onInit:A})}withOnVisualsStart(A){return Object.assign(this,{onVisualsStart:A})}withCatchAllowed(A){return Object.assign(this,{catchAllowed:A})}withFleeAllowed(A){return Object.assign(this,{fleeAllowed:A})}withHideWildIntroMessage(A){return Object.assign(this,{hideBattleIntroMessage:A})}withAutoHideIntroVisuals(A){return Object.assign(this,{autoHideIntroVisuals:A})}withEnterIntroVisualsFromRight(A){return Object.assign(this,{enterIntroVisualsFromRight:A})}withTitle(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,title:A}},this}withDescription(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,description:A}},this}withQuery(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,query:A}},this}withOutroDialogue(A=[]){return this.dialogue={...this.dialogue,outro:A},this}build(){return new zT(this)}};L(gD,"MysteryEncounterBuilder");let FA=gD;const Gs="mysteryEncounters/darkDeal",YZ=[e.NECROZMA,e.COSMOG,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.MEW,e.CELEBI,e.DEOXYS,e.JIRACHI,e.DARKRAI,e.PHIONE,e.MANAPHY,e.ARCEUS,e.SHAYMIN,e.VICTINI,e.MELOETTA,e.KELDEO,e.GENESECT,e.DIANCIE,e.HOOPA,e.VOLCANION,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.ZARUDE,e.MELTAN,e.MELMETAL,e.PECHARUNT],yZ=FA.withEncounterType(qe.DARK_DEAL).withEncounterTier(Vt.ROGUE).withIntroSpriteConfigs([{spriteKey:"dark_deal_scientist",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"dark_deal_porygon",fileRoot:"mystery-encounters",hasShadow:!0,repeat:!0}]).withIntroDialogue([{text:`${Gs}:intro`},{speaker:`${Gs}:speaker`,text:`${Gs}:intro_dialogue`}]).withSceneWaveRangeRequirement(30,xA[1]).withScenePartySizeRequirement(2,6,!0).withCatchAllowed(!0).setLocalizationKey(`${Gs}`).withTitle(`${Gs}:title`).withDescription(`${Gs}:description`).withQuery(`${Gs}:query`).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Gs}:option.1.label`,buttonTooltip:`${Gs}:option.1.tooltip`,selected:[{speaker:`${Gs}:speaker`,text:`${Gs}:option.1.selected_dialogue`},{text:`${Gs}:option.1.selected_message`}]}).withPreOptionPhase(async E=>{const A=HZ(E,!0,!1,!0),s=A.getHeldItems().filter(n=>!(n instanceof IR));E.removePokemonFromPlayerParty(A);const R=E.currentBattle.mysteryEncounter;R.setDialogueToken("pokeName",A.getNameToRender()),R.misc={removedTypes:A.getTypes(),modifiers:s}}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;E.unshiftPhase(new gE(E,$.ROGUE_BALL));let s=A.misc.removedTypes;const R=E.gameMode.challenges.filter(l=>l.value&&l.id===yt.SINGLE_TYPE);E.gameMode.isChallenge&&R.length>0&&(s=R.map(l=>l.value-1));const n=A.misc.modifiers,I=_e(100),a=I>=65?6:I>=15?7:I>=5?8:[9,10],r=xe(T1(a,YZ,s)),S={species:r,isBoss:!0,modifierConfigs:n.map(l=>({modifier:l,stackCount:l.getStackCount()}))};!Ve(r.forms)&&r.forms.length>0&&(S.formIndex=0),await $A(E,{pokemonConfigs:[S]})}).build()).withSimpleOption({buttonLabel:`${Gs}:option.2.label`,buttonTooltip:`${Gs}:option.2.tooltip`,selected:[{speaker:`${Gs}:speaker`,text:`${Gs}:option.2.selected`}]},async E=>(dt(E,!0),!0)).withOutroDialogue([{text:`${Gs}:outro`}]).build(),Ys="mysteryEncounters/departmentStoreSale",wZ=FA.withEncounterType(qe.DEPARTMENT_STORE_SALE).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(xA[0],100).withIntroSpriteConfigs([{spriteKey:"department_store_sale_lady",fileRoot:"mystery-encounters",hasShadow:!0,x:-20},{spriteKey:"",fileRoot:"",species:e.FURFROU,hasShadow:!0,repeat:!0,x:30}]).withIntroDialogue([{text:`${Ys}:intro`},{text:`${Ys}:intro_dialogue`,speaker:`${Ys}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${Ys}`).withTitle(`${Ys}:title`).withDescription(`${Ys}:description`).withQuery(`${Ys}:query`).withSimpleOption({buttonLabel:`${Ys}:option.1.label`,buttonTooltip:`${Ys}:option.1.tooltip`},async E=>{const A=[];let s=0;for(;s<5;){const R=_e(5);R<2?A.push($.TM_COMMON):R<4?A.push($.TM_GREAT):A.push($.TM_ULTRA),s++}mt(E,{guaranteedModifierTypeFuncs:A,fillRemaining:!1}),dt(E)}).withSimpleOption({buttonLabel:`${Ys}:option.2.label`,buttonTooltip:`${Ys}:option.2.tooltip`},async E=>{const A=[];let s=0;for(;s<3;)_e(3)===0?A.push($.PP_UP):A.push($.BASE_STAT_BOOSTER),s++;mt(E,{guaranteedModifierTypeFuncs:A,fillRemaining:!1}),dt(E)}).withSimpleOption({buttonLabel:`${Ys}:option.3.label`,buttonTooltip:`${Ys}:option.3.tooltip`},async E=>{const A=[];let s=0;for(;s<5;)_e(5)===0?A.push($.DIRE_HIT):A.push($.TEMP_STAT_STAGE_BOOSTER),s++;mt(E,{guaranteedModifierTypeFuncs:A,fillRemaining:!1}),dt(E)}).withSimpleOption({buttonLabel:`${Ys}:option.4.label`,buttonTooltip:`${Ys}:option.4.tooltip`},async E=>{const A=[];let s=0;for(;s<4;){const R=_e(65);R<10?A.push($.POKEBALL):R<40?A.push($.GREAT_BALL):R<60?A.push($.ULTRA_BALL):A.push($.ROGUE_BALL),s++}mt(E,{guaranteedModifierTypeFuncs:A,fillRemaining:!1}),dt(E)}).withOutroDialogue([{text:`${Ys}:outro`}]).build(),nE="mysteryEncounters/fieldTrip",vZ=FA.withEncounterType(qe.FIELD_TRIP).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(xA[0],100).withIntroSpriteConfigs([{spriteKey:"preschooler_m",fileRoot:"trainer",hasShadow:!0},{spriteKey:"field_trip_teacher",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"preschooler_f",fileRoot:"trainer",hasShadow:!0}]).withIntroDialogue([{text:`${nE}:intro`},{text:`${nE}:intro_dialogue`,speaker:`${nE}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${nE}`).withTitle(`${nE}:title`).withDescription(`${nE}:description`).withQuery(`${nE}:query`).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${nE}:option.1.label`,buttonTooltip:`${nE}:option.1.tooltip`,secondOptionPrompt:`${nE}:second_option_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(R=>R.moveset.map(n=>({label:n.getName(),handler:L(()=>(A.setDialogueToken("moveCategory",D.t(`${nE}:physical`)),th(E,R,n,Mt.PHYSICAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;if(A.misc.correctMove){const s=[tE(E,$.TEMP_STAT_STAGE_BOOSTER,[g.ATK]),tE(E,$.TEMP_STAT_STAGE_BOOSTER,[g.DEF]),tE(E,$.TEMP_STAT_STAGE_BOOSTER,[g.SPD]),tE(E,$.DIRE_HIT),tE(E,$.RARER_CANDY)];mt(E,{guaranteedModifierTypeOptions:s,fillRemaining:!1})}dt(E,!A.misc.correctMove)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${nE}:option.2.label`,buttonTooltip:`${nE}:option.2.tooltip`,secondOptionPrompt:`${nE}:second_option_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(R=>R.moveset.map(n=>({label:n.getName(),handler:L(()=>(A.setDialogueToken("moveCategory",D.t(`${nE}:special`)),th(E,R,n,Mt.SPECIAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;if(A.misc.correctMove){const s=[tE(E,$.TEMP_STAT_STAGE_BOOSTER,[g.SPATK]),tE(E,$.TEMP_STAT_STAGE_BOOSTER,[g.SPDEF]),tE(E,$.TEMP_STAT_STAGE_BOOSTER,[g.SPD]),tE(E,$.DIRE_HIT),tE(E,$.RARER_CANDY)];mt(E,{guaranteedModifierTypeOptions:s,fillRemaining:!1})}dt(E,!A.misc.correctMove)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${nE}:option.3.label`,buttonTooltip:`${nE}:option.3.tooltip`,secondOptionPrompt:`${nE}:second_option_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(R=>R.moveset.map(n=>({label:n.getName(),handler:L(()=>(A.setDialogueToken("moveCategory",D.t(`${nE}:status`)),th(E,R,n,Mt.STATUS),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;if(A.misc.correctMove){const s=[tE(E,$.TEMP_STAT_STAGE_BOOSTER,[g.ACC]),tE(E,$.TEMP_STAT_STAGE_BOOSTER,[g.SPD]),tE(E,$.GREAT_BALL),tE(E,$.IV_SCANNER),tE(E,$.RARER_CANDY)];mt(E,{guaranteedModifierTypeOptions:s,fillRemaining:!1})}dt(E,!A.misc.correctMove)}).build()).build();function th(E,A,s,R){const n=E.currentBattle.mysteryEncounter,I=s.getMove().category===R;n.setDialogueToken("pokeName",A.getNameToRender()),n.setDialogueToken("move",s.getName()),I?(n.selectedOption.dialogue.selected=[{text:`${nE}:option.selected`},{text:`${nE}:correct`,speaker:`${nE}:speaker`},{text:`${nE}:correct_exp`}],rR(E,[A.id],100)):(n.selectedOption.dialogue.selected=[{text:`${nE}:option.selected`},{text:`${nE}:incorrect`,speaker:`${nE}:speaker`},{text:`${nE}:incorrect_exp`}],rR(E,E.getPlayerParty().map(a=>a.id),50)),n.misc={correctMove:I}}L(th,"pokemonAndMoveChosen");const G6=[t.PLUCK,t.COVET,t.KNOCK_OFF,t.THIEF,t.TRICK,t.SWITCHEROO],H6=[t.CHARM,t.FLATTER,t.DRAGON_CHEER,t.ALLURING_VOICE,t.ATTRACT,t.SWEET_SCENT,t.CAPTIVATE,t.AROMATIC_MIST],Yx=[t.AQUA_STEP,t.CLANGOROUS_SOUL,t.DRAGON_DANCE,t.FEATHER_DANCE,t.FIERY_DANCE,t.LUNAR_DANCE,t.PETAL_DANCE,t.REVELATION_DANCE,t.QUIVER_DANCE,t.SWORDS_DANCE,t.TEETER_DANCE,t.VICTORY_DANCE];t.FAKE_OUT,t.FOLLOW_ME,t.TAUNT,t.ROAR,t.TELEPORT,t.CHARM,t.FAKE_TEARS,t.TICKLE,t.CAPTIVATE,t.RAGE_POWDER,t.SUBSTITUTE,t.SHED_TAIL;t.PROTECT,t.WIDE_GUARD,t.MAX_GUARD,t.SAFEGUARD,t.REFLECT,t.BARRIER,t.QUICK_GUARD,t.FLOWER_SHIELD,t.KINGS_SHIELD,t.CRAFTY_SHIELD,t.SPIKY_SHIELD,t.OBSTRUCT,t.DETECT;const VZ=[t.BIND,t.CLAMP,t.INFESTATION,t.SAND_TOMB,t.SNAP_TRAP,t.THUNDER_CAGE,t.WRAP,t.SPIRIT_SHACKLE,t.MEAN_LOOK,t.JAW_LOCK,t.BLOCK,t.SPIDER_WEB,t.ANCHOR_SHOT,t.OCTOLOCK,t.PURSUIT,t.CONSTRICT,t.BEAT_UP,t.COIL,t.WRING_OUT,t.STRING_SHOT],xZ=[O.INTIMIDATE,O.ARENA_TRAP,O.SHADOW_TAG,O.SUCTION_CUPS,O.STICKY_HOLD],bZ=[O.FLAME_BODY,O.FLASH_FIRE,O.WELL_BAKED_BODY,O.HEATPROOF,O.THERMAL_EXCHANGE,O.THICK_FAT,O.WATER_BUBBLE,O.MAGMA_ARMOR,O.WATER_VEIL,O.STEAM_ENGINE,O.PRIMORDIAL_SEA],ui=class ui extends as{constructor(A,s,R,n,I,a=!0,r=!1,S=!0,o=null){super(A,s),this.selfTarget=R,this.stats=n,this.stages=I,this.showMessage=a,this.ignoreAbilities=r,this.canBeCopied=S,this.onChange=o}start(){if(this.stats.length>1){for(let r=0;r<this.stats.length;r++){const S=[this.stats[r]];this.scene.unshiftPhase(new ui(this.scene,this.battlerIndex,this.selfTarget,S,this.stages,this.showMessage,this.ignoreAbilities,this.canBeCopied,this.onChange))}return this.end()}const A=this.getPokemon();if(!A.isActive(!0))return this.end();const s=new Rt(this.stages);this.ignoreAbilities||Ct(_S,A,null,!1,s);let R=!1;const n=this.stats.filter(r=>{const S=new Lt(!1);return!this.selfTarget&&s.value<0&&this.scene.arena.applyTagsForSide(yC,A.isPlayer()?St.PLAYER:St.ENEMY,!1,null,S),!S.value&&!this.selfTarget&&s.value<0&&xQ(bR,A,r,S,R),S.value&&(R=!0),!S.value}),I=n.map(r=>(s.value>=1?Math.min(A.getStatStage(r)+s.value,6):Math.max(A.getStatStage(r)+s.value,-6))-A.getStatStage(r));this.onChange&&this.onChange(this.getPokemon(),n,I);const a=L(()=>{if(this.showMessage){const S=this.getStatStageChangeMessages(n,s.value,I);for(const o of S)this.scene.queueMessage(o)}for(const S of n)s.value>0&&A.getStatStage(S)<6?(A.turnData||A.resetTurnData(),A.turnData.statStagesIncreased=!0):s.value<0&&A.getStatStage(S)>-6&&(A.turnData||A.resetTurnData(),A.turnData.statStagesDecreased=!0),A.setStatStage(S,A.getStatStage(S)+s.value);if(s.value>0&&this.canBeCopied)for(const S of A.getOpponents())Ct(_U,S,null,!1,this.stats,s.value);if(bQ(XC,A,n,this.stages,this.selfTarget),!(this.scene.findPhase(S=>S instanceof ui&&S.battlerIndex===this.battlerIndex)instanceof ui)){const S=this.scene.applyModifier(AL,this.player,A);S&&(A.loseHeldItem(S),this.scene.updateModifiers(this.player))}A.updateInfo(),Wi(this.scene,JR.Stat_Change).then(()=>super.end())},"end");if(I.filter(r=>r).length&&this.scene.moveAnimations){A.enableMask();const r=A.maskSprite,S=(this.player?106:236)*A.getSpriteScale()*this.scene.field.scale,o=((this.player?148:84)+(s.value>=1?160:0))*A.getSpriteScale()*this.scene.field.scale,l=156*this.scene.field.scale*A.getSpriteScale(),C=316*this.scene.field.scale*A.getSpriteScale(),M=s.value>=1?g[g.ATK].toLowerCase():g[g.SPD].toLowerCase(),u=this.scene.add.tileSprite(S,o,l,C,"battle_stats",M);u.setPipeline(this.scene.fieldSpritePipeline),u.setAlpha(0),u.setScale(6),u.setOrigin(.5,1),this.scene.playSound(`se/stat_${s.value>=1?"up":"down"}`),u.setMask(new Phaser.Display.Masks.BitmapMask(this.scene,r??void 0)),this.scene.tweens.add({targets:u,duration:250,alpha:.8375,onComplete:L(()=>{this.scene.tweens.add({targets:u,delay:1e3,duration:250,alpha:0})},"onComplete")}),this.scene.tweens.add({targets:u,duration:1500,y:`${s.value>=1?"-":"+"}=${160*6}`}),this.scene.time.delayedCall(1750,()=>{A.disableMask(),a()})}else a()}aggregateStatStageChanges(){const A=[g.ACC,g.EVA],s=A.some(n=>this.stats.includes(n));let R;if(this.stats.length===1)for(;(R=this.scene.findPhase(n=>n instanceof ui&&n.battlerIndex===this.battlerIndex&&n.stats.length===1&&n.stats[0]===this.stats[0]&&n.selfTarget===this.selfTarget&&n.showMessage===this.showMessage&&n.ignoreAbilities===this.ignoreAbilities))&&(this.stages+=R.stages,!!this.scene.tryRemovePhase(n=>n===R)););for(;(R=this.scene.findPhase(n=>n instanceof ui&&n.battlerIndex===this.battlerIndex&&n.selfTarget===this.selfTarget&&A.some(I=>n.stats.includes(I))===s&&n.stages===this.stages&&n.showMessage===this.showMessage&&n.ignoreAbilities===this.ignoreAbilities))&&(this.stats.push(...R.stats),!!this.scene.tryRemovePhase(n=>n===R)););}getStatStageChangeMessages(A,s,R){const n=[],I={};for(let a=0;a<R.length;a++){const r=R[a];I[r]||(I[r]=[]),I[r].push(a)}return Object.keys(I).forEach(a=>{const r=A.filter((o,l)=>I[a].includes(l));let S="";r.length>1?(S=r.length>=5?D.t("battle:stats"):`${r.slice(0,-1).map(o=>D.t(_E(o))).join(", ")}${r.length>2?",":""} ${D.t("battle:statsAnd")} ${D.t(_E(r[r.length-1]))}`,n.push(D.t(KV(Math.abs(parseInt(a)),s>=1),{pokemonNameWithAffix:ee(this.getPokemon()),stats:S,count:r.length}))):(S=D.t(_E(r[0])),n.push(D.t(KV(Math.abs(parseInt(a)),s>=1),{pokemonNameWithAffix:ee(this.getPokemon()),stats:S,count:r.length})))}),n}};L(ui,"StatStageChangePhase");let Jt=ui;const ys="mysteryEncounters/fightOrFlight",kZ=FA.withEncounterType(qe.FIGHT_OR_FLIGHT).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${ys}:intro`}]).withOnInit(E=>{var l;const A=E.currentBattle.mysteryEncounter,s=Ko(E,go);let R;if(E.eventManager.isEventActive()&&((l=E.eventManager.activeEvent())!=null&&l.uncommonBreedEncounters)&&_e(2)===1){const C=JA(E.eventManager.activeEvent().uncommonBreedEncounters),M=xe(C.species).getWildSpeciesForLevel(s,C.allowEvolution??!1,!0,E.gameMode);R=xe(M)}else R=E.arena.randomSpecies(E.currentBattle.waveIndex,s,0,pi(E.getPlayerParty()),!0);const n=new rs(E,R,s,Tt.NONE,!0);A.setDialogueToken("enemyPokemon",n.getNameToRender());const I={pokemonConfigs:[{level:s,species:R,dataSource:new cs(n),isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:L(C=>{sE(C.scene,`${ys}:option.1.stat_boost`),C.scene.unshiftPhase(new Jt(C.scene,C.getBattlerIndex(),!0,[_e(4,1)],2))},"mysteryEncounterBattleEffects")}]};A.enemyPartyConfigs=[I];const a=E.currentBattle.waveIndex>160?v.MASTER:E.currentBattle.waveIndex>120?v.ROGUE:E.currentBattle.waveIndex>40?v.ULTRA:v.GREAT;sI(E.getPlayerParty(),PE.PLAYER,0);let r=null;for(;!r||r.type.id.includes("TM_")||r.type.id==="CANDY_JAR";)r=R1(1,E.getPlayerParty(),[],{guaranteedModifierTiers:[a],allowLuckUpgrades:!1})[0];A.setDialogueToken("itemName",r.type.name),A.misc=r;const{spriteKey:S,fileRoot:o}=LM(n);return A.spriteConfigs=[{spriteKey:r.type.iconImage,fileRoot:"items",hasShadow:!1,x:35,y:-5,scale:.75,isItem:!0,disableAnimation:!0},{spriteKey:S,fileRoot:o,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:n.shiny,variant:n.variant}],!0}).setLocalizationKey(`${ys}`).withTitle(`${ys}:title`).withDescription(`${ys}:description`).withQuery(`${ys}:query`).withSimpleOption({buttonLabel:`${ys}:option.1.label`,buttonTooltip:`${ys}:option.1.tooltip`,selected:[{text:`${ys}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter.misc;mt(E,{guaranteedModifierTypeOptions:[A],fillRemaining:!1}),await $A(E,E.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wi(G6,!0)).withDialogue({buttonLabel:`${ys}:option.2.label`,buttonTooltip:`${ys}:option.2.tooltip`,disabledButtonTooltip:`${ys}:option.2.disabled_tooltip`,selected:[{text:`${ys}:option.2.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=E.currentBattle.mysteryEncounter.misc;mt(E,{guaranteedModifierTypeOptions:[s],fillRemaining:!1});const R=A.options[1].primaryPokemon;rR(E,R.id,A.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),dt(E)}).build()).withSimpleOption({buttonLabel:`${ys}:option.3.label`,buttonTooltip:`${ys}:option.3.tooltip`,selected:[{text:`${ys}:option.3.selected`}]},async E=>(dt(E,!0),!0)).build(),yx=t.SURF,wx=t.FLY,vx=25,qE="mysteryEncounters/lostAtSea",ZZ=FA.withEncounterType(qe.LOST_AT_SEA).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withIntroSpriteConfigs([{spriteKey:"lost_at_sea_buoy",fileRoot:"mystery-encounters",hasShadow:!1,x:20,y:3}]).withIntroDialogue([{text:`${qE}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;return A.setDialogueToken("damagePercentage",String(vx)),A.setDialogueToken("option1RequiredMove",new Ot(yx).getName()),A.setDialogueToken("option2RequiredMove",new Ot(wx).getName()),!0}).setLocalizationKey(`${qE}`).withTitle(`${qE}:title`).withDescription(`${qE}:description`).withQuery(`${qE}:query`).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(yx).withDialogue({buttonLabel:`${qE}:option.1.label`,disabledButtonLabel:`${qE}:option.1.label_disabled`,buttonTooltip:`${qE}:option.1.tooltip`,disabledButtonTooltip:`${qE}:option.1.tooltip_disabled`,selected:[{text:`${qE}:option.1.selected`}]}).withOptionPhase(async E=>Vx(E)).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(wx).withDialogue({buttonLabel:`${qE}:option.2.label`,disabledButtonLabel:`${qE}:option.2.label_disabled`,buttonTooltip:`${qE}:option.2.tooltip`,disabledButtonTooltip:`${qE}:option.2.tooltip_disabled`,selected:[{text:`${qE}:option.2.selected`}]}).withOptionPhase(async E=>Vx(E)).build()).withSimpleOption({buttonLabel:`${qE}:option.3.label`,buttonTooltip:`${qE}:option.3.tooltip`,selected:[{text:`${qE}:option.3.selected`}]},async E=>{const A=E.getPlayerParty().filter(s=>s.isAllowedInBattle());for(const s of A){const R=vx/100,n=Math.floor(s.getMaxHp()*R);S1(E,s,n)}return dt(E),!0}).withOutroDialogue([{text:`${qE}:outro`}]).build();function Vx(E){var R,n;const A=xe(e.LAPRAS),{mysteryEncounter:s}=E.currentBattle;return(n=(R=s==null?void 0:s.selectedOption)==null?void 0:R.primaryPokemon)!=null&&n.id?rR(E,s.selectedOption.primaryPokemon.id,A.baseExp,!0):console.warn("Lost at sea: No guide pokemon found but pokemon guides player. huh!?"),dt(E),!0}L(Vx,"handlePokemonGuidingYouPhase");const eR="mysteryEncounters/mysteriousChallengers",XZ=FA.withEncounterType(qe.MYSTERIOUS_CHALLENGERS).withEncounterTier(Vt.GREAT).withSceneWaveRangeRequirement(...xA).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${eR}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=E.arena.randomTrainerType(E.currentBattle.waveIndex),R=ZA[s].clone();let n=!1;R.hasGenders&&(n=!!_e(2));const I=R.getSpriteKey(n,R.doubleOnly);A.enemyPartyConfigs.push({trainerConfig:R,female:n});let a=0,r=E.arena.randomTrainerType(E.currentBattle.waveIndex);for(;a<5&&r===s;)r=E.arena.randomTrainerType(E.currentBattle.waveIndex),a++;const S=new vA(new Je(1,we.STRONGER,!1,!0),new Je(Math.min(Math.ceil(E.currentBattle.waveIndex/20),5),we.AVERAGE,!1,!0)),o=ZA[r].clone();o.setPartyTemplates(S),n=!1,o.hasGenders&&(n=!!_e(2));const l=o.getSpriteKey(n,o.doubleOnly);A.enemyPartyConfigs.push({trainerConfig:o,levelAdditiveModifier:1,female:n});const C=E.arena.randomTrainerType(E.currentBattle.waveIndex,!0),M=et.ELITE_FOUR,u=ZA[C].clone();u.title=ZA[C].title,u.setPartyTemplates(M),u.partyTemplateFunc=null,n=!1,u.hasGenders&&(n=!!_e(2));const h=u.getSpriteKey(n,u.doubleOnly);return A.enemyPartyConfigs.push({trainerConfig:u,levelAdditiveModifier:1.5,female:n}),A.spriteConfigs=[{spriteKey:I,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:l,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:h,fileRoot:"trainer",hasShadow:!0,tint:1}],!0}).setLocalizationKey(`${eR}`).withTitle(`${eR}:title`).withDescription(`${eR}:description`).withQuery(`${eR}:query`).withSimpleOption({buttonLabel:`${eR}:option.1.label`,buttonTooltip:`${eR}:option.1.tooltip`,selected:[{text:`${eR}:option.selected`}]},async E=>{const s=E.currentBattle.mysteryEncounter.enemyPartyConfigs[0];mt(E,{guaranteedModifierTypeFuncs:[$.TM_COMMON,$.TM_GREAT,$.MEMORY_MUSHROOM],fillRemaining:!0});let R;E.executeWithSeedOffset(()=>{R=$A(E,s)},E.currentBattle.waveIndex*10),await R}).withSimpleOption({buttonLabel:`${eR}:option.2.label`,buttonTooltip:`${eR}:option.2.tooltip`,selected:[{text:`${eR}:option.selected`}]},async E=>{const s=E.currentBattle.mysteryEncounter.enemyPartyConfigs[1];mt(E,{guaranteedModifierTiers:[v.ULTRA,v.ULTRA,v.GREAT,v.GREAT],fillRemaining:!0});let R;E.executeWithSeedOffset(()=>{R=$A(E,s)},E.currentBattle.waveIndex*100),await R}).withSimpleOption({buttonLabel:`${eR}:option.3.label`,buttonTooltip:`${eR}:option.3.tooltip`,selected:[{text:`${eR}:option.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[2];A.expMultiplier=.9,mt(E,{guaranteedModifierTiers:[v.ROGUE,v.ROGUE,v.ULTRA,v.GREAT],fillRemaining:!0});let R;E.executeWithSeedOffset(()=>{R=$A(E,s)},E.currentBattle.waveIndex*1e3),await R}).withOutroDialogue([{text:`${eR}:outro`}]).build(),ws="mysteryEncounters/mysteriousChest",TL=100,xx=35,SL=20,Jo=30,Ah=10,bx=5,QZ=FA.withEncounterType(qe.MYSTERIOUS_CHEST).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withScenePartySizeRequirement(2,6,!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withIntroSpriteConfigs([{spriteKey:"mysterious_chest_blue",fileRoot:"mystery-encounters",hasShadow:!0,y:8,yShadow:6,alpha:1,disableAnimation:!0},{spriteKey:"mysterious_chest_red",fileRoot:"mystery-encounters",hasShadow:!1,y:8,yShadow:6,alpha:0,disableAnimation:!0}]).withIntroDialogue([{text:`${ws}:intro`}]).setLocalizationKey(`${ws}`).withTitle(`${ws}:title`).withDescription(`${ws}:description`).withQuery(`${ws}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s={levelAdditiveModifier:.5,disableSwitch:!0,pokemonConfigs:[{species:xe(e.GIMMIGHOUL),formIndex:0,isBoss:!0,moveSet:[t.NASTY_PLOT,t.SHADOW_BALL,t.POWER_GEM,t.THIEF]}]};return A.enemyPartyConfigs=[s],A.setDialogueToken("gimmighoulName",xe(e.GIMMIGHOUL).getName()),A.setDialogueToken("trapPercent",xx.toString()),A.setDialogueToken("commonPercent",SL.toString()),A.setDialogueToken("ultraPercent",Jo.toString()),A.setDialogueToken("roguePercent",Ah.toString()),A.setDialogueToken("masterPercent",bx.toString()),!0}).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${ws}:option.1.label`,buttonTooltip:`${ws}:option.1.tooltip`,selected:[{text:`${ws}:option.1.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.introVisuals,R=_e(TL);if(A.misc={roll:R},R<xx){const n=s.getSpriteAtIndex(0);s.getSpriteAtIndex(1)[0].setAlpha(1),n[0].setAlpha(.001)}s.spriteConfigs[0].disableAnimation=!1,s.spriteConfigs[1].disableAnimation=!1,s.playAnim()}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.roll;if(s>=TL-SL)mt(E,{guaranteedModifierTiers:[v.COMMON,v.COMMON,v.GREAT,v.GREAT]}),sE(E,`${ws}:option.1.normal`),dt(E);else if(s>=TL-SL-Jo)mt(E,{guaranteedModifierTiers:[v.ULTRA,v.ULTRA,v.ULTRA]}),sE(E,`${ws}:option.1.good`),dt(E);else if(s>=TL-SL-Jo-Ah)mt(E,{guaranteedModifierTiers:[v.ROGUE,v.ROGUE]}),sE(E,`${ws}:option.1.great`),dt(E);else if(s>=TL-SL-Jo-Ah-bx)mt(E,{guaranteedModifierTiers:[v.MASTER]}),sE(E,`${ws}:option.1.amazing`),dt(E);else{const R=N1(E,!0,!1);c6(E,R),A.setDialogueToken("pokeName",R.getNameToRender()),await $t(E,`${ws}:option.1.bad`),E.getPokemonAllowedInBattle().length===0?(E.clearPhaseQueue(),E.unshiftPhase(new CO(E))):(await XA(E,!0,!0,500),mt(E,{fillRemaining:!0}),await $A(E,A.enemyPartyConfigs[0]))}}).build()).withSimpleOption({buttonLabel:`${ws}:option.2.label`,buttonTooltip:`${ws}:option.2.tooltip`,selected:[{text:`${ws}:option.2.selected`}]},async E=>(dt(E,!0),!0)).build(),FE="mysteryEncounters/shadyVitaminDealer",kx=1.5,JZ=5,$Z=FA.withEncounterType(qe.SHADY_VITAMIN_DEALER).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withSceneRequirement(new XO(0,kx)).withPrimaryPokemonHealthRatioRequirement([.51,1]).withIntroSpriteConfigs([{spriteKey:e.KROOKODILE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:12,y:-5,yShadow:-5},{spriteKey:"shady_vitamin_dealer",fileRoot:"mystery-encounters",hasShadow:!0,x:-12,y:3,yShadow:3}]).withIntroDialogue([{text:`${FE}:intro`},{text:`${FE}:intro_dialogue`,speaker:`${FE}:speaker`}]).setLocalizationKey(`${FE}`).withTitle(`${FE}:title`).withDescription(`${FE}:description`).withQuery(`${FE}:query`).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,kx).withDialogue({buttonLabel:`${FE}:option.1.label`,buttonTooltip:`${FE}:option.1.tooltip`,selected:[{text:`${FE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>{jR(E,-A.options[0].requirements[0].requiredMoney);const I=[gt(E,$.BASE_STAT_BOOSTER),gt(E,$.BASE_STAT_BOOSTER)];A.setDialogueToken("boost1",I[0].name),A.setDialogueToken("boost2",I[1].name),A.misc={chosenPokemon:n,modifiers:I}},"onPokemonSelected"),void 0,L(n=>n.isAllowedInChallenge()?A.pokemonMeetsPrimaryRequirements(E,n)?null:mA(E,`${FE}:invalid_selection`)??null:D.t("partyUiHandler:cantBeUsed",{pokemonName:n.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenPokemon,R=A.misc.modifiers;for(const n of R)await iR(E,s,n);dt(E,!0)}).withPostOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenPokemon;S1(E,s,Math.floor(s.getMaxHp()/2));const R=s.nature;let n=_e(25);for(;n===R;)n=_e(25);s.setCustomNature(n),A.setDialogueToken("newNature",xO(n)),sE(E,`${FE}:cheap_side_effects`),rR(E,[s.id],100),await s.updateInfo()}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,JZ).withDialogue({buttonLabel:`${FE}:option.2.label`,buttonTooltip:`${FE}:option.2.tooltip`,selected:[{text:`${FE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>{jR(E,-A.options[1].requirements[0].requiredMoney);const I=[gt(E,$.BASE_STAT_BOOSTER),gt(E,$.BASE_STAT_BOOSTER)];A.setDialogueToken("boost1",I[0].name),A.setDialogueToken("boost2",I[1].name),A.misc={chosenPokemon:n,modifiers:I}},"onPokemonSelected"),void 0,L(n=>YI(n,E,`${FE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenPokemon,R=A.misc.modifiers;for(const n of R)await iR(E,s,n);dt(E,!0)}).withPostOptionPhase(async E=>{const s=E.currentBattle.mysteryEncounter.misc.chosenPokemon;sE(E,`${FE}:no_bad_effects`),rR(E,[s.id],100),await s.updateInfo()}).build()).withSimpleOption({buttonLabel:`${FE}:option.3.label`,buttonTooltip:`${FE}:option.3.tooltip`,selected:[{text:`${FE}:option.3.selected`,speaker:`${FE}:speaker`}]},async E=>(dt(E,!0),!0)).build(),SK=class SK extends GE{constructor(A,s){super(A),this.resumeBgm=s}start(){super.start();const A=this.scene.isBgmPlaying();A&&this.scene.fadeOutBgm(1e3,!1),this.scene.ui.fadeOut(1e3).then(()=>{for(const R of this.scene.getPlayerParty()){R.hp=R.getMaxHp(),R.resetStatus();for(const n of R.moveset)n.ppUsed=0;R.updateInfo(!0)}const s=this.scene.playSoundWithoutBgm("heal");this.scene.time.delayedCall(Et(s.totalDuration*1e3),()=>{s.destroy(),this.resumeBgm&&A&&this.scene.playBgm(),this.scene.ui.fadeIn(500).then(()=>this.end())})})}};L(SK,"PartyHealPhase");let Gr=SK;const vs="mysteryEncounters/slumberingSnorlax",zZ=FA.withEncounterType(qe.SLUMBERING_SNORLAX).withEncounterTier(Vt.GREAT).withSceneWaveRangeRequirement(...xA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.SNORLAX.toString(),fileRoot:"pokemon",hasShadow:!0,tint:.25,scale:1.25,repeat:!0,y:5}]).withIntroDialogue([{text:`${vs}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;console.log(A);const n={levelAdditiveModifier:.5,pokemonConfigs:[{species:xe(e.SNORLAX),isBoss:!0,shiny:!1,status:[Re.SLEEP,5],moveSet:[t.REST,t.SLEEP_TALK,t.CRUNCH,t.GIGA_IMPACT],modifierConfigs:[{modifier:gt(E,$.BERRY,[Dt.SITRUS]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.ENIGMA]),stackCount:2}],customPokemonData:new ns({spriteScale:1.25}),aiType:I8.SMART}]};return A.enemyPartyConfigs=[n],Bo(E,[t.SNORE]),A.setDialogueToken("snorlaxName",xe(e.SNORLAX).getName()),!0}).setLocalizationKey(`${vs}`).withTitle(`${vs}:title`).withDescription(`${vs}:description`).withQuery(`${vs}:query`).withSimpleOption({buttonLabel:`${vs}:option.1.label`,buttonTooltip:`${vs}:option.1.tooltip`,selected:[{text:`${vs}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter;mt(E,{guaranteedModifierTypeFuncs:[$.LEFTOVERS],fillRemaining:!0}),A.startOfBattleEffects.push({sourceBattlerIndex:Bt.ENEMY,targets:[Bt.PLAYER],move:new Ot(t.SNORE),ignorePp:!0},{sourceBattlerIndex:Bt.ENEMY,targets:[Bt.PLAYER],move:new Ot(t.SNORE),ignorePp:!0}),await $A(E,A.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${vs}:option.2.label`,buttonTooltip:`${vs}:option.2.tooltip`,selected:[{text:`${vs}:option.2.selected`}]},async E=>{E.unshiftPhase(new Gr(E,!0)),sE(E,`${vs}:option.2.rest_result`),dt(E)}).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wi(G6,!0)).withDialogue({buttonLabel:`${vs}:option.3.label`,buttonTooltip:`${vs}:option.3.tooltip`,disabledButtonTooltip:`${vs}:option.3.disabled_tooltip`,selected:[{text:`${vs}:option.3.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;mt(E,{guaranteedModifierTypeFuncs:[$.LEFTOVERS],fillRemaining:!1}),rR(E,A.primaryPokemon.id,xe(e.SNORLAX).baseExp),dt(E)}).build()).build(),SE="mysteryEncounters/trainingSession",qZ=FA.withEncounterType(qe.TRAINING_SESSION).withEncounterTier(Vt.ULTRA).withSceneWaveRangeRequirement(...xA).withScenePartySizeRequirement(2,6,!0).withFleeAllowed(!1).withHideWildIntroMessage(!0).withPreventGameStatsUpdates(!0).withIntroSpriteConfigs([{spriteKey:"training_session_gear",fileRoot:"mystery-encounters",hasShadow:!0,y:6,x:5,yShadow:-2}]).withIntroDialogue([{text:`${SE}:intro`}]).setLocalizationKey(`${SE}`).withTitle(`${SE}:title`).withDescription(`${SE}:description`).withQuery(`${SE}:query`).withOption(Ft.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${SE}:option.1.label`,buttonTooltip:`${SE}:option.1.tooltip`,selected:[{text:`${SE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>{A.misc={playerPokemon:n}},"onPokemonSelected"),void 0,L(n=>YI(n,E,`${SE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.playerPokemon,R=Math.min(2+Math.floor(E.currentBattle.waveIndex/50),5),n=new mL,I=Eh(E,s,R,n);E.removePokemonFromPlayerParty(s,!1),mt(E,{fillRemaining:!0},void 0,L(()=>{A.setDialogueToken("stat1","-"),A.setDialogueToken("stat2","-");let r=[];s.ivs.forEach((o,l)=>{o<31&&r.push({iv:o,index:l})});let S=0;for(;r.length>0&&S<2;){r=aO(r);const o=r.pop();let l=o.iv;S===0?A.setDialogueToken("stat1",D.t(_E(o.index))??""):A.setDialogueToken("stat2",D.t(_E(o.index))??""),o.iv<=21&&o.iv-1%5===0&&(l+=1),l+=o.iv<=10?10:o.iv<=20?5:3,l=Math.min(l,31),s.ivs[o.index]=l,S++}S>0&&(s.calculateStats(),E.gameData.updateSpeciesDexIvs(s.species.getRootSpeciesId(!0),s.ivs),E.gameData.setPokemonCaught(s,!1)),E.getPlayerParty().push(s);for(const o of n.value)o.pokemonId=s.id,E.addModifier(o,!0,!1,!1,!0);E.updateModifiers(!0),sE(E,`${SE}:option.1.finished`)},"onBeforeRewardsPhase")),await $A(E,I)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${SE}:option.2.label`,buttonTooltip:`${SE}:option.2.tooltip`,secondOptionPrompt:`${SE}:option.2.select_prompt`,selected:[{text:`${SE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=new Array(25).fill(null).map((I,a)=>a);return $E(E,L(I=>s.map(a=>({label:xO(a,!0,!0,!0,E.uiTheme),handler:L(()=>(A.setDialogueToken("nature",xO(a)),A.misc={playerPokemon:I,chosenNature:a},!0),"handler")})),"onPokemonSelected"),void 0,L(I=>YI(I,E,`${SE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.playerPokemon,R=Math.min(2+Math.floor(E.currentBattle.waveIndex/40),6),n=new mL,I=Eh(E,s,R,n);E.removePokemonFromPlayerParty(s,!1),mt(E,{fillRemaining:!0},void 0,L(()=>{sE(E,`${SE}:option.2.finished`),s.setCustomNature(A.misc.chosenNature),E.gameData.unlockSpeciesNature(s.species,A.misc.chosenNature),E.getPlayerParty().push(s);for(const r of n.value)r.pokemonId=s.id,E.addModifier(r,!0,!1,!1,!0);E.updateModifiers(!0)},"onBeforeRewardsPhase")),await $A(E,I)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${SE}:option.3.label`,buttonTooltip:`${SE}:option.3.tooltip`,secondOptionPrompt:`${SE}:option.3.select_prompt`,selected:[{text:`${SE}:option.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>{const I=n.getFusionSpeciesForm()?n.getFusionSpeciesForm():n.getSpeciesForm(),a=I.getAbilityCount(),r=new Array(a).fill(null).map((o,l)=>LE[I.getAbility(l)]),S=[];return r.forEach((o,l)=>{if(!S.some(C=>C.label===o.name)){const C={label:o.name,handler:L(()=>(A.setDialogueToken("ability",o.name),A.misc={playerPokemon:n,abilityIndex:l},!0),"handler"),onHover:L(()=>{$t(E,o.description,0,0,!1)},"onHover")};S.push(C)}}),S},"onPokemonSelected"),void 0,L(n=>YI(n,E,`${SE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.playerPokemon,R=Math.min(2+Math.floor(E.currentBattle.waveIndex/30),6),n=new mL,I=Eh(E,s,R,n);I.pokemonConfigs[0].tags=[Y.MYSTERY_ENCOUNTER_POST_SUMMON],E.removePokemonFromPlayerParty(s,!1),mt(E,{fillRemaining:!0},void 0,L(()=>{var S,o;sE(E,`${SE}:option.3.finished`);const r=A.misc.abilityIndex;if(s.getFusionSpeciesForm()){s.fusionAbilityIndex=r;const l=(S=s.fusionSpecies)==null?void 0:S.getRootSpeciesId();!Ve(l)&&KA.hasOwnProperty(l)&&E.gameData.dexData[l].caughtAttr&&(E.gameData.starterData[l].abilityAttr|=s.fusionAbilityIndex!==1||(o=s.fusionSpecies)!=null&&o.ability2?1<<s.fusionAbilityIndex:Cs.ABILITY_HIDDEN)}else s.abilityIndex=r;s.calculateStats(),E.gameData.setPokemonCaught(s,!1),E.getPlayerParty().push(s);for(const l of n.value)l.pokemonId=s.id,E.addModifier(l,!0,!1,!1,!0);E.updateModifiers(!0)},"onBeforeRewardsPhase")),await $A(E,I)}).build()).withSimpleOption({buttonLabel:`${SE}:option.4.label`,buttonTooltip:`${SE}:option.4.tooltip`,selected:[{text:`${SE}:option.4.selected`}]},async E=>(dt(E,!0),!0)).build();function Eh(E,A,s,R){A.resetSummonData(),R.value=A.getHeldItems();const n=R.value.map(a=>({modifier:a.clone(),isTransferable:!1,stackCount:a.stackCount})),I=new cs(A);return{pokemonConfigs:[{species:A.species,isBoss:!0,bossSegments:s,formIndex:A.formIndex,level:A.level,dataSource:I,modifierConfigs:n}]}}L(Eh,"getEnemyConfig");const oK=class oK{constructor(){this.value=[]}};L(oK,"ModifiersHolder");let mL=oK;const d6=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN];e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON;const AE="mysteryEncounters/safariZone",Rr=[512,184,768],Zx=2,Xx=3,jZ=FA.withEncounterType(qe.SAFARI_ZONE).withEncounterTier(Vt.GREAT).withSceneWaveRangeRequirement(...xA).withSceneRequirement(new XO(0,Zx)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"safari_zone",fileRoot:"mystery-encounters",hasShadow:!1,x:4,y:6}]).withIntroDialogue([{text:`${AE}:intro`}]).setLocalizationKey(`${AE}`).withTitle(`${AE}:title`).withDescription(`${AE}:description`).withQuery(`${AE}:query`).withOnInit(E=>{var A;return(A=E.currentBattle.mysteryEncounter)==null||A.setDialogueToken("numEncounters",Xx.toString()),!0}).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneRequirement(new XO(0,Zx)).withDialogue({buttonLabel:`${AE}:option.1.label`,buttonTooltip:`${AE}:option.1.tooltip`,selected:[{text:`${AE}:option.1.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return A.continuousEncounter=!0,A.misc={safariPokemonRemaining:Xx},jR(E,-A.options[0].requirements[0].requiredMoney),E.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),E.loadSe("PRSFX- Sludge Bomb2","battle_anims","PRSFX- Sludge Bomb2.wav"),E.loadSe("PRSFX- Taunt2","battle_anims","PRSFX- Taunt2.wav"),E.loadAtlas("safari_zone_bait","mystery-encounters"),E.loadAtlas("safari_zone_mud","mystery-encounters"),E.currentBattle.enemyParty=[],await XA(E),await lC(E),QT(E,{overrideOptions:qT,hideDescription:!0}),!0}).build()).withSimpleOption({buttonLabel:`${AE}:option.2.label`,buttonTooltip:`${AE}:option.2.tooltip`,selected:[{text:`${AE}:option.2.selected`}]},async E=>(dt(E,!0),!0)).build(),qT=[Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${AE}:safari.1.label`,buttonTooltip:`${AE}:safari.1.tooltip`,selected:[{text:`${AE}:safari.1.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.pokemon;return await e9(E,s)?A.misc.safariPokemonRemaining>0?(await lC(E),QT(E,{overrideOptions:qT,startingCursorIndex:0,hideDescription:!0})):(A.continuousEncounter=!1,dt(E,!0)):await sh(E,0),!0}).build(),Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${AE}:safari.2.label`,buttonTooltip:`${AE}:safari.2.tooltip`,selected:[{text:`${AE}:safari.2.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter.misc.pokemon;return await t9(E,A),Jx(E,2),Qx(E,1,8)?await $t(E,mA(E,`${AE}:safari.eating`)??"",null,1e3,!1):await $t(E,mA(E,`${AE}:safari.busy_eating`)??"",null,1e3,!1),await sh(E,1),!0}).build(),Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${AE}:safari.3.label`,buttonTooltip:`${AE}:safari.3.tooltip`,selected:[{text:`${AE}:safari.3.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter.misc.pokemon;return await A9(E,A),Qx(E,-2),Jx(E,-1,8)?await $t(E,mA(E,`${AE}:safari.angry`)??"",null,1e3,!1):await $t(E,mA(E,`${AE}:safari.beside_itself_angry`)??"",null,1e3,!1),await sh(E,2),!0}).build(),Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${AE}:safari.4.label`,buttonTooltip:`${AE}:safari.4.tooltip`}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.pokemon;return await mZ(E,s),A.misc.safariPokemonRemaining>0?(await lC(E),QT(E,{overrideOptions:qT,startingCursorIndex:3,hideDescription:!0})):(A.continuousEncounter=!1,dt(E,!0)),!0}).build()];async function lC(E){const A=E.currentBattle.mysteryEncounter;A.setDialogueToken("remainingCount",A.misc.safariPokemonRemaining),E.queueMessage(mA(E,`${AE}:safari.remaining_count`)??"",null,!0);let s,R;E.executeWithSeedOffset(()=>{s=s9();const I=E.currentBattle.getLevelForWave();if(s=xe(s.getWildSpeciesForLevel(I,!0,!1,E.gameMode)),R=E.addEnemyPokemon(s,I,Tt.NONE,!1),R.shiny||R.trySetShinySeed(),R.species.abilityHidden){const a=R.species.ability2?2:1;if(R.abilityIndex<a){const r=new ZE(256);E.applyModifiers(zn,!0,r),!_e(r.value)&&(R.abilityIndex=a)}}R.calculateStats(),E.currentBattle.enemyParty.unshift(R)},E.currentBattle.waveIndex*1e3*A.misc.safariPokemonRemaining),E.gameData.setPokemonSeen(R,!0),await R.loadAssets(),A.misc.catchStage=0,A.misc.fleeStage=0,A.misc.pokemon=R,A.misc.safariPokemonRemaining-=1,E.unshiftPhase(new XE(E,0,!1)),A.setDialogueToken("pokemonName",ee(R));const n=E.findModifier(I=>I instanceof ua);n&&E.pushPhase(new bT(E,R.getBattlerIndex(),Math.min(n.getStackCount()*2,6)))}L(lC,"summonSafariPokemon");function e9(E,A){const s=A.species.catchRate,R=E.currentBattle.mysteryEncounter.misc.catchStage,n=(2+Math.min(Math.max(R,0),6))/(2-Math.max(Math.min(R,0),-6)),a=Math.round(s*1.5*n),r=Math.round(1048560/Math.sqrt(Math.sqrt(16711680/a)));return gZ(E,A,be.POKEBALL,r)}L(e9,"throwPokeball");async function t9(E,A){const s=A.y,R=A.getFieldPositionOffset(),n=E.addFieldSprite(91,105,"safari_zone_bait","0001.png");return n.setOrigin(.5,.625),E.field.add(n),new Promise(I=>{E.trainer.setTexture(`trainer_${E.gameData.gender===vt.FEMALE?"f":"m"}_back_pb`),E.time.delayedCall(Rr[0],()=>{E.playSound("se/pb_throw"),E.trainer.setFrame("2"),E.time.delayedCall(Rr[1],()=>{E.trainer.setFrame("3"),E.time.delayedCall(Rr[2],()=>{E.trainer.setTexture(`trainer_${E.gameData.gender===vt.FEMALE?"f":"m"}_back`)})}),E.tweens.add({targets:n,x:{value:210+R[0],ease:"Linear"},y:{value:55+R[1],ease:"Cubic.easeOut"},duration:500,onComplete:L(()=>{let a=1;E.time.delayedCall(768,()=>{E.tweens.add({targets:A,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:s-5,loop:6,onStart:L(()=>{E.playSound("battle_anims/PRSFX- Bug Bite"),n.setFrame("0002.png")},"onStart"),onLoop:L(()=>{a%2===0&&E.playSound("battle_anims/PRSFX- Bug Bite"),a===4&&n.setFrame("0003.png"),a++},"onLoop"),onComplete:L(()=>{E.time.delayedCall(256,()=>{n.destroy(),I(!0)})},"onComplete")})})},"onComplete")})})})}L(t9,"throwBait");async function A9(E,A){const s=A.y,R=A.getFieldPositionOffset(),n=E.addFieldSprite(91,115,"safari_zone_mud","0001.png");return n.setOrigin(.5,.625),E.field.add(n),new Promise(I=>{E.trainer.setTexture(`trainer_${E.gameData.gender===vt.FEMALE?"f":"m"}_back_pb`),E.time.delayedCall(Rr[0],()=>{E.playSound("se/pb_throw"),E.trainer.setFrame("2"),E.time.delayedCall(Rr[1],()=>{E.trainer.setFrame("3"),E.time.delayedCall(Rr[2],()=>{E.trainer.setTexture(`trainer_${E.gameData.gender===vt.FEMALE?"f":"m"}_back`)})}),E.tweens.add({targets:n,x:{value:230+R[0],ease:"Linear"},y:{value:55+R[1],ease:"Cubic.easeOut"},duration:500,onComplete:L(()=>{E.playSound("battle_anims/PRSFX- Sludge Bomb2"),n.setFrame("0002.png"),E.time.delayedCall(200,()=>{n.setFrame("0003.png"),E.time.delayedCall(400,()=>{n.setFrame("0004.png")})}),E.tweens.add({targets:n,alpha:0,ease:"Cubic.easeIn",duration:1e3,onComplete:L(()=>{n.destroy(),E.tweens.add({targets:A,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:s-20,loop:1,onStart:L(()=>{E.playSound("battle_anims/PRSFX- Taunt2")},"onStart"),onLoop:L(()=>{E.playSound("battle_anims/PRSFX- Taunt2")},"onLoop"),onComplete:L(()=>{I(!0)},"onComplete")})},"onComplete")})},"onComplete")})})})}L(A9,"throwMud");function E9(E,A){const s=E.species.catchRate,R=(2+Math.min(Math.max(A,0),6))/(2-Math.max(Math.min(A,0),-6)),n=(255*255-s*s)/255/2*R;console.log("Flee rate: "+n);const I=_e(256);return console.log("Roll: "+I),I<n}L(E9,"isPokemonFlee");function Qx(E,A,s){if(s&&_e(10)>=s)return!1;const R=E.currentBattle.mysteryEncounter.misc.fleeStage??0;return E.currentBattle.mysteryEncounter.misc.fleeStage=Math.min(Math.max(R+A,-6),6),!0}L(Qx,"tryChangeFleeStage");function Jx(E,A,s){if(s&&_e(10)>=s)return!1;const R=E.currentBattle.mysteryEncounter.misc.catchStage??0;return E.currentBattle.mysteryEncounter.misc.catchStage=Math.min(Math.max(R+A,-6),6),!0}L(Jx,"tryChangeCatchStage");async function sh(E,A){const s=E.getEnemyParty();if(s.length>1){for(let a=1;a<s.length;a++)s[a].destroy();E.currentBattle.enemyParty=s.slice(0,1)}const R=E.currentBattle.mysteryEncounter,n=R.misc.pokemon;E9(n,R.misc.fleeStage)?(await KZ(E,n),R.misc.safariPokemonRemaining>0?(await lC(E),QT(E,{overrideOptions:qT,startingCursorIndex:A,hideDescription:!0})):(R.continuousEncounter=!1,dt(E,!0))):(E.queueMessage(mA(E,`${AE}:safari.watching`)??"",0,null,1e3),QT(E,{overrideOptions:qT,startingCursorIndex:A,hideDescription:!0}))}L(sh,"doEndTurn");function s9(){return xe(T1([0,5],d6,void 0,!1,!1,!1))}L(s9,"getSafariSpeciesSpawn");var zR=(E=>(E[E.MAGMA_BG=0]="MAGMA_BG",E[E.MAGMA_SPOUT=1]="MAGMA_SPOUT",E[E.SMOKESCREEN=2]="SMOKESCREEN",E[E.DANCE=3]="DANCE",E))(zR||{});const fs="mysteryEncounters/fieryFallout",R9=20,O9=FA.withEncounterType(qe.FIERY_FALLOUT).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(40,xA[1]).withCatchAllowed(!0).withIntroSpriteConfigs([]).withAnimations(zR.MAGMA_BG,zR.MAGMA_SPOUT).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroDialogue([{text:`${fs}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=xe(e.VOLCARONA),R={pokemonConfigs:[{species:s,isBoss:!1,gender:je.MALE,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:L(n=>{n.scene.unshiftPhase(new Jt(n.scene,n.getBattlerIndex(),!0,[g.SPDEF,g.SPD],1))},"mysteryEncounterBattleEffects")},{species:s,isBoss:!1,gender:je.FEMALE,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:L(n=>{n.scene.unshiftPhase(new Jt(n.scene,n.getBattlerIndex(),!0,[g.SPDEF,g.SPD],1))},"mysteryEncounterBattleEffects")}],doubleBattle:!0,disableSwitch:!0};return A.enemyPartyConfigs=[R],A.spriteConfigs=[{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:-20,startFrame:20},{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:20}],Bo(E,[t.FIRE_SPIN,t.QUIVER_DANCE]),E.arena.trySetWeather(se.SUNNY,!0),A.setDialogueToken("volcaronaName",xe(e.VOLCARONA).getName()),!0}).withOnVisualsStart(E=>{new Yn(zR.MAGMA_BG,E.getPlayerPokemon(),E.getPlayerPokemon()).playWithoutTargets(E,200,70,2,3);const s=new Yn(zR.MAGMA_SPOUT,E.getPlayerPokemon(),E.getPlayerPokemon());return s.playWithoutTargets(E,80,100,2),E.time.delayedCall(600,()=>{s.playWithoutTargets(E,-20,100,2)}),E.time.delayedCall(1200,()=>{s.playWithoutTargets(E,140,150,2)}),!0}).setLocalizationKey(`${fs}`).withTitle(`${fs}:title`).withDescription(`${fs}:description`).withQuery(`${fs}:query`).withSimpleOption({buttonLabel:`${fs}:option.1.label`,buttonTooltip:`${fs}:option.1.tooltip`,selected:[{text:`${fs}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter;mt(E,{fillRemaining:!0},void 0,()=>$x(E)),A.startOfBattleEffects.push({sourceBattlerIndex:Bt.ENEMY,targets:[Bt.PLAYER],move:new Ot(t.FIRE_SPIN),ignorePp:!0},{sourceBattlerIndex:Bt.ENEMY_2,targets:[Bt.PLAYER_2],move:new Ot(t.FIRE_SPIN),ignorePp:!0}),await $A(E,E.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${fs}:option.2.label`,buttonTooltip:`${fs}:option.2.tooltip`,selected:[{text:`${fs}:option.2.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=E.getPlayerParty().filter(n=>n.isAllowedInBattle()&&!n.getTypes().includes(i.FIRE));for(const n of s){const I=R9/100,a=Math.floor(n.getMaxHp()*I);S1(E,n,a)}const R=s.filter(n=>Ve(n.status)||Ve(n.status.effect)||n.status.effect===Re.NONE);if((R==null?void 0:R.length)>0){const n=_e(R.length),I=R[n];I.trySetStatus(Re.BURN)&&(A.setDialogueToken("burnedPokemon",I.getNameToRender()),A.setDialogueToken("abilityName",new Ee(O.HEATPROOF,3).name),sE(E,`${fs}:option.2.target_burned`),P6(I,O.HEATPROOF))}dt(E,!0)}).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(qI.Some(new Pr(i.FIRE,!0,1),new SC(bZ,!0))).withDialogue({buttonLabel:`${fs}:option.3.label`,buttonTooltip:`${fs}:option.3.tooltip`,disabledButtonTooltip:`${fs}:option.3.disabled_tooltip`,selected:[{text:`${fs}:option.3.selected`}]}).withPreOptionPhase(async E=>{XA(E,!1,!1,2e3)}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;await XA(E),mt(E,{fillRemaining:!0},void 0,()=>{$x(E)});const s=A.options[2].primaryPokemon;rR(E,[s.id],xe(e.VOLCARONA).baseExp*2),dt(E)}).build()).build();function $x(E){var s;const A=(s=E.getPlayerParty())==null?void 0:s[0];if(A){let R=gt(E,$.ATTACK_TYPE_BOOSTER);R||(R=gt(E,$.ATTACK_TYPE_BOOSTER,[i.FIRE])),iR(E,A,R);const n=E.currentBattle.mysteryEncounter;n.setDialogueToken("itemName",R.name),n.setDialogueToken("leadPokemon",A.getNameToRender()),sE(E,`${fs}:found_item`)}}L($x,"giveLeadPokemonAttackTypeBoostItem");const oR="mysteryEncounters/theStrongStuff",zx=15,qx=10,n9=FA.withEncounterType(qe.THE_STRONG_STUFF).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withScenePartySizeRequirement(3,6).withMaxAllowedEncounters(1).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"berry_juice",fileRoot:"items",hasShadow:!0,isItem:!0,scale:1.25,x:-15,y:3,disableAnimation:!0},{spriteKey:e.SHUCKLE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,scale:1.25,x:20,y:10,yShadow:7}]).withIntroDialogue([{text:`${oR}:intro`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s={levelAdditiveModifier:1,disableSwitch:!0,pokemonConfigs:[{species:xe(e.SHUCKLE),isBoss:!0,bossSegments:5,shiny:!1,customPokemonData:new ns({spriteScale:1.25}),nature:At.BOLD,moveSet:[t.INFESTATION,t.SALT_CURE,t.GASTRO_ACID,t.HEAL_ORDER],modifierConfigs:[{modifier:gt(E,$.BERRY,[Dt.SITRUS])},{modifier:gt(E,$.BERRY,[Dt.ENIGMA])},{modifier:gt(E,$.BERRY,[Dt.APICOT])},{modifier:gt(E,$.BERRY,[Dt.GANLON])},{modifier:gt(E,$.BERRY,[Dt.LUM]),stackCount:2}],tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:L(R=>{sE(R.scene,`${oR}:option.2.stat_boost`),R.scene.unshiftPhase(new Jt(R.scene,R.getBattlerIndex(),!0,[g.DEF,g.SPDEF],2))},"mysteryEncounterBattleEffects")}]};return A.enemyPartyConfigs=[s],Bo(E,[t.GASTRO_ACID,t.STEALTH_ROCK]),A.setDialogueToken("shuckleName",xe(e.SHUCKLE).getName()),!0}).setLocalizationKey(`${oR}`).withTitle(`${oR}:title`).withDescription(`${oR}:description`).withQuery(`${oR}:query`).withSimpleOption({buttonLabel:`${oR}:option.1.label`,buttonTooltip:`${oR}:option.1.tooltip`,selected:[{text:`${oR}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter;return E.time.delayedCall(750,()=>{XA(E,!0,!0,50)}),E.getPlayerParty().slice(0).sort((R,n)=>{const I=R.calculateBaseStats().reduce((r,S)=>r+S,0);return n.calculateBaseStats().reduce((r,S)=>r+S,0)-I}).forEach((R,n)=>{n<2?(mx(R,-zx),A.setDialogueToken("highBstPokemon"+(n+1),R.getNameToRender())):mx(R,qx)}),A.setDialogueToken("reductionValue",zx.toString()),A.setDialogueToken("increaseValue",qx.toString()),await $t(E,`${oR}:option.1.selected_2`,null,void 0,!0),A.dialogue.outro=[{text:`${oR}:outro`}],mt(E,{fillRemaining:!0}),dt(E,!0),!0}).withSimpleOption({buttonLabel:`${oR}:option.2.label`,buttonTooltip:`${oR}:option.2.tooltip`,selected:[{text:`${oR}:option.2.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter;mt(E,{guaranteedModifierTypeFuncs:[$.SOUL_DEW],fillRemaining:!0}),A.startOfBattleEffects.push({sourceBattlerIndex:Bt.ENEMY,targets:[Bt.PLAYER],move:new Ot(t.GASTRO_ACID),ignorePp:!0},{sourceBattlerIndex:Bt.ENEMY,targets:[Bt.PLAYER],move:new Ot(t.STEALTH_ROCK),ignorePp:!0}),A.dialogue.outro=[],await XA(E,!0,!0,500),await $A(E,A.enemyPartyConfigs[0])}).build(),Hs="mysteryEncounters/thePokemonSalesman",$o=4,i9=100,I9=FA.withEncounterType(qe.THE_POKEMON_SALESMAN).withEncounterTier(Vt.ULTRA).withSceneWaveRangeRequirement(...xA).withSceneRequirement(new XO(0,$o)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"pokemon_salesman",fileRoot:"mystery-encounters",hasShadow:!0}]).withIntroDialogue([{text:`${Hs}:intro`},{text:`${Hs}:intro_dialogue`,speaker:`${Hs}:speaker`}]).setLocalizationKey(`${Hs}`).withTitle(`${Hs}:title`).withDescription(`${Hs}:description`).withQuery(`${Hs}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;let s=jx(),R=0;for(;(Ve(s.abilityHidden)||s.abilityHidden===O.NONE)&&R<5;)s=jx(),R++;let n;_e(i9)===0||Ve(s.abilityHidden)||s.abilityHidden===O.NONE?(s=xe(e.MAGIKARP),n=new wE(E,s,5,2,s.formIndex,void 0,!0)):n=new wE(E,s,5,2,s.formIndex),n.generateAndPopulateMoveset();const{spriteKey:I,fileRoot:a}=LM(n);A.spriteConfigs.push({spriteKey:I,fileRoot:a,hasShadow:!0,repeat:!0,isPokemon:!0,isShiny:n.shiny,variant:n.variant});const r=KA[s.speciesId];let S=$o*(Math.max(r,2.5)/5);n.shiny&&(S=$o,n.abilityIndex=0,A.dialogue.encounterOptionsDialogue.description=`${Hs}:description_shiny`,A.options[0].dialogue.buttonTooltip=`${Hs}:option.1.tooltip_shiny`);const o=E.getWaveMoneyAmount(S);return A.setDialogueToken("purchasePokemon",n.getNameToRender()),A.setDialogueToken("price",o.toString()),A.misc={price:o,pokemon:n},n.calculateStats(),!0}).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withHasDexProgress(!0).withSceneMoneyRequirement(0,$o).withDialogue({buttonLabel:`${Hs}:option.1.label`,buttonTooltip:`${Hs}:option.1.tooltip`,selected:[{text:`${Hs}:option.1.selected_message`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.price,R=A.misc.pokemon;jR(E,-s,!0,!1),await an(E,`${Hs}:option.1.selected_dialogue`,`${Hs}:speaker`),await XA(E);const n=new cs(R);n.player=!1,await _r(E,n.toPokemon(E),null,be.POKEBALL,!0,!0),dt(E,!0)}).build()).withSimpleOption({buttonLabel:`${Hs}:option.2.label`,buttonTooltip:`${Hs}:option.2.tooltip`,selected:[{text:`${Hs}:option.2.selected`}]},async E=>(dt(E,!0),!0)).build();function jx(){return xe(T1([0,5],d6,void 0,!1,!1,!1))}L(jx,"getSalesmanSpeciesOffer");const bE="mysteryEncounters/anOfferYouCantRefuse",a9=10,r9=30,L9=FA.withEncounterType(qe.AN_OFFER_YOU_CANT_REFUSE).withEncounterTier(Vt.GREAT).withSceneWaveRangeRequirement(...xA).withScenePartySizeRequirement(2,6,!0).withIntroSpriteConfigs([{spriteKey:e.LIEPARD.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:0,y:-4,yShadow:-4},{spriteKey:"rich_kid_m",fileRoot:"trainer",hasShadow:!0,x:2,y:5,yShadow:5}]).withIntroDialogue([{text:`${bE}:intro`},{text:`${bE}:intro_dialogue`,speaker:`${bE}:speaker`}]).setLocalizationKey(`${bE}`).withTitle(`${bE}:title`).withDescription(`${bE}:description`).withQuery(`${bE}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=fZ(E,!0,!0),R=s.getSpeciesForm().getRootSpeciesId(),n=KA[R]??1,I=Math.max(r9/10*n,a9),a=E.getWaveMoneyAmount(I);if(A.setDialogueToken("strongestPokemon",s.getNameToRender()),A.setDialogueToken("price",a.toString()),A.misc={pokemon:s,price:a},A.options[1].primaryPokemonRequirements[0].meetsRequirement(E)){const o=A.dialogueTokens.option2PrimaryAbility,l=A.dialogueTokens.option2PrimaryMove;o?A.setDialogueToken("moveOrAbility",o):l&&A.setDialogueToken("moveOrAbility",l)}const S=gt(E,$.SHINY_CHARM);return A.setDialogueToken("itemName",(S==null?void 0:S.name)??D.t("modifierType:ModifierType.SHINY_CHARM.name")),A.setDialogueToken("liepardName",xe(e.LIEPARD).getName()),!0}).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${bE}:option.1.label`,buttonTooltip:`${bE}:option.1.tooltip`,selected:[{text:`${bE}:option.1.selected`,speaker:`${bE}:speaker`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return jR(E,A.misc.price),E.removePokemonFromPlayerParty(A.misc.pokemon),!0}).withOptionPhase(async E=>{E.unshiftPhase(new gE(E,$.SHINY_CHARM)),dt(E,!0)}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(qI.Some(new wi(VZ,!0),new SC(xZ,!0))).withDialogue({buttonLabel:`${bE}:option.2.label`,buttonTooltip:`${bE}:option.2.tooltip`,disabledButtonTooltip:`${bE}:option.2.tooltip_disabled`,selected:[{speaker:`${bE}:speaker`,text:`${bE}:option.2.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;jR(E,A.misc.price),rR(E,A.options[1].primaryPokemon.id,xe(e.LIEPARD).baseExp,!0),dt(E,!0)}).build()).withSimpleOption({buttonLabel:`${bE}:option.3.label`,buttonTooltip:`${bE}:option.3.tooltip`,selected:[{speaker:`${bE}:speaker`,text:`${bE}:option.3.selected`}]},async E=>(dt(E,!0),!0)).build(),jE="mysteryEncounters/delibirdy",Rh=["BerryModifier","PokemonInstantReviveModifier"],Oh=["BerryModifier","PokemonInstantReviveModifier","TerastallizeModifier","PokemonBaseStatModifier","PokemonBaseStatTotalModifier"],eb=1.5,Ri=L(E=>{var s;const A=((s=E.eventManager.activeEvent())==null?void 0:s.delibirdyBuff)??[];if(A.length>0){const R=A.filter(n=>{const I=gt(E,$[n]),a=E.findModifier(r=>r.type.id===(I==null?void 0:I.id));return!(a&&a.getStackCount()>=a.getMaxStackCount(E))});R.length>0?E.unshiftPhase(new gE(E,$[JA(R)])):E.unshiftPhase(new gE(E,$.VOUCHER))}},"doEventReward"),N9=FA.withEncounterType(qe.DELIBIRDY).withMaxAllowedEncounters(4).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withSceneRequirement(new XO(0,eb)).withPrimaryPokemonRequirement(qI.Some(new di(Rh),new di(Oh,1,!0))).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:38,scale:.94},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,scale:1.06},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:65,x:1,y:5,yShadow:5}]).withIntroDialogue([{text:`${jE}:intro`}]).setLocalizationKey(`${jE}`).withTitle(`${jE}:title`).withDescription(`${jE}:description`).withQuery(`${jE}:query`).withOutroDialogue([{text:`${jE}:outro`}]).withOnInit(E=>(E.currentBattle.mysteryEncounter.setDialogueToken("delibirdName",xe(e.DELIBIRD).getName()),E.loadBgm("mystery_encounter_delibirdy","mystery_encounter_delibirdy.mp3"),!0)).withOnVisualsStart(E=>(E.fadeAndSwitchBgm("mystery_encounter_delibirdy"),!0)).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,eb).withDialogue({buttonLabel:`${jE}:option.1.label`,buttonTooltip:`${jE}:option.1.tooltip`,selected:[{text:`${jE}:option.1.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return jR(E,-A.options[0].requirements[0].requiredMoney,!0,!1),!0}).withOptionPhase(async E=>{const A=E.findModifier(s=>s instanceof mR);if(A&&A.getStackCount()>=A.getMaxStackCount(E)){const s=gt(E,$.SHELL_BELL);await iR(E,E.getPlayerPokemon(),s),E.playSound("item_fanfare"),await $t(E,D.t("battle:rewardGain",{modifierName:s.name}),null,void 0,!0),Ri(E)}else E.unshiftPhase(new gE(E,$.AMULET_COIN)),Ri(E);dt(E,!0)}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new di(Rh)).withDialogue({buttonLabel:`${jE}:option.2.label`,buttonTooltip:`${jE}:option.2.tooltip`,secondOptionPrompt:`${jE}:option.2.select_prompt`,selected:[{text:`${jE}:option.2.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>n.getHeldItems().filter(a=>Rh.some(r=>a.constructor.name===r)&&a.isTransferable).map(a=>({label:a.type.name,handler:L(()=>(A.setDialogueToken("chosenItem",a.type.name),A.misc={chosenPokemon:n,chosenModifier:a},!0),"handler")})),"onPokemonSelected"),void 0,L(n=>A.options[1].pokemonMeetsPrimaryRequirements(E,n)?null:mA(E,`${jE}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenModifier,R=A.misc.chosenPokemon;if(s instanceof lE){const n=E.findModifier(I=>I instanceof eI);if(n&&n.getStackCount()>=n.getMaxStackCount(E)){const I=gt(E,$.SHELL_BELL);await iR(E,E.getPlayerPokemon(),I),E.playSound("item_fanfare"),await $t(E,D.t("battle:rewardGain",{modifierName:I.name}),null,void 0,!0),Ri(E)}else E.unshiftPhase(new gE(E,$.CANDY_JAR)),Ri(E)}else{const n=E.findModifier(I=>I instanceof Sa);if(n&&n.getStackCount()>=n.getMaxStackCount(E)){const I=gt(E,$.SHELL_BELL);await iR(E,E.getPlayerPokemon(),I),E.playSound("item_fanfare"),await $t(E,D.t("battle:rewardGain",{modifierName:I.name}),null,void 0,!0),Ri(E)}else E.unshiftPhase(new gE(E,$.BERRY_POUCH)),Ri(E)}R.loseHeldItem(s,!1),dt(E,!0)}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new di(Oh,1,!0)).withDialogue({buttonLabel:`${jE}:option.3.label`,buttonTooltip:`${jE}:option.3.tooltip`,secondOptionPrompt:`${jE}:option.3.select_prompt`,selected:[{text:`${jE}:option.3.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>n.getHeldItems().filter(a=>!Oh.some(r=>a.constructor.name===r)&&a.isTransferable).map(a=>({label:a.type.name,handler:L(()=>(A.setDialogueToken("chosenItem",a.type.name),A.misc={chosenPokemon:n,chosenModifier:a},!0),"handler")})),"onPokemonSelected"),void 0,L(n=>A.options[2].pokemonMeetsPrimaryRequirements(E,n)?null:mA(E,`${jE}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenModifier,R=A.misc.chosenPokemon,n=E.findModifier(I=>I instanceof oa);if(n&&n.getStackCount()>=n.getMaxStackCount(E)){const I=gt(E,$.SHELL_BELL);await iR(E,E.getPlayerParty()[0],I),E.playSound("item_fanfare"),await $t(E,D.t("battle:rewardGain",{modifierName:I.name}),null,void 0,!0),Ri(E)}else E.unshiftPhase(new gE(E,$.HEALING_CHARM)),Ri(E);R.loseHeldItem(s,!1),dt(E,!0)}).build()).build(),Vs="mysteryEncounters/absoluteAvarice",T9=FA.withEncounterType(qe.ABSOLUTE_AVARICE).withEncounterTier(Vt.GREAT).withSceneWaveRangeRequirement(...xA).withSceneRequirement(new TC("BerryModifier",4)).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!0,alpha:.001,repeat:!0,x:-5},{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!1,repeat:!0,x:-5},{spriteKey:"lum_berry",fileRoot:"items",isItem:!0,x:7,y:-14,hidden:!0,disableAnimation:!0},{spriteKey:"salac_berry",fileRoot:"items",isItem:!0,x:2,y:4,hidden:!0,disableAnimation:!0},{spriteKey:"lansat_berry",fileRoot:"items",isItem:!0,x:32,y:5,hidden:!0,disableAnimation:!0},{spriteKey:"liechi_berry",fileRoot:"items",isItem:!0,x:6,y:-5,hidden:!0,disableAnimation:!0},{spriteKey:"sitrus_berry",fileRoot:"items",isItem:!0,x:7,y:8,hidden:!0,disableAnimation:!0},{spriteKey:"enigma_berry",fileRoot:"items",isItem:!0,x:26,y:-4,hidden:!0,disableAnimation:!0},{spriteKey:"leppa_berry",fileRoot:"items",isItem:!0,x:16,y:-27,hidden:!0,disableAnimation:!0},{spriteKey:"petaya_berry",fileRoot:"items",isItem:!0,x:30,y:-17,hidden:!0,disableAnimation:!0},{spriteKey:"ganlon_berry",fileRoot:"items",isItem:!0,x:16,y:-11,hidden:!0,disableAnimation:!0},{spriteKey:"apicot_berry",fileRoot:"items",isItem:!0,x:14,y:-2,hidden:!0,disableAnimation:!0},{spriteKey:"starf_berry",fileRoot:"items",isItem:!0,x:18,y:9,hidden:!0,disableAnimation:!0}]).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${Vs}:intro`}]).setLocalizationKey(`${Vs}`).withTitle(`${Vs}:title`).withDescription(`${Vs}:description`).withQuery(`${Vs}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;E.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),E.loadSe("Follow Me","battle_anims","Follow Me.mp3");const s=E.findModifiers(r=>r instanceof lE),R=new Map;E.getPlayerParty().forEach(r=>{const S=s.filter(o=>o.pokemonId===r.id);(S==null?void 0:S.length)>0&&R.set(r.id,S)}),A.misc={berryItemsMap:R};const n=[];s.forEach(r=>{for(let S=0;S<r.stackCount;S++){const o=gt(E,$.BERRY,[r.berryType]);n.push({modifier:o})}});const I=E.currentBattle.waveIndex<50?[g.SPDEF]:[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],a={levelAdditiveModifier:1,pokemonConfigs:[{species:xe(e.GREEDENT),isBoss:!0,bossSegments:3,shiny:!1,moveSet:[t.THRASH,t.BODY_PRESS,t.STUFF_CHEEKS,t.CRUNCH],modifierConfigs:n,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:L(r=>{sE(r.scene,`${Vs}:option.1.boss_enraged`),r.scene.unshiftPhase(new Jt(r.scene,r.getBattlerIndex(),!0,I,1))},"mysteryEncounterBattleEffects")}]};return A.enemyPartyConfigs=[a],A.setDialogueToken("greedentName",xe(e.GREEDENT).getName()),!0}).withOnVisualsStart(E=>(S9(E),tb(E),E.findModifiers(s=>s instanceof lE).forEach(s=>{E.removeModifier(s)}),E.updateModifiers(!0),!0)).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Vs}:option.1.label`,buttonTooltip:`${Vs}:option.1.tooltip`,selected:[{text:`${Vs}:option.1.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=gt(E,$.REVIVER_SEED);A.setDialogueToken("foodReward",(s==null?void 0:s.name)??D.t("modifierType:ModifierType.REVIVER_SEED.name")),mt(E,{fillRemaining:!0},void 0,L(()=>{E.getPlayerParty().forEach(I=>{const a=I.getHeldItems();if(s&&!a.some(r=>r instanceof tL)){const r=s.newModifier(I);E.addModifier(r,!1,!1,!1,!0)}}),sE(E,`${Vs}:option.1.food_stash`)},"givePartyPokemonReviverSeeds")),A.startOfBattleEffects.push({sourceBattlerIndex:Bt.ENEMY,targets:[Bt.ENEMY],move:new Ot(t.STUFF_CHEEKS),ignorePp:!0}),await XA(E,!0,!0,500),await $A(E,A.enemyPartyConfigs[0])}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Vs}:option.2.label`,buttonTooltip:`${Vs}:option.2.tooltip`,selected:[{text:`${Vs}:option.2.selected`}]}).withOptionPhase(async E=>{const s=E.currentBattle.mysteryEncounter.misc.berryItemsMap;E.getPlayerParty().forEach(n=>{const I=s.get(n.id),a=[];I==null||I.forEach(S=>a.push(...new Array(S.stackCount).fill(S.berryType)));const r=Math.floor((a.length??0)*2/5);if(r>0)for(let S=0;S<r;S++){Phaser.Math.RND.shuffle(a);const o=a.pop(),l=gt(E,$.BERRY,[o]);iR(E,n,l)}}),await E.updateModifiers(!0),await XA(E,!0,!0,500),dt(E,!0)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Vs}:option.3.label`,buttonTooltip:`${Vs}:option.3.tooltip`,selected:[{text:`${Vs}:option.3.selected`}]}).withPreOptionPhase(async E=>(o9(E),tb(E,!0),!0)).withOptionPhase(async E=>{const A=N1(E,!1,!0).level-2,s=new rs(E,xe(e.GREEDENT),A,Tt.NONE,!1,!0);s.moveset=[new Ot(t.THRASH),new Ot(t.BODY_PRESS),new Ot(t.STUFF_CHEEKS),new Ot(t.SLACK_OFF)],s.passive=!0,await XA(E,!0,!0,500),await _r(E,s,null,be.POKEBALL,!1),dt(E,!0)}).build()).build();function S9(E){var n;const R=(n=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:n.getSpriteAtIndex(1);E.playSound("battle_anims/Follow Me"),E.tweens.chain({targets:R,tweens:[{duration:500,ease:"Cubic.easeOut",y:"+=75",x:"-=65",scale:1.1},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(hA(2)>0?"-=":"+=")+5,y:(hA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(hA(2)>0?"-=":"+=")+5,y:(hA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(hA(2)>0?"-=":"+=")+5,y:(hA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(hA(2)>0?"-=":"+=")+5,y:(hA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(hA(2)>0?"-=":"+=")+5,y:(hA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(hA(2)>0?"-=":"+=")+5,y:(hA(2)>0?"-=":"+=")+5},{duration:500,ease:"Cubic.easeOut",y:"-=75",x:"+=65",scale:1},{duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1}]})}L(S9,"doGreedentSpriteSteal");function o9(E){var R;const A=(R=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:R.getSpriteAtIndex(1);let s=1;E.tweens.add({targets:A,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:"-=8",loop:5,onStart:L(()=>{E.playSound("battle_anims/PRSFX- Bug Bite")},"onStart"),onLoop:L(()=>{s%2===0&&E.playSound("battle_anims/PRSFX- Bug Bite"),s++},"onLoop")})}L(o9,"doGreedentEatBerries");function tb(E,A=!1){let R=["starf","sitrus","lansat","salac","apicot","enigma","liechi","ganlon","lum","petaya","leppa"];A&&(R=R.reverse());const n=E.currentBattle.mysteryEncounter;R.forEach((I,a)=>{var C;const r=n.spriteConfigs.findIndex(M=>{var u;return(u=M.spriteKey)==null?void 0:u.includes(I)});let S,o;const l=(C=n.introVisuals)==null?void 0:C.getSpriteAtIndex(r);l&&(S=l[0],o=l[1]),E.time.delayedCall(150*a+400,()=>{S&&S.setVisible(!A),o&&o.setVisible(!A),I==="petaya"&&S&&o&&!A&&E.time.delayedCall(200,()=>{l9(E,[S,o],30,500)})})})}L(tb,"doBerrySpritePile");function l9(E,A,s,R){let n=1,I=s;const a=L(()=>{E.tweens.add({targets:A,y:"+="+I,x:{value:"+="+n*n*10,ease:"Linear"},duration:n*R,ease:"Cubic.easeIn",onComplete:L(()=>{n=n>.01?n*.5:0,n&&(I=I*n,E.tweens.add({targets:A,y:"-="+I,x:{value:"+="+n*n*10,ease:"Linear"},duration:n*R,ease:"Cubic.easeOut",onComplete:L(()=>a(),"onComplete")}))},"onComplete")})},"doBounce");a()}L(l9,"doBerryBounce");const xs="mysteryEncounters/aTrainersTest",C9=FA.withEncounterType(qe.A_TRAINERS_TEST).withEncounterTier(Vt.ROGUE).withSceneWaveRangeRequirement(100,xA[1]).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${xs}:intro`}]).withAutoHideIntroVisuals(!1).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;let s,R,n;switch(_e(5)){default:case 0:s=U.BUCK,R=rn(e.CLAYDOL),n="buck";break;case 1:s=U.CHERYL,R=rn(e.BLISSEY),n="cheryl";break;case 2:s=U.MARLEY,R=rn(e.ARCANINE),n="marley";break;case 3:s=U.MIRA,R=rn(e.ALAKAZAM,!1,1),n="mira";break;case 4:s=U.RILEY,R=rn(e.LUCARIO,!1,1),n="riley";break}A.dialogue.intro=[{speaker:`trainerNames:${n}`,text:`${xs}:${n}.intro_dialogue`}],A.options[0].dialogue.selected=[{speaker:`trainerNames:${n}`,text:`${xs}:${n}.accept`}],A.options[1].dialogue.selected=[{speaker:`trainerNames:${n}`,text:`${xs}:${n}.decline`}],A.setDialogueToken("statTrainerName",D.t(`trainerNames:${n}`));const I=D.t(`${xs}:title`)+`:
`+D.t(`trainerNames:${n}`);A.misc={trainerType:s,trainerNameKey:n,trainerEggDescription:I};const a=ZA[s].clone(),r=a.getSpriteKey();return A.enemyPartyConfigs.push({levelAdditiveModifier:1,trainerConfig:a}),A.spriteConfigs=[{spriteKey:R.spriteKey,fileRoot:R.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:22,y:-2,yShadow:-2},{spriteKey:r,fileRoot:"trainer",hasShadow:!0,disableAnimation:!0,x:-24,y:4,yShadow:4}],!0}).setLocalizationKey(`${xs}`).withTitle(`${xs}:title`).withDescription(`${xs}:description`).withQuery(`${xs}:query`).withIntroDialogue().withSimpleOption({buttonLabel:`${xs}:option.1.label`,buttonTooltip:`${xs}:option.1.tooltip`},async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0];await XA(E);const R={scene:E,pulled:!1,sourceType:pE.EVENT,eggDescriptor:A.misc.trainerEggDescription,tier:m.EPIC};A.setDialogueToken("eggType",D.t(`${xs}:eggTypes.epic`)),mt(E,{guaranteedModifierTypeFuncs:[$.SACRED_ASH],guaranteedModifierTiers:[v.ROGUE,v.ULTRA],fillRemaining:!0},[R]),await $A(E,s)}).withSimpleOption({buttonLabel:`${xs}:option.2.label`,buttonTooltip:`${xs}:option.2.tooltip`},async E=>{const A=E.currentBattle.mysteryEncounter;E.unshiftPhase(new Gr(E,!0));const s={scene:E,pulled:!1,sourceType:pE.EVENT,eggDescriptor:A.misc.trainerEggDescription,tier:m.RARE};A.setDialogueToken("eggType",D.t(`${xs}:eggTypes.rare`)),mt(E,{fillRemaining:!1,rerollMultiplier:-1},[s]),dt(E)}).withOutroDialogue([{text:`${xs}:outro`}]).build(),tO="mysteryEncounters/trashToTreasure",Ab=700,Eb=2.5,U9=FA.withEncounterType(qe.TRASH_TO_TREASURE).withEncounterTier(Vt.ULTRA).withSceneWaveRangeRequirement(60,xA[1]).withMaxAllowedEncounters(1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.GARBODOR.toString()+"-gigantamax",fileRoot:"pokemon",hasShadow:!1,disableAnimation:!0,scale:1.5,y:8,tint:.4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${tO}:intro`}]).setLocalizationKey(`${tO}`).withTitle(`${tO}:title`).withDescription(`${tO}:description`).withQuery(`${tO}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,n={levelAdditiveModifier:.5,pokemonConfigs:[{species:xe(e.GARBODOR),isBoss:!0,shiny:!1,formIndex:1,bossSegmentModifier:1,moveSet:[t.PAYBACK,t.GUNK_SHOT,t.STOMPING_TANTRUM,t.DRAIN_PUNCH]}],disableSwitch:!0};return A.enemyPartyConfigs=[n],Bo(E,[t.TOXIC,t.AMNESIA]),E.loadSe("PRSFX- Dig2","battle_anims","PRSFX- Dig2.wav"),E.loadSe("PRSFX- Venom Drench","battle_anims","PRSFX- Venom Drench.wav"),A.setDialogueToken("costMultiplier",Eb.toString()),!0}).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${tO}:option.1.label`,buttonTooltip:`${tO}:option.1.tooltip`,selected:[{text:`${tO}:option.1.selected`}]}).withPreOptionPhase(async E=>{D9(E)}).withOptionPhase(async E=>{await XA(E),await u9(E);const A=gt(E,$.MYSTERY_ENCOUNTER_BLACK_SLUDGE,[Eb]),s=A==null?void 0:A.newModifier();s&&(await E.addModifier(s,!1,!1,!1,!0),E.playSound("battle_anims/PRSFX- Venom Drench",{volume:2}),await $t(E,D.t("battle:rewardGain",{modifierName:s.type.name}),null,void 0,!0)),dt(E,!0)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${tO}:option.2.label`,buttonTooltip:`${tO}:option.2.tooltip`,selected:[{text:`${tO}:option.2.selected`}]}).withOptionPhase(async E=>{E.setFieldScale(.75),await $t(E,`${tO}:option.2.selected_2`),await XA(E);const A=E.currentBattle.mysteryEncounter;mt(E,{guaranteedModifierTiers:[v.ROGUE,v.ROGUE,v.ULTRA,v.GREAT],fillRemaining:!0}),A.startOfBattleEffects.push({sourceBattlerIndex:Bt.ENEMY,targets:[Bt.PLAYER],move:new Ot(t.TOXIC),ignorePp:!0},{sourceBattlerIndex:Bt.ENEMY,targets:[Bt.ENEMY],move:new Ot(t.AMNESIA),ignorePp:!0}),await $A(E,A.enemyPartyConfigs[0])}).build()).build();async function u9(E){const A=gt(E,$.SHELL_BELL),s=gt(E,$.LEFTOVERS),R=E.getPlayerParty();for(const n of R){const a=E.findModifiers(r=>r instanceof Ht&&r.pokemonId===n.id,!0).find(r=>r instanceof Ta);if(!a||a.getStackCount()<a.getMaxStackCount(E)){await iR(E,n,s);break}}for(const n of R){const a=E.findModifiers(r=>r instanceof Ht&&r.pokemonId===n.id,!0).find(r=>r instanceof Ta);if(!a||a.getStackCount()<a.getMaxStackCount(E)){await iR(E,n,s);break}}E.playSound("item_fanfare"),await $t(E,D.t("battle:rewardGainCount",{modifierName:s.name,count:2}),null,void 0,!0);for(const n of R){const a=E.findModifiers(r=>r instanceof Ht&&r.pokemonId===n.id,!0).find(r=>r instanceof ji);if(!a||a.getStackCount()<a.getMaxStackCount(E)){await iR(E,n,A);break}}for(const n of R){const a=E.findModifiers(r=>r instanceof Ht&&r.pokemonId===n.id,!0).find(r=>r instanceof ji);if(!a||a.getStackCount()<a.getMaxStackCount(E)){await iR(E,n,A);break}}E.playSound("item_fanfare"),await $t(E,D.t("battle:rewardGainCount",{modifierName:A.name,count:2}),null,void 0,!0)}L(u9,"tryApplyDigRewardItems");function D9(E){E.playSound("battle_anims/PRSFX- Dig2"),E.time.delayedCall(Ab,()=>{E.playSound("battle_anims/PRSFX- Dig2"),E.playSound("battle_anims/PRSFX- Venom Drench",{volume:2})}),E.time.delayedCall(Ab*2,()=>{E.playSound("battle_anims/PRSFX- Dig2")})}L(D9,"doGarbageDig");const es="mysteryEncounters/berriesAbound",M9=FA.withEncounterType(qe.BERRIES_ABOUND).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${es}:intro`}]).withOnInit(E=>{var l;const A=E.currentBattle.mysteryEncounter,s=Ko(E,go);let R;if(E.eventManager.isEventActive()&&((l=E.eventManager.activeEvent())!=null&&l.uncommonBreedEncounters)&&_e(2)===1){const C=JA(E.eventManager.activeEvent().uncommonBreedEncounters),M=xe(C.species).getWildSpeciesForLevel(s,C.allowEvolution??!1,!0,E.gameMode);R=xe(M)}else R=E.arena.randomSpecies(E.currentBattle.waveIndex,s,0,pi(E.getPlayerParty()),!0);const n=new rs(E,R,s,Tt.NONE,!0);A.setDialogueToken("enemyPokemon",ee(n));const I={pokemonConfigs:[{level:s,species:R,dataSource:new cs(n),isBoss:!0}]};A.enemyPartyConfigs=[I];const a=E.currentBattle.waveIndex>160?7:E.currentBattle.waveIndex>120?5:E.currentBattle.waveIndex>40?4:2;sI(E.getPlayerParty(),PE.PLAYER,0),A.misc={numBerries:a};const{spriteKey:r,fileRoot:S}=LM(n);A.spriteConfigs=[{spriteKey:"berries_abound_bush",fileRoot:"mystery-encounters",x:25,y:-6,yShadow:-7,disableAnimation:!0,hasShadow:!0},{spriteKey:r,fileRoot:S,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:n.shiny,variant:n.variant}];const o=dZ(E,FO[g.SPD],!0,!1);return A.misc.fastestPokemon=o,A.misc.enemySpeed=n.getStat(g.SPD),A.setDialogueToken("fastestPokemon",o.getNameToRender()),!0}).setLocalizationKey(`${es}`).withTitle(`${es}:title`).withDescription(`${es}:description`).withQuery(`${es}:query`).withSimpleOption({buttonLabel:`${es}:option.1.label`,buttonTooltip:`${es}:option.1.tooltip`,selected:[{text:`${es}:option.1.selected`}]},async E=>{const s=E.currentBattle.mysteryEncounter.misc.numBerries,R=L(()=>{const I=D.t(`${es}:berries`);E.playSound("item_fanfare"),sE(E,D.t("battle:rewardGainCount",{modifierName:I,count:s}));for(let a=0;a<s;a++)nh(E)},"doBerryRewards"),n=[];for(let I=0;I<5;I++){const a=tE(E,$.BERRY);a&&n.push(a)}mt(E,{guaranteedModifierTypeOptions:n,fillRemaining:!1},void 0,R),await $A(E,E.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${es}:option.2.label`,buttonTooltip:`${es}:option.2.tooltip`}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.fastestPokemon,R=A.misc.enemySpeed,n=s.getStat(g.SPD)/(R*1.1),I=A.misc.numBerries,a=[];for(let r=0;r<5;r++){const S=tE(E,$.BERRY);S&&a.push(S)}if(n<1){const r=L(()=>{const l=D.t(`${es}:berries`);E.playSound("item_fanfare"),sE(E,D.t("battle:rewardGainCount",{modifierName:l,count:I}));for(let C=0;C<I;C++)nh(E)},"doBerryRewards"),S=E.currentBattle.waveIndex<50?[g.DEF,g.SPDEF,g.SPD]:[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],o=E.currentBattle.mysteryEncounter.enemyPartyConfigs[0];o.pokemonConfigs[0].tags=[Y.MYSTERY_ENCOUNTER_POST_SUMMON],o.pokemonConfigs[0].mysteryEncounterBattleEffects=l=>{sE(l.scene,`${es}:option.2.boss_enraged`),l.scene.unshiftPhase(new Jt(l.scene,l.getBattlerIndex(),!0,S,1))},mt(E,{guaranteedModifierTypeOptions:a,fillRemaining:!1},void 0,r),await $t(E,`${es}:option.2.selected_bad`),await $A(E,o);return}else{const r=Math.max(Math.min(Math.round((n-1)/.08),I),2);A.setDialogueToken("numBerries",String(r));const S=L(()=>{const o=D.t(`${es}:berries`);E.playSound("item_fanfare"),sE(E,D.t("battle:rewardGainCount",{modifierName:o,count:r}));for(let l=0;l<r;l++)nh(E,s)},"doFasterBerryRewards");rR(E,s.id,A.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),mt(E,{guaranteedModifierTypeOptions:a,fillRemaining:!1},void 0,S),await $t(E,`${es}:option.2.selected`),dt(E)}}).build()).withSimpleOption({buttonLabel:`${es}:option.3.label`,buttonTooltip:`${es}:option.3.tooltip`,selected:[{text:`${es}:option.3.selected`}]},async E=>(dt(E,!0),!0)).build();function nh(E,A){const s=_e(Object.keys(Dt).filter(I=>!isNaN(Number(I))).length),R=gt(E,$.BERRY,[s]),n=E.getPlayerParty();if(A){const I=E.findModifier(a=>a instanceof lE&&a.pokemonId===A.id&&a.berryType===s,!0);if(!I||I.getStackCount()<I.getMaxStackCount(E)){iR(E,A,R);return}}for(const I of n){const a=E.findModifier(r=>r instanceof lE&&r.pokemonId===I.id&&r.berryType===s,!0);if(!a||a.getStackCount()<a.getMaxStackCount(E)){iR(E,I,R);return}}}L(nh,"tryGiveBerry");const yA="mysteryEncounters/clowningAround",sb=[O.STURDY,O.PICKUP,O.INTIMIDATE,O.GUTS,O.DROUGHT,O.DRIZZLE,O.SNOW_WARNING,O.SAND_STREAM,O.ELECTRIC_SURGE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.MISTY_SURGE,O.MAGICIAN,O.SHEER_FORCE,O.PRANKSTER],h9=FA.withEncounterType(qe.CLOWNING_AROUND).withEncounterTier(Vt.ULTRA).withDisallowedChallenges(yt.SINGLE_TYPE).withSceneWaveRangeRequirement(80,xA[1]).withAnimations(zR.SMOKESCREEN).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:e.MR_MIME.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:-25,tint:.3,y:-3,yShadow:-3},{spriteKey:e.BLACEPHALON.toString(),fileRoot:"pokemon/exp",hasShadow:!0,repeat:!0,x:25,tint:.3,y:-3,yShadow:-3},{spriteKey:"harlequin",fileRoot:"trainer",hasShadow:!0,x:0,y:2,yShadow:2}]).withIntroDialogue([{text:`${yA}:intro`},{text:`${yA}:intro_dialogue`,speaker:`${yA}:speaker`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=U.HARLEQUIN,R=ZA[s].clone(),n=new vA(new Je(1,we.STRONG),new Je(1,we.STRONGER));R.setPartyTemplates(n),R.setDoubleOnly(),R.partyTemplateFunc=null;const I=sb[_e(sb.length)];return A.setDialogueToken("ability",new Ee(I,3).name),A.misc={ability:I},A.enemyPartyConfigs.push({trainerConfig:R,pokemonConfigs:[{species:xe(e.MR_MIME),isBoss:!0,moveSet:[t.TEETER_DANCE,t.ALLY_SWITCH,t.DAZZLING_GLEAM,t.PSYCHIC]},{species:xe(e.BLACEPHALON),customPokemonData:new ns({ability:I,types:[_e(18),_e(18)]}),isBoss:!0,moveSet:[t.TRICK,t.HYPNOSIS,t.SHADOW_BALL,t.MIND_BLOWN]}],doubleBattle:!0}),Bo(E,[t.ROLE_PLAY,t.TAUNT]),A.setDialogueToken("blacephalonName",xe(e.BLACEPHALON).getName()),!0}).setLocalizationKey(`${yA}`).withTitle(`${yA}:title`).withDescription(`${yA}:description`).withQuery(`${yA}:query`).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${yA}:option.1.label`,buttonTooltip:`${yA}:option.1.tooltip`,selected:[{text:`${yA}:option.1.selected`,speaker:`${yA}:speaker`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0];mt(E,{fillRemaining:!0}),A.startOfBattleEffects.push({sourceBattlerIndex:Bt.ENEMY,targets:[Bt.ENEMY_2],move:new Ot(t.ROLE_PLAY),ignorePp:!0},{sourceBattlerIndex:Bt.ENEMY_2,targets:[Bt.PLAYER],move:new Ot(t.TAUNT),ignorePp:!0},{sourceBattlerIndex:Bt.ENEMY_2,targets:[Bt.PLAYER_2],move:new Ot(t.TAUNT),ignorePp:!0}),await XA(E),await $A(E,s)}).withPostOptionPhase(async E=>(await c9(E)&&await $t(E,`${yA}:option.1.ability_gained`),E.tweens.add({targets:E.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:250}),new Yn(zR.SMOKESCREEN,E.getPlayerPokemon(),E.getPlayerPokemon()).playWithoutTargets(E,230,40,2),!0)).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${yA}:option.2.label`,buttonTooltip:`${yA}:option.2.tooltip`,selected:[{text:`${yA}:option.2.selected`,speaker:`${yA}:speaker`},{text:`${yA}:option.2.selected_2`},{text:`${yA}:option.2.selected_3`,speaker:`${yA}:speaker`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=E.getPlayerParty();let R=s[0],n=R.getHeldItems().filter(o=>o.isTransferable&&!(o instanceof lE)).reduce((o,l)=>o+l.stackCount,0);s.forEach(o=>{const l=o.getHeldItems().filter(C=>C.isTransferable&&!(C instanceof lE)).reduce((C,M)=>C+M.stackCount,0);l>n&&(R=o,n=l)}),A.setDialogueToken("switchPokemon",R.getNameToRender());const I=R.getHeldItems();let a=0;I.filter(o=>o instanceof lE).forEach(o=>{a+=o.stackCount,E.removeModifier(o)}),ih(E,R,a,"Berries");let r=0,S=0;I.filter(o=>o.isTransferable&&!(o instanceof lE)).forEach(o=>{const l=o.type.withTierFromPool(PE.PLAYER,s),C=l.tier??v.ULTRA;l.id==="GOLDEN_EGG"||C===v.ROGUE?(S+=o.stackCount,E.removeModifier(o)):(l.id==="LUCKY_EGG"||l.id==="SOOTHE_BELL"||C===v.ULTRA)&&(r+=o.stackCount,E.removeModifier(o))}),ih(E,R,r,v.ULTRA),ih(E,R,S,v.ROGUE)}).withOptionPhase(async E=>{dt(E,!0)}).withPostOptionPhase(async E=>{new Yn(zR.SMOKESCREEN,E.getPlayerPokemon(),E.getPlayerPokemon()).playWithoutTargets(E,230,40,2),await XA(E,!0,!0,200)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${yA}:option.3.label`,buttonTooltip:`${yA}:option.3.tooltip`,selected:[{text:`${yA}:option.3.selected`,speaker:`${yA}:speaker`},{text:`${yA}:option.3.selected_2`},{text:`${yA}:option.3.selected_3`,speaker:`${yA}:speaker`}]}).withPreOptionPhase(async E=>{for(const A of E.getPlayerParty()){const s=A.getTypes(!1,!1,!0);let R=A.moveset.filter(a=>a&&!s.includes(a.getMove().type)&&a.getMove().category!==Mt.STATUS).map(a=>a.getMove().type);(R==null?void 0:R.length)>0&&(R=[...new Set(R)].sort(),R=aO(R));const n=[s[0]];let I=null;for(;I===null||I===n[0]||s.includes(I);)R.length>0?I=R.pop()??null:I=_e(18);n.push(I),A.customPokemonData||(A.customPokemonData=new ns),A.customPokemonData.types=n,A.isFusion()&&(A.fusionCustomPokemonData||(A.fusionCustomPokemonData=new ns),A.fusionCustomPokemonData.types=n)}}).withOptionPhase(async E=>{dt(E,!0)}).withPostOptionPhase(async E=>{new Yn(zR.SMOKESCREEN,E.getPlayerPokemon(),E.getPlayerPokemon()).playWithoutTargets(E,230,40,2),await XA(E,!0,!0,200)}).build()).withOutroDialogue([{text:`${yA}:outro`}]).build();async function c9(E){return new Promise(async A=>{await an(E,`${yA}:option.1.apply_ability_dialogue`,`${yA}:speaker`),await $t(E,`${yA}:option.1.apply_ability_message`),E.ui.setMode(Oe.MESSAGE).then(()=>{f6(E,A)})})}L(c9,"handleSwapAbility");function f6(E,A){$t(E,`${yA}:option.1.ability_prompt`,null,500,!1);const R={options:[{label:D.t("menu:yes"),handler:L(()=>(_9(E,A),!0),"handler")},{label:D.t("menu:no"),handler:L(()=>(A(!1),!0),"handler")}],maxOptions:7,yOffset:0};E.ui.setModeWithoutClear(Oe.OPTION_SELECT,R,null,!0)}L(f6,"displayYesNoOptions");function _9(E,A){$E(E,L(n=>{const I=E.currentBattle.mysteryEncounter;P6(n,I.misc.ability),I.setDialogueToken("chosenPokemon",n.getNameToRender()),E.ui.setMode(Oe.MESSAGE).then(()=>A(!0))},"onPokemonSelected"),L(()=>{E.ui.setMode(Oe.MESSAGE).then(()=>{f6(E,A)})},"onPokemonNotSelected"))}L(_9,"onYesAbilitySwap");function ih(E,A,s,R){const n=[[$.REVIVER_SEED,1],[$.GOLDEN_PUNCH,5],[$.ATTACK_TYPE_BOOSTER,99],[$.QUICK_CLAW,3],[$.WIDE_LENS,3]],I=[[$.LEFTOVERS,4],[$.SHELL_BELL,4],[$.SOUL_DEW,10],[$.SCOPE_LENS,1],[$.BATON,1],[$.FOCUS_BAND,5],[$.KINGS_ROCK,3],[$.GRIP_CLAW,5]],a=[[Dt.APICOT,3],[Dt.ENIGMA,2],[Dt.GANLON,3],[Dt.LANSAT,3],[Dt.LEPPA,2],[Dt.LIECHI,3],[Dt.LUM,2],[Dt.PETAYA,3],[Dt.SALAC,2],[Dt.SITRUS,2],[Dt.STARF,3]];let r;R==="Berries"?r=a:r=R===v.ULTRA?n:I;for(let S=0;S<s;S++){if(r.length===0)return;const o=_e(r.length),l=r[o];let C;R==="Berries"?C=gt(E,$.BERRY,[l[0]]):C=gt(E,l[0]),iR(E,A,C),l[1]--,l[1]<=0&&r.splice(o,1)}}L(ih,"generateItemsOfTier");const PA="mysteryEncounters/partTimer",P9=FA.withEncounterType(qe.PART_TIMER).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withIntroSpriteConfigs([{spriteKey:"part_timer_crate",fileRoot:"mystery-encounters",hasShadow:!1,y:6,x:15},{spriteKey:"worker_f",fileRoot:"trainer",hasShadow:!0,x:-18,y:4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${PA}:intro`},{speaker:`${PA}:speaker`,text:`${PA}:intro_dialogue`}]).withOnInit(E=>(E.loadSe("PRSFX- Horn Drill1","battle_anims","PRSFX- Horn Drill1.wav"),E.loadSe("PRSFX- Horn Drill3","battle_anims","PRSFX- Horn Drill3.wav"),E.loadSe("PRSFX- Guillotine2","battle_anims","PRSFX- Guillotine2.wav"),E.loadSe("PRSFX- Heavy Slam2","battle_anims","PRSFX- Heavy Slam2.wav"),E.loadSe("PRSFX- Agility","battle_anims","PRSFX- Agility.wav"),E.loadSe("PRSFX- Extremespeed1","battle_anims","PRSFX- Extremespeed1.wav"),E.loadSe("PRSFX- Accelerock1","battle_anims","PRSFX- Accelerock1.wav"),E.loadSe("PRSFX- Captivate","battle_anims","PRSFX- Captivate.wav"),E.loadSe("PRSFX- Attract2","battle_anims","PRSFX- Attract2.wav"),E.loadSe("PRSFX- Aurora Veil2","battle_anims","PRSFX- Aurora Veil2.wav"),!0)).setLocalizationKey(`${PA}`).withTitle(`${PA}:title`).withDescription(`${PA}:description`).withQuery(`${PA}:query`).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${PA}:option.1.label`,buttonTooltip:`${PA}:option.1.tooltip`,selected:[{text:`${PA}:option.1.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>{A.setDialogueToken("selectedPokemon",n.getNameToRender());const I=Math.floor((2*90+16)*n.level*.01)+5,a=(n.getStat(g.SPD)-I)/I,r=Math.min(Math.max(2.5*(1+a),1),4);A.misc={moneyMultiplier:r},n.moveset.forEach(S=>{if(S){const o=S.getMovePp()-2;S.ppUsed=S.ppUsed<o?o:S.ppUsed}}),rR(E,n.id,100),XA(E,!0,!1),H9(E)},"onPokemonSelected"),void 0,L(n=>YI(n,E,`${PA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{await XA(E,!1,!1);const A=E.currentBattle.mysteryEncounter.misc.moneyMultiplier;A>2.5?await an(E,`${PA}:job_complete_good`,`${PA}:speaker`):await an(E,`${PA}:job_complete_bad`,`${PA}:speaker`);const s=E.getWaveMoneyAmount(A);jR(E,s,!0,!1),await $t(E,D.t("mysteryEncounterMessages:receive_money",{amount:s})),await $t(E,`${PA}:pokemon_tired`),mt(E,{fillRemaining:!0}),dt(E)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${PA}:option.2.label`,buttonTooltip:`${PA}:option.2.tooltip`,selected:[{text:`${PA}:option.2.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>{A.setDialogueToken("selectedPokemon",n.getNameToRender());const I=Math.floor((2*75+16)*n.level*.01)+n.level+10,a=Math.floor((2*75+16)*n.level*.01)+5,r=I+1.5*(a*2),o=(n.getStat(g.HP)+1.5*(n.getStat(g.ATK)+n.getStat(g.DEF))-r)/r,l=Math.min(Math.max(2.5*(1+o),1),4);A.misc={moneyMultiplier:l},n.moveset.forEach(C=>{if(C){const M=C.getMovePp()-2;C.ppUsed=C.ppUsed<M?M:C.ppUsed}}),rR(E,n.id,100),XA(E,!0,!1),G9(E)},"onPokemonSelected"),void 0,L(n=>YI(n,E,`${PA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{await XA(E,!1,!1);const A=E.currentBattle.mysteryEncounter.misc.moneyMultiplier;A>2.5?await an(E,`${PA}:job_complete_good`,`${PA}:speaker`):await an(E,`${PA}:job_complete_bad`,`${PA}:speaker`);const s=E.getWaveMoneyAmount(A);jR(E,s,!0,!1),await $t(E,D.t("mysteryEncounterMessages:receive_money",{amount:s})),await $t(E,`${PA}:pokemon_tired`),mt(E,{fillRemaining:!0}),dt(E)}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wi(H6,!0)).withDialogue({buttonLabel:`${PA}:option.3.label`,buttonTooltip:`${PA}:option.3.tooltip`,disabledButtonTooltip:`${PA}:option.3.disabled_tooltip`,selected:[{text:`${PA}:option.3.selected`}]}).withPreOptionPhase(async E=>{var R;const A=E.currentBattle.mysteryEncounter,s=(R=A.selectedOption)==null?void 0:R.primaryPokemon;return A.setDialogueToken("selectedPokemon",s.getNameToRender()),s.moveset.forEach(n=>{if(n){const I=n.getMovePp()-2;n.ppUsed=n.ppUsed<I?I:n.ppUsed}}),rR(E,s.id,100),XA(E,!0,!1),d9(E),!0}).withOptionPhase(async E=>{await XA(E,!1,!1),await an(E,`${PA}:job_complete_good`,`${PA}:speaker`);const A=E.getWaveMoneyAmount(2.5);jR(E,A,!0,!1),await $t(E,D.t("mysteryEncounterMessages:receive_money",{amount:A})),await $t(E,`${PA}:pokemon_tired`),mt(E,{fillRemaining:!0}),dt(E)}).build()).withOutroDialogue([{speaker:`${PA}:speaker`,text:`${PA}:outro`}]).build();function G9(E){E.playSound("battle_anims/PRSFX- Horn Drill1"),E.playSound("battle_anims/PRSFX- Horn Drill1"),E.time.delayedCall(1e3,()=>{E.playSound("battle_anims/PRSFX- Guillotine2")}),E.time.delayedCall(2e3,()=>{E.playSound("battle_anims/PRSFX- Heavy Slam2")}),E.time.delayedCall(2500,()=>{E.playSound("battle_anims/PRSFX- Guillotine2")})}L(G9,"doStrongWorkSfx");function H9(E){E.playSound("battle_anims/PRSFX- Accelerock1"),E.time.delayedCall(1500,()=>{E.playSound("battle_anims/PRSFX- Extremespeed1")}),E.time.delayedCall(2e3,()=>{E.playSound("battle_anims/PRSFX- Extremespeed1")}),E.time.delayedCall(2250,()=>{E.playSound("battle_anims/PRSFX- Agility")})}L(H9,"doDeliverySfx");function d9(E){E.playSound("battle_anims/PRSFX- Captivate"),E.time.delayedCall(1500,()=>{E.playSound("battle_anims/PRSFX- Attract2")}),E.time.delayedCall(2e3,()=>{E.playSound("battle_anims/PRSFX- Aurora Veil2")}),E.time.delayedCall(3e3,()=>{E.playSound("battle_anims/PRSFX- Attract2")})}L(d9,"doSalesSfx");const lK=class lK extends ps{constructor(A){super(A,Oe.EVOLUTION_SCENE)}setup(){this.canCancel=!1,this.cancelled=!1;const A=this.getUi();this.evolutionContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),A.add(this.evolutionContainer);const s=this.scene.add.sprite(0,0,"bg",this.scene.windowType);s.setOrigin(0,1),s.setVisible(!1),A.add(s),this.messageBg=s,this.messageContainer=this.scene.add.container(12,-39),this.messageContainer.setVisible(!1),A.add(this.messageContainer);const R=le(this.scene,0,0,"",X.MESSAGE,{maxLines:2,wordWrap:{width:1780}});this.messageContainer.add(R),this.message=R,this.initPromptSprite(this.messageContainer)}show(A){return super.show(A),this.scene.ui.bringToTop(this.evolutionContainer),this.scene.ui.bringToTop(this.messageBg),this.scene.ui.bringToTop(this.messageContainer),this.messageBg.setVisible(!0),this.messageContainer.setVisible(!0),!0}processInput(A){if(this.canCancel&&!this.cancelled&&A===b.CANCEL)return this.cancelled=!0,!0;const s=this.getUi();if(this.awaitingActionInput&&(A===b.CANCEL||A===b.ACTION)&&this.onActionInput){s.playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),!0}return!1}setCursor(A){return!1}clear(){this.clearText(),this.canCancel=!1,this.cancelled=!1,this.evolutionContainer.removeAll(!0),this.messageContainer.setVisible(!1),this.messageBg.setVisible(!1)}};L(lK,"EvolutionSceneHandler");let CC=lK;const CK=class CK extends AC{constructor(A,s){super(A,s,!0)}getPlayerPokemon(){return super.getPokemon()}};L(CK,"PlayerPartyMemberPokemonPhase");let Hr=CK;var o1=(E=>(E[E.LEARN_MOVE=0]="LEARN_MOVE",E[E.MEMORY=1]="MEMORY",E[E.TM=2]="TM",E))(o1||{});const UK=class UK extends Hr{constructor(A,s,R,n=0,I=-1){super(A,s),this.moveId=R,this.learnMoveType=n,this.cost=I}start(){super.start();const A=this.getPokemon(),s=ye[this.moveId],R=A.getMoveset();if(R.some(I=>(I==null?void 0:I.moveId)===s.id)&&this.moveId!==t.SKETCH)return this.end();this.messageMode=this.scene.ui.getHandler()instanceof CC?Oe.EVOLUTION_SCENE:Oe.MESSAGE,this.scene.ui.setMode(this.messageMode),R.length<4?this.learnMove(R.length,s,A):this.replaceMoveCheck(s,A)}async replaceMoveCheck(A,s){const R=D.t("battle:learnMovePrompt",{pokemonName:ee(s),moveName:A.name}),n=D.t("battle:learnMoveLimitReached",{pokemonName:ee(s)}),I=D.t("battle:learnMoveReplaceQuestion",{moveName:A.name}),a=[R,n].join("$");await this.scene.ui.showTextPromise(a),await this.scene.ui.showTextPromise(I,void 0,!1),await this.scene.ui.setModeWithoutClear(Oe.CONFIRM,()=>this.forgetMoveProcess(A,s),()=>{this.scene.ui.setMode(this.messageMode),this.rejectMoveAndEnd(A,s)})}async forgetMoveProcess(A,s){this.scene.ui.setMode(this.messageMode),await this.scene.ui.showTextPromise(D.t("battle:learnMoveForgetQuestion"),void 0,!0),await this.scene.ui.setModeWithoutClear(Oe.SUMMARY,s,rM.LEARN_MOVE,A,R=>{if(R===4){this.scene.ui.setMode(this.messageMode).then(()=>this.rejectMoveAndEnd(A,s));return}const n=D.t("battle:learnMoveForgetSuccess",{pokemonName:ee(s),moveName:s.moveset[R].getName()}),I=[D.t("battle:countdownPoof"),n,D.t("battle:learnMoveAnd")].join("$");this.scene.ui.setMode(this.messageMode).then(()=>this.learnMove(R,A,s,I))})}async rejectMoveAndEnd(A,s){await this.scene.ui.showTextPromise(D.t("battle:learnMoveStopTeaching",{moveName:A.name}),void 0,!1),this.scene.ui.setModeWithoutClear(Oe.CONFIRM,()=>{this.scene.ui.setMode(this.messageMode),this.scene.ui.showTextPromise(D.t("battle:learnMoveNotLearned",{pokemonName:ee(s),moveName:A.name}),void 0,!0).then(()=>this.end())},()=>{this.scene.ui.setMode(this.messageMode),this.replaceMoveCheck(A,s)})}async learnMove(A,s,R,n){this.learnMoveType===2?(R.usedTMs||(R.usedTMs=[]),R.usedTMs.push(this.moveId),this.scene.tryRemovePhase(a=>a instanceof oO)):this.learnMoveType===1&&(this.cost!==-1?(Ye.WAIVE_ROLL_FEE_OVERRIDE||(this.scene.money-=this.cost,this.scene.updateMoneyText(),this.scene.animateMoneyChanged(!1)),this.scene.playSound("se/buy")):this.scene.tryRemovePhase(a=>a instanceof oO)),R.setMove(A,this.moveId),iL(this.scene,this.moveId).then(()=>{IL(this.scene,[this.moveId],!0)}),this.scene.ui.setMode(this.messageMode);const I=D.t("battle:learnMove",{pokemonName:ee(R),moveName:s.name});n&&await this.scene.ui.showTextPromise(n),this.scene.playSound("level_up_fanfare"),this.scene.ui.showText(I,null,()=>{this.scene.triggerPokemonFormChange(R,xI,!0),this.end()},this.messageMode===Oe.EVOLUTION_SCENE?1e3:void 0,!0)}};L(UK,"LearnMovePhase");let kn=UK;const Ls="mysteryEncounters/dancingLessons",f9=[N.VOLCANO,N.BEACH,N.ISLAND,N.WASTELAND,N.MOUNTAIN,N.BADLANDS,N.DESERT],B9=[N.CONSTRUCTION_SITE,N.POWER_PLANT,N.FACTORY,N.LABORATORY,N.SLUM,N.METROPOLIS,N.DOJO],g9=[N.JUNGLE,N.FAIRY_CAVE,N.MEADOW,N.PLAINS,N.GRASS,N.TALL_GRASS,N.FOREST],K9=[N.RUINS,N.SWAMP,N.CAVE,N.ABYSS,N.GRAVEYARD,N.LAKE,N.TEMPLE],m9=FA.withEncounterType(qe.DANCING_LESSONS).withEncounterTier(Vt.GREAT).withSceneWaveRangeRequirement(...xA).withIntroSpriteConfigs([]).withAnimations(zR.DANCE).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withOnVisualsStart(E=>{const A=E.getEnemyPokemon();return new Yn(zR.DANCE,A,E.getPlayerPokemon()).play(E,!1,()=>{A.shiny&&A.sparkle()}),!0}).withIntroDialogue([{text:`${Ls}:intro`}]).setLocalizationKey(`${Ls}`).withTitle(`${Ls}:title`).withDescription(`${Ls}:description`).withQuery(`${Ls}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=xe(e.ORICORIO),R=Ko(E,go),n=new rs(E,s,R,Tt.NONE,!1);n.moveset.some(o=>o&&o.getMove().id===t.REVELATION_DANCE)||(n.moveset.length<4?n.moveset.push(new Ot(t.REVELATION_DANCE)):n.moveset[0]=new Ot(t.REVELATION_DANCE));const I=E.arena.biomeType;f9.includes(I)?n.formIndex=0:B9.includes(I)?n.formIndex=1:g9.includes(I)?n.formIndex=2:K9.includes(I)?n.formIndex=3:n.formIndex=0;const a=new cs(n),r=E.addEnemyPokemon(s,R,Tt.NONE,!1,!1,a);E.getEnemyParty().forEach(o=>{E.field.remove(o,!0)}),E.currentBattle.enemyParty=[r],E.field.add(r),r.x-=300,A.loadAssets.push(r.loadAssets());const S={pokemonConfigs:[{species:s,dataSource:a,isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:L(o=>{sE(o.scene,`${Ls}:option.1.boss_enraged`),o.scene.unshiftPhase(new Jt(o.scene,o.getBattlerIndex(),!0,[g.ATK,g.DEF,g.SPATK,g.SPDEF],1))},"mysteryEncounterBattleEffects")}]};return A.enemyPartyConfigs=[S],A.misc={oricorioData:a},A.setDialogueToken("oricorioName",xe(e.ORICORIO).getName()),!0}).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Ls}:option.1.label`,buttonTooltip:`${Ls}:option.1.tooltip`,selected:[{text:`${Ls}:option.1.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;A.startOfBattleEffects.push({sourceBattlerIndex:Bt.ENEMY,targets:[Bt.PLAYER],move:new Ot(t.REVELATION_DANCE),ignorePp:!0}),await Ih(E),mt(E,{guaranteedModifierTypeFuncs:[$.BATON],fillRemaining:!0}),await $A(E,A.enemyPartyConfigs[0])}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${Ls}:option.2.label`,buttonTooltip:`${Ls}:option.2.tooltip`,selected:[{text:`${Ls}:option.2.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(R=>{A.setDialogueToken("selectedPokemon",R.getNameToRender()),E.unshiftPhase(new kn(E,E.getPlayerParty().indexOf(R),t.REVELATION_DANCE)),new Yn(zR.DANCE,E.getEnemyPokemon(),E.getPlayerPokemon()).play(E)},"onPokemonSelected"))}).withOptionPhase(async E=>{await Ih(E),dt(E,!0)}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wi(Yx,!0)).withDialogue({buttonLabel:`${Ls}:option.3.label`,buttonTooltip:`${Ls}:option.3.tooltip`,disabledButtonTooltip:`${Ls}:option.3.disabled_tooltip`,secondOptionPrompt:`${Ls}:option.3.select_prompt`,selected:[{text:`${Ls}:option.3.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>n.moveset.filter(I=>I&&Yx.includes(I.getMove().id)).map(I=>({label:I.getName(),handler:L(()=>(A.setDialogueToken("selectedPokemon",n.getNameToRender()),A.setDialogueToken("selectedMove",I.getName()),A.misc.selectedMove=I,!0),"handler")})),"onPokemonSelected"),void 0,L(n=>n.isAllowedInBattle()?A.options[2].pokemonMeetsPrimaryRequirements(E,n)?null:mA(E,`${Ls}:invalid_selection`)??null:D.t("partyUiHandler:cantBeUsed",{pokemonName:n.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async E=>{var n;const A=E.currentBattle.mysteryEncounter,s=A.misc.oricorioData.toPokemon(E);s.passive=!0;const R=(n=A.misc.selectedMove)==null?void 0:n.getMove().id;s.moveset.some(I=>I.getMove().id===R)||(s.moveset.length<4?s.moveset.push(new Ot(R)):s.moveset[3]=new Ot(R)),await Ih(E),await _r(E,s,null,be.POKEBALL,!1),dt(E,!0)}).build()).build();function Ih(E){return new Promise(A=>{const s=E.getEnemyParty()[0];E.tweens.add({targets:s,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:L(()=>{E.field.remove(s,!0),A()},"onComplete")})})}L(Ih,"hideOricorioPokemon");var B6=(E=>(E[E.CENTER=0]="CENTER",E[E.LEFT=1]="LEFT",E[E.RIGHT=2]="RIGHT",E))(B6||{});function I0(E,A,s,R){return new Promise(n=>{const I=E.fieldUI.getByName("Dream Background"),a=E.add.image(0,0,"default_bg");a.setOrigin(0,0),a.setVisible(!1),I.add(a);let r,S,o,l;const C=R===0?0:R===2?100:-100,M=R!==0?-15:0,u=L(()=>{const h=E.addPokemonSprite(A,a.displayWidth/2+C,a.displayHeight/2+M,"pkmn__sub");return h.setPipeline(E.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),h},"getPokemonSprite");I.add(r=u()),I.add(S=u()),I.add(o=u()),I.add(l=u()),r.setAlpha(0),S.setAlpha(0),S.setTintFill(16777215),o.setVisible(!1),l.setVisible(!1),l.setTintFill(16777215),[r,S,o,l].map(h=>{const P=A.getSpriteKey(!0);try{h.play(P)}catch(G){console.error(`Failed to play animation for ${P}`,G)}h.setPipeline(E.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:dR(A.getTeraType())}),h.setPipelineData("ignoreTimeTint",!0),h.setPipelineData("spriteKey",A.getSpriteKey()),h.setPipelineData("shiny",A.shiny),h.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(G=>{var d;(d=A.summonData)!=null&&d.speciesForm&&(G+="Base"),h.pipelineData[G]=A.getSprite().pipelineData[G]})}),[o,l].map(h=>{const P=s.getSpriteKey(!0);try{h.play(P)}catch(G){console.error(`Failed to play animation for ${P}`,G)}h.setPipelineData("ignoreTimeTint",!0),h.setPipelineData("spriteKey",s.getSpriteKey()),h.setPipelineData("shiny",s.shiny),h.setPipelineData("variant",s.variant),["spriteColors","fusionSpriteColors"].map(G=>{var d;(d=s.summonData)!=null&&d.speciesForm&&(G+="Base"),h.pipelineData[G]=s.getSprite().pipelineData[G]})}),E.tweens.add({targets:r,alpha:1,ease:"Cubic.easeInOut",duration:2e3,onComplete:L(()=>{F9(E,a,I,C,M),E.tweens.addCounter({from:0,to:1,duration:1e3,onUpdate:L(h=>{S.setAlpha(h.getValue())},"onUpdate"),onComplete:L(()=>{r.setVisible(!1),E.time.delayedCall(700,()=>{p9(E,a,I,C,M),E.time.delayedCall(1e3,()=>{l.setScale(.25),l.setVisible(!0),g6(E,1.5,6,S,l).then(()=>{o.setVisible(!0),W9(E,a,I,C,M),E.time.delayedCall(900,()=>{E.tweens.add({targets:l,alpha:0,duration:1500,delay:150,easing:"Sine.easeIn",onComplete:L(()=>{E.time.delayedCall(3e3,()=>{n(),E.tweens.add({targets:o,alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:L(()=>{A.destroy(),s.setVisible(!1),s.setAlpha(1)},"onComplete")})})},"onComplete")})})})})})},"onComplete")})},"onComplete")})})}L(I0,"doPokemonTransformationSequence");function F9(E,A,s,R,n){let I=0;E.tweens.addCounter({repeat:64,duration:NE(1),onRepeat:L(()=>{if(I<64){if(!(I&7))for(let a=0;a<4;a++)Y9(E,(I&120)*2+a*64,A,s,R,n);I++}},"onRepeat")})}L(F9,"doSpiralUpward");function p9(E,A,s,R,n){let I=0;E.tweens.addCounter({repeat:96,duration:NE(1),onRepeat:L(()=>{if(I<96){if(I<6)for(let a=0;a<9;a++)y9(E,a*16,A,s,R,n);I++}},"onRepeat")})}L(p9,"doArcDownward");function g6(E,A,s,R,n){return new Promise(I=>{const a=A===s;E.tweens.add({targets:R,scale:.25,ease:"Cubic.easeInOut",duration:500/A,yoyo:!a}),E.tweens.add({targets:n,scale:1,ease:"Cubic.easeInOut",duration:500/A,yoyo:!a,onComplete:L(()=>{A<s?g6(E,A+.5,s,R,n).then(r=>I(r)):(R.setVisible(!1),I(!0))},"onComplete")})})}L(g6,"doCycle");function W9(E,A,s,R,n){let I=0;E.tweens.addCounter({repeat:48,duration:NE(1),onRepeat:L(()=>{if(I){if(I===32)for(let a=0;a<16;a++)Rb(E,a*16,8,A,s,R,n)}else for(let a=0;a<16;a++)Rb(E,a*16,4,A,s,R,n);I++},"onRepeat")})}L(W9,"doCircleInward");function Y9(E,A,s,R,n,I){const a=s.displayWidth/2+n,r=E.add.image(a,0,"evo_sparkle");R.add(r);let S=0,o=48;const l=E.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{C()},"onRepeat")}),C=L(()=>{!S||r.y>8?(r.setPosition(a,88-S*S/80+I),r.y+=In(A,o)/4,r.x+=WI(A,o),r.setScale(1-S/80),A+=4,S&1&&o--,S++):(r.destroy(),l.remove())},"updateParticle");C()}L(Y9,"doSpiralUpwardParticle");function y9(E,A,s,R,n,I){const a=s.displayWidth/2+n,r=E.add.image(a,0,"evo_sparkle");r.setScale(.5),R.add(r);let S=0,o=8;const l=E.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{C()},"onRepeat")}),C=L(()=>{!S||r.y<88?(r.setPosition(a,8+S*S/5+I),r.y+=In(A,o)/4,r.x+=WI(A,o),o=8+In(S*4,40),S++):(r.destroy(),l.remove())},"updateParticle");C()}L(y9,"doArcDownParticle");function Rb(E,A,s,R,n,I,a){const r=R.displayWidth/2+I,S=R.displayHeight/2+a,o=E.add.image(r,S,"evo_sparkle");n.add(o);let l=120;const C=E.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{M()},"onRepeat")}),M=L(()=>{l>8?(o.setPosition(r,S),o.y+=In(A,l),o.x+=WI(A,l),l-=s,A+=4):(o.destroy(),C.remove())},"updateParticle");M()}L(Rb,"doCircleInwardParticle");const ts="mysteryEncounters/weirdDream",w9=[e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.COSMOG,e.MELTAN,e.KUBFU,e.COSMOEM,e.POIPOLE,e.TERAPAGOS,e.TYPE_NULL,e.CALYREX,e.NAGANADEL,e.URSHIFU,e.OGERPON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI],UC=600,mo=570,K6=20,v9=10,V9=[90,110],x9=[40,50],b9=FA.withEncounterType(qe.WEIRD_DREAM).withEncounterTier(Vt.ROGUE).withDisallowedChallenges(yt.SINGLE_TYPE,yt.SINGLE_GENERATION).withSceneWaveRangeRequirement(30,140).withIntroSpriteConfigs([{spriteKey:"weird_dream_woman",fileRoot:"mystery-encounters",hasShadow:!0,y:11,yShadow:6,x:4}]).withIntroDialogue([{text:`${ts}:intro`},{speaker:`${ts}:speaker`,text:`${ts}:intro_dialogue`}]).setLocalizationKey(`${ts}`).withTitle(`${ts}:title`).withDescription(`${ts}:description`).withQuery(`${ts}:query`).withOnInit(E=>{E.loadBgm("mystery_encounter_weird_dream","mystery_encounter_weird_dream.mp3");const A=k9(E),s=A.map(R=>R.newPokemon.loadAssets());return E.currentBattle.mysteryEncounter.misc={teamTransformations:A,loadAssets:s},!0}).withOnVisualsStart(E=>(E.fadeAndSwitchBgm("mystery_encounter_weird_dream"),!0)).withOption(Ft.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${ts}:option.1.label`,buttonTooltip:`${ts}:option.1.tooltip`,selected:[{text:`${ts}:option.1.selected`}]}).withPreOptionPhase(async E=>{E.time.delayedCall(1e3,()=>{Q9(E)});for(const A of E.currentBattle.mysteryEncounter.misc.teamTransformations)E.removePokemonFromPlayerParty(A.previousPokemon,!1),E.getPlayerParty().push(A.newPokemon)}).withOptionPhase(async E=>{const A=$t(E,`${ts}:option.1.cutscene`);await Promise.all(E.currentBattle.mysteryEncounter.misc.loadAssets);const s=E.currentBattle.mysteryEncounter.misc.teamTransformations;if(s.length<=3)for(const R of s){const n=R.previousPokemon,I=R.newPokemon;await I0(E,n,I,B6.CENTER)}else await $9(E,s);await A,J9(E),await $t(E,`${ts}:option.1.dream_complete`),await Z9(E,s),mt(E,{guaranteedModifierTypeFuncs:[$.MEMORY_MUSHROOM,$.ROGUE_BALL,$.MINT,$.MINT,$.MINT],fillRemaining:!1}),dt(E,!0)}).build()).withSimpleOption({buttonLabel:`${ts}:option.2.label`,buttonTooltip:`${ts}:option.2.tooltip`,selected:[{text:`${ts}:option.2.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter.misc.teamTransformations,s=[];for(const r of A){const S=r.newPokemon,o=r.previousPokemon;await m6(E,o,S,S.species.getRootSpeciesId(),!0);const l=new cs(S);l.player=!1;const C=[];for(const u of r.heldItems)C.push({modifier:u.clone(),stackCount:u.getStackCount(),isTransferable:!1});if(F6(S)){const u=p6(S);C.push({modifier:gt(E,$.MYSTERY_ENCOUNTER_OLD_GATEAU,[K6,u]),stackCount:1,isTransferable:!1})}const M={species:r.newSpecies,isBoss:S.getSpeciesForm().getBaseStatTotal()>mo,level:o.level,dataSource:l,modifierConfigs:C};s.push(M)}const R=E.gameData.gender??vt.UNSET,n=ZA[R===vt.FEMALE?U.FUTURE_SELF_F:U.FUTURE_SELF_M].clone();n.setPartyTemplates(new Je(A.length,we.STRONG));const I={trainerConfig:n,pokemonConfigs:s,female:R===vt.FEMALE},a=L(()=>{const r=E.getPlayerParty().filter(S=>!S.passive);if((r==null?void 0:r.length)>0){const S=r[_e(r.length)];S.passive=!0,S.updateInfo(!0)}},"onBeforeRewards");mt(E,{guaranteedModifierTiers:[v.ROGUE,v.ROGUE,v.ULTRA,v.ULTRA,v.GREAT,v.GREAT],fillRemaining:!1},void 0,a),await $t(E,`${ts}:option.2.selected_2`,null,void 0,!0),await $A(E,I)}).withSimpleOption({buttonLabel:`${ts}:option.3.label`,buttonTooltip:`${ts}:option.3.tooltip`,selected:[{text:`${ts}:option.3.selected`}]},async E=>{for(const A of E.getPlayerParty())A.level=Math.max(Math.ceil((100-v9)/100*A.level),1),A.exp=ZR(A.level,A.species.growthRate),A.levelExp=0,A.calculateStats(),A.getBattleInfo().setLevel(A.level),await A.updateInfo();return dt(E,!0),!0}).build();function k9(E){const A=E.getPlayerParty(),s=A.map(S=>S.species),R=A.map(S=>({previousPokemon:S}));let n=!1,I=!1;const a=A.length,r=aO(A.slice(0));for(let S=0;S<a;S++){const o=r[S],l=R.findIndex(P=>P.previousPokemon.id===o.id);R[l].heldItems=o.getHeldItems().filter(P=>!(P instanceof IR));const C=o.calculateBaseStats().reduce((P,G)=>P+G,0);let M;S<2?M=V9:M=x9;const u=X9(C,M,n,I,s),h=u.getBaseStatTotal();h>UC&&(n=!0),h<=UC&&h>=mo&&(I=!0),R[l].newSpecies=u,console.log("New species: "+JSON.stringify(u)),s.push(u)}for(const S of R){const o=_e(S.newSpecies.getAbilityCount());S.newPokemon=E.addPlayerPokemon(S.newSpecies,S.previousPokemon.level,o,void 0)}return R}L(k9,"getTeamTransformations");async function Z9(E,A){var n;let s=!1;for(const I of A){const a=I.previousPokemon,r=I.newPokemon,S=r.species.getRootSpeciesId();await m6(E,a,r,S)&&(s=!0);for(const o of I.heldItems)o.pokemonId=r.id,await E.addModifier(o,!1,!1,!1,!0);if(F6(r)){const o=p6(r),l=(n=$.MYSTERY_ENCOUNTER_OLD_GATEAU().generateType(E.getPlayerParty(),[K6,o]))==null?void 0:n.withIdFromFunc($.MYSTERY_ENCOUNTER_OLD_GATEAU),C=l==null?void 0:l.newModifier(r);C&&await E.addModifier(C,!1,!1,!1,!0)}r.calculateStats(),await r.updateInfo()}const R=E.getPlayerParty().filter(I=>!I.passive);if((R==null?void 0:R.length)>0){const I=R[_e(R.length)];I.passive=!0,await I.updateInfo(!0)}s&&E.playSound("level_up_fanfare")}L(Z9,"doNewTeamPostProcess");async function m6(E,A,s,R,n=!1){let I=!1;if(s.species.abilityHidden){const l=s.species.ability2?2:1;if(s.abilityIndex<l){const C=new ZE(256);E.applyModifiers(zn,!0,C),!_e(C.value)&&(s.abilityIndex=l)}}s.ivs=s.ivs.map(l=>{const C=_e(31);return C>l?C:l}),s.nature=[At.HARDY,At.DOCILE,At.BASHFUL,At.QUIRKY,At.SERIOUS][_e(5)],!n&&(s.getSpeciesForm().getBaseStatTotal()<=mo||s.isShiny())&&(s.getSpeciesForm().abilityHidden&&s.abilityIndex===s.getSpeciesForm().getAbilityCount()-1&&E.validateAchv(lt.HIDDEN_ABILITY),s.species.subLegendary&&E.validateAchv(lt.CATCH_SUB_LEGENDARY),s.species.legendary&&E.validateAchv(lt.CATCH_LEGENDARY),s.species.mythical&&E.validateAchv(lt.CATCH_MYTHICAL),E.gameData.updateSpeciesDexIvs(s.species.getRootSpeciesId(!0),s.ivs),await E.gameData.setPokemonCaught(s,!0,!1,!1)&&(I=!0,await $t(E,D.t("battle:addedAsAStarter",{pokemonName:xe(R).getName()})))),s.pokerus=A.pokerus,s.luck=A.getLuck(),s.ivs=s.ivs.map((l,C)=>A.ivs[C]>l?A.ivs[C]:l),!n&&E.gameData.dexData[R].caughtAttr&&E.gameData.addStarterCandy(xe(R),1),s.generateAndPopulateMoveset();const a=s.moveset;s.moveset=A.moveset.slice(0);const r=await z9(E,s,R,n);q9(s,a,r);const S=[s.getTypes()[0]];let o=_e(18);for(;o===S[0];)o=_e(18);return S.push(o),s.customPokemonData||(s.customPokemonData=new ns),s.customPokemonData.types=S,s.passive=A.passive,I}L(m6,"postProcessTransformedPokemon");function F6(E){return E.getSpeciesForm().getBaseStatTotal()<mo}L(F6,"shouldGetOldGateau");function p6(E){const A=[],s=E.getSpeciesForm().baseStats.slice(0);return A.push(s[g.HP]<s[g.SPD]?g.HP:g.SPD),A.push(s[g.ATK]<s[g.SPATK]?g.ATK:g.SPATK),A.push(s[g.DEF]<s[g.SPDEF]?g.DEF:g.SPDEF),A}L(p6,"getOldGateauBoostedStats");function X9(E,A,s,R,n){let I;for(;Ve(I);){const a=E+A[1],r=Math.max(E+A[0],0);let S=fR.filter(o=>{const l=o.getBaseStatTotal(),C=l>=r&&l<=a,M=(!R||l<mo||l>UC)&&(!s||l<=UC);return C&&M&&!w9.includes(o.speciesId)});if((S==null?void 0:S.length)>20)for(S=aO(S),I=S.pop();Ve(I)||n.includes(I);)I=S.pop();else A[0]-=10,A[1]+=10}return I}L(X9,"getTransformedSpecies");function Q9(E){const A=E.add.container(0,-E.game.canvas.height/6);A.name="Dream Background";const s=E.add.rectangle(0,0,E.game.canvas.width/6,E.game.canvas.height/6,0);s.setName("Black Background"),s.setOrigin(0,0),A.add(s),s.setVisible(!0);const R=E.add.video(0,0,"evo_bg").stop();R.setLoop(!0),R.setOrigin(0,0),R.setScale(.4359673025),A.add(R),E.fieldUI.add(A),E.fieldUI.bringToTop(A),R.play(),A.setVisible(!0),A.alpha=0,E.tweens.add({targets:A,alpha:1,duration:3e3,ease:"Sine.easeInOut"})}L(Q9,"doShowDreamBackground");function J9(E){const A=E.fieldUI.getByName("Dream Background");E.tweens.add({targets:A,alpha:0,duration:3e3,ease:"Sine.easeInOut",onComplete:L(()=>{E.fieldUI.remove(A,!0)},"onComplete")})}L(J9,"doHideDreamBackground");function $9(E,A){return new Promise(s=>{const R=[];for(let a=0;a<3;a++){const r=a*4e3;E.time.delayedCall(r,()=>{const S=A[a],o=S.previousPokemon,l=S.newPokemon,C=a,M=I0(E,o,l,C).then(()=>{if(A.length>a+3){const u=A[a+3],h=u.previousPokemon,P=u.newPokemon;R.push(I0(E,h,P,C))}});R.push(M)})}const n=setInterval(I,500);async function I(){R.length===A.length&&(clearInterval(n),await Promise.all(R),s())}L(I,"checkAllPromisesExist")})}L($9,"doSideBySideTransformations");async function z9(E,A,s,R=!1){var a;let n=null;const I=(a=A.getEggMoves())==null?void 0:a.slice(0);if(I){const r=aO([0,1,2,3]);let S=r.pop(),o=Ve(S)?null:I[S],l=0;for(;l<3&&(!o||A.moveset.some(C=>(C==null?void 0:C.moveId)===o));)S=r.pop(),o=Ve(S)?null:I[S],l++;o&&(A.moveset.some(C=>(C==null?void 0:C.moveId)===o)||(A.moveset.length<4?A.moveset.push(new Ot(o)):(n=_e(4),A.moveset[n]=new Ot(o))),!R&&!Ve(S)&&E.gameData.dexData[s].caughtAttr&&await E.gameData.setEggMoveUnlocked(xe(s),S,!0))}return n}L(z9,"addEggMoveToNewPokemonMoveset");function q9(E,A,s){let R=null;for(const n of A)if((n==null?void 0:n.getMove().type)===E.getTypes()[0]&&!E.moveset.some(I=>(I==null?void 0:I.moveId)===(n==null?void 0:n.moveId))){R=n;break}if(!R){for(const n of A)if(!E.moveset.some(I=>(I==null?void 0:I.moveId)===(n==null?void 0:n.moveId))){R=n;break}}if(R)if(E.moveset.length<4)E.moveset.push(R);else{let n=_e(4);for(;s!==null&&n===s;)n=_e(4);E.moveset[n]=R}}L(q9,"addFavoredMoveToNewPokemonMoveset");const uK=class uK extends GE{constructor(A){super(A)}start(){super.start(),this.scene.trainer.setVisible(!0),this.scene.trainer.setTexture(`trainer_${this.scene.gameData.gender===vt.FEMALE?"f":"m"}_back`),this.scene.tweens.add({targets:this.scene.trainer,x:106,duration:1e3,onComplete:L(()=>this.end(),"onComplete")})}};L(uK,"ShowTrainerPhase");let uC=uK;const Rs="mysteryEncounters/theWinstrateChallenge",j9=FA.withEncounterType(qe.THE_WINSTRATE_CHALLENGE).withEncounterTier(Vt.ROGUE).withSceneWaveRangeRequirement(100,xA[1]).withIntroSpriteConfigs([{spriteKey:"vito",fileRoot:"trainer",hasShadow:!1,x:16,y:-4},{spriteKey:"vivi",fileRoot:"trainer",hasShadow:!1,x:-14,y:-4},{spriteKey:"victor",fileRoot:"trainer",hasShadow:!0,x:-32},{spriteKey:"victoria",fileRoot:"trainer",hasShadow:!0,x:40},{spriteKey:"vicky",fileRoot:"trainer",hasShadow:!0,x:3,y:5,yShadow:5}]).withIntroDialogue([{text:`${Rs}:intro`},{speaker:`${Rs}:speaker`,text:`${Rs}:intro_dialogue`}]).withAutoHideIntroVisuals(!1).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;return A.enemyPartyConfigs.push(RX(E)),A.enemyPartyConfigs.push(sX(E)),A.enemyPartyConfigs.push(EX(E)),A.enemyPartyConfigs.push(AX(E)),A.enemyPartyConfigs.push(tX(E)),!0}).setLocalizationKey(`${Rs}`).withTitle(`${Rs}:title`).withDescription(`${Rs}:description`).withQuery(`${Rs}:query`).withSimpleOption({buttonLabel:`${Rs}:option.1.label`,buttonTooltip:`${Rs}:option.1.tooltip`,selected:[{speaker:`${Rs}:speaker`,text:`${Rs}:option.1.selected`}]},async E=>{E.currentBattle.mysteryEncounter.doContinueEncounter=async A=>{await eX(A)},await XA(E,!0,!1),await a0(E)}).withSimpleOption({buttonLabel:`${Rs}:option.2.label`,buttonTooltip:`${Rs}:option.2.tooltip`,selected:[{speaker:`${Rs}:speaker`,text:`${Rs}:option.2.selected`}]},async E=>{E.unshiftPhase(new Gr(E,!0)),mt(E,{guaranteedModifierTypeFuncs:[$.RARER_CANDY],fillRemaining:!1}),dt(E)}).build();async function a0(E){const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs.pop();if(s)await $A(E,s);else{await XA(E,!1,!1),await an(E,`${Rs}:victory`,`${Rs}:speaker`);const R=$.VOUCHER_PREMIUM().newModifier();await E.addModifier(R),E.playSound("item_fanfare"),await $t(E,D.t("battle:rewardGain",{modifierName:R==null?void 0:R.type.name})),await an(E,`${Rs}:victory_2`,`${Rs}:speaker`),E.ui.clearText();const n=tE(E,$.MYSTERY_ENCOUNTER_MACHO_BRACE);n.type.tier=v.MASTER,mt(E,{guaranteedModifierTypeOptions:[n],fillRemaining:!1}),A.doContinueEncounter=void 0,dt(E,!1,oE.NO_BATTLE)}}L(a0,"spawnNextTrainerOrEndEncounter");function eX(E){return new Promise(async A=>{if(E.currentBattle.mysteryEncounter.enemyPartyConfigs.length===0){const s=E.currentBattle.trainer;s&&E.tweens.add({targets:s,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:L(()=>{E.field.remove(s,!0)},"onComplete")}),await a0(E),A()}else{E.arena.resetArenaEffects();const s=E.getPlayerField();s.forEach(n=>n.lapseTag(Y.COMMANDED)),s.forEach((n,I)=>E.unshiftPhase(new Mr(E,I)));for(const n of E.getPlayerParty())n.species.speciesId===e.EISCUE&&n.hasAbility(O.ICE_FACE)&&n.formIndex===1&&E.triggerPokemonFormChange(n,bt),n.resetBattleData(),q6(mr,n);E.unshiftPhase(new uC(E));const R=E.currentBattle.trainer;E.currentBattle.trainer=null,await a0(E),R&&E.tweens.add({targets:R,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:L(()=>{E.field.remove(R,!0),A()},"onComplete")})}})}L(eX,"endTrainerBattleAndShowDialogue");function tX(E){return{trainerType:U.VICTOR,pokemonConfigs:[{species:xe(e.SWELLOW),isBoss:!1,abilityIndex:0,nature:At.ADAMANT,moveSet:[t.FACADE,t.BRAVE_BIRD,t.PROTECT,t.QUICK_ATTACK],modifierConfigs:[{modifier:gt(E,$.FLAME_ORB),isTransferable:!1},{modifier:gt(E,$.FOCUS_BAND),stackCount:2,isTransferable:!1}]},{species:xe(e.OBSTAGOON),isBoss:!1,abilityIndex:1,nature:At.ADAMANT,moveSet:[t.FACADE,t.OBSTRUCT,t.NIGHT_SLASH,t.FIRE_PUNCH],modifierConfigs:[{modifier:gt(E,$.FLAME_ORB),isTransferable:!1},{modifier:gt(E,$.LEFTOVERS),stackCount:2,isTransferable:!1}]}]}}L(tX,"getVictorTrainerConfig");function AX(E){return{trainerType:U.VICTORIA,pokemonConfigs:[{species:xe(e.ROSERADE),isBoss:!1,abilityIndex:0,nature:At.CALM,moveSet:[t.SYNTHESIS,t.SLUDGE_BOMB,t.GIGA_DRAIN,t.SLEEP_POWDER],modifierConfigs:[{modifier:gt(E,$.SOUL_DEW),isTransferable:!1},{modifier:gt(E,$.QUICK_CLAW),stackCount:2,isTransferable:!1}]},{species:xe(e.GARDEVOIR),isBoss:!1,formIndex:1,nature:At.TIMID,moveSet:[t.PSYSHOCK,t.MOONBLAST,t.SHADOW_BALL,t.WILL_O_WISP],modifierConfigs:[{modifier:gt(E,$.ATTACK_TYPE_BOOSTER,[i.PSYCHIC]),stackCount:1,isTransferable:!1},{modifier:gt(E,$.ATTACK_TYPE_BOOSTER,[i.FAIRY]),stackCount:1,isTransferable:!1}]}]}}L(AX,"getVictoriaTrainerConfig");function EX(E){return{trainerType:U.VIVI,pokemonConfigs:[{species:xe(e.SEAKING),isBoss:!1,abilityIndex:3,nature:At.ADAMANT,moveSet:[t.WATERFALL,t.MEGAHORN,t.KNOCK_OFF,t.REST],modifierConfigs:[{modifier:gt(E,$.BERRY,[Dt.LUM]),stackCount:2,isTransferable:!1},{modifier:gt(E,$.BASE_STAT_BOOSTER,[g.HP]),stackCount:4,isTransferable:!1}]},{species:xe(e.BRELOOM),isBoss:!1,abilityIndex:1,nature:At.JOLLY,moveSet:[t.SPORE,t.SWORDS_DANCE,t.SEED_BOMB,t.DRAIN_PUNCH],modifierConfigs:[{modifier:gt(E,$.BASE_STAT_BOOSTER,[g.HP]),stackCount:4,isTransferable:!1},{modifier:gt(E,$.TOXIC_ORB),isTransferable:!1}]},{species:xe(e.CAMERUPT),isBoss:!1,formIndex:1,nature:At.CALM,moveSet:[t.EARTH_POWER,t.FIRE_BLAST,t.YAWN,t.PROTECT],modifierConfigs:[{modifier:gt(E,$.QUICK_CLAW),stackCount:3,isTransferable:!1}]}]}}L(EX,"getViviTrainerConfig");function sX(E){return{trainerType:U.VICKY,pokemonConfigs:[{species:xe(e.MEDICHAM),isBoss:!1,formIndex:1,nature:At.IMPISH,moveSet:[t.AXE_KICK,t.ICE_PUNCH,t.ZEN_HEADBUTT,t.BULLET_PUNCH],modifierConfigs:[{modifier:gt(E,$.SHELL_BELL),isTransferable:!1}]}]}}L(sX,"getVickyTrainerConfig");function RX(E){return{trainerType:U.VITO,pokemonConfigs:[{species:xe(e.HISUI_ELECTRODE),isBoss:!1,abilityIndex:0,nature:At.MODEST,moveSet:[t.THUNDERBOLT,t.GIGA_DRAIN,t.FOUL_PLAY,t.THUNDER_WAVE],modifierConfigs:[{modifier:gt(E,$.BASE_STAT_BOOSTER,[g.SPD]),stackCount:2,isTransferable:!1}]},{species:xe(e.SWALOT),isBoss:!1,abilityIndex:2,nature:At.QUIET,moveSet:[t.SLUDGE_BOMB,t.GIGA_DRAIN,t.ICE_BEAM,t.EARTHQUAKE],modifierConfigs:[{modifier:gt(E,$.BERRY,[Dt.SITRUS]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.APICOT]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.GANLON]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.STARF]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.SALAC]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.LUM]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.LANSAT]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.LIECHI]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.PETAYA]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.ENIGMA]),stackCount:2},{modifier:gt(E,$.BERRY,[Dt.LEPPA]),stackCount:2}]},{species:xe(e.DODRIO),isBoss:!1,abilityIndex:2,nature:At.JOLLY,moveSet:[t.DRILL_PECK,t.QUICK_ATTACK,t.THRASH,t.KNOCK_OFF],modifierConfigs:[{modifier:gt(E,$.KINGS_ROCK),stackCount:2,isTransferable:!1}]},{species:xe(e.ALAKAZAM),isBoss:!1,formIndex:1,nature:At.BOLD,moveSet:[t.PSYCHIC,t.SHADOW_BALL,t.FOCUS_BLAST,t.THUNDERBOLT],modifierConfigs:[{modifier:gt(E,$.WIDE_LENS),stackCount:2,isTransferable:!1}]},{species:xe(e.DARMANITAN),isBoss:!1,abilityIndex:0,nature:At.IMPISH,moveSet:[t.EARTHQUAKE,t.U_TURN,t.FLARE_BLITZ,t.ROCK_SLIDE],modifierConfigs:[{modifier:gt(E,$.QUICK_CLAW),stackCount:2,isTransferable:!1}]}]}}L(RX,"getVitoTrainerConfig");const Ts="mysteryEncounters/teleportingHijinks",ah=1.75,OX=[N.SPACE,N.FAIRY_CAVE,N.LABORATORY,N.ISLAND,N.WASTELAND,N.DOJO],nX=[i.ELECTRIC,i.STEEL],iX=FA.withEncounterType(qe.TELEPORTING_HIJINKS).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withSceneRequirement(new E0([1,2,3],10)).withSceneRequirement(new XO(0,ah)).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"teleporting_hijinks_teleporter",fileRoot:"mystery-encounters",hasShadow:!0,x:4,y:4,yShadow:1}]).withIntroDialogue([{text:`${Ts}:intro`}]).setLocalizationKey(`${Ts}`).withTitle(`${Ts}:title`).withDescription(`${Ts}:description`).withQuery(`${Ts}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=E.getWaveMoneyAmount(ah);return A.setDialogueToken("price",s.toString()),A.misc={price:s},!0}).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,ah).withDialogue({buttonLabel:`${Ts}:option.1.label`,buttonTooltip:`${Ts}:option.1.tooltip`,selected:[{text:`${Ts}:option.1.selected`}]}).withPreOptionPhase(async E=>{jR(E,-E.currentBattle.mysteryEncounter.misc.price,!0,!1)}).withOptionPhase(async E=>{const A=await Ob(E);mt(E,{fillRemaining:!0}),await $A(E,A)}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPokemonTypeRequirement(nX,!0,1).withDialogue({buttonLabel:`${Ts}:option.2.label`,buttonTooltip:`${Ts}:option.2.tooltip`,disabledButtonTooltip:`${Ts}:option.2.disabled_tooltip`,selected:[{text:`${Ts}:option.2.selected`}]}).withOptionPhase(async E=>{const A=await Ob(E);mt(E,{fillRemaining:!0}),rR(E,E.currentBattle.mysteryEncounter.selectedOption.primaryPokemon.id,100),await $A(E,A)}).build()).withSimpleOption({buttonLabel:`${Ts}:option.3.label`,buttonTooltip:`${Ts}:option.3.tooltip`,selected:[{text:`${Ts}:option.3.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=Ko(E,go),R=E.arena.randomSpecies(E.currentBattle.waveIndex,s,0,pi(E.getPlayerParty()),!0),n=new rs(E,R,s,Tt.NONE,!0);A.setDialogueToken("enemyPokemon",ee(n));const I={pokemonConfigs:[{level:s,species:R,dataSource:new cs(n),isBoss:!0}]},a=tE(E,$.ATTACK_TYPE_BOOSTER,[i.STEEL]),r=tE(E,$.ATTACK_TYPE_BOOSTER,[i.ELECTRIC]);mt(E,{guaranteedModifierTypeOptions:[a,r],fillRemaining:!0}),await XA(E,!0,!0),await $A(E,I)}).build();async function Ob(E){const A=E.currentBattle.mysteryEncounter,s=OX.filter(o=>E.arena.biomeType!==o),R=s[_e(s.length)];await $t(E,`${Ts}:transport`),await Promise.all([IX(E,R),XA(E)]),E.playBgm(),await $t(E,`${Ts}:attacked`);const n=Ko(E,go),I=E.arena.randomSpecies(E.currentBattle.waveIndex,n,0,pi(E.getPlayerParty()),!0),a=new rs(E,I,n,Tt.NONE,!0);A.setDialogueToken("enemyPokemon",ee(a));const r=E.currentBattle.waveIndex<50?[g.DEF,g.SPDEF,g.SPD]:[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD];return{pokemonConfigs:[{level:n,species:I,dataSource:new cs(a),isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:L(o=>{sE(o.scene,`${Ts}:boss_enraged`),o.scene.unshiftPhase(new Jt(o.scene,o.getBattlerIndex(),!0,r,1))},"mysteryEncounterBattleEffects")}]}}L(Ob,"doBiomeTransitionDialogueAndBattleInit");async function IX(E,A){return new Promise(s=>{E.tweens.add({targets:[E.arenaEnemy,E.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:L(()=>{E.newArena(A);const n=`${Fo(A)}_bg`;E.arenaBgTransition.setTexture(n),E.arenaBgTransition.setAlpha(0),E.arenaBgTransition.setVisible(!0),E.arenaPlayerTransition.setBiome(A),E.arenaPlayerTransition.setAlpha(0),E.arenaPlayerTransition.setVisible(!0),E.tweens.add({targets:[E.arenaPlayer,E.arenaBgTransition,E.arenaPlayerTransition],duration:1e3,ease:"Sine.easeInOut",alpha:L(I=>I===E.arenaPlayer?0:1,"alpha"),onComplete:L(()=>{E.arenaBg.setTexture(n),E.arenaPlayer.setBiome(A),E.arenaPlayer.setAlpha(1),E.arenaEnemy.setBiome(A),E.arenaEnemy.setAlpha(1),E.arenaNextEnemy.setBiome(A),E.arenaBgTransition.setVisible(!1),E.arenaPlayerTransition.setVisible(!1),E.lastEnemyTrainer&&E.lastEnemyTrainer.destroy(),s(),E.tweens.add({targets:E.arenaEnemy,x:"-=300"})},"onComplete")})},"onComplete")})})}L(IX,"animateBiomeChange");const UA="mysteryEncounters/bugTypeSuperfan",rh=[e.PARASECT,e.VENOMOTH,e.LEDIAN,e.ARIADOS,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.ANORITH,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.SKORUPI,e.JOLTIK,e.LARVESTA,e.VIVILLON,e.CHARJABUG,e.RIBOMBEE,e.SPIDOPS,e.LOKIX],OI=[e.SCYTHER,e.PINSIR,e.HERACROSS,e.FORRETRESS,e.SCIZOR,e.SHUCKLE,e.SHEDINJA,e.ARMALDO,e.VESPIQUEN,e.DRAPION,e.YANMEGA,e.LEAVANNY,e.SCOLIPEDE,e.CRUSTLE,e.ESCAVALIER,e.ACCELGOR,e.GALVANTULA,e.VIKAVOLT,e.ARAQUANID,e.ORBEETLE,e.CENTISKORCH,e.FROSMOTH,e.KLEAVOR],aX=[{species:e.PINSIR,formIndex:1},{species:e.SCIZOR,formIndex:1},{species:e.HERACROSS,formIndex:1},{species:e.ORBEETLE,formIndex:1},{species:e.CENTISKORCH,formIndex:1},{species:e.DURANT},{species:e.VOLCARONA},{species:e.GOLISOPOD}],nb=[e.GENESECT,e.SLITHER_WING,e.BUZZWOLE,e.PHEROMOSA],ib=[t.MEGAHORN,t.X_SCISSOR,t.ATTACK_ORDER,t.PIN_MISSILE,t.FIRST_IMPRESSION],Ib=[t.SILVER_WIND,t.BUG_BUZZ,t.SIGNAL_BEAM,t.POLLEN_PUFF],ab=[t.STRING_SHOT,t.STICKY_WEB,t.SILK_TRAP,t.RAGE_POWDER,t.HEAL_ORDER],rb=[t.BUG_BITE,t.LEECH_LIFE,t.DEFEND_ORDER,t.QUIVER_DANCE,t.TAIL_GLOW,t.INFESTATION,t.U_TURN],Ii=[30,50,70,100,120,140,160],rX=FA.withEncounterType(qe.BUG_TYPE_SUPERFAN).withEncounterTier(Vt.GREAT).withPrimaryPokemonRequirement(qI.Some(new di(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new oC(i.BUG,1),new Pr(i.BUG,!1,1))).withMaxAllowedEncounters(1).withSceneWaveRangeRequirement(...xA).withIntroSpriteConfigs([]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${UA}:intro`},{speaker:`${UA}:speaker`,text:`${UA}:intro_dialogue`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=LX(E.currentBattle.waveIndex),R=s.getSpriteKey();A.enemyPartyConfigs.push({trainerConfig:s,female:!0});let n,I;E.currentBattle.waveIndex<Ii[3]?(n=rn(e.BEEDRILL,!1),I=rn(e.BUTTERFREE,!1)):(n=rn(e.BEEDRILL,!1,1),I=rn(e.BUTTERFREE,!1,1)),A.spriteConfigs=[{spriteKey:n.spriteKey,fileRoot:n.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:-30,tint:.15,y:-4,yShadow:-4},{spriteKey:I.spriteKey,fileRoot:I.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:30,tint:.15,y:-4,yShadow:-4},{spriteKey:R,fileRoot:"trainer",hasShadow:!0,x:4,y:7,yShadow:7}];const r=[gt(E,$.QUICK_CLAW),gt(E,$.GRIP_CLAW),gt(E,$.ATTACK_TYPE_BOOSTER,[i.BUG])].map(S=>(S==null?void 0:S.name)??"unknown").join("/");return A.setDialogueToken("requiredBugItems",r),!0}).setLocalizationKey(`${UA}`).withTitle(`${UA}:title`).withDescription(`${UA}:description`).withQuery(`${UA}:query`).withSimpleOption({buttonLabel:`${UA}:option.1.label`,buttonTooltip:`${UA}:option.1.tooltip`,selected:[{speaker:`${UA}:speaker`,text:`${UA}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0],R=[];R.push(new Ot(ib[_e(ib.length)])),R.push(new Ot(Ib[_e(Ib.length)])),R.push(new Ot(ab[_e(ab.length)])),R.push(new Ot(rb[_e(rb.length)])),A.misc={moveTutorOptions:R},A.onRewards=NX,mt(E,{fillRemaining:!0}),await XA(E,!0,!0),await $A(E,s)}).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new Pr(i.BUG,!1,1)).withDialogue({buttonLabel:`${UA}:option.2.label`,buttonTooltip:`${UA}:option.2.tooltip`,disabledButtonTooltip:`${UA}:option.2.disabled_tooltip`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=E.getPlayerParty().filter(n=>n.isOfType(i.BUG,!0)).length,R=D.t(`${UA}:numBugTypes`,{count:s});if(A.setDialogueToken("numBugTypes",R),s<2)mt(E,{guaranteedModifierTypeFuncs:[$.SUPER_LURE,$.GREAT_BALL],fillRemaining:!1}),A.selectedOption.dialogue.selected=[{speaker:`${UA}:speaker`,text:`${UA}:option.2.selected_0_to_1`}];else if(s<4)mt(E,{guaranteedModifierTypeFuncs:[$.QUICK_CLAW,$.MAX_LURE,$.ULTRA_BALL],fillRemaining:!1}),A.selectedOption.dialogue.selected=[{speaker:`${UA}:speaker`,text:`${UA}:option.2.selected_2_to_3`}];else if(s<6)mt(E,{guaranteedModifierTypeFuncs:[$.GRIP_CLAW,$.MAX_LURE,$.ROGUE_BALL],fillRemaining:!1}),A.selectedOption.dialogue.selected=[{speaker:`${UA}:speaker`,text:`${UA}:option.2.selected_4_to_5`}];else{const n=[tE(E,$.MASTER_BALL)],I=[];E.findModifier(l=>l instanceof $r)||n.push(tE(E,$.MEGA_BRACELET)),E.findModifier(l=>l instanceof zr)||n.push(tE(E,$.DYNAMAX_BAND));const a=tE(E,$.EVOLUTION_ITEM);a&&I.push(a);const r=tE(E,$.RARE_EVOLUTION_ITEM);r&&I.push(r);const S=tE(E,$.FORM_CHANGE_ITEM);S&&I.push(S);const o=tE(E,$.RARE_FORM_CHANGE_ITEM);o&&I.push(o),I.length>0&&n.push(I[_e(I.length)]),mt(E,{guaranteedModifierTypeOptions:n,fillRemaining:!1}),A.selectedOption.dialogue.selected=[{speaker:`${UA}:speaker`,text:`${UA}:option.2.selected_6`}]}}).withOptionPhase(async E=>{dt(E)}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(qI.Some(new di(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new oC(i.BUG,1))).withDialogue({buttonLabel:`${UA}:option.3.label`,buttonTooltip:`${UA}:option.3.tooltip`,disabledButtonTooltip:`${UA}:option.3.disabled_tooltip`,selected:[{text:`${UA}:option.3.selected`},{speaker:`${UA}:speaker`,text:`${UA}:option.3.selected_dialogue`}],secondOptionPrompt:`${UA}:option.3.select_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>n.getHeldItems().filter(a=>(a instanceof Na||a instanceof Ua||a instanceof Sn&&a.type.moveType===i.BUG)&&a.isTransferable).map(a=>({label:a.type.name,handler:L(()=>(A.setDialogueToken("selectedItem",a.type.name),A.misc={chosenPokemon:n,chosenModifier:a},!0),"handler")})),"onPokemonSelected"),void 0,L(n=>n.getHeldItems().some(a=>a instanceof Na||a instanceof Ua||a instanceof Sn&&a.type.moveType===i.BUG)?null:mA(E,`${UA}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenModifier;A.misc.chosenPokemon.loseHeldItem(s,!1),E.updateModifiers(!0,!0);const n=tE(E,$.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET);n.type.tier=v.ROGUE,mt(E,{guaranteedModifierTypeOptions:[n],guaranteedModifierTypeFuncs:[$.REVIVER_SEED],fillRemaining:!1}),dt(E,!0)}).build()).withOutroDialogue([{text:`${UA}:outro`}]).build();function LX(E){const A=ZA[U.BUG_TYPE_SUPERFAN].clone();A.name=D.t("trainerNames:bug_type_superfan");let s=aX.slice(0);s=aO(s);const R=s.pop();if(E<Ii[0])A.setPartyMemberFunc(0,Ce([e.BEEDRILL],Tt.TRAINER,!0)).setPartyMemberFunc(1,Ce([e.BUTTERFREE],Tt.TRAINER,!0));else if(E<Ii[1])A.setPartyTemplates(new Je(3,we.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],Tt.TRAINER,!0)).setPartyMemberFunc(1,Ce([e.BUTTERFREE],Tt.TRAINER,!0)).setPartyMemberFunc(2,Ce(rh,Tt.TRAINER,!0));else if(E<Ii[2])A.setPartyTemplates(new Je(4,we.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],Tt.TRAINER,!0)).setPartyMemberFunc(1,Ce([e.BUTTERFREE],Tt.TRAINER,!0)).setPartyMemberFunc(2,Ce(rh,Tt.TRAINER,!0)).setPartyMemberFunc(3,Ce(OI,Tt.TRAINER,!0));else if(E<Ii[3])A.setPartyTemplates(new Je(5,we.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],Tt.TRAINER,!0)).setPartyMemberFunc(1,Ce([e.BUTTERFREE],Tt.TRAINER,!0)).setPartyMemberFunc(2,Ce(rh,Tt.TRAINER,!0)).setPartyMemberFunc(3,Ce(OI,Tt.TRAINER,!0)).setPartyMemberFunc(4,Ce(OI,Tt.TRAINER,!0));else if(E<Ii[4])A.setPartyTemplates(new Je(5,we.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],Tt.TRAINER,!0,n=>{n.formIndex=1,n.generateAndPopulateMoveset(),n.generateName()})).setPartyMemberFunc(1,Ce([e.BUTTERFREE],Tt.TRAINER,!0,n=>{n.formIndex=1,n.generateAndPopulateMoveset(),n.generateName()})).setPartyMemberFunc(2,Ce(OI,Tt.TRAINER,!0)).setPartyMemberFunc(3,Ce(OI,Tt.TRAINER,!0)).setPartyMemberFunc(4,Ce([R.species],Tt.TRAINER,!0,n=>{Ve(R.formIndex)||(n.formIndex=R.formIndex,n.generateAndPopulateMoveset(),n.generateName())}));else if(E<Ii[5]){s=aO(s);const n=s.pop();A.setPartyTemplates(new Je(5,we.AVERAGE)).setPartyMemberFunc(0,Ce([e.BEEDRILL],Tt.TRAINER,!0,I=>{I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(1,Ce([e.BUTTERFREE],Tt.TRAINER,!0,I=>{I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(2,Ce(OI,Tt.TRAINER,!0)).setPartyMemberFunc(3,Ce([R.species],Tt.TRAINER,!0,I=>{Ve(R.formIndex)||(I.formIndex=R.formIndex,I.generateAndPopulateMoveset(),I.generateName())})).setPartyMemberFunc(4,Ce([n.species],Tt.TRAINER,!0,I=>{Ve(n.formIndex)||(I.formIndex=n.formIndex,I.generateAndPopulateMoveset(),I.generateName())}))}else if(E<Ii[6])A.setPartyTemplates(new vA(new Je(4,we.AVERAGE),new Je(1,we.STRONG))).setPartyMemberFunc(0,Ce([e.BEEDRILL],Tt.TRAINER,!0,n=>{n.formIndex=1,n.generateAndPopulateMoveset(),n.generateName()})).setPartyMemberFunc(1,Ce([e.BUTTERFREE],Tt.TRAINER,!0,n=>{n.formIndex=1,n.generateAndPopulateMoveset(),n.generateName()})).setPartyMemberFunc(2,Ce(OI,Tt.TRAINER,!0)).setPartyMemberFunc(3,Ce([R.species],Tt.TRAINER,!0,n=>{Ve(R.formIndex)||(n.formIndex=R.formIndex,n.generateAndPopulateMoveset(),n.generateName())})).setPartyMemberFunc(4,Ce(nb,Tt.TRAINER,!0));else{s=aO(s);const n=s.pop();A.setPartyTemplates(new vA(new Je(4,we.AVERAGE),new Je(1,we.STRONG))).setPartyMemberFunc(0,Ce([e.BEEDRILL],Tt.TRAINER,!0,I=>{I.setBoss(!0,2),I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(1,Ce([e.BUTTERFREE],Tt.TRAINER,!0,I=>{I.setBoss(!0,2),I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(2,Ce([R.species],Tt.TRAINER,!0,I=>{Ve(R.formIndex)||(I.formIndex=R.formIndex,I.generateAndPopulateMoveset(),I.generateName())})).setPartyMemberFunc(3,Ce([n.species],Tt.TRAINER,!0,I=>{Ve(n.formIndex)||(I.formIndex=n.formIndex,I.generateAndPopulateMoveset(),I.generateName())})).setPartyMemberFunc(4,Ce(nb,Tt.TRAINER,!0))}return A}L(LX,"getTrainerConfigForWave");function NX(E){return new Promise(async A=>{const s=E.currentBattle.mysteryEncounter.misc.moveTutorOptions;await an(E,`${UA}:battle_won`,`${UA}:speaker`);const R=1,n=new SO(E,{delayVisibility:!1,scale:R,onSide:!0,right:!0,x:1,y:-SO.getHeight(R,!0)-1,width:E.game.canvas.width/6-2});E.ui.add(n);const I=s.map(S=>({label:S.getName(),handler:L(()=>(n.active=!1,n.setVisible(!1),!0),"handler"),onHover:L(()=>{n.active=!0,n.show(ye[S.moveId])},"onHover")})),a=L(()=>{n.active=!1,n.setVisible(!1)},"onHoverOverCancel"),r=await MZ(E,I,`${UA}:teach_move_prompt`,void 0,a);r||(n.active=!1,n.setVisible(!1)),r&&r.selectedOptionIndex<s.length&&E.unshiftPhase(new kn(E,r.selectedPokemonIndex,s[r.selectedOptionIndex].moveId)),A()})}L(NX,"doBugTypeMoveTutor");const WE="mysteryEncounters/funAndGames",TX=FA.withEncounterType(qe.FUN_AND_GAMES).withEncounterTier(Vt.GREAT).withSceneWaveRangeRequirement(...xA).withSceneRequirement(new XO(0,1.5)).withAutoHideIntroVisuals(!1).withBattleAnimationsWithoutTargets(!0).withSkipEnemyBattleTurns(!0).withSkipToFightInput(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"fun_and_games_game",fileRoot:"mystery-encounters",hasShadow:!1,x:0,y:6},{spriteKey:"fun_and_games_wobbuffet",fileRoot:"mystery-encounters",hasShadow:!0,x:-28,y:6,yShadow:6},{spriteKey:"fun_and_games_man",fileRoot:"mystery-encounters",hasShadow:!0,x:40,y:6,yShadow:6}]).withIntroDialogue([{speaker:`${WE}:speaker`,text:`${WE}:intro_dialogue`}]).setLocalizationKey(`${WE}`).withTitle(`${WE}:title`).withDescription(`${WE}:description`).withQuery(`${WE}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;return E.loadBgm("mystery_encounter_fun_and_games","mystery_encounter_fun_and_games.mp3"),A.setDialogueToken("wobbuffetName",xe(e.WOBBUFFET).getName()),!0}).withOnVisualsStart(E=>(E.fadeAndSwitchBgm("mystery_encounter_fun_and_games"),!0)).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_DEFAULT).withSceneRequirement(new XO(0,1.5)).withDialogue({buttonLabel:`${WE}:option.1.label`,buttonTooltip:`${WE}:option.1.tooltip`,selected:[{text:`${WE}:option.1.selected`}]}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>{A.misc={playerPokemon:n}},"onPokemonSelected"),void 0,L(n=>YI(n,E,`${WE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;A.misc.turnsRemaining=3;const s=A.options[0].requirements[0].requiredMoney;return jR(E,-s,!0,!1),await $t(E,D.t("mysteryEncounterMessages:paid_money",{amount:s})),A.onTurnStart=oX,A.doContinueEncounter=W6,UX(E),await SX(E),await lX(E),!0}).build()).withSimpleOption({buttonLabel:`${WE}:option.2.label`,buttonTooltip:`${WE}:option.2.tooltip`,selected:[{text:`${WE}:option.2.selected`}]},async E=>(await XA(E,!0,!0),dt(E,!0),!0)).build();async function SX(E){return new Promise(async A=>{const s=E.currentBattle.mysteryEncounter,R=s.misc.playerPokemon,n=E.getPlayerParty(),I=n.indexOf(R);if(I!==0){const C=n[0];n[0]=R,n[I]=C}let a;E.ui.showText(D.t("battle:playerGo",{pokemonName:ee(R)})),E.pbTray.hide(),E.trainer.setTexture(`trainer_${E.gameData.gender===vt.FEMALE?"f":"m"}_back_pb`),E.time.delayedCall(562,()=>{E.trainer.setFrame("2"),E.time.delayedCall(64,()=>{E.trainer.setFrame("3")})}),E.tweens.add({targets:E.trainer,x:-36,duration:1e3,onComplete:L(()=>E.trainer.setVisible(!1),"onComplete")}),E.time.delayedCall(750,()=>{a=CX(E,R)});const r=xe(e.WOBBUFFET);E.currentBattle.enemyParty=[];const S=E.addEnemyPokemon(r,s.misc.playerPokemon.level,Tt.NONE,!1,!0);S.ivs=[0,0,0,0,0,0],S.setNature(At.MILD),S.setAlpha(0),S.setVisible(!1),S.calculateStats(),E.currentBattle.enemyParty[0]=S,E.gameData.setPokemonSeen(S,!0),await S.loadAssets();const o=setInterval(l,500);async function l(){a&&(clearInterval(o),await a,A())}L(l,"checkPlayerAnimationPromise")})}L(SX,"summonPlayerPokemon");function W6(E){return new Promise(async A=>{const s=E.getEnemyPokemon();if(!s||s.isFainted(!0)||s.hp===0){s&&(s.hideInfo(),E.field.remove(s)),XA(E,!0,!0),E.currentBattle.enemyParty=[],E.currentBattle.mysteryEncounter.doContinueEncounter=void 0,dt(E,!0),await $t(E,`${WE}:ko`);const R=E.getWaveMoneyAmount(1.5);jR(E,-R,!0,!1)}A()})}L(W6,"handleLoseMinigame");function oX(E){const A=E.currentBattle.mysteryEncounter,s=E.getEnemyPokemon();if(!s)return W6(E),!0;if(A.misc.turnsRemaining<=0){const R=s.hp/s.getMaxHp();let n,I=!1;return R<.03?(mt(E,{guaranteedModifierTypeFuncs:[$.MULTI_LENS],fillRemaining:!1}),n=`${WE}:best_result`):R<.15?(mt(E,{guaranteedModifierTypeFuncs:[$.SCOPE_LENS],fillRemaining:!1}),n=`${WE}:great_result`):R<.33?(mt(E,{guaranteedModifierTypeFuncs:[$.WIDE_LENS],fillRemaining:!1}),n=`${WE}:good_result`):(I=!0,n=`${WE}:bad_result`),s.hideInfo(),E.field.remove(s),E.currentBattle.enemyParty=[],E.currentBattle.mysteryEncounter.doContinueEncounter=void 0,dt(E,I),sE(E,`${WE}:end_game`),sE(E,n),!0}else A.misc.turnsRemaining<3&&sE(E,`${WE}:charging_continue`),sE(E,`${WE}:turn_remaining_${A.misc.turnsRemaining}`),A.misc.turnsRemaining--;return!1}L(oX,"handleNextTurn");async function lX(E){const A=E.getEnemyPokemon();E.add.existing(A),E.field.add(A);const s=E.getPlayerPokemon();s!=null&&s.isOnField()&&E.field.moveBelow(A,s),A.showInfo(),E.time.delayedCall(1e3,()=>{A.cry()}),A.resetSummonData(),E.currentBattle.mysteryEncounter.misc.wobbuffetHealth=A.hp}L(lX,"showWobbuffetHealthBar");function CX(E,A){return new Promise(s=>{const R=E.addFieldSprite(36,80,"pb",TO(A.pokeball));R.setVisible(!1),R.setOrigin(.5,.625),E.field.add(R),A.setFieldPosition(nR.CENTER,0);const n=A.getFieldPositionOffset();R.setVisible(!0),E.tweens.add({targets:R,duration:650,x:100+n[0]}),E.tweens.add({targets:R,duration:150,ease:"Cubic.easeOut",y:70+n[1],onComplete:L(()=>{E.tweens.add({targets:R,duration:500,ease:"Cubic.easeIn",angle:1440,y:132+n[1],onComplete:L(()=>{E.playSound("se/pb_rel"),R.destroy(),E.add.existing(A),E.field.add(A),iM(E,A.x,A.y-16,A.pokeball),E.updateModifiers(!0),E.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.5),A.tint(bO(A.pokeball)),A.untint(250,"Sine.easeIn"),E.updateFieldScale(),E.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:L(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),E.time.delayedCall(1e3,()=>{A.isShiny()&&E.unshiftPhase(new VT(E,A.getBattlerIndex())),A.resetTurnData(),E.triggerPokemonFormChange(A,ls,!0),E.pushPhase(new QI(E,A.getBattlerIndex())),s()})},"onComplete")})},"onComplete")})},"onComplete")})})}L(CX,"summonPlayerPokemonAnimation");function UX(E){var n,I,a;const A=(n=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:n.getSpriteAtIndex(0)[0],s=(I=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:I.getSpriteAtIndex(1)[0],R=(a=E.currentBattle.mysteryEncounter.introVisuals)==null?void 0:a.getSpriteAtIndex(2)[0];E.tweens.add({targets:R,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750}),E.tweens.add({targets:[s,A],x:"+=16",ease:"Sine.easeInOut",duration:750})}L(UX,"hideShowmanIntroSprite");const ds="mysteryEncounters/uncommonBreed",uX=FA.withEncounterType(qe.UNCOMMON_BREED).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${ds}:intro`}]).withOnInit(E=>{var l;const A=E.currentBattle.mysteryEncounter,s=N1(E,!1,!0).level-2;let R;if(E.eventManager.isEventActive()&&((l=E.eventManager.activeEvent())!=null&&l.uncommonBreedEncounters)&&_e(2)===1){const C=JA(E.eventManager.activeEvent().uncommonBreedEncounters),M=xe(C.species).getWildSpeciesForLevel(s,C.allowEvolution??!1,!0,E.gameMode);R=xe(M)}else R=E.arena.randomSpecies(E.currentBattle.waveIndex,s,0,pi(E.getPlayerParty()),!0);const n=new rs(E,R,s,Tt.NONE,!0),I=n.getEggMoves();if(I){const C=_e(4),M=I[C];A.misc={eggMove:M,pokemon:n},n.moveset.length<4?n.moveset.push(new Ot(M)):n.moveset[0]=new Ot(M)}else A.misc.pokemon=n;const a=E.currentBattle.waveIndex<50?[g.DEF,g.SPDEF,g.SPD]:[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],r={pokemonConfigs:[{level:s,species:R,dataSource:new cs(n),isBoss:!1,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:L(C=>{sE(C.scene,`${ds}:option.1.stat_boost`),C.scene.unshiftPhase(new Jt(C.scene,C.getBattlerIndex(),!0,a,1))},"mysteryEncounterBattleEffects")}]};A.enemyPartyConfigs=[r];const{spriteKey:S,fileRoot:o}=LM(n);return A.spriteConfigs=[{spriteKey:S,fileRoot:o,hasShadow:!0,x:-5,repeat:!0,isPokemon:!0,isShiny:n.shiny,variant:n.variant}],A.setDialogueToken("enemyPokemon",n.getNameToRender()),E.loadSe("PRSFX- Spotlight2","battle_anims","PRSFX- Spotlight2.wav"),!0}).withOnVisualsStart(E=>{const A=E.currentBattle.mysteryEncounter,s=A.introVisuals.getSprites();return E.tweens.add({targets:s,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1,onComplete:L(()=>{var R;return(R=A.introVisuals)==null?void 0:R.playShinySparkles()},"onComplete")}),E.time.delayedCall(500,()=>E.playSound("battle_anims/PRSFX- Spotlight2")),!0}).setLocalizationKey(`${ds}`).withTitle(`${ds}:title`).withDescription(`${ds}:description`).withQuery(`${ds}:query`).withSimpleOption({buttonLabel:`${ds}:option.1.label`,buttonTooltip:`${ds}:option.1.tooltip`,selected:[{text:`${ds}:option.1.selected`}]},async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.eggMove;if(!Ve(s)){const R=new Ot(s),I=R.getMove()instanceof ze?Bt.ENEMY:Bt.PLAYER;A.startOfBattleEffects.push({sourceBattlerIndex:Bt.ENEMY,targets:[I],move:R,ignorePp:!0})}mt(E,{fillRemaining:!0}),await $A(E,A.enemyPartyConfigs[0])}).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withSceneRequirement(new TC("BerryModifier",4)).withDialogue({buttonLabel:`${ds}:option.2.label`,buttonTooltip:`${ds}:option.2.tooltip`,disabledButtonTooltip:`${ds}:option.2.disabled_tooltip`,selected:[{text:`${ds}:option.2.selected`}]}).withOptionPhase(async E=>{const A=E.findModifiers(n=>n instanceof lE);for(let n=0;n<4;n++){const I=_e(A.length),a=A[I];a.stackCount--,a.stackCount===0&&(E.removeModifier(a),A.splice(I,1))}await E.updateModifiers(!0,!0);const s=E.currentBattle.mysteryEncounter,R=s.misc.pokemon;Lb(R,s.misc.eggMove),await _r(E,R,null,be.POKEBALL,!1),mt(E,{fillRemaining:!0}),dt(E)}).build()).withOption(Ft.newOptionWithMode(ct.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wi(H6,!0)).withDialogue({buttonLabel:`${ds}:option.3.label`,buttonTooltip:`${ds}:option.3.tooltip`,disabledButtonTooltip:`${ds}:option.3.disabled_tooltip`,selected:[{text:`${ds}:option.3.selected`}]}).withOptionPhase(async E=>{var R,n;const A=E.currentBattle.mysteryEncounter,s=A.misc.pokemon;Lb(s,A.misc.eggMove),s.ivs=s.ivs.map(I=>{const a=_e(31);return a>I?a:I}),await _r(E,s,null,be.POKEBALL,!1),(n=(R=A.selectedOption)==null?void 0:R.primaryPokemon)!=null&&n.id&&rR(E,A.selectedOption.primaryPokemon.id,s.getExpValue(),!1),mt(E,{fillRemaining:!0}),dt(E)}).build()).build();function Lb(E,A){const s=E.getEggMoves();if(s){let R=s[_e(4)];for(;R===A;)R=s[_e(4)];E.moveset.length<4?E.moveset.push(new Ot(R)):E.moveset[1]=new Ot(R)}}L(Lb,"givePokemonExtraEggMove");const DK=class DK{constructor(A,...s){this.urls=s.length?s:[wn(U[A]).replace(/ /g,"_")]}hasGenderVariant(...A){return this.femaleUrls=A.length?A:null,this}};L(DK,"TrainerNameConfig");let Zt=DK;U.ACE_TRAINER+"",new Zt(U.ACE_TRAINER),U.ARTIST+"",new Zt(U.ARTIST),U.BACKERS+"",new Zt(U.BACKERS),U.BACKPACKER+"",new Zt(U.BACKPACKER),U.BAKER+"",new Zt(U.BAKER),U.BEAUTY+"",new Zt(U.BEAUTY),U.BIKER+"",new Zt(U.BIKER),U.BLACK_BELT+"",new Zt(U.BLACK_BELT).hasGenderVariant("Battle_Girl"),U.BREEDER+"",new Zt(U.BREEDER,"Pokémon_Breeder"),U.CLERK+"",new Zt(U.CLERK),U.CYCLIST+"",new Zt(U.CYCLIST),U.DANCER+"",new Zt(U.DANCER),U.DEPOT_AGENT+"",new Zt(U.DEPOT_AGENT),U.DOCTOR+"",new Zt(U.DOCTOR).hasGenderVariant("Nurse"),U.FIREBREATHER+"",new Zt(U.FIREBREATHER),U.FISHERMAN+"",new Zt(U.FISHERMAN),U.GUITARIST+"",new Zt(U.GUITARIST),U.HARLEQUIN+"",new Zt(U.HARLEQUIN),U.HIKER+"",new Zt(U.HIKER),U.HOOLIGANS+"",new Zt(U.HOOLIGANS),U.HOOPSTER+"",new Zt(U.HOOPSTER),U.INFIELDER+"",new Zt(U.INFIELDER),U.JANITOR+"",new Zt(U.JANITOR),U.LINEBACKER+"",new Zt(U.LINEBACKER),U.MAID+"",new Zt(U.MAID),U.MUSICIAN+"",new Zt(U.MUSICIAN),U.HEX_MANIAC+"",new Zt(U.HEX_MANIAC),U.NURSERY_AIDE+"",new Zt(U.NURSERY_AIDE),U.OFFICER+"",new Zt(U.OFFICER),U.PARASOL_LADY+"",new Zt(U.PARASOL_LADY),U.PILOT+"",new Zt(U.PILOT),U.POKEFAN+"",new Zt(U.POKEFAN,"Poké_Fan"),U.PRESCHOOLER+"",new Zt(U.PRESCHOOLER),U.PSYCHIC+"",new Zt(U.PSYCHIC),U.RANGER+"",new Zt(U.RANGER),U.RICH+"",new Zt(U.RICH,"Gentleman").hasGenderVariant("Madame"),U.RICH_KID+"",new Zt(U.RICH_KID,"Rich_Boy").hasGenderVariant("Lady"),U.ROUGHNECK+"",new Zt(U.ROUGHNECK),U.SAILOR+"",new Zt(U.SAILOR),U.SCIENTIST+"",new Zt(U.SCIENTIST),U.SMASHER+"",new Zt(U.SMASHER),U.SNOW_WORKER+"",new Zt(U.SNOW_WORKER,"Worker"),U.STRIKER+"",new Zt(U.STRIKER),U.SCHOOL_KID+"",new Zt(U.SCHOOL_KID,"School_Kid"),U.SWIMMER+"",new Zt(U.SWIMMER),U.TWINS+"",new Zt(U.TWINS),U.VETERAN+"",new Zt(U.VETERAN),U.WAITER+"",new Zt(U.WAITER).hasGenderVariant("Waitress"),U.WORKER+"",new Zt(U.WORKER),U.YOUNGSTER+"",new Zt(U.YOUNGSTER).hasGenderVariant("Lass");const FL={[U.ACE_TRAINER]:[["Aaron","Allen","Blake","Brian","Gaven","Jake","Kevin","Mike","Nick","Paul","Ryan","Sean","Darin","Albert","Berke","Clyde","Edgar","George","Leroy","Owen","Parker","Randall","Ruben","Samuel","Vincent","Warren","Wilton","Zane","Alfred","Braxton","Felix","Gerald","Jonathan","Leonel","Marcel","Mitchell","Quincy","Roderick","Colby","Rolando","Yuji","Abel","Anton","Arthur","Cesar","Dalton","Dennis","Ernest","Garrett","Graham","Henry","Isaiah","Jonah","Jose","Keenan","Micah","Omar","Quinn","Rodolfo","Saul","Sergio","Skylar","Stefan","Zachery","Alton","Arabella","Bonita","Cal","Cody","French","Kobe","Paulo","Shaye","Austin","Beckett","Charlie","Corky","David","Dwayne","Elmer","Jesse","Jared","Johan","Jordan","Kipp","Lou","Terry","Tom","Webster","Billy","Doyle","Enzio","Geoff","Grant","Kelsey","Miguel","Pierce","Ray","Santino","Shel","Adelbert","Bence","Emil","Evan","Mathis","Maxim","Neil","Rico","Robbie","Theo","Viktor","Benedict","Cornelius","Hisato","Leopold","Neville","Vito","Chase","Cole","Hiroshi","Jackson","Jim","Kekoa","Makana","Yuki","Elwood","Seth","Alvin","Arjun","Arnold","Cameron","Carl","Carlton","Christopher","Dave","Dax","Dominic","Edmund","Finn","Fred","Garret","Grayson","Jace","Jaxson","Jay","Jirard","Johnson","Kayden","Kite","Louis","Mac","Marty","Percy","Raymond","Ronnie","Satch","Tim","Zach","Conner","Vince","Bedro","Boda","Botan","Daras","Dury","Herton","Rewn","Stum","Tock","Trilo","Berki","Cruik","Dazon","Desid","Dillot","Farfin","Forgon","Hebel","Morfon","Moril","Shadd","Vanhub","Bardo","Carben","Degin","Gorps","Klept","Lask","Malex","Mopar","Niled","Noxon","Teslor","Tetil"],["Beth","Carol","Cybil","Emma","Fran","Gwen","Irene","Jenn","Joyce","Kate","Kelly","Lois","Lola","Megan","Quinn","Reena","Cara","Alexa","Brooke","Caroline","Elaine","Hope","Jennifer","Jody","Julie","Lori","Mary","Michelle","Shannon","Wendy","Alexia","Alicia","Athena","Carolina","Cristin","Darcy","Dianne","Halle","Jazmyn","Katelynn","Keira","Marley","Allyson","Kathleen","Naomi","Alyssa","Ariana","Brandi","Breanna","Brenda","Brenna","Catherine","Clarice","Dana","Deanna","Destiny","Jamie","Jasmin","Kassandra","Laura","Maria","Mariah","Maya","Meagan","Mikayla","Monique","Natasha","Olivia","Sandra","Savannah","Sydney","Moira","Piper","Salma","Allison","Beverly","Cathy","Cheyenne","Clara","Dara","Eileen","Glinda","Junko","Lena","Lucille","Mariana","Olwen","Shanta","Stella","Angi","Belle","Chandra","Cora","Eve","Jacqueline","Jeanne","Juliet","Kathrine","Layla","Lucca","Melina","Miki","Nina","Sable","Shelly","Summer","Trish","Vicki","Alanza","Cordelia","Hilde","Imelda","Michele","Mireille","Claudia","Constance","Harriet","Honor","Melba","Portia","Alexis","Angela","Karla","Lindsey","Tori","Sheri","Jada","Kailee","Amanda","Annie","Kindra","Kyla","Sofia","Yvette","Becky","Flora","Gloria","Buna","Ferda","Lehan","Liqui","Lomen","Neira","Atilo","Detta","Gilly","Gosney","Levens","Moden","Rask","Rateis","Rosno","Tynan","Veron","Zoel","Cida","Dibsin","Dodin","Ebson","Equin","Flostin","Gabsen","Halsion","Hileon","Quelor","Rapeel","Roze","Tensin"]],[U.ARTIST]:[["Ismael","William","Horton","Pierre","Zach","Gough","Salvador","Vincent","Duncan"],["Georgia"]],[U.BACKERS]:[["Alf & Fred","Hawk & Dar","Joe & Ross","Les & Web","Masa & Yas","Stu & Art"],["Ai & Ciel","Ami & Eira","Cam & Abby","Fey & Sue","Kat & Phae","Kay & Ali","Ava & Aya","Cleo & Rio","May & Mal"]],[U.BACKPACKER]:[["Alexander","Carlos","Herman","Jerome","Keane","Kelsey","Kiyo","Michael","Nate","Peter","Sam","Stephen","Talon","Terrance","Toru","Waylon","Boone","Clifford","Ivan","Kendall","Lowell","Randall","Reece","Roland","Shane","Walt","Farid","Heike","Joren","Lane","Roderick","Darnell","Deon","Emory","Graeme","Grayson","Aitor","Alex","Arturo","Asier","Jaime","Jonathan","Julio","Kevin","Kosuke","Lander","Markel","Mateo","Nil","Pau","Samuel"],["Anna","Corin","Elaine","Emi","Jill","Kumiko","Liz","Lois","Lora","Molly","Patty","Ruth","Vicki","Annie","Blossom","Clara","Eileen","Mae","Myra","Rachel","Tami","Ashley","Mikiko","Kiana","Perdy","Maria","Yuho","Peren","Barbara","Diane"]],[U.BAKER]:["Chris","Jenn","Lilly"],[U.BEAUTY]:["Cassie","Julia","Olivia","Samantha","Valerie","Victoria","Bridget","Connie","Jessica","Johanna","Melissa","Sheila","Shirley","Tiffany","Namiko","Thalia","Grace","Lola","Lori","Maura","Tamia","Cyndy","Devon","Gabriella","Harley","Lindsay","Nicola","Callie","Charlotte","Kassandra","December","Fleming","Nikola","Aimee","Anais","Brigitte","Cassandra","Andrea","Brittney","Carolyn","Krystal","Alexis","Alice","Aina","Anya","Arianna","Aubrey","Beverly","Camille","Beauty","Evette","Hansol","Haruka","Jill","Jo","Lana","Lois","Lucy","Mai","Nickie","Nicole","Prita","Rose","Shelly","Suzy","Tessa","Anita","Alissa","Rita","Cudsy","Eloff","Miru","Minot","Nevah","Niven","Ogoin"],[U.BIKER]:["Charles","Dwayne","Glenn","Harris","Joel","Riley","Zeke","Alex","Billy","Ernest","Gerald","Hideo","Isaac","Jared","Jaren","Jaxon","Jordy","Lao","Lukas","Malik","Nikolas","Ricardo","Ruben","Virgil","William","Aiden","Dale","Dan","Jacob","Markey","Reese","Teddy","Theron","Jeremy","Morgann","Phillip","Philip","Stanley","Dillon"],[U.BLACK_BELT]:[["Kenji","Lao","Lung","Nob","Wai","Yoshi","Atsushi","Daisuke","Hideki","Hitoshi","Kiyo","Koichi","Koji","Yuji","Cristian","Rhett","Takao","Theodore","Zander","Aaron","Hugh","Mike","Nicolas","Shea","Takashi","Adam","Carl","Colby","Darren","David","Davon","Derek","Eddie","Gregory","Griffin","Jarrett","Jeffery","Kendal","Kyle","Luke","Miles","Nathaniel","Philip","Rafael","Ray","Ricky","Sean","Willie","Ander","Manford","Benjamin","Corey","Edward","Grant","Jay","Kendrew","Kentaro","Ryder","Teppei","Thomas","Tyrone","Andrey","Donny","Drago","Gordon","Grigor","Jeriel","Kenneth","Martell","Mathis","Rich","Rocky","Rodrigo","Wesley","Zachery","Alonzo","Cadoc","Gunnar","Igor","Killian","Markus","Ricardo","Yanis","Banting","Clayton","Duane","Earl","Greg","Roy","Terry","Tracy","Walter","Alvaro","Curtis","Francis","Ross","Brice","Cheng","Dudley","Eric","Kano","Masahiro","Randy","Ryuji","Steve","Tadashi","Wong","Yuen","Brian","Carter","Reece","Nick","Yang"],["Cora","Cyndy","Jill","Laura","Sadie","Tessa","Vivian","Aisha","Callie","Danielle","Helene","Jocelyn","Lilith","Paula","Reyna","Helen","Kelsey","Tyler","Amy","Chandra","Hillary","Janie","Lee","Maggie","Mikiko","Miriam","Sharon","Susie","Xiao","Alize","Azra","Brenda","Chalina","Chan","Glinda","Maki","Tia","Tiffany","Wendy","Andrea","Gabrielle","Gerardine","Hailey","Hedvig","Justine","Kinsey","Sigrid","Veronique","Tess"]],[U.BREEDER]:[["Isaac","Myles","Salvadore","Albert","Kahlil","Eustace","Galen","Owen","Addison","Marcus","Foster","Cory","Glenn","Jay","Wesley","William","Adrian","Bradley","Jaime"],["Allison","Alize","Bethany","Lily","Lydia","Gabrielle","Jayden","Pat","Veronica","Amber","Jennifer","Kaylee","Adelaide","Brooke","Ethel","April","Irene","Magnolia","Amala","Mercy","Amanda","Ikue","Savannah","Yuka","Chloe","Debra","Denise","Elena"]],[U.CLERK]:[["Chaz","Clemens","Doug","Fredric","Ivan","Isaac","Nelson","Wade","Warren","Augustin","Gilligan","Cody","Jeremy","Shane","Dugal","Royce","Ronald"],["Alberta","Ingrid","Katie","Piper","Trisha","Wren","Britney","Lana","Jessica","Kristen","Michelle","Gabrielle"]],[U.CYCLIST]:[["Axel","James","John","Ryan","Hector","Jeremiah"],["Kayla","Megan","Nicole","Rachel","Krissa","Adelaide"]],[U.DANCER]:["Brian","Davey","Dirk","Edmond","Mickey","Raymond","Cara","Julia","Maika","Mireille","Ronda","Zoe"],[U.DEPOT_AGENT]:["Josh","Hank","Vincent"],[U.DOCTOR]:[["Hank","Jerry","Jules","Logan","Wayne","Braid","Derek","Heath","Julius","Kit","Graham"],["Kirsten","Sachiko","Shery","Carol","Dixie","Mariah"]],[U.FIREBREATHER]:["Bill","Burt","Cliff","Dick","Lyle","Ned","Otis","Ray","Richard","Walt"],[U.FISHERMAN]:["Andre","Arnold","Barney","Chris","Edgar","Henry","Jonah","Justin","Kyle","Martin","Marvin","Ralph","Raymond","Scott","Stephen","Wilton","Tully","Andrew","Barny","Carter","Claude","Dale","Elliot","Eugene","Ivan","Ned","Nolan","Roger","Ronald","Wade","Wayne","Darian","Kai","Chip","Hank","Kaden","Tommy","Tylor","Alec","Brett","Cameron","Cody","Cole","Cory","Erick","George","Joseph","Juan","Kenneth","Luc","Miguel","Travis","Walter","Zachary","Josh","Gideon","Kyler","Liam","Murphy","Bruce","Damon","Devon","Hubert","Jones","Lydon","Mick","Pete","Sean","Sid","Vince","Bucky","Dean","Eustace","Kenzo","Leroy","Mack","Ryder","Ewan","Finn","Murray","Seward","Shad","Wharton","Finley","Fisher","Fisk","River","Sheaffer","Timin","Carl","Ernest","Hal","Herbert","Hisato","Mike","Vernon","Harriet","Marina","Chase"],[U.GUITARIST]:["Anna","Beverly","January","Tina","Alicia","Claudia","Julia","Lidia","Mireia","Noelia","Sara","Sheila","Tatiana"],[U.HARLEQUIN]:["Charley","Ian","Jack","Kerry","Louis","Pat","Paul","Rick","Anders","Clarence","Gary"],[U.HIKER]:["Anthony","Bailey","Benjamin","Daniel","Erik","Jim","Kenny","Leonard","Michael","Parry","Phillip","Russell","Sidney","Tim","Timothy","Alan","Brice","Clark","Eric","Lenny","Lucas","Mike","Trent","Devan","Eli","Marc","Sawyer","Allen","Daryl","Dudley","Earl","Franklin","Jeremy","Marcos","Nob","Oliver","Wayne","Alexander","Damon","Jonathan","Justin","Kevin","Lorenzo","Louis","Maurice","Nicholas","Reginald","Robert","Theodore","Bruce","Clarke","Devin","Dwight","Edwin","Eoin","Noland","Russel","Andy","Bret","Darrell","Gene","Hardy","Hugh","Jebediah","Jeremiah","Kit","Neil","Terrell","Don","Doug","Hunter","Jared","Jerome","Keith","Manuel","Markus","Otto","Shelby","Stephen","Teppei","Tobias","Wade","Zaiem","Aaron","Alain","Bergin","Bernard","Brent","Corwin","Craig","Delmon","Dunstan","Orestes","Ross","Davian","Calhoun","David","Gabriel","Ryan","Thomas","Travis","Zachary","Anuhea","Barnaby","Claus","Collin","Colson","Dexter","Dillan","Eugine","Farkas","Hisato","Julius","Kenji","Irwin","Lionel","Paul","Richter","Valentino","Donald","Douglas","Kevyn","Chester"],[U.HOOLIGANS]:["Jim & Cas","Rob & Sal"],[U.HOOPSTER]:["Bobby","John","Lamarcus","Derrick","Nicolas"],[U.INFIELDER]:["Alex","Connor","Todd"],[U.JANITOR]:["Caleb","Geoff","Brady","Felix","Orville","Melvin","Shawn"],[U.LINEBACKER]:["Bob","Dan","Jonah"],[U.MAID]:["Belinda","Sophie","Emily","Elena","Clare","Alica","Tanya","Tammy"],[U.MUSICIAN]:["Boris","Preston","Charles","Clyde","Vincent","Dalton","Kirk","Shawn","Fabian","Fernando","Joseph","Marcos","Arturo","Jerry","Lonnie","Tony"],[U.NURSERY_AIDE]:["Autumn","Briana","Leah","Miho","Ethel","Hollie","Ilse","June","Kimya","Rosalyn"],[U.OFFICER]:["Dirk","Keith","Alex","Bobby","Caleb","Danny","Dylan","Thomas","Daniel","Jeff","Braven","Dell","Neagle","Haruki","Mitchell","Raymond"],[U.PARASOL_LADY]:["Angelica","Clarissa","Madeline","Akari","Annabell","Kayley","Rachel","Alexa","Sabrina","April","Gwyneth","Laura","Lumi","Mariah","Melita","Nicole","Tihana","Ingrid","Tyra"],[U.PILOT]:["Chase","Leonard","Ted","Elron","Ewing","Flynn","Winslow"],[U.POKEFAN]:[["Alex","Allan","Brandon","Carter","Colin","Derek","Jeremy","Joshua","Rex","Robert","Trevor","William","Colton","Miguel","Francisco","Kaleb","Leonard","Boone","Elliot","Jude","Norbert","Corey","Gabe","Baxter"],["Beverly","Georgia","Jaime","Ruth","Isabel","Marissa","Vanessa","Annika","Bethany","Kimberly","Meredith","Rebekah","Eleanor","Darcy","Lydia","Sachiko","Abigail","Agnes","Lydie","Roisin","Tara","Carmen","Janet"]],[U.PRESCHOOLER]:[["Billy","Doyle","Evan","Homer","Tully","Albert","Buster","Greg","Ike","Jojo","Tyrone","Adrian","Oliver","Hayden","Hunter","Kaleb","Liam","Dylan"],["Juliet","Mia","Sarah","Wendy","Winter","Chrissy","Eva","Lin","Samantha","Ella","Lily","Natalie","Ailey","Hannah","Malia","Kindra","Nancy"]],[U.PSYCHIC]:[["Fidel","Franklin","Gilbert","Greg","Herman","Jared","Mark","Nathan","Norman","Phil","Richard","Rodney","Cameron","Edward","Fritz","Joshua","Preston","Virgil","William","Alvaro","Blake","Cedric","Keenan","Nicholas","Dario","Johan","Lorenzo","Tyron","Bryce","Corbin","Deandre","Elijah","Kody","Landon","Maxwell","Mitchell","Sterling","Eli","Nelson","Vernon","Gaven","Gerard","Low","Micki","Perry","Rudolf","Tommy","Al","Nandor","Tully","Arthur","Emanuel","Franz","Harry","Paschal","Robert","Sayid","Angelo","Anton","Arin","Avery","Danny","Frasier","Harrison","Jaime","Ross","Rui","Vlad","Mason"],["Alexis","Hannah","Jacki","Jaclyn","Kayla","Maura","Samantha","Alix","Brandi","Edie","Macey","Mariella","Marlene","Laura","Rodette","Abigail","Brittney","Chelsey","Daisy","Desiree","Kendra","Lindsey","Rachael","Valencia","Belle","Cybil","Doreen","Dua","Future","Lin","Madhu","Alia","Ena","Joyce","Lynette","Olesia","Sarah"]],[U.RANGER]:[["Carlos","Jackson","Sebastian","Gav","Lorenzo","Logan","Nicolas","Trenton","Deshawn","Dwayne","Jeffery","Kyler","Taylor","Alain","Claude","Crofton","Forrest","Harry","Jaden","Keith","Lewis","Miguel","Pedro","Ralph","Richard","Bret","Daryl","Eddie","Johan","Leaf","Louis","Maxwell","Parker","Rick","Steve","Bjorn","Chaise","Dean","Lee","Maurice","Nash","Ralf","Reed","Shinobu","Silas"],["Catherine","Jenna","Sophia","Merdith","Nora","Beth","Chelsea","Katelyn","Madeline","Allison","Ashlee","Felicia","Krista","Annie","Audra","Brenda","Chloris","Eliza","Heidi","Irene","Mary","Mylene","Shanti","Shelly","Thalia","Anja","Briana","Dianna","Elaine","Elle","Hillary","Katie","Lena","Lois","Malory","Melita","Mikiko","Naoko","Serenity","Ambre","Brooke","Clementine","Melina","Petra","Twiggy"]],[U.RICH]:[["Alfred","Edward","Gregory","Preston","Thomas","Tucker","Walter","Clifford","Everett","Micah","Nate","Pierre","Terrance","Arthur","Brooks","Emanuel","Lamar","Jeremy","Leonardo","Milton","Frederic","Renaud","Robert","Yan","Daniel","Sheldon","Stonewall","Gerald","Ronald","Smith","Stanley","Reginald","Orson","Wilco","Caden","Glenn"],["Rebecca","Reina","Cassandra","Emilia","Grace","Marian","Elizabeth","Kathleen","Sayuri","Caroline","Judy"]],[U.RICH_KID]:[["Garret","Winston","Dawson","Enrique","Jason","Roman","Trey","Liam","Anthony","Brad","Cody","Manuel","Martin","Pierce","Rolan","Keenan","Filbert","Antoin","Cyus","Diek","Dugo","Flitz","Jurek","Lond","Perd","Quint","Basto","Benit","Brot","Denc","Guyit","Marcon","Perc","Puros","Roex","Sainz","Symin","Tark","Venak"],["Anette","Brianna","Cindy","Colleen","Daphne","Elizabeth","Naomi","Sarah","Charlotte","Gillian","Jacki","Lady","Melissa","Celeste","Colette","Elizandra","Isabel","Lynette","Magnolia","Sophie","Lina","Dulcie","Auro","Brin","Caril","Eloos","Gwin","Illa","Kowly","Rima","Ristin","Vesey","Brena","Deasy","Denslon","Kylet","Nemi","Rene","Sanol","Stouner","Sturk","Talmen","Zoila"]],[U.ROUGHNECK]:["Camron","Corey","Gabriel","Isaiah","Jamal","Koji","Luke","Paxton","Raul","Zeek","Kirby","Chance","Dave","Fletcher","Johnny","Reese","Joey","Ricky","Silvester","Martin"],[U.SAILOR]:["Alberto","Bost","Brennan","Brenden","Claude","Cory","Damian","Dirk","Duncan","Dwayne","Dylan","Eddie","Edmond","Elijah","Ernest","Eugene","Garrett","Golos","Gratin","Grestly","Harry","Hols","Hudson","Huey","Jebol","Jeff","Leonald","Luther","Kelvin","Kenneth","Kent","Knook","Marc","Mifis","Monar","Morkor","Ordes","Oxlin","Parker","Paul","Philip","Roberto","Samson","Skyler","Stanly","Tebu","Terrell","Trevor","Yasu","Zachariah"],[U.SCIENTIST]:[["Jed","Marc","Mitch","Rich","Ross","Beau","Braydon","Connor","Ed","Ivan","Jerry","Jose","Joshua","Parker","Rodney","Taylor","Ted","Travis","Zackery","Darrius","Emilio","Fredrick","Shaun","Stefano","Travon","Daniel","Garett","Gregg","Linden","Lowell","Trenton","Dudley","Luke","Markus","Nathan","Orville","Randall","Ron","Ronald","Simon","Steve","William","Franklin","Clarke","Jacques","Terrance","Ernst","Justus","Ikaika","Jayson","Kyle","Reid","Tyrone","Adam","Albert","Alphonse","Cory","Donnie","Elton","Francis","Gordon","Herbert","Humphrey","Jordan","Julian","Keaton","Levi","Melvin","Murray","West","Craig","Coren","Dubik","Kotan","Lethco","Mante","Mort","Myron","Odlow","Ribek","Roeck","Vogi","Vonder","Zogo","Doimo","Doton","Durel","Hildon","Kukla","Messa","Nanot","Platen","Raburn","Reman","Acrod","Coffy","Elrok","Foss","Hardig","Hombol","Hospel","Kaller","Klots","Krilok","Limar","Loket","Mesak","Morbit","Newin","Orill","Tabor","Tekot"],["Blythe","Chan","Kathrine","Marie","Maria","Naoko","Samantha","Satomi","Shannon","Athena","Caroline","Lumi","Lumina","Marissa","Sonia"]],[U.SMASHER]:["Aspen","Elena","Mari","Amy","Lizzy"],[U.SNOW_WORKER]:[["Braden","Brendon","Colin","Conrad","Dillan","Gary","Gerardo","Holden","Jackson","Mason","Quentin","Willy","Noel","Arnold","Brady","Brand","Cairn","Cliff","Don","Eddie","Felix","Filipe","Glenn","Gus","Heath","Matthew","Patton","Rich","Rob","Ryan","Scott","Shelby","Sterling","Tyler","Victor","Zack","Friedrich","Herman","Isaac","Leo","Maynard","Mitchell","Morgann","Nathan","Niel","Pasqual","Paul","Tavarius","Tibor","Dimitri","Narek","Yusif","Frank","Jeff","Vaclav","Ovid","Francis","Keith","Russel","Sangon","Toway","Bomber","Chean","Demit","Hubor","Kebile","Laber","Ordo","Retay","Ronix","Wagel","Dobit","Kaster","Lobel","Releo","Saken","Rustix"],["Georgia","Sandra","Yvonne"]],[U.STRIKER]:["Marco","Roberto","Tony"],[U.SCHOOL_KID]:[["Alan","Billy","Chad","Danny","Dudley","Jack","Joe","Johnny","Kipp","Nate","Ricky","Tommy","Jerry","Paul","Ted","Chance","Esteban","Forrest","Harrison","Connor","Sherman","Torin","Travis","Al","Carter","Edgar","Jem","Sammy","Shane","Shayne","Alvin","Keston","Neil","Seymour","William","Carson","Clark","Nolan"],["Georgia","Karen","Meiko","Christine","Mackenzie","Tiera","Ann","Gina","Lydia","Marsha","Millie","Sally","Serena","Silvia","Alberta","Cassie","Mara","Rita","Georgie","Meena","Nitzel"]],[U.SWIMMER]:[["Berke","Cameron","Charlie","George","Harold","Jerome","Kirk","Mathew","Parker","Randall","Seth","Simon","Tucker","Austin","Barry","Chad","Cody","Darrin","David","Dean","Douglas","Franklin","Gilbert","Herman","Jack","Luis","Matthew","Reed","Richard","Rodney","Roland","Spencer","Stan","Tony","Clarence","Declan","Dominik","Harrison","Kevin","Leonardo","Nolen","Pete","Santiago","Axle","Braden","Finn","Garrett","Mymo","Reece","Samir","Toby","Adrian","Colton","Dillon","Erik","Evan","Francisco","Glenn","Kurt","Oscar","Ricardo","Sam","Sheltin","Troy","Vincent","Wade","Wesley","Duane","Elmo","Esteban","Frankie","Ronald","Tyson","Bart","Matt","Tim","Wright","Jeffery","Kyle","Alessandro","Estaban","Kieran","Ramses","Casey","Dakota","Jared","Kalani","Keoni","Lawrence","Logan","Robert","Roddy","Yasu","Derek","Jacob","Bruce","Clayton"],["Briana","Dawn","Denise","Diana","Elaine","Kara","Kaylee","Lori","Nicole","Nikki","Paula","Susie","Wendy","Alice","Beth","Beverly","Brenda","Dana","Debra","Grace","Jenny","Katie","Laurel","Linda","Missy","Sharon","Tanya","Tara","Tisha","Carlee","Imani","Isabelle","Kyla","Sienna","Abigail","Amara","Anya","Connie","Maria","Melissa","Nora","Shirley","Shania","Tiffany","Aubree","Cassandra","Claire","Crystal","Erica","Gabrielle","Haley","Jessica","Joanna","Lydia","Mallory","Mary","Miranda","Paige","Sophia","Vanessa","Chelan","Debbie","Joy","Kendra","Leona","Mina","Caroline","Joyce","Larissa","Rebecca","Tyra","Dara","Desiree","Kaoru","Ruth","Coral","Genevieve","Isla","Marissa","Romy","Sheryl","Alexandria","Alicia","Chelsea","Jade","Kelsie","Laura","Portia","Shelby","Sara","Tiare","Kyra","Natasha","Layla","Scarlett","Cora"]],[U.TWINS]:["Amy & May","Jo & Zoe","Meg & Peg","Ann & Anne","Lea & Pia","Amy & Liv","Gina & Mia","Miu & Yuki","Tori & Tia","Eli & Anne","Jen & Kira","Joy & Meg","Kiri & Jan","Miu & Mia","Emma & Lil","Liv & Liz","Teri & Tia","Amy & Mimi","Clea & Gil","Day & Dani","Kay & Tia","Tori & Til","Saya & Aya","Emy & Lin","Kumi & Amy","Mayo & May","Ally & Amy","Lia & Lily","Rae & Ula","Sola & Ana","Tara & Val","Faith & Joy","Nana & Nina"],[U.VETERAN]:[["Armando","Brenden","Brian","Clayton","Edgar","Emanuel","Grant","Harlan","Terrell","Arlen","Chester","Hugo","Martell","Ray","Shaun","Abraham","Carter","Claude","Jerry","Lucius","Murphy","Rayne","Ron","Sinan","Sterling","Vincent","Zach","Gerard","Gilles","Louis","Timeo","Akira","Don","Eric","Harry","Leon","Roger","Angus","Aristo","Brone","Johnny"],["Julia","Karla","Kim","Sayuri","Tiffany","Cathy","Cecile","Chloris","Denae","Gina","Maya","Oriana","Portia","Rhona","Rosaline","Catrina","Inga","Trisha","Heather","Lynn","Sheri","Alonsa","Ella","Leticia","Kiara"]],[U.WAITER]:[["Bert","Clint","Maxwell","Lou"],["Kati","Aurora","Bonita","Flo","Tia","Jan","Olwen","Paget","Paula","Talia"]],[U.WORKER]:[["Braden","Brendon","Colin","Conrad","Dillan","Gary","Gerardo","Holden","Jackson","Mason","Quentin","Willy","Noel","Arnold","Brady","Brand","Cairn","Cliff","Don","Eddie","Felix","Filipe","Glenn","Gus","Heath","Matthew","Patton","Rich","Rob","Ryan","Scott","Shelby","Sterling","Tyler","Victor","Zack","Friedrich","Herman","Isaac","Leo","Maynard","Mitchell","Morgann","Nathan","Niel","Pasqual","Paul","Tavarius","Tibor","Dimitri","Narek","Yusif","Frank","Jeff","Vaclav","Ovid","Francis","Keith","Russel","Sangon","Toway","Bomber","Chean","Demit","Hubor","Kebile","Laber","Ordo","Retay","Ronix","Wagel","Dobit","Kaster","Lobel","Releo","Saken","Rustix"],["Georgia","Sandra","Yvonne"]],[U.YOUNGSTER]:[["Albert","Gordon","Ian","Jason","Jimmy","Mikey","Owen","Samuel","Warren","Allen","Ben","Billy","Calvin","Dillion","Eddie","Joey","Josh","Neal","Timmy","Tommy","Breyden","Deandre","Demetrius","Dillon","Jaylen","Johnson","Shigenobu","Chad","Cole","Cordell","Dan","Dave","Destin","Nash","Tyler","Yasu","Austin","Dallas","Darius","Donny","Jonathon","Logan","Michael","Oliver","Sebastian","Tristan","Wayne","Norman","Roland","Regis","Abe","Astor","Keita","Kenneth","Kevin","Kyle","Lester","Masao","Nicholas","Parker","Wes","Zachary","Cody","Henley","Jaye","Karl","Kenny","Masahiro","Pedro","Petey","Sinclair","Terrell","Waylon","Aidan","Anthony","David","Jacob","Jayden","Cutler","Ham","Caleb","Kai","Honus","Kenway","Bret","Chris","Cid","Dennis","Easton","Ken","Robby","Ronny","Shawn","Benjamin","Jake","Travis","Adan","Aday","Beltran","Elian","Hernan","Julen","Luka","Roi","Bernie","Dustin","Jonathan","Wyatt"],["Alice","Bridget","Carrie","Connie","Dana","Ellen","Krise","Laura","Linda","Michelle","Shannon","Andrea","Crissy","Janice","Robin","Sally","Tiana","Haley","Ali","Ann","Dalia","Dawn","Iris","Joana","Julia","Kay","Lisa","Megan","Mikaela","Miriam","Paige","Reli","Blythe","Briana","Caroline","Cassidy","Kaitlin","Madeline","Molly","Natalie","Samantha","Sarah","Cathy","Dye","Eri","Eva","Fey","Kara","Lurleen","Maki","Mali","Maya","Miki","Sibyl","Daya","Diana","Flo","Helia","Henrietta","Isabel","Mai","Persephone","Serena","Anna","Charlotte","Elin","Elsa","Lise","Sara","Suzette","Audrey","Emmy","Isabella","Madison","Rika","Rylee","Salla","Ellie","Alexandra","Amy","Lass","Brittany","Chel","Cindy","Dianne","Emily","Emma","Evelyn","Hana","Harleen","Hazel","Jocelyn","Katrina","Kimberly","Lina","Marge","Mila","Mizuki","Rena","Sal","Satoko","Summer","Tomoe","Vicky","Yue","Yumi","Lauren","Rei","Riley","Lois","Nancy","Tammy","Terry"]],[U.HEX_MANIAC]:["Kindra","Patricia","Tammy","Tasha","Valerie","Alaina","Kathleen","Leah","Makie","Sylvia","Anina","Arachna","Carrie","Desdemona","Josette","Luna","Melanie","Osanna","Raziah"]},dE="mysteryEncounters/globalTradeSystem",DX=512,MX=4096,hX={1:[e.RATTATA,e.PIDGEY,e.WEEDLE],2:[e.SENTRET,e.HOOTHOOT,e.LEDYBA],3:[e.POOCHYENA,e.ZIGZAGOON,e.TAILLOW],4:[e.BIDOOF,e.STARLY,e.KRICKETOT],5:[e.PATRAT,e.PURRLOIN,e.PIDOVE],6:[e.BUNNELBY,e.LITLEO,e.SCATTERBUG],7:[e.PIKIPEK,e.YUNGOOS,e.ROCKRUFF],8:[e.SKWOVET,e.WOOLOO,e.ROOKIDEE],9:[e.LECHONK,e.FIDOUGH,e.TAROUNTULA]},cX=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN],_X=FA.withEncounterType(qe.GLOBAL_TRADE_SYSTEM).withEncounterTier(Vt.COMMON).withSceneWaveRangeRequirement(...xA).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"global_trade_system",fileRoot:"mystery-encounters",hasShadow:!0,disableAnimation:!0,x:3,y:5,yShadow:1}]).withIntroDialogue([{text:`${dE}:intro`}]).setLocalizationKey(`${dE}`).withTitle(`${dE}:title`).withDescription(`${dE}:description`).withQuery(`${dE}:query`).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter;let s;E.musicPreference===Er.CONSISTENT?(s="mystery_encounter_gen_5_gts",E.loadBgm(s,`${s}.mp3`)):(s="mystery_encounter_gen_6_gts",E.loadBgm(s,`${s}.mp3`));const R=PX(E);return A.misc={tradeOptionsMap:R,bgmKey:s},!0}).withOnVisualsStart(E=>(E.fadeAndSwitchBgm(E.currentBattle.mysteryEncounter.misc.bgmKey),!0)).withOption(Ft.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${dE}:option.1.label`,buttonTooltip:`${dE}:option.1.tooltip`,secondOptionPrompt:`${dE}:option.1.trade_options_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(R=>{const I=A.misc.tradeOptionsMap.get(R.id);return I?I.map(a=>({label:a.getNameToRender(),handler:L(()=>(A.setDialogueToken("tradedPokemon",R.getNameToRender()),A.setDialogueToken("received",a.getNameToRender()),A.misc.tradedPokemon=R,A.misc.receivedPokemon=a,!0),"handler"),onHover:L(()=>{const S=a.species.forms&&a.species.forms.length>a.formIndex?a.species.forms[a.formIndex].formName:null,o=D.t("pokemonInfoContainer:ability")+" "+a.getAbility().name+(a.getGender()!==je.GENDERLESS?"     |     "+D.t("pokemonInfoContainer:gender")+" "+OL(a.getGender()):""),l=D.t("pokemonInfoContainer:nature")+" "+xO(a.getNature())+(S?"     |     "+D.t("pokemonInfoContainer:form")+" "+S:"");$t(E,`${o}
${l}`,0,0,!1)},"onHover")})):[]},"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.tradedPokemon,R=A.misc.receivedPokemon,n=s.getHeldItems().filter(S=>!(S instanceof IR)&&!(S instanceof La)),I=Lh();A.setDialogueToken("tradeTrainerName",I.trim()),E.removePokemonFromPlayerParty(s,!1),R.passive=s.passive,R.pokeball=hA(4);const a=new cs(R),r=E.addPlayerPokemon(R.species,R.level,a.abilityIndex,a.formIndex,a.gender,a.shiny,a.variant,a.ivs,a.nature,a);E.getPlayerParty().push(r),await r.loadAssets();for(const S of n)S.pokemonId=r.id,E.addModifier(S,!0,!1,!1,!0);await Nb(E),await Sb(E,s,r),await $t(E,`${dE}:trade_received`,null,0,!0,4e3),E.playBgm(A.misc.bgmKey),await Wx(E,r),await Tb(E),s.destroy(),dt(E,!0)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${dE}:option.2.label`,buttonTooltip:`${dE}:option.2.tooltip`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(R=>{const n=Y6(E.getPlayerParty().map(r=>r.species)),I=new rs(E,n,R.level,Tt.NONE,!1);if(!I.shiny){const r=new Rt(DX);E.eventManager.isEventActive()&&(r.value*=E.eventManager.getShinyMultiplier()),E.applyModifiers(la,!0,r);const S=Math.min(r.value,MX);I.trySetShinySeed(S,!1)}const a=I.species.ability2?2:1;if(I.species.abilityHidden&&I.abilityIndex<a){const r=new Rt(64);E.applyModifiers(zn,!0,r),!_e(r.value)&&(I.abilityIndex=a)}if(!I.shiny&&(!I.species.abilityHidden||I.abilityIndex<a)){const r=I.getEggMoves();if(r){const S=r[_e(3)];if(!I.moveset.some(o=>(o==null?void 0:o.moveId)===S))if(I.moveset.length<4)I.moveset.push(new Ot(S));else{const o=_e(4);I.moveset[o]=new Ot(S)}}}A.setDialogueToken("tradedPokemon",R.getNameToRender()),A.setDialogueToken("received",I.getNameToRender()),A.misc.tradedPokemon=R,A.misc.receivedPokemon=I},"onPokemonSelected"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.tradedPokemon,R=A.misc.receivedPokemon,n=s.getHeldItems().filter(S=>!(S instanceof IR)&&!(S instanceof La)),I=Lh();A.setDialogueToken("tradeTrainerName",I.trim()),E.removePokemonFromPlayerParty(s,!1),R.passive=s.passive,R.pokeball=hA(4);const a=new cs(R),r=E.addPlayerPokemon(R.species,R.level,a.abilityIndex,a.formIndex,a.gender,a.shiny,a.variant,a.ivs,a.nature,a);E.getPlayerParty().push(r),await r.loadAssets();for(const S of n)S.pokemonId=r.id,E.addModifier(S,!0,!1,!1,!0);await Nb(E),await Sb(E,s,r),await $t(E,`${dE}:trade_received`,null,0,!0,4e3),E.playBgm(A.misc.bgmKey),await Wx(E,r),await Tb(E),s.destroy(),dt(E,!0)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${dE}:option.3.label`,buttonTooltip:`${dE}:option.3.tooltip`,secondOptionPrompt:`${dE}:option.3.trade_options_prompt`}).withPreOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter;return $E(E,L(n=>n.getHeldItems().filter(a=>a.isTransferable).map(a=>({label:a.type.name,handler:L(()=>(A.setDialogueToken("chosenItem",a.type.name),A.misc.chosenModifier=a,A.misc.chosenPokemon=n,!0),"handler")})),"onPokemonSelected"),void 0,L(n=>n.getHeldItems().filter(a=>a.isTransferable).length>0?null:mA(E,`${dE}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.misc.chosenModifier,R=E.getPlayerParty(),n=A.misc.chosenPokemon,I=s.type.withTierFromPool(PE.PLAYER,R);let a=I.tier??v.GREAT;I.id==="WHITE_HERB"?a=v.GREAT:I.id==="LUCKY_EGG"?a=v.ULTRA:I.id==="GOLDEN_EGG"&&(a=v.ROGUE),a<v.MASTER&&a++,sI(R,PE.PLAYER,0);let r=null;for(;!r||r.type.id.includes("TM_");)r=R1(1,R,[],{guaranteedModifierTiers:[a],allowLuckUpgrades:!1})[0];A.setDialogueToken("itemName",r.type.name),mt(E,{guaranteedModifierTypeOptions:[r],fillRemaining:!1}),n.loseHeldItem(s,!1),await E.updateModifiers(!0,!0);const S=Lh();A.setDialogueToken("tradeTrainerName",S.trim()),await $t(E,`${dE}:item_trade_selected`),dt(E)}).build()).withSimpleOption({buttonLabel:`${dE}:option.4.label`,buttonTooltip:`${dE}:option.4.tooltip`,selected:[{text:`${dE}:option.4.selected`}]},async E=>(dt(E,!0),!0)).build();function PX(E){const A=new Map,s=E.getPlayerParty().map(R=>R.species);return E.getPlayerParty().forEach(R=>{if(R.species.legendary||R.species.subLegendary||R.species.mythical){const n=R.species.generation,I=hX[n].map(a=>{const r=xe(a);return new rs(E,r,5,Tt.NONE,!1)});A.set(R.id,I)}else{const n=R.calculateBaseStats().reduce((a,r)=>a+r,0),I=[];for(let a=0;a<3;a++){const r=Y6(s,n);s.push(r),I.push(r)}A.set(R.id,I.map(a=>new rs(E,a,R.level,Tt.NONE,!1)))}}),A}L(PX,"getPokemonTradeOptions");function Y6(E,A){let s,R=9999,n=0;for(A&&(R=A+100,n=A-100);Ve(s);){let I=fR.filter(a=>{const r=a.legendary||a.subLegendary||a.mythical,S=a.getBaseStatTotal(),o=S>=n&&S<=R;return!r&&o&&!cX.includes(a.speciesId)});if((I==null?void 0:I.length)>20)for(I=aO(I),s=I.pop();Ve(s)||E.includes(s);)s=I.pop();else n-=10,R+=10}return s}L(Y6,"generateTradeOption");function Nb(E){return new Promise(A=>{const s=E.add.container(0,-E.game.canvas.height/6);s.setName("Trade Background");const R=E.add.rectangle(0,0,E.game.canvas.width/6,E.game.canvas.height/6,0);R.setName("Black Background"),R.setOrigin(0,0),R.setVisible(!1),s.add(R);const n=E.add.image(0,0,"default_bg");n.setName("Trade Background Image"),n.setOrigin(0,0),s.add(n),E.fieldUI.add(s),E.fieldUI.bringToTop(s),s.setVisible(!0),s.alpha=0,E.tweens.add({targets:s,alpha:1,duration:500,ease:"Sine.easeInOut",onComplete:L(()=>{A()},"onComplete")})})}L(Nb,"showTradeBackground");function Tb(E){return new Promise(A=>{const s=E.fieldUI.getByName("Trade Background");E.tweens.add({targets:s,alpha:0,duration:1e3,ease:"Sine.easeInOut",onComplete:L(()=>{E.fieldUI.remove(s,!0),A()},"onComplete")})})}L(Tb,"hideTradeBackground");function Sb(E,A,s){return new Promise(R=>{const n=E.fieldUI.getByName("Trade Background"),I=n.getByName("Trade Background Image");let a,r,S,o;const l=L(()=>{const P=E.addPokemonSprite(A,I.displayWidth/2,I.displayHeight/2,"pkmn__sub");return P.setPipeline(E.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),P},"getPokemonSprite");n.add(a=l()),n.add(r=l()),n.add(S=l()),n.add(o=l()),a.setAlpha(0),r.setAlpha(0),r.setTintFill(bO(A.pokeball)),S.setVisible(!1),o.setVisible(!1),o.setTintFill(bO(s.pokeball)),[a,r].map(P=>{const G=A.getSpriteKey(!0);try{P.play(G)}catch(d){console.error(`Failed to play animation for ${G}`,d)}P.setPipeline(E.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:dR(A.getTeraType())}),P.setPipelineData("ignoreTimeTint",!0),P.setPipelineData("spriteKey",A.getSpriteKey()),P.setPipelineData("shiny",A.shiny),P.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(d=>{var H;(H=A.summonData)!=null&&H.speciesForm&&(d+="Base"),P.pipelineData[d]=A.getSprite().pipelineData[d]})}),[S,o].map(P=>{const G=s.getSpriteKey(!0);try{P.play(G)}catch(d){console.error(`Failed to play animation for ${G}`,d)}P.setPipeline(E.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:dR(A.getTeraType())}),P.setPipelineData("ignoreTimeTint",!0),P.setPipelineData("spriteKey",s.getSpriteKey()),P.setPipelineData("shiny",s.shiny),P.setPipelineData("variant",s.variant),["spriteColors","fusionSpriteColors"].map(d=>{var H;(H=s.summonData)!=null&&H.speciesForm&&(d+="Base"),P.pipelineData[d]=s.getSprite().pipelineData[d]})});const C=TO(A.pokeball),M=E.add.sprite(I.displayWidth/2,I.displayHeight/2,"pb",C);M.setVisible(!1),n.add(M);const u=TO(s.pokeball),h=E.add.sprite(I.displayWidth/2,I.displayHeight/2,"pb",u);h.setVisible(!1),n.add(h),E.tweens.add({targets:a,alpha:1,ease:"Cubic.easeInOut",duration:500,onComplete:L(async()=>{E.fadeOutBgm(1e3,!1),await $t(E,`${dE}:pokemon_trade_selected`),A.cry(),E.playBgm("evolution"),await $t(E,`${dE}:pokemon_trade_goodbye`),M.setAlpha(0),M.setVisible(!0),E.tweens.add({targets:M,alpha:1,ease:"Cubic.easeInOut",duration:250,onComplete:L(()=>{M.setTexture("pb",`${C}_opening`),E.time.delayedCall(17,()=>M.setTexture("pb",`${C}_open`)),E.playSound("se/pb_rel"),r.setVisible(!0),E.tweens.add({targets:[r,a],duration:500,ease:"Sine.easeIn",scale:.25,onComplete:L(()=>{a.setVisible(!1),M.setTexture("pb",`${C}_opening`),r.setVisible(!1),E.playSound("se/pb_catch"),E.time.delayedCall(17,()=>M.setTexture("pb",`${C}`)),E.tweens.add({targets:M,y:"+=10",duration:200,delay:250,ease:"Cubic.easeIn",onComplete:L(()=>{E.playSound("se/pb_bounce_1"),E.tweens.add({targets:M,y:"-=100",duration:200,delay:1e3,ease:"Cubic.easeInOut",onStart:L(()=>{E.playSound("se/pb_throw")},"onStart"),onComplete:L(async()=>{await GX(E,a,S),await HX(E,s,S,o,h,u),R()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}L(Sb,"doPokemonTradeSequence");function GX(E,A,s){return new Promise(R=>{const n=E.fieldUI.getByName("Trade Background"),I=n.getByName("Trade Background Image");n.getByName("Black Background").setVisible(!0),n.bringToTop(A),n.bringToTop(s),A.x=I.displayWidth/4,A.y=200,A.scale=1,A.setVisible(!0),s.x=I.displayWidth*3/4,s.y=-200,s.scale=1,s.setVisible(!0);const r=300,S=750,o=1e3;E.tweens.add({targets:I,alpha:0,ease:"Cubic.easeInOut",duration:r,onComplete:L(()=>{E.tweens.add({targets:[s,A],y:I.displayWidth/2-100,ease:"Cubic.easeInOut",duration:o*3,onComplete:L(()=>{E.tweens.add({targets:s,x:I.displayWidth/4,ease:"Cubic.easeInOut",duration:o/2,delay:S}),E.tweens.add({targets:A,x:I.displayWidth*3/4,ease:"Cubic.easeInOut",duration:o/2,delay:S,onComplete:L(()=>{E.tweens.add({targets:s,y:"+=200",ease:"Cubic.easeInOut",duration:o*2,delay:S}),E.tweens.add({targets:A,y:"-=200",ease:"Cubic.easeInOut",duration:o*2,delay:S,onComplete:L(()=>{E.tweens.add({targets:I,alpha:1,ease:"Cubic.easeInOut",duration:r,onComplete:L(()=>{R()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}L(GX,"doPokemonTradeFlyBySequence");function HX(E,A,s,R,n,I){return new Promise(a=>{const r=E.fieldUI.getByName("Trade Background"),S=r.getByName("Trade Background Image");s.setVisible(!1),s.x=S.displayWidth/2,s.y=S.displayHeight/2,R.setVisible(!1),R.x=S.displayWidth/2,R.y=S.displayHeight/2,n.setVisible(!0),n.x=S.displayWidth/2,n.y=S.displayHeight/2-100;let o;A.shiny&&(o=E.add.sprite(s.x,s.y,"shiny"),o.setVisible(!1),r.add(o));const l=1e3;E.playSound("se/pb_throw"),E.tweens.add({targets:n,y:"+=100",ease:"Cubic.easeInOut",duration:l,onComplete:L(()=>{E.playSound("se/pb_bounce_1"),E.time.delayedCall(100,()=>E.playSound("se/pb_bounce_1")),E.time.delayedCall(2e3,()=>{E.playSound("se/pb_rel"),E.fadeOutBgm(500,!1),A.cry(),R.scale=.25,R.alpha=1,s.setVisible(!0),s.scale=.25,R.alpha=1,R.setVisible(!0),n.setTexture("pb",`${I}_opening`),E.time.delayedCall(17,()=>n.setTexture("pb",`${I}_open`)),E.tweens.add({targets:s,duration:250,ease:"Sine.easeOut",scale:1}),E.tweens.add({targets:R,duration:250,ease:"Sine.easeOut",scale:1,alpha:0,onComplete:L(()=>{A.shiny&&E.time.delayedCall(500,()=>{IM(E,o,A.variant)}),n.destroy(),E.time.delayedCall(2e3,()=>a())},"onComplete")})})},"onComplete")})})}L(HX,"doTradeReceivedSequence");function Lh(){const E=Object.keys(FL).length;let A=FL[hA(E)+1];for(;!A;)A=FL[hA(E)+1];const s=A[hA(A.length)],n=(s instanceof Array?s[hA(s.length)]:s).split(" & ");return n[hA(n.length)]}L(Lh,"generateRandomTraderName");const EA="mysteryEncounters/theExpertPokemonBreeder",dO="trainerNames:expert_pokemon_breeder",pO=45,fO=60,WO=75,dX=20,MK=class MK{constructor(A,s){this.species=A,this.evolution=s}};L(MK,"BreederSpeciesEvolution");let gA=MK;const fX=[[e.MUNCHLAX,new gA(e.SNORLAX,fO)],[e.HAPPINY,new gA(e.CHANSEY,pO),new gA(e.BLISSEY,WO)],[e.MAGBY,new gA(e.MAGMAR,pO),new gA(e.MAGMORTAR,WO)],[e.ELEKID,new gA(e.ELECTABUZZ,pO),new gA(e.ELECTIVIRE,WO)],[e.RIOLU,new gA(e.LUCARIO,fO)],[e.BUDEW,new gA(e.ROSELIA,pO),new gA(e.ROSERADE,WO)],[e.TOXEL,new gA(e.TOXTRICITY,fO)],[e.MIME_JR,new gA(e.GALAR_MR_MIME,pO),new gA(e.MR_RIME,WO)]],BX=[[e.PICHU,new gA(e.PIKACHU,pO),new gA(e.RAICHU,WO)],[e.PICHU,new gA(e.PIKACHU,pO),new gA(e.ALOLA_RAICHU,WO)],[e.SMOOCHUM,new gA(e.JYNX,fO)],[e.TYROGUE,new gA(e.HITMONLEE,fO)],[e.TYROGUE,new gA(e.HITMONCHAN,fO)],[e.TYROGUE,new gA(e.HITMONTOP,fO)],[e.IGGLYBUFF,new gA(e.JIGGLYPUFF,pO),new gA(e.WIGGLYTUFF,WO)],[e.AZURILL,new gA(e.MARILL,pO),new gA(e.AZUMARILL,WO)],[e.WYNAUT,new gA(e.WOBBUFFET,fO)],[e.CHINGLING,new gA(e.CHIMECHO,fO)],[e.BONSLY,new gA(e.SUDOWOODO,fO)],[e.MANTYKE,new gA(e.MANTINE,fO)]],gX=FA.withEncounterType(qe.THE_EXPERT_POKEMON_BREEDER).withEncounterTier(Vt.ULTRA).withSceneWaveRangeRequirement(...xA).withScenePartySizeRequirement(4,6,!0).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${EA}:intro`},{speaker:dO,text:`${EA}:intro_dialogue`}]).withOnInit(E=>{const A=E.currentBattle.mysteryEncounter,s=E.currentBattle.waveIndex;A.enemyPartyConfigs=[KX(E)];const R=s<pO?e.CLEFFA:s<WO?e.CLEFAIRY:e.CLEFABLE;A.spriteConfigs=[{spriteKey:R.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:14,y:-2,yShadow:-2},{spriteKey:"expert_pokemon_breeder",fileRoot:"trainer",hasShadow:!0,x:-14,y:4,yShadow:2}];let n=E.getPlayerParty().slice(0);n=n.filter(d=>d.isAllowedInBattle()).sort((d,H)=>d.friendship-H.friendship);const I=n[0],a=n[1],r=n[2];A.setDialogueToken("pokemon1Name",I.getNameToRender()),A.setDialogueToken("pokemon2Name",a.getNameToRender()),A.setDialogueToken("pokemon3Name",r.getNameToRender());const[S,o]=Nh(I);let l=mA(E,`${EA}:option.1.tooltip_base`);if(o>0){const d=D.t(`${EA}:numEggs`,{count:o,rarity:D.t("egg:greatTier")});l+=D.t(`${EA}:eggs_tooltip`,{eggs:d}),A.setDialogueToken("pokemon1RareEggs",d)}if(S>0){const d=D.t(`${EA}:numEggs`,{count:S,rarity:D.t("egg:defaultTier")});l+=D.t(`${EA}:eggs_tooltip`,{eggs:d}),A.setDialogueToken("pokemon1CommonEggs",d)}A.options[0].dialogue.buttonTooltip=l;const[C,M]=Nh(a);let u=mA(E,`${EA}:option.2.tooltip_base`);if(M>0){const d=D.t(`${EA}:numEggs`,{count:M,rarity:D.t("egg:greatTier")});u+=D.t(`${EA}:eggs_tooltip`,{eggs:d}),A.setDialogueToken("pokemon2RareEggs",d)}if(C>0){const d=D.t(`${EA}:numEggs`,{count:C,rarity:D.t("egg:defaultTier")});u+=D.t(`${EA}:eggs_tooltip`,{eggs:d}),A.setDialogueToken("pokemon2CommonEggs",d)}A.options[1].dialogue.buttonTooltip=u;const[h,P]=Nh(r);let G=mA(E,`${EA}:option.3.tooltip_base`);if(P>0){const d=D.t(`${EA}:numEggs`,{count:P,rarity:D.t("egg:greatTier")});G+=D.t(`${EA}:eggs_tooltip`,{eggs:d}),A.setDialogueToken("pokemon3RareEggs",d)}if(h>0){const d=D.t(`${EA}:numEggs`,{count:h,rarity:D.t("egg:defaultTier")});G+=D.t(`${EA}:eggs_tooltip`,{eggs:d}),A.setDialogueToken("pokemon3CommonEggs",d)}return A.options[2].dialogue.buttonTooltip=G,A.misc={pokemon1:I,pokemon1CommonEggs:S,pokemon1RareEggs:o,pokemon2:a,pokemon2CommonEggs:C,pokemon2RareEggs:M,pokemon3:r,pokemon3CommonEggs:h,pokemon3RareEggs:P},!0}).setLocalizationKey(`${EA}`).withTitle(`${EA}:title`).withDescription(`${EA}:description`).withQuery(`${EA}:query`).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EA}:option.1.label`,selected:[{speaker:dO,text:`${EA}:option.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0],{pokemon1:R,pokemon1CommonEggs:n,pokemon1RareEggs:I}=A.misc;A.misc.chosenPokemon=R,A.setDialogueToken("chosenPokemon",R.getNameToRender());const a=Th(E,n,I);mt(E,{guaranteedModifierTypeFuncs:[$.SOOTHE_BELL],fillRemaining:!0},a,()=>lh(E)),Sh(E,A,R),A.dialogue.outro=[{speaker:dO,text:`${EA}:outro`}],A.dialogueTokens.hasOwnProperty("pokemon1CommonEggs")&&A.dialogue.outro.push({text:D.t(`${EA}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon1CommonEggs})}),A.dialogueTokens.hasOwnProperty("pokemon1RareEggs")&&A.dialogue.outro.push({text:D.t(`${EA}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon1RareEggs})}),A.onGameOver=oh,await $A(E,s)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EA}:option.2.label`,selected:[{speaker:dO,text:`${EA}:option.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0],{pokemon2:R,pokemon2CommonEggs:n,pokemon2RareEggs:I}=A.misc;A.misc.chosenPokemon=R,A.setDialogueToken("chosenPokemon",R.getNameToRender());const a=Th(E,n,I);mt(E,{guaranteedModifierTypeFuncs:[$.SOOTHE_BELL],fillRemaining:!0},a,()=>lh(E)),Sh(E,A,R),A.dialogue.outro=[{speaker:dO,text:`${EA}:outro`}],A.dialogueTokens.hasOwnProperty("pokemon2CommonEggs")&&A.dialogue.outro.push({text:D.t(`${EA}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon2CommonEggs})}),A.dialogueTokens.hasOwnProperty("pokemon2RareEggs")&&A.dialogue.outro.push({text:D.t(`${EA}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon2RareEggs})}),A.onGameOver=oh,await $A(E,s)}).build()).withOption(Ft.newOptionWithMode(ct.DEFAULT).withDialogue({buttonLabel:`${EA}:option.3.label`,selected:[{speaker:dO,text:`${EA}:option.selected`}]}).withOptionPhase(async E=>{const A=E.currentBattle.mysteryEncounter,s=A.enemyPartyConfigs[0],{pokemon3:R,pokemon3CommonEggs:n,pokemon3RareEggs:I}=A.misc;A.misc.chosenPokemon=R,A.setDialogueToken("chosenPokemon",R.getNameToRender());const a=Th(E,n,I);mt(E,{guaranteedModifierTypeFuncs:[$.SOOTHE_BELL],fillRemaining:!0},a,()=>lh(E)),Sh(E,A,R),A.dialogue.outro=[{speaker:dO,text:`${EA}:outro`}],A.dialogueTokens.hasOwnProperty("pokemon3CommonEggs")&&A.dialogue.outro.push({text:D.t(`${EA}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon3CommonEggs})}),A.dialogueTokens.hasOwnProperty("pokemon3RareEggs")&&A.dialogue.outro.push({text:D.t(`${EA}:gained_eggs`,{numEggs:A.dialogueTokens.pokemon3RareEggs})}),A.onGameOver=oh,await $A(E,s)}).build()).withOutroDialogue([{speaker:dO,text:`${EA}:outro`}]).build();function KX(E){const A=E.currentBattle.waveIndex,s=ZA[U.EXPERT_POKEMON_BREEDER].clone();s.name=D.t(dO);const R=A<pO?e.CLEFFA:A<WO?e.CLEFAIRY:e.CLEFABLE,n={trainerType:U.EXPERT_POKEMON_BREEDER,pokemonConfigs:[{nickname:D.t(`${EA}:cleffa_1_nickname`,{speciesName:xe(R).getName()}),species:xe(R),isBoss:!1,abilityIndex:1,shiny:!1,nature:At.ADAMANT,moveSet:[t.METEOR_MASH,t.FIRE_PUNCH,t.ICE_PUNCH,t.THUNDER_PUNCH],ivs:[31,31,31,31,31,31],modifierConfigs:[{modifier:gt(E,$.TERA_SHARD,[i.STEEL])}]}]};if(E.arena.biomeType===N.SPACE)n.pokemonConfigs.push({nickname:D.t(`${EA}:cleffa_2_nickname`,{speciesName:xe(R).getName()}),species:xe(R),isBoss:!1,abilityIndex:1,shiny:!0,variant:1,nature:At.MODEST,moveSet:[t.MOONBLAST,t.MYSTICAL_FIRE,t.ICE_BEAM,t.THUNDERBOLT],ivs:[31,31,31,31,31,31]},{nickname:D.t(`${EA}:cleffa_3_nickname`,{speciesName:xe(R).getName()}),species:xe(R),isBoss:!1,abilityIndex:2,shiny:!0,variant:2,nature:At.BOLD,moveSet:[t.TRI_ATTACK,t.STORED_POWER,t.TAKE_HEART,t.MOONLIGHT],ivs:[31,31,31,31,31,31]});else{const I=ob(fX,A),a=ob(BX,A);n.pokemonConfigs.push({species:xe(I),isBoss:!1,ivs:[31,31,31,31,31,31]},{species:xe(a),isBoss:!1,ivs:[31,31,31,31,31,31]})}return n}L(KX,"getPartyConfig");function ob(E,A){const R=aO(E.slice(0)).pop().slice(0);let n=R.pop();for(;n instanceof gA&&n.evolution>A;)n=R.pop();return n instanceof gA?n.species:n}L(ob,"getSpeciesFromPool");function Nh(E){const A=E.calculateBaseStats().reduce((S,o)=>S+o,0),s=Math.min(Math.max(Math.floor((680-A)/20),1),18),R=E.species.getRootSpeciesId();let n=0;if(KA.hasOwnProperty(R)){const S=KA[R];n=Math.min(Math.max(Math.floor(7-S)*2,0),12)}let I=Math.min(n+s,30),a=Math.min(I,5);I-=a;const r=Math.floor(I/4);return a+=I%4,[a,r]}L(Nh,"calculateEggRewardsForPokemon");function Th(E,A,s){const R=D.t(`${EA}:title`)+`:
`+D.t(dO),n=[];if(A>0)for(let I=0;I<A;I++)n.push({scene:E,pulled:!1,sourceType:pE.EVENT,eggDescriptor:R,tier:m.COMMON});if(s>0)for(let I=0;I<s;I++)n.push({scene:E,pulled:!1,sourceType:pE.EVENT,eggDescriptor:R,tier:m.RARE});return n}L(Th,"getEggOptions");function Sh(E,A,s){const R=E.getPlayerParty(),n=R.indexOf(s);R[n]=R[0],R[0]=s,A.misc.originalParty=E.getPlayerParty().slice(1),A.misc.originalPartyHeldItems=A.misc.originalParty.map(I=>I.getHeldItems()),E.party=[s]}L(Sh,"removePokemonFromPartyAndStoreHeldItems");function y6(E){const A=E.currentBattle.mysteryEncounter;E.getPlayerParty().push(...A.misc.originalParty),A.misc.originalPartyHeldItems.forEach(R=>{R.forEach(n=>{E.addModifier(n,!0,!1,!1,!0)})}),E.updateModifiers(!0)}L(y6,"restorePartyAndHeldItems");function oh(E){const A=E.currentBattle.mysteryEncounter;A.dialogue.outro=[{speaker:dO,text:`${EA}:outro_failed`}],y6(E);const s=A.misc.chosenPokemon;s.friendship=0,A.doEncounterRewards=void 0,A.misc.encounterFailed=!0,E.playBgm(E.arena.bgm),E.clearPhaseQueue(),E.clearPhaseQueueSplice();const R=E.getEnemyPokemon();return R&&(E.playSound("se/pb_rel"),R.hideInfo(),R.tint(bO(R.pokeball),1,250,"Sine.easeIn"),E.tweens.add({targets:R,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:L(()=>{E.field.remove(R,!0)},"onComplete")})),E.time.delayedCall(250,()=>{var a,r;const n=(a=E.currentBattle.trainer)==null?void 0:a.getSprites(),I=(r=E.currentBattle.trainer)==null?void 0:r.getTintSprites();if(n&&I)for(let S=0;S<n.length;S++)n[S].setVisible(!0),I[S].setVisible(!0),n[S].clearTint(),I[S].clearTint();E.tweens.add({targets:E.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}),hZ(E,!0),!1}L(oh,"onGameOver");function lh(E){const A=E.currentBattle.mysteryEncounter;A.misc.encounterFailed||(A.misc.chosenPokemon.addFriendship(dX),y6(E))}L(lh,"doPostEncounterCleanup");const w6=3,Ch=256,mX=3,FX=12,pX=15,WX=[N.SEA,N.SEABED,N.BADLANDS,N.DESERT,N.ICE_CAVE,N.VOLCANO,N.WASTELAND,N.ABYSS,N.SPACE,N.END],YX=[N.TOWN,N.PLAINS,N.GRASS,N.TALL_GRASS,N.METROPOLIS,N.FOREST,N.SWAMP,N.BEACH,N.LAKE,N.MOUNTAIN,N.CAVE,N.MEADOW,N.POWER_PLANT,N.GRAVEYARD,N.DOJO,N.FACTORY,N.RUINS,N.CONSTRUCTION_SITE,N.JUNGLE,N.FAIRY_CAVE,N.TEMPLE,N.SLUM,N.SNOWY_FOREST,N.ISLAND,N.LABORATORY],yX=[N.TOWN,N.PLAINS,N.GRASS,N.TALL_GRASS,N.METROPOLIS,N.FOREST,N.SWAMP,N.BEACH,N.LAKE,N.MOUNTAIN,N.BADLANDS,N.CAVE,N.DESERT,N.ICE_CAVE,N.MEADOW,N.POWER_PLANT,N.GRAVEYARD,N.DOJO,N.FACTORY,N.RUINS,N.CONSTRUCTION_SITE,N.JUNGLE,N.FAIRY_CAVE,N.TEMPLE,N.SLUM,N.SNOWY_FOREST,N.ISLAND,N.LABORATORY],wX=[N.TOWN,N.PLAINS,N.GRASS,N.TALL_GRASS,N.METROPOLIS,N.BEACH,N.LAKE,N.MEADOW,N.POWER_PLANT,N.GRAVEYARD,N.DOJO,N.FACTORY,N.CONSTRUCTION_SITE,N.SLUM,N.ISLAND],nA={},vX=[],VX=[qe.DANCING_LESSONS],xX=[qe.MYSTERIOUS_CHALLENGERS,qe.SHADY_VITAMIN_DEALER,qe.THE_POKEMON_SALESMAN,qe.THE_WINSTRATE_CHALLENGE,qe.THE_EXPERT_POKEMON_BREEDER],bX=[qe.FUN_AND_GAMES,qe.GLOBAL_TRADE_SYSTEM],kX=[qe.FIGHT_OR_FLIGHT,qe.DARK_DEAL,qe.MYSTERIOUS_CHEST,qe.TRAINING_SESSION,qe.DELIBIRDY,qe.A_TRAINERS_TEST,qe.TRASH_TO_TREASURE,qe.BERRIES_ABOUND,qe.CLOWNING_AROUND,qe.WEIRD_DREAM,qe.TELEPORTING_HIJINKS,qe.BUG_TYPE_SUPERFAN,qe.UNCOMMON_BREED],ga=new Map([[N.TOWN,[]],[N.PLAINS,[qe.SLUMBERING_SNORLAX,qe.ABSOLUTE_AVARICE]],[N.GRASS,[qe.SLUMBERING_SNORLAX,qe.ABSOLUTE_AVARICE]],[N.TALL_GRASS,[qe.ABSOLUTE_AVARICE]],[N.METROPOLIS,[]],[N.FOREST,[qe.SAFARI_ZONE,qe.ABSOLUTE_AVARICE]],[N.SEA,[qe.LOST_AT_SEA]],[N.SWAMP,[qe.SAFARI_ZONE]],[N.BEACH,[]],[N.LAKE,[]],[N.SEABED,[]],[N.MOUNTAIN,[]],[N.BADLANDS,[qe.DANCING_LESSONS]],[N.CAVE,[qe.THE_STRONG_STUFF]],[N.DESERT,[qe.DANCING_LESSONS]],[N.ICE_CAVE,[]],[N.MEADOW,[]],[N.POWER_PLANT,[]],[N.VOLCANO,[qe.FIERY_FALLOUT,qe.DANCING_LESSONS]],[N.GRAVEYARD,[]],[N.DOJO,[]],[N.FACTORY,[]],[N.RUINS,[]],[N.WASTELAND,[qe.DANCING_LESSONS]],[N.ABYSS,[qe.DANCING_LESSONS]],[N.SPACE,[qe.THE_EXPERT_POKEMON_BREEDER]],[N.CONSTRUCTION_SITE,[]],[N.JUNGLE,[qe.SAFARI_ZONE]],[N.FAIRY_CAVE,[]],[N.TEMPLE,[]],[N.SLUM,[]],[N.SNOWY_FOREST,[]],[N.ISLAND,[]],[N.LABORATORY,[]]]);function ZX(){nA[qe.MYSTERIOUS_CHALLENGERS]=XZ,nA[qe.MYSTERIOUS_CHEST]=QZ,nA[qe.DARK_DEAL]=yZ,nA[qe.FIGHT_OR_FLIGHT]=kZ,nA[qe.TRAINING_SESSION]=qZ,nA[qe.SLUMBERING_SNORLAX]=zZ,nA[qe.DEPARTMENT_STORE_SALE]=wZ,nA[qe.SHADY_VITAMIN_DEALER]=$Z,nA[qe.FIELD_TRIP]=vZ,nA[qe.SAFARI_ZONE]=jZ,nA[qe.LOST_AT_SEA]=ZZ,nA[qe.FIERY_FALLOUT]=O9,nA[qe.THE_STRONG_STUFF]=n9,nA[qe.THE_POKEMON_SALESMAN]=I9,nA[qe.AN_OFFER_YOU_CANT_REFUSE]=L9,nA[qe.DELIBIRDY]=N9,nA[qe.ABSOLUTE_AVARICE]=T9,nA[qe.A_TRAINERS_TEST]=C9,nA[qe.TRASH_TO_TREASURE]=U9,nA[qe.BERRIES_ABOUND]=M9,nA[qe.CLOWNING_AROUND]=h9,nA[qe.PART_TIMER]=P9,nA[qe.DANCING_LESSONS]=m9,nA[qe.WEIRD_DREAM]=b9,nA[qe.THE_WINSTRATE_CHALLENGE]=j9,nA[qe.TELEPORTING_HIJINKS]=iX,nA[qe.BUG_TYPE_SUPERFAN]=rX,nA[qe.FUN_AND_GAMES]=TX,nA[qe.UNCOMMON_BREED]=uX,nA[qe.GLOBAL_TRADE_SYSTEM]=_X,nA[qe.THE_EXPERT_POKEMON_BREEDER]=gX,vX.forEach(A=>{WX.forEach(s=>{const R=ga.get(s);R&&!R.includes(A)&&R.push(A)})}),VX.forEach(A=>{YX.forEach(s=>{const R=ga.get(s);R&&!R.includes(A)&&R.push(A)})}),xX.forEach(A=>{yX.forEach(s=>{const R=ga.get(s);R&&!R.includes(A)&&R.push(A)})}),bX.forEach(A=>{wX.forEach(s=>{const R=ga.get(s);R&&!R.includes(A)&&R.push(A)})});let E="";ga.forEach((A,s)=>{kX.forEach(R=>{A.includes(R)||A.push(R)}),E+=`${RL(s).toUpperCase()}: [${A.map(R=>qe[R].toString().toLowerCase()).sort().join(", ")}]
`})}L(ZX,"initMysteryEncounters");const hK=class hK{constructor(A,s,R,n){this.type=A,this.tier=s,this.waveIndex=R,this.selectedOption=n??-1}};L(hK,"SeenEncounterData");let r0=hK;const cK=class cK{constructor(A){this.encounteredEvents=[],this.encounterSpawnChance=w6,this.queuedEncounters=[],Ve(A)||Object.assign(this,A),this.encounteredEvents=this.encounteredEvents??[],this.queuedEncounters=this.queuedEncounters??[]}};L(cK,"MysteryEncounterSaveData");let dr=cK;const cI=[e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],DC="x0i2O7WRiANTqPmZ";function Ha(E,A=0){switch(E){case UE.SYSTEM:return"data";case UE.SESSION:let s="sessionData";return A&&(s+=A),s;case UE.SETTINGS:return"settings";case UE.TUTORIALS:return"tutorials";case UE.SEEN_DIALOGUES:return"seenDialogues";case UE.RUN_HISTORY:return"runHistoryData"}}L(Ha,"getDataTypeKey");function da(E,A){return(A?s=>btoa(s):s=>sr.AES.encrypt(s,DC))(E)}L(da,"encrypt");function nI(E,A){return(A?s=>atob(s):s=>sr.AES.decrypt(s,DC).toString(sr.enc.Utf8))(E)}L(nI,"decrypt");const Ze={NON_SHINY:1n,SHINY:2n,MALE:4n,FEMALE:8n,DEFAULT_VARIANT:16n,VARIANT_2:32n,VARIANT_3:64n,DEFAULT_FORM:128n},Cs={ABILITY_1:1,ABILITY_2:2,ABILITY_HIDDEN:4},v6="{}";let Uh=v6;const _K=class _K{static load(){return JSON.parse(Uh=localStorage.getItem(`starterPrefs_${rt==null?void 0:rt.username}`)||v6)}static save(A){const s=JSON.stringify(A);s!==Uh&&(localStorage.setItem(`starterPrefs_${rt==null?void 0:rt.username}`,s),Uh=s)}};L(_K,"StarterPrefs");let MC=_K;const zo={seenAttr:"$sa",caughtAttr:"$ca",natureAttr:"$na",seenCount:"$s",caughtCount:"$c",hatchedCount:"$hc",ivs:"$i",moveset:"$m",eggMoves:"$em",candyCount:"$x",friendship:"$f",abilityAttr:"$a",passiveAttr:"$pa",valueReduction:"$vr",classicWinCount:"$wc"},PK=class PK{constructor(A){this.scene=A,this.loadSettings(),this.loadGamepadSettings(),this.loadMappingConfigs(),this.trainerId=hA(65536),this.secretId=hA(65536),this.starterData={},this.gameStats=new ql,this.runHistory={},this.unlocks={[ms.ENDLESS_MODE]:!1,[ms.MINI_BLACK_HOLE]:!1,[ms.SPLICED_ENDLESS_MODE]:!1,[ms.EVIOLITE]:!1},this.achvUnlocks={},this.voucherUnlocks={},this.voucherCounts={[aE.REGULAR]:0,[aE.PLUS]:0,[aE.PREMIUM]:0,[aE.GOLDEN]:0},this.eggs=[],this.eggPity=[0,0,0,0],this.unlockPity=[0,0,0,0],this.initDexData(),this.initStarterData()}getSystemSaveData(){return{trainerId:this.trainerId,secretId:this.secretId,gender:this.gender,dexData:this.dexData,starterData:this.starterData,gameStats:this.gameStats,unlocks:this.unlocks,achvUnlocks:this.achvUnlocks,voucherUnlocks:this.voucherUnlocks,voucherCounts:this.voucherCounts,eggs:this.eggs.map(A=>new zl(A)),gameVersion:this.scene.game.config.gameVersion,timestamp:new Date().getTime(),eggPity:this.eggPity.slice(0),unlockPity:this.unlockPity.slice(0)}}isUnlocked(A){return Ye.ITEM_UNLOCK_OVERRIDE.includes(A)?!0:this.unlocks[A]}saveSystem(){return new Promise(A=>{this.scene.ui.savingIcon.show();const s=this.getSystemSaveData(),R=2147483648,n=JSON.stringify(s,(I,a)=>typeof a=="bigint"?a<=R?Number(a):a.toString():a);localStorage.setItem(`data_${rt==null?void 0:rt.username}`,da(n,Ss)),this.scene.ui.savingIcon.hide(),A(!0)})}loadSystem(){return new Promise(A=>{if(console.log("Client Session:",fc),!localStorage.getItem(`data_${rt==null?void 0:rt.username}`))return A(!1);this.initSystem(nI(localStorage.getItem(`data_${rt==null?void 0:rt.username}`),Ss)).then(A)})}initSystem(A,s){return new Promise(R=>{try{let n=this.parseSystemData(A);if(s){const r=this.parseSystemData(s);r.timestamp>n.timestamp?(console.debug("Use cached system"),n=r,A=s):this.clearLocalData()}console.debug(n),localStorage.setItem(`data_${rt==null?void 0:rt.username}`,da(A,Ss));const I=`runHistoryData_${rt==null?void 0:rt.username}`;if(localStorage.getItem(I)||localStorage.setItem(I,""),LZ(n),this.trainerId=n.trainerId,this.secretId=n.secretId,this.gender=n.gender,this.saveSetting(It.Player_Gender,n.gender===vt.FEMALE?1:0),n.starterData)this.starterData=n.starterData;else{if(this.initStarterData(),n.starterMoveData){const S=n.starterMoveData;for(const o of Object.keys(S))this.starterData[o].moveset=S[o]}if(n.starterEggMoveData){const S=n.starterEggMoveData;for(const o of Object.keys(S))this.starterData[o].eggMoves=S[o]}this.migrateStarterAbilities(n,this.starterData);const r=Object.keys(this.starterData).map(S=>parseInt(S));for(const S of r)this.starterData[S].candyCount+=n.dexData[S].caughtCount,this.starterData[S].candyCount+=n.dexData[S].hatchedCount*2,n.dexData[S].caughtAttr&Ze.SHINY&&(this.starterData[S].candyCount+=4)}if(n.gameStats&&(this.gameStats=n.gameStats),n.unlocks)for(const r of Object.keys(n.unlocks))this.unlocks.hasOwnProperty(r)&&(this.unlocks[r]=n.unlocks[r]);if(n.achvUnlocks)for(const r of Object.keys(n.achvUnlocks))lt.hasOwnProperty(r)&&(this.achvUnlocks[r]=n.achvUnlocks[r]);if(n.voucherUnlocks)for(const r of Object.keys(n.voucherUnlocks))Ms.hasOwnProperty(r)&&(this.voucherUnlocks[r]=n.voucherUnlocks[r]);n.voucherCounts&&IO(aE).forEach(r=>{const S=aE[r];this.voucherCounts[S]=n.voucherCounts[S]||0}),this.eggs=n.eggs?n.eggs.map(r=>r.toEgg()):[],this.eggPity=n.eggPity?n.eggPity.slice(0):[0,0,0,0],this.unlockPity=n.unlockPity?n.unlockPity.slice(0):[0,0,0,0],this.dexData=Object.assign(this.dexData,n.dexData),this.consolidateDexData(this.dexData),this.defaultDexData=null,R(!0)}catch(n){console.error(n),R(!1)}})}async getRunHistoryData(A){if(qa){const s=`runHistoryData_${rt==null?void 0:rt.username}`,R=localStorage.getItem(s);if(R){const n=R;return n?JSON.parse(nI(n,Ss)):{}}else return localStorage.setItem(`runHistoryData_${rt==null?void 0:rt.username}`,""),{}}else{const s=`runHistoryData_${rt==null?void 0:rt.username}`,R=localStorage.getItem(s);if(R){const n=R;return n?JSON.parse(nI(n,Ss)):{}}else return localStorage.setItem(`runHistoryData_${rt==null?void 0:rt.username}`,""),{}}}async saveRunHistory(A,s,R){const n=await this.getRunHistoryData(A);let I=Object.keys(n).map(Number);for(;I.length>=RZ;){const r=Math.min.apply(Math,I).toString();delete n[r],I=Object.keys(n).map(Number)}const a=s.timestamp.toString();return n[a]={entry:s,isVictory:R,isFavorite:!1},localStorage.setItem(`runHistoryData_${rt==null?void 0:rt.username}`,da(JSON.stringify(n),Ss)),!0}parseSystemData(A){return JSON.parse(A,(s,R)=>{if(s==="gameStats")return new ql(R);if(s==="eggs"){const n=[];R===null&&(R=[]);for(const I of R)n.push(new zl(I));return n}return s.endsWith("Attr")&&!["natureAttr","abilityAttr","passiveAttr"].includes(s)?BigInt(R??0):R})}convertSystemDataStr(A,s=!1){s||(A=A.replace(/\$pAttr/g,"$pa")),A=A.replace(/"trainerId":\d+/g,`"trainerId":${this.trainerId}`),A=A.replace(/"secretId":\d+/g,`"secretId":${this.secretId}`);const R=s?Object.keys(zo):Object.values(zo),n=s?Object.values(zo):Object.keys(zo);for(const I in R)A=A.replace(new RegExp(`${R[I].replace("$","\\$")}`,"g"),n[I]);return A}async verify(){return!0}clearLocalData(){}saveSetting(A,s){let R={};return localStorage.hasOwnProperty("settings")&&(R=JSON.parse(localStorage.getItem("settings"))),Hc(this.scene,A,s),R[A]=s,R.gameVersion=this.scene.game.config.gameVersion,localStorage.setItem("settings",JSON.stringify(R)),!0}saveMappingConfigs(A,s){const R=A.toLowerCase();let n={};return localStorage.hasOwnProperty("mappingConfigs")&&(n=JSON.parse(localStorage.getItem("mappingConfigs"))),n[R]||(n[R]={}),n[R].custom=s.custom,localStorage.setItem("mappingConfigs",JSON.stringify(n)),!0}loadMappingConfigs(){if(!localStorage.hasOwnProperty("mappingConfigs"))return!1;const A=JSON.parse(localStorage.getItem("mappingConfigs"));for(const s of Object.keys(A))this.scene.inputController.injectConfig(s,A[s]);return!0}resetMappingToFactory(){return localStorage.hasOwnProperty("mappingConfigs")?(localStorage.removeItem("mappingConfigs"),this.scene.inputController.resetConfigs(),!0):!1}saveControlSetting(A,s,R,n,I){let a={};return localStorage.hasOwnProperty(s)&&(a=JSON.parse(localStorage.getItem(s))),A===iA.GAMEPAD?Nl(this.scene,R,I):A===iA.KEYBOARD&&o6(this.scene,R,I),Object.keys(n).forEach(r=>{r===R&&(a[r]=I)}),localStorage.setItem(s,JSON.stringify(a)),!0}loadSettings(){if(Ek(this.scene),!localStorage.hasOwnProperty("settings"))return!1;const A=JSON.parse(localStorage.getItem("settings"));TZ(A);for(const s of Object.keys(A))Hc(this.scene,s,A[s]);return!0}loadGamepadSettings(){if(Object.values(fe).map(s=>s).forEach(s=>Nl(this.scene,s,C6[s])),!localStorage.hasOwnProperty("settingsGamepad"))return!1;const A=JSON.parse(localStorage.getItem("settingsGamepad"));for(const s of Object.keys(A))Nl(this.scene,s,A[s]);return!0}saveTutorialFlag(A,s){const R=Ha(UE.TUTORIALS);let n={};return localStorage.hasOwnProperty(R)&&(n=JSON.parse(localStorage.getItem(R))),Object.keys(JR).map(I=>I).forEach(I=>{const a=JR[I];a===A?n[a]=s:n[a]??(n[a]=!1)}),localStorage.setItem(R,JSON.stringify(n)),!0}getTutorialFlags(){const A=Ha(UE.TUTORIALS),s={};if(Object.values(JR).map(n=>n).forEach(n=>s[JR[n]]=!1),!localStorage.hasOwnProperty(A))return s;const R=JSON.parse(localStorage.getItem(A));for(const n of Object.keys(R))s[n]=R[n];return s}saveSeenDialogue(A){const s=Ha(UE.SEEN_DIALOGUES),R=this.getSeenDialogues();return R[A]=!0,localStorage.setItem(s,JSON.stringify(R)),console.log("Dialogue saved as seen:",A),!0}getSeenDialogues(){const A=Ha(UE.SEEN_DIALOGUES),s={};if(!localStorage.hasOwnProperty(A))return s;const R=JSON.parse(localStorage.getItem(A));for(const n of Object.keys(R))s[n]=R[n];return s}getSessionSaveData(A){var s;return{seed:A.seed,playTime:A.sessionPlayTime,gameMode:A.gameMode.modeId,party:A.getPlayerParty().map(R=>new cs(R)),enemyParty:A.getEnemyParty().map(R=>new cs(R)),modifiers:A.findModifiers(()=>!0).map(R=>new mI(R,!0)),enemyModifiers:A.findModifiers(()=>!0,!1).map(R=>new mI(R,!1)),arena:new pT(A.arena),pokeballCounts:A.pokeballCounts,money:Math.floor(A.money),score:A.score,waveIndex:A.currentBattle.waveIndex,battleType:A.currentBattle.battleType,trainer:A.currentBattle.battleType===ht.TRAINER?new WT(A.currentBattle.trainer):null,gameVersion:A.game.config.gameVersion,timestamp:new Date().getTime(),challenges:A.gameMode.challenges.map(R=>new wT(R)),mysteryEncounterType:((s=A.currentBattle.mysteryEncounter)==null?void 0:s.encounterType)??-1,mysteryEncounterSaveData:A.mysteryEncounterSaveData}}getSession(A){return new Promise(async(s,R)=>{if(A<0)return s(null);const n=L(async I=>{try{const a=this.parseSessionData(I);s(a)}catch(a){R(a);return}},"handleSessionData");{const I=localStorage.getItem(`sessionData${A||""}_${rt==null?void 0:rt.username}`);if(I)await n(nI(I,Ss));else return s(null)}})}loadSession(A,s,R){return new Promise(async(n,I)=>{try{const a=L(async r=>{var h,P,G,d,H;console.debug(r),A.gameMode=dl(r.gameMode||SA.CLASSIC),r.challenges&&(A.gameMode.challenges=r.challenges.map(f=>f.toChallenge())),A.setSeed(r.seed||A.game.config.seed[0]),A.resetSeed(),console.log("Seed:",A.seed),A.sessionPlayTime=r.playTime||0,A.lastSavePlayTime=0;const S=[],o=A.getPlayerParty();o.splice(0,o.length);for(const f of r.party){const K=f.toPokemon(A);K.setVisible(!1),S.push(K.loadAssets()),o.push(K)}Object.keys(A.pokeballCounts).forEach(f=>{A.pokeballCounts[f]=r.pokeballCounts[f]||0}),Ye.POKEBALL_OVERRIDE.active&&(A.pokeballCounts=Ye.POKEBALL_OVERRIDE.pokeballs),A.money=Math.floor(r.money||0),A.updateMoneyText(),A.money>this.gameStats.highestMoney&&(this.gameStats.highestMoney=A.money),A.score=r.score,A.updateScoreText(),A.mysteryEncounterSaveData=new dr(r.mysteryEncounterSaveData),A.newArena(r.arena.biome);const l=r.battleType||0,C=r.trainer?ZA[r.trainer.trainerType]:null,M=r.mysteryEncounterType!==-1?r.mysteryEncounterType:void 0,u=A.newBattle(r.waveIndex,l,r.trainer,l===ht.TRAINER?(C==null?void 0:C.doubleOnly)||((h=r.trainer)==null?void 0:h.variant)===OA.DOUBLE:r.enemyParty.length>1,M);if(u.enemyLevels=r.enemyParty.map(f=>f.level),A.arena.init(),r.enemyParty.forEach((f,K)=>{var V;const W=f.toPokemon(A,l,K,((V=r.trainer)==null?void 0:V.variant)===OA.DOUBLE);u.enemyParty[K]=W,l===ht.WILD&&u.seenEnemyPartyMemberIds.add(W.id),S.push(W.loadAssets())}),A.arena.weather=r.arena.weather,A.arena.eventTarget.dispatchEvent(new Hi(se.NONE,(P=A.arena.weather)==null?void 0:P.weatherType,(G=A.arena.weather)==null?void 0:G.turnsLeft)),A.arena.terrain=r.arena.terrain,A.arena.eventTarget.dispatchEvent(new yT(Nt.NONE,(d=A.arena.terrain)==null?void 0:d.terrainType,(H=A.arena.terrain)==null?void 0:H.turnsLeft)),A.arena.tags=r.arena.tags,A.arena.tags)for(const f of A.arena.tags)if(f instanceof eO){const{tagType:K,side:W,turnCount:V,layers:k,maxLayers:Q}=f;A.arena.eventTarget.dispatchEvent(new XI(K,W,V,k,Q))}else A.arena.eventTarget.dispatchEvent(new XI(f.tagType,f.side,f.turnCount));for(const f of r.modifiers){const K=f.toModifier(A,Ul[f.className]);K&&A.addModifier(K,!0)}A.updateModifiers(!0);for(const f of r.enemyModifiers){const K=f.toModifier(A,Ul[f.className]);K&&A.addEnemyModifier(K,!0)}A.updateModifiers(!1),Promise.all(S).then(()=>n(!0))},"initSessionFromData");R?a(R):this.getSession(s).then(r=>r&&a(r)).catch(r=>{I(r)})}catch(a){I(a);return}})}deleteSession(A){return new Promise(s=>(localStorage.removeItem(`sessionData${A||""}_${rt==null?void 0:rt.username}`),s(!0)))}offlineNewClear(A){return new Promise(s=>{const R=this.getSessionSaveData(A),n=R.seed;let I=[];return R.gameMode===SA.DAILY?localStorage.hasOwnProperty("daily")?(I=JSON.parse(atob(localStorage.getItem("daily"))),I.includes(n)?s(!1):(I.push(n),localStorage.setItem("daily",btoa(JSON.stringify(I))),s(!0))):(I.push(n),localStorage.setItem("daily",btoa(JSON.stringify(I))),s(!0)):s(!0)})}async tryClearSession(A,s){let R=[!1,!1];return localStorage.removeItem(`sessionData${s||""}_${rt==null?void 0:rt.username}`),R=[!0,!0],await pI(),R}parseSessionData(A){const s=JSON.parse(A,(R,n)=>{if(R==="party"||R==="enemyParty"){const I=[];n===null&&(n=[]);for(const a of n)I.push(new cs(a));return I}if(R==="trainer")return n?new WT(n):null;if(R==="modifiers"||R==="enemyModifiers"){const I=R==="modifiers",a=[];n===null&&(n=[]);for(const r of n)(r==null?void 0:r.className)==="ExpBalanceModifier"&&(r.stackCount=Math.min(r.stackCount,4)),!(r instanceof sL&&r.effect===Re.FREEZE||r.effect===Re.SLEEP)&&a.push(new mI(r,I));return a}if(R==="arena")return new pT(n);if(R==="challenges"){const I=[];n===null&&(n=[]);for(const a of n)I.push(new wT(a));return I}return R==="mysteryEncounterType"?n:R==="mysteryEncounterSaveData"?new dr(n):n});return NZ(s),s}saveAll(A,s=!1,R=!1,n=!1,I=!1){return new Promise(a=>{lr(!s,pI).then(r=>{if(r!==null&&!r)return a(!1);R&&this.scene.ui.savingIcon.show();const S=n?this.parseSessionData(nI(localStorage.getItem(`sessionData${A.sessionSlotId?A.sessionSlotId:""}_${rt==null?void 0:rt.username}`),Ss)):this.getSessionSaveData(A),o=2147483648,l=I?this.parseSystemData(nI(localStorage.getItem(`data_${rt==null?void 0:rt.username}`),Ss)):this.getSystemSaveData();A.sessionSlotId,localStorage.setItem(`data_${rt==null?void 0:rt.username}`,da(JSON.stringify(l,(C,M)=>typeof M=="bigint"?M<=o?Number(M):M.toString():M),Ss)),localStorage.setItem(`sessionData${A.sessionSlotId?A.sessionSlotId:""}_${rt==null?void 0:rt.username}`,da(JSON.stringify(S),Ss)),console.debug("Session data saved"),this.verify().then(C=>{this.scene.ui.savingIcon.hide(),a(C)})})})}tryExportData(A,s=0){return new Promise(R=>{const n=`${Ha(A,s)}_${rt==null?void 0:rt.username}`,I=L(a=>{switch(A){case UE.SYSTEM:a=this.convertSystemDataStr(a,!0);break}const r=sr.AES.encrypt(a,DC),S=new Blob([r.toString()],{type:"text/json"}),o=document.createElement("a");o.href=window.URL.createObjectURL(S),o.download=`${n}.prsv`,o.click(),o.remove()},"handleData");{const a=localStorage.getItem(n);a&&I(nI(a,Ss)),R(!!a)}})}importData(A,s=0){const R=`${Ha(A,s)}_${rt==null?void 0:rt.username}`;let n=document.getElementById("saveFile");n&&n.remove(),n=document.createElement("input"),n.id="saveFile",n.type="file",n.accept=".prsv",n.style.display="none",n.addEventListener("change",I=>{const a=new FileReader;a.onload=(r=>S=>{var M,u;let o,l=sr.AES.decrypt((u=(M=S.target)==null?void 0:M.result)==null?void 0:u.toString(),DC).toString(sr.enc.Utf8),C=!1;try{switch(o=UE[A].toLowerCase(),A){case UE.SYSTEM:l=this.convertSystemDataStr(l);const h=this.parseSystemData(l);C=!!h.dexData&&!!h.timestamp;break;case UE.SESSION:const P=this.parseSessionData(l);C=!!P.party&&!!P.enemyParty&&!!P.timestamp;break;case UE.RUN_HISTORY:const G=JSON.parse(l),d=Object.keys(G);o=D.t("menuUiHandler:RUN_HISTORY").toLowerCase(),d.forEach(H=>{const f=Object.keys(G[H]);C=["isFavorite","isVictory","entry"].every(K=>f.includes(K))&&f.length===3});break;case UE.SETTINGS:case UE.TUTORIALS:C=!0;break}}catch(h){console.error(h)}if(o=o,!C)return this.scene.ui.showText(`Your ${o} data could not be loaded. It may be corrupted.`,null,()=>this.scene.ui.showText("",0),Et(1500));this.scene.ui.showText(`Your ${o} data will be overridden and the page will reload. Proceed?`,null,()=>{this.scene.ui.setOverlayMode(Oe.CONFIRM,()=>{localStorage.setItem(R,da(l,Ss)),window.location=window.location},()=>{this.scene.ui.revertMode(),this.scene.ui.showText("",0)},!1,-98)})})(I.target.files[0]),a.readAsText(I.target.files[0])}),n.click()}initDexData(){const A={};for(const n of fR)A[n.speciesId]={seenAttr:0n,caughtAttr:0n,natureAttr:0,seenCount:0,caughtCount:0,hatchedCount:0,ivs:[0,0,0,0,0,0]};const s=Ze.NON_SHINY|Ze.MALE|Ze.FEMALE|Ze.DEFAULT_VARIANT|Ze.DEFAULT_FORM,R=[];this.scene.executeWithSeedOffset(()=>{const n=[At.HARDY,At.DOCILE,At.SERIOUS,At.BASHFUL,At.QUIRKY];for(let I=0;I<cI.length;I++)R.push(JA(n))},0,"default");for(let n=0;n<cI.length;n++){const I=A[cI[n]];I.seenAttr=s,I.caughtAttr=s,I.natureAttr=1<<R[n]+1;for(const a in I.ivs)I.ivs[a]=15}this.defaultDexData=Object.assign({},A),this.dexData=A}initStarterData(){const A={},s=Object.keys(KA).map(R=>parseInt(R));for(const R of s)A[R]={moveset:null,eggMoves:0,candyCount:0,friendship:0,abilityAttr:cI.includes(R)?Cs.ABILITY_1:0,passiveAttr:0,valueReduction:0,classicWinCount:0};this.starterData=A}setPokemonSeen(A,s=!0,R=!1){var I,a;if((I=this.scene.currentBattle)!=null&&I.isBattleMysteryEncounter()&&((a=this.scene.currentBattle.mysteryEncounter)!=null&&a.preventGameStatsUpdates))return;const n=this.dexData[A.species.speciesId];n.seenAttr|=A.getDexAttr(),s&&(n.seenCount++,this.gameStats.pokemonSeen++,!R&&A.species.subLegendary?this.gameStats.subLegendaryPokemonSeen++:!R&&A.species.legendary?this.gameStats.legendaryPokemonSeen++:!R&&A.species.mythical&&this.gameStats.mythicalPokemonSeen++,!R&&A.isShiny()&&this.gameStats.shinyPokemonSeen++)}setPokemonCaught(A,s=!0,R=!1,n=!0){const I=A.species.getRootSpeciesId();return!s&&!this.scene.gameData.dexData[I].caughtAttr?Promise.resolve(!1):this.setPokemonSpeciesCaught(A,A.species,s,R,n)}setPokemonSpeciesCaught(A,s,R=!0,n=!1,I=!0){return new Promise(a=>{const r=this.dexData[s.speciesId],S=r.caughtAttr,o=A.formIndex;D7.includes(A.getFormKey())&&(A.formIndex=0);const l=A.getDexAttr();A.formIndex=o,r.caughtAttr|=l,KA.hasOwnProperty(s.speciesId)&&(this.starterData[s.speciesId].abilityAttr|=A.abilityIndex!==1||A.species.ability2?1<<A.abilityIndex:Cs.ABILITY_HIDDEN),r.natureAttr|=1<<A.nature+1;const C=QA.hasOwnProperty(s.speciesId),M=!S,u=(S&l)!==l;R&&(n?(r.hatchedCount++,this.gameStats.pokemonHatched++,A.species.subLegendary?this.gameStats.subLegendaryPokemonHatched++:A.species.legendary?this.gameStats.legendaryPokemonHatched++:A.species.mythical&&this.gameStats.mythicalPokemonHatched++,A.isShiny()&&this.gameStats.shinyPokemonHatched++):(r.caughtCount++,this.gameStats.pokemonCaught++,A.species.subLegendary?this.gameStats.subLegendaryPokemonCaught++:A.species.legendary?this.gameStats.legendaryPokemonCaught++:A.species.mythical&&this.gameStats.mythicalPokemonCaught++,A.isShiny()&&this.gameStats.shinyPokemonCaught++),!C&&(!A.scene.gameMode.isDaily||u||n)&&this.addStarterCandy(s,1*(A.isShiny()?5*(1<<(A.variant??0)):1)*(n||A.isBoss()?2:1)));const h=L(P=>{if(C){const G=QA[s.speciesId];this.setPokemonSpeciesCaught(A,xe(G),R,n,I).then(d=>a(d))}else a(P)},"checkPrevolution");if(M&&KA.hasOwnProperty(s.speciesId)){if(!I){a(!0);return}this.scene.playSound("level_up_fanfare"),this.scene.ui.showText(D.t("battle:addedAsAStarter",{pokemonName:s.name}),null,()=>h(!0),null,!0)}else h(!1)})}incrementRibbonCount(A,s=!1){const R=A.getRootSpeciesId(s);this.starterData[R].classicWinCount||(this.starterData[R].classicWinCount=0),this.starterData[R].classicWinCount||this.scene.gameData.gameStats.ribbonsOwned++;const n=this.scene.gameData.gameStats.ribbonsOwned;return n>=100&&this.scene.validateAchv(lt._100_RIBBONS),n>=75&&this.scene.validateAchv(lt._75_RIBBONS),n>=50&&this.scene.validateAchv(lt._50_RIBBONS),n>=25&&this.scene.validateAchv(lt._25_RIBBONS),n>=10&&this.scene.validateAchv(lt._10_RIBBONS),++this.starterData[R].classicWinCount}addStarterCandy(A,s){const R=A.getRootSpeciesId();this.scene.gameData.dexData[R].caughtAttr&&(this.scene.candyBar.showStarterSpeciesCandy(A.speciesId,s),this.starterData[A.speciesId].candyCount+=s)}setEggMoveUnlocked(A,s,R=!0,n=!1){return new Promise(I=>{const a=A.speciesId;if(!BE.hasOwnProperty(a)||!BE[a][s]){I(!1);return}this.starterData[a].eggMoves||(this.starterData[a].eggMoves=0);const r=1<<s;if(this.starterData[a].eggMoves&r){I(!1);return}if(this.starterData[a].eggMoves|=r,!R){I(!0);return}this.scene.playSound("level_up_fanfare");const S=ye[BE[a][s]].name;let o=n?A.getName()+" ":"";o+=s===3?D.t("egg:rareEggMoveUnlock",{moveName:S}):D.t("egg:eggMoveUnlock",{moveName:S}),this.scene.ui.showText(o,null,()=>I(!0),null,!0)})}isRootSpeciesUnlocked(A){var s;return!!((s=this.dexData[A.getRootSpeciesId()])!=null&&s.caughtAttr)}unlockSpeciesNature(A,s){if(!this.isRootSpeciesUnlocked(A))return;const R=L(n=>{this.dexData[n].natureAttr|=1<<s+1,QA.hasOwnProperty(n)&&R(QA[n])},"_unlockSpeciesNature");R(A.speciesId)}updateSpeciesDexIvs(A,s){let R;do{R=this.scene.gameData.dexData[A];const n=R.ivs;for(let I=0;I<n.length;I++)n[I]<s[I]&&(n[I]=s[I]);n.filter(I=>I===31).length===6&&this.scene.validateAchv(lt.PERFECT_IVS)}while(QA.hasOwnProperty(A)&&(A=QA[A]))}getSpeciesCount(A){const s=Object.keys(this.dexData);let R=0;for(const n of s)A(this.dexData[n])&&R++;return R}getStarterCount(A){const s=Object.keys(KA);let R=0;for(const n of s){const I=this.dexData[n];A(I)&&R++}return R}getSpeciesDefaultDexAttr(A,s=!1,R=!1){let n=0n;const a=this.dexData[A.speciesId].caughtAttr;return R?a&Ze.SHINY?(n|=Ze.SHINY,a&Ze.VARIANT_3?n|=Ze.VARIANT_3:a&Ze.VARIANT_2?n|=Ze.VARIANT_2:n|=Ze.DEFAULT_VARIANT):(n|=Ze.NON_SHINY,n|=Ze.DEFAULT_VARIANT):(n|=a&Ze.NON_SHINY||!(a&Ze.SHINY)?Ze.NON_SHINY:Ze.SHINY,a&Ze.DEFAULT_VARIANT?n|=Ze.DEFAULT_VARIANT:a&Ze.VARIANT_2?n|=Ze.VARIANT_2:a&Ze.VARIANT_3?n|=Ze.VARIANT_3:n|=Ze.DEFAULT_VARIANT),n|=a&Ze.MALE||!(a&Ze.FEMALE)?Ze.MALE:Ze.FEMALE,n|=this.getFormAttr(this.getFormIndex(a)),n}getSpeciesDexAttrProps(A,s){const R=!(s&Ze.NON_SHINY),n=!(s&Ze.MALE);let I=0;s&Ze.DEFAULT_VARIANT?I=0:s&Ze.VARIANT_2?I=1:s&Ze.VARIANT_3&&(I=2);const a=this.getFormIndex(s);return{shiny:R,female:n,variant:I,formIndex:a}}getStarterSpeciesDefaultAbilityIndex(A){const s=this.starterData[A.speciesId].abilityAttr;return s&Cs.ABILITY_1?0:!A.ability2||s&Cs.ABILITY_2?1:2}getSpeciesDefaultNature(A){const s=this.dexData[A.speciesId];for(let R=0;R<25;R++)if(s.natureAttr&1<<R+1)return R;return 0}getSpeciesDefaultNatureAttr(A){return 1<<this.getSpeciesDefaultNature(A)}getDexAttrLuck(A){return A&Ze.SHINY?A&Ze.VARIANT_3?3:A&Ze.VARIANT_2?2:1:0}getNaturesForAttr(A=0){const s=[];for(let R=0;R<25;R++)A&1<<R+1&&s.push(R);return s}getSpeciesStarterValue(A){let R=KA[A];const n=L(a=>(a>1?a--:a/=2,a),"decrementValue");for(let a=0;a<this.starterData[A].valueReduction;a++)R=n(R);const I=new Rt(R);return Fs(this.scene.gameMode,Us.STARTER_COST,A,I),I.value}getFormIndex(A){if(!A||A<Ze.DEFAULT_FORM)return 0;let s=0;for(;!(A&this.getFormAttr(s));)s++;return s}getFormAttr(A){return BigInt(1)<<BigInt(7+A)}consolidateDexData(A){var s;for(const R of Object.keys(A)){const n=A[R];n.hasOwnProperty("hatchedCount")||(n.hatchedCount=0),(!n.hasOwnProperty("natureAttr")||n.caughtAttr&&!n.natureAttr)&&(n.natureAttr=((s=this.defaultDexData)==null?void 0:s[R].natureAttr)||1<<hA(25,1))}}migrateStarterAbilities(A,s){const R=Object.keys(this.starterData).map(a=>parseInt(a)),n=s||A.starterData,I=A.dexData;for(const a of R){const r=I[a].caughtAttr;n[a].abilityAttr=(r&Ze.DEFAULT_VARIANT?Cs.ABILITY_1:0)|(r&Ze.VARIANT_2?Cs.ABILITY_2:0)|(r&Ze.VARIANT_3?Cs.ABILITY_HIDDEN:0),r&&(r&Ze.DEFAULT_VARIANT||(I[a].caughtAttr^=Ze.DEFAULT_VARIANT),r&Ze.VARIANT_2&&(I[a].caughtAttr^=Ze.VARIANT_2),r&Ze.VARIANT_3&&(I[a].caughtAttr^=Ze.VARIANT_3))}}};L(PK,"GameData");let hC=PK;const L0=10;var Us=(E=>(E[E.STARTER_CHOICE=0]="STARTER_CHOICE",E[E.STARTER_POINTS=1]="STARTER_POINTS",E[E.STARTER_COST=2]="STARTER_COST",E[E.STARTER_MODIFY=3]="STARTER_MODIFY",E[E.POKEMON_IN_BATTLE=4]="POKEMON_IN_BATTLE",E[E.FIXED_BATTLES=5]="FIXED_BATTLES",E[E.TYPE_EFFECTIVENESS=6]="TYPE_EFFECTIVENESS",E[E.AI_LEVEL=7]="AI_LEVEL",E[E.AI_MOVE_SLOTS=8]="AI_MOVE_SLOTS",E[E.PASSIVE_ACCESS=9]="PASSIVE_ACCESS",E[E.GAME_MODE_MODIFY=10]="GAME_MODE_MODIFY",E[E.MOVE_ACCESS=11]="MOVE_ACCESS",E[E.MOVE_WEIGHT=12]="MOVE_WEIGHT",E))(Us||{});const GK=class GK{constructor(A,s=Number.MAX_SAFE_INTEGER){this.id=A,this.value=0,this.maxValue=s,this.severity=0,this.maxSeverity=0,this.conditions=[]}reset(){this.value=0,this.severity=0}geti18nKey(){return yt[this.id].split("_").map((A,s)=>s?`${A[0]}${A.slice(1).toLowerCase()}`:A.toLowerCase()).join("")}isUnlocked(A){return this.conditions.every(s=>s(A))}condition(A){return this.conditions.push(A),this}getName(){return D.t(`challenges:${this.geti18nKey()}.name`)}getValue(A){const s=A??this.value;return D.t(`challenges:${this.geti18nKey()}.value.${s}`)}getDescription(A){const s=A??this.value;return`${D.t([`challenges:${this.geti18nKey()}.desc.${s}`,`challenges:${this.geti18nKey()}.desc`])}`}increaseValue(){return this.value<this.maxValue?(this.value=Math.min(this.value+1,this.maxValue),!0):!1}decreaseValue(){return this.value>0?(this.value=Math.max(this.value-1,0),!0):!1}hasSeverity(){return this.value!==0&&this.maxSeverity>0}decreaseSeverity(){return this.severity>0?(this.severity=Math.max(this.severity-1,0),!0):!1}increaseSeverity(){return this.severity<this.maxSeverity?(this.severity=Math.min(this.severity+1,this.maxSeverity),!0):!1}getDifficulty(){return this.value}getMinDifficulty(){return 0}static loadChallenge(A){throw new Error("Method not implemented! Use derived class")}applyStarterChoice(A,s,R,n=!1){return!1}applyStarterPoints(A){return!1}applyStarterCost(A,s){return!1}applyStarterModify(A){return!1}applyPokemonInBattle(A,s){return!1}applyFixedBattle(A,s){return!1}applyTypeEffectiveness(A){return!1}applyLevelChange(A,s,R,n){return!1}applyMoveSlot(A,s){return!1}applyPassiveAccess(A,s){return!1}applyGameModeModify(A){return!1}applyMoveAccessLevel(A,s,R,n){return!1}applyMoveWeight(A,s,R,n){return!1}};L(GK,"Challenge");let vi=GK;const KD=class KD extends vi{constructor(){super(yt.SINGLE_GENERATION,9)}applyStarterChoice(A,s,R,n=!1){const I=[A.generation];if(n){const a=[A.speciesId];for(;a.length;){const r=a.pop();r&&kt.hasOwnProperty(r)&&kt[r].forEach(S=>{a.push(S.speciesId),I.push(xe(S.speciesId).generation)})}}return I.includes(this.value)?!1:(s.value=!1,!0)}applyPokemonInBattle(A,s){var I;const R=A.species.speciesId===e.VICTINI?5:xe(A.species.speciesId).generation,n=A.isFusion()?((I=A.fusionSpecies)==null?void 0:I.speciesId)===e.VICTINI?5:xe(A.fusionSpecies.speciesId).generation:0;return A.isPlayer()&&(R!==this.value||A.isFusion()&&n!==this.value)?(s.value=!1,!0):!1}applyFixedBattle(A,s){let R=[];switch(A){case 182:R=[U.LORELEI,U.WILL,U.SIDNEY,U.AARON,U.SHAUNTAL,U.MALVA,JA([U.HALA,U.MOLAYNE]),U.MARNIE_ELITE,U.RIKA];break;case 184:R=[U.BRUNO,U.KOGA,U.PHOEBE,U.BERTHA,U.MARSHAL,U.SIEBOLD,U.OLIVIA,U.NESSA_ELITE,U.POPPY];break;case 186:R=[U.AGATHA,U.BRUNO,U.GLACIA,U.FLINT,U.GRIMSLEY,U.WIKSTROM,U.ACEROLA,JA([U.BEA_ELITE,U.ALLISTER_ELITE]),U.LARRY_ELITE];break;case 188:R=[U.LANCE,U.KAREN,U.DRAKE,U.LUCIAN,U.CAITLIN,U.DRASNA,U.KAHILI,U.RAIHAN_ELITE,U.HASSEL];break;case 190:R=[U.BLUE,JA([U.RED,U.LANCE_CHAMPION]),JA([U.STEVEN,U.WALLACE]),U.CYNTHIA,JA([U.ALDER,U.IRIS]),U.DIANTHA,U.HAU,U.LEON,JA([U.GEETA,U.NEMONA])];break}return R.length===0?!1:(s.setBattleType(ht.TRAINER).setGetTrainerFunc(n=>new Ds(n,R[this.value-1],OA.DEFAULT)),!0)}getDifficulty(){return this.value>0?1:0}getValue(A){const s=A??this.value;return s===0?D.t("settings:off"):D.t(`starterSelectUiHandler:gen${s}`)}getDescription(A){const s=A??this.value;return s===0?D.t("challenges:singleGeneration.desc_default"):D.t("challenges:singleGeneration.desc",{gen:D.t(`challenges:singleGeneration.gen_${s}`)})}static loadChallenge(A){const s=new KD;return s.value=A.value,s.severity=A.severity,s}};L(KD,"SingleGenerationChallenge");let xR=KD;const Di=class Di extends vi{constructor(){super(yt.SINGLE_TYPE,18)}applyStarterChoice(A,s,R,n=!1){const I=Bi(A.speciesId,R.formIndex),a=[I.type1,I.type2];if(n&&!Di.SPECIES_OVERRIDES.includes(A.speciesId)){const r=[A.speciesId];for(;r.length;){const S=r.pop();S&&kt.hasOwnProperty(S)&&kt[S].forEach(o=>{r.push(o.speciesId),a.push(xe(o.speciesId).type1,xe(o.speciesId).type2)}),S&&VO.hasOwnProperty(S)&&VO[S].forEach(o=>{xe(S).forms.forEach(l=>{o.formKey===l.formKey&&a.push(l.type1,l.type2)})})}}return a.includes(this.value-1)?!1:(s.value=!1,!0)}applyPokemonInBattle(A,s){return A.isPlayer()&&!A.isOfType(this.value-1,!1,!1,!0)&&!Di.TYPE_OVERRIDES.some(R=>R.type===this.value-1&&(A.isFusion()&&R.fusion?A.fusionSpecies:A.species).speciesId===R.species)?(s.value=!1,!0):!1}getDifficulty(){return this.value>0?1:0}getValue(A){return A===void 0&&(A=this.value),i[this.value-1].toLowerCase()}getDescription(A){A===void 0&&(A=this.value);const s=D.t(`pokemonInfo:Type.${i[this.value-1]}`),R=`[color=${i1[i[this.value-1]]}][shadow=${I1[i[this.value-1]]}]${s}[/shadow][/color]`,n=D.t("challenges:singleType.desc_default"),I=D.t("challenges:singleType.desc",{type:R});return this.value===0?n:I}static loadChallenge(A){const s=new Di;return s.value=A.value,s.severity=A.severity,s}};L(Di,"SingleTypeChallenge"),Di.TYPE_OVERRIDES=[{species:e.CASTFORM,type:i.NORMAL,fusion:!1}],Di.SPECIES_OVERRIDES=[e.MELOETTA];let fE=Di;const mD=class mD extends vi{constructor(){super(yt.FRESH_START,1)}applyStarterChoice(A,s){return cI.includes(A.speciesId)?!1:(s.value=!1,!0)}applyStarterCost(A,s){return cI.includes(A)?(s.value=KA[A],!0):!1}applyStarterModify(A){return A.abilityIndex=0,A.passive=!1,A.nature=At.HARDY,A.moveset=A.species.getLevelMoves().filter(s=>s[0]<=5).map(s=>s[1]).slice(0,4).map(s=>new Ot(s)),A.luck=0,A.shiny=!1,A.variant=0,A.formIndex=0,A.ivs=[15,15,15,15,15,15],!0}getDifficulty(){return 0}static loadChallenge(A){const s=new mD;return s.value=A.value,s.severity=A.severity,s}};L(mD,"FreshStartChallenge");let jT=mD;const FD=class FD extends vi{constructor(){super(yt.INVERSE_BATTLE,1)}static loadChallenge(A){const s=new FD;return s.value=A.value,s.severity=A.severity,s}getDifficulty(){return 0}applyTypeEffectiveness(A){return A.value<1?(A.value=2,!0):A.value>1?(A.value=.5,!0):!1}};L(FD,"InverseBattleChallenge");let eS=FD;const pD=class pD extends vi{constructor(){super(yt.LOWER_MAX_STARTER_COST,9)}getValue(A){return A===void 0&&(A=this.value),(L0-A).toString()}applyStarterChoice(A,s){return KA[A.speciesId]>L0-this.value?(s.value=!1,!0):!1}static loadChallenge(A){const s=new pD;return s.value=A.value,s.severity=A.severity,s}};L(pD,"LowerStarterMaxCostChallenge");let N0=pD;const WD=class WD extends vi{constructor(){super(yt.LOWER_STARTER_POINTS,9)}getValue(A){return A===void 0&&(A=this.value),(L0-A).toString()}applyStarterPoints(A){return A.value-=this.value,!0}static loadChallenge(A){const s=new WD;return s.value=A.value,s.severity=A.severity,s}};L(WD,"LowerStarterPointsChallenge");let T0=WD;function Fs(E,A,...s){let R=!1;return E.challenges.forEach(n=>{if(n.value!==0)switch(A){case 0:R||(R=n.applyStarterChoice(s[0],s[1],s[2],s[3]));break;case 1:R||(R=n.applyStarterPoints(s[0]));break;case 2:R||(R=n.applyStarterCost(s[0],s[1]));break;case 3:R||(R=n.applyStarterModify(s[0]));break;case 4:R||(R=n.applyPokemonInBattle(s[0],s[1]));break;case 5:R||(R=n.applyFixedBattle(s[0],s[1]));break;case 6:R||(R=n.applyTypeEffectiveness(s[0]));break;case 7:R||(R=n.applyLevelChange(s[0],s[1],s[2],s[3]));break;case 8:R||(R=n.applyMoveSlot(s[0],s[1]));break;case 9:R||(R=n.applyPassiveAccess(s[0],s[1]));break;case 10:R||(R=n.applyGameModeModify(E));break;case 11:R||(R=n.applyMoveAccessLevel(s[0],s[1],s[2],s[3]));break;case 12:R||(R=n.applyMoveWeight(s[0],s[1],s[2],s[3]));break}}),R}L(Fs,"applyChallenges");function V6(E){switch(E.id){case yt.SINGLE_GENERATION:return xR.loadChallenge(E);case yt.SINGLE_TYPE:return fE.loadChallenge(E);case yt.LOWER_MAX_STARTER_COST:return N0.loadChallenge(E);case yt.LOWER_STARTER_POINTS:return T0.loadChallenge(E);case yt.FRESH_START:return jT.loadChallenge(E);case yt.INVERSE_BATTLE:return eS.loadChallenge(E)}throw new Error("Unknown challenge copied")}L(V6,"copyChallenge");const x6=[];function XX(){x6.push(new xR,new fE,new jT,new eS)}L(XX,"initChallenges");const lb=D.t("partyUiHandler:choosePokemon");var us=(E=>(E[E.SWITCH=0]="SWITCH",E[E.FAINT_SWITCH=1]="FAINT_SWITCH",E[E.POST_BATTLE_SWITCH=2]="POST_BATTLE_SWITCH",E[E.REVIVAL_BLESSING=3]="REVIVAL_BLESSING",E[E.MODIFIER=4]="MODIFIER",E[E.MOVE_MODIFIER=5]="MOVE_MODIFIER",E[E.TM_MODIFIER=6]="TM_MODIFIER",E[E.REMEMBER_MOVE_MODIFIER=7]="REMEMBER_MOVE_MODIFIER",E[E.MODIFIER_TRANSFER=8]="MODIFIER_TRANSFER",E[E.SPLICE=9]="SPLICE",E[E.RELEASE=10]="RELEASE",E[E.CHECK=11]="CHECK",E[E.SELECT=12]="SELECT",E))(us||{}),tS=(E=>(E[E.CANCEL=-1]="CANCEL",E[E.SEND_OUT=0]="SEND_OUT",E[E.PASS_BATON=1]="PASS_BATON",E[E.REVIVE=2]="REVIVE",E[E.APPLY=3]="APPLY",E[E.TEACH=4]="TEACH",E[E.TRANSFER=5]="TRANSFER",E[E.SUMMARY=6]="SUMMARY",E[E.UNPAUSE_EVOLUTION=7]="UNPAUSE_EVOLUTION",E[E.SPLICE=8]="SPLICE",E[E.UNSPLICE=9]="UNSPLICE",E[E.RELEASE=10]="RELEASE",E[E.RENAME=11]="RENAME",E[E.SELECT=12]="SELECT",E[E.SCROLL_UP=1e3]="SCROLL_UP",E[E.SCROLL_DOWN=1001]="SCROLL_DOWN",E[E.FORM_CHANGE_ITEM=2e3]="FORM_CHANGE_ITEM",E[E.MOVE_1=3e3]="MOVE_1",E[E.MOVE_2=3001]="MOVE_2",E[E.MOVE_3=3002]="MOVE_3",E[E.MOVE_4=3003]="MOVE_4",E[E.ALL=4e3]="ALL",E))(tS||{});const HO=class HO extends ps{constructor(A){super(A,Oe.PARTY),this.optionsCursor=0,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.lastCursor=0,this.FilterChallengeLegal=s=>{const R=new Lt(!0);return Fs(this.scene.gameMode,Us.POKEMON_IN_BATTLE,s,R),R.value?null:D.t("partyUiHandler:cantBeUsed",{pokemonName:ee(s)})},this.localizedOptions=[0,6,-1,3,10,4,8,9,2,5,7,1,11,12]}setup(){const A=this.getUi(),s=this.scene.add.container(0,0);s.setName("party"),s.setVisible(!1),A.add(s),this.partyContainer=s,this.partyBg=this.scene.add.image(0,0,"party_bg"),this.partyBg.setName("img-party-bg"),s.add(this.partyBg),this.partyBg.setOrigin(0,1);const R=this.scene.add.container(0,0);R.setName("party-slots"),s.add(R),this.partySlotsContainer=R;const n=this.scene.add.container(0,-32);n.setName("party-msg-box"),s.add(n);const I=_t(this.scene,1,31,262,30);I.setName("window-party-msg-box"),I.setOrigin(0,1),n.add(I),this.partyMessageBox=I;const a=le(this.scene,10,8,lb,X.WINDOW,{maxLines:2});a.setName("text-party-msg"),a.setOrigin(0,0),n.add(a),this.message=a;const r=new o0(this.scene,291,-16);s.add(r),this.partyCancelButton=r,this.optionsContainer=this.scene.add.container(this.scene.game.canvas.width/6-1,-1),s.add(this.optionsContainer),this.iconAnimHandler=new Ur,this.iconAnimHandler.setup(this.scene);const S=1;this.moveInfoOverlay=new SO(this.scene,{scale:S,top:!0,x:1,y:-SO.getHeight(S)-1,width:this.scene.game.canvas.width/12-30}),A.add(this.moveInfoOverlay),this.options=[],this.partySlots=[]}show(A){return!A.length||this.active?!1:(super.show(A),this.moveInfoOverlay.clear(),this.partyUiMode=A[0],this.fieldIndex=A.length>1?A[1]:-1,this.selectCallback=A.length>2&&A[2]instanceof Function?A[2]:void 0,this.selectFilter=A.length>3&&A[3]instanceof Function?A[3]:HO.FilterAll,this.moveSelectFilter=A.length>4&&A[4]instanceof Function?A[4]:HO.FilterAllMoves,this.tmMoveId=A.length>5&&A[5]?A[5]:t.NONE,this.showMovePp=A.length>6&&A[6],this.partyContainer.setVisible(!0),this.partyBg.setTexture(`party_bg${this.scene.currentBattle.double?"_double":""}`),this.populatePartySlots(),this.setCursor(0),!0)}processInput(A){var n,I;const s=this.getUi();if(this.pendingPrompt||this.blockInput)return!1;if(this.awaitingActionInput){if((A===b.ACTION||A===b.CANCEL)&&this.onActionInput){s.playSelect();const a=this.onActionInput;return this.onActionInput=null,a(),this.awaitingActionInput=!1,!0}return!1}let R=!1;if(this.optionsMode){const a=this.options[this.optionsCursor];if(A===b.ACTION){const r=this.scene.getPlayerParty()[this.cursor];if(this.partyUiMode===8&&!this.transferMode&&a!==-1){this.startTransfer();let S;for(let o=0;o<this.scene.getPlayerParty().length;o++){const l=this.scene.getPlayerParty()[o],C=L(h=>this.scene.findModifiers(P=>P instanceof Ht&&P.isTransferable&&P.pokemonId===h.id),"getTransferrableItemsFromPokemon"),M=l.scene.findModifier(h=>h instanceof Ht&&h.pokemonId===l.id&&h.matchType(C(r)[this.transferOptionCursor])),u=this.partySlots.filter(h=>h.getPokemon()===l)[0];o!==this.transferCursor?M?M.getMaxStackCount(this.scene)===M.stackCount?S=D.t("partyUiHandler:notAble"):S=D.t("partyUiHandler:able"):S=D.t("partyUiHandler:able"):S="",u.slotHpBar.setVisible(!1),u.slotHpOverlay.setVisible(!1),u.slotHpText.setVisible(!1),u.slotDescriptionLabel.setText(S),u.slotDescriptionLabel.setVisible(!0)}return this.clearOptions(),s.playSelect(),!0}else if(this.partyUiMode===7&&a!==-1){this.moveInfoOverlay.clear();const S=this.selectFilter(r);return S===null?((n=this.selectCallback)==null||n.call(this,this.cursor,a),this.clearOptions()):(this.clearOptions(),this.showText(S,void 0,()=>this.showText("",0),void 0,!0)),s.playSelect(),!0}else if(a!==6&&a!==7&&a!==9&&a!==10&&a!==-1&&a!==11||a===10&&this.partyUiMode===10){let S;const o=L(l=>this.scene.findModifiers(C=>C instanceof Ht&&C.isTransferable&&C.pokemonId===l.id),"getTransferrableItemsFromPokemon");if(a!==5&&a!==8?(S=this.selectFilter(r),S===null&&(a===0||a===1)&&(S=this.FilterChallengeLegal(r)),S===null&&this.partyUiMode===5&&(S=this.moveSelectFilter(r.moveset[this.optionsCursor]))):S=this.selectFilter(r,o(this.scene.getPlayerParty()[this.transferCursor])[this.transferOptionCursor]),S===null){if(this.partyUiMode!==9&&this.clearOptions(),this.selectCallback&&this.partyUiMode!==11)if(a===5)this.transferCursor!==this.cursor&&(this.transferAll?o(this.scene.getPlayerParty()[this.transferCursor]).forEach((l,C)=>this.selectCallback(this.transferCursor,C,this.transferQuantitiesMax[C],this.cursor)):this.selectCallback(this.transferCursor,this.transferOptionCursor,this.transferQuantities[this.transferOptionCursor],this.cursor)),this.clearTransfer();else if(this.partyUiMode===9)a===8?(this.selectCallback(this.transferCursor,this.cursor),this.clearTransfer()):this.startTransfer(),this.clearOptions();else if(a===10)this.doRelease(this.cursor);else{const l=this.selectCallback;this.selectCallback=null,l(this.cursor,a)}else if(a>=2e3&&this.scene.getCurrentPhase()instanceof oO){if(this.partyUiMode===11){const C=this.getFormChangeItemsModifiers(r)[a-2e3];C.active=!C.active,this.scene.triggerPokemonFormChange(r,Pe,!1,!0)}}else this.cursor&&this.scene.getCurrentPhase().handleCommand(NA.POKEMON,this.cursor,a===1);return this.partyUiMode!==4&&this.partyUiMode!==6&&this.partyUiMode!==5&&s.playSelect(),!0}else this.clearOptions(),this.showText(S,void 0,()=>this.showText("",0),void 0,!0)}else{if(a===6)return s.playSelect(),s.setModeWithoutClear(Oe.SUMMARY,r).then(()=>this.clearOptions()),!0;if(a===7)this.clearOptions(),s.playSelect(),r.pauseEvolutions=!r.pauseEvolutions,this.showText(D.t(r.pauseEvolutions?"partyUiHandler:pausedEvolutions":"partyUiHandler:unpausedEvolutions",{pokemonName:ee(r)}),void 0,()=>this.showText("",0),null,!0);else if(a===9)this.clearOptions(),s.playSelect(),this.showText(D.t("partyUiHandler:unspliceConfirmation",{fusionName:(I=r.fusionSpecies)==null?void 0:I.name,pokemonName:r.name}),null,()=>{s.setModeWithoutClear(Oe.CONFIRM,()=>{const S=r.name;r.unfuse().then(()=>{this.clearPartySlots(),this.populatePartySlots(),s.setMode(Oe.PARTY),this.showText(D.t("partyUiHandler:wasReverted",{fusionName:S,pokemonName:r.name}),void 0,()=>{s.setMode(Oe.PARTY),this.showText("",0)},null,!0)})},()=>{s.setMode(Oe.PARTY),this.showText("",0)})});else{if(a===10)return this.clearOptions(),s.playSelect(),this.cursor>=this.scene.currentBattle.getBattlerCount()||!r.isAllowedInBattle()?(this.blockInput=!0,this.showText(D.t("partyUiHandler:releaseConfirmation",{pokemonName:ee(r)}),null,()=>{this.blockInput=!1,s.setModeWithoutClear(Oe.CONFIRM,()=>{s.setMode(Oe.PARTY),this.doRelease(this.cursor)},()=>{s.setMode(Oe.PARTY),this.showText("",0)})})):this.showText(D.t("partyUiHandler:releaseInBattle"),null,()=>this.showText("",0),null,!0),!0;if(a===11)return this.clearOptions(),s.playSelect(),s.setModeWithoutClear(Oe.RENAME_POKEMON,{buttonActions:[S=>{s.playSelect(),r.nickname=S,r.updateInfo(),this.clearPartySlots(),this.populatePartySlots(),s.setMode(Oe.PARTY)},()=>{s.setMode(Oe.PARTY)}]},r),!0;if(a===-1)return this.processInput(b.CANCEL);if(a===12)return s.playSelect(),!0}}}else{if(A===b.CANCEL)return this.clearOptions(),s.playSelect(),!0;switch(A){case b.LEFT:this.partyUiMode===8&&(this.transferQuantities[a]=this.transferQuantities[a]===1?this.transferQuantitiesMax[a]:this.transferQuantities[a]-1,this.updateOptions(),R=this.setCursor(this.optionsCursor));break;case b.RIGHT:this.partyUiMode===8&&(this.transferQuantities[a]=this.transferQuantities[a]===this.transferQuantitiesMax[a]?1:this.transferQuantities[a]+1,this.updateOptions(),R=this.setCursor(this.optionsCursor));break;case b.UP:this.partyUiMode===8&&(a!==4e3&&(this.transferQuantities[a]=this.transferQuantitiesMax[a]),this.updateOptions()),R=this.setCursor(this.optionsCursor?this.optionsCursor-1:this.options.length-1);break;case b.DOWN:this.partyUiMode===8&&(a!==4e3&&(this.transferQuantities[a]=this.transferQuantitiesMax[a]),this.updateOptions()),R=this.setCursor(this.optionsCursor<this.options.length-1?this.optionsCursor+1:0);break}if(this.partyUiMode===7){const r=this.options[this.optionsCursor],S=this.scene.getPlayerParty()[this.cursor],o=ye[S.getLearnableLevelMoves()[r]];o?this.moveInfoOverlay.show(o):this.moveInfoOverlay.clear()}}}else{if(A===b.ACTION){if(this.cursor<6){if(this.partyUiMode===8&&!this.transferMode){const S=this.scene.findModifiers(o=>o instanceof Ht&&o.isTransferable&&o.pokemonId===this.scene.getPlayerParty()[this.cursor].id);this.transferQuantities=S.map(o=>o.getStackCount()),this.transferQuantitiesMax=S.map(o=>o.getStackCount())}this.showOptions(),s.playSelect()}else if(this.partyUiMode===1||this.partyUiMode===3)s.playError();else return this.processInput(b.CANCEL);return!0}else if(A===b.CANCEL){if((this.partyUiMode===8||this.partyUiMode===9)&&this.transferMode)this.clearTransfer(),s.playSelect();else if(this.partyUiMode!==1&&this.partyUiMode!==3)if(this.selectCallback){const S=this.selectCallback;this.selectCallback=null,S(6,-1),s.playSelect()}else s.setMode(Oe.COMMAND,this.fieldIndex),s.playSelect();return!0}const a=this.partySlots.length,r=this.scene.currentBattle.getBattlerCount();switch(A){case b.UP:R=this.setCursor(this.cursor?this.cursor<6?this.cursor-1:a-1:6);break;case b.DOWN:R=this.setCursor(this.cursor<6?this.cursor<a-1?this.cursor+1:6:0);break;case b.LEFT:this.cursor>=r&&this.cursor<=6&&(R=this.setCursor(0));break;case b.RIGHT:if(a===r){R=this.setCursor(6);break}else if(r>=2&&a>r&&this.getCursor()===0&&this.lastCursor===1){R=this.setCursor(2);break}else if(a>r&&this.cursor<r){R=this.setCursor(this.lastCursor<6&&this.lastCursor||r);break}}}return R&&s.playSelect(),R}populatePartySlots(){const A=this.scene.getPlayerParty();this.cursor<6&&this.cursor>=A.length?this.cursor=A.length-1:this.cursor===6&&this.partyCancelButton.select(),this.lastCursor<6&&this.lastCursor>=A.length&&(this.lastCursor=A.length-1);for(const s in A){const R=parseInt(s),n=new S0(this.scene,R,A[s],this.iconAnimHandler,this.partyUiMode,this.tmMoveId);this.scene.add.existing(n),this.partySlotsContainer.add(n),this.partySlots.push(n),this.cursor===R&&n.select()}}setCursor(A){let s;if(this.optionsMode){s=this.optionsCursor!==A;let R=!1;if(s&&this.optionsScroll)if(Math.abs(A-this.optionsCursor)===this.options.length-1)this.optionsScrollCursor=A?this.optionsScrollTotal-8:0,this.updateOptions();else{const n=A&&A>this.optionsCursor;n?this.options[A]===1001&&(R=!0,this.optionsScrollCursor++):!A&&this.optionsScrollCursor&&(R=!0,this.optionsScrollCursor--),R&&this.optionsScrollCursor===1&&(this.optionsScrollCursor+=n?1:-1)}R?this.updateOptions():this.optionsCursor=A,this.optionsCursorObj||(this.optionsCursorObj=this.scene.add.image(0,0,"cursor"),this.optionsCursorObj.setOrigin(0,0),this.optionsContainer.add(this.optionsCursorObj)),this.optionsCursorObj.setPosition(8-this.optionsBg.displayWidth,-19-16*(this.options.length-1-this.optionsCursor))}else s=this.cursor!==A,s&&(this.lastCursor=this.cursor,this.cursor=A,this.lastCursor<6?this.partySlots[this.lastCursor].deselect():this.lastCursor===6&&this.partyCancelButton.deselect(),A<6?this.partySlots[A].select():A===6&&this.partyCancelButton.select());return s}showText(A,s,R,n,I,a){A.length===0&&(A=lb),(A==null?void 0:A.indexOf(`
`))===-1?(this.partyMessageBox.setSize(262,30),this.message.setY(10)):(this.partyMessageBox.setSize(262,42),this.message.setY(-5)),super.showText(A,s,R,n,I,a)}showOptions(){if(this.cursor===6)return;this.optionsMode=!0;let A=D.t("partyUiHandler:doWhatWithThisPokemon");switch(this.partyUiMode){case 5:A=D.t("partyUiHandler:selectAMove");break;case 8:this.transferMode||(A=D.t("partyUiHandler:changeQuantity"));break;case 9:this.transferMode||(A=D.t("partyUiHandler:selectAnotherPokemonToSplice"));break}this.showText(A,0),this.updateOptions(),this.partyUiMode===8?this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),42):this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),30),this.setCursor(0)}updateOptions(){var o;const A=this.scene.getPlayerParty()[this.cursor],s=this.partyUiMode===7?A.getLearnableLevelMoves():[];this.partyUiMode===7&&(s!=null&&s.length)&&this.moveInfoOverlay.show(ye[s[0]]);const R=this.partyUiMode===8?this.scene.findModifiers(l=>l instanceof Ht&&l.isTransferable&&l.pokemonId===A.id):[];this.options.length&&(this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor());let n;if(this.partyUiMode!==5&&this.partyUiMode!==7&&(this.transferMode||this.partyUiMode!==8)){switch(this.partyUiMode){case 0:case 1:case 2:if(this.cursor>=this.scene.currentBattle.getBattlerCount()){const l=this.partyUiMode!==1&&this.scene.findModifier(u=>u instanceof Fi&&u.pokemonId===this.scene.getPlayerField()[this.fieldIndex].id),C=this.scene.getPlayerField()[this.fieldIndex].getMoveHistory(),M=this.partyUiMode===1&&C.length&&((o=ye[C[C.length-1].move].getAttrs(ks)[0])==null?void 0:o.isBatonPass())&&C[C.length-1].result===CA.SUCCESS;this.options.push(M&&!l?1:0),l&&!M&&this.options.push(1)}break;case 3:this.options.push(2);break;case 4:this.options.push(3);break;case 6:this.options.push(4);break;case 8:this.options.push(5);break;case 9:this.transferMode?this.cursor!==this.transferCursor&&this.options.push(8):this.options.push(3);break;case 10:this.options.push(10);break;case 11:if(this.scene.getCurrentPhase()instanceof oO){n=this.getFormChangeItemsModifiers(A);for(let l=0;l<n.length;l++)this.options.push(2e3+l)}break;case 12:this.options.push(12);break}this.options.push(6),this.options.push(11),(kt.hasOwnProperty(A.species.speciesId)||A.isFusion()&&A.fusionSpecies&&kt.hasOwnProperty(A.fusionSpecies.speciesId))&&this.options.push(7),this.partyUiMode===0?(A.isFusion()&&this.options.push(9),this.options.push(10)):this.partyUiMode===9&&A.isFusion()&&this.options.push(9)}else if(this.partyUiMode===5)for(let l=0;l<A.moveset.length;l++)this.options.push(3e3+l);else if(this.partyUiMode===7){const l=A.getLearnableLevelMoves();for(let C=0;C<l.length;C++)this.options.push(C)}else{for(let l=0;l<R.length;l++)this.options.push(l);R.length>1&&this.options.push(4e3)}this.optionsScrollTotal=this.options.length;let I=this.optionsScrollCursor,a=Math.min(this.optionsScrollTotal,I+(!I||this.optionsScrollCursor+8>=this.optionsScrollTotal?8:7));this.optionsScroll=this.optionsScrollTotal>9,this.optionsScroll&&(this.options.splice(a,this.optionsScrollTotal),this.options.splice(0,I),I&&this.options.unshift(1e3),a<this.optionsScrollTotal&&this.options.push(1001)),this.options.push(-1),this.optionsBg=_t(this.scene,0,0,0,16*this.options.length+13),this.optionsBg.setOrigin(1,1),this.optionsContainer.add(this.optionsBg),I=0,a=this.options.length;let r=0;const S=[];for(let l=I;l<a;l++){const C=this.options[this.options.length-(l+1)];let M=!1,u;if(C===1e3)u="↑";else if(C===1001)u="↓";else if(this.partyUiMode!==7&&(this.partyUiMode!==8||this.transferMode)||C===-1)switch(C){case 3e3:case 3001:case 3002:case 3003:const d=A.moveset[C-3e3];if(this.showMovePp){const H=d.getMovePp(),f=H-d.ppUsed;u=`${d.getName()} ${f}/${H}`}else u=d.getName();break;default:if(n&&C>=2e3){const H=n[C-2e3];u=`${H.active?D.t("partyUiHandler:DEACTIVATE"):D.t("partyUiHandler:ACTIVATE")} ${H.type.name}`}else C===7?u=`${A.pauseEvolutions?D.t("partyUiHandler:UNPAUSE_EVOLUTION"):D.t("partyUiHandler:PAUSE_EVOLUTION")}`:this.localizedOptions.includes(C)?u=D.t(`partyUiHandler:${tS[C]}`):u=wn(tS[C]);break}else if(this.partyUiMode===7){const d=s[C];u=ye[d].name,M=!A.getSpeciesForm().getLevelMoves().find(H=>H[1]===d)}else C===4e3?u=D.t("partyUiHandler:ALL"):u=R[C].type.name;const h=-6-16*l,P=yE(this.scene,0,h-16,u,X.WINDOW,{maxLines:1});M&&(P.setColor("#40c8f8"),P.setShadowColor("#006090")),P.setOrigin(0,0);const G=R[C];if(this.partyUiMode===8&&this.transferQuantitiesMax[C]>1&&!this.transferMode&&G!==void 0&&G.type.name===u){let d=` (${this.transferQuantities[C]})`;this.transferQuantitiesMax[C]===G.getMaxHeldItemCount(void 0)&&(d=`[color=${IA(X.SUMMARY_RED)}]${d}[/color]`),P.setText(u+d)}P.setText(`[shadow]${P.text}[/shadow]`),S.push(P),r=Math.max(P.displayWidth,r),this.optionsContainer.add(P)}this.optionsBg.width=Math.max(r+24,94);for(const l of S)l.x=15-this.optionsBg.width}startTransfer(){this.transferMode=!0,this.transferCursor=this.cursor,this.transferOptionCursor=this.getOptionsCursorWithScroll(),this.transferAll=this.options[this.optionsCursor]===4e3,this.partySlots[this.transferCursor].setTransfer(!0)}clearTransfer(){this.transferMode=!1,this.transferAll=!1,this.partySlots[this.transferCursor].setTransfer(!1);for(let A=0;A<this.partySlots.length;A++)this.partySlots[A].slotDescriptionLabel.setVisible(!1),this.partySlots[A].slotHpBar.setVisible(!0),this.partySlots[A].slotHpOverlay.setVisible(!0),this.partySlots[A].slotHpText.setVisible(!0)}doRelease(A){this.showText(this.getReleaseMessage(ee(this.scene.getPlayerParty()[A])),null,()=>{if(this.clearPartySlots(),this.scene.removePartyMemberModifiers(A),this.scene.getPlayerParty().splice(A,1)[0].destroy(),this.populatePartySlots(),this.cursor>=this.scene.getPlayerParty().length&&this.setCursor(this.cursor-1),this.partyUiMode===10){const R=this.selectCallback;this.selectCallback=null,R&&R(this.cursor,10)}this.showText("",0)},null,!0)}getReleaseMessage(A){const s=hA(128);return s<20?D.t("partyUiHandler:goodbye",{pokemonName:A}):s<40?D.t("partyUiHandler:byebye",{pokemonName:A}):s<60?D.t("partyUiHandler:farewell",{pokemonName:A}):s<80?D.t("partyUiHandler:soLong",{pokemonName:A}):s<100?D.t("partyUiHandler:thisIsWhereWePart",{pokemonName:A}):s<108?D.t("partyUiHandler:illMissYou",{pokemonName:A}):s<116?D.t("partyUiHandler:illNeverForgetYou",{pokemonName:A}):s<124?D.t("partyUiHandler:untilWeMeetAgain",{pokemonName:A}):s<127?D.t("partyUiHandler:sayonara",{pokemonName:A}):D.t("partyUiHandler:smellYaLater",{pokemonName:A})}getFormChangeItemsModifiers(A){let s=this.scene.findModifiers(n=>n instanceof IR&&n.pokemonId===A.id);const R=s.filter(n=>n.active&&n.formChangeItem===XR.ULTRANECROZIUM_Z);return R.length>0?R:(s.find(n=>n.active)?s=s.filter(n=>n.active||n.formChangeItem===XR.ULTRANECROZIUM_Z):A.species.speciesId===e.NECROZMA&&(s=s.filter(n=>n.formChangeItem!==XR.ULTRANECROZIUM_Z)),s)}getOptionsCursorWithScroll(){return this.optionsCursor+this.optionsScrollCursor+(this.options&&this.options[0]===1e3?-1:0)}clearOptions(){this.moveInfoOverlay.clear(),this.optionsMode=!1,this.optionsScroll=!1,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor(),this.partyMessageBox.setSize(262,30),this.showText("",0)}eraseOptionsCursor(){this.optionsCursorObj&&this.optionsCursorObj.destroy(),this.optionsCursorObj=null}clear(){super.clear(),this.moveInfoOverlay.clear(),this.partyContainer.setVisible(!1),this.clearPartySlots()}clearPartySlots(){this.partySlots.splice(0,this.partySlots.length),this.partySlotsContainer.removeAll(!0)}};L(HO,"PartyUiHandler"),HO.FilterAll=A=>null,HO.FilterNonFainted=A=>A.isFainted()?D.t("partyUiHandler:noEnergy",{pokemonName:ee(A)}):null,HO.FilterFainted=A=>A.isFainted()?null:D.t("partyUiHandler:hasEnergy",{pokemonName:ee(A)}),HO.FilterAllMoves=A=>null,HO.FilterItemMaxStacks=(A,s)=>{const R=A.scene.findModifier(n=>n instanceof Ht&&n.pokemonId===A.id&&n.matchType(s));return R&&R.stackCount===R.getMaxStackCount(A.scene)?D.t("partyUiHandler:tooManyItems",{pokemonName:ee(A)}):null},HO.NoEffectMessage=D.t("partyUiHandler:anyEffect");let vE=HO;const HK=class HK extends Phaser.GameObjects.Container{constructor(A,s,R,n,I,a){super(A,s>=A.currentBattle.getBattlerCount()?230.5:64,s>=A.currentBattle.getBattlerCount()?-184+(A.currentBattle.double?-40:0)+(28+(A.currentBattle.double?8:0))*s:-124+(A.currentBattle.double?-8:0)+s*64),this.slotIndex=s,this.pokemon=R,this.iconAnimHandler=n,this.setup(I,a)}getPokemon(){return this.pokemon}setup(A,s){var P;const R=this.scene.currentBattle.getBattlerCount(),n=`party_slot${this.slotIndex>=R?"":"_main"}`,I=this.scene.add.sprite(0,0,n,`${n}${this.pokemon.hp?"":"_fnt"}`);this.slotBg=I,this.add(I);const a=this.scene.add.sprite(this.slotIndex>=R?-85.5:-51,this.slotIndex>=R?0:-20.5,"party_pb");this.slotPb=a,this.add(a),this.pokemonIcon=this.scene.addPokemonIcon(this.pokemon,a.x,a.y,.5,.5,!0),this.add(this.pokemonIcon),this.iconAnimHandler.addOrUpdate(this.pokemonIcon,Qs.PASSIVE);const r=this.scene.add.container(0,0);this.add(r);let S=this.pokemon.getNameToRender(),o;const l=le(this.scene,0,0,S,X.PARTY);for(o=l.displayWidth;o>(this.slotIndex>=R?52:76-(this.pokemon.fusionSpecies?8:0));)S=`${S.slice(0,S.endsWith(".")?-2:-1).trimEnd()}.`,l.setText(S),o=l.displayWidth;l.destroy(),this.slotName=le(this.scene,0,0,S,X.PARTY),this.slotName.setPositionRelative(I,this.slotIndex>=R?21:24,this.slotIndex>=R?2:10),this.slotName.setOrigin(0,0);const C=this.scene.add.image(0,0,"party_slot_overlay_lv");C.setPositionRelative(this.slotName,8,12),C.setOrigin(0,0);const M=le(this.scene,0,0,this.pokemon.level.toString(),this.pokemon.level<this.scene.getMaxExpLevel()?X.PARTY:X.PARTY_RED);M.setPositionRelative(C,9,0),M.setOrigin(0,.25),r.add([this.slotName,C,M]);const u=OL(this.pokemon.getGender(!0));if(u){const G=le(this.scene,0,0,u,X.PARTY);G.setColor(vn(this.pokemon.getGender(!0))),G.setShadowColor(vn(this.pokemon.getGender(!0),!0)),this.slotIndex>=R?G.setPositionRelative(C,36,0):G.setPositionRelative(this.slotName,76-(this.pokemon.fusionSpecies?8:0),3),G.setOrigin(0,.25),r.add(G)}if(this.pokemon.fusionSpecies){const G=this.scene.add.image(0,0,"icon_spliced");G.setScale(.5),G.setOrigin(0,0),this.slotIndex>=R?G.setPositionRelative(C,36+(u?8:0),.5):G.setPositionRelative(this.slotName,76,3.5),r.add(G)}if(this.pokemon.status){const G=this.scene.add.sprite(0,0,HR("statuses"));G.setFrame(Re[(P=this.pokemon.status)==null?void 0:P.effect].toLowerCase()),G.setOrigin(0,0),G.setPositionRelative(C,this.slotIndex>=R?43:55,0),r.add(G)}if(this.pokemon.isShiny()){const G=this.pokemon.isFusion()&&this.pokemon.shiny&&this.pokemon.fusionShiny,d=this.scene.add.image(0,0,`shiny_star_small${G?"_1":""}`);if(d.setOrigin(0,0),d.setPositionRelative(this.slotName,-9,3),d.setTint(YE(G?this.pokemon.variant:this.pokemon.getVariant())),r.add(d),G){const H=this.scene.add.image(0,0,"shiny_star_small_2");H.setOrigin(0,0),H.setPosition(d.x,d.y),H.setTint(YE(this.pokemon.fusionVariant)),r.add(H)}}this.slotHpBar=this.scene.add.image(0,0,"party_slot_hp_bar"),this.slotHpBar.setPositionRelative(I,this.slotIndex>=R?72:8,this.slotIndex>=R?6:31),this.slotHpBar.setOrigin(0,0),this.slotHpBar.setVisible(!1);const h=this.pokemon.getHpRatio();if(this.slotHpOverlay=this.scene.add.sprite(0,0,"party_slot_hp_overlay",h>.5?"high":h>.25?"medium":"low"),this.slotHpOverlay.setPositionRelative(this.slotHpBar,16,2),this.slotHpOverlay.setOrigin(0,0),this.slotHpOverlay.setScale(h,1),this.slotHpOverlay.setVisible(!1),this.slotHpText=le(this.scene,0,0,`${this.pokemon.hp}/${this.pokemon.getMaxHp()}`,X.PARTY),this.slotHpText.setPositionRelative(this.slotHpBar,this.slotHpBar.width-3,this.slotHpBar.height-2),this.slotHpText.setOrigin(1,0),this.slotHpText.setVisible(!1),this.slotDescriptionLabel=le(this.scene,0,0,"",X.MESSAGE),this.slotDescriptionLabel.setPositionRelative(I,this.slotIndex>=R?94:32,this.slotIndex>=R?16:46),this.slotDescriptionLabel.setOrigin(0,1),this.slotDescriptionLabel.setVisible(!1),r.add([this.slotHpBar,this.slotHpOverlay,this.slotHpText,this.slotDescriptionLabel]),A!==6)this.slotDescriptionLabel.setVisible(!1),this.slotHpBar.setVisible(!0),this.slotHpOverlay.setVisible(!0),this.slotHpText.setVisible(!0);else{this.slotHpBar.setVisible(!1),this.slotHpOverlay.setVisible(!1),this.slotHpText.setVisible(!1);let G;this.pokemon.getMoveset().filter(d=>(d==null?void 0:d.moveId)===s).length>0?G=D.t("partyUiHandler:learned"):this.pokemon.compatibleTms.indexOf(s)===-1?G=D.t("partyUiHandler:notAble"):G=D.t("partyUiHandler:able"),this.slotDescriptionLabel.setText(G),this.slotDescriptionLabel.setVisible(!0)}}select(){this.selected||(this.selected=!0,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,Qs.ACTIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,Qs.PASSIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb"))}setTransfer(A){this.transfer!==A&&(this.transfer=A,this.updateSlotTexture())}updateSlotTexture(){const A=this.scene.currentBattle.getBattlerCount();this.slotBg.setTexture(`party_slot${this.slotIndex>=A?"":"_main"}`,`party_slot${this.slotIndex>=A?"":"_main"}${this.transfer?"_swap":this.pokemon.hp?"":"_fnt"}${this.selected?"_sel":""}`)}};L(HK,"PartySlot");let S0=HK;const dK=class dK extends Phaser.GameObjects.Container{constructor(A,s,R){super(A,s,R),this.setup()}setup(){const A=this.scene.add.sprite(0,0,"party_cancel");this.add(A),this.partyCancelBg=A;const s=this.scene.add.sprite(-17,0,"party_pb");this.add(s),this.partyCancelPb=s;const R=le(this.scene,-8,-7,D.t("partyUiHandler:cancel"),X.PARTY);this.add(R)}select(){this.selected||(this.selected=!0,this.partyCancelBg.setFrame("party_cancel_sel"),this.partyCancelPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.partyCancelBg.setFrame("party_cancel"),this.partyCancelPb.setFrame("party_pb"))}};L(dK,"PartyCancelButton");let o0=dK;const fK=class fK extends as{constructor(A,s){super(A,s)}start(){var R;super.start();const A=this.scene.currentBattle.turnCommands[this.fieldIndex],s=(R=A==null?void 0:A.move)==null?void 0:R.move;this.scene.ui.setMode(Oe.TARGET_SELECT,this.fieldIndex,s,n=>{this.scene.ui.setMode(Oe.MESSAGE);const I=this.scene.getField(),a=I[this.fieldIndex],r=ye[s];if(r&&a.isMoveTargetRestricted(r.id,a,I[n[0]])){const S=a.getRestrictingTag(s,a,I[n[0]]).selectionDeniedText(a,r.id);a.scene.queueMessage(D.t(S,{moveName:r.name}),0,!0),n=[]}n.length<1?(this.scene.currentBattle.turnCommands[this.fieldIndex]=null,this.scene.unshiftPhase(new AS(this.scene,this.fieldIndex))):A.targets=n,(A==null?void 0:A.command)===NA.BALL&&this.fieldIndex&&(this.scene.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),this.end()})}};L(fK,"SelectTargetPhase");let cC=fK;const TN=class TN extends kO{constructor(A,s){super(A),this.fieldIndex=s}start(){var I,a,r,S,o;super.start(),this.scene.updateGameInfo();const A=this.scene.ui.handlers[Oe.COMMAND];if(A&&(this.scene.currentBattle.turn===1||A.getCursor()===NA.POKEMON?A.setCursor(NA.FIGHT):A.setCursor(A.getCursor())),this.fieldIndex)if(this.scene.getPlayerField().filter(l=>l.isActive()).length===1)this.fieldIndex=nR.CENTER;else{const l=this.scene.currentBattle.turnCommands[this.fieldIndex-1];((l==null?void 0:l.command)===NA.BALL||(l==null?void 0:l.command)===NA.RUN)&&(this.scene.currentBattle.turnCommands[this.fieldIndex]={command:l==null?void 0:l.command,skip:!0})}if((I=this.scene.currentBattle)!=null&&I.double&&((r=(a=this.getPokemon().getAlly())==null?void 0:a.getTag(Y.COMMANDED))==null?void 0:r.getSourcePokemon(this.scene))===this.getPokemon()&&(this.scene.currentBattle.turnCommands[this.fieldIndex]={command:NA.FIGHT,move:{move:t.NONE,targets:[]},skip:!0}),this.getPokemon().getTag(Y.ENCORE)&&this.getPokemon().lapseTag(Y.ENCORE),(S=this.scene.currentBattle.turnCommands[this.fieldIndex])!=null&&S.skip)return this.end();const R=this.scene.getPlayerField()[this.fieldIndex],n=R.getMoveQueue();for(;n.length&&n[0]&&n[0].move&&(!R.getMoveset().find(l=>(l==null?void 0:l.moveId)===n[0].move)||!R.getMoveset()[R.getMoveset().findIndex(l=>(l==null?void 0:l.moveId)===n[0].move)].isUsable(R,n[0].ignorePP));)n.shift();if(n.length){const l=n[0];if(!l.move)this.handleCommand(NA.FIGHT,-1,!1);else{const C=R.getMoveset().findIndex(M=>(M==null?void 0:M.moveId)===l.move);C>-1&&R.getMoveset()[C].isUsable(R,l.ignorePP)?this.handleCommand(NA.FIGHT,C,l.ignorePP,{targets:l.targets,multiple:l.targets.length>1}):this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)}}else this.scene.currentBattle.isBattleMysteryEncounter()&&((o=this.scene.currentBattle.mysteryEncounter)!=null&&o.skipToFightInput)?(this.scene.ui.clearText(),this.scene.ui.setMode(Oe.FIGHT,this.fieldIndex)):this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)}handleCommand(A,s,...R){var a,r;const n=this.scene.getPlayerField()[this.fieldIndex];let I=!1;switch(A){case NA.FIGHT:let S=!1;if(s===-1||n.trySelectMove(s,R[0])||(S=s>-1&&!n.getMoveset().filter(h=>h==null?void 0:h.isUsable(n)).length)){const h=S?t.STRUGGLE:s>-1?n.getMoveset()[s].moveId:t.NONE,P={command:NA.FIGHT,cursor:s,move:{move:h,targets:[],ignorePP:R[0]},args:R},G=R.length<3?Cn(n,h):R[2];h||(P.targets=[this.fieldIndex]),console.log(G,ee(n)),G.targets.length>1&&G.multiple&&this.scene.unshiftPhase(new cC(this.scene,this.fieldIndex)),G.targets.length<=1||G.multiple?P.move.targets=G.targets:n.getTag(Y.CHARGING)&&n.getMoveQueue().length>=1?P.move.targets=n.getMoveQueue()[0].targets:this.scene.unshiftPhase(new cC(this.scene,this.fieldIndex)),this.scene.currentBattle.turnCommands[this.fieldIndex]=P,I=!0}else if(s<n.getMoveset().length){const h=n.getMoveset()[s];this.scene.ui.setMode(Oe.MESSAGE);const P=n.isMoveRestricted(h.moveId,n)?n.getRestrictingTag(h.moveId,n).selectionDeniedText(n,h.moveId):h.getName().endsWith(" (N)")?"battle:moveNotImplemented":"battle:moveNoPP",G=h.getName().replace(" (N)","");this.scene.ui.showText(D.t(P,{moveName:G}),null,()=>{this.scene.ui.clearText(),this.scene.ui.setMode(Oe.FIGHT,this.fieldIndex)},null,!0)}break;case NA.BALL:const o=this.scene.getEnemyField().filter(h=>h.isActive(!0)).some(h=>!h.scene.gameData.dexData[h.species.speciesId].caughtAttr)&&this.scene.gameData.getStarterCount(h=>!!h.caughtAttr)<Object.keys(KA).length-1;if(this.scene.arena.biomeType===N.END&&(!this.scene.gameMode.isClassic||this.scene.gameMode.isFreshStartChallenge()||o))this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:noPokeballForce"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0);else if(this.scene.currentBattle.battleType===ht.TRAINER)this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:noPokeballTrainer"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0);else if(this.scene.currentBattle.isBattleMysteryEncounter()&&!this.scene.currentBattle.mysteryEncounter.catchAllowed)this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:noPokeballMysteryEncounter"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0);else{const h=this.scene.getEnemyField().filter(P=>P.isActive(!0)).map(P=>P.getBattlerIndex());if(h.length>1)this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:noPokeballMulti"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0);else if(s<5){const P=this.scene.getEnemyField().find(G=>G.isActive(!0));P!=null&&P.isBoss()&&(P==null?void 0:P.bossSegmentIndex)>=1&&!(P!=null&&P.hasAbility(O.WONDER_GUARD,!1,!0))&&s<be.MASTER_BALL?(this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:noPokeballStrong"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0)):(this.scene.currentBattle.turnCommands[this.fieldIndex]={command:NA.BALL,cursor:s},this.scene.currentBattle.turnCommands[this.fieldIndex].targets=h,this.fieldIndex&&(this.scene.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),I=!0)}}break;case NA.POKEMON:case NA.RUN:const l=A===NA.POKEMON,{currentBattle:C,arena:M}=this.scene,u=(a=C.mysteryEncounter)==null?void 0:a.fleeAllowed;if(!l&&(M.biomeType===N.END||!Ve(u)&&!u))this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:noEscapeForce"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0);else if(!l&&(C.battleType===ht.TRAINER||((r=C.mysteryEncounter)==null?void 0:r.encounterMode)===oE.TRAINER_BATTLE))this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex),this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(D.t("battle:noEscapeTrainer"),null,()=>{this.scene.ui.showText("",0),this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0);else{const h=l&&R[0],P=[];if(h||!n.isTrapped(P))C.turnCommands[this.fieldIndex]=l?{command:NA.POKEMON,cursor:s,args:R}:{command:NA.RUN},I=!0,!l&&this.fieldIndex&&(C.turnCommands[this.fieldIndex-1].skip=!0);else if(P.length>0)l||this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(P[0],null,()=>{this.scene.ui.showText("",0),l||this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0);else{const G=n.getTag(gR),d=n.scene.arena.getTagOnSide(ge.FAIRY_LOCK,St.PLAYER);if(!G&&!d){D.t(`battle:noEscape${l?"Switch":"Flee"}`);break}l||(this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex),this.scene.ui.setMode(Oe.MESSAGE));const H=L(f=>{this.scene.ui.showText(D.t("battle:noEscapePokemon",{pokemonName:f.sourceId&&this.scene.getPokemonById(f.sourceId)?ee(this.scene.getPokemonById(f.sourceId)):"",moveName:f.getMoveName(),escapeVerb:l?D.t("battle:escapeVerbSwitch"):D.t("battle:escapeVerbFlee")}),null,()=>{this.scene.ui.showText("",0),l||this.scene.ui.setMode(Oe.COMMAND,this.fieldIndex)},null,!0)},"showNoEscapeText");G?H(G):d&&H(d)}}break}return I&&this.end(),I}cancel(){this.fieldIndex&&(this.scene.unshiftPhase(new TN(this.scene,0)),this.scene.unshiftPhase(new TN(this.scene,1)),this.end())}getFieldIndex(){return this.fieldIndex}getPokemon(){return this.scene.getPlayerField()[this.fieldIndex]}end(){this.scene.ui.setMode(Oe.MESSAGE).then(()=>super.end())}};L(TN,"CommandPhase");let AS=TN;var NA=(E=>(E[E.FIGHT=0]="FIGHT",E[E.BALL=1]="BALL",E[E.POKEMON=2]="POKEMON",E[E.RUN=3]="RUN",E))(NA||{});const BK=class BK extends Ws{constructor(A){super(A,Oe.COMMAND),this.fieldIndex=0,this.cursor2=0}setup(){const A=this.getUi(),s=[D.t("commandUiHandler:fight"),D.t("commandUiHandler:ball"),D.t("commandUiHandler:pokemon"),D.t("commandUiHandler:run")];this.commandsContainer=this.scene.add.container(217,-38.7),this.commandsContainer.setName("commands"),this.commandsContainer.setVisible(!1),A.add(this.commandsContainer);for(let R=0;R<s.length;R++){const n=le(this.scene,R%2===0?0:55.8,R<2?0:16,s[R],X.WINDOW);n.setName(s[R]),this.commandsContainer.add(n)}}show(A){super.show(A),this.fieldIndex=A.length?A[0]:0,this.commandsContainer.setVisible(!0);let s;const R=this.scene.getCurrentPhase();R instanceof AS?s=R:s=this.scene.getStandbyPhase();const n=this.getUi().getMessageHandler();return n.bg.setVisible(!0),n.commandWindow.setVisible(!0),n.movesWindowContainer.setVisible(!1),n.message.setWordWrapWidth(1110),n.showText(D.t("commandUiHandler:actionMessage",{pokemonName:ee(s.getPokemon())}),0),this.getCursor()===2?this.setCursor(0):this.setCursor(this.getCursor()),!0}processInput(A){const s=this.getUi();let R=!1;const n=this.getCursor();if(A===b.CANCEL||A===b.ACTION)if(A===b.ACTION)switch(n){case 0:s.setMode(Oe.FIGHT,this.scene.getCurrentPhase().getFieldIndex()),R=!0;break;case 1:s.setModeWithoutClear(Oe.BALL),R=!0;break;case 2:s.setMode(Oe.PARTY,us.SWITCH,this.scene.getCurrentPhase().getPokemon().getFieldIndex(),null,vE.FilterNonFainted),R=!0;break;case 3:this.scene.getCurrentPhase().handleCommand(3,0),R=!0;break}else this.scene.getCurrentPhase().cancel();else switch(A){case b.UP:n>=2&&(R=this.setCursor(n-2));break;case b.DOWN:n<2&&(R=this.setCursor(n+2));break;case b.LEFT:n%2===1&&(R=this.setCursor(n-1));break;case b.RIGHT:n%2===0&&(R=this.setCursor(n+1));break}return R&&s.playSelect(),R}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(A){const s=this.getCursor()!==A;return s&&(this.fieldIndex?this.cursor2=A:this.cursor=A),this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.commandsContainer.add(this.cursorObj)),this.cursorObj.setPosition(-5+(A%2===1?56:0),8+(A>=2?16:0)),s}clear(){super.clear(),this.getUi().getMessageHandler().commandWindow.setVisible(!1),this.commandsContainer.setVisible(!1),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(BK,"CommandUiHandler");let l0=BK;const SN=class SN extends Ws{constructor(A){super(A,Oe.FIGHT),this.fieldIndex=0,this.cursor2=0}setup(){const A=this.getUi();this.movesContainer=this.scene.add.container(18,-38.7),this.movesContainer.setName(SN.MOVES_CONTAINER_NAME),A.add(this.movesContainer),this.moveInfoContainer=this.scene.add.container(1,0),this.moveInfoContainer.setName("move-info"),A.add(this.moveInfoContainer),this.typeIcon=this.scene.add.sprite(this.scene.scaledCanvas.width-57,-36,HR("types"),"unknown"),this.typeIcon.setVisible(!1),this.moveInfoContainer.add(this.typeIcon),this.moveCategoryIcon=this.scene.add.sprite(this.scene.scaledCanvas.width-25,-36,"categories","physical"),this.moveCategoryIcon.setVisible(!1),this.moveInfoContainer.add(this.moveCategoryIcon),this.ppLabel=le(this.scene,this.scene.scaledCanvas.width-70,-26,"PP",X.MOVE_INFO_CONTENT),this.ppLabel.setOrigin(0,.5),this.ppLabel.setVisible(!1),this.ppLabel.setText(D.t("fightUiHandler:pp")),this.moveInfoContainer.add(this.ppLabel),this.ppText=le(this.scene,this.scene.scaledCanvas.width-12,-26,"--/--",X.MOVE_INFO_CONTENT),this.ppText.setOrigin(1,.5),this.ppText.setVisible(!1),this.moveInfoContainer.add(this.ppText),this.powerLabel=le(this.scene,this.scene.scaledCanvas.width-70,-18,"POWER",X.MOVE_INFO_CONTENT),this.powerLabel.setOrigin(0,.5),this.powerLabel.setVisible(!1),this.powerLabel.setText(D.t("fightUiHandler:power")),this.moveInfoContainer.add(this.powerLabel),this.powerText=le(this.scene,this.scene.scaledCanvas.width-12,-18,"---",X.MOVE_INFO_CONTENT),this.powerText.setOrigin(1,.5),this.powerText.setVisible(!1),this.moveInfoContainer.add(this.powerText),this.accuracyLabel=le(this.scene,this.scene.scaledCanvas.width-70,-10,"ACC",X.MOVE_INFO_CONTENT),this.accuracyLabel.setOrigin(0,.5),this.accuracyLabel.setVisible(!1),this.accuracyLabel.setText(D.t("fightUiHandler:accuracy")),this.moveInfoContainer.add(this.accuracyLabel),this.accuracyText=le(this.scene,this.scene.scaledCanvas.width-12,-10,"---",X.MOVE_INFO_CONTENT),this.accuracyText.setOrigin(1,.5),this.accuracyText.setVisible(!1),this.moveInfoContainer.add(this.accuracyText);const s=1;this.moveInfoOverlay=new SO(this.scene,{delayVisibility:!0,scale:s,onSide:!0,right:!0,x:0,y:-SO.getHeight(s,!0),width:this.scene.game.canvas.width/6+4,hideEffectBox:!0,hideBg:!0}),A.add(this.moveInfoOverlay),this.scene.addInfoToggle(this.moveInfoOverlay),this.scene.addInfoToggle(this)}show(A){super.show(A),this.fieldIndex=A.length?A[0]:0;const s=this.getUi().getMessageHandler();return s.bg.setVisible(!1),s.commandWindow.setVisible(!1),s.movesWindowContainer.setVisible(!0),this.scene.getCurrentPhase().getPokemon().battleSummonData.turnCount<=1?this.setCursor(0):this.setCursor(this.getCursor()),this.displayMoves(),this.toggleInfo(!1),this.active=!0,!0}processInput(A){const s=this.getUi();let R=!1;const n=this.getCursor();if(A===b.CANCEL||A===b.ACTION)if(A===b.ACTION)this.scene.getCurrentPhase().handleCommand(NA.FIGHT,n,!1)?R=!0:s.playError();else{const{battleType:I,mysteryEncounter:a}=this.scene.currentBattle;(I!==ht.MYSTERY_ENCOUNTER||!(a!=null&&a.skipToFightInput))&&(s.setMode(Oe.COMMAND,this.fieldIndex),R=!0)}else switch(A){case b.UP:n>=2&&(R=this.setCursor(n-2));break;case b.DOWN:n<2&&(R=this.setCursor(n+2));break;case b.LEFT:n%2===1&&(R=this.setCursor(n-1));break;case b.RIGHT:n%2===0&&(R=this.setCursor(n+1));break}return R&&s.playSelect(),R}toggleInfo(A){var s,R;A&&(this.movesContainer.setVisible(!1),(s=this.cursorObj)==null||s.setVisible(!1)),this.scene.tweens.add({targets:[this.movesContainer,this.cursorObj],duration:Et(125),ease:"Sine.easeInOut",alpha:A?0:1}),A||(this.movesContainer.setVisible(!0),(R=this.cursorObj)==null||R.setVisible(!0))}isActive(){return this.active}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(A){const s=this.getUi();this.moveInfoOverlay.clear();const R=this.getCursor()!==A;R&&(this.fieldIndex?this.cursor2=A:this.cursor=A),this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),s.add(this.cursorObj));const n=this.scene.getCurrentPhase().getPokemon(),I=n.getMoveset(),a=A<I.length;if(a){const r=I[A],S=n.getMoveType(r.getMove()),o=HR("types");this.typeIcon.setTexture(o,i[S].toLowerCase()).setScale(.8);const l=r.getMove().category;this.moveCategoryIcon.setTexture("categories",Mt[l].toLowerCase()).setScale(1);const C=r.getMove().power,M=r.getMove().accuracy,u=r.getMovePp(),h=u-r.ppUsed,P=Ln(h,2,"  "),G=Ln(u,2,"  ");this.ppText.setText(`${P}/${G}`),this.powerText.setText(`${C>=0?C:"---"}`),this.accuracyText.setText(`${M>=0?M:"---"}`);const d=h/u;let H=X.MOVE_PP_FULL;d>.25&&d<=.5?H=X.MOVE_PP_HALF_FULL:d>0&&d<=.25?H=X.MOVE_PP_NEAR_EMPTY:d===0&&(H=X.MOVE_PP_EMPTY),this.ppText.setColor(this.getTextColor(H,!1)),this.ppText.setShadowColor(this.getTextColor(H,!0)),this.moveInfoOverlay.show(r.getMove()),n.getOpponents().forEach(f=>{f.updateEffectiveness(this.getEffectivenessText(n,f,r))})}return this.typeIcon.setVisible(a),this.ppLabel.setVisible(a),this.ppText.setVisible(a),this.powerLabel.setVisible(a),this.powerText.setVisible(a),this.accuracyLabel.setVisible(a),this.accuracyText.setVisible(a),this.moveCategoryIcon.setVisible(a),this.cursorObj.setPosition(13+(A%2===1?100:0),-31+(A>=2?15:0)),R}getEffectivenessText(A,s,R){var I;const n=s.getMoveEffectiveness(A,R.getMove(),!((I=s.battleData)!=null&&I.abilityRevealed));if(n!==void 0)return`${n}x`}displayMoves(){const A=this.scene.getCurrentPhase().getPokemon(),s=A.getMoveset();for(let R=0;R<4;R++){const n=le(this.scene,R%2===0?0:100,R<2?0:16,"-",X.WINDOW);if(n.setName("text-empty-move"),R<s.length){const I=s[R];n.setText(I.getName()),n.setName(I.getName()),n.setColor(this.getMoveColor(A,I)??n.style.color)}this.movesContainer.add(n)}}getMoveColor(A,s){if(!this.scene.typeHints)return;const R=A.getOpponents();return R.length<=0?void 0:R.map(I=>I.getMoveEffectiveness(A,s.getMove(),!I.battleData.abilityRevealed)).sort((I,a)=>a-I).map(I=>z8(I??0))[0]}clear(){super.clear();const A=this.getUi().getMessageHandler();this.clearMoves(),this.typeIcon.setVisible(!1),this.ppLabel.setVisible(!1),this.ppText.setVisible(!1),this.powerLabel.setVisible(!1),this.powerText.setVisible(!1),this.accuracyLabel.setVisible(!1),this.accuracyText.setVisible(!1),this.moveCategoryIcon.setVisible(!1),this.moveInfoOverlay.clear(),A.bg.setVisible(!0),this.eraseCursor(),this.active=!1}clearMoves(){this.movesContainer.removeAll(!0),this.scene.getCurrentPhase().getPokemon().getOpponents().forEach(s=>{s.updateEffectiveness(void 0)})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(SN,"FightUiHandler"),SN.MOVES_CONTAINER_NAME="moves";let C0=SN;const gK=class gK extends Ws{constructor(A){super(A,Oe.BALL),this.scale=.1666666667}setup(){const A=this.getUi();this.scale=un(X.WINDOW,this.scene.uiTheme).scale;let s="";for(let I=0;I<Object.keys(this.scene.pokeballCounts).length;I++)s+=`${Gl(I)}
`;s+="Cancel";const R=le(this.scene,0,0,s,X.WINDOW,{align:"right",maxLines:6}),n=R.displayWidth;this.pokeballSelectContainer=this.scene.add.container(this.scene.game.canvas.width/6-51-Math.max(64,n),-49),this.pokeballSelectContainer.setVisible(!1),A.add(this.pokeballSelectContainer),this.pokeballSelectBg=_t(this.scene,0,0,50+Math.max(64,n),32+480*this.scale),this.pokeballSelectBg.setOrigin(0,1),this.pokeballSelectContainer.add(this.pokeballSelectBg),this.pokeballSelectContainer.add(R),R.setOrigin(0,0),R.setPositionRelative(this.pokeballSelectBg,42,9),R.setLineSpacing(this.scale*72),this.countsText=le(this.scene,0,0,"",X.WINDOW,{maxLines:5}),this.countsText.setPositionRelative(this.pokeballSelectBg,18,9),this.countsText.setLineSpacing(this.scale*72),this.pokeballSelectContainer.add(this.countsText),this.setCursor(0)}show(A){return super.show(A),this.updateCounts(),this.pokeballSelectContainer.setVisible(!0),this.setCursor(this.cursor),!0}processInput(A){const s=this.getUi();let R=!1;const n=Object.keys(this.scene.pokeballCounts).length;if(A===b.ACTION||A===b.CANCEL){const I=this.scene.getCurrentPhase();R=!0,A===b.ACTION&&this.cursor<n?this.scene.pokeballCounts[this.cursor]?I.handleCommand(NA.BALL,this.cursor)&&(this.scene.ui.setMode(Oe.COMMAND,I.getFieldIndex()),this.scene.ui.setMode(Oe.MESSAGE),R=!0):s.playError():(s.setMode(Oe.COMMAND,I.getFieldIndex()),R=!0)}else switch(A){case b.UP:R=this.setCursor(this.cursor?this.cursor-1:n);break;case b.DOWN:R=this.setCursor(this.cursor<n?this.cursor+1:0);break}return R&&s.playSelect(),R}updateCounts(){this.countsText.setText(Object.values(this.scene.pokeballCounts).map(A=>`x${A}`).join(`
`))}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.pokeballSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.pokeballSelectBg,12,15+(6+this.cursor*96)*this.scale),s}clear(){super.clear(),this.pokeballSelectContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(gK,"BallUiHandler");let U0=gK;const u0={[e.BULBASAUR]:O.GRASSY_SURGE,[e.CHARMANDER]:O.BEAST_BOOST,[e.SQUIRTLE]:O.STURDY,[e.CATERPIE]:O.MAGICIAN,[e.WEEDLE]:O.TINTED_LENS,[e.PIDGEY]:O.SHEER_FORCE,[e.RATTATA]:O.STRONG_JAW,[e.SPEAROW]:O.MOXIE,[e.EKANS]:O.REGENERATOR,[e.SANDSHREW]:O.TOUGH_CLAWS,[e.NIDORAN_F]:O.FLARE_BOOST,[e.NIDORAN_M]:O.GUTS,[e.VULPIX]:O.FUR_COAT,[e.ZUBAT]:O.INTIMIDATE,[e.ODDISH]:O.TRIAGE,[e.PARAS]:O.TRIAGE,[e.VENONAT]:O.SIMPLE,[e.DIGLETT]:O.STURDY,[e.MEOWTH]:O.TOUGH_CLAWS,[e.PSYDUCK]:O.SIMPLE,[e.MANKEY]:O.IRON_FIST,[e.GROWLITHE]:O.FLUFFY,[e.POLIWAG]:O.NO_GUARD,[e.ABRA]:O.MAGICIAN,[e.MACHOP]:O.QUICK_FEET,[e.BELLSPROUT]:O.FLOWER_GIFT,[e.TENTACOOL]:O.TOXIC_CHAIN,[e.GEODUDE]:O.DRY_SKIN,[e.PONYTA]:O.MAGIC_GUARD,[e.SLOWPOKE]:O.UNAWARE,[e.MAGNEMITE]:O.LEVITATE,[e.FARFETCHD]:O.SNIPER,[e.DODUO]:O.PARENTAL_BOND,[e.SEEL]:O.WATER_BUBBLE,[e.GRIMER]:O.WATER_ABSORB,[e.SHELLDER]:O.ICE_SCALES,[e.GASTLY]:O.SHADOW_SHIELD,[e.ONIX]:O.ROCKY_PAYLOAD,[e.DROWZEE]:O.MAGICIAN,[e.KRABBY]:O.UNBURDEN,[e.VOLTORB]:O.TRANSISTOR,[e.EXEGGCUTE]:O.RIPEN,[e.CUBONE]:O.PARENTAL_BOND,[e.LICKITUNG]:O.CHEEK_POUCH,[e.KOFFING]:O.PARENTAL_BOND,[e.RHYHORN]:O.FILTER,[e.TANGELA]:O.SEED_SOWER,[e.KANGASKHAN]:O.GUTS,[e.HORSEA]:O.DRAGONS_MAW,[e.GOLDEEN]:O.MULTISCALE,[e.STARYU]:O.REGENERATOR,[e.SCYTHER]:O.TINTED_LENS,[e.PINSIR]:O.TINTED_LENS,[e.TAUROS]:O.STAMINA,[e.MAGIKARP]:O.MULTISCALE,[e.LAPRAS]:O.LIGHTNING_ROD,[e.DITTO]:O.ADAPTABILITY,[e.EEVEE]:O.PICKUP,[e.PORYGON]:O.PROTEAN,[e.OMANYTE]:O.STURDY,[e.KABUTO]:O.TOUGH_CLAWS,[e.AERODACTYL]:O.ORICHALCUM_PULSE,[e.ARTICUNO]:O.SNOW_WARNING,[e.ZAPDOS]:O.DRIZZLE,[e.MOLTRES]:O.DROUGHT,[e.DRATINI]:O.AERILATE,[e.MEWTWO]:O.NEUROFORCE,[e.MEW]:O.PROTEAN,[e.CHIKORITA]:O.THICK_FAT,[e.CYNDAQUIL]:O.DROUGHT,[e.TOTODILE]:O.TOUGH_CLAWS,[e.SENTRET]:O.PICKUP,[e.HOOTHOOT]:O.AERILATE,[e.LEDYBA]:O.PRANKSTER,[e.SPINARAK]:O.PRANKSTER,[e.CHINCHOU]:O.REGENERATOR,[e.PICHU]:O.ELECTRIC_SURGE,[e.CLEFFA]:O.ANALYTIC,[e.IGGLYBUFF]:O.HUGE_POWER,[e.TOGEPI]:O.PIXILATE,[e.NATU]:O.SHEER_FORCE,[e.MAREEP]:O.ELECTROMORPHOSIS,[e.HOPPIP]:O.FLUFFY,[e.AIPOM]:O.SCRAPPY,[e.SUNKERN]:O.DROUGHT,[e.YANMA]:O.SHEER_FORCE,[e.WOOPER]:O.COMATOSE,[e.MURKROW]:O.DARK_AURA,[e.MISDREAVUS]:O.BEADS_OF_RUIN,[e.UNOWN]:O.PICKUP,[e.GIRAFARIG]:O.PARENTAL_BOND,[e.PINECO]:O.IRON_BARBS,[e.DUNSPARCE]:O.UNAWARE,[e.GLIGAR]:O.TOXIC_BOOST,[e.SNUBBULL]:O.PIXILATE,[e.QWILFISH]:O.TOXIC_DEBRIS,[e.SHUCKLE]:O.HARVEST,[e.HERACROSS]:O.TECHNICIAN,[e.SNEASEL]:O.TOUGH_CLAWS,[e.TEDDIURSA]:O.THICK_FAT,[e.SLUGMA]:O.DESOLATE_LAND,[e.SWINUB]:O.SLUSH_RUSH,[e.CORSOLA]:O.STORM_DRAIN,[e.REMORAID]:O.SIMPLE,[e.DELIBIRD]:O.HUGE_POWER,[e.SKARMORY]:O.LIGHTNING_ROD,[e.HOUNDOUR]:O.LIGHTNING_ROD,[e.PHANPY]:O.SPEED_BOOST,[e.STANTLER]:O.SPEED_BOOST,[e.SMEARGLE]:O.PRANKSTER,[e.TYROGUE]:O.MOXIE,[e.SMOOCHUM]:O.PSYCHIC_SURGE,[e.ELEKID]:O.SHEER_FORCE,[e.MAGBY]:O.SHEER_FORCE,[e.MILTANK]:O.STAMINA,[e.RAIKOU]:O.BEAST_BOOST,[e.ENTEI]:O.BEAST_BOOST,[e.SUICUNE]:O.BEAST_BOOST,[e.LARVITAR]:O.SAND_RUSH,[e.LUGIA]:O.DELTA_STREAM,[e.HO_OH]:O.MAGIC_GUARD,[e.CELEBI]:O.PSYCHIC_SURGE,[e.TREECKO]:O.TINTED_LENS,[e.TORCHIC]:O.DEFIANT,[e.MUDKIP]:O.DRIZZLE,[e.POOCHYENA]:O.TOUGH_CLAWS,[e.ZIGZAGOON]:O.RUN_AWAY,[e.WURMPLE]:O.SIMPLE,[e.LOTAD]:O.DRIZZLE,[e.SEEDOT]:O.SHARPNESS,[e.TAILLOW]:O.AERILATE,[e.WINGULL]:O.SWIFT_SWIM,[e.RALTS]:O.PSYCHIC_SURGE,[e.SURSKIT]:O.WATER_BUBBLE,[e.SHROOMISH]:O.GUTS,[e.SLAKOTH]:O.GUTS,[e.NINCADA]:O.MAGIC_GUARD,[e.WHISMUR]:O.PUNK_ROCK,[e.MAKUHITA]:O.STAMINA,[e.AZURILL]:O.MISTY_SURGE,[e.NOSEPASS]:O.LEVITATE,[e.SKITTY]:O.SCRAPPY,[e.SABLEYE]:O.UNNERVE,[e.MAWILE]:O.UNNERVE,[e.ARON]:O.EARTH_EATER,[e.MEDITITE]:O.MINDS_EYE,[e.ELECTRIKE]:O.FLASH_FIRE,[e.PLUSLE]:O.POWER_SPOT,[e.MINUN]:O.POWER_SPOT,[e.VOLBEAT]:O.HONEY_GATHER,[e.ILLUMISE]:O.HONEY_GATHER,[e.GULPIN]:O.EARTH_EATER,[e.CARVANHA]:O.SHEER_FORCE,[e.WAILMER]:O.LEVITATE,[e.NUMEL]:O.FUR_COAT,[e.TORKOAL]:O.ANALYTIC,[e.SPOINK]:O.PSYCHIC_SURGE,[e.SPINDA]:O.SIMPLE,[e.TRAPINCH]:O.ADAPTABILITY,[e.CACNEA]:O.SAND_RUSH,[e.SWABLU]:O.FLUFFY,[e.ZANGOOSE]:O.POISON_HEAL,[e.SEVIPER]:O.MULTISCALE,[e.LUNATONE]:O.SHADOW_SHIELD,[e.SOLROCK]:O.DROUGHT,[e.BARBOACH]:O.SIMPLE,[e.CORPHISH]:O.TOUGH_CLAWS,[e.BALTOY]:O.WELL_BAKED_BODY,[e.LILEEP]:O.SEED_SOWER,[e.ANORITH]:O.WATER_ABSORB,[e.FEEBAS]:O.MAGIC_GUARD,[e.CASTFORM]:O.ADAPTABILITY,[e.KECLEON]:O.ADAPTABILITY,[e.SHUPPET]:O.SHADOW_SHIELD,[e.DUSKULL]:O.UNNERVE,[e.TROPIUS]:O.RIPEN,[e.ABSOL]:O.SHARPNESS,[e.WYNAUT]:O.STURDY,[e.SNORUNT]:O.SNOW_WARNING,[e.SPHEAL]:O.UNAWARE,[e.CLAMPERL]:O.ARENA_TRAP,[e.RELICANTH]:O.PRIMORDIAL_SEA,[e.LUVDISC]:O.MULTISCALE,[e.BAGON]:O.MOLD_BREAKER,[e.BELDUM]:O.LEVITATE,[e.REGIROCK]:O.SAND_STREAM,[e.REGICE]:O.SNOW_WARNING,[e.REGISTEEL]:O.STEELY_SPIRIT,[e.LATIAS]:O.PRISM_ARMOR,[e.LATIOS]:O.TINTED_LENS,[e.KYOGRE]:O.MOLD_BREAKER,[e.GROUDON]:O.TURBOBLAZE,[e.RAYQUAZA]:O.UNNERVE,[e.JIRACHI]:O.COMATOSE,[e.DEOXYS]:O.PROTEAN,[e.TURTWIG]:O.THICK_FAT,[e.CHIMCHAR]:O.BEAST_BOOST,[e.PIPLUP]:O.DRIZZLE,[e.STARLY]:O.ROCK_HEAD,[e.BIDOOF]:O.SAP_SIPPER,[e.KRICKETOT]:O.SHARPNESS,[e.SHINX]:O.SPEED_BOOST,[e.BUDEW]:O.GRASSY_SURGE,[e.CRANIDOS]:O.ROCK_HEAD,[e.SHIELDON]:O.EARTH_EATER,[e.BURMY]:O.STURDY,[e.COMBEE]:O.INTIMIDATE,[e.PACHIRISU]:O.HONEY_GATHER,[e.BUIZEL]:O.MOXIE,[e.CHERUBI]:O.ORICHALCUM_PULSE,[e.SHELLOS]:O.REGENERATOR,[e.DRIFLOON]:O.MAGIC_GUARD,[e.BUNEARY]:O.ADAPTABILITY,[e.GLAMEOW]:O.INTIMIDATE,[e.CHINGLING]:O.PUNK_ROCK,[e.STUNKY]:O.NEUTRALIZING_GAS,[e.BRONZOR]:O.MIRROR_ARMOR,[e.BONSLY]:O.SAP_SIPPER,[e.MIME_JR]:O.PRANKSTER,[e.HAPPINY]:O.FUR_COAT,[e.CHATOT]:O.PUNK_ROCK,[e.SPIRITOMB]:O.VESSEL_OF_RUIN,[e.GIBLE]:O.SAND_STREAM,[e.MUNCHLAX]:O.RIPEN,[e.RIOLU]:O.MINDS_EYE,[e.HIPPOPOTAS]:O.UNAWARE,[e.SKORUPI]:O.SUPER_LUCK,[e.CROAGUNK]:O.MOXIE,[e.CARNIVINE]:O.ARENA_TRAP,[e.FINNEON]:O.WATER_BUBBLE,[e.MANTYKE]:O.UNAWARE,[e.SNOVER]:O.GRASSY_SURGE,[e.ROTOM]:O.HADRON_ENGINE,[e.UXIE]:O.UNAWARE,[e.MESPRIT]:O.MOODY,[e.AZELF]:O.NEUROFORCE,[e.DIALGA]:O.LEVITATE,[e.PALKIA]:O.SPEED_BOOST,[e.HEATRAN]:O.EARTH_EATER,[e.REGIGIGAS]:O.SCRAPPY,[e.GIRATINA]:O.SHADOW_SHIELD,[e.CRESSELIA]:O.SHADOW_SHIELD,[e.PHIONE]:O.SIMPLE,[e.MANAPHY]:O.PRIMORDIAL_SEA,[e.DARKRAI]:O.UNNERVE,[e.SHAYMIN]:O.WIND_RIDER,[e.ARCEUS]:O.ADAPTABILITY,[e.VICTINI]:O.SHEER_FORCE,[e.SNIVY]:O.MULTISCALE,[e.TEPIG]:O.ROCK_HEAD,[e.OSHAWOTT]:O.INTREPID_SWORD,[e.PATRAT]:O.NO_GUARD,[e.LILLIPUP]:O.FUR_COAT,[e.PURRLOIN]:O.PICKUP,[e.PANSAGE]:O.WELL_BAKED_BODY,[e.PANSEAR]:O.WATER_ABSORB,[e.PANPOUR]:O.SAP_SIPPER,[e.MUNNA]:O.NEUTRALIZING_GAS,[e.PIDOVE]:O.SNIPER,[e.BLITZLE]:O.ELECTRIC_SURGE,[e.ROGGENROLA]:O.SOLID_ROCK,[e.WOOBAT]:O.OPPORTUNIST,[e.DRILBUR]:O.STURDY,[e.AUDINO]:O.FRIEND_GUARD,[e.TIMBURR]:O.ROCKY_PAYLOAD,[e.TYMPOLE]:O.POISON_HEAL,[e.THROH]:O.STAMINA,[e.SAWK]:O.SCRAPPY,[e.SEWADDLE]:O.SHARPNESS,[e.VENIPEDE]:O.STAMINA,[e.COTTONEE]:O.FLUFFY,[e.PETILIL]:O.SIMPLE,[e.BASCULIN]:O.SUPREME_OVERLORD,[e.SANDILE]:O.TOUGH_CLAWS,[e.DARUMAKA]:O.GORILLA_TACTICS,[e.MARACTUS]:O.WELL_BAKED_BODY,[e.DWEBBLE]:O.ROCKY_PAYLOAD,[e.SCRAGGY]:O.PROTEAN,[e.SIGILYPH]:O.FLARE_BOOST,[e.YAMASK]:O.PURIFYING_SALT,[e.TIRTOUGA]:O.WATER_ABSORB,[e.ARCHEN]:O.MULTISCALE,[e.TRUBBISH]:O.NEUTRALIZING_GAS,[e.ZORUA]:O.DARK_AURA,[e.MINCCINO]:O.FUR_COAT,[e.GOTHITA]:O.UNNERVE,[e.SOLOSIS]:O.PSYCHIC_SURGE,[e.DUCKLETT]:O.DRIZZLE,[e.VANILLITE]:O.SLUSH_RUSH,[e.DEERLING]:O.FUR_COAT,[e.EMOLGA]:O.SERENE_GRACE,[e.KARRABLAST]:O.QUICK_DRAW,[e.FOONGUS]:O.THICK_FAT,[e.FRILLISH]:O.POISON_HEAL,[e.ALOMOMOLA]:O.MULTISCALE,[e.JOLTIK]:O.TRANSISTOR,[e.FERROSEED]:O.ROUGH_SKIN,[e.KLINK]:O.STEELY_SPIRIT,[e.TYNAMO]:O.POISON_HEAL,[e.ELGYEM]:O.BEADS_OF_RUIN,[e.LITWICK]:O.SHADOW_TAG,[e.AXEW]:O.DRAGONS_MAW,[e.CUBCHOO]:O.FUR_COAT,[e.CRYOGONAL]:O.SNOW_WARNING,[e.SHELMET]:O.PROTEAN,[e.STUNFISK]:O.STORM_DRAIN,[e.MIENFOO]:O.NO_GUARD,[e.DRUDDIGON]:O.INTIMIDATE,[e.GOLETT]:O.SHADOW_SHIELD,[e.PAWNIARD]:O.SWORD_OF_RUIN,[e.BOUFFALANT]:O.ROCK_HEAD,[e.RUFFLET]:O.SPEED_BOOST,[e.VULLABY]:O.THICK_FAT,[e.HEATMOR]:O.CONTRARY,[e.DURANT]:O.COMPOUND_EYES,[e.DEINO]:O.PARENTAL_BOND,[e.LARVESTA]:O.DROUGHT,[e.COBALION]:O.INTREPID_SWORD,[e.TERRAKION]:O.ROCKY_PAYLOAD,[e.VIRIZION]:O.SHARPNESS,[e.TORNADUS]:O.DRIZZLE,[e.THUNDURUS]:O.DRIZZLE,[e.RESHIRAM]:O.ORICHALCUM_PULSE,[e.ZEKROM]:O.HADRON_ENGINE,[e.LANDORUS]:O.STORM_DRAIN,[e.KYUREM]:O.SNOW_WARNING,[e.KELDEO]:O.GRIM_NEIGH,[e.MELOETTA]:O.MINDS_EYE,[e.GENESECT]:O.PROTEAN,[e.CHESPIN]:O.DAUNTLESS_SHIELD,[e.FENNEKIN]:O.PSYCHIC_SURGE,[e.FROAKIE]:O.STAKEOUT,[e.BUNNELBY]:O.GUTS,[e.FLETCHLING]:O.MAGIC_GUARD,[e.SCATTERBUG]:O.PRANKSTER,[e.LITLEO]:O.BEAST_BOOST,[e.FLABEBE]:O.GRASSY_SURGE,[e.SKIDDO]:O.SEED_SOWER,[e.PANCHAM]:O.FUR_COAT,[e.FURFROU]:O.FLUFFY,[e.ESPURR]:O.FUR_COAT,[e.HONEDGE]:O.SHARPNESS,[e.SPRITZEE]:O.FUR_COAT,[e.SWIRLIX]:O.RIPEN,[e.INKAY]:O.UNNERVE,[e.BINACLE]:O.SAP_SIPPER,[e.SKRELP]:O.DRAGONS_MAW,[e.CLAUNCHER]:O.PROTEAN,[e.HELIOPTILE]:O.PROTEAN,[e.TYRUNT]:O.RECKLESS,[e.AMAURA]:O.ICE_SCALES,[e.HAWLUCHA]:O.MOXIE,[e.DEDENNE]:O.PIXILATE,[e.CARBINK]:O.SOLID_ROCK,[e.GOOMY]:O.REGENERATOR,[e.KLEFKI]:O.LEVITATE,[e.PHANTUMP]:O.SHADOW_TAG,[e.PUMPKABOO]:O.WELL_BAKED_BODY,[e.BERGMITE]:O.ICE_SCALES,[e.NOIBAT]:O.PUNK_ROCK,[e.XERNEAS]:O.HARVEST,[e.YVELTAL]:O.SOUL_HEART,[e.ZYGARDE]:O.ADAPTABILITY,[e.DIANCIE]:O.PRISM_ARMOR,[e.HOOPA]:O.OPPORTUNIST,[e.VOLCANION]:O.FILTER,[e.ETERNAL_FLOETTE]:O.MAGIC_GUARD,[e.ROWLET]:O.SNIPER,[e.LITTEN]:O.OPPORTUNIST,[e.POPPLIO]:O.PUNK_ROCK,[e.PIKIPEK]:O.TECHNICIAN,[e.YUNGOOS]:O.TOUGH_CLAWS,[e.GRUBBIN]:O.SPEED_BOOST,[e.CRABRAWLER]:O.WATER_BUBBLE,[e.ORICORIO]:O.ADAPTABILITY,[e.CUTIEFLY]:O.TINTED_LENS,[e.ROCKRUFF]:O.ROCKY_PAYLOAD,[e.WISHIWASHI]:O.REGENERATOR,[e.MAREANIE]:O.TOXIC_DEBRIS,[e.MUDBRAY]:O.CUD_CHEW,[e.DEWPIDER]:O.TINTED_LENS,[e.FOMANTIS]:O.SHARPNESS,[e.MORELULL]:O.TRIAGE,[e.SALANDIT]:O.DRAGONS_MAW,[e.STUFFUL]:O.SCRAPPY,[e.BOUNSWEET]:O.MOXIE,[e.COMFEY]:O.FRIEND_GUARD,[e.ORANGURU]:O.POWER_SPOT,[e.PASSIMIAN]:O.LIBERO,[e.WIMPOD]:O.REGENERATOR,[e.SANDYGAST]:O.SAND_SPIT,[e.PYUKUMUKU]:O.PURIFYING_SALT,[e.TYPE_NULL]:O.ADAPTABILITY,[e.MINIOR]:O.STURDY,[e.KOMALA]:O.GUTS,[e.TURTONATOR]:O.DAUNTLESS_SHIELD,[e.TOGEDEMARU]:O.ROUGH_SKIN,[e.MIMIKYU]:O.TOUGH_CLAWS,[e.BRUXISH]:O.MULTISCALE,[e.DRAMPA]:O.THICK_FAT,[e.DHELMISE]:O.WATER_BUBBLE,[e.JANGMO_O]:O.DAUNTLESS_SHIELD,[e.TAPU_KOKO]:O.DAUNTLESS_SHIELD,[e.TAPU_LELE]:O.SHEER_FORCE,[e.TAPU_BULU]:O.TRIAGE,[e.TAPU_FINI]:O.FAIRY_AURA,[e.COSMOG]:O.BEAST_BOOST,[e.NIHILEGO]:O.LEVITATE,[e.BUZZWOLE]:O.MOXIE,[e.PHEROMOSA]:O.TINTED_LENS,[e.XURKITREE]:O.TRANSISTOR,[e.CELESTEELA]:O.HEATPROOF,[e.KARTANA]:O.LONG_REACH,[e.GUZZLORD]:O.POISON_HEAL,[e.NECROZMA]:O.BEAST_BOOST,[e.MAGEARNA]:O.STEELY_SPIRIT,[e.MARSHADOW]:O.IRON_FIST,[e.POIPOLE]:O.LEVITATE,[e.STAKATAKA]:O.SOLID_ROCK,[e.BLACEPHALON]:O.MAGIC_GUARD,[e.ZERAORA]:O.TOUGH_CLAWS,[e.MELTAN]:O.HEATPROOF,[e.ALOLA_RATTATA]:O.ADAPTABILITY,[e.ALOLA_SANDSHREW]:O.ICE_SCALES,[e.ALOLA_VULPIX]:O.SHEER_FORCE,[e.ALOLA_DIGLETT]:O.STURDY,[e.ALOLA_MEOWTH]:O.DARK_AURA,[e.ALOLA_GEODUDE]:O.DRY_SKIN,[e.ALOLA_GRIMER]:O.TOXIC_DEBRIS,[e.GROOKEY]:O.GRASS_PELT,[e.SCORBUNNY]:O.NO_GUARD,[e.SOBBLE]:O.SUPER_LUCK,[e.SKWOVET]:O.HARVEST,[e.ROOKIDEE]:O.IRON_BARBS,[e.BLIPBUG]:O.PSYCHIC_SURGE,[e.NICKIT]:O.MAGICIAN,[e.GOSSIFLEUR]:O.GRASSY_SURGE,[e.WOOLOO]:O.SCRAPPY,[e.CHEWTLE]:O.ROCKY_PAYLOAD,[e.YAMPER]:O.SHEER_FORCE,[e.ROLYCOLY]:O.SOLID_ROCK,[e.APPLIN]:O.DRAGONS_MAW,[e.SILICOBRA]:O.SAND_RUSH,[e.CRAMORANT]:O.LIGHTNING_ROD,[e.ARROKUDA]:O.INTIMIDATE,[e.TOXEL]:O.ELECTRIC_SURGE,[e.SIZZLIPEDE]:O.SPEED_BOOST,[e.CLOBBOPUS]:O.WATER_BUBBLE,[e.SINISTEA]:O.SHADOW_SHIELD,[e.HATENNA]:O.FAIRY_AURA,[e.IMPIDIMP]:O.INTIMIDATE,[e.MILCERY]:O.REGENERATOR,[e.FALINKS]:O.PARENTAL_BOND,[e.PINCURCHIN]:O.ELECTROMORPHOSIS,[e.SNOM]:O.SNOW_WARNING,[e.STONJOURNER]:O.STURDY,[e.EISCUE]:O.ICE_SCALES,[e.INDEEDEE]:O.FRIEND_GUARD,[e.MORPEKO]:O.MOODY,[e.CUFANT]:O.EARTH_EATER,[e.DRACOZOLT]:O.NO_GUARD,[e.ARCTOZOLT]:O.WATER_ABSORB,[e.DRACOVISH]:O.SWIFT_SWIM,[e.ARCTOVISH]:O.STRONG_JAW,[e.DURALUDON]:O.STEELWORKER,[e.DREEPY]:O.PARENTAL_BOND,[e.ZACIAN]:O.UNNERVE,[e.ZAMAZENTA]:O.UNNERVE,[e.ETERNATUS]:O.NEUTRALIZING_GAS,[e.KUBFU]:O.IRON_FIST,[e.ZARUDE]:O.TOUGH_CLAWS,[e.REGIELEKI]:O.ELECTRIC_SURGE,[e.REGIDRAGO]:O.MULTISCALE,[e.GLASTRIER]:O.FILTER,[e.SPECTRIER]:O.SHADOW_SHIELD,[e.CALYREX]:O.HARVEST,[e.ENAMORUS]:O.FAIRY_AURA,[e.GALAR_MEOWTH]:O.UNBURDEN,[e.GALAR_PONYTA]:O.CHILLING_NEIGH,[e.GALAR_SLOWPOKE]:O.UNAWARE,[e.GALAR_FARFETCHD]:O.INTREPID_SWORD,[e.GALAR_ARTICUNO]:O.SERENE_GRACE,[e.GALAR_ZAPDOS]:O.TOUGH_CLAWS,[e.GALAR_MOLTRES]:O.DARK_AURA,[e.GALAR_CORSOLA]:O.SHADOW_SHIELD,[e.GALAR_ZIGZAGOON]:O.POISON_HEAL,[e.GALAR_DARUMAKA]:O.FLASH_FIRE,[e.GALAR_YAMASK]:O.TABLETS_OF_RUIN,[e.GALAR_STUNFISK]:O.ARENA_TRAP,[e.HISUI_GROWLITHE]:O.RECKLESS,[e.HISUI_VOLTORB]:O.TRANSISTOR,[e.HISUI_QWILFISH]:O.MERCILESS,[e.HISUI_SNEASEL]:O.SCRAPPY,[e.HISUI_ZORUA]:O.ADAPTABILITY,[e.SPRIGATITO]:O.MAGICIAN,[e.FUECOCO]:O.PUNK_ROCK,[e.QUAXLY]:O.OPPORTUNIST,[e.LECHONK]:O.SIMPLE,[e.TAROUNTULA]:O.HONEY_GATHER,[e.NYMBLE]:O.GUTS,[e.PAWMI]:O.TRANSISTOR,[e.TANDEMAUS]:O.SCRAPPY,[e.FIDOUGH]:O.WATER_ABSORB,[e.SMOLIV]:O.RIPEN,[e.SQUAWKABILLY]:O.MOXIE,[e.NACLI]:O.SOLID_ROCK,[e.CHARCADET]:O.PRISM_ARMOR,[e.TADBULB]:O.STAMINA,[e.WATTREL]:O.SHEER_FORCE,[e.MASCHIFF]:O.STRONG_JAW,[e.SHROODLE]:O.CORROSION,[e.BRAMBLIN]:O.SHADOW_SHIELD,[e.TOEDSCOOL]:O.PRANKSTER,[e.KLAWF]:O.WATER_ABSORB,[e.CAPSAKID]:O.PARENTAL_BOND,[e.RELLOR]:O.PRANKSTER,[e.FLITTLE]:O.DAZZLING,[e.TINKATINK]:O.STEELWORKER,[e.WIGLETT]:O.STURDY,[e.BOMBIRDIER]:O.UNBURDEN,[e.FINIZEN]:O.IRON_FIST,[e.VAROOM]:O.LEVITATE,[e.CYCLIZAR]:O.PROTEAN,[e.ORTHWORM]:O.REGENERATOR,[e.GLIMMET]:O.LEVITATE,[e.GREAVARD]:O.UNAWARE,[e.FLAMIGO]:O.MOXIE,[e.CETODDLE]:O.REFRIGERATE,[e.VELUZA]:O.SUPER_LUCK,[e.DONDOZO]:O.DRAGONS_MAW,[e.TATSUGIRI]:O.FLUFFY,[e.GREAT_TUSK]:O.INTIMIDATE,[e.SCREAM_TAIL]:O.UNAWARE,[e.BRUTE_BONNET]:O.CHLOROPHYLL,[e.FLUTTER_MANE]:O.DAZZLING,[e.SLITHER_WING]:O.SCRAPPY,[e.SANDY_SHOCKS]:O.ELECTRIC_SURGE,[e.IRON_TREADS]:O.STEELY_SPIRIT,[e.IRON_BUNDLE]:O.SNOW_WARNING,[e.IRON_HANDS]:O.IRON_FIST,[e.IRON_JUGULIS]:O.LIGHTNING_ROD,[e.IRON_MOTH]:O.LEVITATE,[e.IRON_THORNS]:O.SAND_STREAM,[e.FRIGIBAX]:O.INTIMIDATE,[e.GIMMIGHOUL]:O.HONEY_GATHER,[e.WO_CHIEN]:O.VESSEL_OF_RUIN,[e.CHIEN_PAO]:O.INTIMIDATE,[e.TING_LU]:O.STAMINA,[e.CHI_YU]:O.BERSERK,[e.ROARING_MOON]:O.TOUGH_CLAWS,[e.IRON_VALIANT]:O.NEUROFORCE,[e.KORAIDON]:O.OPPORTUNIST,[e.MIRAIDON]:O.OPPORTUNIST,[e.WALKING_WAKE]:O.BEAST_BOOST,[e.IRON_LEAVES]:O.SHARPNESS,[e.POLTCHAGEIST]:O.TRIAGE,[e.OKIDOGI]:O.DARK_AURA,[e.MUNKIDORI]:O.MAGICIAN,[e.FEZANDIPITI]:O.PIXILATE,[e.OGERPON]:O.OPPORTUNIST,[e.GOUGING_FIRE]:O.BEAST_BOOST,[e.RAGING_BOLT]:O.BEAST_BOOST,[e.IRON_BOULDER]:O.SHARPNESS,[e.IRON_CROWN]:O.SHARPNESS,[e.TERAPAGOS]:O.SOUL_HEART,[e.PECHARUNT]:O.TOXIC_CHAIN,[e.PALDEA_TAUROS]:O.ADAPTABILITY,[e.PALDEA_WOOPER]:O.THICK_FAT,[e.BLOODMOON_URSALUNA]:O.BERSERK};var YR=(E=>(E[E.UNLOCKED=1]="UNLOCKED",E[E.ENABLED=2]="ENABLED",E))(YR||{}),zt=(E=>(E[E.ON=0]="ON",E[E.OFF=1]="OFF",E[E.EXCLUDE=2]="EXCLUDE",E[E.UNLOCKABLE=3]="UNLOCKABLE",E))(zt||{}),Li=(E=>(E[E.SINGLE=0]="SINGLE",E[E.MULTI=1]="MULTI",E[E.HYBRID=2]="HYBRID",E[E.RADIAL=3]="RADIAL",E))(Li||{}),PO=(E=>(E[E.NUMBER=0]="NUMBER",E[E.COST=1]="COST",E[E.CANDY=2]="CANDY",E[E.IV=3]="IV",E[E.NAME=4]="NAME",E))(PO||{});const KK=class KK{constructor(A,s,R=1){this.text=A||"",this.sprite=s,this.state=R}};L(KK,"DropDownLabel");let jt=KK;const mK=class mK extends Phaser.GameObjects.Container{constructor(A,s,R){super(A),this.state=0,this.dir=-1,this.onColor=3390463,this.offColor=2565927,this.excludeColor=16733525,this.unlockableColor=16776960,this.val=s,Array.isArray(R)?this.labels=R:this.labels=R?[R]:[new jt("")],this.currentLabelIndex=0;const n=this.labels[this.currentLabelIndex];this.state=n.state,this.text=le(A,0,0,n.text||"",X.TOOLTIP_CONTENT),this.text.setOrigin(0,.5),this.add(this.text);for(let I=0;I<this.labels.length;I++){const a=this.labels[I].sprite;a&&(this.add(a),a.setOrigin(0,.5),I!==this.currentLabelIndex&&a.setVisible(!1))}}setupToggleIcon(A,s){A===0?(this.toggle=this.scene.add.sprite(0,0,"cursor"),this.toggle.setScale(.5),this.toggle.setOrigin(0,.5),this.toggle.setRotation(Math.PI/180*-90)):(this.toggle=this.scene.add.sprite(0,0,"candy"),this.toggle.setScale(.3),this.toggle.setOrigin(0,.5)),this.add(this.toggle),this.toggle.setVisible(s),this.updateToggleIconColor()}updateToggleIconColor(){switch(this.state){case 0:this.toggle.setTint(this.onColor);break;case 1:this.toggle.setTint(this.offColor);break;case 2:this.toggle.setTint(this.excludeColor);break;case 3:this.toggle.setTint(this.unlockableColor);break}}toggleOptionState(){if(this.labels.length>1)return this.setCurrentLabel((this.currentLabelIndex+1)%this.labels.length);const A=this.state===0?1:0;return this.setOptionState(A)}setOptionState(A){const s=this.labels.findIndex(R=>R.state===A);return s!==-1&&s!==this.currentLabelIndex?this.setCurrentLabel(s):(this.state=A,this.updateToggleIconColor(),A)}setCurrentLabel(A){const s=this.labels[this.currentLabelIndex],R=this.labels[A];return R?(this.currentLabelIndex=A,this.state=R.state,this.updateToggleIconColor(),s.sprite&&(this.text.x-=s.sprite.displayWidth+2,s.sprite.setVisible(!1)),R.sprite&&(this.text.x+=R.sprite.displayWidth+2,R.sprite.setVisible(!0)),this.text.setText(R.text),this.state):this.state}setDirection(A){this.dir=A,this.toggle.flipX=this.dir===1}toggleDirection(){this.setDirection(this.dir*-1)}setLabelPosition(A,s){let R=A;for(let n=0;n<this.labels.length;n++){const I=this.labels[n];I.sprite&&(I.sprite.x=A,I.sprite.y=s,n===this.currentLabelIndex&&(R+=I.sprite.displayWidth+2))}this.text&&(this.text.x=R,this.text.y=s)}setTogglePosition(A,s){this.toggle&&(this.toggle.x=A,this.toggle.y=s)}getCurrentLabelX(){var A;return this.labels[this.currentLabelIndex].sprite?(A=this.labels[this.currentLabelIndex].sprite)==null?void 0:A.x:this.text.x}getWidth(){let A=0;const s=this.text.text;for(const R of this.labels){this.text.setText(R.text);const n=R.sprite?R.sprite.displayWidth+2:0;A=Math.max(A,this.text.displayWidth+n)}return this.text.setText(s),A}};L(mK,"DropDownOption");let kA=mK;const FK=class FK extends Phaser.GameObjects.Container{constructor(A,s,R,n,I,a=1,r=2){super(A,s-7-5,R),this.dropDownType=1,this.cursor=0,this.lastCursor=-1,this.defaultCursor=0,this.lastDir=-1,this.options=n,this.dropDownType=a,this.onChange=I,this.cursorObj=A.add.image(7,0,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setOrigin(0,.5),this.cursorObj.setVisible(!1),(this.dropDownType===1||this.dropDownType===2)&&this.options.unshift(new kA(A,"ALL",new jt(D.t("filterBar:all"),void 0,this.checkForAllOn()?0:1))),this.defaultSettings=this.getSettings(),n.forEach((h,P)=>{const G=a!==0||h.state===0;h.setupToggleIcon(a,G),h.width=100,h.y=P*7+P*r+6;const d=14,H=7/2;h.setLabelPosition(d+8,H),a===0?h.setTogglePosition(d+3,H+1):h.setTogglePosition(d,H)}),this.window=_t(A,0,0,100,n[n.length-1].y+7+6,!1,!1,void 0,void 0,qR.XTHIN),this.add(this.window),this.add(n),this.add(this.cursorObj),this.setVisible(!1)}getWidth(){return this.window?this.window.width:this.width}toggleVisibility(){this.setVisible(!this.visible)}setVisible(A){return super.setVisible(A),A&&this.autoSize(),this}resetCursor(){return this.dropDownType===2&&this.checkForAllOff()?this.setCursor(this.lastCursor):this.setCursor(this.defaultCursor)}setCursor(A){return this.cursor=A,A<0?(A=0,this.cursorObj.setVisible(!1),!1):A>=this.options.length?(A=this.options.length-1,this.cursorObj.y=this.options[A].y+3.5,this.cursorObj.setVisible(!0),!1):(this.cursorObj.y=this.options[A].y+3.5,this.cursorObj.setVisible(!0),this.dropDownType===2&&(this.lastCursor=A,this.onChange()),!0)}toggleOptionState(A=this.cursor){const s=this.options[A];if(this.dropDownType===1||this.dropDownType===2){const R=s.toggleOptionState();A===0?this.setAllOptions(R):R===0&&this.checkForAllOn()?this.options[0].setOptionState(0):this.options[0].setOptionState(1)}else this.dropDownType===0?s.state===1?(this.options.forEach(R=>{R.setOptionState(1),R.setDirection(-1),R.toggle.setVisible(!1)}),s.setOptionState(0),s.setDirection(this.lastDir),s.toggle.setVisible(!0)):(s.toggleDirection(),this.lastDir=this.options[this.cursor].dir):this.dropDownType===3&&s.toggleOptionState();this.onChange()}checkForAllOn(){return this.options.every((A,s)=>s===0||A.state===0)}checkForAllOff(){return this.options.every((A,s)=>s===0||A.state===1)}getVals(){if(this.dropDownType===1)return this.options.filter((A,s)=>s>0&&A.state===0).map(A=>A.val);if(this.dropDownType===2){const A=this.options.filter((s,R)=>R>0&&s.state===0).map(s=>s.val);return A.length>0?A:this.cursor===0?this.options.filter((s,R)=>R>0).map(s=>s.val):[this.options[this.cursor].val]}else return this.dropDownType===3?this.options.map(A=>({val:A.val,state:A.state})):this.options.filter(A=>A.state===0).map(A=>({val:A.val,dir:A.dir}))}getSettings(){const A=[];for(let s=0;s<this.options.length;s++)A.push({val:this.options[s].val,state:this.options[s].state,cursor:this.cursor===s,dir:this.options[s].dir});return A}hasDefaultValues(){const A=this.getSettings(),s=L(R=>A.length===this.defaultSettings.length&&A.every((n,I)=>R.every(a=>n[a]===this.defaultSettings[I][a])),"compareValues");switch(this.dropDownType){case 1:case 3:return s(["val","state"]);case 2:return s(["val","state","cursor"]);case 0:return s(["val","state","dir"]);default:return!1}}resetToDefault(){if(this.defaultSettings.length>0){this.setCursor(this.defaultCursor),this.lastDir=-1;for(let A=0;A<this.options.length;A++)this.dropDownType===0?this.defaultSettings[A].state===1?(this.options[A].setOptionState(1),this.options[A].setDirection(-1),this.options[A].toggle.setVisible(!1)):(this.options[A].setOptionState(0),this.options[A].setDirection(-1),this.options[A].toggle.setVisible(!0)):this.defaultSettings[A]&&this.options[A].setOptionState(this.defaultSettings[A].state)}}setAllOptions(A){if(this.dropDownType!==0)for(const s of this.options)s.setOptionState(A)}selectAllOptions(){this.setAllOptions(0)}unselectAllOptions(){this.setAllOptions(1)}autoSize(){let A=0,s=0;for(let R=0;R<this.options.length;R++){const n=this.options[R].getWidth();n>A&&(A=n,s=this.options[R].getCurrentLabelX()??0)}this.window.width=A+s-this.window.x+6,this.x+this.window.width>this.parentContainer.width&&(this.x=this.parentContainer.width-this.window.width)}};L(FK,"DropDown");let Ni=FK;const pK=class pK extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,0),this.shinyIcons=[],this.cost=0,this.species=s;const R=A.gameData.getSpeciesDefaultDexAttr(s,!1,!0),n=A.gameData.getSpeciesDexAttrProps(s,R),I=this.scene.add.image(2,5,"passive_bg");I.setOrigin(0,0),I.setScale(.75),I.setVisible(!1),this.add(I),this.starterPassiveBgs=I,this.icon=this.scene.add.sprite(-2,2,s.getIconAtlasKey(n.formIndex,n.shiny,n.variant)),this.icon.setScale(.5),this.icon.setOrigin(0,0),this.icon.setFrame(s.getIconId(n.female,n.formIndex,n.shiny,n.variant)),this.checkIconId(n.female,n.formIndex,n.shiny,n.variant),this.icon.setTint(0),this.add(this.icon);for(let M=0;M<3;M++){const u=this.scene.add.image(M*-3+12,2,"shiny_star_small");u.setScale(.5),u.setOrigin(0,0),u.setVisible(!1),this.shinyIcons.push(u)}this.add(this.shinyIcons);const a=le(this.scene,1,2,"0",X.WINDOW,{fontSize:"32px"});a.setShadowOffset(2,2),a.setOrigin(0,0),a.setVisible(!1),this.add(a),this.label=a;const r=this.scene.add.image(12,7,"ha_capsule");r.setOrigin(0,0),r.setScale(.5),r.setVisible(!1),this.add(r),this.hiddenAbilityIcon=r;const S=this.scene.add.image(0,7,"favorite");S.setOrigin(0,0),S.setScale(.5),S.setVisible(!1),this.add(S),this.favoriteIcon=S;const o=this.scene.add.image(0,12,"champion_ribbon");o.setOrigin(0,0),o.setScale(.5),o.setVisible(!1),this.add(o),this.classicWinIcon=o;const l=this.scene.add.image(12,12,"candy");l.setOrigin(0,0),l.setScale(.25),l.setVisible(!1),this.add(l),this.candyUpgradeIcon=l;const C=this.scene.add.image(12,12,"candy_overlay");C.setOrigin(0,0),C.setScale(.25),C.setVisible(!1),this.add(C),this.candyUpgradeOverlayIcon=C}checkIconId(A,s,R,n){this.icon.frame.name!==this.species.getIconId(A,s,R,n)&&(console.log(`${this.species.name}'s variant icon does not exist. Replacing with default.`),this.icon.setTexture(this.species.getIconAtlasKey(s,!1,n)),this.icon.setFrame(this.species.getIconId(A,s,!1,n)))}};L(pK,"StarterContainer");let D0=pK;var As=(E=>(E[E.GEN=0]="GEN",E[E.TYPES=1]="TYPES",E[E.CAUGHT=2]="CAUGHT",E[E.UNLOCKS=3]="UNLOCKS",E[E.MISC=4]="MISC",E[E.SORT=5]="SORT",E))(As||{});const WK=class WK extends Phaser.GameObjects.Container{constructor(A,s,R,n,I){super(A,s,R),this.labels=[],this.dropDowns=[],this.columns=[],this.numFilters=0,this.openDropDown=!1,this.lastCursor=-1,this.width=n,this.height=I,this.window=_t(A,0,0,n,I,!1,!1,void 0,void 0,qR.THIN),this.add(this.window),this.cursorObj=this.scene.add.image(1,1,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setVisible(!1),this.cursorObj.setOrigin(0,0),this.add(this.cursorObj),this.uiTheme=A.uiTheme}addFilter(A,s,R){if(this.columns.includes(A))return!1;this.columns.push(A);const n=le(this.scene,0,3,s,X.TOOLTIP_CONTENT);return this.labels.push(n),this.add(n),this.dropDowns.push(R),this.add(R),this.calcFilterPositions(),this.numFilters++,!0}getFilter(A){return this.dropDowns[this.columns.indexOf(A)]}updateFilterLabels(){for(let A=0;A<this.numFilters;A++)this.dropDowns[A].hasDefaultValues()?this.labels[A].setColor(IA(X.TOOLTIP_CONTENT,!1,this.uiTheme)):this.labels[A].setColor(IA(X.STATS_LABEL,!1,this.uiTheme))}calcFilterPositions(){let R=20;this.labels.forEach(I=>{R+=I.displayWidth+8});const n=(this.width-R)/(this.labels.length-1);for(let I=0;I<this.labels.length;I++){if(I===0)this.labels[I].x=14;else{const a=this.labels[I-1].x+this.labels[I-1].displayWidth;this.labels[I].x=a+n+8}this.dropDowns[I].x=this.labels[I].x-8-6,this.dropDowns[I].y=this.height}}offsetHybridFilters(){for(let A=0;A<this.dropDowns.length;A++)this.dropDowns[A].dropDownType===Li.HYBRID&&(this.dropDowns[A].autoSize(),this.dropDowns[A].x=-this.dropDowns[A].getWidth(),this.dropDowns[A].y=0)}setCursor(A){this.lastCursor>-1&&this.dropDowns[this.lastCursor].visible&&(this.dropDowns[this.lastCursor].setVisible(!1),this.dropDowns[A].setVisible(!0),this.dropDowns[A].resetCursor()),this.cursorObj.setPosition(this.labels[A].x-8+2,6),this.lastCursor=A}toggleDropDown(A){this.dropDowns[A].toggleVisibility(),this.openDropDown=this.dropDowns[A].visible,this.dropDowns[A].resetCursor()}hideDropDowns(){this.dropDowns.forEach(A=>{A.setVisible(!1)}),this.openDropDown=!1}incDropDownCursor(){return this.dropDowns[this.lastCursor].cursor===this.dropDowns[this.lastCursor].options.length-1?this.dropDowns[this.lastCursor].setCursor(0):this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].cursor+1)}decDropDownCursor(){return this.dropDowns[this.lastCursor].cursor===0?this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].options.length-1):this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].cursor-1)}toggleOptionState(){this.dropDowns[this.lastCursor].toggleOptionState()}getVals(A){return this.getFilter(A).getVals()}setValsToDefault(){for(const A of this.dropDowns)A.resetToDefault()}getNearestFilter(A){const s=A.x+A.icon.displayWidth/2;let R=0,n=1e3;for(let I=0;I<this.labels.length;I++){const a=Math.abs(s-(this.labels[I].x+this.labels[I].displayWidth/3));a<n&&(R=I,n=a)}return R}};L(WK,"FilterBar");let M0=WK;const YK=class YK extends Phaser.GameObjects.Container{constructor(A,s,R,n,I,a){super(A,s,R),this.maxRows=a,this.totalRows=a,this.currentRow=0;const r=2;n=Math.max(n,4),this.bg=A.add.nineslice(0,0,"scroll_bar",void 0,n,I,r,r,r,r),this.bg.setOrigin(0,0),this.add(this.bg),this.handleBody=A.add.rectangle(1,1,n-2,4,11184810),this.handleBody.setOrigin(0,0),this.add(this.handleBody),this.handleBottom=A.add.nineslice(1,1,"scroll_bar_handle",void 0,n-2,2,2,0,0,0),this.handleBottom.setOrigin(0,0),this.add(this.handleBottom)}setScrollCursor(A){this.currentRow=A,this.updateHandlePosition()}setTotalRows(A){this.totalRows=A,this.handleBody.height=(this.bg.displayHeight-1-this.handleBottom.displayHeight)*this.maxRows/this.totalRows,this.updateHandlePosition(),this.setVisible(this.totalRows>this.maxRows)}updateHandlePosition(){this.handleBody.y=1+(this.bg.displayHeight-1-this.handleBottom.displayHeight)/this.totalRows*this.currentRow,this.handleBottom.y=this.handleBody.y+this.handleBody.displayHeight}};L(YK,"ScrollBar");let Vi=YK;const Cb={en:{starterInfoTextSize:"56px",instructionTextSize:"38px"},de:{starterInfoTextSize:"48px",instructionTextSize:"35px",starterInfoXPos:33},"es-ES":{starterInfoTextSize:"56px",instructionTextSize:"35px"},fr:{starterInfoTextSize:"54px",instructionTextSize:"38px"},it:{starterInfoTextSize:"56px",instructionTextSize:"38px"},pt_BR:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoXPos:33},zh:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoYOffset:1,starterInfoXPos:24},pt:{starterInfoTextSize:"48px",instructionTextSize:"42px",starterInfoXPos:33},ko:{starterInfoTextSize:"52px",instructionTextSize:"38px"},ja:{starterInfoTextSize:"51px",instructionTextSize:"38px"},"ca-ES":{starterInfoTextSize:"56px",instructionTextSize:"38px"}},Ub=2,uh=17,qo=109,iI=285,h0=18,Dh=34,ES=132;function c0(E,A=0){const n=E%9*18,I=13+(Math.floor(E/9)-A)*17;return{x:n,y:I}}L(c0,"calcStarterPosition");function l1(E){const A=ES/7,s=h0+A/2;return Math.round(s+A*E)}L(l1,"calcStarterIconY");function ub(E,A=6){let s=ES,R=0;for(let n=0;n<A;n++){const I=Math.abs(E-(l1(n)-13));I<s&&(R=n,s=I)}return R}L(ub,"findClosestStarterIndex");function Db(E,A){const s=l1(E)-13;let R=ES,n=0;for(let I=0;I<A;I++){const a=Math.abs(s-c0(I*9).y);a<R&&(n=I,R=a)}return n}L(Db,"findClosestStarterRow");const yK=class yK extends ps{constructor(A){super(A,Oe.STARTER_SELECT),this.starterContainers=[],this.filteredStarterContainers=[],this.validStarterContainers=[],this.starterIconsCursorXOffset=-3,this.starterIconsCursorYOffset=1,this.dexAttrCursor=0n,this.abilityCursor=-1,this.natureCursor=-1,this.filterBarCursor=0,this.allSpecies=[],this.speciesLoaded=new Map,this.starterSpecies=[],this.pokerusSpecies=[],this.starterAttr=[],this.starterAbilityIndexes=[],this.starterNatures=[],this.starterMovesets=[],this.instructionRowX=0,this.instructionRowY=0,this.instructionRowTextOffset=9,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.blockInput=!1,this.updateStarters=()=>{this.scrollCursor=0,this.filteredStarterContainers=[],this.validStarterContainers=[],this.pokerusCursorObjs.forEach(R=>R.setVisible(!1)),this.starterCursorObjs.forEach(R=>R.setVisible(!1)),this.filterBar.updateFilterLabels(),this.scene.gameMode.modeId===SA.CHALLENGE?this.starterContainers.forEach(R=>{var a;const n=R.species;let I=!1;if(((a=n.forms)==null?void 0:a.length)>0)for(let r=0;r<n.forms.length;r++){const S=BigInt(Math.pow(2,r))*Ze.DEFAULT_FORM,o=new Lt(!0);Fs(this.scene.gameMode,Us.STARTER_CHOICE,R.species,o,this.scene.gameData.getSpeciesDexAttrProps(n,S),!0),I=I||o.value}else{const r=new Lt(!0);Fs(this.scene.gameMode,Us.STARTER_CHOICE,R.species,r,this.scene.gameData.getSpeciesDexAttrProps(n,this.scene.gameData.getSpeciesDefaultDexAttr(R.species,!1,!0)),!0),I=r.value}I?this.validStarterContainers.push(R):R.setVisible(!1)}):this.validStarterContainers=this.starterContainers;for(let R=0;R<this.validStarterContainers.length;R++){const n=this.validStarterContainers[R],I=n.icon,a=this.getCurrentDexProps(n.species.speciesId),r=this.scene.gameData.getSpeciesDexAttrProps(n.species,a);I.setTexture(n.species.getIconAtlasKey(r.formIndex,r.shiny,r.variant),n.species.getIconId(r.female,r.formIndex,r.shiny,r.variant)),n.checkIconId(r.female,r.formIndex,r.shiny,r.variant)}this.validStarterContainers.forEach(R=>{var me,Me;R.setVisible(!1),R.cost=this.scene.gameData.getSpeciesStarterValue(R.species.speciesId);const n=((me=this.scene.gameData.dexData[R.species.speciesId])==null?void 0:me.caughtAttr)||BigInt(0),I=this.scene.gameData.starterData[R.species.speciesId],a=BE.hasOwnProperty(R.species.speciesId),r=this.filterBar.getVals(As.GEN).includes(R.species.generation),S=this.filterBar.getVals(As.TYPES).some(Ie=>R.species.isOfType(Ie-1)),o=!!(n&Ze.NON_SHINY),l=!!(n&Ze.SHINY),C=l&&!!(n&Ze.DEFAULT_VARIANT),M=l&&!!(n&Ze.VARIANT_2),u=l&&!!(n&Ze.VARIANT_3),h=!o&&!C&&!M&&!u,P=this.filterBar.getVals(As.CAUGHT).some(Ie=>{if(Ie==="SHINY3")return u;if(Ie==="SHINY2")return M&&!u;if(Ie==="SHINY")return C&&!M&&!u;if(Ie==="NORMAL")return o&&!C&&!M&&!u;if(Ie==="UNCAUGHT")return h}),G=I.passiveAttr>0,d=this.isPassiveAvailable(R.species.speciesId)&&!G,H=this.filterBar.getVals(As.UNLOCKS).some(Ie=>{if(Ie.val==="PASSIVE"&&Ie.state===zt.ON)return G;if(Ie.val==="PASSIVE"&&Ie.state===zt.EXCLUDE)return a&&!G;if(Ie.val==="PASSIVE"&&Ie.state===zt.UNLOCKABLE)return d;if(Ie.val==="PASSIVE"&&Ie.state===zt.OFF)return!0}),f=I.valueReduction>0,K=this.isValueReductionAvailable(R.species.speciesId),W=this.filterBar.getVals(As.UNLOCKS).some(Ie=>{if(Ie.val==="COST_REDUCTION"&&Ie.state===zt.ON)return f;if(Ie.val==="COST_REDUCTION"&&Ie.state===zt.EXCLUDE)return a&&!f;if(Ie.val==="COST_REDUCTION"&&Ie.state===zt.UNLOCKABLE)return K;if(Ie.val==="COST_REDUCTION"&&Ie.state===zt.OFF)return!0}),V=((Me=this.starterPreferences[R.species.speciesId])==null?void 0:Me.favorite)??!1,k=this.filterBar.getVals(As.MISC).some(Ie=>{if(Ie.val==="FAVORITE"&&Ie.state===zt.ON)return V;if(Ie.val==="FAVORITE"&&Ie.state===zt.EXCLUDE)return!V;if(Ie.val==="FAVORITE"&&Ie.state===zt.OFF)return!0}),Q=I.classicWinCount>0,j=I.classicWinCount===0,J=I.classicWinCount===void 0,ne=this.filterBar.getVals(As.MISC).some(Ie=>{if(Ie.val==="WIN"&&Ie.state===zt.ON)return Q;if(Ie.val==="WIN"&&Ie.state===zt.EXCLUDE)return j||J;if(Ie.val==="WIN"&&Ie.state===zt.OFF)return!0}),x=R.species.abilityHidden!==R.species.ability1&&R.species.abilityHidden!==O.NONE,q=I.abilityAttr&Cs.ABILITY_HIDDEN,F=this.filterBar.getVals(As.MISC).some(Ie=>{if(Ie.val==="HIDDEN_ABILITY"&&Ie.state===zt.ON)return q;if(Ie.val==="HIDDEN_ABILITY"&&Ie.state===zt.EXCLUDE)return x&&!q;if(Ie.val==="HIDDEN_ABILITY"&&Ie.state===zt.OFF)return!0}),Te=this.isSameSpeciesEggAvailable(R.species.speciesId),He=this.filterBar.getVals(As.MISC).some(Ie=>{if(Ie.val==="EGG"&&Ie.state===zt.ON)return Te;if(Ie.val==="EGG"&&Ie.state===zt.EXCLUDE)return a&&!Te;if(Ie.val==="EGG"&&Ie.state===zt.OFF)return!0}),ue=this.filterBar.getVals(As.MISC).some(Ie=>{if(Ie.val==="POKERUS"&&Ie.state===zt.ON)return this.pokerusSpecies.includes(R.species);if(Ie.val==="POKERUS"&&Ie.state===zt.EXCLUDE)return!this.pokerusSpecies.includes(R.species);if(Ie.val==="POKERUS"&&Ie.state===zt.OFF)return!0});r&&S&&P&&H&&W&&k&&ne&&F&&He&&ue&&this.filteredStarterContainers.push(R)}),this.starterSelectScrollBar.setTotalRows(Math.max(Math.ceil(this.filteredStarterContainers.length/9),1)),this.starterSelectScrollBar.setScrollCursor(0);const s=this.filterBar.getVals(As.SORT)[0];this.filteredStarterContainers.sort((R,n)=>{switch(s.val){default:break;case PO.NUMBER:return(R.species.speciesId-n.species.speciesId)*-s.dir;case PO.COST:return(R.cost-n.cost)*-s.dir;case PO.CANDY:const I=this.scene.gameData.starterData[R.species.speciesId].candyCount,a=this.scene.gameData.starterData[n.species.speciesId].candyCount;return(I-a)*-s.dir;case PO.IV:const r=this.scene.gameData.dexData[R.species.speciesId].ivs.reduce((o,l)=>o+l,0)/this.scene.gameData.dexData[R.species.speciesId].ivs.length,S=this.scene.gameData.dexData[n.species.speciesId].ivs.reduce((o,l)=>o+l,0)/this.scene.gameData.dexData[n.species.speciesId].ivs.length;return(r-S)*-s.dir;case PO.NAME:return R.species.name.localeCompare(n.species.name)*-s.dir}return 0}),this.updateScroll()},this.updateScroll=()=>{const n=this.scrollCursor*9,I=Math.min(this.filteredStarterContainers.length-1,n+9*9-1);this.starterSelectScrollBar.setScrollCursor(this.scrollCursor);let a=0;this.filteredStarterContainers.forEach((r,S)=>{var l;const o=c0(S,this.scrollCursor);if(r.setPosition(o.x,o.y),S<n||S>I){r.setVisible(!1),this.pokerusSpecies.includes(r.species)&&(this.pokerusCursorObjs[a].setPosition(o.x-1,o.y+1),this.pokerusCursorObjs[a].setVisible(!1),a++),this.starterSpecies.includes(r.species)&&(this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setPosition(o.x-1,o.y+1),this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setVisible(!1));return}else{r.setVisible(!0),this.pokerusSpecies.includes(r.species)&&(this.pokerusCursorObjs[a].setPosition(o.x-1,o.y+1),this.pokerusCursorObjs[a].setVisible(!0),a++),this.starterSpecies.includes(r.species)&&(this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setPosition(o.x-1,o.y+1),this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setVisible(!0));const C=r.species.speciesId;this.updateStarterValueLabel(r),r.label.setVisible(!0);const M=C&&this.scene.gameData.dexData[C].caughtAttr&Ze.SHINY?[Ze.DEFAULT_VARIANT,Ze.VARIANT_2,Ze.VARIANT_3].filter(u=>!!(this.scene.gameData.dexData[C].caughtAttr&u)):[];for(let u=0;u<3;u++){const h=M.length>u;r.shinyIcons[u].setVisible(h),h&&r.shinyIcons[u].setTint(YE(M[u]===Ze.DEFAULT_VARIANT?0:M[u]===Ze.VARIANT_2?1:2))}r.starterPassiveBgs.setVisible(!!this.scene.gameData.starterData[C].passiveAttr),r.hiddenAbilityIcon.setVisible(!!this.scene.gameData.dexData[C].caughtAttr&&!!(this.scene.gameData.starterData[C].abilityAttr&4)),r.classicWinIcon.setVisible(this.scene.gameData.starterData[C].classicWinCount>0),r.favoriteIcon.setVisible(((l=this.starterPreferences[C])==null?void 0:l.favorite)??!1),this.scene.candyUpgradeDisplay===0?(RR[C]||(RR[C]=["ffffff","ffffff"]),r.candyUpgradeIcon.setTint(Xs(hs(RR[C][0]))),r.candyUpgradeOverlayIcon.setTint(Xs(hs(RR[C][1]))),this.setUpgradeIcon(r)):this.scene.candyUpgradeDisplay===1&&(r.candyUpgradeIcon.setVisible(!1),r.candyUpgradeOverlayIcon.setVisible(!1))}})}}setup(){const A=this.getUi(),s=D.resolvedLanguage??"en",R=Object.keys(Cb).find(z=>s.includes(z))??"en",n=Cb[R];this.starterSelectContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.starterSelectContainer.setVisible(!1),A.add(this.starterSelectContainer);const I=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,26720);I.setOrigin(0,0),this.starterSelectContainer.add(I);const a=this.scene.add.image(0,0,"starter_select_bg");a.setOrigin(0,0),this.starterSelectContainer.add(a),this.shinyOverlay=this.scene.add.image(6,6,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,0),this.shinyOverlay.setVisible(!1),this.starterSelectContainer.add(this.shinyOverlay);const r=_t(this.scene,qo,uh+1,175,161),S=this.scene.add.image(qo+1,uh+2,"starter_container_bg");S.setOrigin(0,0),this.starterSelectContainer.add(S),this.starterSelectContainer.add(_t(this.scene,iI,h0,Dh,ES)),this.starterSelectContainer.add(_t(this.scene,iI,h0+ES-5,Dh,Dh,!0)),this.starterSelectContainer.add(r),this.filterBarContainer=this.scene.add.container(0,0),this.filterBar=new M0(this.scene,Math.min(qo,iI),1,210,uh);const o=[new kA(this.scene,1,new jt(D.t("starterSelectUiHandler:gen1"))),new kA(this.scene,2,new jt(D.t("starterSelectUiHandler:gen2"))),new kA(this.scene,3,new jt(D.t("starterSelectUiHandler:gen3"))),new kA(this.scene,4,new jt(D.t("starterSelectUiHandler:gen4"))),new kA(this.scene,5,new jt(D.t("starterSelectUiHandler:gen5"))),new kA(this.scene,6,new jt(D.t("starterSelectUiHandler:gen6"))),new kA(this.scene,7,new jt(D.t("starterSelectUiHandler:gen7"))),new kA(this.scene,8,new jt(D.t("starterSelectUiHandler:gen8"))),new kA(this.scene,9,new jt(D.t("starterSelectUiHandler:gen9")))],l=new Ni(this.scene,0,0,o,this.updateStarters,Li.HYBRID);this.filterBar.addFilter(As.GEN,D.t("filterBar:genFilter"),l);const C=Object.keys(i).filter(z=>isNaN(Number(z))),M=[];C.forEach((z,te)=>{if(te===0||te===19)return;const Le=this.scene.add.sprite(0,0,HR("types"));Le.setScale(.5),Le.setFrame(z.toLowerCase()),M.push(new kA(this.scene,te,new jt("",Le)))}),this.filterBar.addFilter(As.TYPES,D.t("filterBar:typeFilter"),new Ni(this.scene,0,0,M,this.updateStarters,Li.HYBRID,.5));const u=this.scene.add.sprite(0,0,"shiny_icons");u.setOrigin(.15,.2),u.setScale(.6),u.setFrame(Ai(0)),u.setTint(YE(0));const h=this.scene.add.sprite(0,0,"shiny_icons");h.setOrigin(.15,.2),h.setScale(.6),h.setFrame(Ai(1)),h.setTint(YE(1));const P=this.scene.add.sprite(0,0,"shiny_icons");P.setOrigin(.15,.2),P.setScale(.6),P.setFrame(Ai(2)),P.setTint(YE(2));const G=[new kA(this.scene,"SHINY3",new jt("",P)),new kA(this.scene,"SHINY2",new jt("",h)),new kA(this.scene,"SHINY",new jt("",u)),new kA(this.scene,"NORMAL",new jt(D.t("filterBar:normal"))),new kA(this.scene,"UNCAUGHT",new jt(D.t("filterBar:uncaught")))];this.filterBar.addFilter(As.CAUGHT,D.t("filterBar:caughtFilter"),new Ni(this.scene,0,0,G,this.updateStarters,Li.HYBRID));const d=[new jt(D.t("filterBar:passive"),void 0,zt.OFF),new jt(D.t("filterBar:passiveUnlocked"),void 0,zt.ON),new jt(D.t("filterBar:passiveUnlockable"),void 0,zt.UNLOCKABLE),new jt(D.t("filterBar:passiveLocked"),void 0,zt.EXCLUDE)],H=[new jt(D.t("filterBar:costReduction"),void 0,zt.OFF),new jt(D.t("filterBar:costReductionUnlocked"),void 0,zt.ON),new jt(D.t("filterBar:costReductionUnlockable"),void 0,zt.UNLOCKABLE),new jt(D.t("filterBar:costReductionLocked"),void 0,zt.EXCLUDE)],f=[new kA(this.scene,"PASSIVE",d),new kA(this.scene,"COST_REDUCTION",H)];this.filterBar.addFilter(As.UNLOCKS,D.t("filterBar:unlocksFilter"),new Ni(this.scene,0,0,f,this.updateStarters,Li.RADIAL));const K=[new jt(D.t("filterBar:favorite"),void 0,zt.OFF),new jt(D.t("filterBar:isFavorite"),void 0,zt.ON),new jt(D.t("filterBar:notFavorite"),void 0,zt.EXCLUDE)],W=[new jt(D.t("filterBar:ribbon"),void 0,zt.OFF),new jt(D.t("filterBar:hasWon"),void 0,zt.ON),new jt(D.t("filterBar:hasNotWon"),void 0,zt.EXCLUDE)],V=[new jt(D.t("filterBar:hiddenAbility"),void 0,zt.OFF),new jt(D.t("filterBar:hasHiddenAbility"),void 0,zt.ON),new jt(D.t("filterBar:noHiddenAbility"),void 0,zt.EXCLUDE)],k=[new jt(D.t("filterBar:egg"),void 0,zt.OFF),new jt(D.t("filterBar:eggPurchasable"),void 0,zt.ON)],Q=[new jt(D.t("filterBar:pokerus"),void 0,zt.OFF),new jt(D.t("filterBar:hasPokerus"),void 0,zt.ON)],j=[new kA(this.scene,"FAVORITE",K),new kA(this.scene,"WIN",W),new kA(this.scene,"HIDDEN_ABILITY",V),new kA(this.scene,"EGG",k),new kA(this.scene,"POKERUS",Q)];this.filterBar.addFilter(As.MISC,D.t("filterBar:miscFilter"),new Ni(this.scene,0,0,j,this.updateStarters,Li.RADIAL));const J=[new kA(this.scene,PO.NUMBER,new jt(D.t("filterBar:sortByNumber"),void 0,zt.ON)),new kA(this.scene,PO.COST,new jt(D.t("filterBar:sortByCost"))),new kA(this.scene,PO.CANDY,new jt(D.t("filterBar:sortByCandies"))),new kA(this.scene,PO.IV,new jt(D.t("filterBar:sortByIVs"))),new kA(this.scene,PO.NAME,new jt(D.t("filterBar:sortByName")))];this.filterBar.addFilter(As.SORT,D.t("filterBar:sortFilter"),new Ni(this.scene,0,0,J,this.updateStarters,Li.SINGLE)),this.filterBarContainer.add(this.filterBar),this.starterSelectContainer.add(this.filterBarContainer),this.filterBar.offsetHybridFilters(),this.scene.uiTheme||r.setVisible(!1),this.iconAnimHandler=new Ur,this.iconAnimHandler.setup(this.scene),this.pokemonNumberText=le(this.scene,17,1,"0000",X.SUMMARY),this.pokemonNumberText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNumberText),this.pokemonNameText=le(this.scene,6,112,"",X.SUMMARY),this.pokemonNameText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNameText),this.pokemonGrowthRateLabelText=le(this.scene,8,106,D.t("starterSelectUiHandler:growthRate"),X.SUMMARY_ALT,{fontSize:"36px"}),this.pokemonGrowthRateLabelText.setOrigin(0,0),this.pokemonGrowthRateLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonGrowthRateLabelText),this.pokemonGrowthRateText=le(this.scene,34,106,"",X.SUMMARY_PINK,{fontSize:"36px"}),this.pokemonGrowthRateText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGrowthRateText),this.pokemonGenderText=le(this.scene,96,112,"",X.SUMMARY_ALT),this.pokemonGenderText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGenderText),this.pokemonUncaughtText=le(this.scene,6,127,D.t("starterSelectUiHandler:uncaught"),X.SUMMARY_ALT,{fontSize:"56px"}),this.pokemonUncaughtText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonUncaughtText);const ne=(n==null?void 0:n.starterInfoXPos)||31,x=(n==null?void 0:n.starterInfoYOffset)||0,q=(n==null?void 0:n.starterInfoTextSize)||56;this.pokemonAbilityLabelText=le(this.scene,6,127+x,D.t("starterSelectUiHandler:ability"),X.SUMMARY_ALT,{fontSize:q}),this.pokemonAbilityLabelText.setOrigin(0,0),this.pokemonAbilityLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=le(this.scene,ne,127+x,"",X.SUMMARY_ALT,{fontSize:q}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setInteractive(new Phaser.Geom.Rectangle(0,0,250,55),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonAbilityText),this.pokemonPassiveLabelText=le(this.scene,6,136+x,D.t("starterSelectUiHandler:passive"),X.SUMMARY_ALT,{fontSize:q}),this.pokemonPassiveLabelText.setOrigin(0,0),this.pokemonPassiveLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveLabelText),this.pokemonPassiveText=le(this.scene,ne,136+x,"",X.SUMMARY_ALT,{fontSize:q}),this.pokemonPassiveText.setOrigin(0,0),this.pokemonPassiveText.setInteractive(new Phaser.Geom.Rectangle(0,0,250,55),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonPassiveText),this.pokemonPassiveDisabledIcon=this.scene.add.sprite(ne,137+x,"icon_stop"),this.pokemonPassiveDisabledIcon.setOrigin(0,.5),this.pokemonPassiveDisabledIcon.setScale(.35),this.pokemonPassiveDisabledIcon.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveDisabledIcon),this.pokemonPassiveLockedIcon=this.scene.add.sprite(ne,137+x,"icon_lock"),this.pokemonPassiveLockedIcon.setOrigin(0,.5),this.pokemonPassiveLockedIcon.setScale(.42,.38),this.pokemonPassiveLockedIcon.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveLockedIcon),this.pokemonNatureLabelText=le(this.scene,6,145+x,D.t("starterSelectUiHandler:nature"),X.SUMMARY_ALT,{fontSize:q}),this.pokemonNatureLabelText.setOrigin(0,0),this.pokemonNatureLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonNatureLabelText),this.pokemonNatureText=yE(this.scene,ne,145+x,"",X.SUMMARY_ALT,{fontSize:q}),this.pokemonNatureText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNatureText),this.pokemonMoveContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[],this.pokemonEggMoveContainers=[],this.pokemonEggMoveBgs=[],this.pokemonEggMoveLabels=[],this.valueLimitLabel=le(this.scene,iI+17,150,"0/10",X.TOOLTIP_CONTENT),this.valueLimitLabel.setOrigin(.5,0),this.starterSelectContainer.add(this.valueLimitLabel);const F=le(this.scene,iI+17,162,D.t("common:start"),X.TOOLTIP_CONTENT);F.setOrigin(.5,0),this.starterSelectContainer.add(F),this.startCursorObj=this.scene.add.nineslice(iI+4,160,"select_cursor",void 0,26,15,6,6,6,6),this.startCursorObj.setVisible(!1),this.startCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.startCursorObj);const Te=[],He=this.scene.add.container(qo+6,9);this.starterSelectScrollBar=new Vi(this.scene,161,12,5,r.height-6,9),He.add(this.starterSelectScrollBar),this.pokerusCursorObjs=new Array(qb).fill(null).map(()=>{const z=this.scene.add.image(0,0,"select_cursor_pokerus");return z.setVisible(!1),z.setOrigin(0,0),He.add(z),z}),this.starterCursorObjs=new Array(6).fill(null).map(()=>{const z=this.scene.add.image(0,0,"select_cursor_highlight");return z.setVisible(!1),z.setOrigin(0,0),He.add(z),z}),this.cursorObj=this.scene.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.starterIconsCursorObj=this.scene.add.image(289,64,"select_gen_cursor"),this.starterIconsCursorObj.setName("starter-icons-cursor"),this.starterIconsCursorObj.setVisible(!1),this.starterIconsCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.starterIconsCursorObj),He.add(this.cursorObj);for(const z of fR){if(!KA.hasOwnProperty(z.speciesId)||!z.isObtainable())continue;Te.push(z.speciesId),this.speciesLoaded.set(z.speciesId,!1),this.allSpecies.push(z);const te=new D0(this.scene,z).setVisible(!1);this.iconAnimHandler.addOrUpdate(te.icon,Qs.NONE),this.starterContainers.push(te),He.add(te)}this.starterSelectContainer.add(He),this.starterIcons=new Array(6).fill(null).map((z,te)=>{const Le=this.scene.add.sprite(iI+7,l1(te),"pokemon_icons_0");return Le.setScale(.5),Le.setOrigin(0,0),Le.setFrame("unknown"),this.starterSelectContainer.add(Le),this.iconAnimHandler.addOrUpdate(Le,Qs.PASSIVE),Le}),this.pokemonSprite=this.scene.add.sprite(53,63,"pkmn__sub"),this.pokemonSprite.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.starterSelectContainer.add(this.pokemonSprite),this.type1Icon=this.scene.add.sprite(8,98,HR("types")),this.type1Icon.setScale(.5),this.type1Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type1Icon),this.type2Icon=this.scene.add.sprite(26,98,HR("types")),this.type2Icon.setScale(.5),this.type2Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type2Icon),this.pokemonLuckLabelText=le(this.scene,8,89,D.t("common:luckIndicator"),X.WINDOW_ALT,{fontSize:"56px"}),this.pokemonLuckLabelText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckLabelText),this.pokemonLuckText=le(this.scene,8+this.pokemonLuckLabelText.displayWidth+2,89,"0",X.WINDOW,{fontSize:"56px"}),this.pokemonLuckText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckText),this.pokemonCandyContainer=this.scene.add.container(4.5,18),this.pokemonCandyIcon=this.scene.add.sprite(0,0,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyIcon),this.pokemonCandyOverlayIcon=this.scene.add.sprite(0,0,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyDarknessOverlay=this.scene.add.sprite(0,0,"candy"),this.pokemonCandyDarknessOverlay.setScale(.5),this.pokemonCandyDarknessOverlay.setOrigin(0,0),this.pokemonCandyDarknessOverlay.setTint(0),this.pokemonCandyDarknessOverlay.setAlpha(.5),this.pokemonCandyContainer.add(this.pokemonCandyDarknessOverlay),this.pokemonCandyCountText=le(this.scene,9.5,0,"x0",X.WINDOW_ALT,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyCountText),this.pokemonCandyContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,30,20),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonCandyContainer),this.pokemonFormText=le(this.scene,6,42,"Form",X.WINDOW_ALT,{fontSize:"42px"}),this.pokemonFormText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonFormText),this.pokemonCaughtHatchedContainer=this.scene.add.container(2,25),this.pokemonCaughtHatchedContainer.setScale(.5),this.starterSelectContainer.add(this.pokemonCaughtHatchedContainer);const ue=this.scene.add.sprite(1,0,"items","pb");ue.setOrigin(0,0),ue.setScale(.75),this.pokemonCaughtHatchedContainer.add(ue),this.pokemonCaughtCountText=le(this.scene,24,4,"0",X.SUMMARY_ALT),this.pokemonCaughtCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonCaughtCountText),this.pokemonHatchedIcon=this.scene.add.sprite(1,14,"egg_icons"),this.pokemonHatchedIcon.setOrigin(.15,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedIcon),this.pokemonShinyIcon=this.scene.add.sprite(14,76,"shiny_icons"),this.pokemonShinyIcon.setOrigin(.15,.2),this.pokemonShinyIcon.setScale(1),this.pokemonCaughtHatchedContainer.add(this.pokemonShinyIcon),this.pokemonHatchedCountText=le(this.scene,24,19,"0",X.SUMMARY_ALT),this.pokemonHatchedCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedCountText),this.pokemonMovesContainer=this.scene.add.container(102,16),this.pokemonMovesContainer.setScale(.375);for(let z=0;z<4;z++){const te=this.scene.add.container(0,14*z),Le=this.scene.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);Le.setOrigin(1,0);const Ue=le(this.scene,-Le.width/2,0,"-",X.PARTY);Ue.setOrigin(.5,0),this.pokemonMoveBgs.push(Le),this.pokemonMoveLabels.push(Ue),te.add(Le),te.add(Ue),this.pokemonMoveContainers.push(te),this.pokemonMovesContainer.add(te)}this.pokemonAdditionalMoveCountLabel=le(this.scene,-this.pokemonMoveBgs[0].width/2,56,"(+0)",X.PARTY),this.pokemonAdditionalMoveCountLabel.setOrigin(.5,0),this.pokemonMovesContainer.add(this.pokemonAdditionalMoveCountLabel),this.starterSelectContainer.add(this.pokemonMovesContainer),this.pokemonEggMovesContainer=this.scene.add.container(102,85),this.pokemonEggMovesContainer.setScale(.375);const me=le(this.scene,-46,0,D.t("starterSelectUiHandler:eggMoves"),X.WINDOW_ALT);me.setOrigin(.5,0),this.pokemonEggMovesContainer.add(me);for(let z=0;z<4;z++){const te=this.scene.add.container(0,16+14*z),Le=this.scene.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);Le.setOrigin(1,0);const Ue=le(this.scene,-Le.width/2,0,"???",X.PARTY);Ue.setOrigin(.5,0),this.pokemonEggMoveBgs.push(Le),this.pokemonEggMoveLabels.push(Ue),te.add(Le),te.add(Ue),this.pokemonEggMoveContainers.push(te),this.pokemonEggMovesContainer.add(te)}this.starterSelectContainer.add(this.pokemonEggMovesContainer);const Me=n.instructionTextSize;this.instructionsContainer=this.scene.add.container(4,156),this.instructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.instructionsContainer),this.shinyIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","R.png"),this.shinyIconElement.setName("sprite-shiny-icon-element"),this.shinyIconElement.setScale(.675),this.shinyIconElement.setOrigin(0,0),this.shinyLabel=le(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,D.t("starterSelectUiHandler:cycleShiny"),X.PARTY,{fontSize:Me}),this.shinyLabel.setName("text-shiny-label"),this.formIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","F.png"),this.formIconElement.setName("sprite-form-icon-element"),this.formIconElement.setScale(.675),this.formIconElement.setOrigin(0,0),this.formLabel=le(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,D.t("starterSelectUiHandler:cycleForm"),X.PARTY,{fontSize:Me}),this.formLabel.setName("text-form-label"),this.genderIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","G.png"),this.genderIconElement.setName("sprite-gender-icon-element"),this.genderIconElement.setScale(.675),this.genderIconElement.setOrigin(0,0),this.genderLabel=le(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,D.t("starterSelectUiHandler:cycleGender"),X.PARTY,{fontSize:Me}),this.genderLabel.setName("text-gender-label"),this.abilityIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","E.png"),this.abilityIconElement.setName("sprite-ability-icon-element"),this.abilityIconElement.setScale(.675),this.abilityIconElement.setOrigin(0,0),this.abilityLabel=le(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,D.t("starterSelectUiHandler:cycleAbility"),X.PARTY,{fontSize:Me}),this.abilityLabel.setName("text-ability-label"),this.natureIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","N.png"),this.natureIconElement.setName("sprite-nature-icon-element"),this.natureIconElement.setScale(.675),this.natureIconElement.setOrigin(0,0),this.natureLabel=le(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,D.t("starterSelectUiHandler:cycleNature"),X.PARTY,{fontSize:Me}),this.natureLabel.setName("text-nature-label"),this.variantIconElement=new Phaser.GameObjects.Sprite(this.scene,this.instructionRowX,this.instructionRowY,"keyboard","V.png"),this.variantIconElement.setName("sprite-variant-icon-element"),this.variantIconElement.setScale(.675),this.variantIconElement.setOrigin(0,0),this.variantLabel=le(this.scene,this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,D.t("starterSelectUiHandler:cycleVariant"),X.PARTY,{fontSize:Me}),this.variantLabel.setName("text-variant-label"),this.goFilterIconElement=new Phaser.GameObjects.Sprite(this.scene,this.filterInstructionRowX,this.filterInstructionRowY,"keyboard","C.png"),this.goFilterIconElement.setName("sprite-goFilter-icon-element"),this.goFilterIconElement.setScale(.675),this.goFilterIconElement.setOrigin(0,0),this.goFilterLabel=le(this.scene,this.filterInstructionRowX+this.instructionRowTextOffset,this.filterInstructionRowY,D.t("starterSelectUiHandler:goFilter"),X.PARTY,{fontSize:Me}),this.goFilterLabel.setName("text-goFilter-label"),this.hideInstructions(),this.filterInstructionsContainer=this.scene.add.container(50,5),this.filterInstructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.filterInstructionsContainer),this.starterSelectMessageBoxContainer=this.scene.add.container(0,this.scene.game.canvas.height/6),this.starterSelectMessageBoxContainer.setVisible(!1),this.starterSelectContainer.add(this.starterSelectMessageBoxContainer),this.starterSelectMessageBox=_t(this.scene,1,-1,318,28),this.starterSelectMessageBox.setOrigin(0,1),this.starterSelectMessageBoxContainer.add(this.starterSelectMessageBox),this.message=le(this.scene,8,8,"",X.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.starterSelectMessageBoxContainer.add(this.message),this.initPromptSprite(this.starterSelectMessageBoxContainer),this.statsContainer=new OC(this.scene,6,16),this.scene.add.existing(this.statsContainer),this.statsContainer.setVisible(!1),this.starterSelectContainer.add(this.statsContainer);const Ie=1;this.moveInfoOverlay=new SO(this.scene,{scale:Ie,top:!0,x:1,y:this.scene.game.canvas.height/6-SO.getHeight(Ie)-29}),this.starterSelectContainer.add(this.moveInfoOverlay),this.starterSelectContainer.bringToTop(this.filterBarContainer),this.initTutorialOverlay(this.starterSelectContainer),this.starterSelectContainer.bringToTop(this.starterSelectMessageBoxContainer),this.scene.eventTarget.addEventListener(YO.CANDY_UPGRADE_NOTIFICATION_CHANGED,z=>this.onCandyUpgradeDisplayChanged(z)),this.updateInstructions()}show(A){return this.starterPreferences||(this.starterPreferences=MC.load()),this.moveInfoOverlay.clear(),this.pokerusSpecies=M7(this.scene),A.length>=1&&A[0]instanceof Function?(super.show(A),this.starterSelectCallback=A[0],this.starterSelectContainer.setVisible(!0),this.allSpecies.forEach((s,R)=>{const n=this.starterContainers[R].icon,I=this.scene.gameData.dexData[s.speciesId];this.starterPreferences[s.speciesId]=this.initStarterPrefs(s),I.caughtAttr?n.clearTint():I.seenAttr&&n.setTint(8421504),this.setUpgradeAnimation(n,s)}),this.resetFilters(),this.updateStarters(),this.setFilterMode(!1),this.filterBarCursor=0,this.setCursor(0),this.tryUpdateValue(0),Wi(this.scene,JR.Starter_Select),!0):!1}initStarterPrefs(A){var o;const s=this.starterPreferences[A.speciesId],R=this.scene.gameData.dexData[A.speciesId],n=this.scene.gameData.starterData[A.speciesId];if(!s||!R.caughtAttr)return{};const I=R.caughtAttr,a=I&Ze.SHINY,r=I&Ze.NON_SHINY;if(s.shiny&&!a?(delete s.shiny,delete s.variant):s.shiny===!1&&!r&&delete s.shiny,s.variant!==void 0){const l=[a&&I&Ze.DEFAULT_VARIANT,a&&I&Ze.VARIANT_2,a&&I&Ze.VARIANT_3];(isNaN(s.variant)||s.variant<0||!l[s.variant])&&delete s.variant}if(s.female!==void 0&&((s.female?I&Ze.FEMALE:I&Ze.MALE)||delete s.female),s.ability!==void 0){const l=A.ability2===A.ability1,C=n.abilityAttr,M=C&Cs.ABILITY_1,u=C&Cs.ABILITY_2,h=C&Cs.ABILITY_HIDDEN;[M,l?u&&!M:u,h][s.ability]||delete s.ability}const S=s.form;return S!==void 0&&(!((o=A.forms[S])!=null&&o.isStarterSelectable)||!(I&this.scene.gameData.getFormAttr(S)))&&delete s.form,s.nature!==void 0&&this.scene.gameData.getNaturesForAttr(R.natureAttr).indexOf(s.nature)<0&&delete s.nature,s}resetFilters(){const A=this.filterBar.getFilter(As.CAUGHT);this.filterBar.setValsToDefault();for(let s=0;s<A.options.length;s++)A.options[s].val!=="ALL"&&A.options[s].val!=="UNCAUGHT"&&A.toggleOptionState(s)}showText(A,s,R,n,I,a,r){super.showText(A,s,R,n,I,a);const S=(A==null?void 0:A.indexOf(`
`))===-1;this.starterSelectMessageBox.setSize(318,S?28:42),r?(this.starterSelectMessageBox.setOrigin(0,0),this.starterSelectMessageBoxContainer.setY(0),this.message.setY(4)):(this.starterSelectMessageBoxContainer.setY(this.scene.game.canvas.height/6),this.starterSelectMessageBox.setOrigin(0,1),this.message.setY(S?-22:-37)),this.starterSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}isUpgradeIconEnabled(){return this.scene.candyUpgradeNotification!==0&&this.scene.candyUpgradeDisplay===0}isUpgradeAnimationEnabled(){return this.scene.candyUpgradeNotification!==0&&this.scene.candyUpgradeDisplay===1}isPassiveAvailable(A){const s=this.scene.gameData.starterData[A];return s.candyCount>=WV(KA[A])&&!(s.passiveAttr&YR.UNLOCKED)}isValueReductionAvailable(A){const s=this.scene.gameData.starterData[A];return s.candyCount>=YV(KA[A])[s.valueReduction]&&s.valueReduction<Ub}isSameSpeciesEggAvailable(A){return this.scene.gameData.starterData[A].candyCount>=yV(KA[A])}setUpgradeAnimation(A,s,R=!1){if(this.scene.tweens.killTweensOf(A),this.scene.candyUpgradeDisplay===0||s.speciesId!==s.getRootSpeciesId(!1))return;A.y=2;const n={targets:A,loop:-1,delay:vb(0,50)*5,loopDelay:1e3,tweens:[{targets:A,y:-3,duration:Et(125),ease:"Cubic.easeOut",yoyo:!0},{targets:A,y:-1,duration:Et(150),ease:"Cubic.easeOut",yoyo:!0}]},I=this.isPassiveAvailable(s.speciesId),a=this.isValueReductionAvailable(s.speciesId),r=this.isSameSpeciesEggAvailable(s.speciesId);this.scene.candyUpgradeNotification===1?I&&(this.scene.tweens.chain(n).paused=R):this.scene.candyUpgradeNotification===2&&(I||a||r)&&(this.scene.tweens.chain(n).paused=R)}setUpgradeIcon(A){const s=A.species,R=!!(s!=null&&s.speciesId);if(!s||this.scene.candyUpgradeNotification===0||s.speciesId!==s.getRootSpeciesId(!1)){A.candyUpgradeIcon.setVisible(!1),A.candyUpgradeOverlayIcon.setVisible(!1);return}const n=this.isPassiveAvailable(s.speciesId),I=this.isValueReductionAvailable(s.speciesId),a=this.isSameSpeciesEggAvailable(s.speciesId);this.scene.candyUpgradeNotification===1?(A.candyUpgradeIcon.setVisible(R&&n),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible)):this.scene.candyUpgradeNotification===2&&(A.candyUpgradeIcon.setVisible(R&&(n||I||a)),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible))}updateCandyUpgradeDisplay(A){this.isUpgradeIconEnabled()&&this.setUpgradeIcon(A),this.isUpgradeAnimationEnabled()&&this.setUpgradeAnimation(A.icon,this.lastSpecies,!0)}onCandyUpgradeDisplayChanged(A){if(A){if(this.scene.candyUpgradeDisplay===0){this.filteredStarterContainers.forEach(R=>{this.setUpgradeIcon(R)});return}this.filteredStarterContainers.forEach((R,n)=>{const I=this.filteredStarterContainers[n].icon;this.setUpgradeAnimation(I,R.species)})}}processInput(A){var P,G;if(this.blockInput)return!1;const s=9,R=9,n=this.filteredStarterContainers.length,I=Math.ceil(n/s),a=Math.floor(this.cursor/s),r=this.scrollCursor*s,S=Math.min(this.filteredStarterContainers.length-1,r+R*s-1),o=S-r+1,l=Math.ceil(o/s),C=Math.floor((this.cursor-r)/s),M=this.getUi();let u=!1,h=!1;if(A===b.SUBMIT)this.tryStart(!0)?u=!0:h=!0;else if(A===b.CANCEL)this.filterMode&&this.filterBar.openDropDown?(this.filterBar.toggleDropDown(this.filterBarCursor),n>0&&(this.setFilterMode(!1),this.scrollCursor=0,this.updateScroll(),this.setCursor(0)),u=!0):this.statsMode?(this.toggleStatsMode(!1),u=!0):this.starterSpecies.length?(this.popStarter(this.starterSpecies.length-1),u=!0,this.updateInstructions()):(this.tryExit(),u=!0);else if(A===b.STATS)this.filterMode||(this.startCursorObj.setVisible(!1),this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=0,this.setFilterMode(!0),this.filterBar.toggleDropDown(this.filterBarCursor));else if(this.startCursorObj.visible)switch(A){case b.ACTION:this.tryStart(!0)?u=!0:h=!0;break;case b.UP:this.startCursorObj.setVisible(!1),this.starterSpecies.length>0?(this.starterIconsCursorIndex=this.starterSpecies.length-1,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.startCursorObj.setVisible(!1),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0)),u=!0;break;case b.DOWN:this.startCursorObj.setVisible(!1),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0),u=!0;break;case b.LEFT:n>0&&(this.startCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(r+(l-1)*9+8),u=!0);break;case b.RIGHT:n>0&&(this.startCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(r+(l-1)*9),u=!0);break}else if(this.filterMode)switch(A){case b.LEFT:this.filterBarCursor>0?u=this.setCursor(this.filterBarCursor-1):u=this.setCursor(this.filterBar.numFilters-1);break;case b.RIGHT:this.filterBarCursor<this.filterBar.numFilters-1?u=this.setCursor(this.filterBarCursor+1):u=this.setCursor(0);break;case b.UP:if(this.filterBar.openDropDown)u=this.filterBar.decDropDownCursor();else if(this.filterBarCursor===this.filterBar.numFilters-1&&this.starterSpecies.length>0)this.setFilterMode(!1),this.cursorObj.setVisible(!1),this.startCursorObj.setVisible(!0),u=!0;else if(n>0){this.setFilterMode(!1),this.scrollCursor=Math.max(0,I-9),this.updateScroll();const d=(this.filterBarCursor+.5)/this.filterBar.numFilters,H=Math.min(8,Math.floor(d*11));n%9>H?this.setCursor(n-n%9+H):this.setCursor(Math.max(n-n%9+H-9,0)),u=!0}break;case b.DOWN:if(this.filterBar.openDropDown)u=this.filterBar.incDropDownCursor();else if(this.filterBarCursor===this.filterBar.numFilters-1&&this.starterSpecies.length>0)this.setFilterMode(!1),this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=0,this.moveStarterIconsCursor(this.starterIconsCursorIndex),u=!0;else if(n>0){this.setFilterMode(!1),this.scrollCursor=0,this.updateScroll();const d=this.filterBarCursor/Math.max(1,this.filterBar.numFilters-1),H=Math.min(8,Math.floor(d*11));this.setCursor(Math.min(H,n)),u=!0}break;case b.ACTION:this.filterBar.openDropDown?this.filterBar.toggleOptionState():this.filterBar.toggleDropDown(this.filterBarCursor),u=!0;break}else{let d;const H=this.scene.gameData.starterData[this.lastSpecies.speciesId];let f=this.starterPreferences[this.lastSpecies.speciesId];if(this.starterIconsCursorObj.visible?d=this.filteredStarterContainers[this.filteredStarterContainers.findIndex(K=>K.species===this.lastSpecies)]:d=this.filteredStarterContainers[this.cursor],A===b.ACTION){if(!((P=this.speciesStarterDexEntry)!=null&&P.caughtAttr))h=!0;else if(this.starterSpecies.length<=6){const K=this.getUi();let W=[];const[V,k]=this.isInParty(this.lastSpecies),Q=this.isPartyValid(),j=new Lt(!0);Fs(this.scene.gameMode,Us.STARTER_CHOICE,this.lastSpecies,j,this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)),Q);const J=this.starterSpecies.map(He=>He.generation).reduce((He,ue,me)=>He+=this.scene.gameData.getSpeciesStarterValue(this.starterSpecies[me].speciesId),0),ne=this.scene.gameData.getSpeciesStarterValue(this.lastSpecies.speciesId);if(!V&&j.value&&J+ne<=this.getValueLimit()&&this.starterSpecies.length<or?W=[{label:D.t("starterSelectUiHandler:addToParty"),handler:L(()=>{var ue;K.setMode(Oe.STARTER_SELECT);const He=this.tryUpdateValue(this.scene.gameData.getSpeciesStarterValue(this.lastSpecies.speciesId),!0);if(!V&&j.value&&He){const me=this.starterCursorObjs[this.starterSpecies.length];me.setVisible(!0),me.setPosition(this.cursorObj.x,this.cursorObj.y),this.addToParty(this.lastSpecies,this.dexAttrCursor,this.abilityCursor,this.natureCursor,(ue=this.starterMoveset)==null?void 0:ue.slice(0)),K.playSelect()}else K.playError();return!0},"handler"),overrideSound:!0}]:V&&(W=[{label:D.t("starterSelectUiHandler:removeFromParty"),handler:L(()=>(this.popStarter(k),K.setMode(Oe.STARTER_SELECT),!0),"handler")}]),W.push({label:D.t("starterSelectUiHandler:toggleIVs"),handler:L(()=>(this.toggleStatsMode(),K.setMode(Oe.STARTER_SELECT),!0),"handler")}),this.speciesStarterMoves.length>1){const He=L(ue=>{this.blockInput=!0,K.setMode(Oe.STARTER_SELECT).then(()=>{K.showText(D.t("starterSelectUiHandler:selectMoveSwapOut"),null,()=>{this.moveInfoOverlay.show(ye[ue[0]]),K.setModeWithoutClear(Oe.OPTION_SELECT,{options:ue.map((me,Me)=>({label:ye[me].name,handler:L(()=>(this.blockInput=!0,K.setMode(Oe.STARTER_SELECT).then(()=>{K.showText(`${D.t("starterSelectUiHandler:selectMoveSwapWith")} ${ye[me].name}.`,null,()=>{const z=this.speciesStarterMoves.filter(te=>te!==me);this.moveInfoOverlay.show(ye[z[0]]),K.setModeWithoutClear(Oe.OPTION_SELECT,{options:z.map(te=>({label:ye[te].name,handler:L(()=>(this.switchMoveHandler(Me,te,me),He(this.starterMoveset),!0),"handler"),onHover:L(()=>{this.moveInfoOverlay.show(ye[te])},"onHover")})).concat({label:D.t("menu:cancel"),handler:L(()=>(He(this.starterMoveset),!0),"handler"),onHover:L(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),!0),"handler"),onHover:L(()=>{this.moveInfoOverlay.show(ye[me])},"onHover")})).concat({label:D.t("menu:cancel"),handler:L(()=>(this.moveInfoOverlay.clear(),this.clearText(),K.setMode(Oe.STARTER_SELECT),!0),"handler"),onHover:L(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})})},"showSwapOptions");W.push({label:D.t("starterSelectUiHandler:manageMoves"),handler:L(()=>(He(this.starterMoveset),!0),"handler")})}if(this.canCycleNature){const He=L(()=>{this.blockInput=!0,K.setMode(Oe.STARTER_SELECT).then(()=>{K.showText(D.t("starterSelectUiHandler:selectNature"),null,()=>{var me;const ue=this.scene.gameData.getNaturesForAttr((me=this.speciesStarterDexEntry)==null?void 0:me.natureAttr);K.setModeWithoutClear(Oe.OPTION_SELECT,{options:ue.map((Me,Ie)=>({label:xO(Me,!0,!0,!0,this.scene.uiTheme),handler:L(()=>(f||(f=this.starterPreferences[this.lastSpecies.speciesId]={}),f.nature=Me,this.clearText(),K.setMode(Oe.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies,{natureIndex:Me}),this.blockInput=!1,!0),"handler")})).concat({label:D.t("menu:cancel"),handler:L(()=>(this.clearText(),K.setMode(Oe.STARTER_SELECT),this.blockInput=!1,!0),"handler")}),maxOptions:8,yOffset:19})})})},"showNatureOptions");W.push({label:D.t("starterSelectUiHandler:manageNature"),handler:L(()=>(He(),!0),"handler")})}const x=H.passiveAttr;x&YR.UNLOCKED&&(x&YR.ENABLED?W.push({label:D.t("starterSelectUiHandler:disablePassive"),handler:L(()=>(H.passiveAttr^=YR.ENABLED,K.setMode(Oe.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),!0),"handler")}):W.push({label:D.t("starterSelectUiHandler:enablePassive"),handler:L(()=>(H.passiveAttr|=YR.ENABLED,K.setMode(Oe.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),!0),"handler")})),(f==null?void 0:f.favorite)??!1?W.push({label:D.t("starterSelectUiHandler:removeFromFavorites"),handler:L(()=>(f.favorite=!1,d&&d.favoriteIcon.setVisible(f.favorite),K.setMode(Oe.STARTER_SELECT),!0),"handler")}):W.push({label:D.t("starterSelectUiHandler:addToFavorites"),handler:L(()=>(f.favorite=!0,d&&d.favoriteIcon.setVisible(f.favorite),K.setMode(Oe.STARTER_SELECT),!0),"handler")}),W.push({label:D.t("menu:rename"),handler:L(()=>{K.playSelect();let He=f.nickname?String(f.nickname):"";return He=decodeURIComponent(escape(atob(He))),K.setModeWithoutClear(Oe.RENAME_POKEMON,{buttonActions:[ue=>{K.playSelect(),f.nickname=ue;const me=decodeURIComponent(escape(atob(f.nickname)));me.length>0?this.pokemonNameText.setText(me):this.pokemonNameText.setText(this.lastSpecies.name),K.setMode(Oe.STARTER_SELECT)},()=>{K.setMode(Oe.STARTER_SELECT)}]},He),!0},"handler")});const F=H.candyCount,Te=L(()=>{const He=[];if(!(x&YR.UNLOCKED)){const Me=WV(KA[this.lastSpecies.speciesId]);He.push({label:`x${Me} ${D.t("starterSelectUiHandler:unlockPassive")} (${LE[u0[this.lastSpecies.speciesId]].name})`,handler:L(()=>Ye.FREE_CANDY_UPGRADE_OVERRIDE||F>=Me?(H.passiveAttr|=YR.UNLOCKED|YR.ENABLED,Ye.FREE_CANDY_UPGRADE_OVERRIDE||(H.candyCount-=Me),this.pokemonCandyCountText.setText(`x${H.candyCount}`),this.scene.gameData.saveSystem().then(Ie=>{if(!Ie)return this.scene.reset(!0)}),K.setMode(Oe.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),this.scene.playSound("se/buy"),d&&(this.updateCandyUpgradeDisplay(d),d.starterPassiveBgs.setVisible(!!this.scene.gameData.starterData[this.lastSpecies.speciesId].passiveAttr)),!0):!1,"handler"),item:"candy",itemArgs:RR[this.lastSpecies.speciesId]})}const ue=H.valueReduction;if(ue<Ub){const Me=YV(KA[this.lastSpecies.speciesId])[ue];He.push({label:`x${Me} ${D.t("starterSelectUiHandler:reduceCost")}`,handler:L(()=>Ye.FREE_CANDY_UPGRADE_OVERRIDE||F>=Me?(H.valueReduction++,Ye.FREE_CANDY_UPGRADE_OVERRIDE||(H.candyCount-=Me),this.pokemonCandyCountText.setText(`x${H.candyCount}`),this.scene.gameData.saveSystem().then(Ie=>{if(!Ie)return this.scene.reset(!0)}),this.tryUpdateValue(0),K.setMode(Oe.STARTER_SELECT),this.scene.playSound("se/buy"),d&&(this.updateStarterValueLabel(d),this.updateCandyUpgradeDisplay(d)),!0):!1,"handler"),item:"candy",itemArgs:RR[this.lastSpecies.speciesId]})}const me=yV(KA[this.lastSpecies.speciesId]);He.push({label:`x${me} ${D.t("starterSelectUiHandler:sameSpeciesEgg")}`,handler:L(()=>Ye.FREE_CANDY_UPGRADE_OVERRIDE||F>=me?this.scene.gameData.eggs.length>=99&&!Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(this.showText(D.t("egg:tooManyEggs"),void 0,()=>this.showText("",0,()=>this.tutorialActive=!1),2e3,!1,void 0,!0),!1):(Ye.FREE_CANDY_UPGRADE_OVERRIDE||(H.candyCount-=me),this.pokemonCandyCountText.setText(`x${H.candyCount}`),new gi({scene:this.scene,species:this.lastSpecies.speciesId,sourceType:pE.SAME_SPECIES_EGG}).addEggToGameData(this.scene),this.scene.gameData.saveSystem().then(Ie=>{if(!Ie)return this.scene.reset(!0)}),K.setMode(Oe.STARTER_SELECT),this.scene.playSound("se/buy"),d&&this.updateCandyUpgradeDisplay(d),!0):!1,"handler"),item:"candy",itemArgs:RR[this.lastSpecies.speciesId]}),He.push({label:D.t("menu:cancel"),handler:L(()=>(K.setMode(Oe.STARTER_SELECT),!0),"handler")}),K.setModeWithoutClear(Oe.OPTION_SELECT,{options:He,yOffset:47})},"showUseCandies");QA.hasOwnProperty(this.lastSpecies.speciesId)||W.push({label:D.t("starterSelectUiHandler:useCandies"),handler:L(()=>(K.setMode(Oe.STARTER_SELECT).then(()=>Te()),!0),"handler")}),W.push({label:D.t("menu:cancel"),handler:L(()=>(K.setMode(Oe.STARTER_SELECT),!0),"handler")}),K.setModeWithoutClear(Oe.OPTION_SELECT,{options:W,yOffset:47}),u=!0}}else{const K=this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId));switch(A){case b.CYCLE_SHINY:if(this.canCycleShiny)if(f.shiny=f.shiny!==void 0?!f.shiny:!1,f.shiny){const W=this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)),V=f.variant?f.variant:W.variant;this.setSpeciesDetails(this.lastSpecies,{shiny:!0,variant:V}),this.scene.playSound("se/sparkle");const k=YE(V);this.pokemonShinyIcon.setFrame(Ai(V)),this.pokemonShinyIcon.setTint(k),this.pokemonShinyIcon.setVisible(!0)}else this.setSpeciesDetails(this.lastSpecies,{shiny:!1,variant:0}),this.pokemonShinyIcon.setVisible(!1),u=!0;break;case b.V:if(this.canCycleVariant){let W=K.variant;do if(W=(W+1)%3,W===0){if(this.speciesStarterDexEntry.caughtAttr&Ze.DEFAULT_VARIANT)break}else if(W===1){if(this.speciesStarterDexEntry.caughtAttr&Ze.VARIANT_2)break}else if(this.speciesStarterDexEntry.caughtAttr&Ze.VARIANT_3)break;while(W!==K.variant);f.variant=W,this.setSpeciesDetails(this.lastSpecies,{variant:W});const V=YE(W);this.pokemonShinyIcon.setFrame(Ai(W)),this.pokemonShinyIcon.setTint(V),u=!0}break;case b.CYCLE_FORM:if(this.canCycleForm){const W=this.lastSpecies.forms.length;let V=K.formIndex;do if(V=(V+1)%W,this.lastSpecies.forms[V].isStarterSelectable&&this.speciesStarterDexEntry.caughtAttr&this.scene.gameData.getFormAttr(V))break;while(V!==K.formIndex);f.form=V,this.setSpeciesDetails(this.lastSpecies,{formIndex:V}),u=!0}break;case b.CYCLE_GENDER:this.canCycleGender&&(f.female=!K.female,this.setSpeciesDetails(this.lastSpecies,{female:!K.female}),u=!0);break;case b.CYCLE_ABILITY:if(this.canCycleAbility){const W=this.lastSpecies.getAbilityCount(),V=this.scene.gameData.starterData[this.lastSpecies.speciesId].abilityAttr,k=V&Cs.ABILITY_1;let Q=this.abilityCursor;do if(Q=(Q+1)%W,Q===0){if(k)break}else if(Q===1){this.lastSpecies.ability1===this.lastSpecies.ability2&&k&&(Q=(Q+1)%W);break}else if(V&Cs.ABILITY_HIDDEN)break;while(Q!==this.abilityCursor);f.ability=Q;const{visible:j}=this.scene.ui.getTooltip();if(j&&this.activeTooltip==="ABILITY"){const J=LE[this.lastSpecies.getAbility(Q)];this.scene.ui.editTooltip(`${J.name}`,`${J.description}`)}this.setSpeciesDetails(this.lastSpecies,{abilityIndex:Q}),u=!0}break;case b.CYCLE_NATURE:if(this.canCycleNature){const W=this.scene.gameData.getNaturesForAttr((G=this.speciesStarterDexEntry)==null?void 0:G.natureAttr),V=W.indexOf(this.natureCursor),k=W[V<W.length-1?V+1:0];f.nature=k,this.setSpeciesDetails(this.lastSpecies,{natureIndex:k}),u=!0}break;case b.UP:this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex===0?(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0)):(this.starterIconsCursorIndex--,this.moveStarterIconsCursor(this.starterIconsCursorIndex)),u=!0):a>0?(this.scrollCursor>0&&a-this.scrollCursor===0&&(this.scrollCursor--,this.updateScroll()),u=this.setCursor(this.cursor-9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.filteredStarterContainers[this.cursor]),this.setFilterMode(!0),u=!0);break;case b.DOWN:this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex<=this.starterSpecies.length-2?(this.starterIconsCursorIndex++,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),u=!0):a<I-1?(a-this.scrollCursor===8&&this.scrollCursor++,u=this.setCursor(this.cursor+9),this.updateScroll()):I>1?(this.scrollCursor=0,this.updateScroll(),u=this.setCursor(this.cursor%9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.filteredStarterContainers[this.cursor]),this.setFilterMode(!0),u=!0);break;case b.LEFT:if(!this.starterIconsCursorObj.visible)this.cursor%9!==0?u=this.setCursor(this.cursor-1):(this.starterSpecies.length===0?u=this.setCursor(this.cursor+Math.min(8,n-this.cursor)):C<7?(this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=ub(this.cursorObj.y-1,this.starterSpecies.length),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.cursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),u=!0);else if(n>0){const W=Db(this.starterIconsCursorIndex,l);this.starterIconsCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(Math.min(r+W*9+8,S)),u=!0}else u=!1;break;case b.RIGHT:if(!this.starterIconsCursorObj.visible)this.cursor%9<(a<I-1?8:(n-1)%9)?u=this.setCursor(this.cursor+1):(this.starterSpecies.length===0?u=this.setCursor(this.cursor-Math.min(8,this.cursor%9)):C<7?(this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=ub(this.cursorObj.y-1,this.starterSpecies.length),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.cursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),u=!0);else if(n>0){const W=Db(this.starterIconsCursorIndex,l);this.starterIconsCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(Math.min(r+W*9,S-S%9)),u=!0}else u=!1;break}}}return u?M.playSelect():h&&M.playError(),u||h}isInParty(A){let s=0,R=!1;for(let n=0;n<this.starterSpecies.length;n++)if(this.starterSpecies[n]===A){R=!0,s=n;break}return[R,s]}addToParty(A,s,R,n,I){const a=this.scene.gameData.getSpeciesDexAttrProps(A,s);this.starterIcons[this.starterSpecies.length].setTexture(A.getIconAtlasKey(a.formIndex,a.shiny,a.variant)),this.starterIcons[this.starterSpecies.length].setFrame(A.getIconId(a.female,a.formIndex,a.shiny,a.variant)),this.checkIconId(this.starterIcons[this.starterSpecies.length],A,a.female,a.formIndex,a.shiny,a.variant),this.starterSpecies.push(A),this.starterAttr.push(s),this.starterAbilityIndexes.push(R),this.starterNatures.push(n),this.starterMovesets.push(I),this.speciesLoaded.get(A.speciesId)&&Bi(A.speciesId,a.formIndex).cry(this.scene),this.updateInstructions()}updatePartyIcon(A,s){const R=this.scene.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId));this.starterIcons[s].setTexture(A.getIconAtlasKey(R.formIndex,R.shiny,R.variant)),this.starterIcons[s].setFrame(A.getIconId(R.female,R.formIndex,R.shiny,R.variant)),this.checkIconId(this.starterIcons[s],A,R.female,R.formIndex,R.shiny,R.variant)}switchMoveHandler(A,s,R){var r,S,o,l,C;const n=this.lastSpecies.speciesId,I=(r=this.starterMoveset)==null?void 0:r.indexOf(s);this.starterMoveset[A]=s,I>-1&&(this.starterMoveset[I]=R);const a=this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.dexAttrCursor);if(En.hasOwnProperty(n)){(!this.scene.gameData.starterData[n].moveset||Array.isArray(this.scene.gameData.starterData[n].moveset))&&(this.scene.gameData.starterData[n].moveset={[a.formIndex]:(S=this.starterMoveset)==null?void 0:S.slice(0)});const M=this.scene.gameData.starterData[n].moveset;M.hasOwnProperty(a.formIndex)||(this.scene.gameData.starterData[n].moveset[a.formIndex]=(o=this.starterMoveset)==null?void 0:o.slice(0)),M.hasOwnProperty(a.formIndex)&&M[a.formIndex][I]!==s&&(this.scene.gameData.starterData[n].moveset[a.formIndex]=(l=this.starterMoveset)==null?void 0:l.slice(0))}else this.scene.gameData.starterData[n].moveset=(C=this.starterMoveset)==null?void 0:C.slice(0);this.setSpeciesDetails(this.lastSpecies,{forSeen:!1}),this.starterMovesets.length&&Array.from({length:this.starterSpecies.length},(M,u)=>{this.starterSpecies[u].speciesId===n&&(this.starterMovesets[u]=this.starterMoveset)})}updateButtonIcon(A,s,R,n){var a;let I;if(s==="touch")switch(s="keyboard",A){case at.Button_Cycle_Shiny:I="R.png";break;case at.Button_Cycle_Form:I="F.png";break;case at.Button_Cycle_Gender:I="G.png";break;case at.Button_Cycle_Ability:I="E.png";break;case at.Button_Cycle_Nature:I="N.png";break;case at.Button_Cycle_Variant:I="V.png";break;case at.Button_Stats:I="C.png";break}else I=(a=this.scene.inputController)==null?void 0:a.getIconForLatestInputRecorded(A);R.setTexture(s,I),R.setPosition(this.instructionRowX,this.instructionRowY),n.setPosition(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY),R.setVisible(!0),n.setVisible(!0),this.instructionsContainer.add([R,n]),this.instructionRowY+=8,this.instructionRowY>=24&&(this.instructionRowY=0,this.instructionRowX+=50)}updateFilterButtonIcon(A,s,R,n){var a;let I;s==="touch"?(s="keyboard",I="C.png"):I=(a=this.scene.inputController)==null?void 0:a.getIconForLatestInputRecorded(A),R.setTexture(s,I),R.setPosition(this.filterInstructionRowX,this.filterInstructionRowY),n.setPosition(this.filterInstructionRowX+this.instructionRowTextOffset,this.filterInstructionRowY),R.setVisible(!0),n.setVisible(!0),this.filterInstructionsContainer.add([R,n]),this.filterInstructionRowY+=8,this.filterInstructionRowY>=24&&(this.filterInstructionRowY=0,this.filterInstructionRowX+=50)}updateInstructions(){var s;this.instructionRowX=0,this.instructionRowY=0,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.hideInstructions(),this.instructionsContainer.removeAll(),this.filterInstructionsContainer.removeAll();let A;this.scene.inputMethod==="gamepad"?A=this.scene.inputController.getConfig(this.scene.inputController.selectedDevice[iA.GAMEPAD]).padType:A=this.scene.inputMethod,A&&((s=this.speciesStarterDexEntry)!=null&&s.caughtAttr&&(this.canCycleShiny&&this.updateButtonIcon(at.Button_Cycle_Shiny,A,this.shinyIconElement,this.shinyLabel),this.canCycleForm&&this.updateButtonIcon(at.Button_Cycle_Form,A,this.formIconElement,this.formLabel),this.canCycleGender&&this.updateButtonIcon(at.Button_Cycle_Gender,A,this.genderIconElement,this.genderLabel),this.canCycleAbility&&this.updateButtonIcon(at.Button_Cycle_Ability,A,this.abilityIconElement,this.abilityLabel),this.canCycleNature&&this.updateButtonIcon(at.Button_Cycle_Nature,A,this.natureIconElement,this.natureLabel),this.canCycleVariant&&this.updateButtonIcon(at.Button_Cycle_Variant,A,this.variantIconElement,this.variantLabel)),this.filterMode||this.updateFilterButtonIcon(at.Button_Stats,A,this.goFilterIconElement,this.goFilterLabel))}getValueLimit(){const A=new Rt(0);switch(this.scene.gameMode.modeId){case SA.ENDLESS:case SA.SPLICED_ENDLESS:A.value=15;break;default:A.value=10}return Fs(this.scene.gameMode,Us.STARTER_POINTS,A),A.value}setCursor(A){var R,n;let s=!1;if(this.filterMode)s=this.filterBarCursor!==A,this.filterBarCursor=A,this.filterBar.setCursor(A);else{A=Math.max(Math.min(this.filteredStarterContainers.length-1,A),0),s=super.setCursor(A);const I=c0(A,this.scrollCursor);this.cursorObj.setPosition(I.x-1,I.y+1);const a=(R=this.filteredStarterContainers[A])==null?void 0:R.species;if(a){const r=this.getCurrentDexProps(a.speciesId),S=this.scene.gameData.getSpeciesDexAttrProps(a,r),o=(n=this.starterPreferences[a.speciesId])!=null&&n.variant?this.starterPreferences[a.speciesId].variant:S.variant,l=YE(o);this.pokemonShinyIcon.setFrame(Ai(o)),this.pokemonShinyIcon.setTint(l),this.setSpecies(a),this.updateInstructions()}}return s}setFilterMode(A){return this.cursorObj.setVisible(!A),this.filterBar.cursorObj.setVisible(A),A!==this.filterMode?(this.filterMode=A,this.setCursor(A?this.filterBarCursor:this.cursor),A&&(this.setSpecies(null),this.updateInstructions()),!0):!1}moveStarterIconsCursor(A){this.starterIconsCursorObj.x=this.starterIcons[A].x+this.starterIconsCursorXOffset,this.starterIconsCursorObj.y=this.starterIcons[A].y+this.starterIconsCursorYOffset,this.starterSpecies.length>0?(this.starterIconsCursorObj.setVisible(!0),this.setSpecies(this.starterSpecies[A])):(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null))}getFriendship(A){let s=this.scene.gameData.starterData[A].friendship;(!s||s===void 0)&&(s=0);const R=A1(KA[A]);return{currentFriendship:s,friendshipCap:R}}setSpecies(A){var R,n,I,a;this.speciesStarterDexEntry=A?this.scene.gameData.dexData[A.speciesId]:null,this.dexAttrCursor=A?this.getCurrentDexProps(A.speciesId):0n,this.abilityCursor=A?this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A):0,this.natureCursor=A?this.scene.gameData.getSpeciesDefaultNature(A):0,!A&&this.scene.ui.getTooltip().visible&&this.scene.ui.hideTooltip(),this.pokemonAbilityText.off("pointerover"),this.pokemonPassiveText.off("pointerover");const s=A?{...this.starterPreferences[A.speciesId]}:null;if(s!=null&&s.nature&&(this.natureCursor=s.nature),s!=null&&s.ability&&!isNaN(s.ability)&&(this.abilityCursor=s.ability),this.statsMode&&((R=this.speciesStarterDexEntry)!=null&&R.caughtAttr?(this.statsContainer.setVisible(!0),this.showStats()):(this.statsContainer.setVisible(!1),this.statsContainer.updateIvs(null))),this.lastSpecies){const r=this.getCurrentDexProps(this.lastSpecies.speciesId),S=this.scene.gameData.getSpeciesDexAttrProps(this.lastSpecies,r),o=this.allSpecies.indexOf(this.lastSpecies),l=this.starterContainers[o].icon;this.checkIconId(l,this.lastSpecies,S.female,S.formIndex,S.shiny,S.variant),this.iconAnimHandler.addOrUpdate(l,Qs.NONE);const C=this.starterContainers[o].icon;this.scene.tweens.getTweensOf(C).forEach(M=>M.resume())}if(this.lastSpecies=A,A&&((n=this.speciesStarterDexEntry)!=null&&n.seenAttr||(I=this.speciesStarterDexEntry)!=null&&I.caughtAttr)){if(this.pokemonNumberText.setText(Ln(A.speciesId,4)),s!=null&&s.nickname){const r=decodeURIComponent(escape(atob(s.nickname)));this.pokemonNameText.setText(r)}else this.pokemonNameText.setText(A.name);if((a=this.speciesStarterDexEntry)!=null&&a.caughtAttr){const r=RR[A.speciesId],S=this.scene.gameData.getDexAttrLuck(this.speciesStarterDexEntry.caughtAttr);this.pokemonLuckText.setVisible(!!S),this.pokemonLuckText.setText(S.toString()),this.pokemonLuckText.setTint(YE(Math.min(S-1,2))),this.pokemonLuckLabelText.setVisible(this.pokemonLuckText.visible);let o=wn(_[A.growthRate]);const l=o.replace(" ","_");D.exists("growth:"+l)&&(o=D.t("growth:"+l)),this.pokemonGrowthRateText.setText(o),this.pokemonGrowthRateText.setColor(gV(A.growthRate)),this.pokemonGrowthRateText.setShadowColor(gV(A.growthRate,!0)),this.pokemonGrowthRateLabelText.setVisible(!0),this.pokemonUncaughtText.setVisible(!1),this.pokemonAbilityLabelText.setVisible(!0),this.pokemonPassiveLabelText.setVisible(!0),this.pokemonNatureLabelText.setVisible(!0),this.pokemonCaughtCountText.setText(`${this.speciesStarterDexEntry.caughtCount}`),A.speciesId===e.MANAPHY||A.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(Ya(A)),this.pokemonHatchedCountText.setText(`${this.speciesStarterDexEntry.hatchedCount}`);const C=this.getCurrentDexProps(A.speciesId),M=this.scene.gameData.getSpeciesDexAttrProps(A,C),u=M.variant,h=YE(u);if(this.pokemonShinyIcon.setFrame(Ai(u)),this.pokemonShinyIcon.setTint(h),this.pokemonShinyIcon.setVisible(M.shiny),this.pokemonCaughtHatchedContainer.setVisible(!0),this.pokemonFormText.setVisible(!0),QA.hasOwnProperty(A.speciesId))this.pokemonCaughtHatchedContainer.setY(16),this.pokemonShinyIcon.setY(135),this.pokemonShinyIcon.setFrame(Ai(u)),[this.pokemonCandyContainer,this.pokemonHatchedIcon,this.pokemonHatchedCountText].map(K=>K.setVisible(!1)),this.pokemonFormText.setY(25);else{this.pokemonCaughtHatchedContainer.setY(25),this.pokemonShinyIcon.setY(117),this.pokemonCandyIcon.setTint(Xs(hs(r[0]))),this.pokemonCandyOverlayIcon.setTint(Xs(hs(r[1]))),this.pokemonCandyCountText.setText(`x${this.scene.gameData.starterData[A.speciesId].candyCount}`),this.pokemonCandyContainer.setVisible(!0),this.pokemonFormText.setY(42),this.pokemonHatchedIcon.setVisible(!0),this.pokemonHatchedCountText.setVisible(!0);const{currentFriendship:K,friendshipCap:W}=this.getFriendship(this.lastSpecies.speciesId),V=16-16*(K/W);this.pokemonCandyDarknessOverlay.setCrop(0,0,16,V),this.pokemonCandyContainer.on("pointerover",()=>{this.scene.ui.showTooltip("",`${K}/${W}`,!0),this.activeTooltip="CANDY"}),this.pokemonCandyContainer.on("pointerout",()=>{this.scene.ui.hideTooltip(),this.activeTooltip=void 0})}const P=this.allSpecies.indexOf(A),G=this.starterContainers[P].icon;this.isUpgradeAnimationEnabled()&&(this.scene.tweens.getTweensOf(G).forEach(K=>K.pause()),G.x=-2,G.y=2),this.iconAnimHandler.addOrUpdate(G,Qs.PASSIVE);const d=this.starterSpecies.indexOf(A);let H;if(d>-1)H=this.scene.gameData.getSpeciesDexAttrProps(A,this.starterAttr[d]),this.setSpeciesDetails(A,{shiny:H.shiny,formIndex:H.formIndex,female:H.female,variant:H.variant,abilityIndex:this.starterAbilityIndexes[d],natureIndex:this.starterNatures[d]});else{const K=this.getCurrentDexProps(A.speciesId),W=(s==null?void 0:s.ability)??this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A),V=(s==null?void 0:s.nature)||this.scene.gameData.getSpeciesDefaultNature(A);H=this.scene.gameData.getSpeciesDexAttrProps(A,K),s!=null&&s.variant&&!isNaN(s.variant)&&H.shiny&&(H.variant=s.variant),H.formIndex=(s==null?void 0:s.form)??H.formIndex,H.female=(s==null?void 0:s.female)??H.female,this.setSpeciesDetails(A,{shiny:H.shiny,formIndex:H.formIndex,female:H.female,variant:H.variant,abilityIndex:W,natureIndex:V})}const f=Bi(A.speciesId,H.formIndex);this.setTypeIcons(f.type1,f.type2),this.pokemonSprite.clearTint(),this.pokerusSpecies.includes(A)&&Wi(this.scene,JR.Pokerus)}else{this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1),this.pokemonShinyIcon.setVisible(!1),this.pokemonUncaughtText.setVisible(!0),this.pokemonAbilityLabelText.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonNatureLabelText.setVisible(!1),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyContainer.setVisible(!1),this.pokemonFormText.setVisible(!1);const r=this.scene.gameData.getSpeciesDefaultDexAttr(A,!0,!0),S=this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A),o=this.scene.gameData.getSpeciesDefaultNature(A),l=this.scene.gameData.getSpeciesDexAttrProps(A,r);this.setSpeciesDetails(A,{shiny:l.shiny,formIndex:l.formIndex,female:l.female,variant:l.variant,abilityIndex:S,natureIndex:o,forSeen:!0}),this.pokemonSprite.setTint(8421504)}}else this.pokemonNumberText.setText(Ln(0,4)),this.pokemonNameText.setText(A?"???":""),this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1),this.pokemonShinyIcon.setVisible(!1),this.pokemonUncaughtText.setVisible(!!A),this.pokemonAbilityLabelText.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonNatureLabelText.setVisible(!1),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyContainer.setVisible(!1),this.pokemonFormText.setVisible(!1),this.setSpeciesDetails(A,{shiny:!1,formIndex:0,female:!1,variant:0,abilityIndex:0,natureIndex:0}),this.pokemonSprite.clearTint()}setSpeciesDetails(A,s={}){var P,G,d,H,f,K;let{shiny:R,formIndex:n,female:I,variant:a,abilityIndex:r,natureIndex:S}=s;const o=s.forSeen??!1,l=A?this.scene.gameData.getSpeciesDexAttrProps(A,this.dexAttrCursor):null,C=this.abilityCursor>-1?this.abilityCursor:this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A),M=this.natureCursor>-1?this.natureCursor:this.scene.gameData.getSpeciesDefaultNature(A);this.dexAttrCursor=0n,this.abilityCursor=-1,this.natureCursor=-1;const u=(A==null?void 0:A.genderDiffs)&&!Ve(I)||!Ve(n)||!Ve(R)||!Ve(a);if(this.activeTooltip==="CANDY")if(this.lastSpecies&&this.pokemonCandyContainer.visible){const{currentFriendship:W,friendshipCap:V}=this.getFriendship(this.lastSpecies.speciesId);this.scene.ui.editTooltip("",`${W}/${V}`)}else this.scene.ui.hideTooltip();if((P=A==null?void 0:A.forms)!=null&&P.find(W=>W.formKey==="female")&&(I!==void 0?n=I?1:0:n!==void 0&&(I=n===1)),A){this.dexAttrCursor|=(R!==void 0?!R:!(R=l==null?void 0:l.shiny))?Ze.NON_SHINY:Ze.SHINY,this.dexAttrCursor|=(I!==void 0?!I:!(I=l==null?void 0:l.female))?Ze.MALE:Ze.FEMALE,this.dexAttrCursor|=(a!==void 0?!a:!(a=l==null?void 0:l.variant))?Ze.DEFAULT_VARIANT:a===1?Ze.VARIANT_2:Ze.VARIANT_3,this.dexAttrCursor|=this.scene.gameData.getFormAttr(n!==void 0?n:n=l.formIndex),this.abilityCursor=r!==void 0?r:r=C,this.natureCursor=S!==void 0?S:S=M;const[W,V]=this.isInParty(A);W&&this.updatePartyIcon(A,V)}if(this.pokemonSprite.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonPassiveText.setVisible(!1),this.pokemonPassiveDisabledIcon.setVisible(!1),this.pokemonPassiveLockedIcon.setVisible(!1),this.assetLoadCancelled&&(this.assetLoadCancelled.value=!0,this.assetLoadCancelled=null),this.starterMoveset=null,this.speciesStarterMoves=[],A){const W=this.scene.gameData.dexData[A.speciesId],V=this.scene.gameData.starterData[A.speciesId].abilityAttr,k=((G=this.scene.gameData.dexData[A.speciesId])==null?void 0:G.caughtAttr)||BigInt(0);if(!W.caughtAttr){const Q=this.scene.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId)),j=this.scene.gameData.getStarterSpeciesDefaultAbilityIndex(A),J=this.scene.gameData.getSpeciesDefaultNature(A);(R===void 0||R!==Q.shiny)&&(R=Q.shiny),(n===void 0||n!==Q.formIndex)&&(n=Q.formIndex),(I===void 0||I!==Q.female)&&(I=Q.female),(a===void 0||a!==Q.variant)&&(a=Q.variant),(r===void 0||r!==j)&&(r=j),(S===void 0||S!==J)&&(S=J)}if(this.shinyOverlay.setVisible(R??!1),this.pokemonNumberText.setColor(this.getTextColor(R?X.SUMMARY_GOLD:X.SUMMARY,!1)),this.pokemonNumberText.setShadowColor(this.getTextColor(R?X.SUMMARY_GOLD:X.SUMMARY,!0)),o?(d=this.speciesStarterDexEntry)!=null&&d.seenAttr:(H=this.speciesStarterDexEntry)!=null&&H.caughtAttr){const Q=this.starterSpecies.indexOf(A);Q>-1&&(this.starterAttr[Q]=this.dexAttrCursor,this.starterAbilityIndexes[Q]=this.abilityCursor,this.starterNatures[Q]=this.natureCursor);const j=new Lt(!1);this.assetLoadCancelled=j,u?A.loadAssets(this.scene,I,n,R,a,!0).then(()=>{j.value||(this.assetLoadCancelled=null,this.speciesLoaded.set(A.speciesId,!0),this.pokemonSprite.play(A.getSpriteKey(I,n,R,a)),this.pokemonSprite.setPipelineData("shiny",R),this.pokemonSprite.setPipelineData("variant",a),this.pokemonSprite.setPipelineData("spriteKey",A.getSpriteKey(I,n,R,a)),this.pokemonSprite.setVisible(!this.statsMode))}):this.pokemonSprite.setVisible(!this.statsMode);const J=new Lt(!0);Fs(this.scene.gameMode,Us.STARTER_CHOICE,A,J,this.scene.gameData.getSpeciesDexAttrProps(A,this.dexAttrCursor),!!this.starterSpecies.length);const ne=this.filteredStarterContainers.find(te=>te.species.speciesId===A.speciesId);ne&&(ne.icon.setTexture(A.getIconAtlasKey(n,R,a),A.getIconId(I,n,R,a)),ne.checkIconId(I,n,R,a));const x=!!(k&Ze.NON_SHINY),q=!!(k&Ze.SHINY),F=q&&!!(k&Ze.DEFAULT_VARIANT),Te=q&&!!(k&Ze.VARIANT_2),He=q&&!!(k&Ze.VARIANT_3);this.canCycleShiny=x&&q,this.canCycleVariant=!!R&&[F,Te,He].filter(te=>te).length>1;const ue=!!(k&Ze.MALE),me=!!(k&Ze.FEMALE);this.canCycleGender=ue&&me;const Me=V&Cs.ABILITY_1;let Ie=V&Cs.ABILITY_2;const z=V&Cs.ABILITY_HIDDEN;Me&&Ie&&A.ability1===A.ability2&&(Ie=0),this.canCycleAbility=[Me,Ie,z].filter(te=>te).length>1,this.canCycleForm=A.forms.filter(te=>{var Le;return te.isStarterSelectable||!((Le=VO[A.speciesId])!=null&&Le.find(Ue=>Ue.formKey))}).map((te,Le)=>W.caughtAttr&this.scene.gameData.getFormAttr(Le)).filter(te=>te).length>1,this.canCycleNature=this.scene.gameData.getNaturesForAttr(W.natureAttr).length>1}if(W.caughtAttr&&A.malePercent!==null){const Q=I?je.FEMALE:je.MALE;this.pokemonGenderText.setText(OL(Q)),this.pokemonGenderText.setColor(vn(Q)),this.pokemonGenderText.setShadowColor(vn(Q,!0))}else this.pokemonGenderText.setText("");if(W.caughtAttr){const Q=LE[this.lastSpecies.getAbility(r)];this.pokemonAbilityText.setText(Q.name);const j=r===(this.lastSpecies.ability2?2:1);this.pokemonAbilityText.setColor(this.getTextColor(j?X.SUMMARY_GOLD:X.SUMMARY_ALT)),this.pokemonAbilityText.setShadowColor(this.getTextColor(j?X.SUMMARY_GOLD:X.SUMMARY_ALT,!0));const J=this.scene.gameData.starterData[A.speciesId].passiveAttr,ne=LE[u0[this.lastSpecies.speciesId]];if(this.pokemonAbilityText.visible&&(this.activeTooltip==="ABILITY"&&this.scene.ui.editTooltip(`${Q.name}`,`${Q.description}`),this.pokemonAbilityText.on("pointerover",()=>{this.scene.ui.showTooltip(`${Q.name}`,`${Q.description}`,!0),this.activeTooltip="ABILITY"}),this.pokemonAbilityText.on("pointerout",()=>{this.scene.ui.hideTooltip(),this.activeTooltip=void 0})),ne){const Me=!!(J&YR.UNLOCKED),Ie=!!(J&YR.ENABLED),z=Me&&Ie?X.SUMMARY_ALT:X.SUMMARY_GRAY,te=Me&&Ie?1:.5;this.pokemonPassiveLabelText.setVisible(!0),this.pokemonPassiveLabelText.setColor(this.getTextColor(X.SUMMARY_ALT)),this.pokemonPassiveLabelText.setShadowColor(this.getTextColor(X.SUMMARY_ALT,!0)),this.pokemonPassiveText.setVisible(!0),this.pokemonPassiveText.setText(ne.name),this.pokemonPassiveText.setColor(this.getTextColor(z)),this.pokemonPassiveText.setAlpha(te),this.pokemonPassiveText.setShadowColor(this.getTextColor(z,!0)),this.activeTooltip==="PASSIVE"&&this.scene.ui.editTooltip(`${ne.name}`,`${ne.description}`),this.pokemonPassiveText.visible&&(this.pokemonPassiveText.on("pointerover",()=>{this.scene.ui.showTooltip(`${ne.name}`,`${ne.description}`,!0),this.activeTooltip="PASSIVE"}),this.pokemonPassiveText.on("pointerout",()=>{this.scene.ui.hideTooltip(),this.activeTooltip=void 0}));const Le={x:this.pokemonPassiveText.x+this.pokemonPassiveText.displayWidth+1,y:this.pokemonPassiveText.y+this.pokemonPassiveText.displayHeight/2};this.pokemonPassiveDisabledIcon.setVisible(Me&&!Ie),this.pokemonPassiveDisabledIcon.setPosition(Le.x,Le.y),this.pokemonPassiveLockedIcon.setVisible(!Me),this.pokemonPassiveLockedIcon.setPosition(Le.x,Le.y)}else this.activeTooltip==="PASSIVE"&&this.scene.ui.hideTooltip();this.pokemonNatureText.setText(xO(S,!0,!0,!1,this.scene.uiTheme));let x;if(En.hasOwnProperty(A.speciesId)&&n&&En[A.speciesId].hasOwnProperty(n)?x=En[A.speciesId][n]:x=nc[A.speciesId],this.speciesStarterMoves.push(...x.filter(Me=>Me[0]>0&&Me[0]<=5).map(Me=>Me[1])),BE.hasOwnProperty(A.speciesId))for(let Me=0;Me<4;Me++)this.scene.gameData.starterData[A.speciesId].eggMoves&1<<Me&&this.speciesStarterMoves.push(BE[A.speciesId][Me]);const q=this.scene.gameData.starterData[A.speciesId].moveset,F=q?Array.isArray(q)?q:q[n]:null,Te=this.speciesStarterMoves.concat(BE.hasOwnProperty(A.speciesId)?BE[A.speciesId].filter((Me,Ie)=>this.scene.gameData.starterData[A.speciesId].eggMoves&1<<Ie):[]);this.starterMoveset=(F||this.speciesStarterMoves.slice(0,4)).filter(Me=>Te.find(Ie=>Ie===Me)),this.starterMoveset.length<4&&this.starterMoveset.length<Te.length&&this.starterMoveset.push(...Te.filter(Me=>{var Ie;return((Ie=this.starterMoveset)==null?void 0:Ie.indexOf(Me))===-1}).slice(0,4-this.starterMoveset.length)),this.starterMoveset=this.starterMoveset.filter((Me,Ie)=>{var z;return((z=this.starterMoveset)==null?void 0:z.indexOf(Me))===Ie});const He=Bi(A.speciesId,n),ue=ML((f=A==null?void 0:A.forms[n])==null?void 0:f.formKey,"-",!1,!1),me=ML(e[A.speciesId],"_",!0,!1);A.speciesId===e.ARCEUS?this.pokemonFormText.setText(D.t(`pokemonInfo:Type.${ue==null?void 0:ue.toUpperCase()}`)):this.pokemonFormText.setText(ue?D.t(`pokemonForm:${me}${ue}`):""),this.setTypeIcons(He.type1,He.type2)}else this.pokemonAbilityText.setText(""),this.pokemonPassiveText.setText(""),this.pokemonNatureText.setText(""),this.setTypeIcons(null,null)}else this.shinyOverlay.setVisible(!1),this.pokemonNumberText.setColor(this.getTextColor(X.SUMMARY)),this.pokemonNumberText.setShadowColor(this.getTextColor(X.SUMMARY,!0)),this.pokemonGenderText.setText(""),this.pokemonAbilityText.setText(""),this.pokemonPassiveText.setText(""),this.pokemonNatureText.setText(""),this.setTypeIcons(null,null);this.starterMoveset||(this.starterMoveset=this.speciesStarterMoves.slice(0,4));for(let W=0;W<4;W++){const V=W<this.starterMoveset.length?ye[this.starterMoveset[W]]:null;this.pokemonMoveBgs[W].setFrame(i[V?V.type:i.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[W].setText(V?V.name:"-"),this.pokemonMoveContainers[W].setVisible(!!V)}const h=A&&BE.hasOwnProperty(A.speciesId);for(let W=0;W<4;W++){const V=h?ye[BE[A.speciesId][W]]:null,k=V&&this.scene.gameData.starterData[A.speciesId].eggMoves&1<<W;this.pokemonEggMoveBgs[W].setFrame(i[V?V.type:i.UNKNOWN].toString().toLowerCase()),this.pokemonEggMoveLabels[W].setText(V&&k?V.name:"???")}this.pokemonEggMovesContainer.setVisible(!!((K=this.speciesStarterDexEntry)!=null&&K.caughtAttr)&&h),this.pokemonAdditionalMoveCountLabel.setText(`(+${Math.max(this.speciesStarterMoves.length-4,0)})`),this.pokemonAdditionalMoveCountLabel.setVisible(this.speciesStarterMoves.length>4),this.tryUpdateValue(),this.updateInstructions()}setTypeIcons(A,s){A!==null?(this.type1Icon.setVisible(!0),this.type1Icon.setFrame(i[A].toLowerCase())):this.type1Icon.setVisible(!1),s!==null?(this.type2Icon.setVisible(!0),this.type2Icon.setFrame(i[s].toLowerCase())):this.type2Icon.setVisible(!1)}popStarter(A){this.starterSpecies.splice(A,1),this.starterAttr.splice(A,1),this.starterAbilityIndexes.splice(A,1),this.starterNatures.splice(A,1),this.starterMovesets.splice(A,1);for(let s=0;s<this.starterSpecies.length;s++){const R=this.starterSpecies[s],n=this.getCurrentDexProps(R.speciesId),I=this.scene.gameData.getSpeciesDexAttrProps(R,n);this.starterIcons[s].setTexture(R.getIconAtlasKey(I.formIndex,I.shiny,I.variant)),this.starterIcons[s].setFrame(R.getIconId(I.female,I.formIndex,I.shiny,I.variant)),this.checkIconId(this.starterIcons[s],R,I.female,I.formIndex,I.shiny,I.variant),s>=A&&(this.starterCursorObjs[s].setPosition(this.starterCursorObjs[s+1].x,this.starterCursorObjs[s+1].y),this.starterCursorObjs[s].setVisible(this.starterCursorObjs[s+1].visible))}this.starterCursorObjs[this.starterSpecies.length].setVisible(!1),this.starterIcons[this.starterSpecies.length].setTexture("pokemon_icons_0"),this.starterIcons[this.starterSpecies.length].setFrame("unknown"),this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex===this.starterSpecies.length&&(this.starterSpecies.length>0?this.starterIconsCursorIndex--:(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0))),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):this.startCursorObj.visible&&this.starterSpecies.length===0&&(this.startCursorObj.setVisible(!1),this.filteredStarterContainers.length>0?(this.cursorObj.setVisible(!0),this.setCursor(0+this.scrollCursor*9)):(this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0))),this.tryUpdateValue()}updateStarterValueLabel(A){const s=A.species.speciesId,R=KA[s],n=this.scene.gameData.getSpeciesStarterValue(s);A.cost=n;let I=n.toString();I.startsWith("0.")&&(I=I.slice(1)),A.label.setText(I);let a;switch(R-n){case 0:a=X.WINDOW;break;case 1:case .5:a=X.SUMMARY_BLUE;break;default:a=X.SUMMARY_GOLD;break}R-n>0&&(A.label.setColor(this.getTextColor(a)),A.label.setShadowColor(this.getTextColor(a,!0)))}tryUpdateValue(A,s){const n=this.starterSpecies.map(l=>l.generation).reduce((l,C,M)=>l+=this.scene.gameData.getSpeciesStarterValue(this.starterSpecies[M].speciesId),0)+(A||0),I=this.getValueLimit(),a=n>I;let r=n.toString();if(r.startsWith("0.")&&(r=r.slice(1)),this.valueLimitLabel.setText(`${r}/${I}`),this.valueLimitLabel.setColor(this.getTextColor(a?X.SUMMARY_PINK:X.TOOLTIP_CONTENT)),this.valueLimitLabel.setShadowColor(this.getTextColor(a?X.SUMMARY_PINK:X.TOOLTIP_CONTENT,!0)),a)return this.scene.time.delayedCall(Et(500),()=>this.tryUpdateValue()),!1;let S=this.isPartyValid();if(s){const l=new Lt(!0),C=this.filteredStarterContainers[this.cursor].species;Fs(this.scene.gameMode,Us.STARTER_CHOICE,C,l,this.scene.gameData.getSpeciesDexAttrProps(C,this.getCurrentDexProps(C.speciesId)),!1),S=S||l.value}const o=I-n;for(let l=0;l<this.allSpecies.length;l++){const C=this.scene.gameData.getSpeciesStarterValue(this.allSpecies[l].speciesId),M=this.starterContainers[l].icon,u=new Lt(!0);Fs(this.scene.gameMode,Us.STARTER_CHOICE,this.allSpecies[l],u,this.scene.gameData.getSpeciesDexAttrProps(this.allSpecies[l],this.getCurrentDexProps(this.allSpecies[l].speciesId)),S);const h=o>=C&&u.value,P=this.isInParty(this.allSpecies[l])[0];h||P&&o>=C?M.setAlpha(1):M.setAlpha(.375)}return!0}tryExit(){this.blockInput=!0;const A=this.getUi(),s=L(()=>{A.setMode(Oe.STARTER_SELECT),this.clearText(),this.blockInput=!1},"cancel");return A.showText(D.t("starterSelectUiHandler:confirmExit"),null,()=>{A.setModeWithoutClear(Oe.CONFIRM,()=>{var R;A.setMode(Oe.STARTER_SELECT),this.scene.clearPhaseQueue(),this.scene.gameMode.isChallenge?(this.scene.pushPhase(new LC(this.scene)),this.scene.pushPhase(new cr(this.scene,!1))):this.scene.pushPhase(new $I(this.scene)),this.clearText(),(R=this.scene.getCurrentPhase())==null||R.end()},s,null,null,19)}),!0}tryStart(A=!1){if(!this.starterSpecies.length)return!1;const s=this.getUi(),R=L(()=>{s.setMode(Oe.STARTER_SELECT),A||this.popStarter(this.starterSpecies.length-1),this.clearText()},"cancel");return this.isPartyValid()?s.showText(D.t("starterSelectUiHandler:confirmStartTeam"),null,()=>{s.setModeWithoutClear(Oe.CONFIRM,()=>{L(()=>{this.scene.money=this.scene.gameMode.getStartingMoney(),s.setMode(Oe.STARTER_SELECT);const a=this,r=this.starterSelectCallback;this.starterSelectCallback=null,r&&r(new Array(this.starterSpecies.length).fill(0).map(function(S,o){var C;const l=a.starterSpecies[o];return{species:l,dexAttr:a.starterAttr[o],abilityIndex:a.starterAbilityIndexes[o],passive:!(a.scene.gameData.starterData[l.speciesId].passiveAttr^(YR.ENABLED|YR.UNLOCKED)),nature:a.starterNatures[o],moveset:a.starterMovesets[o],pokerus:a.pokerusSpecies.includes(l),nickname:(C=a.starterPreferences[l.speciesId])==null?void 0:C.nickname}}))},"startRun")()},R,null,null,19)}):(this.tutorialActive=!0,this.showText(D.t("starterSelectUiHandler:invalidParty"),void 0,()=>this.showText("",0,()=>this.tutorialActive=!1),void 0,!0)),!0}isPartyValid(){let A=!1;for(let s=0;s<this.starterSpecies.length;s++){const R=new Lt(!0),n=this.starterSpecies[s];Fs(this.scene.gameMode,Us.STARTER_CHOICE,n,R,this.scene.gameData.getSpeciesDexAttrProps(n,this.getCurrentDexProps(n.speciesId)),!1),A=A||R.value}return A}getCurrentDexProps(A){var n,I,a,r,S,o,l;let s=0n;const R=this.scene.gameData.dexData[A].caughtAttr;return(n=this.starterPreferences[A])!=null&&n.female||(R&Ze.FEMALE)>0n&&(R&Ze.MALE)===0n?s+=Ze.FEMALE:s+=Ze.MALE,(I=this.starterPreferences[A])!=null&&I.shiny||(R&Ze.SHINY)>0n&&((a=this.starterPreferences[A])==null?void 0:a.shiny)!==!1?(s+=Ze.SHINY,((r=this.starterPreferences[A])==null?void 0:r.variant)!==void 0?s+=BigInt(Math.pow(2,(S=this.starterPreferences[A])==null?void 0:S.variant))*Ze.DEFAULT_VARIANT:(R&Ze.VARIANT_3)>0?s+=Ze.VARIANT_3:(R&Ze.VARIANT_2)>0?s+=Ze.VARIANT_2:s+=Ze.DEFAULT_VARIANT):(s+=Ze.NON_SHINY,s+=Ze.DEFAULT_VARIANT),(o=this.starterPreferences[A])!=null&&o.form?s+=BigInt(Math.pow(2,(l=this.starterPreferences[A])==null?void 0:l.form))*Ze.DEFAULT_FORM:s+=this.scene.gameData.getFormAttr(this.scene.gameData.getFormIndex(R)),s}toggleStatsMode(A){var s;A===void 0&&(A=!this.statsMode),A?(this.showStats(),this.statsMode=!0,this.pokemonSprite.setVisible(!1)):(this.statsMode=!1,this.statsContainer.setVisible(!1),this.pokemonSprite.setVisible(!!((s=this.speciesStarterDexEntry)!=null&&s.caughtAttr)),this.statsContainer.updateIvs(null))}showStats(){this.speciesStarterDexEntry&&(this.statsContainer.setVisible(!0),this.statsContainer.updateIvs(this.speciesStarterDexEntry.ivs))}clearText(){this.starterSelectMessageBoxContainer.setVisible(!1),super.clearText()}hideInstructions(){this.shinyIconElement.setVisible(!1),this.shinyLabel.setVisible(!1),this.formIconElement.setVisible(!1),this.formLabel.setVisible(!1),this.genderIconElement.setVisible(!1),this.genderLabel.setVisible(!1),this.abilityIconElement.setVisible(!1),this.abilityLabel.setVisible(!1),this.natureIconElement.setVisible(!1),this.natureLabel.setVisible(!1),this.variantIconElement.setVisible(!1),this.variantLabel.setVisible(!1),this.goFilterIconElement.setVisible(!1),this.goFilterLabel.setVisible(!1)}clear(){for(super.clear(),MC.save(this.starterPreferences),this.cursor=-1,this.hideInstructions(),this.activeTooltip=void 0,this.scene.ui.hideTooltip(),this.starterSelectContainer.setVisible(!1),this.blockInput=!1;this.starterSpecies.length;)this.popStarter(this.starterSpecies.length-1);this.statsMode&&this.toggleStatsMode(!1)}checkIconId(A,s,R,n,I,a){A.frame.name!==s.getIconId(R,n,I,a)&&(console.log(`${s.name}'s icon ${A.frame.name} does not match getIconId with female: ${R}, formIndex: ${n}, shiny: ${I}, variant: ${a}`),A.setTexture(s.getIconAtlasKey(n,!1,a)),A.setFrame(s.getIconId(R,n,!1,a)))}};L(yK,"StarterSelectUiHandler");let sS=yK;const wK=class wK extends Ws{constructor(A){super(A,Oe.TARGET_SELECT),this.isMultipleTargets=!1,this.targetBattleInfoMoveTween=[],this.cursor=-1}setup(){}show(A){if(A.length<3)return!1;super.show(A),this.fieldIndex=A[0],this.move=A[1],this.targetSelectCallback=A[2];const s=this.scene.getPlayerField()[this.fieldIndex],R=Cn(s,this.move);return this.targets=R.targets,this.isMultipleTargets=R.multiple??!1,this.targets.length?(this.enemyModifiers=this.scene.getModifierBar(!0),this.fieldIndex===Bt.PLAYER?this.resetCursor(this.cursor0,s):this.fieldIndex===Bt.PLAYER_2&&this.resetCursor(this.cursor1,s),!0):!1}resetCursor(A,s){Ve(A)||([Bt.PLAYER,Bt.PLAYER_2].includes(A)||s.battleSummonData.waveTurnCount===1)&&(A=-1),this.setCursor(this.targets.includes(A)?A:this.targets[0])}processInput(A){const s=this.getUi();let R=!1;if(A===b.ACTION||A===b.CANCEL){const n=this.isMultipleTargets?this.targets:[this.cursor];this.targetSelectCallback(A===b.ACTION?n:[]),R=!0,this.fieldIndex===Bt.PLAYER?(Ve(this.cursor0)||this.cursor0!==this.cursor)&&(this.cursor0=this.cursor):this.fieldIndex===Bt.PLAYER_2&&(Ve(this.cursor1)||this.cursor1!==this.cursor)&&(this.cursor1=this.cursor)}else if(this.isMultipleTargets)R=!1;else switch(A){case b.UP:this.cursor<Bt.ENEMY&&this.targets.findIndex(n=>n>=Bt.ENEMY)>-1&&(R=this.setCursor(this.targets.find(n=>n>=Bt.ENEMY)));break;case b.DOWN:this.cursor>=Bt.ENEMY&&this.targets.findIndex(n=>n<Bt.ENEMY)>-1&&(R=this.setCursor(this.targets.find(n=>n<Bt.ENEMY)));break;case b.LEFT:this.cursor%2&&this.targets.findIndex(n=>n===this.cursor-1)>-1&&(R=this.setCursor(this.cursor-1));break;case b.RIGHT:!(this.cursor%2)&&this.targets.findIndex(n=>n===this.cursor+1)>-1&&(R=this.setCursor(this.cursor+1));break}return R&&s.playSelect(),R}setCursor(A){const s=this.scene.getField()[A],R=this.targets.map(a=>this.scene.getField()[a]);this.targetsHighlighted=this.isMultipleTargets?R:[s];const n=super.setCursor(A);if(this.targetFlashTween){this.targetFlashTween.stop();for(const a of R)a.setAlpha(a.getTag(KE)?.5:1),this.highlightItems(a.id,1)}if(this.targetFlashTween=this.scene.tweens.add({targets:this.targetsHighlighted,key:{start:1,to:.25},loop:-1,loopDelay:150,duration:Et(450),ease:"Sine.easeInOut",yoyo:!0,onUpdate:L(a=>{for(const r of this.targetsHighlighted)r.setAlpha(a.getValue()),this.highlightItems(r.id,a.getValue())},"onUpdate")}),this.targetBattleInfoMoveTween.length>=1){this.targetBattleInfoMoveTween.filter(a=>a!==void 0).forEach(a=>a.stop());for(const a of R)a.getBattleInfo().resetY()}return this.targetsHighlighted.map(a=>a.getBattleInfo()).map(a=>{this.targetBattleInfoMoveTween.push(this.scene.tweens.add({targets:[a],y:{start:a.getBaseY(),to:a.getBaseY()+1},loop:-1,duration:Et(250),ease:"Linear",yoyo:!0}))}),n}eraseCursor(){this.targetFlashTween&&(this.targetFlashTween.stop(),this.targetFlashTween=null);for(const A of this.targetsHighlighted)A.setAlpha(A.getTag(KE)?.5:1),this.highlightItems(A.id,1);this.targetBattleInfoMoveTween.length>=1&&(this.targetBattleInfoMoveTween.filter(A=>A!==void 0).forEach(A=>A.stop()),this.targetBattleInfoMoveTween=[]);for(const A of this.targetsHighlighted)A.getBattleInfo().resetY()}highlightItems(A,s){const R=this.enemyModifiers.getAll("name",A.toString());for(const n of R)n.setAlpha(s)}clear(){super.clear(),this.eraseCursor()}};L(wK,"TargetSelectUiHandler");let _0=wK;const P0="LEFT",b6="RIGHT",oI=class oI{constructor(){this.selectedMode=Oe.SETTINGS,this.navigationMenus=new Array,this.modes=[Oe.SETTINGS,Oe.SETTINGS_DISPLAY,Oe.SETTINGS_AUDIO,Oe.SETTINGS_GAMEPAD,Oe.SETTINGS_KEYBOARD],this.labels=[D.t("settings:general"),D.t("settings:display"),D.t("settings:audio"),D.t("settings:gamepad"),D.t("settings:keyboard")]}reset(){this.selectedMode=Oe.SETTINGS,this.updateNavigationMenus()}static getInstance(){return oI.instance||(oI.instance=new oI),oI.instance}navigate(A,s){const R=this.modes.indexOf(this.selectedMode),n=this.modes.length-1,I=s===P0?-1:1;R===0&&s===P0?this.selectedMode=this.modes[n]:R===n&&s===b6?this.selectedMode=this.modes[0]:this.selectedMode=this.modes[R+I],A.ui.setMode(this.selectedMode),this.updateNavigationMenus()}updateNavigationMenus(){for(const A of this.navigationMenus)A.update()}updateIcons(){for(const A of this.navigationMenus)A.updateIcons()}};L(oI,"NavigationManager");let rO=oI;const vK=class vK extends Phaser.GameObjects.Container{constructor(A,s,R){super(A,s,R),this.headerTitles=new Array,this.scene=A,this.setup()}setup(){const A=rO.getInstance(),s=_t(this.scene,0,0,this.scene.game.canvas.width/6-2,24);s.setOrigin(0,0),this.add(s),this.width=s.width,this.height=s.height,this.navigationIcons={};const R=this.scene.add.sprite(8,4,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(s,8,4),this.navigationIcons.BUTTON_CYCLE_FORM=R;const n=this.scene.add.sprite(0,0,"keyboard");n.setOrigin(0,-.1),n.setPositionRelative(s,s.width-20,4),this.navigationIcons.BUTTON_CYCLE_SHINY=n;let I=R,a=R.width*6;for(const r of A.labels){const S=le(this.scene,0,0,r,X.SETTINGS_LABEL);S.setOrigin(0,0),S.setPositionRelative(I,6+a/6,0),this.add(S),this.headerTitles.push(S),I=S,a=S.width}this.add(R),this.add(n),A.navigationMenus.push(this),A.updateNavigationMenus()}update(){const A=rO.getInstance(),s=A.modes.indexOf(A.selectedMode);for(const[R,n]of this.headerTitles.entries())X8(n,this.scene,R===s?X.SETTINGS_SELECTED:X.SETTINGS_LABEL)}updateIcons(){var s,R;const A={BUTTON_HOME:"HOME.png",BUTTON_DELETE:"DEL.png"};for(const n of Object.keys(this.navigationIcons)){if(Object.keys(A).includes(n)){this.navigationIcons[n].setTexture("keyboard"),this.navigationIcons[n].setFrame(A[n]),this.navigationIcons[n].alpha=1;continue}const I=(s=this.scene.inputController)==null?void 0:s.getIconForLatestInputRecorded(n);if(I){const a=(R=this.scene.inputController)==null?void 0:R.getLastSourceType();this.navigationIcons[n].setTexture(a),this.navigationIcons[n].setFrame(I),this.navigationIcons[n].alpha=1}else this.navigationIcons[n].alpha=0}}navigate(A){const s=rO.getInstance();switch(A){case b.CYCLE_FORM:return s.navigate(this.scene,P0),!0;case b.CYCLE_SHINY:return s.navigate(this.scene,b6),!0}return!1}};L(vK,"NavigationMenu");let _C=vK;const VK=class VK extends ps{constructor(A,s,R=null){super(A,R),this.settings=wA.filter(n=>{var I;return n.type===s&&!((I=n==null?void 0:n.isHidden)!=null&&I.call(n))}),this.reloadRequired=!1,this.rowsToDisplay=8}setup(){const A=this.getUi();this.settingsContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.settingsContainer.setName(`settings-${this.title}`),this.settingsContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6-20),Phaser.Geom.Rectangle.Contains),this.navigationIcons={},this.navigationContainer=new _C(this.scene,0,0),this.optionsBg=_t(this.scene,0,this.navigationContainer.height,this.scene.game.canvas.width/6-2,this.scene.game.canvas.height/6-16-this.navigationContainer.height-2),this.optionsBg.setName("window-options-bg"),this.optionsBg.setOrigin(0,0);const s=_t(this.scene,0,this.scene.game.canvas.height/6-this.navigationContainer.height,this.scene.game.canvas.width/6-2,22);s.setOrigin(0,0);const R=this.scene.add.sprite(0,0,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(s,this.navigationContainer.width-32,4),this.navigationIcons.BUTTON_ACTION=R;const n=le(this.scene,0,0,D.t("settings:action"),X.SETTINGS_LABEL);n.setOrigin(0,.15),n.setPositionRelative(R,-n.width/6-2,0);const I=this.scene.add.sprite(0,0,"keyboard");I.setOrigin(0,-.1),I.setPositionRelative(s,this.navigationContainer.width-100,4),this.navigationIcons.BUTTON_CANCEL=I;const a=le(this.scene,0,0,D.t("settings:back"),X.SETTINGS_LABEL);a.setOrigin(0,.15),a.setPositionRelative(I,-a.width/6-2,0),this.optionsContainer=this.scene.add.container(0,0),this.settingLabels=[],this.optionValueLabels=[],this.reloadSettings=this.settings.filter(o=>o==null?void 0:o.requireReload),this.settings.forEach((o,l)=>{let C=o.label;o!=null&&o.requireReload&&(C+=` (${D.t("settings:requireReload")})`),this.settingLabels[l]=le(this.scene,8,28+l*16,C,X.SETTINGS_LABEL),this.settingLabels[l].setOrigin(0,0),this.optionsContainer.add(this.settingLabels[l]),this.optionValueLabels.push(o.options.map((d,H)=>{const f=le(this.scene,0,0,d.label,o.default===H?X.SETTINGS_SELECTED:X.SETTINGS_VALUE);return f.setOrigin(0,0),this.optionsContainer.add(f),f}));const M=this.optionValueLabels[l].map(d=>d.width).reduce((d,H)=>d+=H,0),u=Math.max(78,this.settingLabels[l].displayWidth+8),h=297-u-M/6,P=Math.floor(h/(this.optionValueLabels[l].length-1));let G=0;for(const d of this.optionValueLabels[l])d.setPositionRelative(this.settingLabels[l],u+G,0),G+=d.width/6+P}),this.optionCursors=this.settings.map(o=>o.default),this.scrollBar=new Vi(this.scene,this.optionsBg.width-9,this.optionsBg.y+5,4,this.optionsBg.height-11,this.rowsToDisplay),this.scrollBar.setTotalRows(this.settings.length),this.messageBoxContainer=this.scene.add.container(0,this.scene.scaledCanvas.height),this.messageBoxContainer.setName("settings-message-box"),this.messageBoxContainer.setVisible(!1);const r=_t(this.scene,0,-1,this.scene.scaledCanvas.width-2,48);r.setOrigin(0,1),this.messageBoxContainer.add(r);const S=le(this.scene,8,-40,"",X.WINDOW,{maxLines:2});S.setWordWrapWidth(this.scene.game.canvas.width-60),S.setName("settings-message"),S.setOrigin(0,0),this.messageBoxContainer.add(S),this.message=S,this.settingsContainer.add(this.optionsBg),this.settingsContainer.add(this.scrollBar),this.settingsContainer.add(this.navigationContainer),this.settingsContainer.add(s),this.settingsContainer.add(this.optionsContainer),this.settingsContainer.add(R),this.settingsContainer.add(I),this.settingsContainer.add(n),this.settingsContainer.add(a),this.settingsContainer.add(this.messageBoxContainer),A.add(this.settingsContainer),this.setCursor(0),this.setScrollCursor(0),this.settingsContainer.setVisible(!1)}updateBindings(){var A,s;for(const R of Object.keys(this.navigationIcons)){if(R==="BUTTON_HOME"){this.navigationIcons[R].setTexture("keyboard"),this.navigationIcons[R].setFrame("HOME.png"),this.navigationIcons[R].alpha=1;continue}const n=(A=this.scene.inputController)==null?void 0:A.getIconForLatestInputRecorded(R);if(n){const I=(s=this.scene.inputController)==null?void 0:s.getLastSourceType();this.navigationIcons[R].setTexture(I),this.navigationIcons[R].setFrame(n),this.navigationIcons[R].alpha=1}else this.navigationIcons[R].alpha=0}rO.getInstance().updateIcons()}show(A){super.show(A),this.updateBindings();const s=localStorage.hasOwnProperty(this.localStorageKey)?JSON.parse(localStorage.getItem(this.localStorageKey)):{};return this.settings.forEach((R,n)=>this.setOptionCursor(n,s.hasOwnProperty(R.key)?s[R.key]:this.settings[n].default)),this.settingsContainer.setVisible(!0),this.setCursor(0),this.setScrollCursor(0),this.getUi().moveTo(this.settingsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}processInput(A){const s=this.getUi();let R=!1;if(A===b.CANCEL)R=!0,rO.getInstance().reset(),this.scene.ui.revertMode();else{const n=this.cursor+this.scrollCursor;switch(A){case b.UP:if(n)this.cursor?R=this.setCursor(this.cursor-1):R=this.setScrollCursor(this.scrollCursor-1);else{const a=this.setCursor(this.rowsToDisplay-1),r=this.setScrollCursor(this.optionValueLabels.length-this.rowsToDisplay);R=a&&r}break;case b.DOWN:if(n<this.optionValueLabels.length-1)this.cursor<this.rowsToDisplay-1?R=this.setCursor(this.cursor+1):this.scrollCursor<this.optionValueLabels.length-this.rowsToDisplay&&(R=this.setScrollCursor(this.scrollCursor+1));else{const a=this.setCursor(0),r=this.setScrollCursor(0);R=a&&r}break;case b.LEFT:this.optionCursors[n]&&(R=this.setOptionCursor(n,this.optionCursors[n]-1,!0));break;case b.RIGHT:this.optionCursors[n]<this.optionValueLabels[n].length-1&&(R=this.setOptionCursor(n,this.optionCursors[n]+1,!0));break;case b.CYCLE_FORM:case b.CYCLE_SHINY:R=this.navigationContainer.navigate(A);break;case b.ACTION:const I=this.settings[n];I!=null&&I.activatable&&(R=this.activateSetting(I));break}}return R&&s.playSelect(),R}activateSetting(A){switch(A.key){case It.Move_Touch_Controls:return this.scene.inputController.moveTouchControlsHandler.enableConfigurationMode(this.getUi(),this.scene),!0}return!1}setCursor(A){const s=super.setCursor(A);if(!this.cursorObj){const R=this.scene.game.canvas.width/6-(this.scrollBar.visible?16:10);this.cursorObj=this.scene.add.nineslice(0,0,"summary_moves_cursor",void 0,R,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.optionsContainer.add(this.cursorObj)}return this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setOptionCursor(A,s,R){A===-1&&(A=this.cursor+this.scrollCursor);const n=this.settings[A],I=this.optionCursors[A],a=this.optionValueLabels[A][I];a.setColor(this.getTextColor(X.SETTINGS_VALUE)),a.setShadowColor(this.getTextColor(X.SETTINGS_VALUE,!0)),this.optionCursors[A]=s;const r=this.optionValueLabels[A][s];if(r.setColor(this.getTextColor(X.SETTINGS_SELECTED)),r.setShadowColor(this.getTextColor(X.SETTINGS_SELECTED,!0)),R){const S=L(()=>{this.scene.gameData.saveSetting(n.key,s),n.requireReload&&(this.reloadRequired=!0)},"saveSetting");if(n.options[s].needConfirmation){const o=L(()=>{this.scene.ui.revertMode(),this.showText(""),S()},"confirmUpdateSetting"),l=L(()=>{this.scene.ui.revertMode(),this.showText(""),this.setOptionCursor(A,I,!1)},"cancelUpdateSetting"),C=n.options[s].confirmationMessage??D.t("settings:defaultConfirmMessage");this.scene.ui.showText(C,null,()=>{this.scene.ui.setOverlayMode(Oe.CONFIRM,o,l,null,null,1,750)})}else S()}return!0}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor),this.updateSettingsScroll(),this.setCursor(this.cursor),!0)}updateSettingsScroll(){this.optionsContainer.setY(-16*this.scrollCursor);for(let A=0;A<this.settingLabels.length;A++){const s=A>=this.scrollCursor&&A<this.scrollCursor+this.rowsToDisplay;this.settingLabels[A].setVisible(s);for(const R of this.optionValueLabels[A])R.setVisible(s)}}clear(){super.clear(),this.settingsContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.getUi().bgmBar.toggleBgmBar(this.scene.showBgmBar),this.reloadRequired&&(this.reloadRequired=!1,this.scene.reset(!0,!1,!0))}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}showText(A,s,R,n,I,a){this.messageBoxContainer.setVisible(!!(A!=null&&A.length)),super.showText(A,s,R,n,I,a)}};L(VK,"AbstractSettingsUiHandler");let RS=VK;const xK=class xK extends RS{constructor(A,s=null){super(A,OM.GENERAL,s),this.title="General",this.localStorageKey="settings"}};L(xK,"SettingsUiHandler");let PC=xK;const k6={padID:"Xbox 360 controller (XInput STANDARD GAMEPAD)",padType:"xbox",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[fe.Button_Up]:b.UP,[fe.Button_Down]:b.DOWN,[fe.Button_Left]:b.LEFT,[fe.Button_Right]:b.RIGHT,[fe.Button_Action]:b.ACTION,[fe.Button_Cancel]:b.CANCEL,[fe.Button_Cycle_Nature]:b.CYCLE_NATURE,[fe.Button_Cycle_Variant]:b.V,[fe.Button_Menu]:b.MENU,[fe.Button_Stats]:b.STATS,[fe.Button_Cycle_Form]:b.CYCLE_FORM,[fe.Button_Cycle_Shiny]:b.CYCLE_SHINY,[fe.Button_Cycle_Gender]:b.CYCLE_GENDER,[fe.Button_Cycle_Ability]:b.CYCLE_ABILITY,[fe.Button_Speed_Up]:b.SPEED_UP,[fe.Button_Slow_Down]:b.SLOW_DOWN},default:{LC_N:fe.Button_Up,LC_S:fe.Button_Down,LC_W:fe.Button_Left,LC_E:fe.Button_Right,RC_S:fe.Button_Action,RC_E:fe.Button_Cancel,RC_W:fe.Button_Cycle_Nature,RC_N:fe.Button_Cycle_Variant,START:fe.Button_Menu,SELECT:fe.Button_Stats,LB:fe.Button_Cycle_Form,RB:fe.Button_Cycle_Shiny,LT:fe.Button_Cycle_Gender,RT:fe.Button_Cycle_Ability,LS:fe.Button_Speed_Up,RS:fe.Button_Slow_Down}},Z6={padID:"Dualshock",padType:"dualshock",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15,TOUCH:17},icons:{RC_S:"CROSS.png",RC_E:"CIRCLE.png",RC_W:"SQUARE.png",RC_N:"TRIANGLE.png",START:"START.png",SELECT:"SELECT.png",LB:"L1.png",RB:"R1.png",LT:"L2.png",RT:"R2.png",LS:"L3.png",RS:"R3.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png",TOUCH:"TOUCH.png"},settings:{[fe.Button_Up]:b.UP,[fe.Button_Down]:b.DOWN,[fe.Button_Left]:b.LEFT,[fe.Button_Right]:b.RIGHT,[fe.Button_Action]:b.ACTION,[fe.Button_Cancel]:b.CANCEL,[fe.Button_Cycle_Nature]:b.CYCLE_NATURE,[fe.Button_Cycle_Variant]:b.V,[fe.Button_Menu]:b.MENU,[fe.Button_Stats]:b.STATS,[fe.Button_Cycle_Form]:b.CYCLE_FORM,[fe.Button_Cycle_Shiny]:b.CYCLE_SHINY,[fe.Button_Cycle_Gender]:b.CYCLE_GENDER,[fe.Button_Cycle_Ability]:b.CYCLE_ABILITY,[fe.Button_Speed_Up]:b.SPEED_UP,[fe.Button_Slow_Down]:b.SLOW_DOWN,[fe.Button_Submit]:b.SUBMIT},default:{LC_N:fe.Button_Up,LC_S:fe.Button_Down,LC_W:fe.Button_Left,LC_E:fe.Button_Right,RC_S:fe.Button_Action,RC_E:fe.Button_Cancel,RC_W:fe.Button_Cycle_Nature,RC_N:fe.Button_Cycle_Variant,START:fe.Button_Menu,SELECT:fe.Button_Stats,LB:fe.Button_Cycle_Form,RB:fe.Button_Cycle_Shiny,LT:fe.Button_Cycle_Gender,RT:fe.Button_Cycle_Ability,LS:fe.Button_Speed_Up,RS:fe.Button_Slow_Down,TOUCH:fe.Button_Submit}},X6={padID:"081f-e401",padType:"xbox",deviceMapping:{RC_S:2,RC_E:1,RC_W:3,RC_N:0,START:9,SELECT:8,LB:4,RB:5,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[fe.Button_Up]:b.UP,[fe.Button_Down]:b.DOWN,[fe.Button_Left]:b.LEFT,[fe.Button_Right]:b.RIGHT,[fe.Button_Action]:b.ACTION,[fe.Button_Cancel]:b.CANCEL,[fe.Button_Cycle_Nature]:b.CYCLE_NATURE,[fe.Button_Cycle_Variant]:b.V,[fe.Button_Menu]:b.MENU,[fe.Button_Stats]:b.STATS,[fe.Button_Cycle_Form]:b.CYCLE_FORM,[fe.Button_Cycle_Shiny]:b.CYCLE_SHINY,[fe.Button_Cycle_Gender]:b.CYCLE_GENDER,[fe.Button_Cycle_Ability]:b.CYCLE_ABILITY,[fe.Button_Speed_Up]:b.SPEED_UP,[fe.Button_Slow_Down]:b.SLOW_DOWN},default:{LC_N:fe.Button_Up,LC_S:fe.Button_Down,LC_W:fe.Button_Left,LC_E:fe.Button_Right,RC_S:fe.Button_Action,RC_E:fe.Button_Cancel,RC_W:fe.Button_Cycle_Nature,RC_N:fe.Button_Cycle_Variant,START:fe.Button_Menu,SELECT:fe.Button_Stats,LB:fe.Button_Cycle_Form,RB:fe.Button_Cycle_Shiny,LT:-1,RT:-1,LS:-1,RS:-1}};function fr(E,A){return Object.keys(E.deviceMapping).find(s=>E.deviceMapping[s]===A)}L(fr,"getKeyWithKeycode");function Q6(E,A){const s=fr(E,A);return s?E.custom[s]:null}L(Q6,"getSettingNameWithKeycode");function jo(E,A){const s=Q6(E,A);return E.settings[s]}L(jo,"getButtonWithKeycode");function Br(E,A){return Object.keys(E.custom).find(s=>E.custom[s]===A)}L(Br,"getKeyWithSettingName");function G0(E,A){return E.custom[A]}L(G0,"getSettingNameWithKey");function QX(E,A){return E.icons[A]}L(QX,"getIconWithKey");function GC(E,A){const s=Br(E,A);return QX(E,s)}L(GC,"getIconWithSettingName");function JX(E,A,s,R){let n;A==="gamepad"?n=E[s[iA.GAMEPAD]]:n=E[s[iA.KEYBOARD]];const I=GC(n,R);if(!I){const a=R.includes("ALT_");let r;return a?r=R.split("ALT_").splice(1)[0]:r=`ALT_${R}`,GC(n,r)}return I}L(JX,"getIconForLatestInput");function $X(E,A,s){if(!jX(E,fr(E,s))||!eQ(E,A))return!1;const R=Q6(E,s);if(R){const a=Br(E,R);a&&(E.custom[a]=-1)}const n=Br(E,A);n&&(E.custom[n]=-1);const I=fr(E,s);return I&&(E.custom[I]=A),!0}L($X,"assign");function zX(E,A,s){if(E.padType==="keyboard")return!1;const R=Br(E,A),n=G0(E,R),I=fr(E,s),a=G0(E,I);return R&&(E.custom[R]=a),I&&(E.custom[I]=n),!0}L(zX,"swap");function qX(E,A){const s=Br(E,A);return E.blacklist.includes(s)?!1:(s&&(E.custom[s]=-1),!0)}L(qX,"deleteBind");function jX(E,A){var R;const s=G0(E,A);return!((R=E.blacklist)!=null&&R.includes(A))}L(jX,"canIAssignThisKey");function eQ(E,A){var R;const s=Br(E,A);return!((R=E.blacklist)!=null&&R.includes(s))}L(eQ,"canIOverrideThisSetting");const bK=class bK extends Ws{constructor(A,s=null){super(A,s),this.layout=new Map,this.rowsToDisplay=8}getLocalStorageSetting(){return localStorage.hasOwnProperty(this.localStoragePropertyName)?JSON.parse(localStorage.getItem(this.localStoragePropertyName)):{}}camelize(A){return A.replace(/(?:^\w|[A-Z]|\b\w)/g,function(s,R){return R===0?s.toLowerCase():s.toUpperCase()}).replace(/\s+/g,"")}setup(){const A=this.getUi();this.navigationIcons={},this.settingsContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.settingsContainer.setName(`settings-${this.titleSelected}`),this.settingsContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.navigationContainer=new _C(this.scene,0,0),this.optionsBg=_t(this.scene,0,this.navigationContainer.height,this.scene.game.canvas.width/6-2,this.scene.game.canvas.height/6-16-this.navigationContainer.height-2),this.optionsBg.setOrigin(0,0),this.actionsBg=_t(this.scene,0,this.scene.game.canvas.height/6-this.navigationContainer.height,this.scene.game.canvas.width/6-2,22),this.actionsBg.setOrigin(0,0);const s=this.scene.add.sprite(0,0,"keyboard");s.setOrigin(0,-.1),s.setPositionRelative(this.actionsBg,this.navigationContainer.width-32,4),this.navigationIcons.BUTTON_ACTION=s;const R=le(this.scene,0,0,D.t("settings:action"),X.SETTINGS_LABEL);R.setOrigin(0,.15),R.setPositionRelative(s,-R.width/6-2,0);const n=this.scene.add.sprite(0,0,"keyboard");n.setOrigin(0,-.1),n.setPositionRelative(this.actionsBg,this.navigationContainer.width-100,4),this.navigationIcons.BUTTON_CANCEL=n;const I=le(this.scene,0,0,D.t("settings:back"),X.SETTINGS_LABEL);I.setOrigin(0,.15),I.setPositionRelative(n,-I.width/6-2,0);const a=this.scene.add.sprite(0,0,"keyboard");a.setOrigin(0,-.1),a.setPositionRelative(this.actionsBg,this.navigationContainer.width-180,4),this.navigationIcons.BUTTON_HOME=a;const r=le(this.scene,0,0,D.t("settings:reset"),X.SETTINGS_LABEL);r.setOrigin(0,.15),r.setPositionRelative(a,-r.width/6-2,0),this.settingsContainer.add(this.optionsBg),this.settingsContainer.add(this.actionsBg),this.settingsContainer.add(this.navigationContainer),this.settingsContainer.add(s),this.settingsContainer.add(n),this.settingsContainer.add(a),this.settingsContainer.add(R),this.settingsContainer.add(I),this.settingsContainer.add(r);for(const S of this.configs){this.layout[S.padType]=new Map;const o=this.scene.add.container(0,0);o.setVisible(!1);const l=Object.keys(S.settings),C=[],M=[],u={},P=[...Object.keys(this.setting).slice(0,this.commonSettingsCount).map(H=>this.setting[H]),...Object.keys(S.settings)],G=Object.values(Object.keys(this.settingDeviceDefaults).filter(H=>P.includes(H)).map(H=>this.settingDeviceDefaults[H]));Object.keys(this.setting).filter(H=>P.includes(this.setting[H])).forEach((H,f)=>{const K=H.replace(/\_/g," "),W=this.settingBlacklisted.includes(this.setting[H]),V=W?X.SETTINGS_LOCKED:X.SETTINGS_LABEL;let k;const Q=this.camelize(K.replace("Alt ",""));K.toLowerCase().includes("alt")?k=`${D.t(`settings:${Q}`)}${D.t("settings:alt")}`:k=D.t(`settings:${Q}`),C[f]=le(this.scene,8,28+f*16,k,V),C[f].setOrigin(0,0),o.add(C[f]);const j=[];for(const[Te,He]of this.settingDeviceOptions[this.setting[H]].entries()){if(l.includes(this.setting[H])){if(Te){const Me=le(this.scene,0,0,W?"":He,X.WINDOW);Me.setOrigin(0,0),o.add(Me),j.push(Me);continue}const me=this.scene.add.sprite(0,0,this.textureOverride?this.textureOverride:S.padType);me.setOrigin(0,-.15),u[this.setting[H]]=me,o.add(me),j.push(me);continue}const ue=le(this.scene,0,0,He,this.settingDeviceDefaults[this.setting[H]]===Te?X.SETTINGS_SELECTED:X.WINDOW);ue.setOrigin(0,0),o.add(ue),j.push(ue)}M.push(j);const J=M[f].map(Te=>Te.width).reduce((Te,He)=>Te+=He,0),ne=Math.max(130,C[f].displayWidth+8),x=297-ne-J/6,q=Math.floor(x/(M[f].length-1));let F=0;for(const Te of M[f])Te.setPositionRelative(C[f],ne+F,0),F+=Te.width/6+q}),this.layout[S.padType].optionsContainer=o,this.layout[S.padType].inputsIcons=u,this.layout[S.padType].settingLabels=C,this.layout[S.padType].optionValueLabels=M,this.layout[S.padType].optionCursors=G,this.layout[S.padType].keys=P,this.layout[S.padType].bindingSettings=l,this.settingsContainer.add(o)}this.scrollBar=new Vi(this.scene,this.optionsBg.width-9,this.optionsBg.y+5,4,this.optionsBg.height-11,this.rowsToDisplay),this.settingsContainer.add(this.scrollBar),A.add(this.settingsContainer),this.settingsContainer.setVisible(!1)}getActiveConfig(){return this.scene.inputController.getActiveConfig(this.device)}updateBindings(){Object.keys(this.layout).forEach(R=>this.layout[R].optionsContainer.setVisible(!1));const A=this.getActiveConfig();if(!this.setLayout(A))return;const s=this.getLocalStorageSetting();if(this.keys.forEach((R,n)=>{this.setOptionCursor(n,s.hasOwnProperty(R)?s[R]:this.optionCursors[n])}),!!A.custom){for(const R of this.bindingSettings){const n=GC(A,R);n?(this.inputsIcons[R].setFrame(n),this.inputsIcons[R].alpha=1):this.inputsIcons[R].alpha=0}this.setCursor(this.cursor),this.setScrollCursor(this.scrollCursor)}}updateNavigationDisplay(){var s,R;const A={BUTTON_HOME:"HOME.png",BUTTON_DELETE:"DEL.png"};for(const n of Object.keys(this.navigationIcons)){if(Object.keys(A).includes(n)){this.navigationIcons[n].setTexture("keyboard"),this.navigationIcons[n].setFrame(A[n]),this.navigationIcons[n].alpha=1;continue}const I=(s=this.scene.inputController)==null?void 0:s.getIconForLatestInputRecorded(n);if(I){const a=(R=this.scene.inputController)==null?void 0:R.getLastSourceType();this.navigationIcons[n].setTexture(a),this.navigationIcons[n].setFrame(I),this.navigationIcons[n].alpha=1}else this.navigationIcons[n].alpha=0}}show(A){return super.show(A),this.updateNavigationDisplay(),rO.getInstance().updateIcons(),this.updateBindings(),this.settingsContainer.setVisible(!0),this.resetScroll(),this.getUi().moveTo(this.settingsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}setLayout(A){if(!A)return this.layout.noGamepads.optionsContainer.setVisible(!0),!1;const s=A.padType,R=this.layout[s];return this.keys=R.keys,this.optionsContainer=R.optionsContainer,this.optionsContainer.setVisible(!0),this.settingLabels=R.settingLabels,this.optionValueLabels=R.optionValueLabels,this.optionCursors=R.optionCursors,this.inputsIcons=R.inputsIcons,this.bindingSettings=R.bindingSettings,this.scrollBar.setTotalRows(R.settingLabels.length),this.scrollBar.setScrollCursor(0),!0}processInput(A){const s=this.getUi();let R=!1;if(this.updateNavigationDisplay(),A===b.CANCEL)R=!0,rO.getInstance().reset(),this.scene.ui.revertMode();else{const n=this.cursor+this.scrollCursor,I=this.setting[Object.keys(this.setting)[n]];switch(A){case b.ACTION:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(I)||!I.includes("BUTTON_")?R=!1:R=this.setSetting(this.scene,I,1);break;case b.UP:if(!this.optionValueLabels)return!1;if(n)this.cursor?R=this.setCursor(this.cursor-1):R=this.setScrollCursor(this.scrollCursor-1);else{const a=this.setCursor(this.rowsToDisplay-1),r=this.setScrollCursor(this.optionValueLabels.length-this.rowsToDisplay);R=a&&r}break;case b.DOWN:if(!this.optionValueLabels)return!1;if(n<this.optionValueLabels.length-1)this.cursor<this.rowsToDisplay-1?R=this.setCursor(this.cursor+1):this.scrollCursor<this.optionValueLabels.length-this.rowsToDisplay&&(R=this.setScrollCursor(this.scrollCursor+1));else{const a=this.setCursor(0),r=this.setScrollCursor(0);R=a&&r}break;case b.LEFT:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(I)||I.includes("BUTTON_")?R=!1:this.optionCursors[n]&&(R=this.setOptionCursor(n,this.optionCursors[n]-1,!0));break;case b.RIGHT:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(I)||I.includes("BUTTON_")?R=!1:this.optionCursors[n]<this.optionValueLabels[n].length-1&&(R=this.setOptionCursor(n,this.optionCursors[n]+1,!0));break;case b.CYCLE_FORM:case b.CYCLE_SHINY:R=this.navigationContainer.navigate(A);break}}return R&&s.playSelect(),R}resetScroll(){var A;(A=this.cursorObj)==null||A.destroy(),this.cursorObj=null,this.cursor=0,this.setCursor(0),this.setScrollCursor(0),this.updateSettingsScroll()}setCursor(A){const s=super.setCursor(A);if(!this.optionsContainer)return s;if(!this.cursorObj){const R=this.scene.game.canvas.width/6-(this.scrollBar.visible?16:10);this.cursorObj=this.scene.add.nineslice(0,0,"summary_moves_cursor",void 0,R,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.optionsContainer.add(this.cursorObj)}return this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor),this.updateSettingsScroll(),this.setCursor(this.cursor),!0)}setOptionCursor(A,s,R){const n=this.setting[Object.keys(this.setting)[A]],I=this.optionCursors[A];if(!this.bindingSettings.includes(n)&&!n.includes("BUTTON_")){const a=this.optionValueLabels[A][I];a.setColor(this.getTextColor(X.WINDOW)),a.setShadowColor(this.getTextColor(X.WINDOW,!0)),this.optionCursors[A]=s;const r=this.optionValueLabels[A][s];r.setColor(this.getTextColor(X.SETTINGS_SELECTED)),r.setShadowColor(this.getTextColor(X.SETTINGS_SELECTED,!0))}return R&&this.saveSettingToLocalStorage(n,s),!0}updateSettingsScroll(){if(this.optionsContainer){this.optionsContainer.setY(-16*this.scrollCursor);for(let A=0;A<this.settingLabels.length;A++){const s=A>=this.scrollCursor&&A<this.scrollCursor+this.rowsToDisplay;this.settingLabels[A].setVisible(s);for(const R of this.optionValueLabels[A])R.setVisible(s)}}}clear(){super.clear(),this.settingsContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(bK,"AbstractControlSettingsUiHandler");let HC=bK;const kK=class kK extends HC{constructor(A,s=null){super(A,s),this.setSetting=Nl,this.titleSelected="Gamepad",this.setting=fe,this.settingDeviceDefaults=C6,this.settingDeviceOptions=l6,this.configs=[k6,Z6,X6],this.commonSettingsCount=2,this.localStoragePropertyName="settingsGamepad",this.settingBlacklisted=sZ,this.device=iA.GAMEPAD}setup(){super.setup(),this.layout.noGamepads=new Map;const A=this.scene.add.container(0,0);A.setVisible(!1);const s=le(this.scene,8,28,D.t("settings:gamepadPleasePlug"),X.SETTINGS_LABEL);s.setOrigin(0,0),A.add(s),this.settingsContainer.add(A),this.layout.noGamepads.optionsContainer=A,this.layout.noGamepads.label=s}setLayout(A){return A?super.setLayout(A):(this.layout.noGamepads.optionsContainer.setVisible(!0),!1)}updateChosenGamepadDisplay(){this.updateBindings(),this.resetScroll();for(const[A,s]of Object.keys(this.setting).entries())if(this.setting[s]===this.setting.Controller)for(const n of Object.keys(this.layout))n!=="noGamepads"&&this.layout[n].optionValueLabels[A][0].setText(zd(this.scene.inputController.selectedDevice[iA.GAMEPAD],20))}saveSettingToLocalStorage(A,s){this.setting[A]!==this.setting.Controller&&this.scene.gameData.saveControlSetting(this.device,this.localStoragePropertyName,A,this.settingDeviceDefaults,s)}};L(kK,"SettingsGamepadUiHandler");let dC=kK;const ZK=class ZK extends Ws{constructor(A,s=null){super(A,s),this.leftArrowGap=90,this.arrowSpacing=3}setup(){const A=this.getUi();this.widestTextBox=0,this.challengesContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.challengesContainer.setName("challenges"),this.challengesContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains);const s=this.scene.add.rectangle(-1,-1,this.scene.scaledCanvas.width,this.scene.scaledCanvas.height,4342338,.8);s.setName("rect-challenge-overlay"),s.setOrigin(0,0),this.challengesContainer.add(s);const R=_t(this.scene,0,0,this.scene.game.canvas.width/6,24);R.setName("window-header-bg"),R.setOrigin(0,0);const n=le(this.scene,0,0,D.t("challenges:title"),X.SETTINGS_LABEL);n.setName("text-header"),n.setOrigin(0,0),n.setPositionRelative(R,8,4),this.optionsWidth=this.scene.scaledCanvas.width*.6,this.optionsBg=_t(this.scene,0,R.height,this.optionsWidth,this.scene.scaledCanvas.height-R.height-2),this.optionsBg.setName("window-options-bg"),this.optionsBg.setOrigin(0,0);const I=_t(this.scene,0,R.height,this.scene.scaledCanvas.width-this.optionsWidth,this.scene.scaledCanvas.height-R.height-26);I.setName("window-desc-bg"),I.setOrigin(0,0),I.setPositionRelative(this.optionsBg,this.optionsBg.width,0),this.descriptionText=new wb(this.scene,I.x+6,I.y+4,"",{fontFamily:"emerald",fontSize:84,color:jl.ORANGE,padding:{bottom:6},wrap:{mode:"word",width:(I.width-12)*6}}),this.descriptionText.setName("text-desc"),this.scene.add.existing(this.descriptionText),this.descriptionText.setScale(1/6),this.descriptionText.setShadow(4,5,eC.ORANGE),this.descriptionText.setOrigin(0,0),this.startBg=_t(this.scene,0,0,I.width,24),this.startBg.setName("window-start-bg"),this.startBg.setOrigin(0,0),this.startBg.setPositionRelative(I,0,I.height),this.startText=le(this.scene,0,0,D.t("challenges:noneSelected"),X.SETTINGS_LABEL),this.startText.setName("text-start"),this.startText.setOrigin(0,0),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4),this.startCursor=this.scene.add.nineslice(0,0,"summary_moves_cursor",void 0,I.width-8,16,1,1,1,1),this.startCursor.setName("9s-start-cursor"),this.startCursor.setOrigin(0,0),this.startCursor.setPositionRelative(this.startBg,4,3),this.startCursor.setVisible(!1),this.valuesContainer=this.scene.add.container(0,0),this.valuesContainer.setName("values"),this.challengeLabels=[];for(let a=0;a<9;a++){const r=le(this.scene,8,28+a*16,"",X.SETTINGS_LABEL);r.setName(`text-challenge-label-${a}`),r.setOrigin(0,0),this.valuesContainer.add(r);const S=this.scene.add.image(0,0,"cursor_reverse");S.setName(`challenge-left-arrow-${a}`),S.setOrigin(0,0),S.setVisible(!1),S.setScale(.75),this.valuesContainer.add(S);const o=this.scene.add.image(0,0,"cursor");o.setName(`challenge-right-arrow-${a}`),o.setOrigin(0,0),o.setScale(.75),o.setVisible(!1),this.valuesContainer.add(o);const l=le(this.scene,0,28+a*16,"",X.SETTINGS_LABEL);l.setName(`challenge-value-text-${a}`),l.setPositionRelative(r,100,0),this.valuesContainer.add(l),this.challengeLabels[a]={label:r,value:l,leftArrow:S,rightArrow:o}}this.monoTypeValue=this.scene.add.sprite(8,98,HR("types")),this.monoTypeValue.setName("challenge-value-monotype-sprite"),this.monoTypeValue.setScale(.86),this.monoTypeValue.setVisible(!1),this.valuesContainer.add(this.monoTypeValue),this.challengesContainer.add(R),this.challengesContainer.add(n),this.challengesContainer.add(this.optionsBg),this.challengesContainer.add(I),this.challengesContainer.add(this.descriptionText),this.challengesContainer.add(this.startBg),this.challengesContainer.add(this.startText),this.challengesContainer.add(this.startCursor),this.challengesContainer.add(this.valuesContainer),A.add(this.challengesContainer),this.setCursor(0),this.setScrollCursor(0),this.challengesContainer.setVisible(!1)}setDescription(A){this.descriptionText.setText(`[color=${jl.ORANGE}][shadow=${eC.ORANGE}]${A}`)}initLabels(){this.setDescription(this.scene.gameMode.challenges[0].getDescription()),this.widestTextBox=0;for(let A=0;A<9;A++)if(A<this.scene.gameMode.challenges.length){this.challengeLabels[A].label.setVisible(!0),this.challengeLabels[A].value.setVisible(!0),this.challengeLabels[A].leftArrow.setVisible(!0),this.challengeLabels[A].rightArrow.setVisible(!0);const s=le(this.scene,0,0,"",X.SETTINGS_LABEL);for(let R=0;R<=this.scene.gameMode.challenges[A].maxValue;R++)this.scene.gameMode.challenges[A].id!==yt.SINGLE_TYPE&&(s.setText(this.scene.gameMode.challenges[A].getValue(R)),s.displayWidth>this.widestTextBox&&(this.widestTextBox=s.displayWidth));s.destroy()}}updateText(){this.setDescription(this.getActiveChallenge().getDescription());let A=!1;for(let s=0;s<Math.min(9,this.scene.gameMode.challenges.length);s++){const R=this.scene.gameMode.challenges[this.scrollCursor+s],n=this.challengeLabels[s];n.label.setText(R.getName()),n.leftArrow.setPositionRelative(n.label,this.leftArrowGap,4.5),n.leftArrow.setVisible(R.value!==0),n.rightArrow.setPositionRelative(n.leftArrow,Math.max(this.monoTypeValue.width,this.widestTextBox)+n.leftArrow.displayWidth+2*this.arrowSpacing,0),n.rightArrow.setVisible(R.value!==R.maxValue),n.rightArrow.x+n.rightArrow.width+this.optionsBg.rightWidth+this.arrowSpacing>this.optionsWidth&&n.rightArrow.setX(this.optionsWidth-this.arrowSpacing-this.optionsBg.rightWidth);const I=Math.round((n.leftArrow.x+n.rightArrow.x+n.leftArrow.displayWidth)/2);R.id===yt.SINGLE_TYPE?(this.monoTypeValue.setX(I),this.monoTypeValue.setY(n.label.y+8),this.monoTypeValue.setFrame(R.getValue()),this.monoTypeValue.setVisible(!0),n.value.setVisible(!1),A=!0):(n.value.setText(R.getValue()),n.value.setX(I),n.value.setOrigin(.5,0),n.value.setVisible(!0))}A||this.monoTypeValue.setVisible(!1),this.hasSelectedChallenge=this.scene.gameMode.challenges.some(s=>s.value!==0),this.hasSelectedChallenge?(this.startText.setText(D.t("common:start")),this.startText.setAlpha(1),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4)):(this.startText.setText(D.t("challenges:noneSelected")),this.startText.setAlpha(.5),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4)),this.challengesContainer.update()}show(A){return super.show(A),this.startCursor.setVisible(!1),this.updateChallengeArrows(!1),this.challengesContainer.setVisible(!0),this.hasSelectedChallenge=this.scene.gameMode.challenges.some(s=>s.value!==0),this.setCursor(0),this.initLabels(),this.updateText(),this.getUi().moveTo(this.challengesContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateChallengeArrows(A){for(let s=0;s<Math.min(9,this.scene.gameMode.challenges.length);s++){const R=this.challengeLabels[s];A?(R.leftArrow.setTint(8421504),R.rightArrow.setTint(8421504)):(R.leftArrow.clearTint(),R.rightArrow.clearTint())}}processInput(A){var I,a,r,S,o;const s=this.getUi(),R=9;let n=!1;if(A===b.CANCEL)this.startCursor.visible?(this.startCursor.setVisible(!1),(I=this.cursorObj)==null||I.setVisible(!0),this.updateChallengeArrows(this.startCursor.visible)):(this.scene.clearPhaseQueue(),this.scene.pushPhase(new $I(this.scene)),(a=this.scene.getCurrentPhase())==null||a.end()),n=!0;else if(A===b.SUBMIT||A===b.ACTION)this.hasSelectedChallenge?(this.startCursor.visible?(this.scene.unshiftPhase(new NC(this.scene)),(r=this.scene.getCurrentPhase())==null||r.end()):(this.startCursor.setVisible(!0),(S=this.cursorObj)==null||S.setVisible(!1),this.updateChallengeArrows(this.startCursor.visible)),n=!0):n=!1;else if((o=this.cursorObj)!=null&&o.visible&&!this.startCursor.visible)switch(A){case b.UP:if(this.cursor===0)if(this.scrollCursor===0)if(this.scene.gameMode.challenges.length>R){const l=this.setCursor(R-1),C=this.setScrollCursor(this.scene.gameMode.challenges.length-R);n=l&&C}else n=this.setCursor(this.scene.gameMode.challenges.length-1);else n=this.setScrollCursor(this.scrollCursor-1);else n=this.setCursor(this.cursor-1);n&&this.updateText();break;case b.DOWN:if(this.cursor===R-1)if(this.scrollCursor<this.scene.gameMode.challenges.length-R)n=this.setScrollCursor(this.scrollCursor+1);else{const l=this.setCursor(0),C=this.setScrollCursor(0);n=l&&C}else this.scene.gameMode.challenges.length<R&&this.cursor===this.scene.gameMode.challenges.length-1?n=this.setCursor(0):n=this.setCursor(this.cursor+1);n&&this.updateText();break;case b.LEFT:n=this.getActiveChallenge().decreaseValue(),n&&this.updateText();break;case b.RIGHT:n=this.getActiveChallenge().increaseValue(),n&&this.updateText();break}return n&&s.playSelect(),n}setCursor(A){let s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.nineslice(0,0,"summary_moves_cursor",void 0,this.optionsWidth-8,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.valuesContainer.add(this.cursorObj)),s||(s=!this.cursorObj.visible),this.cursorObj.setVisible(!0),this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.setCursor(this.cursor),!0)}getActiveChallenge(){return this.scene.gameMode.challenges[this.cursor+this.scrollCursor]}clear(){super.clear(),this.challengesContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(ZK,"GameChallengesUiHandler");let H0=ZK;const XK=class XK extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6,0),this.queue=[],this.playerGender=A.gameData.gender}setup(){this.defaultWidth=200,this.defaultHeight=40,this.bg=this.scene.add.nineslice(0,0,"achv_bar",void 0,this.defaultWidth,this.defaultHeight,41,6,16,4),this.bg.setOrigin(0,0),this.add(this.bg),this.icon=this.scene.add.sprite(4,4,"items"),this.icon.setOrigin(0,0),this.add(this.icon),this.titleText=le(this.scene,40,3,"",X.MESSAGE,{fontSize:"72px"}),this.titleText.setOrigin(0,0),this.add(this.titleText),this.scoreText=le(this.scene,150,3,"",X.MESSAGE,{fontSize:"72px"}),this.scoreText.setOrigin(1,0),this.add(this.scoreText),this.descriptionText=le(this.scene,43,16,"",X.WINDOW_ALT,{fontSize:"72px"}),this.descriptionText.setOrigin(0,0),this.add(this.descriptionText),this.descriptionText.setWordWrapWidth(664),this.descriptionText.setLineSpacing(-5),this.setScale(.5),this.shown=!1}showAchv(A){if(this.shown){this.queue.push(A);return}const s=A.getTier();this.bg.setTexture(`achv_bar${s?`_${s+1}`:""}`),this.icon.setFrame(A.getIconImage()),this.titleText.setText(A.getName(this.playerGender)),this.scoreText.setVisible(A instanceof BA),A instanceof BA?this.descriptionText.setText(s1(A.localizationKey)):A instanceof dT&&this.descriptionText.setText(A.description),A instanceof BA&&this.scoreText.setText(`+${A.score}pt`),this.bg.width=Math.max(this.defaultWidth,this.icon.displayWidth+this.titleText.displayWidth+this.scoreText.displayWidth+16),this.scoreText.x=this.bg.width-2,this.descriptionText.width=this.bg.width-this.icon.displayWidth-16,this.descriptionText.setWordWrapWidth(this.descriptionText.width*6),this.bg.height=Math.max(this.defaultHeight,this.titleText.displayHeight+this.descriptionText.displayHeight+8),this.icon.y=this.bg.height/2-this.icon.height/2,this.scene.playSound("se/achv"),this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6-this.bg.width/2,duration:500,ease:"Sine.easeOut"}),this.scene.time.delayedCall(1e4,()=>this.hide(this.playerGender)),this.setVisible(!0),this.shown=!0}hide(A){this.shown&&this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:L(()=>{if(this.shown=!1,this.setVisible(!1),this.queue.length){const s=this.queue.shift();s&&this.showAchv(s)}},"onComplete")})}};L(XK,"AchvBar");let d0=XK;const Mb=-150,tQ=0,hb=0,QK=class QK extends Phaser.GameObjects.Container{constructor(A){super(A,Mb,hb)}setup(){this.defaultWidth=230,this.defaultHeight=100,this.bg=this.scene.add.nineslice(-5,-5,"bgm_bar",void 0,this.defaultWidth,this.defaultHeight,0,0,10,10),this.bg.setOrigin(0,0),this.add(this.bg),this.musicText=le(this.scene,5,5,"",X.BGM_BAR),this.musicText.setOrigin(0,0),this.musicText.setWordWrapWidth(650,!0),this.add(this.musicText),this.setVisible(!1),this.shown=!1}setBgmToBgmBar(A){this.musicText.setText(`${D.t("bgmName:music")}${this.getRealBgmName(A)}`),this.musicText.width=this.bg.width-20,this.musicText.setWordWrapWidth(this.defaultWidth*4),this.bg.width=Math.min(this.defaultWidth,this.musicText.displayWidth+23),this.bg.height=Math.min(this.defaultHeight,this.musicText.displayHeight+20),this.scene.fieldUI.bringToTop(this),this.y=hb}toggleBgmBar(A){if(this.musicText.text===""){this.setVisible(!1);return}if(!this.scene.showBgmBar){this.setVisible(!1);return}this.scene.tweens.add({targets:this,x:A?tQ:Mb,duration:500,ease:"Sine.easeInOut",onComplete:L(()=>{this.setVisible(!0)},"onComplete")})}getRealBgmName(A){return D.t([`bgmName:${A}`,"bgmName:missing_entries"],{name:Cl(A)})}};L(QK,"BgmBar");let f0=QK;const JK=class JK extends Ws{constructor(A,s=null){super(A,s),this.buttonContainers=[],this.buttonBgs=[],this.buttonLabels=[]}getButtonTopMargin(){return 0}setup(){const A=this.getUi();this.modalContainer=this.scene.add.container(0,0),this.modalContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.modalBg=_t(this.scene,0,0,0,0),this.modalContainer.add(this.modalBg),this.titleText=le(this.scene,0,4,"",X.SETTINGS_LABEL),this.titleText.setOrigin(.5,0),this.modalContainer.add(this.titleText),A.add(this.modalContainer);const s=this.getButtonLabels();for(const R of s)this.addButton(R);this.modalContainer.setVisible(!1)}addButton(A){const s=this.getButtonTopMargin(),R=le(this.scene,0,8,A,X.TOOLTIP_CONTENT);R.setOrigin(.5,.5);const n=_t(this.scene,0,0,R.getBounds().width+8,16,!1,!1,0,0,qR.THIN);n.setOrigin(.5,0),n.setInteractive(new Phaser.Geom.Rectangle(0,0,n.width,n.height),Phaser.Geom.Rectangle.Contains);const I=this.scene.add.container(0,s);this.buttonLabels.push(R),this.buttonBgs.push(n),this.buttonContainers.push(I),I.add(n),I.add(R),this.addInteractionHoverEffect(n),this.modalContainer.add(I)}show(A){if(A.length>=1&&"buttonActions"in A[0]){if(super.show(A),A[0].hasOwnProperty("fadeOut")&&typeof A[0].fadeOut=="function"){const[R,n,I,a]=this.getMargin(),r=this.scene.add.rectangle((this.getWidth()+a+n)/2,(this.getHeight()+R+I)/2,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,0);r.setOrigin(.5,.5),r.setName("rect-ui-overlay-modal"),r.setAlpha(0),this.modalContainer.add(r),this.modalContainer.moveTo(r,0),this.scene.tweens.add({targets:r,alpha:1,duration:250,ease:"Sine.easeOut",onComplete:A[0].fadeOut})}const s=A[0];this.updateContainer(s),this.modalContainer.setVisible(!0),this.getUi().moveTo(this.modalContainer,this.getUi().length-1);for(let R=0;R<this.buttonBgs.length;R++)R<this.buttonBgs.length&&this.buttonBgs[R].on("pointerdown",n=>s.buttonActions[R]());return!0}return!1}updateContainer(A){const[s,R,n,I]=this.getMargin(A),[a,r]=[this.getWidth(A),this.getHeight(A)];this.modalContainer.setPosition((this.scene.game.canvas.width/6-(a+(R-I)))/2,(-this.scene.game.canvas.height/6-(r+(n-s)))/2),this.modalBg.setSize(a,r);const S=this.getModalTitle(A);this.titleText.setText(S),this.titleText.setX(a/2),this.titleText.setVisible(!!S);for(let o=0;o<this.buttonContainers.length;o++){const l=a/(this.buttonContainers.length+1);this.buttonContainers[o].setPosition(l*(o+1),this.modalBg.height-(this.buttonBgs[o].height+8))}}processInput(A){return!1}clear(){super.clear(),this.modalContainer.setVisible(!1),this.buttonBgs.map(A=>A.off("pointerdown"))}addInteractionHoverEffect(A){A.on("pointerover",()=>{this.setMouseCursorStyle("pointer"),A.setTint(12303291)}),A.on("pointerout",()=>{this.setMouseCursorStyle("default"),A.clearTint()})}};L(JK,"ModalUiHandler");let gr=JK;const $K=class $K extends gr{constructor(A,s=null){super(A,s),this.editing=!1,this.inputContainers=[],this.inputs=[],this.formLabels=[]}getHeight(A){return 20*this.getInputFieldConfigs().length+(this.getModalTitle()?26:0)+(A!=null&&A.errorMessage?12:0)+this.getButtonTopMargin()+28}getReadableErrorMessage(A){return(A==null?void 0:A.indexOf("connection refused"))>-1?"Could not connect to the server":A}setup(){super.setup();const A=this.getInputFieldConfigs(),s=!!this.getModalTitle();A.length>=1&&this.updateFields(A,s),this.errorMessage=le(this.scene,10,(s?31:5)+20*(A.length-1)+16+this.getButtonTopMargin(),"",X.TOOLTIP_CONTENT),this.errorMessage.setColor(this.getTextColor(X.SUMMARY_PINK)),this.errorMessage.setShadowColor(this.getTextColor(X.SUMMARY_PINK,!0)),this.errorMessage.setVisible(!1),this.modalContainer.add(this.errorMessage)}updateFields(A,s){this.inputContainers=[],this.inputs=[],this.formLabels=[],A.forEach((R,n)=>{const I=le(this.scene,10,(s?31:5)+20*n,R.label,X.TOOLTIP_CONTENT);I.name="formLabel"+n,this.formLabels.push(I),this.modalContainer.add(this.formLabels[this.formLabels.length-1]);const a=this.scene.add.container(70,(s?28:2)+20*n);a.setVisible(!1);const r=_t(this.scene,0,0,80,16,!1,!1,0,0,qR.XTHIN),S=R==null?void 0:R.isPassword,o=R==null?void 0:R.isReadOnly,l=Q8(this.scene,4,-2,440,116,X.TOOLTIP_CONTENT,{type:S?"password":"text",maxLength:S?64:20,readOnly:o});l.setOrigin(0,0),a.add(r),a.add(l),this.inputContainers.push(a),this.modalContainer.add(a),this.inputs.push(l)})}show(A){if(super.show(A)){this.inputContainers.map(R=>R.setVisible(!0));const s=A[0];return this.submitAction=s.buttonActions.length?s.buttonActions[0]:null,this.buttonBgs.length&&(this.buttonBgs[0].off("pointerdown"),this.buttonBgs[0].on("pointerdown",()=>{this.submitAction&&this.submitAction()})),this.modalContainer.y+=24,this.modalContainer.setAlpha(0),this.tween=this.scene.tweens.add({targets:this.modalContainer,duration:Et(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1}),!0}return!1}processInput(A){return A===b.SUBMIT&&this.submitAction?(this.submitAction(),!0):!1}sanitizeInputs(){for(const A of this.inputs)A.text=A.text.trim()}updateContainer(A){super.updateContainer(A),this.errorMessage.setText(this.getReadableErrorMessage((A==null?void 0:A.errorMessage)||"")),this.errorMessage.setVisible(!!this.errorMessage.text)}clear(){super.clear(),this.modalContainer.setVisible(!1),this.inputContainers.map(A=>A.setVisible(!1)),this.submitAction=null,this.tween&&this.tween.remove()}};L($K,"FormModalUiHandler");let jI=$K;const zK=class zK extends jI{constructor(A,s=null){super(A,s),this.buttonGap=10,this.httpUserNotFoundErrorCode=404,this.ERR_REQUIRED_FIELD=R=>R==="username"?`${Cl(R)} is required`:`${Cl(R)} Id is required`,this.SUCCESS_SERVICE_MODE=(R,n)=>`Username and ${R} successfully ${n.toLowerCase()}ed`}getModalTitle(){return"Admin panel"}getWidth(){return this.adminMode===2?180:160}getMargin(){return[0,0,0,0]}getButtonLabels(){switch(this.adminMode){case 0:return["Link Account","Cancel"];case 1:return["Find account","Cancel"];case 2:return["Back to search","Cancel"];default:return["Activate ADMIN","Cancel"]}}getInputFieldConfigs(){const A=[];switch(this.adminMode){case 0:A.push({label:"Username"}),A.push({label:"Discord ID"});break;case 1:A.push({label:"Username"});break;case 2:const s=this.adminResult??{username:"",discordId:"",googleId:"",lastLoggedIn:"",registered:""};A.push({label:"Username",isReadOnly:!0}),A.push({label:"Discord ID",isReadOnly:s.discordId!==""}),A.push({label:"Google ID",isReadOnly:s.googleId!==""}),A.push({label:"Last played",isReadOnly:!0}),A.push({label:"Registered",isReadOnly:!0});break}return A}processInput(A){return A===b.SUBMIT&&this.submitAction?(this.submitAction(),!0):!1}show(A){this.config=A[0],this.adminMode=A[1],this.adminResult=A[2]??{username:"",discordId:"",googleId:"",lastLoggedIn:"",registered:""};const s=A[3],R=this.getInputFieldConfigs(),n=!!this.getModalTitle();this.updateFields(R,n),this.updateContainer(this.config);const I=this.getButtonLabels();for(let a=0;a<I.length;a++)this.buttonLabels[a].setText(I[a]);if(this.errorMessage.setPosition(10,(n?31:5)+20*(R.length-1)+16+this.getButtonTopMargin()),s?(this.errorMessage.setColor(this.getTextColor(X.SUMMARY_PINK)),this.errorMessage.setShadowColor(this.getTextColor(X.SUMMARY_PINK,!0))):(this.errorMessage.setColor(this.getTextColor(X.SUMMARY_GREEN)),this.errorMessage.setShadowColor(this.getTextColor(X.SUMMARY_GREEN,!0))),super.show(A)){this.populateFields(this.adminMode,this.adminResult);const a=this.submitAction;return this.submitAction=r=>{this.submitAction=a;const S=this.convertInputsToAdmin(),o=this.areFieldsValid(this.adminMode);if(o.error)return this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]}),this.showMessage(o.errorMessage??"",S,!0);this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]}),this.adminMode===0?this.adminLinkUnlink(S,"discord","Link").then(l=>l.error?this.showMessage(l.errorType,S,!0):this.showMessage(this.SUCCESS_SERVICE_MODE("discord","link"),S,!1)):this.adminMode===1?this.adminSearch(S).then(l=>{if(l.error)return this.showMessage(l.errorType,S,!0);this.updateAdminPanelInfo(l.adminSearchResult??S)}):this.adminMode===2&&this.updateAdminPanelInfo(S,1)},!0}return!1}showMessage(A,s,R){this.scene.ui.setMode(Oe.ADMIN,Object.assign(this.config,{errorMessage:A==null?void 0:A.trim()}),this.adminMode,s,R),R?this.scene.ui.playError():this.scene.ui.playSelect()}populateFields(A,s){switch(A){case 0:this.inputs[0].setText(s.username),this.inputs[1].setText(s.discordId);break;case 1:this.inputs[0].setText(s.username);break;case 2:Object.keys(s).forEach((R,n)=>{if(this.inputs[n].setText(s[R]),R==="discordId"||R==="googleId"){const I=this.inputContainers[n].list.find(r=>r.type==="NineSlice"),a=this.scene.add.image(this.inputContainers[n].x+I.width+this.buttonGap,this.inputContainers[n].y+Math.floor(I.height/2),s[R]===""?"link_icon":"unlink_icon");a.setName(`adminBtn_${R}`),a.setOrigin(.5,.5),a.setInteractive(),a.on("pointerdown",()=>{const r=R.toLowerCase().replace("id",""),S=s[R]===""?"Link":"Unlink",o=this.areFieldsValid(this.adminMode,r);if(o.error)return this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]}),this.showMessage(o.errorMessage??"",s,!0);this.adminLinkUnlink(this.convertInputsToAdmin(),r,S).then(l=>{if(l.error)return this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]}),this.showMessage(l.errorType,s,!0);this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]}),this.adminSearch(s).then(C=>C.error?this.showMessage(C.errorType,s,!0):this.showMessage(this.SUCCESS_SERVICE_MODE(r,S),C.adminSearchResult??s,!1))})}),this.addInteractionHoverEffect(a),this.modalContainer.add(a)}});break}}areFieldsValid(A,s){switch(A){case 0:if(!this.inputs[0].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("username")};if(!this.inputs[1].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("discord")};break;case 1:if(!this.inputs[0].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("username")};break;case 2:if(!this.inputs[1].text&&s==="discord")return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD(s)};if(!this.inputs[2].text&&s==="google")return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD(s)};break}return{error:!1}}convertInputsToAdmin(){var A,s,R,n,I,a,r,S,o;return{username:(A=this.inputs[0])!=null&&A.node?this.inputs[0].text:"",discordId:(s=this.inputs[1])!=null&&s.node?(R=this.inputs[1])==null?void 0:R.text:"",googleId:(n=this.inputs[2])!=null&&n.node?(I=this.inputs[2])==null?void 0:I.text:"",lastLoggedIn:(a=this.inputs[3])!=null&&a.node?(r=this.inputs[3])==null?void 0:r.text:"",registered:(S=this.inputs[4])!=null&&S.node?(o=this.inputs[4])==null?void 0:o.text:""}}async adminSearch(A){try{const[s,R]=await OO.admin.searchAccount({username:A.username});return R||!s?{adminSearchResult:A,error:!0,errorType:R}:{adminSearchResult:s,error:!1}}catch(s){return console.error(s),{error:!0,errorType:s}}}async adminLinkUnlink(A,s,R){try{let n=null;return s==="discord"?R==="Link"?n=await OO.admin.linkAccountToDiscord({discordId:A.discordId,username:A.username}):R==="Unlink"?n=await OO.admin.unlinkAccountFromDiscord({discordId:A.discordId,username:A.username}):console.warn("Unknown mode",R,"for service",s):s==="google"?R==="Link"?n=await OO.admin.linkAccountToGoogleId({googleId:A.googleId,username:A.username}):R==="Unlink"?n=await OO.admin.unlinkAccountFromGoogleId({googleId:A.googleId,username:A.username}):console.warn("Unknown mode",R,"for service",s):console.warn("Unknown service",s),n?{adminSearchResult:A,error:!0,errorType:n}:{adminSearchResult:A,error:!1}}catch(n){return console.error(n),{error:!0,errorType:n}}}updateAdminPanelInfo(A,s){s=s??2,this.scene.ui.setMode(Oe.ADMIN,{buttonActions:[()=>{this.scene.ui.revertMode(),this.scene.ui.revertMode()},()=>{this.scene.ui.revertMode(),this.scene.ui.revertMode()}]},s,A)}clear(){super.clear();const A=["formLabel","adminBtn"],s=[],R=this.modalContainer.list;for(let n=R.length-1;n>=0;n--)(A.some(I=>R[n].name.includes(I))||R[n].type==="Container"&&R[n].list.find(I=>I.type==="rexInputText"))&&s.push(R[n]);for(;s.length>0;)this.modalContainer.remove(s.pop(),!0)}};L(zK,"AdminUiHandler");let B0=zK;var ai=(E=>(E[E.GAME_SETTINGS=0]="GAME_SETTINGS",E[E.ACHIEVEMENTS=1]="ACHIEVEMENTS",E[E.STATS=2]="STATS",E[E.RUN_HISTORY=3]="RUN_HISTORY",E[E.EGG_LIST=4]="EGG_LIST",E[E.EGG_GACHA=5]="EGG_GACHA",E[E.MANAGE_DATA=6]="MANAGE_DATA",E[E.COMMUNITY=7]="COMMUNITY",E[E.SAVE_AND_QUIT=8]="SAVE_AND_QUIT",E[E.LOG_OUT=9]="LOG_OUT",E))(ai||{});let cb="https://wiki.pokerogue.net/start";const AQ="https://discord.gg/uWpTfdKG49",EQ="https://github.com/pagefaultgames/pokerogue",sQ="https://www.reddit.com/r/pokerogue",RQ="https://github.com/sponsors/pagefaultgames",qK=class qK extends ps{constructor(A,s=null){super(A,s),this.textPadding=8,this.defaultMessageBoxWidth=220,this.defaultWordWrapWidth=1224,this.scale=.1666666667,this.excludedMenus=()=>[{condition:[Oe.COMMAND,Oe.TITLE].includes(s??Oe.TITLE),options:[5,4]},{condition:Ss,options:[9]}],this.menuOptions=IO(ai).map(R=>parseInt(ai[R])).filter(R=>!this.excludedMenus().some(n=>n.condition&&n.options.includes(R)))}setup(){var R;const A=this.getUi(),s=(R=D.resolvedLanguage)==null?void 0:R.substring(0,2);["de","fr","ko","zh"].includes(s)&&(cb=`https://wiki.pokerogue.net/${s}:start`),this.bgmBar=new f0(this.scene),this.bgmBar.setup(),A.bgmBar=this.bgmBar,this.menuContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.menuContainer.setName("menu"),this.menuContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.menuOverlay=new Phaser.GameObjects.Rectangle(this.scene,-1,-1,this.scene.scaledCanvas.width,this.scene.scaledCanvas.height,16777215,.3),this.menuOverlay.setName("menu-overlay"),this.menuOverlay.setOrigin(0,0),this.menuContainer.add(this.menuOverlay),this.menuContainer.add(this.bgmBar),this.menuContainer.setVisible(!1)}render(){const A=this.getUi();this.excludedMenus=()=>[{condition:this.scene.getCurrentPhase()instanceof oO,options:[5,4]},{condition:Ss,options:[9]}],this.menuOptions=IO(ai).map(a=>parseInt(ai[a])).filter(a=>!this.excludedMenus().some(r=>r.condition&&r.options.includes(a))),this.optionSelectText=le(this.scene,0,0,this.menuOptions.map(a=>`${D.t(`menuUiHandler:${ai[a]}`)}`).join(`
`),X.WINDOW,{maxLines:this.menuOptions.length}),this.optionSelectText.setLineSpacing(12),this.scale=un(X.WINDOW,this.scene.uiTheme).scale,this.menuBg=_t(this.scene,this.scene.game.canvas.width/6-(this.optionSelectText.displayWidth+25),0,this.optionSelectText.displayWidth+19+24*this.scale,this.scene.game.canvas.height/6-2),this.menuBg.setOrigin(0,0),this.optionSelectText.setPositionRelative(this.menuBg,10+24*this.scale,6),this.menuContainer.add(this.menuBg),this.menuContainer.add(this.optionSelectText),A.add(this.menuContainer),this.menuMessageBoxContainer=this.scene.add.container(0,130),this.menuMessageBoxContainer.setName("menu-message-box"),this.menuMessageBoxContainer.setVisible(!1),this.menuMessageBox=_t(this.scene,0,0,this.defaultMessageBoxWidth,48),this.menuMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.menuMessageBox),this.dialogueMessageBox=_t(this.scene,-this.textPadding,0,this.scene.game.canvas.width/6+this.textPadding*2,49,!1,!1,0,0,qR.THIN),this.dialogueMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.dialogueMessageBox);const s=le(this.scene,this.textPadding,this.textPadding,"",X.WINDOW,{maxLines:2});s.setName("menu-message"),s.setOrigin(0,0),this.menuMessageBoxContainer.add(s),this.initTutorialOverlay(this.menuContainer),this.initPromptSprite(this.menuMessageBoxContainer),this.message=s,this.setDialogTestMode(!1),this.menuContainer.add(this.menuMessageBoxContainer);const R=[],n=L((a,r,S)=>{A.revertMode(),A.showText(a,null,()=>{const o={options:new Array(5).fill(null).map((l,C)=>C).filter(r).map(l=>({label:D.t("menuUiHandler:slot",{slotNumber:l+1}),handler:L(()=>(S(l),A.revertMode(),A.showText("",0),!0),"handler")})).concat([{label:D.t("menuUiHandler:cancel"),handler:L(()=>(A.revertMode(),A.showText("",0),!0),"handler")}]),xOffset:98};A.setOverlayMode(Oe.MENU_OPTION_SELECT,o)})},"confirmSlot");(qa||SM)&&R.push({label:D.t("menuUiHandler:importSession"),handler:L(()=>(n(D.t("menuUiHandler:importSlotSelect"),()=>!0,a=>this.scene.gameData.importData(UE.SESSION,a)),!0),"handler"),keepOpen:!0}),R.push({label:D.t("menuUiHandler:exportSession"),handler:L(()=>{const a=[];return Promise.all(new Array(5).fill(null).map((r,S)=>{const o=S;return this.scene.gameData.getSession(o).then(l=>{l&&a.push(o)})})).then(()=>{n(D.t("menuUiHandler:exportSlotSelect"),r=>a.indexOf(r)>-1,r=>this.scene.gameData.tryExportData(UE.SESSION,r))}),!0},"handler"),keepOpen:!0}),R.push({label:D.t("menuUiHandler:importRunHistory"),handler:L(()=>(this.scene.gameData.importData(UE.RUN_HISTORY),!0),"handler"),keepOpen:!0}),R.push({label:D.t("menuUiHandler:exportRunHistory"),handler:L(()=>(this.scene.gameData.tryExportData(UE.RUN_HISTORY),!0),"handler"),keepOpen:!0}),(qa||SM)&&R.push({label:D.t("menuUiHandler:importData"),handler:L(()=>(A.revertMode(),this.scene.gameData.importData(UE.SYSTEM),!0),"handler"),keepOpen:!0}),R.push({label:D.t("menuUiHandler:exportData"),handler:L(()=>(this.scene.gameData.tryExportData(UE.SYSTEM),!0),"handler"),keepOpen:!0},{label:D.t("menuUiHandler:consentPreferences"),handler:L(()=>{const a=document.querySelector(".termly-display-preferences"),r=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});return a.dispatchEvent(r),a.focus(),!0},"handler"),keepOpen:!0}),(qa||SM)&&R.push({label:"Test Dialogue",handler:L(()=>{A.playSelect();const a="",r={};return r.buttonActions=[S=>{A.revertMode(),A.playSelect();const l=decodeURIComponent(escape(atob(S))),C=A.getHandler();C.tutorialActive=!0;const M={},u=l.split(" "),h=u[0],P=RegExp("\\{\\{(\\w*)\\}\\}","g"),G=D.t(h).match(P)??[];if(G.length>0)for(let d=0;d<G.length;d++)typeof u[d+1]<"u"&&(M[G[d].replace(/\W/g,"")]=D.t(u[d+1]));this.setDialogTestMode(!0),A.showText(String(D.t(h,M)),null,()=>this.scene.ui.showText("",0,()=>{C.tutorialActive=!1,this.setDialogTestMode(!1)}),null,!0)},()=>{A.revertMode()}],A.setMode(Oe.TEST_DIALOGUE,r,a),!0},"handler"),keepOpen:!0}),R.push({label:D.t("menuUiHandler:cancel"),handler:L(()=>(this.scene.ui.revertMode(),!0),"handler"),keepOpen:!0}),this.manageDataConfig={xOffset:98,options:R,maxOptions:7};const I=[{label:"Wiki",handler:L(()=>{var a;return(a=window.open(cb,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0},{label:"Discord",handler:L(()=>{var a;return(a=window.open(AQ,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0},{label:"GitHub",handler:L(()=>{var a;return(a=window.open(EQ,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0},{label:"Reddit",handler:L(()=>{var a;return(a=window.open(sQ,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0},{label:D.t("menuUiHandler:donate"),handler:L(()=>{var a;return(a=window.open(RQ,"_blank"))==null||a.focus(),!0},"handler"),keepOpen:!0}];I.push({label:D.t("menuUiHandler:cancel"),handler:L(()=>(this.scene.ui.revertMode(),!0),"handler")}),this.communityConfig={xOffset:98,options:I},this.setCursor(0)}show(A){return this.render(),super.show(A),this.menuOptions=IO(ai).map(s=>parseInt(ai[s])).filter(s=>!this.excludedMenus().some(R=>R.condition&&R.options.includes(s))),this.menuContainer.setVisible(!0),this.setCursor(0),this.getUi().moveTo(this.menuContainer,this.getUi().length-1),this.getUi().hideTooltip(),this.scene.playSound("ui/menu_open"),this.menuContainer.bringToTop(this.tutorialOverlay),this.menuContainer.bringToTop(this.menuMessageBoxContainer),Wi(this.scene,JR.Menu),this.bgmBar.toggleBgmBar(!0),!0}processInput(A){const s=this.getUi();let R=!1,n=!1;if(A===b.ACTION){let I=this.cursor;const a=this.excludedMenus().find(r=>r.condition);if(a!==void 0&&a.options!==void 0&&a.options.length>0){const r=a.options.sort();for(const S of r)if(I>=S)I++;else break}switch(this.showText("",0),I){case 0:s.setOverlayMode(Oe.SETTINGS),R=!0;break;case 1:s.setOverlayMode(Oe.ACHIEVEMENTS),R=!0;break;case 2:s.setOverlayMode(Oe.GAME_STATS),R=!0;break;case 3:s.setOverlayMode(Oe.RUN_HISTORY),R=!0;break;case 4:this.scene.gameData.eggs.length?(s.revertMode(),s.setOverlayMode(Oe.EGG_LIST),R=!0):(s.showText(D.t("menuUiHandler:noEggs"),null,()=>s.showText(""),Et(1500)),n=!0);break;case 5:s.revertMode(),s.setOverlayMode(Oe.EGG_GACHA),R=!0;break;case 6:s.setOverlayMode(Oe.MENU_OPTION_SELECT,this.manageDataConfig),R=!0;break;case 7:s.setOverlayMode(Oe.MENU_OPTION_SELECT,this.communityConfig),R=!0;break;case 8:if(this.scene.currentBattle){R=!0;const S=L(()=>{s.setMode(Oe.LOADING,{buttonActions:[],fadeOut:L(()=>this.scene.gameData.saveAll(this.scene,!0,!0,!0,!0).then(()=>{this.scene.reset(!0)}),"fadeOut")})},"doSaveQuit");this.scene.currentBattle.turn>1?s.showText(D.t("menuUiHandler:losingProgressionWarning"),null,()=>{if(!this.active){this.showText("",0);return}s.setOverlayMode(Oe.CONFIRM,S,()=>{s.revertMode(),this.showText("",0)},!1,-98)}):S()}else n=!0;break;case 9:R=!0;const r=L(()=>{s.setMode(Oe.LOADING,{buttonActions:[],fadeOut:L(()=>OO.account.logout().then(()=>{pI().then(()=>this.scene.reset(!0,!0))}),"fadeOut")})},"doLogout");this.scene.currentBattle?s.showText(D.t("menuUiHandler:losingProgressionWarning"),null,()=>{if(!this.active){this.showText("",0);return}s.setOverlayMode(Oe.CONFIRM,r,()=>{s.revertMode(),this.showText("",0)},!1,-98)}):r();break}}else if(A===b.CANCEL)R=!0,s.revertMode().then(I=>{I||s.setMode(Oe.MESSAGE)});else switch(A){case b.UP:this.cursor?R=this.setCursor(this.cursor-1):R=this.setCursor(this.menuOptions.length-1);break;case b.DOWN:this.cursor+1<this.menuOptions.length?R=this.setCursor(this.cursor+1):R=this.setCursor(0);break}return R?s.playSelect():n&&s.playError(),R||n}setDialogTestMode(A){this.menuMessageBox.setVisible(!A),this.dialogueMessageBox.setVisible(A),this.message.setWordWrapWidth(A?this.scene.ui.getMessageHandler().wordWrapWidth:this.defaultWordWrapWidth),this.message.setX(A?this.textPadding+1:this.textPadding),this.message.setY(A?this.textPadding+.4:this.textPadding)}showText(A,s,R,n,I,a){this.menuMessageBoxContainer.setVisible(!!A),super.showText(A,s,R,n,I,a)}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.cursorObj.setOrigin(0,0),this.menuContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.menuBg,7,6+(18+this.cursor*96)*this.scale),s}clear(){super.clear(),this.menuContainer.setVisible(!1),this.bgmBar.toggleBgmBar(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(qK,"MenuUiHandler");let g0=qK;const OQ={de:{TextSize:"80px"}},jK=class jK extends ps{constructor(A,s=null){super(A,s),this.ROWS=4,this.COLS=17,this.achvsTotal=Object.keys(lt).length,this.vouchersTotal=Object.keys(Ms).length,this.scrollCursor=0}setup(){var u;const A=this.getUi();this.mainContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.mainContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.headerBg=_t(this.scene,0,0,this.scene.game.canvas.width/6-2,24),this.headerBg.setOrigin(0,0),this.headerText=le(this.scene,0,0,"",X.SETTINGS_LABEL),this.headerText.setOrigin(0,0),this.headerText.setPositionRelative(this.headerBg,8,4),this.headerActionButton=new Phaser.GameObjects.Sprite(this.scene,0,0,"keyboard","ACTION.png"),this.headerActionButton.setOrigin(0,0),this.headerActionButton.setPositionRelative(this.headerBg,236,6),this.headerActionText=le(this.scene,0,0,"",X.WINDOW,{fontSize:"60px"}),this.headerActionText.setOrigin(0,0),this.headerActionText.setPositionRelative(this.headerBg,264,8);const s=this.scene.gameData.gender??vt.MALE,R=vt[s].toLowerCase();this.achvsName=D.t("achv:Achievements.name",{context:R}),this.vouchersName=D.t("voucher:vouchers"),this.iconsBg=_t(this.scene,0,this.headerBg.height,this.scene.game.canvas.width/6-2,this.scene.game.canvas.height/6-this.headerBg.height-68),this.iconsBg.setOrigin(0,0);const n=6;this.scrollBar=new Vi(this.scene,this.iconsBg.width-9,this.iconsBg.y+n,4,this.iconsBg.height-n*2,this.ROWS),this.iconsContainer=this.scene.add.container(5,this.headerBg.height+8),this.icons=[];for(let h=0;h<this.ROWS*this.COLS;h++){const P=h%this.COLS*18,G=Math.floor(h/this.COLS)*18,d=this.scene.add.sprite(P,G,"items","unknown");d.setOrigin(0,0),d.setScale(.5),this.icons.push(d),this.iconsContainer.add(d)}const I=_t(this.scene,0,this.headerBg.height+this.iconsBg.height,174,24);I.setOrigin(0,0),this.titleBg=I,this.titleText=le(this.scene,0,0,"",X.WINDOW);const a=((u=OQ[D.language])==null?void 0:u.TextSize)??this.titleText.style.fontSize;this.titleText.setFontSize(a);const r=I.x+I.width/2,S=I.y+I.height/2;this.titleText.setOrigin(.5,.5),this.titleText.setPosition(r,S),this.scoreContainer=this.scene.add.container(I.x+I.width,I.y);const o=_t(this.scene,0,0,46,24);o.setOrigin(0,0),this.scoreContainer.add(o),this.scoreText=le(this.scene,o.width/2,o.height/2,"",X.WINDOW),this.scoreText.setOrigin(.5,.5),this.scoreContainer.add(this.scoreText);const l=_t(this.scene,this.scoreContainer.x+o.width,I.y,98,24);l.setOrigin(0,0),this.unlockText=le(this.scene,0,0,"",X.WINDOW),this.unlockText.setOrigin(.5,.5),this.unlockText.setPositionRelative(l,l.width/2,l.height/2);const C=_t(this.scene,0,I.y+I.height,this.scene.game.canvas.width/6-2,42);C.setOrigin(0,0);const M=le(this.scene,0,0,"",X.WINDOW,{maxLines:2});M.setWordWrapWidth(1870),M.setOrigin(0,0),M.setPositionRelative(C,8,4),this.message=M,this.mainContainer.add(this.headerBg),this.mainContainer.add(this.headerActionButton),this.mainContainer.add(this.headerText),this.mainContainer.add(this.headerActionText),this.mainContainer.add(this.iconsBg),this.mainContainer.add(this.scrollBar),this.mainContainer.add(this.iconsContainer),this.mainContainer.add(I),this.mainContainer.add(this.titleText),this.mainContainer.add(this.scoreContainer),this.mainContainer.add(l),this.mainContainer.add(this.unlockText),this.mainContainer.add(C),this.mainContainer.add(M),A.add(this.mainContainer),this.currentPage=0,this.mainContainer.setVisible(!1)}show(A){return super.show(A),this.headerBgX=this.headerBg.getTopRight().x,this.updateAchvIcons(),this.mainContainer.setVisible(!0),this.setCursor(0),this.setScrollCursor(0),this.scrollBar.setTotalRows(Math.ceil(this.currentTotal/this.COLS)),this.scrollBar.setScrollCursor(0),this.getUi().moveTo(this.mainContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}showAchv(A){const s=this.scene.gameData.gender??vt.MALE,R=vt[s].toLowerCase();A.name=D.t(`achv:${A.localizationKey}.name`,{context:R}),A.description=s1(A.localizationKey);const n=this.scene.gameData.achvUnlocks,I=n.hasOwnProperty(A.id),a=!I&&A.secret&&(!A.parentId||!n.hasOwnProperty(A.parentId));this.titleText.setText(I?A.name:"???"),this.showText(a?"":A.description),this.scoreText.setText(`${A.score}pt`),this.unlockText.setText(I?new Date(n[A.id]).toLocaleDateString():D.t("achv:Locked.name"))}showVoucher(A){const s=this.scene.gameData.voucherUnlocks,R=s.hasOwnProperty(A.id);this.titleText.setText(Bl(A.voucherType)),this.showText(A.description),this.unlockText.setText(R?new Date(s[A.id]).toLocaleDateString():D.t("voucher:locked"))}processInput(A){const s=this.getUi();let R=!1;if(A===b.ACTION&&(R=!0,this.setScrollCursor(0),this.currentPage===0?(this.currentPage=1,this.updateVoucherIcons()):this.currentPage===1&&(this.currentPage=0,this.updateAchvIcons()),this.setCursor(0,!0),this.scrollBar.setTotalRows(Math.ceil(this.currentTotal/this.COLS)),this.scrollBar.setScrollCursor(0),this.mainContainer.update()),A===b.CANCEL)R=!0,this.scene.ui.revertMode();else{const n=Math.floor(this.cursor/this.COLS),I=this.scrollCursor*this.COLS;switch(A){case b.UP:if(this.cursor<this.COLS)if(this.scrollCursor)R=this.setScrollCursor(this.scrollCursor-1);else{R=this.setScrollCursor(Math.ceil(this.currentTotal/this.COLS)-this.ROWS);let r=this.cursor+(this.ROWS-1)*this.COLS;r>this.currentTotal-this.scrollCursor*this.COLS-1&&(r-=this.COLS),R=R&&this.setCursor(r)}else R=this.setCursor(this.cursor-this.COLS);break;case b.DOWN:const a=I+1<this.currentTotal;n>=this.ROWS-1?this.scrollCursor<Math.ceil(this.currentTotal/this.COLS)-this.ROWS&&a?R=this.setScrollCursor(this.scrollCursor+1):R=this.setScrollCursor(0)&&this.setCursor(this.cursor%this.COLS):a&&(R=this.setCursor(Math.min(this.cursor+this.COLS,this.currentTotal-I-1)));break;case b.LEFT:this.cursor%this.COLS===0?R=this.setCursor(Math.min(this.cursor+this.COLS-1,this.currentTotal-I-1)):R=this.setCursor(this.cursor-1);break;case b.RIGHT:(this.cursor+1)%this.COLS===0||this.cursor+I===this.currentTotal-1?R=this.setCursor(this.cursor-this.cursor%this.COLS):R=this.setCursor(this.cursor+1);break}}return R&&s.playSelect(),R}setCursor(A,s){const R=super.setCursor(A);let n=R;if(this.cursorObj||(this.cursorObj=this.scene.add.nineslice(0,0,"select_cursor_highlight",void 0,16,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.iconsContainer.add(this.cursorObj),n=!0),this.cursorObj.setPositionRelative(this.icons[this.cursor],0,0),n||s)switch(this.currentPage){case 0:s&&(this.titleBg.width=174,this.titleText.x=this.titleBg.width/2,this.scoreContainer.setVisible(!0)),this.showAchv(lt[Object.keys(lt)[A+this.scrollCursor*this.COLS]]);break;case 1:s&&(this.titleBg.width=220,this.titleText.x=this.titleBg.width/2,this.scoreContainer.setVisible(!1)),this.showVoucher(Ms[Object.keys(Ms)[A+this.scrollCursor*this.COLS]]);break}return R}setScrollCursor(A){if(A===this.scrollCursor)return!1;this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor);const s=Math.min(this.cursor,this.currentTotal-this.scrollCursor*this.COLS-1);switch(s!==this.cursor&&this.setCursor(s),this.currentPage){case 0:this.updateAchvIcons(),this.showAchv(lt[Object.keys(lt)[this.cursor+this.scrollCursor*this.COLS]]);break;case 1:this.updateVoucherIcons(),this.showVoucher(Ms[Object.keys(Ms)[this.cursor+this.scrollCursor*this.COLS]]);break}return!0}updateAchvIcons(){this.headerText.text=this.achvsName,this.headerActionText.text=this.vouchersName;const A=this.headerBgX-this.headerActionText.displayWidth-8;this.headerActionText.setX(A),this.headerActionButton.setX(A-this.headerActionButton.displayWidth-4);const s=this.scene.gameData.achvUnlocks,R=this.scrollCursor*this.COLS,n=this.ROWS*this.COLS,I=Object.values(lt).slice(R,n+R);I.forEach((a,r)=>{const S=this.icons[r],o=s.hasOwnProperty(a.id),l=!o&&a.secret&&(!a.parentId||!s.hasOwnProperty(a.parentId)),C=!l&&!o;S.setFrame(l?"unknown":a.iconImage),S.setVisible(!0),C?S.setTintFill(0):S.clearTint()}),I.length<this.icons.length&&this.icons.slice(I.length).map(a=>a.setVisible(!1)),this.currentTotal=this.achvsTotal}updateVoucherIcons(){this.headerText.text=this.vouchersName,this.headerActionText.text=this.achvsName;const A=this.headerBgX-this.headerActionText.displayWidth-8;this.headerActionText.setX(A),this.headerActionButton.setX(A-this.headerActionButton.displayWidth-4);const s=this.scene.gameData.voucherUnlocks,R=this.scrollCursor*this.COLS,n=this.ROWS*this.COLS,I=Object.values(Ms).slice(R,n+R);I.forEach((a,r)=>{const S=this.icons[r],o=s.hasOwnProperty(a.id);S.setFrame(gn(a.voucherType)),S.setVisible(!0),o?S.clearTint():S.setTintFill(0)}),I.length<this.icons.length&&this.icons.slice(I.length).map(a=>a.setVisible(!1)),this.currentTotal=this.vouchersTotal}clear(){super.clear(),this.currentPage=0,this.mainContainer.setVisible(!1),this.setScrollCursor(0),this.setCursor(0,!0),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};L(jK,"AchvsUiHandler");let K0=jK;const em=class em extends ZT{constructor(A,s=Oe.OPTION_SELECT){super(A,s)}getWindowWidth(){return 64}};L(em,"OptionSelectUiHandler");let OS=em;const tm=class tm extends Ws{constructor(A){super(A,Oe.EGG_HATCH_SCENE),this.eventTarget=new EventTarget}setup(){this.eggHatchContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.scene.fieldUI.add(this.eggHatchContainer);const A=this.scene.anims.generateFrameNames("egg_lightrays",{start:0,end:3});this.scene.anims.exists("egg_lightrays")||this.scene.anims.create({key:"egg_lightrays",frames:A,frameRate:32})}show(A){return super.show(A),this.getUi().showText("",0),this.scene.setModifiersVisible(!1),!0}processInput(A){if(A===b.ACTION||A===b.CANCEL){const s=this.scene.getCurrentPhase();if(s instanceof nC&&s.trySkip())return!0}return this.scene.ui.getMessageHandler().processInput(A)}setCursor(A){return!1}clear(){super.clear(),this.eggHatchContainer.removeAll(!0),this.getUi().hideTooltip()}};L(tm,"EggHatchSceneHandler");let m0=tm;const Am=class Am{constructor(A,s,R){this.handler=A,this.ROWS=s,this.COLUMNS=R,this.scrollCursor=0,this.cursor=0,this.totalElements=s*R}withScrollBar(A){return this.scrollBar=A,this.scrollBar.setTotalRows(Math.ceil(this.totalElements/this.COLUMNS)),this}withUpdateGridCallBack(A){return this.updateGridCallback=A,this}withUpdateSingleElementCallback(A){return this.updateDetailsCallback=A,this}setTotalElements(A){this.totalElements=A,this.scrollBar&&this.scrollBar.setTotalRows(Math.ceil(this.totalElements/this.COLUMNS)),this.setScrollCursor(0)}getItemOffset(){return this.scrollCursor*this.COLUMNS}processInput(A){let s=!1;const R=Math.min(this.ROWS,Math.ceil(this.totalElements/this.COLUMNS)),n=Math.max(0,Math.ceil(this.totalElements/this.COLUMNS)-R),I=Math.floor(this.cursor/this.COLUMNS),a=this.cursor%this.COLUMNS,r=this.scrollCursor*this.COLUMNS,S=Math.min(this.totalElements-1,this.totalElements-n*this.COLUMNS-1);switch(A){case b.UP:if(I>0)s=this.setCursor(this.cursor-this.COLUMNS);else if(this.scrollCursor>0)s=this.setScrollCursor(this.scrollCursor-1);else{let o=this.cursor+(R-1)*this.COLUMNS;o>S&&(o-=this.COLUMNS),s=this.setScrollCursor(n,o)}break;case b.DOWN:I<R-1?s=this.setCursor(Math.min(this.cursor+this.COLUMNS,this.totalElements-r-1)):this.scrollCursor<n?s=this.setScrollCursor(this.scrollCursor+1):s=this.setScrollCursor(0,this.cursor%this.COLUMNS);break;case b.LEFT:a>0?s=this.setCursor(this.cursor-1):this.scrollCursor===n&&I===R-1?s=this.setCursor(S):s=this.setCursor(this.cursor+this.COLUMNS-1);break;case b.RIGHT:a<this.COLUMNS-1&&this.cursor+r<this.totalElements-1?s=this.setCursor(this.cursor+1):s=this.setCursor(this.cursor-a);break}return s}reset(){this.setScrollCursor(0),this.setCursor(0)}setCursor(A){return this.cursor=A,this.handler.setCursor(A)}setScrollCursor(A,s){const R=A!==this.scrollCursor;R&&(this.scrollCursor=A,this.scrollBar&&this.scrollBar.setScrollCursor(A),this.updateGridCallback&&this.updateGridCallback());let n=!1;const I=this.cursor+this.scrollCursor*this.COLUMNS;return s!==void 0?n=this.setCursor(s):I>=this.totalElements?n=this.setCursor(this.totalElements-this.scrollCursor*this.COLUMNS-1):R&&this.updateDetailsCallback&&this.updateDetailsCallback(I),R||n}};L(Am,"ScrollableGridUiHandler");let fC=Am;const Em=class Em extends ps{constructor(A){super(A,Oe.EGG_LIST),this.ROWS=9,this.COLUMNS=11}setup(){const A=this.getUi();this.eggListContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.eggListContainer.setVisible(!1),A.add(this.eggListContainer);const s=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,26720);s.setOrigin(0,0),this.eggListContainer.add(s);const R=this.scene.add.image(0,0,"egg_list_bg");R.setOrigin(0,0),this.eggListContainer.add(R),this.eggListContainer.add(_t(this.scene,1,85,106,22)),this.eggListContainer.add(_t(this.scene,1,102,106,50,!0)),this.eggListContainer.add(_t(this.scene,1,147,106,32,!0)),this.eggListContainer.add(_t(this.scene,107,1,212,178)),this.iconAnimHandler=new Ur,this.iconAnimHandler.setup(this.scene),this.eggNameText=le(this.scene,8,68,"",X.SUMMARY),this.eggNameText.setOrigin(0,0),this.eggListContainer.add(this.eggNameText),this.eggDateText=le(this.scene,8,91,"",X.TOOLTIP_CONTENT),this.eggListContainer.add(this.eggDateText),this.eggHatchWavesText=le(this.scene,8,108,"",X.TOOLTIP_CONTENT),this.eggHatchWavesText.setWordWrapWidth(540),this.eggListContainer.add(this.eggHatchWavesText),this.eggGachaInfoText=le(this.scene,8,152,"",X.TOOLTIP_CONTENT),this.eggGachaInfoText.setWordWrapWidth(540),this.eggListContainer.add(this.eggGachaInfoText),this.eggListIconContainer=this.scene.add.container(113,5),this.eggListContainer.add(this.eggListIconContainer),this.cursorObj=this.scene.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.eggListContainer.add(this.cursorObj),this.eggSprite=this.scene.add.sprite(54,37,"egg"),this.eggListContainer.add(this.eggSprite);const n=new Vi(this.scene,310,5,4,170,this.ROWS);this.eggListContainer.add(n),this.scrollGridHandler=new fC(this,this.ROWS,this.COLUMNS).withScrollBar(n).withUpdateGridCallBack(()=>this.updateEggIcons()).withUpdateSingleElementCallback(a=>this.setEggDetails(a)),this.eggListMessageBoxContainer=this.scene.add.container(0,this.scene.game.canvas.height/6),this.eggListMessageBoxContainer.setVisible(!1),this.eggListContainer.add(this.eggListMessageBoxContainer);const I=_t(this.scene,1,-1,318,28);I.setOrigin(0,1),this.eggListMessageBoxContainer.add(I),this.message=le(this.scene,8,-8,"",X.WINDOW,{maxLines:1}),this.message.setOrigin(0,1),this.eggListMessageBoxContainer.add(this.message),this.cursor=-1}show(A){return super.show(A),this.initEggIcons(),this.getUi().bringToTop(this.eggListContainer),this.eggListContainer.setVisible(!0),this.scrollGridHandler.setTotalElements(this.scene.gameData.eggs.length),this.updateEggIcons(),this.setCursor(0),!0}initEggIcons(){this.eggIcons=[];for(let A=0;A<Math.min(this.ROWS*this.COLUMNS,this.scene.gameData.eggs.length);A++){const s=A%this.COLUMNS*18,R=Math.floor(A/this.COLUMNS)*18,n=this.scene.add.sprite(s-2,R+2,"egg_icons");n.setScale(.5),n.setOrigin(0,0),this.eggListIconContainer.add(n),this.eggIcons.push(n)}}updateEggIcons(){const A=this.scrollGridHandler.getItemOffset(),s=Math.min(this.eggIcons.length,this.scene.gameData.eggs.length-A);this.eggIcons.forEach((R,n)=>{if(n!==this.cursor&&this.iconAnimHandler.addOrUpdate(R,Qs.NONE),n<s){const I=this.scene.gameData.eggs[n+A];R.setFrame(I.getKey()),R.setVisible(!0)}else R.setVisible(!1)})}setEggDetails(A){const s=this.scene.gameData.eggs[A];this.eggSprite.setFrame(`egg_${s.getKey()}`),this.eggNameText.setText(`${D.t("egg:egg")} (${s.getEggDescriptor()})`),this.eggDateText.setText(new Date(s.timestamp).toLocaleString(void 0,{weekday:"short",year:"numeric",month:"2-digit",day:"numeric"})),this.eggHatchWavesText.setText(s.getEggHatchWavesMessage()),this.eggGachaInfoText.setText(s.getEggTypeDescriptor(this.scene))}processInput(A){const s=this.getUi();let R=!1;const n=!1;return A===b.CANCEL?(s.revertMode(),R=!0):R=this.scrollGridHandler.processInput(A),R&&s.playSelect(),R||n}setCursor(A){let s=!1;const R=this.cursor;if(s=super.setCursor(A),s){const n=this.eggIcons[A];this.cursorObj.setPositionRelative(n,114,5),R>-1&&this.iconAnimHandler.addOrUpdate(this.eggIcons[R],Qs.NONE),this.iconAnimHandler.addOrUpdate(n,Qs.ACTIVE),this.setEggDetails(A+this.scrollGridHandler.getItemOffset())}return s}clear(){super.clear(),this.scrollGridHandler.reset(),this.cursor=-1,this.eggListContainer.setVisible(!1),this.iconAnimHandler.removeAll(),this.eggListIconContainer.removeAll(!0),this.eggIcons=[]}};L(Em,"EggListUiHandler");let F0=Em;const sm=class sm extends ps{constructor(A){super(A,Oe.EGG_GACHA),this.scale=.1666666667,this.gachaContainers=[],this.gachaKnobs=[],this.gachaHatches=[],this.gachaInfoContainers=[],this.voucherCountLabels=[],this.defaultText=D.t("egg:selectMachine")}setup(){this.gachaCursor=0,this.scale=un(X.WINDOW,this.scene.uiTheme).scale;const A=this.getUi();this.eggGachaContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.eggGachaContainer.setVisible(!1),A.add(this.eggGachaContainer);const s=this.scene.add.nineslice(0,0,"default_bg",void 0,320,180,0,0,16,0);s.setOrigin(0,0),this.eggGachaContainer.add(s);const R=this.scene.anims.generateFrameNames("gacha_hatch",{suffix:".png",start:1,end:4});this.scene.anims.exists("open")||this.scene.anims.create({key:"open",frames:R,frameRate:12}),this.scene.anims.exists("close")||this.scene.anims.create({key:"close",frames:R.reverse(),frameRate:12}),uE(Pn).forEach((u,h)=>{const P=Pn[u].toString().toLowerCase(),G=this.scene.add.container(180*h,18),d=this.scene.add.sprite(0,0,`gacha_${P}`);d.setOrigin(0,0);const H=this.scene.add.sprite(115,80,`gacha_underlay_${P}`);H.setOrigin(0,0);const f=this.scene.add.sprite(0,0,"gacha_eggs");f.setOrigin(0,0);const K=this.scene.add.sprite(0,0,"gacha_glass");K.setOrigin(0,0);const W=this.scene.add.container(160,46),V=D.resolvedLanguage??"en";let k=X.WINDOW_ALT,Q=4,j=0,J=-20,ne=6;["de","es-ES","fr","ko","pt-BR"].includes(V)&&(k=X.SMALLER_WINDOW_ALT,Q=2,j=2);let x=Q,q=j;["de","es-ES"].includes(V)&&(J=-25,ne=10,x=-6,q=0);const F=le(this.scene,Q,j,D.t("egg:legendaryUPGacha"),k);switch(F.setOrigin(0,0),W.add(F),u){case Pn.LEGENDARY:["de","es-ES"].includes(V)&&(F.setAlign("center"),F.setY(0)),["pt-BR"].includes(V)?F.setX(x-2):F.setX(x),F.setY(q);const ue=this.scene.add.sprite(J,ne,"pokemon_icons_0");["pt-BR"].includes(V)&&ue.setX(J-2),ue.setScale(.5),ue.setOrigin(0,.5),W.add(ue);break;case Pn.MOVE:["de","es-ES","fr","pt-BR"].includes(V)&&(F.setAlign("center"),F.setY(0)),F.setText(D.t("egg:moveUPGacha")),F.setX(0),F.setOrigin(.5,0);break;case Pn.SHINY:["de","fr","ko"].includes(V)&&(F.setAlign("center"),F.setY(0)),F.setText(D.t("egg:shinyUPGacha")),F.setX(0),F.setOrigin(.5,0);break}const Te=this.scene.add.sprite(191,89,"gacha_knob"),He=this.scene.add.sprite(115,73,"gacha_hatch");He.setOrigin(0,0),G.add(f),G.add(H),G.add(d),G.add(K),G.add(Te),G.add(He),G.add(W),K.setAlpha(.5),He.setAlpha(.9),He.on("animationupdate",(ue,me)=>H.setFrame(me.textureFrame==="4.png"?"open_hatch":"default")),this.gachaContainers.push(G),this.gachaKnobs.push(Te),this.gachaHatches.push(He),this.gachaInfoContainers.push(W),this.eggGachaContainer.add(G),this.updateGachaInfo(h)}),this.eggGachaOptionsContainer=this.scene.add.container(),this.eggGachaOptionsContainer=this.scene.add.container(this.scene.game.canvas.width/6,148),this.eggGachaContainer.add(this.eggGachaOptionsContainer),this.eggGachaOptionSelectBg=_t(this.scene,0,0,96,16+576*this.scale),this.eggGachaOptionSelectBg.setOrigin(1,1),this.eggGachaOptionsContainer.add(this.eggGachaOptionSelectBg);const n="x1",a=[{multiplier:n,description:`1 ${D.t("egg:pull")}`,icon:gn(aE.REGULAR)},{multiplier:"x10",description:`10 ${D.t("egg:pulls")}`,icon:gn(aE.REGULAR)},{multiplier:n,description:`5 ${D.t("egg:pulls")}`,icon:gn(aE.PLUS)},{multiplier:n,description:`10 ${D.t("egg:pulls")}`,icon:gn(aE.PREMIUM)},{multiplier:n,description:`25 ${D.t("egg:pulls")}`,icon:gn(aE.GOLDEN)}],r=D.resolvedLanguage??"en",S=a.map(u=>{const h=u.description.split(" ");return h[0].length<2&&(h[0]+=["zh","ko"].includes(r.substring(0,2))?" ":"  "),u.multiplier===n&&(h[0]=" "+h[0]),`     ${u.multiplier.padEnd(5)}${h.join(" ")}`}).join(`
`),o=le(this.scene,0,0,`${S}
${D.t("menu:cancel")}`,X.WINDOW);o.setLineSpacing(28),o.setFontSize("80px"),this.eggGachaOptionsContainer.add(o),o.setPositionRelative(this.eggGachaOptionSelectBg,16,9),a.forEach((u,h)=>{const P=this.scene.add.sprite(0,0,"items",u.icon);P.setScale(3*this.scale),P.setPositionRelative(this.eggGachaOptionSelectBg,20,9+(48+h*96)*this.scale),this.eggGachaOptionsContainer.add(P)}),this.eggGachaContainer.add(this.eggGachaOptionsContainer),new Array(IO(aE).length).fill(null).map((u,h)=>{const P=this.scene.add.container(this.scene.game.canvas.width/6-56*h,0),G=_t(this.scene,0,0,56,22);G.setOrigin(1,0),P.add(G);const d=le(this.scene,-48,3,"0",X.WINDOW);d.setOrigin(0,0),P.add(d),this.voucherCountLabels.push(d);const H=gn(h),f=this.scene.add.sprite(-19,2,"items",H);f.setOrigin(0,0),f.setScale(.5),P.add(f),this.eggGachaContainer.add(P)}),this.eggGachaOverlay=this.scene.add.rectangle(0,0,s.displayWidth,s.displayHeight,0),this.eggGachaOverlay.setOrigin(0,0),this.eggGachaOverlay.setAlpha(0),this.eggGachaContainer.add(this.eggGachaOverlay),this.eggGachaSummaryContainer=this.scene.add.container(0,0),this.eggGachaSummaryContainer.setVisible(!1),this.eggGachaContainer.add(this.eggGachaSummaryContainer);const l=this.scene.add.container(0,148),C=_t(this.scene,0,0,320,32);C.setOrigin(0,0),l.add(C),this.eggGachaMessageBox=C;const M=le(this.scene,8,8,"",X.WINDOW,{maxLines:2});M.setOrigin(0,0),l.add(M),this.message=M,this.initTutorialOverlay(this.eggGachaContainer),this.eggGachaContainer.add(l),this.initPromptSprite(l),this.setCursor(0)}show(A){super.show(A),this.getUi().showText(this.defaultText,0),this.setGachaCursor(1);for(let s=0;s<this.gachaContainers.length;s++)this.updateGachaInfo(s);return this.updateVoucherCounts(),this.getUi().bringToTop(this.eggGachaContainer),this.eggGachaContainer.setVisible(!0),Wi(this.scene,JR.Egg_Gacha),!0}getDelayValue(A){return this.transitioning&&this.transitionCancelled&&(A=Math.ceil(A/5)),Et(A)}pull(A=0,s=0,R){Ye.EGG_GACHA_PULL_COUNT_OVERRIDE&&!s&&(A=Ye.EGG_GACHA_PULL_COUNT_OVERRIDE),this.eggGachaOptionsContainer.setVisible(!1),this.setTransitioning(!0);const n=L(()=>{if(this.transitionCancelled)return this.showSummary(R);const I=this.scene.add.sprite(127,75,"egg",`egg_${R[s].getKey()}`);I.setScale(.5),this.gachaContainers[this.gachaCursor].add(I),this.gachaContainers[this.gachaCursor].moveTo(I,2);const a=L(()=>{this.scene.playSound("se/gacha_running",{loop:!0}),this.scene.time.delayedCall(this.getDelayValue(s?500:1250),()=>{this.scene.playSound("se/gacha_dispense"),this.scene.time.delayedCall(this.getDelayValue(750),()=>{this.scene.sound.stopByKey("se/gacha_running"),this.scene.tweens.add({targets:I,duration:this.getDelayValue(350),y:95,ease:"Bounce.easeOut",onComplete:L(()=>{this.scene.time.delayedCall(this.getDelayValue(125),()=>{this.scene.playSound("se/pb_catch"),this.gachaHatches[this.gachaCursor].play("open"),this.scene.tweens.add({targets:I,duration:this.getDelayValue(350),scale:.75,ease:"Sine.easeIn"}),this.scene.tweens.add({targets:I,y:110,duration:this.getDelayValue(350),ease:"Back.easeOut",onComplete:L(()=>{this.gachaHatches[this.gachaCursor].play("close"),this.scene.tweens.add({targets:I,y:200,duration:this.getDelayValue(350),ease:"Cubic.easeIn",onComplete:L(()=>{++s<A?this.pull(A,s,R):this.showSummary(R)},"onComplete")})},"onComplete")})})},"onComplete")})})})},"doPullAnim");s?a():(this.scene.playSound("se/gacha_dial"),this.scene.tweens.add({targets:this.gachaKnobs[this.gachaCursor],duration:this.getDelayValue(350),angle:90,ease:"Cubic.easeInOut",onComplete:L(()=>{this.scene.tweens.add({targets:this.gachaKnobs[this.gachaCursor],duration:this.getDelayValue(350),angle:0,ease:"Sine.easeInOut"}),this.scene.time.delayedCall(this.getDelayValue(350),a)},"onComplete")}))},"doPull");if(A||(A=1),s||(s=0),!R){R=[];for(let I=1;I<=A;I++){const a={scene:this.scene,pulled:!0,sourceType:this.gachaCursor};if(I===A){const S=this.getGuaranteedEggTierFromPullCount(A);!R.some(o=>o.tier>=S)&&S!==m.COMMON&&(a.tier=S)}const r=new gi(a);R.push(r)}R=aO(R),(this.scene.currentBattle?this.scene.gameData.saveAll(this.scene,!0,!0,!0):this.scene.gameData.saveSystem()).then(I=>{if(!I)return this.scene.reset(!0);n()});return}n()}getGuaranteedEggTierFromPullCount(A){switch(A){case 10:return m.RARE;case 25:return m.EPIC;default:return m.COMMON}}showSummary(A){const s=this.getDelayValue(750);this.summaryFinished=!1,this.transitionCancelled=!1,this.setTransitioning(!0),this.eggGachaSummaryContainer.setVisible(!0);const R=A.length<20?1:.5;this.scene.tweens.add({targets:this.eggGachaOverlay,alpha:.5,ease:"Sine.easeOut",duration:s,onComplete:L(()=>{const I=Math.ceil(A.length/5),a=Math.min(A.length,5),r=this.eggGachaOverlay.displayHeight-this.eggGachaMessageBox.displayHeight;A.map((o,l)=>{const C=l%5,M=Math.floor(l/5),u=this.eggGachaOverlay.displayWidth/(a+2),h=r/(I+2),P=h/2*(M/Math.max(I-1,1))+h/4,G=this.scene.add.container(u*(C+1)+u*.5,h*(M+1)+P);G.setScale(1e-4);const d=this.scene.add.sprite(0,0,"egg",`egg_${o.getKey()}`);G.add(d);const H=le(this.scene,0,14,o.getEggDescriptor(),X.PARTY,{align:"center"});return H.setOrigin(.5,0),H.setTint($8(o.isManaphyEgg()?m.EPIC:o.tier)),G.add(H),this.eggGachaSummaryContainer.addAt(G,0),G}).forEach((o,l)=>{const C=this.transitionCancelled?0:this.getDelayValue(l*100);this.scene.time.delayedCall(C,()=>this.scene.tweens.add({targets:o,duration:this.getDelayValue(350),scale:R,ease:"Sine.easeOut",onComplete:L(()=>{l===A.length-1&&(this.setTransitioning(!1),this.summaryFinished=!0)},"onComplete")}))})},"onComplete")})}hideSummary(){this.setTransitioning(!0),this.scene.tweens.add({targets:[this.eggGachaOverlay,this.eggGachaSummaryContainer],alpha:0,duration:this.getDelayValue(250),ease:"Cubic.easeIn",onComplete:L(()=>{this.eggGachaSummaryContainer.setVisible(!1),this.eggGachaSummaryContainer.setAlpha(1),this.eggGachaSummaryContainer.removeAll(!0),this.setTransitioning(!1),this.summaryFinished=!1,this.eggGachaOptionsContainer.setVisible(!0)},"onComplete")})}updateGachaInfo(A){const s=this.gachaInfoContainers[A];switch(A){case Pn.LEGENDARY:const R=xe(dc(this.scene,new Date().getTime()));s.getAt(1).setTexture(R.getIconAtlasKey(),R.getIconId(!1));break}}consumeVouchers(A,s){this.scene.gameData.voucherCounts[A]=Math.max(this.scene.gameData.voucherCounts[A]-s,0),this.updateVoucherCounts()}updateVoucherCounts(){this.voucherCountLabels.forEach((A,s)=>{A.setText(this.scene.gameData.voucherCounts[s].toString())})}showText(A,s,R,n,I,a){A||(A=this.defaultText),(A==null?void 0:A.indexOf(`
`))===-1?(this.eggGachaMessageBox.setSize(320,32),this.eggGachaMessageBox.setY(0),this.message.setY(8)):(this.eggGachaMessageBox.setSize(320,46),this.eggGachaMessageBox.setY(-14),this.message.setY(-6)),super.showText(A,s,R,n,I,a)}showError(A){this.showText(A,void 0,()=>this.showText(this.defaultText),Et(1500))}setTransitioning(A){this.transitioning!==A&&(this.transitioning=A,this.transitionCancelled=!1)}processInput(A){const s=this.getUi();let R=!1,n=!1;if(this.transitioning)if(!this.transitionCancelled&&(A===b.ACTION||A===b.CANCEL))this.transitionCancelled=!0,R=!0;else return!1;else if(this.eggGachaSummaryContainer.visible)this.summaryFinished&&(A===b.ACTION||A===b.CANCEL)&&(this.hideSummary(),R=!0);else switch(A){case b.ACTION:switch(this.cursor){case 0:!this.scene.gameData.voucherCounts[aE.REGULAR]&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE?(n=!0,this.showError(D.t("egg:notEnoughVouchers"))):this.scene.gameData.eggs.length<99||Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(aE.REGULAR,1),this.pull(),R=!0):(n=!0,this.showError(D.t("egg:tooManyEggs")));break;case 2:!this.scene.gameData.voucherCounts[aE.PLUS]&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE?(n=!0,this.showError(D.t("egg:notEnoughVouchers"))):this.scene.gameData.eggs.length<95||Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(aE.PLUS,1),this.pull(5),R=!0):(n=!0,this.showError(D.t("egg:tooManyEggs")));break;case 1:case 3:this.cursor===1&&this.scene.gameData.voucherCounts[aE.REGULAR]<10&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.cursor===3&&!this.scene.gameData.voucherCounts[aE.PREMIUM]&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE?(n=!0,this.showError(D.t("egg:notEnoughVouchers"))):this.scene.gameData.eggs.length<90||Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(this.cursor===3?Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(aE.PREMIUM,1):Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(aE.REGULAR,10),this.pull(10),R=!0):(n=!0,this.showError(D.t("egg:tooManyEggs")));break;case 4:!this.scene.gameData.voucherCounts[aE.GOLDEN]&&!Ye.EGG_FREE_GACHA_PULLS_OVERRIDE?(n=!0,this.showError(D.t("egg:notEnoughVouchers"))):this.scene.gameData.eggs.length<75||Ye.UNLIMITED_EGG_COUNT_OVERRIDE?(Ye.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(aE.GOLDEN,1),this.pull(25),R=!0):(n=!0,this.showError(D.t("egg:tooManyEggs")));break;case 5:s.revertMode(),R=!0;break}break;case b.CANCEL:this.getUi().revertMode(),R=!0;break;case b.UP:this.cursor&&(R=this.setCursor(this.cursor-1));break;case b.DOWN:this.cursor<5&&(R=this.setCursor(this.cursor+1));break;case b.LEFT:this.gachaCursor&&(R=this.setGachaCursor(this.gachaCursor-1));break;case b.RIGHT:this.gachaCursor<IO(Pn).length-1&&(R=this.setGachaCursor(this.gachaCursor+1));break}return R?s.playSelect():n&&s.playError(),R||n}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.eggGachaOptionsContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.eggGachaOptionSelectBg,10,9+(48+this.cursor*96)*this.scale),s}setGachaCursor(A){const R=this.gachaCursor!==A;return R&&(this.gachaCursor=A,this.setTransitioning(!0),this.scene.tweens.add({targets:this.gachaContainers,duration:this.eggGachaContainer.visible?500:0,x:L((n,I,a,r)=>180*(r-A),"x"),ease:"Cubic.easeInOut",onComplete:L(()=>this.setTransitioning(!1),"onComplete")})),R}clear(){super.clear(),this.setGachaCursor(-1),this.eggGachaContainer.setVisible(!1)}};L(sm,"EggGachaUiHandler");let p0=sm;var J6={exports:{}};/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/(function(E,A){(function(s){E.exports=s()})(function(){return L(function s(R,n,I){function a(o,l){if(!n[o]){if(!R[o]){var C=typeof UL=="function"&&UL;if(!l&&C)return C(o,!0);if(r)return r(o,!0);var M=new Error("Cannot find module '"+o+"'");throw M.code="MODULE_NOT_FOUND",M}var u=n[o]={exports:{}};R[o][0].call(u.exports,function(h){var P=R[o][1][h];return a(P||h)},u,u.exports,s,R,n,I)}return n[o].exports}L(a,"u");for(var r=typeof UL=="function"&&UL,S=0;S<I.length;S++)a(I[S]);return a},"s")({1:[function(s,R,n){var I=s("./utils"),a=s("./support"),r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n.encode=function(S){for(var o,l,C,M,u,h,P,G=[],d=0,H=S.length,f=H,K=I.getTypeOf(S)!=="string";d<S.length;)f=H-d,C=K?(o=S[d++],l=d<H?S[d++]:0,d<H?S[d++]:0):(o=S.charCodeAt(d++),l=d<H?S.charCodeAt(d++):0,d<H?S.charCodeAt(d++):0),M=o>>2,u=(3&o)<<4|l>>4,h=1<f?(15&l)<<2|C>>6:64,P=2<f?63&C:64,G.push(r.charAt(M)+r.charAt(u)+r.charAt(h)+r.charAt(P));return G.join("")},n.decode=function(S){var o,l,C,M,u,h,P=0,G=0,d="data:";if(S.substr(0,d.length)===d)throw new Error("Invalid base64 input, it looks like a data url.");var H,f=3*(S=S.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(S.charAt(S.length-1)===r.charAt(64)&&f--,S.charAt(S.length-2)===r.charAt(64)&&f--,f%1!=0)throw new Error("Invalid base64 input, bad content length.");for(H=a.uint8array?new Uint8Array(0|f):new Array(0|f);P<S.length;)o=r.indexOf(S.charAt(P++))<<2|(M=r.indexOf(S.charAt(P++)))>>4,l=(15&M)<<4|(u=r.indexOf(S.charAt(P++)))>>2,C=(3&u)<<6|(h=r.indexOf(S.charAt(P++))),H[G++]=o,u!==64&&(H[G++]=l),h!==64&&(H[G++]=C);return H}},{"./support":30,"./utils":32}],2:[function(s,R,n){var I=s("./external"),a=s("./stream/DataWorker"),r=s("./stream/Crc32Probe"),S=s("./stream/DataLengthProbe");function o(l,C,M,u,h){this.compressedSize=l,this.uncompressedSize=C,this.crc32=M,this.compression=u,this.compressedContent=h}L(o,"o"),o.prototype={getContentWorker:L(function(){var l=new a(I.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new S("data_length")),C=this;return l.on("end",function(){if(this.streamInfo.data_length!==C.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),l},"getContentWorker"),getCompressedWorker:L(function(){return new a(I.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)},"getCompressedWorker")},o.createWorkerFrom=function(l,C,M){return l.pipe(new r).pipe(new S("uncompressedSize")).pipe(C.compressWorker(M)).pipe(new S("compressedSize")).withStreamInfo("compression",C)},R.exports=o},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(s,R,n){var I=s("./stream/GenericWorker");n.STORE={magic:"\0\0",compressWorker:L(function(){return new I("STORE compression")},"compressWorker"),uncompressWorker:L(function(){return new I("STORE decompression")},"uncompressWorker")},n.DEFLATE=s("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(s,R,n){var I=s("./utils"),a=function(){for(var r,S=[],o=0;o<256;o++){r=o;for(var l=0;l<8;l++)r=1&r?3988292384^r>>>1:r>>>1;S[o]=r}return S}();R.exports=function(r,S){return r!==void 0&&r.length?I.getTypeOf(r)!=="string"?function(o,l,C,M){var u=a,h=M+C;o^=-1;for(var P=M;P<h;P++)o=o>>>8^u[255&(o^l[P])];return-1^o}(0|S,r,r.length,0):function(o,l,C,M){var u=a,h=M+C;o^=-1;for(var P=M;P<h;P++)o=o>>>8^u[255&(o^l.charCodeAt(P))];return-1^o}(0|S,r,r.length,0):0}},{"./utils":32}],5:[function(s,R,n){n.base64=!1,n.binary=!1,n.dir=!1,n.createFolders=!0,n.date=null,n.compression=null,n.compressionOptions=null,n.comment=null,n.unixPermissions=null,n.dosPermissions=null},{}],6:[function(s,R,n){var I=null;I=typeof Promise<"u"?Promise:s("lie"),R.exports={Promise:I}},{lie:37}],7:[function(s,R,n){var I=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Uint32Array<"u",a=s("pako"),r=s("./utils"),S=s("./stream/GenericWorker"),o=I?"uint8array":"array";function l(C,M){S.call(this,"FlateWorker/"+C),this._pako=null,this._pakoAction=C,this._pakoOptions=M,this.meta={}}L(l,"h"),n.magic="\b\0",r.inherits(l,S),l.prototype.processChunk=function(C){this.meta=C.meta,this._pako===null&&this._createPako(),this._pako.push(r.transformTo(o,C.data),!1)},l.prototype.flush=function(){S.prototype.flush.call(this),this._pako===null&&this._createPako(),this._pako.push([],!0)},l.prototype.cleanUp=function(){S.prototype.cleanUp.call(this),this._pako=null},l.prototype._createPako=function(){this._pako=new a[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var C=this;this._pako.onData=function(M){C.push({data:M,meta:C.meta})}},n.compressWorker=function(C){return new l("Deflate",C)},n.uncompressWorker=function(){return new l("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(s,R,n){function I(u,h){var P,G="";for(P=0;P<h;P++)G+=String.fromCharCode(255&u),u>>>=8;return G}L(I,"A");function a(u,h,P,G,d,H){var f,K,W=u.file,V=u.compression,k=H!==o.utf8encode,Q=r.transformTo("string",H(W.name)),j=r.transformTo("string",o.utf8encode(W.name)),J=W.comment,ne=r.transformTo("string",H(J)),x=r.transformTo("string",o.utf8encode(J)),q=j.length!==W.name.length,F=x.length!==J.length,Te="",He="",ue="",me=W.dir,Me=W.date,Ie={crc32:0,compressedSize:0,uncompressedSize:0};h&&!P||(Ie.crc32=u.crc32,Ie.compressedSize=u.compressedSize,Ie.uncompressedSize=u.uncompressedSize);var z=0;h&&(z|=8),k||!q&&!F||(z|=2048);var te=0,Le=0;me&&(te|=16),d==="UNIX"?(Le=798,te|=function(Be,st){var ft=Be;return Be||(ft=st?16893:33204),(65535&ft)<<16}(W.unixPermissions,me)):(Le=20,te|=function(Be){return 63&(Be||0)}(W.dosPermissions)),f=Me.getUTCHours(),f<<=6,f|=Me.getUTCMinutes(),f<<=5,f|=Me.getUTCSeconds()/2,K=Me.getUTCFullYear()-1980,K<<=4,K|=Me.getUTCMonth()+1,K<<=5,K|=Me.getUTCDate(),q&&(He=I(1,1)+I(l(Q),4)+j,Te+="up"+I(He.length,2)+He),F&&(ue=I(1,1)+I(l(ne),4)+x,Te+="uc"+I(ue.length,2)+ue);var Ue="";return Ue+=`
\0`,Ue+=I(z,2),Ue+=V.magic,Ue+=I(f,2),Ue+=I(K,2),Ue+=I(Ie.crc32,4),Ue+=I(Ie.compressedSize,4),Ue+=I(Ie.uncompressedSize,4),Ue+=I(Q.length,2),Ue+=I(Te.length,2),{fileRecord:C.LOCAL_FILE_HEADER+Ue+Q+Te,dirRecord:C.CENTRAL_FILE_HEADER+I(Le,2)+Ue+I(ne.length,2)+"\0\0\0\0"+I(te,4)+I(G,4)+Q+Te+ne}}L(a,"n");var r=s("../utils"),S=s("../stream/GenericWorker"),o=s("../utf8"),l=s("../crc32"),C=s("../signature");function M(u,h,P,G){S.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=h,this.zipPlatform=P,this.encodeFileName=G,this.streamFiles=u,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}L(M,"s"),r.inherits(M,S),M.prototype.push=function(u){var h=u.meta.percent||0,P=this.entriesCount,G=this._sources.length;this.accumulate?this.contentBuffer.push(u):(this.bytesWritten+=u.data.length,S.prototype.push.call(this,{data:u.data,meta:{currentFile:this.currentFile,percent:P?(h+100*(P-G-1))/P:100}}))},M.prototype.openedSource=function(u){this.currentSourceOffset=this.bytesWritten,this.currentFile=u.file.name;var h=this.streamFiles&&!u.file.dir;if(h){var P=a(u,h,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:P.fileRecord,meta:{percent:0}})}else this.accumulate=!0},M.prototype.closedSource=function(u){this.accumulate=!1;var h=this.streamFiles&&!u.file.dir,P=a(u,h,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(P.dirRecord),h)this.push({data:function(G){return C.DATA_DESCRIPTOR+I(G.crc32,4)+I(G.compressedSize,4)+I(G.uncompressedSize,4)}(u),meta:{percent:100}});else for(this.push({data:P.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},M.prototype.flush=function(){for(var u=this.bytesWritten,h=0;h<this.dirRecords.length;h++)this.push({data:this.dirRecords[h],meta:{percent:100}});var P=this.bytesWritten-u,G=function(d,H,f,K,W){var V=r.transformTo("string",W(K));return C.CENTRAL_DIRECTORY_END+"\0\0\0\0"+I(d,2)+I(d,2)+I(H,4)+I(f,4)+I(V.length,2)+V}(this.dirRecords.length,P,u,this.zipComment,this.encodeFileName);this.push({data:G,meta:{percent:100}})},M.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},M.prototype.registerPrevious=function(u){this._sources.push(u);var h=this;return u.on("data",function(P){h.processChunk(P)}),u.on("end",function(){h.closedSource(h.previous.streamInfo),h._sources.length?h.prepareNextSource():h.end()}),u.on("error",function(P){h.error(P)}),this},M.prototype.resume=function(){return!!S.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},M.prototype.error=function(u){var h=this._sources;if(!S.prototype.error.call(this,u))return!1;for(var P=0;P<h.length;P++)try{h[P].error(u)}catch{}return!0},M.prototype.lock=function(){S.prototype.lock.call(this);for(var u=this._sources,h=0;h<u.length;h++)u[h].lock()},R.exports=M},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(s,R,n){var I=s("../compressions"),a=s("./ZipFileWorker");n.generateWorker=function(r,S,o){var l=new a(S.streamFiles,o,S.platform,S.encodeFileName),C=0;try{r.forEach(function(M,u){C++;var h=function(H,f){var K=H||f,W=I[K];if(!W)throw new Error(K+" is not a valid compression method !");return W}(u.options.compression,S.compression),P=u.options.compressionOptions||S.compressionOptions||{},G=u.dir,d=u.date;u._compressWorker(h,P).withStreamInfo("file",{name:M,dir:G,date:d,comment:u.comment||"",unixPermissions:u.unixPermissions,dosPermissions:u.dosPermissions}).pipe(l)}),l.entriesCount=C}catch(M){l.error(M)}return l}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(s,R,n){function I(){if(!(this instanceof I))return new I;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var a=new I;for(var r in this)typeof this[r]!="function"&&(a[r]=this[r]);return a}}L(I,"n"),(I.prototype=s("./object")).loadAsync=s("./load"),I.support=s("./support"),I.defaults=s("./defaults"),I.version="3.10.1",I.loadAsync=function(a,r){return new I().loadAsync(a,r)},I.external=s("./external"),R.exports=I},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(s,R,n){var I=s("./utils"),a=s("./external"),r=s("./utf8"),S=s("./zipEntries"),o=s("./stream/Crc32Probe"),l=s("./nodejsUtils");function C(M){return new a.Promise(function(u,h){var P=M.decompressed.getContentWorker().pipe(new o);P.on("error",function(G){h(G)}).on("end",function(){P.streamInfo.crc32!==M.decompressed.crc32?h(new Error("Corrupted zip : CRC32 mismatch")):u()}).resume()})}L(C,"f"),R.exports=function(M,u){var h=this;return u=I.extend(u||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:r.utf8decode}),l.isNode&&l.isStream(M)?a.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):I.prepareContent("the loaded zip file",M,!0,u.optimizedBinaryString,u.base64).then(function(P){var G=new S(u);return G.load(P),G}).then(function(P){var G=[a.Promise.resolve(P)],d=P.files;if(u.checkCRC32)for(var H=0;H<d.length;H++)G.push(C(d[H]));return a.Promise.all(G)}).then(function(P){for(var G=P.shift(),d=G.files,H=0;H<d.length;H++){var f=d[H],K=f.fileNameStr,W=I.resolve(f.fileNameStr);h.file(W,f.decompressed,{binary:!0,optimizedBinaryString:!0,date:f.date,dir:f.dir,comment:f.fileCommentStr.length?f.fileCommentStr:null,unixPermissions:f.unixPermissions,dosPermissions:f.dosPermissions,createFolders:u.createFolders}),f.dir||(h.file(W).unsafeOriginalName=K)}return G.zipComment.length&&(h.comment=G.zipComment),h})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(s,R,n){var I=s("../utils"),a=s("../stream/GenericWorker");function r(S,o){a.call(this,"Nodejs stream input adapter for "+S),this._upstreamEnded=!1,this._bindStream(o)}L(r,"s"),I.inherits(r,a),r.prototype._bindStream=function(S){var o=this;(this._stream=S).pause(),S.on("data",function(l){o.push({data:l,meta:{percent:0}})}).on("error",function(l){o.isPaused?this.generatedError=l:o.error(l)}).on("end",function(){o.isPaused?o._upstreamEnded=!0:o.end()})},r.prototype.pause=function(){return!!a.prototype.pause.call(this)&&(this._stream.pause(),!0)},r.prototype.resume=function(){return!!a.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},R.exports=r},{"../stream/GenericWorker":28,"../utils":32}],13:[function(s,R,n){var I=s("readable-stream").Readable;function a(r,S,o){I.call(this,S),this._helper=r;var l=this;r.on("data",function(C,M){l.push(C)||l._helper.pause(),o&&o(M)}).on("error",function(C){l.emit("error",C)}).on("end",function(){l.push(null)})}L(a,"n"),s("../utils").inherits(a,I),a.prototype._read=function(){this._helper.resume()},R.exports=a},{"../utils":32,"readable-stream":16}],14:[function(s,R,n){R.exports={isNode:typeof Buffer<"u",newBufferFrom:L(function(I,a){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(I,a);if(typeof I=="number")throw new Error('The "data" argument must not be a number');return new Buffer(I,a)},"newBufferFrom"),allocBuffer:L(function(I){if(Buffer.alloc)return Buffer.alloc(I);var a=new Buffer(I);return a.fill(0),a},"allocBuffer"),isBuffer:L(function(I){return Buffer.isBuffer(I)},"isBuffer"),isStream:L(function(I){return I&&typeof I.on=="function"&&typeof I.pause=="function"&&typeof I.resume=="function"},"isStream")}},{}],15:[function(s,R,n){function I(W,V,k){var Q,j=r.getTypeOf(V),J=r.extend(k||{},l);J.date=J.date||new Date,J.compression!==null&&(J.compression=J.compression.toUpperCase()),typeof J.unixPermissions=="string"&&(J.unixPermissions=parseInt(J.unixPermissions,8)),J.unixPermissions&&16384&J.unixPermissions&&(J.dir=!0),J.dosPermissions&&16&J.dosPermissions&&(J.dir=!0),J.dir&&(W=d(W)),J.createFolders&&(Q=G(W))&&H.call(this,Q,!0);var ne=j==="string"&&J.binary===!1&&J.base64===!1;k&&k.binary!==void 0||(J.binary=!ne),(V instanceof C&&V.uncompressedSize===0||J.dir||!V||V.length===0)&&(J.base64=!1,J.binary=!0,V="",J.compression="STORE",j="string");var x=null;x=V instanceof C||V instanceof S?V:h.isNode&&h.isStream(V)?new P(W,V):r.prepareContent(W,V,J.binary,J.optimizedBinaryString,J.base64);var q=new M(W,x,J);this.files[W]=q}L(I,"s");var a=s("./utf8"),r=s("./utils"),S=s("./stream/GenericWorker"),o=s("./stream/StreamHelper"),l=s("./defaults"),C=s("./compressedObject"),M=s("./zipObject"),u=s("./generate"),h=s("./nodejsUtils"),P=s("./nodejs/NodejsStreamInputAdapter"),G=L(function(W){W.slice(-1)==="/"&&(W=W.substring(0,W.length-1));var V=W.lastIndexOf("/");return 0<V?W.substring(0,V):""},"_"),d=L(function(W){return W.slice(-1)!=="/"&&(W+="/"),W},"g"),H=L(function(W,V){return V=V!==void 0?V:l.createFolders,W=d(W),this.files[W]||I.call(this,W,null,{dir:!0,createFolders:V}),this.files[W]},"b");function f(W){return Object.prototype.toString.call(W)==="[object RegExp]"}L(f,"h");var K={load:L(function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},"load"),forEach:L(function(W){var V,k,Q;for(V in this.files)Q=this.files[V],(k=V.slice(this.root.length,V.length))&&V.slice(0,this.root.length)===this.root&&W(k,Q)},"forEach"),filter:L(function(W){var V=[];return this.forEach(function(k,Q){W(k,Q)&&V.push(Q)}),V},"filter"),file:L(function(W,V,k){if(arguments.length!==1)return W=this.root+W,I.call(this,W,V,k),this;if(f(W)){var Q=W;return this.filter(function(J,ne){return!ne.dir&&Q.test(J)})}var j=this.files[this.root+W];return j&&!j.dir?j:null},"file"),folder:L(function(W){if(!W)return this;if(f(W))return this.filter(function(j,J){return J.dir&&W.test(j)});var V=this.root+W,k=H.call(this,V),Q=this.clone();return Q.root=k.name,Q},"folder"),remove:L(function(W){W=this.root+W;var V=this.files[W];if(V||(W.slice(-1)!=="/"&&(W+="/"),V=this.files[W]),V&&!V.dir)delete this.files[W];else for(var k=this.filter(function(j,J){return J.name.slice(0,W.length)===W}),Q=0;Q<k.length;Q++)delete this.files[k[Q].name];return this},"remove"),generate:L(function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},"generate"),generateInternalStream:L(function(W){var V,k={};try{if((k=r.extend(W||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:a.utf8encode})).type=k.type.toLowerCase(),k.compression=k.compression.toUpperCase(),k.type==="binarystring"&&(k.type="string"),!k.type)throw new Error("No output type specified.");r.checkSupport(k.type),k.platform!=="darwin"&&k.platform!=="freebsd"&&k.platform!=="linux"&&k.platform!=="sunos"||(k.platform="UNIX"),k.platform==="win32"&&(k.platform="DOS");var Q=k.comment||this.comment||"";V=u.generateWorker(this,k,Q)}catch(j){(V=new S("error")).error(j)}return new o(V,k.type||"string",k.mimeType)},"generateInternalStream"),generateAsync:L(function(W,V){return this.generateInternalStream(W).accumulate(V)},"generateAsync"),generateNodeStream:L(function(W,V){return(W=W||{}).type||(W.type="nodebuffer"),this.generateInternalStream(W).toNodejsStream(V)},"generateNodeStream")};R.exports=K},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(s,R,n){R.exports=s("stream")},{stream:void 0}],17:[function(s,R,n){var I=s("./DataReader");function a(r){I.call(this,r);for(var S=0;S<this.data.length;S++)r[S]=255&r[S]}L(a,"i"),s("../utils").inherits(a,I),a.prototype.byteAt=function(r){return this.data[this.zero+r]},a.prototype.lastIndexOfSignature=function(r){for(var S=r.charCodeAt(0),o=r.charCodeAt(1),l=r.charCodeAt(2),C=r.charCodeAt(3),M=this.length-4;0<=M;--M)if(this.data[M]===S&&this.data[M+1]===o&&this.data[M+2]===l&&this.data[M+3]===C)return M-this.zero;return-1},a.prototype.readAndCheckSignature=function(r){var S=r.charCodeAt(0),o=r.charCodeAt(1),l=r.charCodeAt(2),C=r.charCodeAt(3),M=this.readData(4);return S===M[0]&&o===M[1]&&l===M[2]&&C===M[3]},a.prototype.readData=function(r){if(this.checkOffset(r),r===0)return[];var S=this.data.slice(this.zero+this.index,this.zero+this.index+r);return this.index+=r,S},R.exports=a},{"../utils":32,"./DataReader":18}],18:[function(s,R,n){var I=s("../utils");function a(r){this.data=r,this.length=r.length,this.index=0,this.zero=0}L(a,"i"),a.prototype={checkOffset:L(function(r){this.checkIndex(this.index+r)},"checkOffset"),checkIndex:L(function(r){if(this.length<this.zero+r||r<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+r+"). Corrupted zip ?")},"checkIndex"),setIndex:L(function(r){this.checkIndex(r),this.index=r},"setIndex"),skip:L(function(r){this.setIndex(this.index+r)},"skip"),byteAt:L(function(){},"byteAt"),readInt:L(function(r){var S,o=0;for(this.checkOffset(r),S=this.index+r-1;S>=this.index;S--)o=(o<<8)+this.byteAt(S);return this.index+=r,o},"readInt"),readString:L(function(r){return I.transformTo("string",this.readData(r))},"readString"),readData:L(function(){},"readData"),lastIndexOfSignature:L(function(){},"lastIndexOfSignature"),readAndCheckSignature:L(function(){},"readAndCheckSignature"),readDate:L(function(){var r=this.readInt(4);return new Date(Date.UTC(1980+(r>>25&127),(r>>21&15)-1,r>>16&31,r>>11&31,r>>5&63,(31&r)<<1))},"readDate")},R.exports=a},{"../utils":32}],19:[function(s,R,n){var I=s("./Uint8ArrayReader");function a(r){I.call(this,r)}L(a,"i"),s("../utils").inherits(a,I),a.prototype.readData=function(r){this.checkOffset(r);var S=this.data.slice(this.zero+this.index,this.zero+this.index+r);return this.index+=r,S},R.exports=a},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(s,R,n){var I=s("./DataReader");function a(r){I.call(this,r)}L(a,"i"),s("../utils").inherits(a,I),a.prototype.byteAt=function(r){return this.data.charCodeAt(this.zero+r)},a.prototype.lastIndexOfSignature=function(r){return this.data.lastIndexOf(r)-this.zero},a.prototype.readAndCheckSignature=function(r){return r===this.readData(4)},a.prototype.readData=function(r){this.checkOffset(r);var S=this.data.slice(this.zero+this.index,this.zero+this.index+r);return this.index+=r,S},R.exports=a},{"../utils":32,"./DataReader":18}],21:[function(s,R,n){var I=s("./ArrayReader");function a(r){I.call(this,r)}L(a,"i"),s("../utils").inherits(a,I),a.prototype.readData=function(r){if(this.checkOffset(r),r===0)return new Uint8Array(0);var S=this.data.subarray(this.zero+this.index,this.zero+this.index+r);return this.index+=r,S},R.exports=a},{"../utils":32,"./ArrayReader":17}],22:[function(s,R,n){var I=s("../utils"),a=s("../support"),r=s("./ArrayReader"),S=s("./StringReader"),o=s("./NodeBufferReader"),l=s("./Uint8ArrayReader");R.exports=function(C){var M=I.getTypeOf(C);return I.checkSupport(M),M!=="string"||a.uint8array?M==="nodebuffer"?new o(C):a.uint8array?new l(I.transformTo("uint8array",C)):new r(I.transformTo("array",C)):new S(C)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(s,R,n){n.LOCAL_FILE_HEADER="PK",n.CENTRAL_FILE_HEADER="PK",n.CENTRAL_DIRECTORY_END="PK",n.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK\x07",n.ZIP64_CENTRAL_DIRECTORY_END="PK",n.DATA_DESCRIPTOR="PK\x07\b"},{}],24:[function(s,R,n){var I=s("./GenericWorker"),a=s("../utils");function r(S){I.call(this,"ConvertWorker to "+S),this.destType=S}L(r,"s"),a.inherits(r,I),r.prototype.processChunk=function(S){this.push({data:a.transformTo(this.destType,S.data),meta:S.meta})},R.exports=r},{"../utils":32,"./GenericWorker":28}],25:[function(s,R,n){var I=s("./GenericWorker"),a=s("../crc32");function r(){I.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}L(r,"s"),s("../utils").inherits(r,I),r.prototype.processChunk=function(S){this.streamInfo.crc32=a(S.data,this.streamInfo.crc32||0),this.push(S)},R.exports=r},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(s,R,n){var I=s("../utils"),a=s("./GenericWorker");function r(S){a.call(this,"DataLengthProbe for "+S),this.propName=S,this.withStreamInfo(S,0)}L(r,"s"),I.inherits(r,a),r.prototype.processChunk=function(S){if(S){var o=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=o+S.data.length}a.prototype.processChunk.call(this,S)},R.exports=r},{"../utils":32,"./GenericWorker":28}],27:[function(s,R,n){var I=s("../utils"),a=s("./GenericWorker");function r(S){a.call(this,"DataWorker");var o=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,S.then(function(l){o.dataIsReady=!0,o.data=l,o.max=l&&l.length||0,o.type=I.getTypeOf(l),o.isPaused||o._tickAndRepeat()},function(l){o.error(l)})}L(r,"s"),I.inherits(r,a),r.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this.data=null},r.prototype.resume=function(){return!!a.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,I.delay(this._tickAndRepeat,[],this)),!0)},r.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(I.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},r.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var S=null,o=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":S=this.data.substring(this.index,o);break;case"uint8array":S=this.data.subarray(this.index,o);break;case"array":case"nodebuffer":S=this.data.slice(this.index,o)}return this.index=o,this.push({data:S,meta:{percent:this.max?this.index/this.max*100:0}})},R.exports=r},{"../utils":32,"./GenericWorker":28}],28:[function(s,R,n){function I(a){this.name=a||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}L(I,"n"),I.prototype={push:L(function(a){this.emit("data",a)},"push"),end:L(function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(a){this.emit("error",a)}return!0},"end"),error:L(function(a){return!this.isFinished&&(this.isPaused?this.generatedError=a:(this.isFinished=!0,this.emit("error",a),this.previous&&this.previous.error(a),this.cleanUp()),!0)},"error"),on:L(function(a,r){return this._listeners[a].push(r),this},"on"),cleanUp:L(function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},"cleanUp"),emit:L(function(a,r){if(this._listeners[a])for(var S=0;S<this._listeners[a].length;S++)this._listeners[a][S].call(this,r)},"emit"),pipe:L(function(a){return a.registerPrevious(this)},"pipe"),registerPrevious:L(function(a){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=a.streamInfo,this.mergeStreamInfo(),this.previous=a;var r=this;return a.on("data",function(S){r.processChunk(S)}),a.on("end",function(){r.end()}),a.on("error",function(S){r.error(S)}),this},"registerPrevious"),pause:L(function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},"pause"),resume:L(function(){if(!this.isPaused||this.isFinished)return!1;var a=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),a=!0),this.previous&&this.previous.resume(),!a},"resume"),flush:L(function(){},"flush"),processChunk:L(function(a){this.push(a)},"processChunk"),withStreamInfo:L(function(a,r){return this.extraStreamInfo[a]=r,this.mergeStreamInfo(),this},"withStreamInfo"),mergeStreamInfo:L(function(){for(var a in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,a)&&(this.streamInfo[a]=this.extraStreamInfo[a])},"mergeStreamInfo"),lock:L(function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},"lock"),toString:L(function(){var a="Worker "+this.name;return this.previous?this.previous+" -> "+a:a},"toString")},R.exports=I},{}],29:[function(s,R,n){var I=s("../utils"),a=s("./ConvertWorker"),r=s("./GenericWorker"),S=s("../base64"),o=s("../support"),l=s("../external"),C=null;if(o.nodestream)try{C=s("../nodejs/NodejsStreamOutputAdapter")}catch{}function M(h,P){return new l.Promise(function(G,d){var H=[],f=h._internalType,K=h._outputType,W=h._mimeType;h.on("data",function(V,k){H.push(V),P&&P(k)}).on("error",function(V){H=[],d(V)}).on("end",function(){try{var V=function(k,Q,j){switch(k){case"blob":return I.newBlob(I.transformTo("arraybuffer",Q),j);case"base64":return S.encode(Q);default:return I.transformTo(k,Q)}}(K,function(k,Q){var j,J=0,ne=null,x=0;for(j=0;j<Q.length;j++)x+=Q[j].length;switch(k){case"string":return Q.join("");case"array":return Array.prototype.concat.apply([],Q);case"uint8array":for(ne=new Uint8Array(x),j=0;j<Q.length;j++)ne.set(Q[j],J),J+=Q[j].length;return ne;case"nodebuffer":return Buffer.concat(Q);default:throw new Error("concat : unsupported type '"+k+"'")}}(f,H),W);G(V)}catch(k){d(k)}H=[]}).resume()})}L(M,"l");function u(h,P,G){var d=P;switch(P){case"blob":case"arraybuffer":d="uint8array";break;case"base64":d="string"}try{this._internalType=d,this._outputType=P,this._mimeType=G,I.checkSupport(d),this._worker=h.pipe(new a(d)),h.lock()}catch(H){this._worker=new r("error"),this._worker.error(H)}}L(u,"f"),u.prototype={accumulate:L(function(h){return M(this,h)},"accumulate"),on:L(function(h,P){var G=this;return h==="data"?this._worker.on(h,function(d){P.call(G,d.data,d.meta)}):this._worker.on(h,function(){I.delay(P,arguments,G)}),this},"on"),resume:L(function(){return I.delay(this._worker.resume,[],this._worker),this},"resume"),pause:L(function(){return this._worker.pause(),this},"pause"),toNodejsStream:L(function(h){if(I.checkSupport("nodestream"),this._outputType!=="nodebuffer")throw new Error(this._outputType+" is not supported by this method");return new C(this,{objectMode:this._outputType!=="nodebuffer"},h)},"toNodejsStream")},R.exports=u},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(s,R,n){if(n.base64=!0,n.array=!0,n.string=!0,n.arraybuffer=typeof ArrayBuffer<"u"&&typeof Uint8Array<"u",n.nodebuffer=typeof Buffer<"u",n.uint8array=typeof Uint8Array<"u",typeof ArrayBuffer>"u")n.blob=!1;else{var I=new ArrayBuffer(0);try{n.blob=new Blob([I],{type:"application/zip"}).size===0}catch{try{var a=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);a.append(I),n.blob=a.getBlob("application/zip").size===0}catch{n.blob=!1}}}try{n.nodestream=!!s("readable-stream").Readable}catch{n.nodestream=!1}},{"readable-stream":16}],31:[function(s,R,n){for(var I=s("./utils"),a=s("./support"),r=s("./nodejsUtils"),S=s("./stream/GenericWorker"),o=new Array(256),l=0;l<256;l++)o[l]=252<=l?6:248<=l?5:240<=l?4:224<=l?3:192<=l?2:1;o[254]=o[254]=1;function C(){S.call(this,"utf-8 decode"),this.leftOver=null}L(C,"a");function M(){S.call(this,"utf-8 encode")}L(M,"l"),n.utf8encode=function(u){return a.nodebuffer?r.newBufferFrom(u,"utf-8"):function(h){var P,G,d,H,f,K=h.length,W=0;for(H=0;H<K;H++)(64512&(G=h.charCodeAt(H)))==55296&&H+1<K&&(64512&(d=h.charCodeAt(H+1)))==56320&&(G=65536+(G-55296<<10)+(d-56320),H++),W+=G<128?1:G<2048?2:G<65536?3:4;for(P=a.uint8array?new Uint8Array(W):new Array(W),H=f=0;f<W;H++)(64512&(G=h.charCodeAt(H)))==55296&&H+1<K&&(64512&(d=h.charCodeAt(H+1)))==56320&&(G=65536+(G-55296<<10)+(d-56320),H++),G<128?P[f++]=G:(G<2048?P[f++]=192|G>>>6:(G<65536?P[f++]=224|G>>>12:(P[f++]=240|G>>>18,P[f++]=128|G>>>12&63),P[f++]=128|G>>>6&63),P[f++]=128|63&G);return P}(u)},n.utf8decode=function(u){return a.nodebuffer?I.transformTo("nodebuffer",u).toString("utf-8"):function(h){var P,G,d,H,f=h.length,K=new Array(2*f);for(P=G=0;P<f;)if((d=h[P++])<128)K[G++]=d;else if(4<(H=o[d]))K[G++]=65533,P+=H-1;else{for(d&=H===2?31:H===3?15:7;1<H&&P<f;)d=d<<6|63&h[P++],H--;1<H?K[G++]=65533:d<65536?K[G++]=d:(d-=65536,K[G++]=55296|d>>10&1023,K[G++]=56320|1023&d)}return K.length!==G&&(K.subarray?K=K.subarray(0,G):K.length=G),I.applyFromCharCode(K)}(u=I.transformTo(a.uint8array?"uint8array":"array",u))},I.inherits(C,S),C.prototype.processChunk=function(u){var h=I.transformTo(a.uint8array?"uint8array":"array",u.data);if(this.leftOver&&this.leftOver.length){if(a.uint8array){var P=h;(h=new Uint8Array(P.length+this.leftOver.length)).set(this.leftOver,0),h.set(P,this.leftOver.length)}else h=this.leftOver.concat(h);this.leftOver=null}var G=function(H,f){var K;for((f=f||H.length)>H.length&&(f=H.length),K=f-1;0<=K&&(192&H[K])==128;)K--;return K<0||K===0?f:K+o[H[K]]>f?K:f}(h),d=h;G!==h.length&&(a.uint8array?(d=h.subarray(0,G),this.leftOver=h.subarray(G,h.length)):(d=h.slice(0,G),this.leftOver=h.slice(G,h.length))),this.push({data:n.utf8decode(d),meta:u.meta})},C.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:n.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},n.Utf8DecodeWorker=C,I.inherits(M,S),M.prototype.processChunk=function(u){this.push({data:n.utf8encode(u.data),meta:u.meta})},n.Utf8EncodeWorker=M},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(s,R,n){var I=s("./support"),a=s("./base64"),r=s("./nodejsUtils"),S=s("./external");function o(P){return P}L(o,"n");function l(P,G){for(var d=0;d<P.length;++d)G[d]=255&P.charCodeAt(d);return G}L(l,"l"),s("setimmediate"),n.newBlob=function(P,G){n.checkSupport("blob");try{return new Blob([P],{type:G})}catch{try{var d=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return d.append(P),d.getBlob(G)}catch{throw new Error("Bug : can't construct the Blob.")}}};var C={stringifyByChunk:L(function(P,G,d){var H=[],f=0,K=P.length;if(K<=d)return String.fromCharCode.apply(null,P);for(;f<K;)G==="array"||G==="nodebuffer"?H.push(String.fromCharCode.apply(null,P.slice(f,Math.min(f+d,K)))):H.push(String.fromCharCode.apply(null,P.subarray(f,Math.min(f+d,K)))),f+=d;return H.join("")},"stringifyByChunk"),stringifyByChar:L(function(P){for(var G="",d=0;d<P.length;d++)G+=String.fromCharCode(P[d]);return G},"stringifyByChar"),applyCanBeUsed:{uint8array:function(){try{return I.uint8array&&String.fromCharCode.apply(null,new Uint8Array(1)).length===1}catch{return!1}}(),nodebuffer:function(){try{return I.nodebuffer&&String.fromCharCode.apply(null,r.allocBuffer(1)).length===1}catch{return!1}}()}};function M(P){var G=65536,d=n.getTypeOf(P),H=!0;if(d==="uint8array"?H=C.applyCanBeUsed.uint8array:d==="nodebuffer"&&(H=C.applyCanBeUsed.nodebuffer),H)for(;1<G;)try{return C.stringifyByChunk(P,d,G)}catch{G=Math.floor(G/2)}return C.stringifyByChar(P)}L(M,"s");function u(P,G){for(var d=0;d<P.length;d++)G[d]=P[d];return G}L(u,"f"),n.applyFromCharCode=M;var h={};h.string={string:o,array:L(function(P){return l(P,new Array(P.length))},"array"),arraybuffer:L(function(P){return h.string.uint8array(P).buffer},"arraybuffer"),uint8array:L(function(P){return l(P,new Uint8Array(P.length))},"uint8array"),nodebuffer:L(function(P){return l(P,r.allocBuffer(P.length))},"nodebuffer")},h.array={string:M,array:o,arraybuffer:L(function(P){return new Uint8Array(P).buffer},"arraybuffer"),uint8array:L(function(P){return new Uint8Array(P)},"uint8array"),nodebuffer:L(function(P){return r.newBufferFrom(P)},"nodebuffer")},h.arraybuffer={string:L(function(P){return M(new Uint8Array(P))},"string"),array:L(function(P){return u(new Uint8Array(P),new Array(P.byteLength))},"array"),arraybuffer:o,uint8array:L(function(P){return new Uint8Array(P)},"uint8array"),nodebuffer:L(function(P){return r.newBufferFrom(new Uint8Array(P))},"nodebuffer")},h.uint8array={string:M,array:L(function(P){return u(P,new Array(P.length))},"array"),arraybuffer:L(function(P){return P.buffer},"arraybuffer"),uint8array:o,nodebuffer:L(function(P){return r.newBufferFrom(P)},"nodebuffer")},h.nodebuffer={string:M,array:L(function(P){return u(P,new Array(P.length))},"array"),arraybuffer:L(function(P){return h.nodebuffer.uint8array(P).buffer},"arraybuffer"),uint8array:L(function(P){return u(P,new Uint8Array(P.length))},"uint8array"),nodebuffer:o},n.transformTo=function(P,G){if(G=G||"",!P)return G;n.checkSupport(P);var d=n.getTypeOf(G);return h[d][P](G)},n.resolve=function(P){for(var G=P.split("/"),d=[],H=0;H<G.length;H++){var f=G[H];f==="."||f===""&&H!==0&&H!==G.length-1||(f===".."?d.pop():d.push(f))}return d.join("/")},n.getTypeOf=function(P){return typeof P=="string"?"string":Object.prototype.toString.call(P)==="[object Array]"?"array":I.nodebuffer&&r.isBuffer(P)?"nodebuffer":I.uint8array&&P instanceof Uint8Array?"uint8array":I.arraybuffer&&P instanceof ArrayBuffer?"arraybuffer":void 0},n.checkSupport=function(P){if(!I[P.toLowerCase()])throw new Error(P+" is not supported by this platform")},n.MAX_VALUE_16BITS=65535,n.MAX_VALUE_32BITS=-1,n.pretty=function(P){var G,d,H="";for(d=0;d<(P||"").length;d++)H+="\\x"+((G=P.charCodeAt(d))<16?"0":"")+G.toString(16).toUpperCase();return H},n.delay=function(P,G,d){setImmediate(function(){P.apply(d||null,G||[])})},n.inherits=function(P,G){function d(){}L(d,"r"),d.prototype=G.prototype,P.prototype=new d},n.extend=function(){var P,G,d={};for(P=0;P<arguments.length;P++)for(G in arguments[P])Object.prototype.hasOwnProperty.call(arguments[P],G)&&d[G]===void 0&&(d[G]=arguments[P][G]);return d},n.prepareContent=function(P,G,d,H,f){return S.Promise.resolve(G).then(function(K){return I.blob&&(K instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(K))!==-1)&&typeof FileReader<"u"?new S.Promise(function(W,V){var k=new FileReader;k.onload=function(Q){W(Q.target.result)},k.onerror=function(Q){V(Q.target.error)},k.readAsArrayBuffer(K)}):K}).then(function(K){var W=n.getTypeOf(K);return W?(W==="arraybuffer"?K=n.transformTo("uint8array",K):W==="string"&&(f?K=a.decode(K):d&&H!==!0&&(K=function(V){return l(V,I.uint8array?new Uint8Array(V.length):new Array(V.length))}(K))),K):S.Promise.reject(new Error("Can't read the data of '"+P+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(s,R,n){var I=s("./reader/readerFor"),a=s("./utils"),r=s("./signature"),S=s("./zipEntry"),o=s("./support");function l(C){this.files=[],this.loadOptions=C}L(l,"h"),l.prototype={checkSignature:L(function(C){if(!this.reader.readAndCheckSignature(C)){this.reader.index-=4;var M=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+a.pretty(M)+", expected "+a.pretty(C)+")")}},"checkSignature"),isSignature:L(function(C,M){var u=this.reader.index;this.reader.setIndex(C);var h=this.reader.readString(4)===M;return this.reader.setIndex(u),h},"isSignature"),readBlockEndOfCentral:L(function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var C=this.reader.readData(this.zipCommentLength),M=o.uint8array?"uint8array":"array",u=a.transformTo(M,C);this.zipComment=this.loadOptions.decodeFileName(u)},"readBlockEndOfCentral"),readBlockZip64EndOfCentral:L(function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var C,M,u,h=this.zip64EndOfCentralSize-44;0<h;)C=this.reader.readInt(2),M=this.reader.readInt(4),u=this.reader.readData(M),this.zip64ExtensibleData[C]={id:C,length:M,value:u}},"readBlockZip64EndOfCentral"),readBlockZip64EndOfCentralLocator:L(function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},"readBlockZip64EndOfCentralLocator"),readLocalFiles:L(function(){var C,M;for(C=0;C<this.files.length;C++)M=this.files[C],this.reader.setIndex(M.localHeaderOffset),this.checkSignature(r.LOCAL_FILE_HEADER),M.readLocalPart(this.reader),M.handleUTF8(),M.processAttributes()},"readLocalFiles"),readCentralDir:L(function(){var C;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(r.CENTRAL_FILE_HEADER);)(C=new S({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(C);if(this.centralDirRecords!==this.files.length&&this.centralDirRecords!==0&&this.files.length===0)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},"readCentralDir"),readEndOfCentral:L(function(){var C=this.reader.lastIndexOfSignature(r.CENTRAL_DIRECTORY_END);if(C<0)throw this.isSignature(0,r.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(C);var M=C;if(this.checkSignature(r.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===a.MAX_VALUE_16BITS||this.diskWithCentralDirStart===a.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===a.MAX_VALUE_16BITS||this.centralDirRecords===a.MAX_VALUE_16BITS||this.centralDirSize===a.MAX_VALUE_32BITS||this.centralDirOffset===a.MAX_VALUE_32BITS){if(this.zip64=!0,(C=this.reader.lastIndexOfSignature(r.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(C),this.checkSignature(r.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,r.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(r.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(r.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var u=this.centralDirOffset+this.centralDirSize;this.zip64&&(u+=20,u+=12+this.zip64EndOfCentralSize);var h=M-u;if(0<h)this.isSignature(M,r.CENTRAL_FILE_HEADER)||(this.reader.zero=h);else if(h<0)throw new Error("Corrupted zip: missing "+Math.abs(h)+" bytes.")},"readEndOfCentral"),prepareReader:L(function(C){this.reader=I(C)},"prepareReader"),load:L(function(C){this.prepareReader(C),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()},"load")},R.exports=l},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(s,R,n){var I=s("./reader/readerFor"),a=s("./utils"),r=s("./compressedObject"),S=s("./crc32"),o=s("./utf8"),l=s("./compressions"),C=s("./support");function M(u,h){this.options=u,this.loadOptions=h}L(M,"l"),M.prototype={isEncrypted:L(function(){return(1&this.bitFlag)==1},"isEncrypted"),useUTF8:L(function(){return(2048&this.bitFlag)==2048},"useUTF8"),readLocalPart:L(function(u){var h,P;if(u.skip(22),this.fileNameLength=u.readInt(2),P=u.readInt(2),this.fileName=u.readData(this.fileNameLength),u.skip(P),this.compressedSize===-1||this.uncompressedSize===-1)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if((h=function(G){for(var d in l)if(Object.prototype.hasOwnProperty.call(l,d)&&l[d].magic===G)return l[d];return null}(this.compressionMethod))===null)throw new Error("Corrupted zip : compression "+a.pretty(this.compressionMethod)+" unknown (inner file : "+a.transformTo("string",this.fileName)+")");this.decompressed=new r(this.compressedSize,this.uncompressedSize,this.crc32,h,u.readData(this.compressedSize))},"readLocalPart"),readCentralPart:L(function(u){this.versionMadeBy=u.readInt(2),u.skip(2),this.bitFlag=u.readInt(2),this.compressionMethod=u.readString(2),this.date=u.readDate(),this.crc32=u.readInt(4),this.compressedSize=u.readInt(4),this.uncompressedSize=u.readInt(4);var h=u.readInt(2);if(this.extraFieldsLength=u.readInt(2),this.fileCommentLength=u.readInt(2),this.diskNumberStart=u.readInt(2),this.internalFileAttributes=u.readInt(2),this.externalFileAttributes=u.readInt(4),this.localHeaderOffset=u.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");u.skip(h),this.readExtraFields(u),this.parseZIP64ExtraField(u),this.fileComment=u.readData(this.fileCommentLength)},"readCentralPart"),processAttributes:L(function(){this.unixPermissions=null,this.dosPermissions=null;var u=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),u==0&&(this.dosPermissions=63&this.externalFileAttributes),u==3&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||this.fileNameStr.slice(-1)!=="/"||(this.dir=!0)},"processAttributes"),parseZIP64ExtraField:L(function(){if(this.extraFields[1]){var u=I(this.extraFields[1].value);this.uncompressedSize===a.MAX_VALUE_32BITS&&(this.uncompressedSize=u.readInt(8)),this.compressedSize===a.MAX_VALUE_32BITS&&(this.compressedSize=u.readInt(8)),this.localHeaderOffset===a.MAX_VALUE_32BITS&&(this.localHeaderOffset=u.readInt(8)),this.diskNumberStart===a.MAX_VALUE_32BITS&&(this.diskNumberStart=u.readInt(4))}},"parseZIP64ExtraField"),readExtraFields:L(function(u){var h,P,G,d=u.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});u.index+4<d;)h=u.readInt(2),P=u.readInt(2),G=u.readData(P),this.extraFields[h]={id:h,length:P,value:G};u.setIndex(d)},"readExtraFields"),handleUTF8:L(function(){var u=C.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var h=this.findExtraFieldUnicodePath();if(h!==null)this.fileNameStr=h;else{var P=a.transformTo(u,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(P)}var G=this.findExtraFieldUnicodeComment();if(G!==null)this.fileCommentStr=G;else{var d=a.transformTo(u,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(d)}}},"handleUTF8"),findExtraFieldUnicodePath:L(function(){var u=this.extraFields[28789];if(u){var h=I(u.value);return h.readInt(1)!==1||S(this.fileName)!==h.readInt(4)?null:o.utf8decode(h.readData(u.length-5))}return null},"findExtraFieldUnicodePath"),findExtraFieldUnicodeComment:L(function(){var u=this.extraFields[25461];if(u){var h=I(u.value);return h.readInt(1)!==1||S(this.fileComment)!==h.readInt(4)?null:o.utf8decode(h.readData(u.length-5))}return null},"findExtraFieldUnicodeComment")},R.exports=M},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(s,R,n){function I(h,P,G){this.name=h,this.dir=G.dir,this.date=G.date,this.comment=G.comment,this.unixPermissions=G.unixPermissions,this.dosPermissions=G.dosPermissions,this._data=P,this._dataBinary=G.binary,this.options={compression:G.compression,compressionOptions:G.compressionOptions}}L(I,"n");var a=s("./stream/StreamHelper"),r=s("./stream/DataWorker"),S=s("./utf8"),o=s("./compressedObject"),l=s("./stream/GenericWorker");I.prototype={internalStream:L(function(h){var P=null,G="string";try{if(!h)throw new Error("No output type specified.");var d=(G=h.toLowerCase())==="string"||G==="text";G!=="binarystring"&&G!=="text"||(G="string"),P=this._decompressWorker();var H=!this._dataBinary;H&&!d&&(P=P.pipe(new S.Utf8EncodeWorker)),!H&&d&&(P=P.pipe(new S.Utf8DecodeWorker))}catch(f){(P=new l("error")).error(f)}return new a(P,G,"")},"internalStream"),async:L(function(h,P){return this.internalStream(h).accumulate(P)},"async"),nodeStream:L(function(h,P){return this.internalStream(h||"nodebuffer").toNodejsStream(P)},"nodeStream"),_compressWorker:L(function(h,P){if(this._data instanceof o&&this._data.compression.magic===h.magic)return this._data.getCompressedWorker();var G=this._decompressWorker();return this._dataBinary||(G=G.pipe(new S.Utf8EncodeWorker)),o.createWorkerFrom(G,h,P)},"_compressWorker"),_decompressWorker:L(function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof l?this._data:new r(this._data)},"_decompressWorker")};for(var C=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],M=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},u=0;u<C.length;u++)I.prototype[C[u]]=M;R.exports=I},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(s,R,n){(function(I){var a,r,S=I.MutationObserver||I.WebKitMutationObserver;if(S){var o=0,l=new S(h),C=I.document.createTextNode("");l.observe(C,{characterData:!0}),a=L(function(){C.data=o=++o%2},"r")}else if(I.setImmediate||I.MessageChannel===void 0)a="document"in I&&"onreadystatechange"in I.document.createElement("script")?function(){var P=I.document.createElement("script");P.onreadystatechange=function(){h(),P.onreadystatechange=null,P.parentNode.removeChild(P),P=null},I.document.documentElement.appendChild(P)}:function(){setTimeout(h,0)};else{var M=new I.MessageChannel;M.port1.onmessage=h,a=L(function(){M.port2.postMessage(0)},"r")}var u=[];function h(){var P,G;r=!0;for(var d=u.length;d;){for(G=u,u=[],P=-1;++P<d;)G[P]();d=u.length}r=!1}L(h,"u"),R.exports=function(P){u.push(P)!==1||r||a()}}).call(this,typeof AA<"u"?AA:typeof self<"u"?self:typeof window<"u"?window:{})},{}],37:[function(s,R,n){var I=s("immediate");function a(){}L(a,"u");var r={},S=["REJECTED"],o=["FULFILLED"],l=["PENDING"];function C(d){if(typeof d!="function")throw new TypeError("resolver must be a function");this.state=l,this.queue=[],this.outcome=void 0,d!==a&&P(this,d)}L(C,"o");function M(d,H,f){this.promise=d,typeof H=="function"&&(this.onFulfilled=H,this.callFulfilled=this.otherCallFulfilled),typeof f=="function"&&(this.onRejected=f,this.callRejected=this.otherCallRejected)}L(M,"h");function u(d,H,f){I(function(){var K;try{K=H(f)}catch(W){return r.reject(d,W)}K===d?r.reject(d,new TypeError("Cannot resolve promise with itself")):r.resolve(d,K)})}L(u,"f");function h(d){var H=d&&d.then;if(d&&(typeof d=="object"||typeof d=="function")&&typeof H=="function")return function(){H.apply(d,arguments)}}L(h,"c");function P(d,H){var f=!1;function K(k){f||(f=!0,r.reject(d,k))}L(K,"n");function W(k){f||(f=!0,r.resolve(d,k))}L(W,"i");var V=G(function(){H(W,K)});V.status==="error"&&K(V.value)}L(P,"d");function G(d,H){var f={};try{f.value=d(H),f.status="success"}catch(K){f.status="error",f.value=K}return f}L(G,"p"),(R.exports=C).prototype.finally=function(d){if(typeof d!="function")return this;var H=this.constructor;return this.then(function(f){return H.resolve(d()).then(function(){return f})},function(f){return H.resolve(d()).then(function(){throw f})})},C.prototype.catch=function(d){return this.then(null,d)},C.prototype.then=function(d,H){if(typeof d!="function"&&this.state===o||typeof H!="function"&&this.state===S)return this;var f=new this.constructor(a);return this.state!==l?u(f,this.state===o?d:H,this.outcome):this.queue.push(new M(f,d,H)),f},M.prototype.callFulfilled=function(d){r.resolve(this.promise,d)},M.prototype.otherCallFulfilled=function(d){u(this.promise,this.onFulfilled,d)},M.prototype.callRejected=function(d){r.reject(this.promise,d)},M.prototype.otherCallRejected=function(d){u(this.promise,this.onRejected,d)},r.resolve=function(d,H){var f=G(h,H);if(f.status==="error")return r.reject(d,f.value);var K=f.value;if(K)P(d,K);else{d.state=o,d.outcome=H;for(var W=-1,V=d.queue.length;++W<V;)d.queue[W].callFulfilled(H)}return d},r.reject=function(d,H){d.state=S,d.outcome=H;for(var f=-1,K=d.queue.length;++f<K;)d.queue[f].callRejected(H);return d},C.resolve=function(d){return d instanceof this?d:r.resolve(new this(a),d)},C.reject=function(d){var H=new this(a);return r.reject(H,d)},C.all=function(d){var H=this;if(Object.prototype.toString.call(d)!=="[object Array]")return this.reject(new TypeError("must be an array"));var f=d.length,K=!1;if(!f)return this.resolve([]);for(var W=new Array(f),V=0,k=-1,Q=new this(a);++k<f;)j(d[k],k);return Q;function j(J,ne){H.resolve(J).then(function(x){W[ne]=x,++V!==f||K||(K=!0,r.resolve(Q,W))},function(x){K||(K=!0,r.reject(Q,x))})}},C.race=function(d){var H=this;if(Object.prototype.toString.call(d)!=="[object Array]")return this.reject(new TypeError("must be an array"));var f=d.length,K=!1;if(!f)return this.resolve([]);for(var W=-1,V=new this(a);++W<f;)k=d[W],H.resolve(k).then(function(Q){K||(K=!0,r.resolve(V,Q))},function(Q){K||(K=!0,r.reject(V,Q))});var k;return V}},{immediate:36}],38:[function(s,R,n){var I={};(0,s("./lib/utils/common").assign)(I,s("./lib/deflate"),s("./lib/inflate"),s("./lib/zlib/constants")),R.exports=I},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(s,R,n){var I=s("./zlib/deflate"),a=s("./utils/common"),r=s("./utils/strings"),S=s("./zlib/messages"),o=s("./zlib/zstream"),l=Object.prototype.toString,C=0,M=-1,u=0,h=8;function P(d){if(!(this instanceof P))return new P(d);this.options=a.assign({level:M,method:h,chunkSize:16384,windowBits:15,memLevel:8,strategy:u,to:""},d||{});var H=this.options;H.raw&&0<H.windowBits?H.windowBits=-H.windowBits:H.gzip&&0<H.windowBits&&H.windowBits<16&&(H.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new o,this.strm.avail_out=0;var f=I.deflateInit2(this.strm,H.level,H.method,H.windowBits,H.memLevel,H.strategy);if(f!==C)throw new Error(S[f]);if(H.header&&I.deflateSetHeader(this.strm,H.header),H.dictionary){var K;if(K=typeof H.dictionary=="string"?r.string2buf(H.dictionary):l.call(H.dictionary)==="[object ArrayBuffer]"?new Uint8Array(H.dictionary):H.dictionary,(f=I.deflateSetDictionary(this.strm,K))!==C)throw new Error(S[f]);this._dict_set=!0}}L(P,"p");function G(d,H){var f=new P(H);if(f.push(d,!0),f.err)throw f.msg||S[f.err];return f.result}L(G,"n"),P.prototype.push=function(d,H){var f,K,W=this.strm,V=this.options.chunkSize;if(this.ended)return!1;K=H===~~H?H:H===!0?4:0,typeof d=="string"?W.input=r.string2buf(d):l.call(d)==="[object ArrayBuffer]"?W.input=new Uint8Array(d):W.input=d,W.next_in=0,W.avail_in=W.input.length;do{if(W.avail_out===0&&(W.output=new a.Buf8(V),W.next_out=0,W.avail_out=V),(f=I.deflate(W,K))!==1&&f!==C)return this.onEnd(f),!(this.ended=!0);W.avail_out!==0&&(W.avail_in!==0||K!==4&&K!==2)||(this.options.to==="string"?this.onData(r.buf2binstring(a.shrinkBuf(W.output,W.next_out))):this.onData(a.shrinkBuf(W.output,W.next_out)))}while((0<W.avail_in||W.avail_out===0)&&f!==1);return K===4?(f=I.deflateEnd(this.strm),this.onEnd(f),this.ended=!0,f===C):K!==2||(this.onEnd(C),!(W.avail_out=0))},P.prototype.onData=function(d){this.chunks.push(d)},P.prototype.onEnd=function(d){d===C&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=a.flattenChunks(this.chunks)),this.chunks=[],this.err=d,this.msg=this.strm.msg},n.Deflate=P,n.deflate=G,n.deflateRaw=function(d,H){return(H=H||{}).raw=!0,G(d,H)},n.gzip=function(d,H){return(H=H||{}).gzip=!0,G(d,H)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(s,R,n){var I=s("./zlib/inflate"),a=s("./utils/common"),r=s("./utils/strings"),S=s("./zlib/constants"),o=s("./zlib/messages"),l=s("./zlib/zstream"),C=s("./zlib/gzheader"),M=Object.prototype.toString;function u(P){if(!(this instanceof u))return new u(P);this.options=a.assign({chunkSize:16384,windowBits:0,to:""},P||{});var G=this.options;G.raw&&0<=G.windowBits&&G.windowBits<16&&(G.windowBits=-G.windowBits,G.windowBits===0&&(G.windowBits=-15)),!(0<=G.windowBits&&G.windowBits<16)||P&&P.windowBits||(G.windowBits+=32),15<G.windowBits&&G.windowBits<48&&!(15&G.windowBits)&&(G.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var d=I.inflateInit2(this.strm,G.windowBits);if(d!==S.Z_OK)throw new Error(o[d]);this.header=new C,I.inflateGetHeader(this.strm,this.header)}L(u,"a");function h(P,G){var d=new u(G);if(d.push(P,!0),d.err)throw d.msg||o[d.err];return d.result}L(h,"o"),u.prototype.push=function(P,G){var d,H,f,K,W,V,k=this.strm,Q=this.options.chunkSize,j=this.options.dictionary,J=!1;if(this.ended)return!1;H=G===~~G?G:G===!0?S.Z_FINISH:S.Z_NO_FLUSH,typeof P=="string"?k.input=r.binstring2buf(P):M.call(P)==="[object ArrayBuffer]"?k.input=new Uint8Array(P):k.input=P,k.next_in=0,k.avail_in=k.input.length;do{if(k.avail_out===0&&(k.output=new a.Buf8(Q),k.next_out=0,k.avail_out=Q),(d=I.inflate(k,S.Z_NO_FLUSH))===S.Z_NEED_DICT&&j&&(V=typeof j=="string"?r.string2buf(j):M.call(j)==="[object ArrayBuffer]"?new Uint8Array(j):j,d=I.inflateSetDictionary(this.strm,V)),d===S.Z_BUF_ERROR&&J===!0&&(d=S.Z_OK,J=!1),d!==S.Z_STREAM_END&&d!==S.Z_OK)return this.onEnd(d),!(this.ended=!0);k.next_out&&(k.avail_out!==0&&d!==S.Z_STREAM_END&&(k.avail_in!==0||H!==S.Z_FINISH&&H!==S.Z_SYNC_FLUSH)||(this.options.to==="string"?(f=r.utf8border(k.output,k.next_out),K=k.next_out-f,W=r.buf2string(k.output,f),k.next_out=K,k.avail_out=Q-K,K&&a.arraySet(k.output,k.output,f,K,0),this.onData(W)):this.onData(a.shrinkBuf(k.output,k.next_out)))),k.avail_in===0&&k.avail_out===0&&(J=!0)}while((0<k.avail_in||k.avail_out===0)&&d!==S.Z_STREAM_END);return d===S.Z_STREAM_END&&(H=S.Z_FINISH),H===S.Z_FINISH?(d=I.inflateEnd(this.strm),this.onEnd(d),this.ended=!0,d===S.Z_OK):H!==S.Z_SYNC_FLUSH||(this.onEnd(S.Z_OK),!(k.avail_out=0))},u.prototype.onData=function(P){this.chunks.push(P)},u.prototype.onEnd=function(P){P===S.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=a.flattenChunks(this.chunks)),this.chunks=[],this.err=P,this.msg=this.strm.msg},n.Inflate=u,n.inflate=h,n.inflateRaw=function(P,G){return(G=G||{}).raw=!0,h(P,G)},n.ungzip=h},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(s,R,n){var I=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Int32Array<"u";n.assign=function(S){for(var o=Array.prototype.slice.call(arguments,1);o.length;){var l=o.shift();if(l){if(typeof l!="object")throw new TypeError(l+"must be non-object");for(var C in l)l.hasOwnProperty(C)&&(S[C]=l[C])}}return S},n.shrinkBuf=function(S,o){return S.length===o?S:S.subarray?S.subarray(0,o):(S.length=o,S)};var a={arraySet:L(function(S,o,l,C,M){if(o.subarray&&S.subarray)S.set(o.subarray(l,l+C),M);else for(var u=0;u<C;u++)S[M+u]=o[l+u]},"arraySet"),flattenChunks:L(function(S){var o,l,C,M,u,h;for(o=C=0,l=S.length;o<l;o++)C+=S[o].length;for(h=new Uint8Array(C),o=M=0,l=S.length;o<l;o++)u=S[o],h.set(u,M),M+=u.length;return h},"flattenChunks")},r={arraySet:L(function(S,o,l,C,M){for(var u=0;u<C;u++)S[M+u]=o[l+u]},"arraySet"),flattenChunks:L(function(S){return[].concat.apply([],S)},"flattenChunks")};n.setTyped=function(S){S?(n.Buf8=Uint8Array,n.Buf16=Uint16Array,n.Buf32=Int32Array,n.assign(n,a)):(n.Buf8=Array,n.Buf16=Array,n.Buf32=Array,n.assign(n,r))},n.setTyped(I)},{}],42:[function(s,R,n){var I=s("./common"),a=!0,r=!0;try{String.fromCharCode.apply(null,[0])}catch{a=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{r=!1}for(var S=new I.Buf8(256),o=0;o<256;o++)S[o]=252<=o?6:248<=o?5:240<=o?4:224<=o?3:192<=o?2:1;function l(C,M){if(M<65537&&(C.subarray&&r||!C.subarray&&a))return String.fromCharCode.apply(null,I.shrinkBuf(C,M));for(var u="",h=0;h<M;h++)u+=String.fromCharCode(C[h]);return u}L(l,"l"),S[254]=S[254]=1,n.string2buf=function(C){var M,u,h,P,G,d=C.length,H=0;for(P=0;P<d;P++)(64512&(u=C.charCodeAt(P)))==55296&&P+1<d&&(64512&(h=C.charCodeAt(P+1)))==56320&&(u=65536+(u-55296<<10)+(h-56320),P++),H+=u<128?1:u<2048?2:u<65536?3:4;for(M=new I.Buf8(H),P=G=0;G<H;P++)(64512&(u=C.charCodeAt(P)))==55296&&P+1<d&&(64512&(h=C.charCodeAt(P+1)))==56320&&(u=65536+(u-55296<<10)+(h-56320),P++),u<128?M[G++]=u:(u<2048?M[G++]=192|u>>>6:(u<65536?M[G++]=224|u>>>12:(M[G++]=240|u>>>18,M[G++]=128|u>>>12&63),M[G++]=128|u>>>6&63),M[G++]=128|63&u);return M},n.buf2binstring=function(C){return l(C,C.length)},n.binstring2buf=function(C){for(var M=new I.Buf8(C.length),u=0,h=M.length;u<h;u++)M[u]=C.charCodeAt(u);return M},n.buf2string=function(C,M){var u,h,P,G,d=M||C.length,H=new Array(2*d);for(u=h=0;u<d;)if((P=C[u++])<128)H[h++]=P;else if(4<(G=S[P]))H[h++]=65533,u+=G-1;else{for(P&=G===2?31:G===3?15:7;1<G&&u<d;)P=P<<6|63&C[u++],G--;1<G?H[h++]=65533:P<65536?H[h++]=P:(P-=65536,H[h++]=55296|P>>10&1023,H[h++]=56320|1023&P)}return l(H,h)},n.utf8border=function(C,M){var u;for((M=M||C.length)>C.length&&(M=C.length),u=M-1;0<=u&&(192&C[u])==128;)u--;return u<0||u===0?M:u+S[C[u]]>M?u:M}},{"./common":41}],43:[function(s,R,n){R.exports=function(I,a,r,S){for(var o=65535&I|0,l=I>>>16&65535|0,C=0;r!==0;){for(r-=C=2e3<r?2e3:r;l=l+(o=o+a[S++]|0)|0,--C;);o%=65521,l%=65521}return o|l<<16|0}},{}],44:[function(s,R,n){R.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(s,R,n){var I=function(){for(var a,r=[],S=0;S<256;S++){a=S;for(var o=0;o<8;o++)a=1&a?3988292384^a>>>1:a>>>1;r[S]=a}return r}();R.exports=function(a,r,S,o){var l=I,C=o+S;a^=-1;for(var M=o;M<C;M++)a=a>>>8^l[255&(a^r[M])];return-1^a}},{}],46:[function(s,R,n){var I,a=s("../utils/common"),r=s("./trees"),S=s("./adler32"),o=s("./crc32"),l=s("./messages"),C=0,M=4,u=0,h=-2,P=-1,G=4,d=2,H=8,f=9,K=286,W=30,V=19,k=2*K+1,Q=15,j=3,J=258,ne=J+j+1,x=42,q=113,F=1,Te=2,He=3,ue=4;function me(y,Ke){return y.msg=l[Ke],Ke}L(me,"R");function Me(y){return(y<<1)-(4<y?9:0)}L(Me,"T");function Ie(y){for(var Ke=y.length;0<=--Ke;)y[Ke]=0}L(Ie,"D");function z(y){var Ke=y.state,de=Ke.pending;de>y.avail_out&&(de=y.avail_out),de!==0&&(a.arraySet(y.output,Ke.pending_buf,Ke.pending_out,de,y.next_out),y.next_out+=de,Ke.pending_out+=de,y.total_out+=de,y.avail_out-=de,Ke.pending-=de,Ke.pending===0&&(Ke.pending_out=0))}L(z,"F");function te(y,Ke){r._tr_flush_block(y,0<=y.block_start?y.block_start:-1,y.strstart-y.block_start,Ke),y.block_start=y.strstart,z(y.strm)}L(te,"N");function Le(y,Ke){y.pending_buf[y.pending++]=Ke}L(Le,"U");function Ue(y,Ke){y.pending_buf[y.pending++]=Ke>>>8&255,y.pending_buf[y.pending++]=255&Ke}L(Ue,"P");function Be(y,Ke){var de,ae,ie=y.max_chain_length,he=y.strstart,Xe=y.prev_length,ke=y.nice_match,Ge=y.strstart>y.w_size-ne?y.strstart-(y.w_size-ne):0,pe=y.window,$e=y.w_mask,Qe=y.prev,ut=y.strstart+J,Qt=pe[he+Xe-1],xt=pe[he+Xe];y.prev_length>=y.good_match&&(ie>>=2),ke>y.lookahead&&(ke=y.lookahead);do if(pe[(de=Ke)+Xe]===xt&&pe[de+Xe-1]===Qt&&pe[de]===pe[he]&&pe[++de]===pe[he+1]){he+=2,de++;do;while(pe[++he]===pe[++de]&&pe[++he]===pe[++de]&&pe[++he]===pe[++de]&&pe[++he]===pe[++de]&&pe[++he]===pe[++de]&&pe[++he]===pe[++de]&&pe[++he]===pe[++de]&&pe[++he]===pe[++de]&&he<ut);if(ae=J-(ut-he),he=ut-J,Xe<ae){if(y.match_start=Ke,ke<=(Xe=ae))break;Qt=pe[he+Xe-1],xt=pe[he+Xe]}}while((Ke=Qe[Ke&$e])>Ge&&--ie!=0);return Xe<=y.lookahead?Xe:y.lookahead}L(Be,"L");function st(y){var Ke,de,ae,ie,he,Xe,ke,Ge,pe,$e,Qe=y.w_size;do{if(ie=y.window_size-y.lookahead-y.strstart,y.strstart>=Qe+(Qe-ne)){for(a.arraySet(y.window,y.window,Qe,Qe,0),y.match_start-=Qe,y.strstart-=Qe,y.block_start-=Qe,Ke=de=y.hash_size;ae=y.head[--Ke],y.head[Ke]=Qe<=ae?ae-Qe:0,--de;);for(Ke=de=Qe;ae=y.prev[--Ke],y.prev[Ke]=Qe<=ae?ae-Qe:0,--de;);ie+=Qe}if(y.strm.avail_in===0)break;if(Xe=y.strm,ke=y.window,Ge=y.strstart+y.lookahead,pe=ie,$e=void 0,$e=Xe.avail_in,pe<$e&&($e=pe),de=$e===0?0:(Xe.avail_in-=$e,a.arraySet(ke,Xe.input,Xe.next_in,$e,Ge),Xe.state.wrap===1?Xe.adler=S(Xe.adler,ke,$e,Ge):Xe.state.wrap===2&&(Xe.adler=o(Xe.adler,ke,$e,Ge)),Xe.next_in+=$e,Xe.total_in+=$e,$e),y.lookahead+=de,y.lookahead+y.insert>=j)for(he=y.strstart-y.insert,y.ins_h=y.window[he],y.ins_h=(y.ins_h<<y.hash_shift^y.window[he+1])&y.hash_mask;y.insert&&(y.ins_h=(y.ins_h<<y.hash_shift^y.window[he+j-1])&y.hash_mask,y.prev[he&y.w_mask]=y.head[y.ins_h],y.head[y.ins_h]=he,he++,y.insert--,!(y.lookahead+y.insert<j)););}while(y.lookahead<ne&&y.strm.avail_in!==0)}L(st,"j");function ft(y,Ke){for(var de,ae;;){if(y.lookahead<ne){if(st(y),y.lookahead<ne&&Ke===C)return F;if(y.lookahead===0)break}if(de=0,y.lookahead>=j&&(y.ins_h=(y.ins_h<<y.hash_shift^y.window[y.strstart+j-1])&y.hash_mask,de=y.prev[y.strstart&y.w_mask]=y.head[y.ins_h],y.head[y.ins_h]=y.strstart),de!==0&&y.strstart-de<=y.w_size-ne&&(y.match_length=Be(y,de)),y.match_length>=j)if(ae=r._tr_tally(y,y.strstart-y.match_start,y.match_length-j),y.lookahead-=y.match_length,y.match_length<=y.max_lazy_match&&y.lookahead>=j){for(y.match_length--;y.strstart++,y.ins_h=(y.ins_h<<y.hash_shift^y.window[y.strstart+j-1])&y.hash_mask,de=y.prev[y.strstart&y.w_mask]=y.head[y.ins_h],y.head[y.ins_h]=y.strstart,--y.match_length!=0;);y.strstart++}else y.strstart+=y.match_length,y.match_length=0,y.ins_h=y.window[y.strstart],y.ins_h=(y.ins_h<<y.hash_shift^y.window[y.strstart+1])&y.hash_mask;else ae=r._tr_tally(y,0,y.window[y.strstart]),y.lookahead--,y.strstart++;if(ae&&(te(y,!1),y.strm.avail_out===0))return F}return y.insert=y.strstart<j-1?y.strstart:j-1,Ke===M?(te(y,!0),y.strm.avail_out===0?He:ue):y.last_lit&&(te(y,!1),y.strm.avail_out===0)?F:Te}L(ft,"Z");function tt(y,Ke){for(var de,ae,ie;;){if(y.lookahead<ne){if(st(y),y.lookahead<ne&&Ke===C)return F;if(y.lookahead===0)break}if(de=0,y.lookahead>=j&&(y.ins_h=(y.ins_h<<y.hash_shift^y.window[y.strstart+j-1])&y.hash_mask,de=y.prev[y.strstart&y.w_mask]=y.head[y.ins_h],y.head[y.ins_h]=y.strstart),y.prev_length=y.match_length,y.prev_match=y.match_start,y.match_length=j-1,de!==0&&y.prev_length<y.max_lazy_match&&y.strstart-de<=y.w_size-ne&&(y.match_length=Be(y,de),y.match_length<=5&&(y.strategy===1||y.match_length===j&&4096<y.strstart-y.match_start)&&(y.match_length=j-1)),y.prev_length>=j&&y.match_length<=y.prev_length){for(ie=y.strstart+y.lookahead-j,ae=r._tr_tally(y,y.strstart-1-y.prev_match,y.prev_length-j),y.lookahead-=y.prev_length-1,y.prev_length-=2;++y.strstart<=ie&&(y.ins_h=(y.ins_h<<y.hash_shift^y.window[y.strstart+j-1])&y.hash_mask,de=y.prev[y.strstart&y.w_mask]=y.head[y.ins_h],y.head[y.ins_h]=y.strstart),--y.prev_length!=0;);if(y.match_available=0,y.match_length=j-1,y.strstart++,ae&&(te(y,!1),y.strm.avail_out===0))return F}else if(y.match_available){if((ae=r._tr_tally(y,0,y.window[y.strstart-1]))&&te(y,!1),y.strstart++,y.lookahead--,y.strm.avail_out===0)return F}else y.match_available=1,y.strstart++,y.lookahead--}return y.match_available&&(ae=r._tr_tally(y,0,y.window[y.strstart-1]),y.match_available=0),y.insert=y.strstart<j-1?y.strstart:j-1,Ke===M?(te(y,!0),y.strm.avail_out===0?He:ue):y.last_lit&&(te(y,!1),y.strm.avail_out===0)?F:Te}L(tt,"W");function Pt(y,Ke,de,ae,ie){this.good_length=y,this.max_lazy=Ke,this.nice_length=de,this.max_chain=ae,this.func=ie}L(Pt,"M");function eA(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=H,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new a.Buf16(2*k),this.dyn_dtree=new a.Buf16(2*(2*W+1)),this.bl_tree=new a.Buf16(2*(2*V+1)),Ie(this.dyn_ltree),Ie(this.dyn_dtree),Ie(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new a.Buf16(Q+1),this.heap=new a.Buf16(2*K+1),Ie(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new a.Buf16(2*K+1),Ie(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}L(eA,"H");function Xt(y){var Ke;return y&&y.state?(y.total_in=y.total_out=0,y.data_type=d,(Ke=y.state).pending=0,Ke.pending_out=0,Ke.wrap<0&&(Ke.wrap=-Ke.wrap),Ke.status=Ke.wrap?x:q,y.adler=Ke.wrap===2?0:1,Ke.last_flush=C,r._tr_init(Ke),u):me(y,h)}L(Xt,"G");function bA(y){var Ke=Xt(y);return Ke===u&&function(de){de.window_size=2*de.w_size,Ie(de.head),de.max_lazy_match=I[de.level].max_lazy,de.good_match=I[de.level].good_length,de.nice_match=I[de.level].nice_length,de.max_chain_length=I[de.level].max_chain,de.strstart=0,de.block_start=0,de.lookahead=0,de.insert=0,de.match_length=de.prev_length=j-1,de.match_available=0,de.ins_h=0}(y.state),Ke}L(bA,"K");function YA(y,Ke,de,ae,ie,he){if(!y)return h;var Xe=1;if(Ke===P&&(Ke=6),ae<0?(Xe=0,ae=-ae):15<ae&&(Xe=2,ae-=16),ie<1||f<ie||de!==H||ae<8||15<ae||Ke<0||9<Ke||he<0||G<he)return me(y,h);ae===8&&(ae=9);var ke=new eA;return(y.state=ke).strm=y,ke.wrap=Xe,ke.gzhead=null,ke.w_bits=ae,ke.w_size=1<<ke.w_bits,ke.w_mask=ke.w_size-1,ke.hash_bits=ie+7,ke.hash_size=1<<ke.hash_bits,ke.hash_mask=ke.hash_size-1,ke.hash_shift=~~((ke.hash_bits+j-1)/j),ke.window=new a.Buf8(2*ke.w_size),ke.head=new a.Buf16(ke.hash_size),ke.prev=new a.Buf16(ke.w_size),ke.lit_bufsize=1<<ie+6,ke.pending_buf_size=4*ke.lit_bufsize,ke.pending_buf=new a.Buf8(ke.pending_buf_size),ke.d_buf=1*ke.lit_bufsize,ke.l_buf=3*ke.lit_bufsize,ke.level=Ke,ke.strategy=he,ke.method=de,bA(y)}L(YA,"Y"),I=[new Pt(0,0,0,0,function(y,Ke){var de=65535;for(de>y.pending_buf_size-5&&(de=y.pending_buf_size-5);;){if(y.lookahead<=1){if(st(y),y.lookahead===0&&Ke===C)return F;if(y.lookahead===0)break}y.strstart+=y.lookahead,y.lookahead=0;var ae=y.block_start+de;if((y.strstart===0||y.strstart>=ae)&&(y.lookahead=y.strstart-ae,y.strstart=ae,te(y,!1),y.strm.avail_out===0)||y.strstart-y.block_start>=y.w_size-ne&&(te(y,!1),y.strm.avail_out===0))return F}return y.insert=0,Ke===M?(te(y,!0),y.strm.avail_out===0?He:ue):(y.strstart>y.block_start&&(te(y,!1),y.strm.avail_out),F)}),new Pt(4,4,8,4,ft),new Pt(4,5,16,8,ft),new Pt(4,6,32,32,ft),new Pt(4,4,16,16,tt),new Pt(8,16,32,32,tt),new Pt(8,16,128,128,tt),new Pt(8,32,128,256,tt),new Pt(32,128,258,1024,tt),new Pt(32,258,258,4096,tt)],n.deflateInit=function(y,Ke){return YA(y,Ke,H,15,8,0)},n.deflateInit2=YA,n.deflateReset=bA,n.deflateResetKeep=Xt,n.deflateSetHeader=function(y,Ke){return y&&y.state?y.state.wrap!==2?h:(y.state.gzhead=Ke,u):h},n.deflate=function(y,Ke){var de,ae,ie,he;if(!y||!y.state||5<Ke||Ke<0)return y?me(y,h):h;if(ae=y.state,!y.output||!y.input&&y.avail_in!==0||ae.status===666&&Ke!==M)return me(y,y.avail_out===0?-5:h);if(ae.strm=y,de=ae.last_flush,ae.last_flush=Ke,ae.status===x)if(ae.wrap===2)y.adler=0,Le(ae,31),Le(ae,139),Le(ae,8),ae.gzhead?(Le(ae,(ae.gzhead.text?1:0)+(ae.gzhead.hcrc?2:0)+(ae.gzhead.extra?4:0)+(ae.gzhead.name?8:0)+(ae.gzhead.comment?16:0)),Le(ae,255&ae.gzhead.time),Le(ae,ae.gzhead.time>>8&255),Le(ae,ae.gzhead.time>>16&255),Le(ae,ae.gzhead.time>>24&255),Le(ae,ae.level===9?2:2<=ae.strategy||ae.level<2?4:0),Le(ae,255&ae.gzhead.os),ae.gzhead.extra&&ae.gzhead.extra.length&&(Le(ae,255&ae.gzhead.extra.length),Le(ae,ae.gzhead.extra.length>>8&255)),ae.gzhead.hcrc&&(y.adler=o(y.adler,ae.pending_buf,ae.pending,0)),ae.gzindex=0,ae.status=69):(Le(ae,0),Le(ae,0),Le(ae,0),Le(ae,0),Le(ae,0),Le(ae,ae.level===9?2:2<=ae.strategy||ae.level<2?4:0),Le(ae,3),ae.status=q);else{var Xe=H+(ae.w_bits-8<<4)<<8;Xe|=(2<=ae.strategy||ae.level<2?0:ae.level<6?1:ae.level===6?2:3)<<6,ae.strstart!==0&&(Xe|=32),Xe+=31-Xe%31,ae.status=q,Ue(ae,Xe),ae.strstart!==0&&(Ue(ae,y.adler>>>16),Ue(ae,65535&y.adler)),y.adler=1}if(ae.status===69)if(ae.gzhead.extra){for(ie=ae.pending;ae.gzindex<(65535&ae.gzhead.extra.length)&&(ae.pending!==ae.pending_buf_size||(ae.gzhead.hcrc&&ae.pending>ie&&(y.adler=o(y.adler,ae.pending_buf,ae.pending-ie,ie)),z(y),ie=ae.pending,ae.pending!==ae.pending_buf_size));)Le(ae,255&ae.gzhead.extra[ae.gzindex]),ae.gzindex++;ae.gzhead.hcrc&&ae.pending>ie&&(y.adler=o(y.adler,ae.pending_buf,ae.pending-ie,ie)),ae.gzindex===ae.gzhead.extra.length&&(ae.gzindex=0,ae.status=73)}else ae.status=73;if(ae.status===73)if(ae.gzhead.name){ie=ae.pending;do{if(ae.pending===ae.pending_buf_size&&(ae.gzhead.hcrc&&ae.pending>ie&&(y.adler=o(y.adler,ae.pending_buf,ae.pending-ie,ie)),z(y),ie=ae.pending,ae.pending===ae.pending_buf_size)){he=1;break}he=ae.gzindex<ae.gzhead.name.length?255&ae.gzhead.name.charCodeAt(ae.gzindex++):0,Le(ae,he)}while(he!==0);ae.gzhead.hcrc&&ae.pending>ie&&(y.adler=o(y.adler,ae.pending_buf,ae.pending-ie,ie)),he===0&&(ae.gzindex=0,ae.status=91)}else ae.status=91;if(ae.status===91)if(ae.gzhead.comment){ie=ae.pending;do{if(ae.pending===ae.pending_buf_size&&(ae.gzhead.hcrc&&ae.pending>ie&&(y.adler=o(y.adler,ae.pending_buf,ae.pending-ie,ie)),z(y),ie=ae.pending,ae.pending===ae.pending_buf_size)){he=1;break}he=ae.gzindex<ae.gzhead.comment.length?255&ae.gzhead.comment.charCodeAt(ae.gzindex++):0,Le(ae,he)}while(he!==0);ae.gzhead.hcrc&&ae.pending>ie&&(y.adler=o(y.adler,ae.pending_buf,ae.pending-ie,ie)),he===0&&(ae.status=103)}else ae.status=103;if(ae.status===103&&(ae.gzhead.hcrc?(ae.pending+2>ae.pending_buf_size&&z(y),ae.pending+2<=ae.pending_buf_size&&(Le(ae,255&y.adler),Le(ae,y.adler>>8&255),y.adler=0,ae.status=q)):ae.status=q),ae.pending!==0){if(z(y),y.avail_out===0)return ae.last_flush=-1,u}else if(y.avail_in===0&&Me(Ke)<=Me(de)&&Ke!==M)return me(y,-5);if(ae.status===666&&y.avail_in!==0)return me(y,-5);if(y.avail_in!==0||ae.lookahead!==0||Ke!==C&&ae.status!==666){var ke=ae.strategy===2?function(Ge,pe){for(var $e;;){if(Ge.lookahead===0&&(st(Ge),Ge.lookahead===0)){if(pe===C)return F;break}if(Ge.match_length=0,$e=r._tr_tally(Ge,0,Ge.window[Ge.strstart]),Ge.lookahead--,Ge.strstart++,$e&&(te(Ge,!1),Ge.strm.avail_out===0))return F}return Ge.insert=0,pe===M?(te(Ge,!0),Ge.strm.avail_out===0?He:ue):Ge.last_lit&&(te(Ge,!1),Ge.strm.avail_out===0)?F:Te}(ae,Ke):ae.strategy===3?function(Ge,pe){for(var $e,Qe,ut,Qt,xt=Ge.window;;){if(Ge.lookahead<=J){if(st(Ge),Ge.lookahead<=J&&pe===C)return F;if(Ge.lookahead===0)break}if(Ge.match_length=0,Ge.lookahead>=j&&0<Ge.strstart&&(Qe=xt[ut=Ge.strstart-1])===xt[++ut]&&Qe===xt[++ut]&&Qe===xt[++ut]){Qt=Ge.strstart+J;do;while(Qe===xt[++ut]&&Qe===xt[++ut]&&Qe===xt[++ut]&&Qe===xt[++ut]&&Qe===xt[++ut]&&Qe===xt[++ut]&&Qe===xt[++ut]&&Qe===xt[++ut]&&ut<Qt);Ge.match_length=J-(Qt-ut),Ge.match_length>Ge.lookahead&&(Ge.match_length=Ge.lookahead)}if(Ge.match_length>=j?($e=r._tr_tally(Ge,1,Ge.match_length-j),Ge.lookahead-=Ge.match_length,Ge.strstart+=Ge.match_length,Ge.match_length=0):($e=r._tr_tally(Ge,0,Ge.window[Ge.strstart]),Ge.lookahead--,Ge.strstart++),$e&&(te(Ge,!1),Ge.strm.avail_out===0))return F}return Ge.insert=0,pe===M?(te(Ge,!0),Ge.strm.avail_out===0?He:ue):Ge.last_lit&&(te(Ge,!1),Ge.strm.avail_out===0)?F:Te}(ae,Ke):I[ae.level].func(ae,Ke);if(ke!==He&&ke!==ue||(ae.status=666),ke===F||ke===He)return y.avail_out===0&&(ae.last_flush=-1),u;if(ke===Te&&(Ke===1?r._tr_align(ae):Ke!==5&&(r._tr_stored_block(ae,0,0,!1),Ke===3&&(Ie(ae.head),ae.lookahead===0&&(ae.strstart=0,ae.block_start=0,ae.insert=0))),z(y),y.avail_out===0))return ae.last_flush=-1,u}return Ke!==M?u:ae.wrap<=0?1:(ae.wrap===2?(Le(ae,255&y.adler),Le(ae,y.adler>>8&255),Le(ae,y.adler>>16&255),Le(ae,y.adler>>24&255),Le(ae,255&y.total_in),Le(ae,y.total_in>>8&255),Le(ae,y.total_in>>16&255),Le(ae,y.total_in>>24&255)):(Ue(ae,y.adler>>>16),Ue(ae,65535&y.adler)),z(y),0<ae.wrap&&(ae.wrap=-ae.wrap),ae.pending!==0?u:1)},n.deflateEnd=function(y){var Ke;return y&&y.state?(Ke=y.state.status)!==x&&Ke!==69&&Ke!==73&&Ke!==91&&Ke!==103&&Ke!==q&&Ke!==666?me(y,h):(y.state=null,Ke===q?me(y,-3):u):h},n.deflateSetDictionary=function(y,Ke){var de,ae,ie,he,Xe,ke,Ge,pe,$e=Ke.length;if(!y||!y.state||(he=(de=y.state).wrap)===2||he===1&&de.status!==x||de.lookahead)return h;for(he===1&&(y.adler=S(y.adler,Ke,$e,0)),de.wrap=0,$e>=de.w_size&&(he===0&&(Ie(de.head),de.strstart=0,de.block_start=0,de.insert=0),pe=new a.Buf8(de.w_size),a.arraySet(pe,Ke,$e-de.w_size,de.w_size,0),Ke=pe,$e=de.w_size),Xe=y.avail_in,ke=y.next_in,Ge=y.input,y.avail_in=$e,y.next_in=0,y.input=Ke,st(de);de.lookahead>=j;){for(ae=de.strstart,ie=de.lookahead-(j-1);de.ins_h=(de.ins_h<<de.hash_shift^de.window[ae+j-1])&de.hash_mask,de.prev[ae&de.w_mask]=de.head[de.ins_h],de.head[de.ins_h]=ae,ae++,--ie;);de.strstart=ae,de.lookahead=j-1,st(de)}return de.strstart+=de.lookahead,de.block_start=de.strstart,de.insert=de.lookahead,de.lookahead=0,de.match_length=de.prev_length=j-1,de.match_available=0,y.next_in=ke,y.input=Ge,y.avail_in=Xe,de.wrap=he,u},n.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(s,R,n){R.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(s,R,n){R.exports=function(I,a){var r,S,o,l,C,M,u,h,P,G,d,H,f,K,W,V,k,Q,j,J,ne,x,q,F,Te;r=I.state,S=I.next_in,F=I.input,o=S+(I.avail_in-5),l=I.next_out,Te=I.output,C=l-(a-I.avail_out),M=l+(I.avail_out-257),u=r.dmax,h=r.wsize,P=r.whave,G=r.wnext,d=r.window,H=r.hold,f=r.bits,K=r.lencode,W=r.distcode,V=(1<<r.lenbits)-1,k=(1<<r.distbits)-1;e:do{f<15&&(H+=F[S++]<<f,f+=8,H+=F[S++]<<f,f+=8),Q=K[H&V];t:for(;;){if(H>>>=j=Q>>>24,f-=j,(j=Q>>>16&255)===0)Te[l++]=65535&Q;else{if(!(16&j)){if(!(64&j)){Q=K[(65535&Q)+(H&(1<<j)-1)];continue t}if(32&j){r.mode=12;break e}I.msg="invalid literal/length code",r.mode=30;break e}J=65535&Q,(j&=15)&&(f<j&&(H+=F[S++]<<f,f+=8),J+=H&(1<<j)-1,H>>>=j,f-=j),f<15&&(H+=F[S++]<<f,f+=8,H+=F[S++]<<f,f+=8),Q=W[H&k];A:for(;;){if(H>>>=j=Q>>>24,f-=j,!(16&(j=Q>>>16&255))){if(!(64&j)){Q=W[(65535&Q)+(H&(1<<j)-1)];continue A}I.msg="invalid distance code",r.mode=30;break e}if(ne=65535&Q,f<(j&=15)&&(H+=F[S++]<<f,(f+=8)<j&&(H+=F[S++]<<f,f+=8)),u<(ne+=H&(1<<j)-1)){I.msg="invalid distance too far back",r.mode=30;break e}if(H>>>=j,f-=j,(j=l-C)<ne){if(P<(j=ne-j)&&r.sane){I.msg="invalid distance too far back",r.mode=30;break e}if(q=d,(x=0)===G){if(x+=h-j,j<J){for(J-=j;Te[l++]=d[x++],--j;);x=l-ne,q=Te}}else if(G<j){if(x+=h+G-j,(j-=G)<J){for(J-=j;Te[l++]=d[x++],--j;);if(x=0,G<J){for(J-=j=G;Te[l++]=d[x++],--j;);x=l-ne,q=Te}}}else if(x+=G-j,j<J){for(J-=j;Te[l++]=d[x++],--j;);x=l-ne,q=Te}for(;2<J;)Te[l++]=q[x++],Te[l++]=q[x++],Te[l++]=q[x++],J-=3;J&&(Te[l++]=q[x++],1<J&&(Te[l++]=q[x++]))}else{for(x=l-ne;Te[l++]=Te[x++],Te[l++]=Te[x++],Te[l++]=Te[x++],2<(J-=3););J&&(Te[l++]=Te[x++],1<J&&(Te[l++]=Te[x++]))}break}}break}}while(S<o&&l<M);S-=J=f>>3,H&=(1<<(f-=J<<3))-1,I.next_in=S,I.next_out=l,I.avail_in=S<o?o-S+5:5-(S-o),I.avail_out=l<M?M-l+257:257-(l-M),r.hold=H,r.bits=f}},{}],49:[function(s,R,n){var I=s("../utils/common"),a=s("./adler32"),r=s("./crc32"),S=s("./inffast"),o=s("./inftrees"),l=1,C=2,M=0,u=-2,h=1,P=852,G=592;function d(x){return(x>>>24&255)+(x>>>8&65280)+((65280&x)<<8)+((255&x)<<24)}L(d,"L");function H(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}L(H,"s");function f(x){var q;return x&&x.state?(q=x.state,x.total_in=x.total_out=q.total=0,x.msg="",q.wrap&&(x.adler=1&q.wrap),q.mode=h,q.last=0,q.havedict=0,q.dmax=32768,q.head=null,q.hold=0,q.bits=0,q.lencode=q.lendyn=new I.Buf32(P),q.distcode=q.distdyn=new I.Buf32(G),q.sane=1,q.back=-1,M):u}L(f,"a");function K(x){var q;return x&&x.state?((q=x.state).wsize=0,q.whave=0,q.wnext=0,f(x)):u}L(K,"o");function W(x,q){var F,Te;return x&&x.state?(Te=x.state,q<0?(F=0,q=-q):(F=1+(q>>4),q<48&&(q&=15)),q&&(q<8||15<q)?u:(Te.window!==null&&Te.wbits!==q&&(Te.window=null),Te.wrap=F,Te.wbits=q,K(x))):u}L(W,"h");function V(x,q){var F,Te;return x?(Te=new H,(x.state=Te).window=null,(F=W(x,q))!==M&&(x.state=null),F):u}L(V,"u");var k,Q,j=!0;function J(x){if(j){var q;for(k=new I.Buf32(512),Q=new I.Buf32(32),q=0;q<144;)x.lens[q++]=8;for(;q<256;)x.lens[q++]=9;for(;q<280;)x.lens[q++]=7;for(;q<288;)x.lens[q++]=8;for(o(l,x.lens,0,288,k,0,x.work,{bits:9}),q=0;q<32;)x.lens[q++]=5;o(C,x.lens,0,32,Q,0,x.work,{bits:5}),j=!1}x.lencode=k,x.lenbits=9,x.distcode=Q,x.distbits=5}L(J,"j");function ne(x,q,F,Te){var He,ue=x.state;return ue.window===null&&(ue.wsize=1<<ue.wbits,ue.wnext=0,ue.whave=0,ue.window=new I.Buf8(ue.wsize)),Te>=ue.wsize?(I.arraySet(ue.window,q,F-ue.wsize,ue.wsize,0),ue.wnext=0,ue.whave=ue.wsize):(Te<(He=ue.wsize-ue.wnext)&&(He=Te),I.arraySet(ue.window,q,F-Te,He,ue.wnext),(Te-=He)?(I.arraySet(ue.window,q,F-Te,Te,0),ue.wnext=Te,ue.whave=ue.wsize):(ue.wnext+=He,ue.wnext===ue.wsize&&(ue.wnext=0),ue.whave<ue.wsize&&(ue.whave+=He))),0}L(ne,"Z"),n.inflateReset=K,n.inflateReset2=W,n.inflateResetKeep=f,n.inflateInit=function(x){return V(x,15)},n.inflateInit2=V,n.inflate=function(x,q){var F,Te,He,ue,me,Me,Ie,z,te,Le,Ue,Be,st,ft,tt,Pt,eA,Xt,bA,YA,y,Ke,de,ae,ie=0,he=new I.Buf8(4),Xe=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!x||!x.state||!x.output||!x.input&&x.avail_in!==0)return u;(F=x.state).mode===12&&(F.mode=13),me=x.next_out,He=x.output,Ie=x.avail_out,ue=x.next_in,Te=x.input,Me=x.avail_in,z=F.hold,te=F.bits,Le=Me,Ue=Ie,Ke=M;e:for(;;)switch(F.mode){case h:if(F.wrap===0){F.mode=13;break}for(;te<16;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(2&F.wrap&&z===35615){he[F.check=0]=255&z,he[1]=z>>>8&255,F.check=r(F.check,he,2,0),te=z=0,F.mode=2;break}if(F.flags=0,F.head&&(F.head.done=!1),!(1&F.wrap)||(((255&z)<<8)+(z>>8))%31){x.msg="incorrect header check",F.mode=30;break}if((15&z)!=8){x.msg="unknown compression method",F.mode=30;break}if(te-=4,y=8+(15&(z>>>=4)),F.wbits===0)F.wbits=y;else if(y>F.wbits){x.msg="invalid window size",F.mode=30;break}F.dmax=1<<y,x.adler=F.check=1,F.mode=512&z?10:12,te=z=0;break;case 2:for(;te<16;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(F.flags=z,(255&F.flags)!=8){x.msg="unknown compression method",F.mode=30;break}if(57344&F.flags){x.msg="unknown header flags set",F.mode=30;break}F.head&&(F.head.text=z>>8&1),512&F.flags&&(he[0]=255&z,he[1]=z>>>8&255,F.check=r(F.check,he,2,0)),te=z=0,F.mode=3;case 3:for(;te<32;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}F.head&&(F.head.time=z),512&F.flags&&(he[0]=255&z,he[1]=z>>>8&255,he[2]=z>>>16&255,he[3]=z>>>24&255,F.check=r(F.check,he,4,0)),te=z=0,F.mode=4;case 4:for(;te<16;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}F.head&&(F.head.xflags=255&z,F.head.os=z>>8),512&F.flags&&(he[0]=255&z,he[1]=z>>>8&255,F.check=r(F.check,he,2,0)),te=z=0,F.mode=5;case 5:if(1024&F.flags){for(;te<16;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}F.length=z,F.head&&(F.head.extra_len=z),512&F.flags&&(he[0]=255&z,he[1]=z>>>8&255,F.check=r(F.check,he,2,0)),te=z=0}else F.head&&(F.head.extra=null);F.mode=6;case 6:if(1024&F.flags&&(Me<(Be=F.length)&&(Be=Me),Be&&(F.head&&(y=F.head.extra_len-F.length,F.head.extra||(F.head.extra=new Array(F.head.extra_len)),I.arraySet(F.head.extra,Te,ue,Be,y)),512&F.flags&&(F.check=r(F.check,Te,Be,ue)),Me-=Be,ue+=Be,F.length-=Be),F.length))break e;F.length=0,F.mode=7;case 7:if(2048&F.flags){if(Me===0)break e;for(Be=0;y=Te[ue+Be++],F.head&&y&&F.length<65536&&(F.head.name+=String.fromCharCode(y)),y&&Be<Me;);if(512&F.flags&&(F.check=r(F.check,Te,Be,ue)),Me-=Be,ue+=Be,y)break e}else F.head&&(F.head.name=null);F.length=0,F.mode=8;case 8:if(4096&F.flags){if(Me===0)break e;for(Be=0;y=Te[ue+Be++],F.head&&y&&F.length<65536&&(F.head.comment+=String.fromCharCode(y)),y&&Be<Me;);if(512&F.flags&&(F.check=r(F.check,Te,Be,ue)),Me-=Be,ue+=Be,y)break e}else F.head&&(F.head.comment=null);F.mode=9;case 9:if(512&F.flags){for(;te<16;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(z!==(65535&F.check)){x.msg="header crc mismatch",F.mode=30;break}te=z=0}F.head&&(F.head.hcrc=F.flags>>9&1,F.head.done=!0),x.adler=F.check=0,F.mode=12;break;case 10:for(;te<32;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}x.adler=F.check=d(z),te=z=0,F.mode=11;case 11:if(F.havedict===0)return x.next_out=me,x.avail_out=Ie,x.next_in=ue,x.avail_in=Me,F.hold=z,F.bits=te,2;x.adler=F.check=1,F.mode=12;case 12:if(q===5||q===6)break e;case 13:if(F.last){z>>>=7&te,te-=7&te,F.mode=27;break}for(;te<3;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}switch(F.last=1&z,te-=1,3&(z>>>=1)){case 0:F.mode=14;break;case 1:if(J(F),F.mode=20,q!==6)break;z>>>=2,te-=2;break e;case 2:F.mode=17;break;case 3:x.msg="invalid block type",F.mode=30}z>>>=2,te-=2;break;case 14:for(z>>>=7&te,te-=7&te;te<32;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if((65535&z)!=(z>>>16^65535)){x.msg="invalid stored block lengths",F.mode=30;break}if(F.length=65535&z,te=z=0,F.mode=15,q===6)break e;case 15:F.mode=16;case 16:if(Be=F.length){if(Me<Be&&(Be=Me),Ie<Be&&(Be=Ie),Be===0)break e;I.arraySet(He,Te,ue,Be,me),Me-=Be,ue+=Be,Ie-=Be,me+=Be,F.length-=Be;break}F.mode=12;break;case 17:for(;te<14;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(F.nlen=257+(31&z),z>>>=5,te-=5,F.ndist=1+(31&z),z>>>=5,te-=5,F.ncode=4+(15&z),z>>>=4,te-=4,286<F.nlen||30<F.ndist){x.msg="too many length or distance symbols",F.mode=30;break}F.have=0,F.mode=18;case 18:for(;F.have<F.ncode;){for(;te<3;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}F.lens[Xe[F.have++]]=7&z,z>>>=3,te-=3}for(;F.have<19;)F.lens[Xe[F.have++]]=0;if(F.lencode=F.lendyn,F.lenbits=7,de={bits:F.lenbits},Ke=o(0,F.lens,0,19,F.lencode,0,F.work,de),F.lenbits=de.bits,Ke){x.msg="invalid code lengths set",F.mode=30;break}F.have=0,F.mode=19;case 19:for(;F.have<F.nlen+F.ndist;){for(;Pt=(ie=F.lencode[z&(1<<F.lenbits)-1])>>>16&255,eA=65535&ie,!((tt=ie>>>24)<=te);){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(eA<16)z>>>=tt,te-=tt,F.lens[F.have++]=eA;else{if(eA===16){for(ae=tt+2;te<ae;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(z>>>=tt,te-=tt,F.have===0){x.msg="invalid bit length repeat",F.mode=30;break}y=F.lens[F.have-1],Be=3+(3&z),z>>>=2,te-=2}else if(eA===17){for(ae=tt+3;te<ae;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}te-=tt,y=0,Be=3+(7&(z>>>=tt)),z>>>=3,te-=3}else{for(ae=tt+7;te<ae;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}te-=tt,y=0,Be=11+(127&(z>>>=tt)),z>>>=7,te-=7}if(F.have+Be>F.nlen+F.ndist){x.msg="invalid bit length repeat",F.mode=30;break}for(;Be--;)F.lens[F.have++]=y}}if(F.mode===30)break;if(F.lens[256]===0){x.msg="invalid code -- missing end-of-block",F.mode=30;break}if(F.lenbits=9,de={bits:F.lenbits},Ke=o(l,F.lens,0,F.nlen,F.lencode,0,F.work,de),F.lenbits=de.bits,Ke){x.msg="invalid literal/lengths set",F.mode=30;break}if(F.distbits=6,F.distcode=F.distdyn,de={bits:F.distbits},Ke=o(C,F.lens,F.nlen,F.ndist,F.distcode,0,F.work,de),F.distbits=de.bits,Ke){x.msg="invalid distances set",F.mode=30;break}if(F.mode=20,q===6)break e;case 20:F.mode=21;case 21:if(6<=Me&&258<=Ie){x.next_out=me,x.avail_out=Ie,x.next_in=ue,x.avail_in=Me,F.hold=z,F.bits=te,S(x,Ue),me=x.next_out,He=x.output,Ie=x.avail_out,ue=x.next_in,Te=x.input,Me=x.avail_in,z=F.hold,te=F.bits,F.mode===12&&(F.back=-1);break}for(F.back=0;Pt=(ie=F.lencode[z&(1<<F.lenbits)-1])>>>16&255,eA=65535&ie,!((tt=ie>>>24)<=te);){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(Pt&&!(240&Pt)){for(Xt=tt,bA=Pt,YA=eA;Pt=(ie=F.lencode[YA+((z&(1<<Xt+bA)-1)>>Xt)])>>>16&255,eA=65535&ie,!(Xt+(tt=ie>>>24)<=te);){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}z>>>=Xt,te-=Xt,F.back+=Xt}if(z>>>=tt,te-=tt,F.back+=tt,F.length=eA,Pt===0){F.mode=26;break}if(32&Pt){F.back=-1,F.mode=12;break}if(64&Pt){x.msg="invalid literal/length code",F.mode=30;break}F.extra=15&Pt,F.mode=22;case 22:if(F.extra){for(ae=F.extra;te<ae;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}F.length+=z&(1<<F.extra)-1,z>>>=F.extra,te-=F.extra,F.back+=F.extra}F.was=F.length,F.mode=23;case 23:for(;Pt=(ie=F.distcode[z&(1<<F.distbits)-1])>>>16&255,eA=65535&ie,!((tt=ie>>>24)<=te);){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(!(240&Pt)){for(Xt=tt,bA=Pt,YA=eA;Pt=(ie=F.distcode[YA+((z&(1<<Xt+bA)-1)>>Xt)])>>>16&255,eA=65535&ie,!(Xt+(tt=ie>>>24)<=te);){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}z>>>=Xt,te-=Xt,F.back+=Xt}if(z>>>=tt,te-=tt,F.back+=tt,64&Pt){x.msg="invalid distance code",F.mode=30;break}F.offset=eA,F.extra=15&Pt,F.mode=24;case 24:if(F.extra){for(ae=F.extra;te<ae;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}F.offset+=z&(1<<F.extra)-1,z>>>=F.extra,te-=F.extra,F.back+=F.extra}if(F.offset>F.dmax){x.msg="invalid distance too far back",F.mode=30;break}F.mode=25;case 25:if(Ie===0)break e;if(Be=Ue-Ie,F.offset>Be){if((Be=F.offset-Be)>F.whave&&F.sane){x.msg="invalid distance too far back",F.mode=30;break}st=Be>F.wnext?(Be-=F.wnext,F.wsize-Be):F.wnext-Be,Be>F.length&&(Be=F.length),ft=F.window}else ft=He,st=me-F.offset,Be=F.length;for(Ie<Be&&(Be=Ie),Ie-=Be,F.length-=Be;He[me++]=ft[st++],--Be;);F.length===0&&(F.mode=21);break;case 26:if(Ie===0)break e;He[me++]=F.length,Ie--,F.mode=21;break;case 27:if(F.wrap){for(;te<32;){if(Me===0)break e;Me--,z|=Te[ue++]<<te,te+=8}if(Ue-=Ie,x.total_out+=Ue,F.total+=Ue,Ue&&(x.adler=F.check=F.flags?r(F.check,He,Ue,me-Ue):a(F.check,He,Ue,me-Ue)),Ue=Ie,(F.flags?z:d(z))!==F.check){x.msg="incorrect data check",F.mode=30;break}te=z=0}F.mode=28;case 28:if(F.wrap&&F.flags){for(;te<32;){if(Me===0)break e;Me--,z+=Te[ue++]<<te,te+=8}if(z!==(4294967295&F.total)){x.msg="incorrect length check",F.mode=30;break}te=z=0}F.mode=29;case 29:Ke=1;break e;case 30:Ke=-3;break e;case 31:return-4;case 32:default:return u}return x.next_out=me,x.avail_out=Ie,x.next_in=ue,x.avail_in=Me,F.hold=z,F.bits=te,(F.wsize||Ue!==x.avail_out&&F.mode<30&&(F.mode<27||q!==4))&&ne(x,x.output,x.next_out,Ue-x.avail_out)?(F.mode=31,-4):(Le-=x.avail_in,Ue-=x.avail_out,x.total_in+=Le,x.total_out+=Ue,F.total+=Ue,F.wrap&&Ue&&(x.adler=F.check=F.flags?r(F.check,He,Ue,x.next_out-Ue):a(F.check,He,Ue,x.next_out-Ue)),x.data_type=F.bits+(F.last?64:0)+(F.mode===12?128:0)+(F.mode===20||F.mode===15?256:0),(Le==0&&Ue===0||q===4)&&Ke===M&&(Ke=-5),Ke)},n.inflateEnd=function(x){if(!x||!x.state)return u;var q=x.state;return q.window&&(q.window=null),x.state=null,M},n.inflateGetHeader=function(x,q){var F;return x&&x.state&&2&(F=x.state).wrap?((F.head=q).done=!1,M):u},n.inflateSetDictionary=function(x,q){var F,Te=q.length;return x&&x.state?(F=x.state).wrap!==0&&F.mode!==11?u:F.mode===11&&a(1,q,Te,0)!==F.check?-3:ne(x,q,Te,Te)?(F.mode=31,-4):(F.havedict=1,M):u},n.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(s,R,n){var I=s("../utils/common"),a=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],r=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],S=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],o=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];R.exports=function(l,C,M,u,h,P,G,d){var H,f,K,W,V,k,Q,j,J,ne=d.bits,x=0,q=0,F=0,Te=0,He=0,ue=0,me=0,Me=0,Ie=0,z=0,te=null,Le=0,Ue=new I.Buf16(16),Be=new I.Buf16(16),st=null,ft=0;for(x=0;x<=15;x++)Ue[x]=0;for(q=0;q<u;q++)Ue[C[M+q]]++;for(He=ne,Te=15;1<=Te&&Ue[Te]===0;Te--);if(Te<He&&(He=Te),Te===0)return h[P++]=20971520,h[P++]=20971520,d.bits=1,0;for(F=1;F<Te&&Ue[F]===0;F++);for(He<F&&(He=F),x=Me=1;x<=15;x++)if(Me<<=1,(Me-=Ue[x])<0)return-1;if(0<Me&&(l===0||Te!==1))return-1;for(Be[1]=0,x=1;x<15;x++)Be[x+1]=Be[x]+Ue[x];for(q=0;q<u;q++)C[M+q]!==0&&(G[Be[C[M+q]]++]=q);if(k=l===0?(te=st=G,19):l===1?(te=a,Le-=257,st=r,ft-=257,256):(te=S,st=o,-1),x=F,V=P,me=q=z=0,K=-1,W=(Ie=1<<(ue=He))-1,l===1&&852<Ie||l===2&&592<Ie)return 1;for(;;){for(Q=x-me,J=G[q]<k?(j=0,G[q]):G[q]>k?(j=st[ft+G[q]],te[Le+G[q]]):(j=96,0),H=1<<x-me,F=f=1<<ue;h[V+(z>>me)+(f-=H)]=Q<<24|j<<16|J|0,f!==0;);for(H=1<<x-1;z&H;)H>>=1;if(H!==0?(z&=H-1,z+=H):z=0,q++,--Ue[x]==0){if(x===Te)break;x=C[M+G[q]]}if(He<x&&(z&W)!==K){for(me===0&&(me=He),V+=F,Me=1<<(ue=x-me);ue+me<Te&&!((Me-=Ue[ue+me])<=0);)ue++,Me<<=1;if(Ie+=1<<ue,l===1&&852<Ie||l===2&&592<Ie)return 1;h[K=z&W]=He<<24|ue<<16|V-P|0}}return z!==0&&(h[V+z]=x-me<<24|64<<16|0),d.bits=He,0}},{"../utils/common":41}],51:[function(s,R,n){R.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(s,R,n){var I=s("../utils/common"),a=0,r=1;function S(ie){for(var he=ie.length;0<=--he;)ie[he]=0}L(S,"n");var o=0,l=29,C=256,M=C+1+l,u=30,h=19,P=2*M+1,G=15,d=16,H=7,f=256,K=16,W=17,V=18,k=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Q=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],j=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],J=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],ne=new Array(2*(M+2));S(ne);var x=new Array(2*u);S(x);var q=new Array(512);S(q);var F=new Array(256);S(F);var Te=new Array(l);S(Te);var He,ue,me,Me=new Array(u);function Ie(ie,he,Xe,ke,Ge){this.static_tree=ie,this.extra_bits=he,this.extra_base=Xe,this.elems=ke,this.max_length=Ge,this.has_stree=ie&&ie.length}L(Ie,"D");function z(ie,he){this.dyn_tree=ie,this.max_code=0,this.stat_desc=he}L(z,"F");function te(ie){return ie<256?q[ie]:q[256+(ie>>>7)]}L(te,"N");function Le(ie,he){ie.pending_buf[ie.pending++]=255&he,ie.pending_buf[ie.pending++]=he>>>8&255}L(Le,"U");function Ue(ie,he,Xe){ie.bi_valid>d-Xe?(ie.bi_buf|=he<<ie.bi_valid&65535,Le(ie,ie.bi_buf),ie.bi_buf=he>>d-ie.bi_valid,ie.bi_valid+=Xe-d):(ie.bi_buf|=he<<ie.bi_valid&65535,ie.bi_valid+=Xe)}L(Ue,"P");function Be(ie,he,Xe){Ue(ie,Xe[2*he],Xe[2*he+1])}L(Be,"L");function st(ie,he){for(var Xe=0;Xe|=1&ie,ie>>>=1,Xe<<=1,0<--he;);return Xe>>>1}L(st,"j");function ft(ie,he,Xe){var ke,Ge,pe=new Array(G+1),$e=0;for(ke=1;ke<=G;ke++)pe[ke]=$e=$e+Xe[ke-1]<<1;for(Ge=0;Ge<=he;Ge++){var Qe=ie[2*Ge+1];Qe!==0&&(ie[2*Ge]=st(pe[Qe]++,Qe))}}L(ft,"Z");function tt(ie){var he;for(he=0;he<M;he++)ie.dyn_ltree[2*he]=0;for(he=0;he<u;he++)ie.dyn_dtree[2*he]=0;for(he=0;he<h;he++)ie.bl_tree[2*he]=0;ie.dyn_ltree[2*f]=1,ie.opt_len=ie.static_len=0,ie.last_lit=ie.matches=0}L(tt,"W");function Pt(ie){8<ie.bi_valid?Le(ie,ie.bi_buf):0<ie.bi_valid&&(ie.pending_buf[ie.pending++]=ie.bi_buf),ie.bi_buf=0,ie.bi_valid=0}L(Pt,"M");function eA(ie,he,Xe,ke){var Ge=2*he,pe=2*Xe;return ie[Ge]<ie[pe]||ie[Ge]===ie[pe]&&ke[he]<=ke[Xe]}L(eA,"H");function Xt(ie,he,Xe){for(var ke=ie.heap[Xe],Ge=Xe<<1;Ge<=ie.heap_len&&(Ge<ie.heap_len&&eA(he,ie.heap[Ge+1],ie.heap[Ge],ie.depth)&&Ge++,!eA(he,ke,ie.heap[Ge],ie.depth));)ie.heap[Xe]=ie.heap[Ge],Xe=Ge,Ge<<=1;ie.heap[Xe]=ke}L(Xt,"G");function bA(ie,he,Xe){var ke,Ge,pe,$e,Qe=0;if(ie.last_lit!==0)for(;ke=ie.pending_buf[ie.d_buf+2*Qe]<<8|ie.pending_buf[ie.d_buf+2*Qe+1],Ge=ie.pending_buf[ie.l_buf+Qe],Qe++,ke===0?Be(ie,Ge,he):(Be(ie,(pe=F[Ge])+C+1,he),($e=k[pe])!==0&&Ue(ie,Ge-=Te[pe],$e),Be(ie,pe=te(--ke),Xe),($e=Q[pe])!==0&&Ue(ie,ke-=Me[pe],$e)),Qe<ie.last_lit;);Be(ie,f,he)}L(bA,"K");function YA(ie,he){var Xe,ke,Ge,pe=he.dyn_tree,$e=he.stat_desc.static_tree,Qe=he.stat_desc.has_stree,ut=he.stat_desc.elems,Qt=-1;for(ie.heap_len=0,ie.heap_max=P,Xe=0;Xe<ut;Xe++)pe[2*Xe]!==0?(ie.heap[++ie.heap_len]=Qt=Xe,ie.depth[Xe]=0):pe[2*Xe+1]=0;for(;ie.heap_len<2;)pe[2*(Ge=ie.heap[++ie.heap_len]=Qt<2?++Qt:0)]=1,ie.depth[Ge]=0,ie.opt_len--,Qe&&(ie.static_len-=$e[2*Ge+1]);for(he.max_code=Qt,Xe=ie.heap_len>>1;1<=Xe;Xe--)Xt(ie,pe,Xe);for(Ge=ut;Xe=ie.heap[1],ie.heap[1]=ie.heap[ie.heap_len--],Xt(ie,pe,1),ke=ie.heap[1],ie.heap[--ie.heap_max]=Xe,ie.heap[--ie.heap_max]=ke,pe[2*Ge]=pe[2*Xe]+pe[2*ke],ie.depth[Ge]=(ie.depth[Xe]>=ie.depth[ke]?ie.depth[Xe]:ie.depth[ke])+1,pe[2*Xe+1]=pe[2*ke+1]=Ge,ie.heap[1]=Ge++,Xt(ie,pe,1),2<=ie.heap_len;);ie.heap[--ie.heap_max]=ie.heap[1],function(xt,ME){var TR,hE,SR,IE,$O,Dn,hO=ME.dyn_tree,po=ME.max_code,Wo=ME.stat_desc.static_tree,TM=ME.stat_desc.has_stree,Yo=ME.stat_desc.extra_bits,yo=ME.stat_desc.extra_base,ei=ME.stat_desc.max_length,ha=0;for(IE=0;IE<=G;IE++)xt.bl_count[IE]=0;for(hO[2*xt.heap[xt.heap_max]+1]=0,TR=xt.heap_max+1;TR<P;TR++)ei<(IE=hO[2*hO[2*(hE=xt.heap[TR])+1]+1]+1)&&(IE=ei,ha++),hO[2*hE+1]=IE,po<hE||(xt.bl_count[IE]++,$O=0,yo<=hE&&($O=Yo[hE-yo]),Dn=hO[2*hE],xt.opt_len+=Dn*(IE+$O),TM&&(xt.static_len+=Dn*(Wo[2*hE+1]+$O)));if(ha!==0){do{for(IE=ei-1;xt.bl_count[IE]===0;)IE--;xt.bl_count[IE]--,xt.bl_count[IE+1]+=2,xt.bl_count[ei]--,ha-=2}while(0<ha);for(IE=ei;IE!==0;IE--)for(hE=xt.bl_count[IE];hE!==0;)po<(SR=xt.heap[--TR])||(hO[2*SR+1]!==IE&&(xt.opt_len+=(IE-hO[2*SR+1])*hO[2*SR],hO[2*SR+1]=IE),hE--)}}(ie,he),ft(pe,Qt,ie.bl_count)}L(YA,"Y");function y(ie,he,Xe){var ke,Ge,pe=-1,$e=he[1],Qe=0,ut=7,Qt=4;for($e===0&&(ut=138,Qt=3),he[2*(Xe+1)+1]=65535,ke=0;ke<=Xe;ke++)Ge=$e,$e=he[2*(ke+1)+1],++Qe<ut&&Ge===$e||(Qe<Qt?ie.bl_tree[2*Ge]+=Qe:Ge!==0?(Ge!==pe&&ie.bl_tree[2*Ge]++,ie.bl_tree[2*K]++):Qe<=10?ie.bl_tree[2*W]++:ie.bl_tree[2*V]++,pe=Ge,Qt=(Qe=0)===$e?(ut=138,3):Ge===$e?(ut=6,3):(ut=7,4))}L(y,"X");function Ke(ie,he,Xe){var ke,Ge,pe=-1,$e=he[1],Qe=0,ut=7,Qt=4;for($e===0&&(ut=138,Qt=3),ke=0;ke<=Xe;ke++)if(Ge=$e,$e=he[2*(ke+1)+1],!(++Qe<ut&&Ge===$e)){if(Qe<Qt)for(;Be(ie,Ge,ie.bl_tree),--Qe!=0;);else Ge!==0?(Ge!==pe&&(Be(ie,Ge,ie.bl_tree),Qe--),Be(ie,K,ie.bl_tree),Ue(ie,Qe-3,2)):Qe<=10?(Be(ie,W,ie.bl_tree),Ue(ie,Qe-3,3)):(Be(ie,V,ie.bl_tree),Ue(ie,Qe-11,7));pe=Ge,Qt=(Qe=0)===$e?(ut=138,3):Ge===$e?(ut=6,3):(ut=7,4)}}L(Ke,"V"),S(Me);var de=!1;function ae(ie,he,Xe,ke){Ue(ie,(o<<1)+(ke?1:0),3),function(Ge,pe,$e,Qe){Pt(Ge),Le(Ge,$e),Le(Ge,~$e),I.arraySet(Ge.pending_buf,Ge.window,pe,$e,Ge.pending),Ge.pending+=$e}(ie,he,Xe)}L(ae,"J"),n._tr_init=function(ie){de||(function(){var he,Xe,ke,Ge,pe,$e=new Array(G+1);for(Ge=ke=0;Ge<l-1;Ge++)for(Te[Ge]=ke,he=0;he<1<<k[Ge];he++)F[ke++]=Ge;for(F[ke-1]=Ge,Ge=pe=0;Ge<16;Ge++)for(Me[Ge]=pe,he=0;he<1<<Q[Ge];he++)q[pe++]=Ge;for(pe>>=7;Ge<u;Ge++)for(Me[Ge]=pe<<7,he=0;he<1<<Q[Ge]-7;he++)q[256+pe++]=Ge;for(Xe=0;Xe<=G;Xe++)$e[Xe]=0;for(he=0;he<=143;)ne[2*he+1]=8,he++,$e[8]++;for(;he<=255;)ne[2*he+1]=9,he++,$e[9]++;for(;he<=279;)ne[2*he+1]=7,he++,$e[7]++;for(;he<=287;)ne[2*he+1]=8,he++,$e[8]++;for(ft(ne,M+1,$e),he=0;he<u;he++)x[2*he+1]=5,x[2*he]=st(he,5);He=new Ie(ne,k,C+1,M,G),ue=new Ie(x,Q,0,u,G),me=new Ie(new Array(0),j,0,h,H)}(),de=!0),ie.l_desc=new z(ie.dyn_ltree,He),ie.d_desc=new z(ie.dyn_dtree,ue),ie.bl_desc=new z(ie.bl_tree,me),ie.bi_buf=0,ie.bi_valid=0,tt(ie)},n._tr_stored_block=ae,n._tr_flush_block=function(ie,he,Xe,ke){var Ge,pe,$e=0;0<ie.level?(ie.strm.data_type===2&&(ie.strm.data_type=function(Qe){var ut,Qt=4093624447;for(ut=0;ut<=31;ut++,Qt>>>=1)if(1&Qt&&Qe.dyn_ltree[2*ut]!==0)return a;if(Qe.dyn_ltree[18]!==0||Qe.dyn_ltree[20]!==0||Qe.dyn_ltree[26]!==0)return r;for(ut=32;ut<C;ut++)if(Qe.dyn_ltree[2*ut]!==0)return r;return a}(ie)),YA(ie,ie.l_desc),YA(ie,ie.d_desc),$e=function(Qe){var ut;for(y(Qe,Qe.dyn_ltree,Qe.l_desc.max_code),y(Qe,Qe.dyn_dtree,Qe.d_desc.max_code),YA(Qe,Qe.bl_desc),ut=h-1;3<=ut&&Qe.bl_tree[2*J[ut]+1]===0;ut--);return Qe.opt_len+=3*(ut+1)+5+5+4,ut}(ie),Ge=ie.opt_len+3+7>>>3,(pe=ie.static_len+3+7>>>3)<=Ge&&(Ge=pe)):Ge=pe=Xe+5,Xe+4<=Ge&&he!==-1?ae(ie,he,Xe,ke):ie.strategy===4||pe===Ge?(Ue(ie,2+(ke?1:0),3),bA(ie,ne,x)):(Ue(ie,4+(ke?1:0),3),function(Qe,ut,Qt,xt){var ME;for(Ue(Qe,ut-257,5),Ue(Qe,Qt-1,5),Ue(Qe,xt-4,4),ME=0;ME<xt;ME++)Ue(Qe,Qe.bl_tree[2*J[ME]+1],3);Ke(Qe,Qe.dyn_ltree,ut-1),Ke(Qe,Qe.dyn_dtree,Qt-1)}(ie,ie.l_desc.max_code+1,ie.d_desc.max_code+1,$e+1),bA(ie,ie.dyn_ltree,ie.dyn_dtree)),tt(ie),ke&&Pt(ie)},n._tr_tally=function(ie,he,Xe){return ie.pending_buf[ie.d_buf+2*ie.last_lit]=he>>>8&255,ie.pending_buf[ie.d_buf+2*ie.last_lit+1]=255&he,ie.pending_buf[ie.l_buf+ie.last_lit]=255&Xe,ie.last_lit++,he===0?ie.dyn_ltree[2*Xe]++:(ie.matches++,he--,ie.dyn_ltree[2*(F[Xe]+C+1)]++,ie.dyn_dtree[2*te(he)]++),ie.last_lit===ie.lit_bufsize-1},n._tr_align=function(ie){Ue(ie,2,3),Be(ie,f,ne),function(he){he.bi_valid===16?(Le(he,he.bi_buf),he.bi_buf=0,he.bi_valid=0):8<=he.bi_valid&&(he.pending_buf[he.pending++]=255&he.bi_buf,he.bi_buf>>=8,he.bi_valid-=8)}(ie)}},{"../utils/common":41}],53:[function(s,R,n){R.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(s,R,n){(function(I){(function(a,r){if(!a.setImmediate){var S,o,l,C,M=1,u={},h=!1,P=a.document,G=Object.getPrototypeOf&&Object.getPrototypeOf(a);G=G&&G.setTimeout?G:a,S={}.toString.call(a.process)==="[object process]"?function(K){process.nextTick(function(){H(K)})}:function(){if(a.postMessage&&!a.importScripts){var K=!0,W=a.onmessage;return a.onmessage=function(){K=!1},a.postMessage("","*"),a.onmessage=W,K}}()?(C="setImmediate$"+Math.random()+"$",a.addEventListener?a.addEventListener("message",f,!1):a.attachEvent("onmessage",f),function(K){a.postMessage(C+K,"*")}):a.MessageChannel?((l=new MessageChannel).port1.onmessage=function(K){H(K.data)},function(K){l.port2.postMessage(K)}):P&&"onreadystatechange"in P.createElement("script")?(o=P.documentElement,function(K){var W=P.createElement("script");W.onreadystatechange=function(){H(K),W.onreadystatechange=null,o.removeChild(W),W=null},o.appendChild(W)}):function(K){setTimeout(H,0,K)},G.setImmediate=function(K){typeof K!="function"&&(K=new Function(""+K));for(var W=new Array(arguments.length-1),V=0;V<W.length;V++)W[V]=arguments[V+1];var k={callback:K,args:W};return u[M]=k,S(M),M++},G.clearImmediate=d}function d(K){delete u[K]}L(d,"f");function H(K){if(h)setTimeout(H,0,K);else{var W=u[K];if(W){h=!0;try{(function(V){var k=V.callback,Q=V.args;switch(Q.length){case 0:k();break;case 1:k(Q[0]);break;case 2:k(Q[0],Q[1]);break;case 3:k(Q[0],Q[1],Q[2]);break;default:k.apply(r,Q)}})(W)}finally{d(K),h=!1}}}}L(H,"c");function f(K){K.source===a&&typeof K.data=="string"&&K.data.indexOf(C)===0&&H(+K.data.slice(C.length))}L(f,"d")})(typeof self>"u"?I===void 0?this:I:self)}).call(this,typeof AA<"u"?AA:typeof self<"u"?self:typeof window<"u"?window:{})},{}]},{},[10])(10)})})(J6);var nQ=J6.exports;const iQ=G8(nQ),Rm=class Rm extends jI{constructor(A,s=null){super(A,s),this.ERR_USERNAME="invalid username",this.ERR_PASSWORD="invalid password",this.ERR_ACCOUNT_EXIST="account doesn't exist",this.ERR_PASSWORD_MATCH="password doesn't match",this.ERR_NO_SAVES="No save files found",this.ERR_TOO_MANY_SAVES="Too many save files found"}setup(){super.setup(),this.buildExternalPartyContainer(),this.infoContainer=this.scene.add.container(0,0),this.usernameInfoImage=this.buildInteractableImage("settings_icon","username-info-icon",{x:20,scale:.5}),this.saveDownloadImage=this.buildInteractableImage("saving_icon","save-download-icon",{x:0,scale:.75}),this.infoContainer.add(this.usernameInfoImage),this.infoContainer.add(this.saveDownloadImage),this.getUi().add(this.infoContainer),this.infoContainer.setVisible(!1),this.infoContainer.disableInteractive()}buildExternalPartyContainer(){this.externalPartyContainer=this.scene.add.container(0,0),this.externalPartyContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width/12,this.scene.game.canvas.height/12),Phaser.Geom.Rectangle.Contains),this.externalPartyTitle=le(this.scene,0,4,"",X.SETTINGS_LABEL),this.externalPartyTitle.setOrigin(.5,0),this.externalPartyBg=_t(this.scene,0,0,0,0),this.externalPartyContainer.add(this.externalPartyBg),this.externalPartyContainer.add(this.externalPartyTitle),this.googleImage=this.buildInteractableImage("google","google-icon"),this.discordImage=this.buildInteractableImage("discord","discord-icon"),this.externalPartyContainer.add(this.googleImage),this.externalPartyContainer.add(this.discordImage),this.getUi().add(this.externalPartyContainer),this.externalPartyContainer.add(this.googleImage),this.externalPartyContainer.add(this.discordImage),this.externalPartyContainer.setVisible(!1)}getModalTitle(A){return D.t("menu:login")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[D.t("menu:login"),D.t("menu:register")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");switch(s>0&&(A=A.slice(0,s)),A){case this.ERR_USERNAME:return D.t("menu:invalidLoginUsername");case this.ERR_PASSWORD:return D.t("menu:invalidLoginPassword");case this.ERR_ACCOUNT_EXIST:return D.t("menu:accountNonExistent");case this.ERR_PASSWORD_MATCH:return D.t("menu:unmatchingPassword");case this.ERR_NO_SAVES:return"P01: "+D.t("menu:noSaves");case this.ERR_TOO_MANY_SAVES:return"P02: "+D.t("menu:tooManySaves")}return super.getReadableErrorMessage(A)}getInputFieldConfigs(){const A=[];return A.push({label:D.t("menu:username")}),A.push({label:D.t("menu:password"),isPassword:!0}),A}show(A){if(super.show(A)){const s=A[0];this.processExternalProvider(s);const R=this.submitAction;return this.submitAction=n=>{this.submitAction=R,this.sanitizeInputs(),this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]});const I=L(S=>{this.scene.ui.setMode(Oe.LOGIN_FORM,Object.assign(s,{errorMessage:S==null?void 0:S.trim()})),this.scene.ui.playError()},"onFail");if(!this.inputs[0].text)return I(D.t("menu:emptyUsername"));const[a,r]=this.inputs;OO.account.login({username:a.text,password:r.text}).then(S=>{S?I(S):R&&R()})},!0}return!1}clear(){super.clear(),this.externalPartyContainer.setVisible(!1),this.infoContainer.setVisible(!1),this.setMouseCursorStyle("default"),[this.discordImage,this.googleImage,this.usernameInfoImage,this.saveDownloadImage].forEach(A=>A.off("pointerdown"))}processExternalProvider(A){this.externalPartyTitle.setText(D.t("menu:orUse")??""),this.externalPartyTitle.setX(20+this.externalPartyTitle.text.length),this.externalPartyTitle.setVisible(!0),this.externalPartyContainer.setPositionRelative(this.modalContainer,175,0),this.externalPartyContainer.setVisible(!0),this.externalPartyBg.setSize(this.externalPartyTitle.text.length+50,this.modalBg.height),this.getUi().moveTo(this.externalPartyContainer,this.getUi().length-1),this.googleImage.setPosition(this.externalPartyBg.width/3.1,this.externalPartyBg.height-60),this.discordImage.setPosition(this.externalPartyBg.width/3.1,this.externalPartyBg.height-40),this.infoContainer.setPosition(5,-76),this.infoContainer.setVisible(!0),this.getUi().moveTo(this.infoContainer,this.getUi().length-1),this.usernameInfoImage.setPositionRelative(this.infoContainer,0,0),this.saveDownloadImage.setPositionRelative(this.infoContainer,20,0),this.discordImage.on("pointerdown",()=>{const I=`https://discord.com/api/oauth2/authorize?client_id=1234567890&redirect_uri=${encodeURIComponent("http://localhost:8001/auth/discord/callback")}&response_type=code&scope=identify&prompt=none`;window.open(I,"_self")}),this.googleImage.on("pointerdown",()=>{const I=`https://accounts.google.com/o/oauth2/auth?client_id=1234567890&redirect_uri=${encodeURIComponent("http://localhost:8001/auth/google/callback")}&response_type=code&scope=openid`;window.open(I,"_self")});const s=L(R=>{this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]}),this.scene.ui.setModeForceTransition(Oe.LOGIN_FORM,Object.assign(A,{errorMessage:R==null?void 0:R.trim()})),this.scene.ui.playError()},"onFail");this.usernameInfoImage.on("pointerdown",()=>{const R=Object.keys(localStorage),n="data_",I=R.filter(a=>a.indexOf(n)>=0);if(I.length>0&&I.length<=2){const a=[];for(let r=0;r<I.length;r++)a.push({label:I[r].replace(n,""),handler:L(()=>(this.scene.ui.revertMode(),this.infoContainer.disableInteractive(),!0),"handler")});this.scene.ui.setOverlayMode(Oe.OPTION_SELECT,{options:a,delay:1e3}),this.infoContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,this.scene.game.canvas.width,this.scene.game.canvas.height),Phaser.Geom.Rectangle.Contains)}else return I.length>2?s(this.ERR_TOO_MANY_SAVES):s(this.ERR_NO_SAVES)}),this.saveDownloadImage.on("pointerdown",()=>{const R=Object.keys(localStorage),n="data_",I="sessionData",a=R.filter(S=>S.indexOf(n)>=0),r=R.filter(S=>S.indexOf(I)>=0);if(a.length>0||r.length>0){const S=new iQ;for(let o=0;o<a.length;o++)S.file(a[o]+".prsv",localStorage.getItem(a[o]));for(let o=0;o<r.length;o++)S.file(r[o]+".prsv",localStorage.getItem(r[o]));S.generateAsync({type:"blob"}).then(o=>{const l=URL.createObjectURL(o),C=document.createElement("a");C.href=l,C.download="pokerogue_saves.zip",C.click(),URL.revokeObjectURL(l)})}else return s(this.ERR_NO_SAVES)}),this.externalPartyContainer.setAlpha(0),this.scene.tweens.add({targets:this.externalPartyContainer,duration:Et(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1}),this.infoContainer.setAlpha(0),this.scene.tweens.add({targets:this.infoContainer,duration:Et(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1})}buildInteractableImage(A,s,R={}){const{scale:n=.07,x:I=0,y:a=0,origin:r={x:0,y:0}}=R,S=this.scene.add.image(I,a,A);return S.setName(s),S.setOrigin(r.x,r.y),S.setScale(n),S.setInteractive(),this.addInteractionHoverEffect(S),S}};L(Rm,"LoginFormUiHandler");let W0=Rm;const Mh={"es-ES":{inputFieldFontSize:"50px",errorMessageFontSize:"40px"}},Om=class Om extends jI{getModalTitle(A){return D.t("menu:register")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonTopMargin(){return 8}getButtonLabels(A){return[D.t("menu:register"),D.t("menu:backToLogin")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");switch(s>0&&(A=A.slice(0,s)),A){case"invalid username":return D.t("menu:invalidRegisterUsername");case"invalid password":return D.t("menu:invalidRegisterPassword");case"failed to add account record":return D.t("menu:usernameAlreadyUsed")}return super.getReadableErrorMessage(A)}getInputFieldConfigs(){const A=[];return A.push({label:D.t("menu:username")}),A.push({label:D.t("menu:password"),isPassword:!0}),A.push({label:D.t("menu:confirmPassword"),isPassword:!0}),A}setup(){var R;super.setup(),this.modalContainer.list.forEach(n=>{var I;if(n instanceof Phaser.GameObjects.Text&&n!==this.titleText){const a=(I=Mh[D.resolvedLanguage])==null?void 0:I.inputFieldFontSize;a&&n.setFontSize(a)}});const A=((R=Mh[D.resolvedLanguage])==null?void 0:R.warningMessageFontSize)??"42px",s=le(this.scene,10,87,D.t("menu:registrationAgeWarning"),X.TOOLTIP_CONTENT,{fontSize:A});this.modalContainer.add(s)}show(A){if(super.show(A)){const s=A[0],R=this.submitAction;return this.submitAction=n=>{this.submitAction=R,this.sanitizeInputs(),this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]});const I=L(S=>{var l;this.scene.ui.setMode(Oe.REGISTRATION_FORM,Object.assign(s,{errorMessage:S==null?void 0:S.trim()})),this.scene.ui.playError();const o=(l=Mh[D.resolvedLanguage])==null?void 0:l.errorMessageFontSize;o&&this.errorMessage.setFontSize(o)},"onFail");if(!this.inputs[0].text)return I(D.t("menu:emptyUsername"));if(!this.inputs[1].text)return I(this.getReadableErrorMessage("invalid password"));if(this.inputs[1].text!==this.inputs[2].text)return I(D.t("menu:passwordNotMatchingConfirmPassword"));const[a,r]=this.inputs;OO.account.register({username:a.text,password:r.text}).then(S=>{S?I(S):OO.account.login({username:a.text,password:r.text}).then(o=>{o?I(o):R&&R()})})},!0}return!1}};L(Om,"RegistrationFormUiHandler");let Y0=Om;const nm=class nm extends gr{constructor(A,s=null){super(A,s)}getModalTitle(){return""}getWidth(){return 80}getHeight(){return 32}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=le(this.scene,this.getWidth()/2,this.getHeight()/2,D.t("menu:loading"),X.WINDOW);A.setOrigin(.5,.5),this.modalContainer.add(A)}};L(nm,"LoadingModalUiHandler");let y0=nm;const EO={playTime:{label_key:"playTime",sourceFunc:L(E=>qd(E.gameStats.playTime),"sourceFunc")},battles:{label_key:"totalBattles",sourceFunc:L(E=>E.gameStats.battles.toString(),"sourceFunc")},startersUnlocked:{label_key:"starters",sourceFunc:L(E=>{const A=E.getStarterCount(s=>!!s.caughtAttr);return`${A} (${Math.floor(A/Object.keys(KA).length*1e3)/10}%)`},"sourceFunc")},shinyStartersUnlocked:{label_key:"shinyStarters",sourceFunc:L(E=>{const A=E.getStarterCount(s=>!!(s.caughtAttr&Ze.SHINY));return`${A} (${Math.floor(A/Object.keys(KA).length*1e3)/10}%)`},"sourceFunc")},dexSeen:{label_key:"speciesSeen",sourceFunc:L(E=>{const A=E.getSpeciesCount(s=>!!s.seenAttr);return`${A} (${Math.floor(A/Object.keys(E.dexData).length*1e3)/10}%)`},"sourceFunc")},dexCaught:{label_key:"speciesCaught",sourceFunc:L(E=>{const A=E.getSpeciesCount(s=>!!s.caughtAttr);return`${A} (${Math.floor(A/Object.keys(E.dexData).length*1e3)/10}%)`},"sourceFunc")},ribbonsOwned:{label_key:"ribbonsOwned",sourceFunc:L(E=>E.gameStats.ribbonsOwned.toString(),"sourceFunc")},classicSessionsPlayed:{label_key:"classicRuns",sourceFunc:L(E=>E.gameStats.classicSessionsPlayed.toString(),"sourceFunc")},sessionsWon:{label_key:"classicWins",sourceFunc:L(E=>E.gameStats.sessionsWon.toString(),"sourceFunc")},dailyRunSessionsPlayed:{label_key:"dailyRunAttempts",sourceFunc:L(E=>E.gameStats.dailyRunSessionsPlayed.toString(),"sourceFunc")},dailyRunSessionsWon:{label_key:"dailyRunWins",sourceFunc:L(E=>E.gameStats.dailyRunSessionsWon.toString(),"sourceFunc")},endlessSessionsPlayed:{label_key:"endlessRuns",sourceFunc:L(E=>E.gameStats.endlessSessionsPlayed.toString(),"sourceFunc"),hidden:!0},highestEndlessWave:{label_key:"highestWaveEndless",sourceFunc:L(E=>E.gameStats.highestEndlessWave.toString(),"sourceFunc"),hidden:!0},highestMoney:{label_key:"highestMoney",sourceFunc:L(E=>Yh(E.gameStats.highestMoney),"sourceFunc")},highestDamage:{label_key:"highestDamage",sourceFunc:L(E=>E.gameStats.highestDamage.toString(),"sourceFunc")},highestHeal:{label_key:"highestHPHealed",sourceFunc:L(E=>E.gameStats.highestHeal.toString(),"sourceFunc")},pokemonSeen:{label_key:"pokemonEncountered",sourceFunc:L(E=>E.gameStats.pokemonSeen.toString(),"sourceFunc")},pokemonDefeated:{label_key:"pokemonDefeated",sourceFunc:L(E=>E.gameStats.pokemonDefeated.toString(),"sourceFunc")},pokemonCaught:{label_key:"pokemonCaught",sourceFunc:L(E=>E.gameStats.pokemonCaught.toString(),"sourceFunc")},pokemonHatched:{label_key:"eggsHatched",sourceFunc:L(E=>E.gameStats.pokemonHatched.toString(),"sourceFunc")},subLegendaryPokemonSeen:{label_key:"subLegendsSeen",sourceFunc:L(E=>E.gameStats.subLegendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonCaught:{label_key:"subLegendsCaught",sourceFunc:L(E=>E.gameStats.subLegendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonHatched:{label_key:"subLegendsHatched",sourceFunc:L(E=>E.gameStats.subLegendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},legendaryPokemonSeen:{label_key:"legendsSeen",sourceFunc:L(E=>E.gameStats.legendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},legendaryPokemonCaught:{label_key:"legendsCaught",sourceFunc:L(E=>E.gameStats.legendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},legendaryPokemonHatched:{label_key:"legendsHatched",sourceFunc:L(E=>E.gameStats.legendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},mythicalPokemonSeen:{label_key:"mythicalsSeen",sourceFunc:L(E=>E.gameStats.mythicalPokemonSeen.toString(),"sourceFunc"),hidden:!0},mythicalPokemonCaught:{label_key:"mythicalsCaught",sourceFunc:L(E=>E.gameStats.mythicalPokemonCaught.toString(),"sourceFunc"),hidden:!0},mythicalPokemonHatched:{label_key:"mythicalsHatched",sourceFunc:L(E=>E.gameStats.mythicalPokemonHatched.toString(),"sourceFunc"),hidden:!0},shinyPokemonSeen:{label_key:"shiniesSeen",sourceFunc:L(E=>E.gameStats.shinyPokemonSeen.toString(),"sourceFunc"),hidden:!0},shinyPokemonCaught:{label_key:"shiniesCaught",sourceFunc:L(E=>E.gameStats.shinyPokemonCaught.toString(),"sourceFunc"),hidden:!0},shinyPokemonHatched:{label_key:"shiniesHatched",sourceFunc:L(E=>E.gameStats.shinyPokemonHatched.toString(),"sourceFunc"),hidden:!0},pokemonFused:{label_key:"pokemonFused",sourceFunc:L(E=>E.gameStats.pokemonFused.toString(),"sourceFunc"),hidden:!0},trainersDefeated:{label_key:"trainersDefeated",sourceFunc:L(E=>E.gameStats.trainersDefeated.toString(),"sourceFunc")},eggsPulled:{label_key:"eggsPulled",sourceFunc:L(E=>E.gameStats.eggsPulled.toString(),"sourceFunc"),hidden:!0},rareEggsPulled:{label_key:"rareEggsPulled",sourceFunc:L(E=>E.gameStats.rareEggsPulled.toString(),"sourceFunc"),hidden:!0},epicEggsPulled:{label_key:"epicEggsPulled",sourceFunc:L(E=>E.gameStats.epicEggsPulled.toString(),"sourceFunc"),hidden:!0},legendaryEggsPulled:{label_key:"legendaryEggsPulled",sourceFunc:L(E=>E.gameStats.legendaryEggsPulled.toString(),"sourceFunc"),hidden:!0},manaphyEggsPulled:{label_key:"manaphyEggsPulled",sourceFunc:L(E=>E.gameStats.manaphyEggsPulled.toString(),"sourceFunc"),hidden:!0}},im=class im extends Ws{constructor(A,s=null){super(A,s),this.statLabels=[],this.statValues=[]}setup(){const A=this.getUi();this.gameStatsContainer=this.scene.add.container(1,-(this.scene.game.canvas.height/6)+1),this.gameStatsContainer.setInteractive(new EE.Geom.Rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6),EE.Geom.Rectangle.Contains);const s=_t(this.scene,0,0,this.scene.game.canvas.width/6-2,24);s.setOrigin(0,0);const R=le(this.scene,0,0,D.t("gameStatsUiHandler:stats"),X.SETTINGS_LABEL);R.setOrigin(0,0),R.setPositionRelative(s,8,4);const n=(this.scene.game.canvas.width/6-2)/2,[I,a]=new Array(2).fill(null).map((S,o)=>{const l=n+2,C=Math.floor(this.scene.game.canvas.height/6-s.height-2),M=_t(this.scene,(n-2)*o,s.height,l,C,!1,!1,o>0?-3:0,1);return M.setOrigin(0,0),M});this.statsContainer=this.scene.add.container(0,0),new Array(18).fill(null).map((S,o)=>{const l=le(this.scene,8+(o%2===1?n:0),28+Math.floor(o/2)*16,"",X.STATS_LABEL);l.setOrigin(0,0),this.statsContainer.add(l),this.statLabels.push(l);const C=le(this.scene,n*(o%2+1)-8,l.y,"",X.STATS_VALUE);C.setOrigin(1,0),this.statsContainer.add(C),this.statValues.push(C)}),this.gameStatsContainer.add(s),this.gameStatsContainer.add(R),this.gameStatsContainer.add(I),this.gameStatsContainer.add(a),this.gameStatsContainer.add(this.statsContainer);const r=this.scene.uiTheme===NO.LEGACY;this.arrowDown=this.scene.add.sprite(n,this.scene.game.canvas.height/6-(r?9:5),"prompt"),this.gameStatsContainer.add(this.arrowDown),this.arrowUp=this.scene.add.sprite(n,s.height+(r?7:3),"prompt"),this.arrowUp.flipY=!0,this.gameStatsContainer.add(this.arrowUp),A.add(this.gameStatsContainer),this.setCursor(0),this.gameStatsContainer.setVisible(!1)}show(A){return super.show(A),this.setCursor(0),this.updateStats(),this.arrowUp.play("prompt"),this.arrowDown.play("prompt"),this.scene.uiTheme===NO.LEGACY&&(this.arrowUp.setTint(4737096),this.arrowDown.setTint(4737096)),this.updateArrows(),this.gameStatsContainer.setVisible(!0),this.getUi().moveTo(this.gameStatsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateStats(){const A=Object.keys(EO).slice(this.cursor*2,this.cursor*2+18);if(A.forEach((s,R)=>{const n=EO[s],I=n.sourceFunc(this.scene.gameData);this.statLabels[R].setText(!n.hidden||isNaN(parseInt(I))||parseInt(I)?D.t(`gameStatsUiHandler:${n.label_key}`):"???"),this.statValues[R].setText(I)}),A.length<18)for(let s=A.length;s<18;s++)this.statLabels[s].setText(""),this.statValues[s].setText("")}updateArrows(){const A=this.cursor>0;this.arrowUp.setVisible(A);const s=this.cursor<Math.ceil((Object.keys(EO).length-18)/2);this.arrowDown.setVisible(s)}processInput(A){const s=this.getUi();let R=!1;if(A===b.CANCEL)R=!0,this.scene.ui.revertMode();else switch(A){case b.UP:this.cursor&&(R=this.setCursor(this.cursor-1));break;case b.DOWN:this.cursor<Math.ceil((Object.keys(EO).length-18)/2)&&(R=this.setCursor(this.cursor+1));break}return R&&s.playSelect(),R}setCursor(A){const s=super.setCursor(A);return s&&(this.updateStats(),this.updateArrows()),s}clear(){super.clear(),this.gameStatsContainer.setVisible(!1)}};L(im,"GameStatsUiHandler");let w0=im;function IQ(){const E=Object.keys(EO);for(const A of E){if(typeof EO[A]=="string"){let s=EO[A],R=!1;s.endsWith("?")&&(s=s.slice(0,-1),R=!0),EO[A]={label_key:s,sourceFunc:L(n=>n.gameStats[A].toString(),"sourceFunc"),hidden:R}}else EO[A]===null&&(EO[A]={sourceFunc:L(s=>s.gameStats[A].toString(),"sourceFunc")});if(!EO[A].label_key){const s=A.replace(/([a-z]{2,})([A-Z]{1}(?:[^A-Z]|$))/g,"$1_$2");EO[A].label_key=wn(`${s[0].toUpperCase()}${s.slice(1)}`)}}}L(IQ,"initStatsKeys");const aQ=10,rQ=[...Array(aQ).fill("battlesWon"),"joinTheDiscord","infiniteLevels","everythingIsStackable","optionalSaveScumming","biomes","openSource","playWithSpeed","liveBugTesting","heavyInfluence","pokemonRiskAndPokemonRain","nowWithMoreSalt","infiniteFusionAtHome","brokenEggMoves","magnificent","doPeopleReadThis","thatsCrazy","gottaCatchEmAll","questionableBalancing","coolShaders","aiFree","suddenDifficultySpikes","basedOnAnUnfinishedFlashGame","moreAddictiveThanIntended","mostlyConsistentSeeds","achievementPointsDontDoAnything","nothingBeatsAJellyFilledDonut","dontTalkAboutTheTinkatonIncident","alsoTryPokengine","alsoTryEmeraldRogue","alsoTryRadicalRed","eeveeExpo","checkOutYnoproject","breedersInSpace","alsoTryPokemonUnbound","tryTheJohtoDragonChallenge","basicReadingAbilityRecommended","shoutoutsToTheArtists","gamblingNotEncouraged","dontForgetToTakeABreak","wEvent","ifItsNotAccurateItsAccurate","everyLossIsProgressMade","liveWoChienReaction","itsAFeatureNotABug","theEggsAreNotForEating","7.8outOf10TooManyWaterBiomes","butNothingHappened","thePowerOfScienceIsAmazing","freeToPlay","theresATimeAndPlaceForEverything","nowWithShinierShinies","smilesGoForMiles","certainlyNotDragonFree","haveANiceDay","redacted","hi","transRights","shinyOddsHigherThanYouThink","noFalseTrades","notForProfit","timeForYourDailyRun","moreEggsThanADaycare","disclaimerHarshSunDoesNotGiveVitaminD","whoNeedsAMap","luxrayIsNotADarkType","selfDestructiveEncounters","mostOptionsAreViable","pokerogueMorse","smiley","beAwareOfPassives","asSeenOnTheWorldWideWeb","vaultinVeluzas","tooManyStarters","checkTheWiki","winWithYourFavorites","alsoTryPokerogueWait","theWayISeeItKyogreIsSurrounded","tryOutHoneyGather","notForTheFaintOfHeart","p","flipYourDeviceToEvolveInkay","inArceusWeTrust","whyDidTheTorchicCrossTheRoad","goodLuck","fuseWisely","compensation","prepareForTroubleAndMakeItDouble","anEggForYourTroubles","regirock","hereForAGoodTime","getGoodOrDont","checkTheSubreddit","betterNerfGreninja","inCaseOfUpdateClearYourCache","insertTextHere","endingEndlessNotFound","iLikeMyEggsVouchered","YOU","noAddedSugar","notSponsored","notRated","justOneMoreWaveMom","saltCured","onlyOnPokerogueNet","pixelPerfection","openSource","probablyGood","itsAMonsterHouse","dontForgetYourPassword","tripleTripleTripleAxel","questionExclamation","clownEncounters","fullOfBerries","limitsAreMeantToBeBrokenSometimes","keepItCasual","serversProbablyWorking","mew","makeItRainAndYourProblemsGoAway","customMusicTracks","youAreValid","number591IsLookingOff","timeForYourDeliDelivery","goodFirstImpression","iPreferRarerCandies"];function LQ(){const E=[...rQ];return console.log("use seasonal splash messages",H8),E.map(A=>`splashMessages:${A}`)}L(LQ,"getSplashMessages");const fa=[{name:"Winter Holiday Update",eventType:0,shinyMultiplier:2,friendshipMultiplier:1,startDate:new Date(Date.UTC(2024,11,21,0)),endDate:new Date(Date.UTC(2025,0,4,0)),bannerKey:"winter_holidays2024-event-",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],uncommonBreedEncounters:[{species:e.GIMMIGHOUL},{species:e.DELIBIRD},{species:e.STANTLER,allowEvolution:!0},{species:e.CYNDAQUIL,allowEvolution:!0},{species:e.PIPLUP,allowEvolution:!0},{species:e.CHESPIN,allowEvolution:!0},{species:e.BALTOY,allowEvolution:!0},{species:e.SNOVER,allowEvolution:!0},{species:e.CHINGLING,allowEvolution:!0},{species:e.LITWICK,allowEvolution:!0},{species:e.CUBCHOO,allowEvolution:!0},{species:e.SWIRLIX,allowEvolution:!0},{species:e.AMAURA,allowEvolution:!0},{species:e.MUDBRAY,allowEvolution:!0},{species:e.ROLYCOLY,allowEvolution:!0},{species:e.MILCERY,allowEvolution:!0},{species:e.SMOLIV,allowEvolution:!0},{species:e.ALOLA_VULPIX,allowEvolution:!0},{species:e.GALAR_DARUMAKA,allowEvolution:!0},{species:e.IRON_BUNDLE}],delibirdyBuff:["CATCHING_CHARM","SHINY_CHARM","ABILITY_CHARM","EXP_CHARM","SUPER_EXP_CHARM","HEALING_CHARM"],weather:[{weatherType:se.SNOW,weight:1}]}],Im=class Im{constructor(){}isActive(A){return A.startDate<new Date&&new Date<A.endDate}activeEvent(){return fa.find(A=>this.isActive(A))}isEventActive(){return fa.some(A=>this.isActive(A))}activeEventHasBanner(){return fa.filter(s=>this.isActive(s)&&s.hasOwnProperty("bannerFilename")).length>0}getFriendshipMultiplier(){let A=1;return fa.filter(R=>this.isActive(R)).forEach(R=>{A*=R.friendshipMultiplier??1}),A}getShinyMultiplier(){let A=1;return fa.filter(R=>R.eventType===0&&this.isActive(R)).forEach(R=>{A*=R.shinyMultiplier??1}),A}getEventBannerFilename(){var A;return((A=fa.find(s=>this.isActive(s)))==null?void 0:A.bannerKey)??""}};L(Im,"TimedEventManager");let v0=Im;const am=class am extends Phaser.GameObjects.Container{constructor(A,s,R,n){super(A,s,R),this.availableWidth=A.scaledCanvas.width,this.event=n,this.setVisible(!1)}setWidth(A){var s;if(A!==this.availableWidth){this.availableWidth=A;const R=this.availableWidth/2+(((s=this.event)==null?void 0:s.xOffset)??0);this.banner&&(this.banner.x=R),this.eventTimerText&&(this.eventTimerText.x=R)}}setup(){const A=D.resolvedLanguage;if(this.event&&this.event.bannerKey){let s=this.event.bannerKey;A&&this.event.availableLangs&&this.event.availableLangs.length>0&&(this.event.availableLangs.includes(A)?s+=A:s+="en"),console.log(this.event.bannerKey);const R=5,n=this.event.eventType!==1,I=this.scene.game.canvas.height/6-R-(n?10:0)-(this.event.yOffset??0);this.banner=new Phaser.GameObjects.Image(this.scene,this.availableWidth/2,I-R,s),this.banner.setName("img-event-banner"),this.banner.setOrigin(.5,1),this.banner.setScale(this.event.scale??.18),n&&(this.eventTimerText=le(this.scene,this.banner.x,this.banner.y+2,this.timeToGo(this.event.endDate),X.WINDOW),this.eventTimerText.setName("text-event-timer"),this.eventTimerText.setScale(.15),this.eventTimerText.setOrigin(.5,0),this.add(this.eventTimerText)),this.add(this.banner)}}show(){this.setVisible(!0),this.updateCountdown(),this.eventTimer=setInterval(()=>{this.updateCountdown()},1e3)}clear(){this.setVisible(!1),this.eventTimer&&clearInterval(this.eventTimer),this.eventTimer=null}timeToGo(A){function s(o){return(o<10?"0":"")+o}L(s,"z");const R=new Date;let n=Math.abs(A.getTime()-R.getTime());n=Math.abs(n);const I=n/864e5|0,a=n%864e5/36e5|0,r=n%36e5/6e4|0,S=Math.round(n%6e4/1e3);return D.t("menu:eventTimer",{days:s(I),hours:s(a),mins:s(r),secs:s(S)})}updateCountdown(){this.event&&this.event.eventType!==1&&this.eventTimerText.setText(this.timeToGo(this.event.endDate))}};L(am,"TimedEventDisplay");let V0=am;const oN=class oN extends OS{constructor(A,s=Oe.TITLE){super(A,s)}setup(){super.setup();const A=this.getUi();this.titleContainer=this.scene.add.container(0,-(this.scene.game.canvas.height/6)),this.titleContainer.setName("title"),this.titleContainer.setAlpha(0),A.add(this.titleContainer);const s=this.scene.add.image(this.scene.game.canvas.width/6/2,8,"logo");s.setOrigin(.5,0),this.titleContainer.add(s),this.scene.eventManager.isEventActive()&&(this.eventDisplay=new V0(this.scene,0,0,this.scene.eventManager.activeEvent()),this.eventDisplay.setup(),this.titleContainer.add(this.eventDisplay)),this.playerCountLabel=le(this.scene,this.scene.game.canvas.width/6-2,this.scene.game.canvas.height/6-13-576*un(X.WINDOW,this.scene.uiTheme).scale,`? ${D.t("menu:playersOnline")}`,X.MESSAGE,{fontSize:"54px"}),this.playerCountLabel.setOrigin(1,0),this.titleContainer.add(this.playerCountLabel),this.splashMessageText=le(this.scene,s.x+64,s.y+s.displayHeight-8,"",X.MONEY,{fontSize:"54px"}),this.splashMessageText.setOrigin(.5,.5),this.splashMessageText.setAngle(-20),this.titleContainer.add(this.splashMessageText);const R=this.splashMessageText.scale;this.scene.tweens.add({targets:this.splashMessageText,duration:Et(350),scale:R*1.25,loop:-1,yoyo:!0}),this.appVersionText=le(this.scene,s.x-60,s.y+s.displayHeight+4,"",X.MONEY,{fontSize:"54px"}),this.appVersionText.setOrigin(.5,.5),this.appVersionText.setAngle(0),this.titleContainer.add(this.appVersionText)}updateTitleStats(){OO.getGameTitleStats().then(A=>{A&&(this.playerCountLabel.setText(`${A.playerCount} ${D.t("menu:playersOnline")}`),this.splashMessage==="splashMessages:battlesWon"&&this.splashMessageText.setText(D.t(this.splashMessage,{count:A.battleCount})))}).catch(A=>{console.error(`Failed to fetch title stats:
`,A)})}show(A){const s=super.show(A);if(s){this.splashMessage=d8(LQ()),this.splashMessageText.setText(D.t(this.splashMessage,{count:oN.BATTLES_WON_FALLBACK})),this.appVersionText.setText("v"+Ho);const R=this.getUi();this.scene.eventManager.isEventActive()&&(this.eventDisplay.setWidth(this.scene.scaledCanvas.width-this.optionSelectBg.width-this.optionSelectBg.x),this.eventDisplay.show()),this.updateTitleStats(),this.titleStatsTimer=setInterval(()=>{this.updateTitleStats()},6e4),this.scene.tweens.add({targets:[this.titleContainer,R.getMessageHandler().bg],duration:Et(325),alpha:L(n=>n===this.titleContainer?1:0,"alpha"),ease:"Sine.easeInOut"})}return s}clear(){var s;super.clear();const A=this.getUi();(s=this.eventDisplay)==null||s.clear(),this.titleStatsTimer&&clearInterval(this.titleStatsTimer),this.titleStatsTimer=null,this.scene.tweens.add({targets:[this.titleContainer,A.getMessageHandler().bg],duration:Et(325),alpha:L(R=>R===this.titleContainer?0:1,"alpha"),ease:"Sine.easeInOut"})}};L(oN,"TitleUiHandler"),oN.BATTLES_WON_FALLBACK=-99999999;let x0=oN;const rm=class rm extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6-4,A.game.canvas.height/6-4)}setup(){this.icon=this.scene.add.sprite(0,0,"saving_icon"),this.icon.setOrigin(1,1),this.add(this.icon),this.animActive=!1,this.shown=!1,this.setAlpha(0),this.setVisible(!1)}show(){this.shown=!0,!this.animActive&&(this.animActive=!0,this.scene.tweens.add({targets:this,alpha:1,duration:Et(250),ease:"Sine.easeInOut",onComplete:L(()=>{this.scene.time.delayedCall(Et(500),()=>{this.animActive=!1,this.shown||this.hide()})},"onComplete")}),this.setVisible(!0),this.shown=!0)}hide(){this.shown=!1,!this.animActive&&(this.animActive=!0,this.scene.tweens.add({targets:this,alpha:0,duration:Et(250),ease:"Sine.easeInOut",onComplete:L(()=>{this.animActive=!1,this.setVisible(!1),this.shown&&this.show()},"onComplete")}),this.shown=!1)}};L(rm,"SavingIconHandler");let b0=rm;const Lm=class Lm extends gr{constructor(A,s=null){super(A,s),this.minTime=1e3*5,this.maxTime=1e3*60*5,this.randVarianceTime=1e3*10,this.reconnectDuration=this.minTime}getModalTitle(){return""}getWidth(){return 160}getHeight(){return 64}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=le(this.scene,this.getWidth()/2,this.getHeight()/2,D.t("menu:errorServerDown"),X.WINDOW,{fontSize:"48px",align:"center"});A.setOrigin(.5,.5),this.modalContainer.add(A)}tryReconnect(){pI().then(A=>{A[0]||[200,400].includes(A[1])?(this.reconnectTimer=null,this.reconnectDuration=this.minTime,this.scene.playSound("se/pb_bounce_1"),this.reconnectCallback()):A[1]===401?(al(uL),this.scene.reset(!0,!0)):(this.reconnectDuration=Math.min(this.reconnectDuration*2,this.maxTime),this.reconnectTimer=setTimeout(()=>this.tryReconnect(),this.reconnectDuration+Math.random()*this.randVarianceTime))})}show(A){if(A.length>=1&&A[0]instanceof Function){const s={buttonActions:[]};return this.reconnectCallback=A[0],this.reconnectDuration=this.minTime,this.reconnectTimer=setTimeout(()=>this.tryReconnect(),this.reconnectDuration),super.show([s])}return!1}};L(Lm,"UnavailableModalUiHandler");let k0=Lm;const Nm=class Nm extends gr{constructor(A,s=null){super(A,s)}getModalTitle(){return""}getWidth(){return 160}getHeight(){return 32}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=le(this.scene,this.getWidth()/2,this.getHeight()/2,`Your session is out of date.
Your data will be reloaded…`,X.WINDOW,{fontSize:"48px",align:"center"});A.setOrigin(.5,.5),this.modalContainer.add(A)}show(A){const s={buttonActions:[]};return super.show([s])}};L(Nm,"SessionReloadModalUiHandler");let Z0=Nm;const Tm=class Tm extends Ws{constructor(A,s=null){super(A,s),this.listening=!1,this.buttonPressed=null,this.timeLeftAutoClose=5}setup(){const A=this.getUi();this.optionSelectContainer=this.scene.add.container(0,0),this.actionsContainer=this.scene.add.container(0,0),this.optionSelectContainer.setVisible(!1),this.actionsContainer.setVisible(!1),A.add(this.optionSelectContainer),A.add(this.actionsContainer),this.titleBg=_t(this.scene,this.scene.game.canvas.width/6-this.getWindowWidth(),-(this.scene.game.canvas.height/6)+28+21,this.getWindowWidth(),24),this.titleBg.setOrigin(.5),this.optionSelectContainer.add(this.titleBg),this.actionBg=_t(this.scene,this.scene.game.canvas.width/6-this.getWindowWidth(),-(this.scene.game.canvas.height/6)+this.getWindowHeight()+28+21+21,this.getWindowWidth(),24),this.actionBg.setOrigin(.5),this.actionsContainer.add(this.actionBg),this.unlockText=le(this.scene,0,0,D.t("settings:pressButton"),X.WINDOW),this.unlockText.setOrigin(0,0),this.unlockText.setPositionRelative(this.titleBg,36,4),this.optionSelectContainer.add(this.unlockText),this.timerText=le(this.scene,0,0,"(5)",X.WINDOW),this.timerText.setOrigin(0,0),this.timerText.setPositionRelative(this.unlockText,this.unlockText.width/6+5,0),this.optionSelectContainer.add(this.timerText),this.optionSelectBg=_t(this.scene,this.scene.game.canvas.width/6-this.getWindowWidth(),-(this.scene.game.canvas.height/6)+this.getWindowHeight()+28,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setOrigin(.5),this.optionSelectContainer.add(this.optionSelectBg),this.cancelLabel=le(this.scene,0,0,D.t("settings:back"),X.SETTINGS_LABEL),this.cancelLabel.setOrigin(0,.5),this.cancelLabel.setPositionRelative(this.actionBg,10,this.actionBg.height/2),this.actionsContainer.add(this.cancelLabel)}manageAutoCloseTimer(){clearTimeout(this.countdownTimer),this.countdownTimer=setTimeout(()=>{this.timeLeftAutoClose-=1,this.timerText.setText(`(${this.timeLeftAutoClose})`),this.timeLeftAutoClose>=0?this.manageAutoCloseTimer():this.cancelFn&&this.cancelFn()},1e3)}show(A){return super.show(A),this.buttonPressed=null,this.timeLeftAutoClose=5,this.cancelFn=A[0].cancelHandler,this.target=A[0].target,this.getUi().bringToTop(this.optionSelectContainer),this.getUi().bringToTop(this.actionsContainer),this.optionSelectContainer.setVisible(!0),setTimeout(()=>{this.listening=!0,this.manageAutoCloseTimer()},100),!0}getWindowWidth(){return 160}getWindowHeight(){return 64}processInput(A){if(this.buttonPressed===null)return!1;const s=this.getUi();let R=!1;switch(A){case b.LEFT:case b.RIGHT:const n=this.cursor?0:1;R=this.setCursor(n);break;case b.ACTION:this.cursor===0?this.cancelFn&&this.cancelFn():(R=this.swapAction(),rO.getInstance().updateIcons(),this.cancelFn&&this.cancelFn(R));break}return R?s.playSelect():s.playError(),R}setCursor(A){return this.cursor=A,A===1?(this.actionLabel.setColor(this.getTextColor(X.SETTINGS_SELECTED)),this.actionLabel.setShadowColor(this.getTextColor(X.SETTINGS_SELECTED,!0)),this.cancelLabel.setColor(this.getTextColor(X.WINDOW)),this.cancelLabel.setShadowColor(this.getTextColor(X.WINDOW,!0)),!0):(this.actionLabel.setColor(this.getTextColor(X.WINDOW)),this.actionLabel.setShadowColor(this.getTextColor(X.WINDOW,!0)),this.cancelLabel.setColor(this.getTextColor(X.SETTINGS_SELECTED)),this.cancelLabel.setShadowColor(this.getTextColor(X.SETTINGS_SELECTED,!0)),!0)}clear(){super.clear(),clearTimeout(this.countdownTimer),this.timerText.setText("(5)"),this.timeLeftAutoClose=5,this.listening=!1,this.target=null,this.cancelFn=null,this.optionSelectContainer.setVisible(!1),this.actionsContainer.setVisible(!1),this.newButtonIcon.setVisible(!1),this.buttonPressed=null}onInputDown(A,s,R){clearTimeout(this.countdownTimer),this.timerText.setText(""),this.newButtonIcon.setTexture(R),this.newButtonIcon.setFrame(A),s&&(this.targetButtonIcon.setTexture(R),this.targetButtonIcon.setFrame(s),this.targetButtonIcon.setVisible(!0),this.swapText.setVisible(!0)),this.newButtonIcon.setVisible(!0),this.setCursor(0),this.actionsContainer.setVisible(!0)}};L(Tm,"AbstractBindingUiHandler");let BC=Tm;const Sm=class Sm extends BC{constructor(A,s=null){var R;super(A,s),(R=this.scene.input.gamepad)==null||R.on("down",this.gamepadButtonDown,this)}setup(){super.setup(),this.newButtonIcon=this.scene.add.sprite(0,0,"xbox"),this.newButtonIcon.setPositionRelative(this.optionSelectBg,78,16),this.newButtonIcon.setOrigin(.5),this.newButtonIcon.setVisible(!1),this.swapText=le(this.scene,0,0,"will swap with",X.WINDOW),this.swapText.setOrigin(.5),this.swapText.setPositionRelative(this.optionSelectBg,this.optionSelectBg.width/2-2,this.optionSelectBg.height/2-2),this.swapText.setVisible(!1),this.targetButtonIcon=this.scene.add.sprite(0,0,"xbox"),this.targetButtonIcon.setPositionRelative(this.optionSelectBg,78,48),this.targetButtonIcon.setOrigin(.5),this.targetButtonIcon.setVisible(!1),this.actionLabel=le(this.scene,0,0,"Confirm swap",X.SETTINGS_LABEL),this.actionLabel.setOrigin(0,.5),this.actionLabel.setPositionRelative(this.actionBg,this.actionBg.width-75,this.actionBg.height/2),this.actionsContainer.add(this.actionLabel),this.optionSelectContainer.add(this.newButtonIcon),this.optionSelectContainer.add(this.swapText),this.optionSelectContainer.add(this.targetButtonIcon)}getSelectedDevice(){var A;return(A=this.scene.inputController)==null?void 0:A.selectedDevice[iA.GAMEPAD]}gamepadButtonDown(A,s,R){const n=[12,13,14,15];if(!this.listening||A.id.toLowerCase()!==this.getSelectedDevice()||n.includes(s.index)||this.buttonPressed!==null)return;const I=this.scene.inputController.getActiveConfig(iA.GAMEPAD),a=I.padType,r=fr(I,s.index),S=I.icons[r];if(!S)return;this.buttonPressed=s.index;const o=GC(I,this.target);this.onInputDown(S,o,a)}swapAction(){const A=this.scene.inputController.getActiveConfig(iA.GAMEPAD);return this.scene.inputController.assignBinding(A,this.target,this.buttonPressed)?(this.scene.gameData.saveMappingConfigs(this.getSelectedDevice(),A),!0):!1}clear(){super.clear(),this.targetButtonIcon.setVisible(!1),this.swapText.setVisible(!1)}};L(Sm,"GamepadBindingUiHandler");let X0=Sm;const Q0={padID:"default",padType:"keyboard",deviceMapping:{KEY_A:Phaser.Input.Keyboard.KeyCodes.A,KEY_B:Phaser.Input.Keyboard.KeyCodes.B,KEY_C:Phaser.Input.Keyboard.KeyCodes.C,KEY_D:Phaser.Input.Keyboard.KeyCodes.D,KEY_E:Phaser.Input.Keyboard.KeyCodes.E,KEY_F:Phaser.Input.Keyboard.KeyCodes.F,KEY_G:Phaser.Input.Keyboard.KeyCodes.G,KEY_H:Phaser.Input.Keyboard.KeyCodes.H,KEY_I:Phaser.Input.Keyboard.KeyCodes.I,KEY_J:Phaser.Input.Keyboard.KeyCodes.J,KEY_K:Phaser.Input.Keyboard.KeyCodes.K,KEY_L:Phaser.Input.Keyboard.KeyCodes.L,KEY_M:Phaser.Input.Keyboard.KeyCodes.M,KEY_N:Phaser.Input.Keyboard.KeyCodes.N,KEY_O:Phaser.Input.Keyboard.KeyCodes.O,KEY_P:Phaser.Input.Keyboard.KeyCodes.P,KEY_Q:Phaser.Input.Keyboard.KeyCodes.Q,KEY_R:Phaser.Input.Keyboard.KeyCodes.R,KEY_S:Phaser.Input.Keyboard.KeyCodes.S,KEY_T:Phaser.Input.Keyboard.KeyCodes.T,KEY_U:Phaser.Input.Keyboard.KeyCodes.U,KEY_V:Phaser.Input.Keyboard.KeyCodes.V,KEY_W:Phaser.Input.Keyboard.KeyCodes.W,KEY_X:Phaser.Input.Keyboard.KeyCodes.X,KEY_Y:Phaser.Input.Keyboard.KeyCodes.Y,KEY_Z:Phaser.Input.Keyboard.KeyCodes.Z,KEY_0:Phaser.Input.Keyboard.KeyCodes.ZERO,KEY_1:Phaser.Input.Keyboard.KeyCodes.ONE,KEY_2:Phaser.Input.Keyboard.KeyCodes.TWO,KEY_3:Phaser.Input.Keyboard.KeyCodes.THREE,KEY_4:Phaser.Input.Keyboard.KeyCodes.FOUR,KEY_5:Phaser.Input.Keyboard.KeyCodes.FIVE,KEY_6:Phaser.Input.Keyboard.KeyCodes.SIX,KEY_7:Phaser.Input.Keyboard.KeyCodes.SEVEN,KEY_8:Phaser.Input.Keyboard.KeyCodes.EIGHT,KEY_9:Phaser.Input.Keyboard.KeyCodes.NINE,KEY_CTRL:Phaser.Input.Keyboard.KeyCodes.CTRL,KEY_DEL:Phaser.Input.Keyboard.KeyCodes.DELETE,KEY_END:Phaser.Input.Keyboard.KeyCodes.END,KEY_ENTER:Phaser.Input.Keyboard.KeyCodes.ENTER,KEY_ESC:Phaser.Input.Keyboard.KeyCodes.ESC,KEY_F1:Phaser.Input.Keyboard.KeyCodes.F1,KEY_F2:Phaser.Input.Keyboard.KeyCodes.F2,KEY_F3:Phaser.Input.Keyboard.KeyCodes.F3,KEY_F4:Phaser.Input.Keyboard.KeyCodes.F4,KEY_F5:Phaser.Input.Keyboard.KeyCodes.F5,KEY_F6:Phaser.Input.Keyboard.KeyCodes.F6,KEY_F7:Phaser.Input.Keyboard.KeyCodes.F7,KEY_F8:Phaser.Input.Keyboard.KeyCodes.F8,KEY_F9:Phaser.Input.Keyboard.KeyCodes.F9,KEY_F10:Phaser.Input.Keyboard.KeyCodes.F10,KEY_F11:Phaser.Input.Keyboard.KeyCodes.F11,KEY_F12:Phaser.Input.Keyboard.KeyCodes.F12,KEY_HOME:Phaser.Input.Keyboard.KeyCodes.HOME,KEY_INSERT:Phaser.Input.Keyboard.KeyCodes.INSERT,KEY_PAGE_DOWN:Phaser.Input.Keyboard.KeyCodes.PAGE_DOWN,KEY_PAGE_UP:Phaser.Input.Keyboard.KeyCodes.PAGE_UP,KEY_PLUS:Phaser.Input.Keyboard.KeyCodes.NUMPAD_ADD,KEY_MINUS:Phaser.Input.Keyboard.KeyCodes.NUMPAD_SUBTRACT,KEY_QUOTATION:Phaser.Input.Keyboard.KeyCodes.QUOTES,KEY_SHIFT:Phaser.Input.Keyboard.KeyCodes.SHIFT,KEY_SPACE:Phaser.Input.Keyboard.KeyCodes.SPACE,KEY_TAB:Phaser.Input.Keyboard.KeyCodes.TAB,KEY_TILDE:Phaser.Input.Keyboard.KeyCodes.BACKTICK,KEY_ARROW_UP:Phaser.Input.Keyboard.KeyCodes.UP,KEY_ARROW_DOWN:Phaser.Input.Keyboard.KeyCodes.DOWN,KEY_ARROW_LEFT:Phaser.Input.Keyboard.KeyCodes.LEFT,KEY_ARROW_RIGHT:Phaser.Input.Keyboard.KeyCodes.RIGHT,KEY_LEFT_BRACKET:Phaser.Input.Keyboard.KeyCodes.OPEN_BRACKET,KEY_RIGHT_BRACKET:Phaser.Input.Keyboard.KeyCodes.CLOSED_BRACKET,KEY_SEMICOLON:Phaser.Input.Keyboard.KeyCodes.SEMICOLON,KEY_BACKSPACE:Phaser.Input.Keyboard.KeyCodes.BACKSPACE,KEY_ALT:Phaser.Input.Keyboard.KeyCodes.ALT},icons:{KEY_A:"A.png",KEY_B:"B.png",KEY_C:"C.png",KEY_D:"D.png",KEY_E:"E.png",KEY_F:"F.png",KEY_G:"G.png",KEY_H:"H.png",KEY_I:"I.png",KEY_J:"J.png",KEY_K:"K.png",KEY_L:"L.png",KEY_M:"M.png",KEY_N:"N.png",KEY_O:"O.png",KEY_P:"P.png",KEY_Q:"Q.png",KEY_R:"R.png",KEY_S:"S.png",KEY_T:"T.png",KEY_U:"U.png",KEY_V:"V.png",KEY_W:"W.png",KEY_X:"X.png",KEY_Y:"Y.png",KEY_Z:"Z.png",KEY_0:"0.png",KEY_1:"1.png",KEY_2:"2.png",KEY_3:"3.png",KEY_4:"4.png",KEY_5:"5.png",KEY_6:"6.png",KEY_7:"7.png",KEY_8:"8.png",KEY_9:"9.png",KEY_F1:"F1.png",KEY_F2:"F2.png",KEY_F3:"F3.png",KEY_F4:"F4.png",KEY_F5:"F5.png",KEY_F6:"F6.png",KEY_F7:"F7.png",KEY_F8:"F8.png",KEY_F9:"F9.png",KEY_F10:"F10.png",KEY_F11:"F11.png",KEY_F12:"F12.png",KEY_PAGE_DOWN:"PAGE_DOWN.png",KEY_PAGE_UP:"PAGE_UP.png",KEY_CTRL:"CTRL.png",KEY_DEL:"DEL.png",KEY_END:"END.png",KEY_ENTER:"ENTER.png",KEY_ESC:"ESC.png",KEY_HOME:"HOME.png",KEY_INSERT:"INS.png",KEY_PLUS:"PLUS.png",KEY_MINUS:"MINUS.png",KEY_QUOTATION:"QUOTE.png",KEY_SHIFT:"SHIFT.png",KEY_SPACE:"SPACE.png",KEY_TAB:"TAB.png",KEY_TILDE:"TILDE.png",KEY_ARROW_UP:"KEY_ARROW_UP.png",KEY_ARROW_DOWN:"KEY_ARROW_DOWN.png",KEY_ARROW_LEFT:"KEY_ARROW_LEFT.png",KEY_ARROW_RIGHT:"KEY_ARROW_RIGHT.png",KEY_LEFT_BRACKET:"LEFT_BRACKET.png",KEY_RIGHT_BRACKET:"RIGHT_BRACKET.png",KEY_SEMICOLON:"SEMICOLON.png",KEY_BACKSPACE:"BACK.png",KEY_ALT:"ALT.png"},settings:{[at.Button_Up]:b.UP,[at.Button_Down]:b.DOWN,[at.Button_Left]:b.LEFT,[at.Button_Right]:b.RIGHT,[at.Button_Submit]:b.SUBMIT,[at.Button_Action]:b.ACTION,[at.Button_Cancel]:b.CANCEL,[at.Button_Menu]:b.MENU,[at.Button_Stats]:b.STATS,[at.Button_Cycle_Shiny]:b.CYCLE_SHINY,[at.Button_Cycle_Form]:b.CYCLE_FORM,[at.Button_Cycle_Gender]:b.CYCLE_GENDER,[at.Button_Cycle_Ability]:b.CYCLE_ABILITY,[at.Button_Cycle_Nature]:b.CYCLE_NATURE,[at.Button_Cycle_Variant]:b.V,[at.Button_Speed_Up]:b.SPEED_UP,[at.Button_Slow_Down]:b.SLOW_DOWN,[at.Alt_Button_Up]:b.UP,[at.Alt_Button_Down]:b.DOWN,[at.Alt_Button_Left]:b.LEFT,[at.Alt_Button_Right]:b.RIGHT,[at.Alt_Button_Submit]:b.SUBMIT,[at.Alt_Button_Action]:b.ACTION,[at.Alt_Button_Cancel]:b.CANCEL,[at.Alt_Button_Menu]:b.MENU,[at.Alt_Button_Stats]:b.STATS,[at.Alt_Button_Cycle_Shiny]:b.CYCLE_SHINY,[at.Alt_Button_Cycle_Form]:b.CYCLE_FORM,[at.Alt_Button_Cycle_Gender]:b.CYCLE_GENDER,[at.Alt_Button_Cycle_Ability]:b.CYCLE_ABILITY,[at.Alt_Button_Cycle_Nature]:b.CYCLE_NATURE,[at.Alt_Button_Cycle_Variant]:b.V,[at.Alt_Button_Speed_Up]:b.SPEED_UP,[at.Alt_Button_Slow_Down]:b.SLOW_DOWN},default:{KEY_ARROW_UP:at.Button_Up,KEY_ARROW_DOWN:at.Button_Down,KEY_ARROW_LEFT:at.Button_Left,KEY_ARROW_RIGHT:at.Button_Right,KEY_ENTER:at.Button_Submit,KEY_SPACE:at.Button_Action,KEY_BACKSPACE:at.Button_Cancel,KEY_ESC:at.Button_Menu,KEY_C:at.Button_Stats,KEY_R:at.Button_Cycle_Shiny,KEY_F:at.Button_Cycle_Form,KEY_G:at.Button_Cycle_Gender,KEY_E:at.Button_Cycle_Ability,KEY_N:at.Button_Cycle_Nature,KEY_V:at.Button_Cycle_Variant,KEY_PLUS:-1,KEY_MINUS:-1,KEY_A:at.Alt_Button_Left,KEY_B:-1,KEY_D:at.Alt_Button_Right,KEY_H:-1,KEY_I:-1,KEY_J:-1,KEY_K:-1,KEY_L:-1,KEY_M:at.Alt_Button_Menu,KEY_O:-1,KEY_P:-1,KEY_Q:-1,KEY_S:at.Alt_Button_Down,KEY_T:at.Alt_Button_Cycle_Form,KEY_U:-1,KEY_W:at.Alt_Button_Up,KEY_X:at.Alt_Button_Cancel,KEY_Y:at.Alt_Button_Cycle_Shiny,KEY_Z:at.Alt_Button_Action,KEY_0:-1,KEY_1:-1,KEY_2:-1,KEY_3:-1,KEY_4:-1,KEY_5:-1,KEY_6:-1,KEY_7:-1,KEY_8:-1,KEY_9:-1,KEY_CTRL:-1,KEY_DEL:-1,KEY_END:-1,KEY_F1:-1,KEY_F2:-1,KEY_F3:-1,KEY_F4:-1,KEY_F5:-1,KEY_F6:-1,KEY_F7:-1,KEY_F8:-1,KEY_F9:-1,KEY_F10:-1,KEY_F11:-1,KEY_F12:-1,KEY_HOME:-1,KEY_INSERT:-1,KEY_PAGE_DOWN:at.Button_Slow_Down,KEY_PAGE_UP:at.Button_Speed_Up,KEY_QUOTATION:-1,KEY_SHIFT:at.Alt_Button_Stats,KEY_TAB:-1,KEY_TILDE:-1,KEY_LEFT_BRACKET:-1,KEY_RIGHT_BRACKET:-1,KEY_SEMICOLON:-1,KEY_ALT:-1},blacklist:["KEY_ENTER","KEY_ESC","KEY_SPACE","KEY_BACKSPACE","KEY_ARROW_UP","KEY_ARROW_DOWN","KEY_ARROW_LEFT","KEY_ARROW_RIGHT","KEY_DEL","KEY_HOME"]},om=class om extends HC{constructor(A,s=null){var I,a;super(A,s),this.setSetting=o6,this.titleSelected="Keyboard",this.setting=at,this.settingDeviceDefaults=AZ,this.settingDeviceOptions=tZ,this.configs=[Q0],this.commonSettingsCount=0,this.textureOverride="keyboard",this.localStoragePropertyName="settingsKeyboard",this.settingBlacklisted=EZ,this.device=iA.KEYBOARD;const R=(I=A.input.keyboard)==null?void 0:I.addKey(Phaser.Input.Keyboard.KeyCodes.DELETE),n=(a=A.input.keyboard)==null?void 0:a.addKey(Phaser.Input.Keyboard.KeyCodes.HOME);R&&R.on("up",this.onDeleteDown,this),n&&n.on("up",this.onHomeDown,this)}setup(){super.setup(),this.layout.noKeyboard=new Map;const A=this.scene.add.container(0,0);A.setVisible(!1);const s=le(this.scene,8,28,D.t("settings:keyboardPleasePress"),X.SETTINGS_LABEL);s.setOrigin(0,0),A.add(s),this.settingsContainer.add(A);const R=this.scene.add.sprite(0,0,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(this.actionsBg,this.navigationContainer.width-260,4),this.navigationIcons.BUTTON_DELETE=R;const n=le(this.scene,0,0,D.t("settings:delete"),X.SETTINGS_LABEL);n.setOrigin(0,.15),n.setPositionRelative(R,-n.width/6-2,0),this.settingsContainer.add(R),this.settingsContainer.add(n),this.layout.noKeyboard.optionsContainer=A,this.layout.noKeyboard.label=s}onHomeDown(){[Oe.SETTINGS_KEYBOARD,Oe.SETTINGS_GAMEPAD].includes(this.scene.ui.getMode())&&(this.scene.gameData.resetMappingToFactory(),rO.getInstance().updateIcons())}onDeleteDown(){if(this.scene.ui.getMode()!==Oe.SETTINGS_KEYBOARD)return;const A=this.cursor+this.scrollCursor,s=this.settingLabels[A].text,R=f8(s),n=at[R],I=this.getActiveConfig();qX(this.getActiveConfig(),n)&&(this.saveCustomKeyboardMappingToLocalStorage(I),this.updateBindings(),rO.getInstance().updateIcons())}setLayout(A){return A?super.setLayout(A):(this.layout.noKeyboard.optionsContainer.setVisible(!0),!1)}updateChosenKeyboardDisplay(){this.updateBindings();for(const[A,s]of Object.keys(this.setting).entries())if(this.setting[s]===this.setting.Default_Layout)for(const n of Object.keys(this.layout))n!=="noKeyboard"&&this.layout[n].optionValueLabels[A][0].setText(zd(this.scene.inputController.selectedDevice[iA.KEYBOARD],22))}saveCustomKeyboardMappingToLocalStorage(A){var s;this.scene.gameData.saveMappingConfigs((s=this.scene.inputController)==null?void 0:s.selectedDevice[iA.KEYBOARD],A)}saveSettingToLocalStorage(A,s){this.setting[A]!==this.setting.Default_Layout&&this.scene.gameData.saveControlSetting(this.device,this.localStoragePropertyName,A,this.settingDeviceDefaults,s)}};L(om,"SettingsKeyboardUiHandler");let gC=om;const lm=class lm extends BC{constructor(A,s=null){var R;super(A,s),(R=A.input.keyboard)==null||R.on("keydown",this.onKeyDown,this)}setup(){super.setup(),this.newButtonIcon=this.scene.add.sprite(0,0,"keyboard"),this.newButtonIcon.setPositionRelative(this.optionSelectBg,78,32),this.newButtonIcon.setOrigin(.5),this.newButtonIcon.setVisible(!1),this.actionLabel=le(this.scene,0,0,"Assign button",X.SETTINGS_LABEL),this.actionLabel.setOrigin(0,.5),this.actionLabel.setPositionRelative(this.actionBg,this.actionBg.width-80,this.actionBg.height/2),this.actionsContainer.add(this.actionLabel),this.optionSelectContainer.add(this.newButtonIcon)}getSelectedDevice(){var A;return(A=this.scene.inputController)==null?void 0:A.selectedDevice[iA.KEYBOARD]}onKeyDown(A){const s=[Phaser.Input.Keyboard.KeyCodes.UP,Phaser.Input.Keyboard.KeyCodes.DOWN,Phaser.Input.Keyboard.KeyCodes.LEFT,Phaser.Input.Keyboard.KeyCodes.RIGHT,Phaser.Input.Keyboard.KeyCodes.HOME,Phaser.Input.Keyboard.KeyCodes.ENTER,Phaser.Input.Keyboard.KeyCodes.ESC,Phaser.Input.Keyboard.KeyCodes.DELETE],R=A.keyCode;if(!this.listening||this.buttonPressed!==null||s.includes(R))return;const n=this.scene.inputController.getActiveConfig(iA.KEYBOARD),I=fr(n,R),a=n.icons[I];a&&(this.buttonPressed=R,this.onInputDown(a,null,"keyboard"))}swapAction(){const A=this.scene.inputController.getActiveConfig(iA.KEYBOARD);return this.scene.inputController.assignBinding(A,this.target,this.buttonPressed)?(this.scene.gameData.saveMappingConfigs(this.getSelectedDevice(),A),!0):!1}};L(lm,"KeyboardBindingUiHandler");let J0=lm;const Cm=class Cm extends RS{constructor(A,s=null){super(A,OM.DISPLAY,s),this.title="Display";const R=this.settings.findIndex(n=>n.key===It.Language);if(R>=0)switch(localStorage.getItem("prLang")){case"en":this.settings[R].options[0]={value:"English",label:"English"};break;case"es-ES":this.settings[R].options[0]={value:"Español (ES)",label:"Español (ES)"};break;case"it":this.settings[R].options[0]={value:"Italiano",label:"Italiano"};break;case"fr":this.settings[R].options[0]={value:"Français",label:"Français"};break;case"de":this.settings[R].options[0]={value:"Deutsch",label:"Deutsch"};break;case"pt-BR":this.settings[R].options[0]={value:"Português (BR)",label:"Português (BR)"};break;case"zh-CN":this.settings[R].options[0]={value:"简体中文",label:"简体中文"};break;case"zh-TW":this.settings[R].options[0]={value:"繁體中文",label:"繁體中文"};break;case"ko":case"ko-KR":this.settings[R].options[0]={value:"한국어",label:"한국어"};break;case"ja":this.settings[R].options[0]={value:"日本語",label:"日本語"};break;case"ca-ES":this.settings[R].options[0]={value:"Català",label:"Català"};break;default:this.settings[R].options[0]={value:"English",label:"English"};break}this.localStorageKey="settings"}};L(Cm,"SettingsDisplayUiHandler");let KC=Cm;const Um=class Um extends RS{constructor(A,s=null){super(A,OM.AUDIO,s),this.title="Audio",this.localStorageKey="settings",this.rowsToDisplay=6}};L(Um,"SettingsAudioUiHandler");let mC=Um;const um=class um extends jI{getModalTitle(A){return D.t("menu:renamePokemon")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[D.t("menu:rename"),D.t("menu:cancel")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){return[{label:D.t("menu:nickname")}]}show(A){if(super.show(A)){const s=A[0];return A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=R=>{this.sanitizeInputs();const n=btoa(unescape(encodeURIComponent(this.inputs[0].text)));return s.buttonActions[0](n),!0},!0}return!1}};L(um,"RenameFormUiHandler");let $0=um;const Dm=class Dm extends XT{constructor(A,s,R=115,n=9){super(A,R,n),this.pokemonListContainer=s}setup(){super.setup(),super.changeToEggSummaryLayout(),this.currentPokemonSprite=this.scene.add.sprite(54,80,"pkmn__sub"),this.currentPokemonSprite.setScale(.8),this.currentPokemonSprite.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.pokemonListContainer.add(this.currentPokemonSprite),this.pokemonNumberText=le(this.scene,80,107.5,"0000",X.SUMMARY,{fontSize:74}),this.pokemonNumberText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonNumberText),this.pokemonNameText=le(this.scene,7,107.5,"",X.SUMMARY,{fontSize:74}),this.pokemonNameText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonNameText),this.pokemonHatchedIcon=this.scene.add.sprite(-5,90,"egg_icons"),this.pokemonHatchedIcon.setOrigin(0,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonListContainer.add(this.pokemonHatchedIcon),this.pokemonCandyIcon=this.scene.add.sprite(4.5,40,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyIcon),this.pokemonCandyOverlayIcon=this.scene.add.sprite(4.5,40,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyCountText=le(this.scene,14,40,"x0",X.SUMMARY,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyCountText),this.pokemonEggMoveContainers=[],this.pokemonEggMoveBgs=[],this.pokemonEggMoveLabels=[],this.pokemonEggMovesContainer=this.scene.add.container(0,200),this.pokemonEggMovesContainer.setVisible(!1),this.pokemonEggMovesContainer.setScale(.5);for(let A=0;A<4;A++){const s=this.scene.add.container(0,0+6*A),R=this.scene.add.nineslice(70,0,"type_bgs","unknown",92,14,2,2,2,2);R.setOrigin(1,0);const n=le(this.scene,70-R.width/2,0,"???",X.PARTY);n.setOrigin(.5,0),this.pokemonEggMoveBgs.push(R),this.pokemonEggMoveLabels.push(n),s.add(R),s.add(n),s.setScale(.44),this.pokemonEggMoveContainers.push(s),this.pokemonEggMovesContainer.add(s)}super.add(this.pokemonEggMoveContainers)}hideDisplayPokemon(){this.currentPokemonSprite.setVisible(!1)}displayPokemon(A){const s=A.species,R=A.gender===je.FEMALE,n=A.formIndex,I=A.shiny,a=A.variant;this.currentPokemonSprite.setVisible(!1),s.loadAssets(this.scene,R,n,I,a,!0).then(()=>{Bi(s.speciesId,A.formIndex).cry(this.scene),this.currentPokemonSprite.play(s.getSpriteKey(R,n,I,a)),this.currentPokemonSprite.setPipelineData("shiny",I),this.currentPokemonSprite.setPipelineData("variant",a),this.currentPokemonSprite.setPipelineData("spriteKey",s.getSpriteKey(R,n,I,a)),this.currentPokemonSprite.setVisible(!0)})}showHatchInfo(A){this.pokemonEggMovesContainer.setVisible(!0);const s=A.pokemon,R=s.species;this.displayPokemon(s),super.show(s,!1,1,A.getDex(),A.getStarterEntry(),!0);const n=RR[R.speciesId];this.pokemonCandyIcon.setTint(Xs(hs(n[0]))),this.pokemonCandyIcon.setVisible(!0),this.pokemonCandyOverlayIcon.setTint(Xs(hs(n[1]))),this.pokemonCandyOverlayIcon.setVisible(!0),this.pokemonCandyCountText.setText(`x${this.scene.gameData.starterData[R.speciesId].candyCount}`),this.pokemonCandyCountText.setVisible(!0),this.pokemonNumberText.setText(Ln(R.speciesId,4)),this.pokemonNameText.setText(R.name);const I=R&&BE.hasOwnProperty(R.speciesId);for(let a=0;a<4;a++){const r=I?ye[BE[R.speciesId][a]]:null,S=r&&this.scene.gameData.starterData[R.speciesId].eggMoves&Math.pow(2,a);this.pokemonEggMoveBgs[a].setFrame(i[r?r.type:i.UNKNOWN].toString().toLowerCase()),this.pokemonEggMoveLabels[a].setText(r&&S?r.name:"???"),!(r&&A.starterDataEntryBeforeUpdate.eggMoves&Math.pow(2,a))&&S&&this.pokemonEggMoveLabels[a].setText("(+) "+r.name)}this.pokemonEggMovesContainer.setVisible(!0),R.speciesId===e.MANAPHY||R.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(Ya(R))}};L(Dm,"PokemonHatchInfoContainer");let z0=Dm;const Mm=class Mm extends Phaser.GameObjects.Container{constructor(A,s,R,n){super(A,s,R);const I=n.pokemon;this.species=I.species;const a=2,r=12,S=I.species,o=I.gender===je.FEMALE,l=I.formIndex,C=I.variant,M=I.shiny,u=this.scene.add.sprite(-a,a,S.getIconAtlasKey(l,M,C));u.setScale(.5),u.setOrigin(0,0),u.setFrame(S.getIconId(o,l,M,C)),this.icon=u,this.checkIconId(o,l,M,C),this.add(this.icon),this.shinyIcon=this.scene.add.image(r,a,"shiny_star_small"),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.add(this.shinyIcon);const h=this.scene.add.image(r,a*4,"ha_capsule");h.setOrigin(0,0),h.setScale(.5),this.hiddenAbilityIcon=h,this.add(this.hiddenAbilityIcon);const P=this.scene.add.image(r,a*7,"icon_owned");P.setOrigin(0,0),P.setScale(.5),this.pokeballIcon=P,this.add(this.pokeballIcon);const G=this.scene.add.image(0,a,"icon_egg_move");G.setOrigin(0,0),G.setScale(.5),this.eggMoveIcon=G,this.add(this.eggMoveIcon)}updateAndAnimate(A,s){const R=A.pokemon;this.species=R.species;const I=A.dexEntryBeforeUpdate.caughtAttr,a=BigInt(1<<(R.shiny?1:0)),r=BigInt(1<<R.variant+4),S=(a&I)===BigInt(0)||(r&I)===BigInt(0),o=(BigInt(1<<R.formIndex)*Ze.DEFAULT_FORM&I)===BigInt(0),l=R.gender===je.FEMALE,C=R.formIndex,M=R.variant,u=R.shiny;this.icon.setTexture(this.species.getIconAtlasKey(C,u,M)),this.icon.setFrame(this.species.getIconId(l,C,u,M)),this.checkIconId(l,C,u,M),this.shinyIcon.setVisible(R.shiny),this.shinyIcon.setTint(YE(R.variant)),this.eggMoveIcon.setVisible(A.eggMoveUnlocked),this.hiddenAbilityIcon.setVisible(R.abilityIndex===2),this.pokeballIcon.setVisible(!I||o),!I||S||o?s.addOrUpdate(this.icon,Qs.PASSIVE):s.addOrUpdate(this.icon,Qs.NONE)}checkIconId(A,s,R,n){this.icon.frame.name!==this.species.getIconId(A,s,R,n)&&(console.log(`${this.species.name}'s variant icon does not exist. Replacing with default.`),this.icon.setTexture(this.species.getIconAtlasKey(s,!1,n)),this.icon.setFrame(this.species.getIconId(A,s,!1,n)))}};L(Mm,"HatchedPokemonContainer");let q0=Mm;const hh=112,ch=9,el=9,Oi=11,oL=18,hm=class hm extends ps{constructor(A){super(A,Oe.EGG_HATCH_SUMMARY),this.eventTarget=new EventTarget}setup(){const A=this.getUi();this.summaryContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.summaryContainer.setVisible(!1),A.add(this.summaryContainer),this.eggHatchContainer=this.scene.add.container(0,-this.scene.game.canvas.height/6),this.eggHatchContainer.setVisible(!1),A.add(this.eggHatchContainer),this.iconAnimHandler=new Ur,this.iconAnimHandler.setup(this.scene),this.eggHatchBg=this.scene.add.image(0,0,"egg_summary_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.cursorObj=this.scene.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.summaryContainer.add(this.cursorObj),this.pokemonContainers=[],this.pokemonIconsContainer=this.scene.add.container(hh,ch),this.summaryContainer.add(this.pokemonIconsContainer),this.infoContainer=new z0(this.scene,this.summaryContainer),this.infoContainer.setup(),this.infoContainer.changeToEggSummaryLayout(),this.infoContainer.setVisible(!0),this.summaryContainer.add(this.infoContainer);const s=new Vi(this.scene,hh+Oi*oL,ch+3,4,this.scene.game.canvas.height/6-20,el);this.summaryContainer.add(s),this.scrollGridHandler=new fC(this,el,Oi).withScrollBar(s).withUpdateGridCallBack(()=>this.updatePokemonIcons()).withUpdateSingleElementCallback(R=>this.infoContainer.showHatchInfo(this.eggHatchData[R])),this.cursor=-1}clear(){super.clear(),this.scrollGridHandler.reset(),this.cursor=-1,this.summaryContainer.setVisible(!1),this.pokemonIconsContainer.removeAll(!0),this.pokemonContainers=[],this.eggHatchBg.setVisible(!1),this.getUi().hideTooltip();const A=this.scene.getActiveKeys();Object.keys(this.scene.anims.anims.entries).forEach(n=>{n.startsWith("pkmn__")&&!A.includes(n)&&this.scene.anims.remove(n)}),Object.keys(this.scene.cache.audio.entries.entries).forEach(n=>{n.startsWith("cry/")&&!A.includes(n)&&delete this.scene.cache.audio.entries.entries[n]}),this.eggHatchData.length=0,this.iconAnimHandler.removeAll()}show(A){super.show(A),A.length>=1&&(this.eggHatchData=A[0].sort(L(function(n,I){const a=n.pokemon.species,r=I.pokemon.species;return Ya(a)<Ya(r)?-1:Ya(a)>Ya(r)?1:a.speciesId<r.speciesId?-1:a.speciesId>r.speciesId?1:0},"sortHatchData"))),this.getUi().bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.eggHatchContainer.setVisible(!0),this.eggHatchBg.setVisible(!0),this.infoContainer.hideDisplayPokemon(),this.scrollGridHandler.setTotalElements(this.eggHatchData.length),this.updatePokemonIcons(),this.setCursor(0),this.scene.playSoundWithoutBgm("evolution_fanfare");const s=this.scene.eggSkipPreference===2?2e3:1e3;return this.blockExit=!0,this.scene.time.delayedCall(s,()=>this.blockExit=!1),!0}updatePokemonIcons(){const A=this.scrollGridHandler.getItemOffset(),s=Math.min(el*Oi,this.eggHatchData.length-A);for(let R=0;R<el*Oi;R++){const n=this.eggHatchData[R+A];let I=this.pokemonContainers[R];if(R<s){if(!I){const a=R%Oi*oL,r=Math.floor(R/Oi)*oL;I=new q0(this.scene,a,r,n).setVisible(!1),this.pokemonContainers.push(I),this.pokemonIconsContainer.add(I)}I.setVisible(!0),I.updateAndAnimate(n,this.iconAnimHandler)}else I&&(I.setVisible(!1),this.iconAnimHandler.addOrUpdate(I.icon,Qs.NONE))}}processInput(A){const s=this.getUi();let R=!1,n=!1;if(A===b.CANCEL)if(this.blockExit)n=!0;else{const I=this.scene.getCurrentPhase();I instanceof iC&&I.end(),R=!0}else this.scrollGridHandler.processInput(A);return R?s.playSelect():n&&s.playError(),R||n}setCursor(A){let s=!1;const R=this.cursor;return s=super.setCursor(A),s&&(this.cursorObj.setPosition(hh-1+oL*(A%Oi),ch+1+oL*Math.floor(A/Oi)),R>-1&&this.iconAnimHandler.addOrUpdate(this.pokemonContainers[R].icon,Qs.NONE),this.iconAnimHandler.addOrUpdate(this.pokemonContainers[A].icon,Qs.ACTIVE),this.infoContainer.showHatchInfo(this.eggHatchData[A+this.scrollGridHandler.getItemOffset()])),s}};L(hm,"EggSummaryUiHandler");let j0=hm;const cm=class cm extends jI{constructor(A,s){super(A,s)}setup(){super.setup();const A=L((n,I,a)=>Object.keys(n??{}).map((r,S)=>{const o=Object.values(n)[S];if(typeof o=="object"&&!Ve(o))return A(o,I??r,I?a?[...a,r]:[r]:void 0).filter(l=>l.length>0);if(typeof o=="string"||Ve(o))return a?`${I}:${a.map(l=>l).join(".")}.${r}`:`${I}:${r}`}).filter(r=>r),"flattenKeys"),R=A(D.getDataByLanguage(String(D.resolvedLanguage))).filter(n=>n.length>0).flat(1/0).map(String);this.keys=R}getModalTitle(A){return"Test Dialogue"}getWidth(A){return 300}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return["Check","Cancel"]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){return[{label:"Dialogue"}]}show(A){const s=this.getUi(),R=!!this.getModalTitle();this.updateFields(this.getInputFieldConfigs(),R),this.updateContainer(A[0]);const n=this.inputs[0];if(n.setMaxLength(255),n.on("keydown",(I,a)=>{["escape","space"].some(r=>r===a.key.toLowerCase()||r===a.code.toLowerCase())&&s.getMode()===Oe.AUTO_COMPLETE&&(I.on("blur",()=>I.node.focus(),{once:!0}),s.revertMode())}),n.on("textchange",(I,a)=>{s.getMode()===Oe.AUTO_COMPLETE&&s.revertMode();let r=[];const S=I.text.split(" "),o=this.keys.filter(l=>l.toLowerCase().includes(S[S.length-1].toLowerCase()));if(I.text!==""&&o.length>0&&(r=o.slice(0).map(l=>({label:l,handler:L(()=>{var C;if(!Ve(a.data)||((C=a.inputType)==null?void 0:C.toLowerCase())==="deletecontentbackward"){const M=I.text.split(" ");M[M.length-1]=l,I.setText(M.join(" "))}return s.revertMode(),!0},"handler")}))),r.length>0){const l={options:r,maxOptions:5,modalContainer:this.modalContainer};s.setOverlayMode(Oe.AUTO_COMPLETE,l)}}),super.show(A)){const I=A[0];return this.inputs[0].resize(1150,116),this.inputContainers[0].list[0].width=200,A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=a=>{if(s.getMode()===Oe.TEST_DIALOGUE){this.sanitizeInputs();const r=btoa(unescape(encodeURIComponent(this.inputs[0].text)));return I.buttonActions[0](r),!0}return!1},!0}return!1}};L(cm,"TestDialogueUiHandler");let e_=cm;const _m=class _m extends ZT{constructor(A,s=Oe.OPTION_SELECT){super(A,s)}getWindowWidth(){return 64}show(A){if(A[0].modalContainer){const{modalContainer:s}=A[0],R=super.show(A);return this.modalContainer=s,this.setupOptions(),R}return!1}setupOptions(){super.setupOptions(),this.modalContainer&&(this.optionSelectContainer.setSize(this.optionSelectContainer.height,Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth())),this.optionSelectContainer.setPositionRelative(this.modalContainer,this.optionSelectBg.width,this.optionSelectBg.height+50))}processInput(A){return A!==b.CANCEL&&A!==b.ACTION?super.processInput(A):!1}};L(_m,"AutoCompleteUiHandler");let t_=_m;const Pm=class Pm extends Ws{constructor(A){super(A,Oe.MYSTERY_ENCOUNTER),this.optionScrollTweens=new Array(4).fill(null),this.showDexProgress=!1,this.encounterOptions=[],this.viewPartyIndex=0,this.viewPartyXPosition=0,this.blockInput=!0}setup(){const A=this.getUi();this.cursorContainer=this.scene.add.container(18,-38.7),this.cursorContainer.setVisible(!1),A.add(this.cursorContainer),this.optionsContainer=this.scene.add.container(12,-38.7),this.optionsContainer.setVisible(!1),A.add(this.optionsContainer),this.dexProgressContainer=this.scene.add.container(214,-43),this.dexProgressContainer.setVisible(!1),A.add(this.dexProgressContainer),this.descriptionContainer=this.scene.add.container(0,-152),this.descriptionContainer.setVisible(!1),A.add(this.descriptionContainer),this.tooltipContainer=this.scene.add.container(210,-48),this.tooltipContainer.setVisible(!1),A.add(this.tooltipContainer),this.setCursor(this.getCursor()),this.descriptionWindow=_t(this.scene,0,0,150,105,!1,!1,0,0,qR.THIN),this.descriptionContainer.add(this.descriptionWindow),this.tooltipWindow=_t(this.scene,0,0,110,48,!1,!1,0,0,qR.THIN),this.tooltipContainer.add(this.tooltipWindow),this.dexProgressWindow=_t(this.scene,0,0,24,28,!1,!1,0,0,qR.THIN),this.dexProgressContainer.add(this.dexProgressWindow),this.rarityBall=this.scene.add.sprite(141,9,"pb"),this.rarityBall.setScale(.75),this.descriptionContainer.add(this.rarityBall);const s=this.scene.add.sprite(12,10,"encounter_radar");s.setScale(.8),this.dexProgressContainer.add(s),this.dexProgressContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,24,28),Phaser.Geom.Rectangle.Contains)}show(A){var a,r,S,o;super.show(A),this.overrideSettings=A[0]??{};const s=Ve((a=this.overrideSettings)==null?void 0:a.hideDescription)?!0:!this.overrideSettings.hideDescription,R=Ve((r=this.overrideSettings)==null?void 0:r.slideInDescription)?!0:this.overrideSettings.slideInDescription,n=((S=this.overrideSettings)==null?void 0:S.startingCursorIndex)??0;this.cursorContainer.setVisible(!0),this.descriptionContainer.setVisible(s),this.optionsContainer.setVisible(!0),this.dexProgressContainer.setVisible(!0),this.displayEncounterOptions(R);const I=this.getCursor();return I===(((o=this.optionsContainer)==null?void 0:o.length)||0)-1?this.setCursor(I):this.setCursor(n),this.blockInput&&setTimeout(()=>{this.unblockInput()},1e3),this.displayOptionTooltip(),!0}processInput(A){var I;const s=this.getUi();let R=!1;const n=this.getCursor();if(A===b.CANCEL||A===b.ACTION){if(A===b.ACTION){const a=this.encounterOptions[n];if(n===this.viewPartyIndex){R=!0;const r={...this.overrideSettings,slideInDescription:!1};this.scene.ui.setMode(Oe.PARTY,us.CHECK,-1,()=>{this.scene.ui.setMode(Oe.MYSTERY_ENCOUNTER,r),setTimeout(()=>{this.setCursor(this.viewPartyIndex),this.unblockInput()},300)})}else this.blockInput||!this.optionsMeetsReqs[n]&&(a.optionMode===ct.DISABLED_OR_DEFAULT||a.optionMode===ct.DISABLED_OR_SPECIAL)?R=!1:this.scene.getCurrentPhase().handleOptionSelect(a,n)?R=!0:s.playError()}}else{switch((I=this.optionsContainer.getAll())==null?void 0:I.length){default:case 3:R=this.handleTwoOptionMoveInput(A);break;case 4:R=this.handleThreeOptionMoveInput(A);break;case 5:R=this.handleFourOptionMoveInput(A);break}this.displayOptionTooltip()}return R&&s.playSelect(),R}handleTwoOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case b.UP:R<this.viewPartyIndex&&(s=this.setCursor(this.viewPartyIndex));break;case b.DOWN:R===this.viewPartyIndex&&(s=this.setCursor(1));break;case b.LEFT:R>0&&(s=this.setCursor(R-1));break;case b.RIGHT:R<this.viewPartyIndex&&(s=this.setCursor(R+1));break}return s}handleThreeOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case b.UP:R===2?s=this.setCursor(R-2):s=this.setCursor(this.viewPartyIndex);break;case b.DOWN:R===this.viewPartyIndex?s=this.setCursor(1):s=this.setCursor(2);break;case b.LEFT:R===this.viewPartyIndex?s=this.setCursor(1):R===1&&(s=this.setCursor(R-1));break;case b.RIGHT:R===1?s=this.setCursor(this.viewPartyIndex):R<1&&(s=this.setCursor(R+1));break}return s}handleFourOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case b.UP:R>=2&&R!==this.viewPartyIndex?s=this.setCursor(R-2):s=this.setCursor(this.viewPartyIndex);break;case b.DOWN:R<=1?s=this.setCursor(R+2):R===this.viewPartyIndex&&(s=this.setCursor(1));break;case b.LEFT:R===this.viewPartyIndex?s=this.setCursor(1):R%2===1&&(s=this.setCursor(R-1));break;case b.RIGHT:R===1?s=this.setCursor(this.viewPartyIndex):R%2===0&&R!==this.viewPartyIndex&&(s=this.setCursor(R+1));break}return s}unblockInput(){if(this.blockInput){this.blockInput=!1;for(let A=0;A<this.optionsContainer.length-1;A++){const s=this.encounterOptions[A].optionMode;!this.optionsMeetsReqs[A]&&(s===ct.DISABLED_OR_DEFAULT||s===ct.DISABLED_OR_SPECIAL)||this.optionsContainer.getAt(A).setAlpha(1)}}}getCursor(){return this.cursor?this.cursor:0}setCursor(A){var n,I,a,r;const R=this.getCursor()!==A;return R&&(this.cursor=A),this.viewPartyIndex=((n=this.optionsContainer.getAll())==null?void 0:n.length)-1,this.cursorObj||(this.cursorObj=this.scene.add.image(0,0,"cursor"),this.cursorContainer.add(this.cursorObj)),A===this.viewPartyIndex?this.cursorObj.setPosition(this.viewPartyXPosition,-17):((I=this.optionsContainer.getAll())==null?void 0:I.length)===3?this.cursorObj.setPosition(-10.5+(A%2===1?100:0),15):((a=this.optionsContainer.getAll())==null?void 0:a.length)===4?this.cursorObj.setPosition(-10.5+(A%2===1?100:0),7+(A>1?16:0)):((r=this.optionsContainer.getAll())==null?void 0:r.length)===5&&this.cursorObj.setPosition(-10.5+(A%2===1?100:0),7+(A>1?16:0)),R}displayEncounterOptions(A=!0){var P,G,d,H;this.getUi().clearText();const s=this.scene.currentBattle.mysteryEncounter;this.encounterOptions=((P=this.overrideSettings)==null?void 0:P.overrideOptions)??s.options,this.optionsMeetsReqs=[];const R=mA(this.scene,(G=s.dialogue.encounterOptionsDialogue)==null?void 0:G.title,X.TOOLTIP_TITLE),n=mA(this.scene,(d=s.dialogue.encounterOptionsDialogue)==null?void 0:d.description,X.TOOLTIP_CONTENT),I=mA(this.scene,(H=s.dialogue.encounterOptionsDialogue)==null?void 0:H.query,X.TOOLTIP_CONTENT);this.optionsContainer.removeAll(!0);for(let f=0;f<this.encounterOptions.length;f++){const K=this.encounterOptions[f];let W;switch(this.encounterOptions.length){default:case 2:W=yE(this.scene,f%2===0?0:100,8,"-",X.WINDOW,{fontSize:"80px",lineSpacing:-8});break;case 3:W=yE(this.scene,f%2===0?0:100,f<2?0:16,"-",X.WINDOW,{fontSize:"80px",lineSpacing:-8});break;case 4:W=yE(this.scene,f%2===0?0:100,f<2?0:16,"-",X.WINDOW,{fontSize:"80px",lineSpacing:-8});break}this.optionsMeetsReqs.push(K.meetsRequirements(this.scene));const V=K.dialogue,k=!this.optionsMeetsReqs[f]&&V.disabledButtonLabel?V.disabledButtonLabel:V.buttonLabel;let Q;K.hasRequirements()&&this.optionsMeetsReqs[f]&&(K.optionMode===ct.DEFAULT_OR_SPECIAL||K.optionMode===ct.DISABLED_OR_SPECIAL)?Q=mA(this.scene,k,X.ME_OPTION_SPECIAL):Q=mA(this.scene,k,V.style?V.style:X.ME_OPTION_DEFAULT),Q&&W.setText(Q),!this.optionsMeetsReqs[f]&&(K.optionMode===ct.DISABLED_OR_DEFAULT||K.optionMode===ct.DISABLED_OR_SPECIAL)&&W.setAlpha(.5),this.blockInput&&W.setAlpha(.5);const j=90,J=this.scene.make.graphics({});J.setScale(6),J.fillStyle(16777215),J.beginPath(),J.fillRect(W.x+11,W.y+140,j,18);const ne=J.createGeometryMask();W.setMask(ne);const x=W.displayWidth,q=this.optionScrollTweens[f];q&&(q.remove(),this.optionScrollTweens[f]=null),x>j&&(this.optionScrollTweens[f]=this.scene.tweens.add({targets:W,delay:Et(2e3),loop:-1,hold:Et(2e3),duration:Et((x-j)/15*2e3),x:`-=${x-j}`})),this.optionsContainer.add(W)}const a=yE(this.scene,this.scene.game.canvas.width/6,-24,RO(D.t("mysteryEncounterMessages:view_party_button"),X.PARTY),X.PARTY);this.optionsContainer.add(a),a.x-=a.displayWidth+16,this.viewPartyXPosition=a.x-10;const r=yE(this.scene,0,0,R??"",X.TOOLTIP_TITLE,{wordWrap:{width:750},align:"center",lineSpacing:-8});this.descriptionContainer.add(r),r.setPosition(72-r.displayWidth/2,5.5);const S=s.encounterTier===Vt.COMMON?0:s.encounterTier===Vt.GREAT?1:s.encounterTier===Vt.ULTRA?2:s.encounterTier===Vt.ROGUE?3:4,o=TO(S);this.rarityBall.setTexture("pb",o);const l=yE(this.scene,6,25,n??"",X.TOOLTIP_CONTENT,{wordWrap:{width:830}}),C=this.scene.make.graphics({});C.setScale(6),C.fillStyle(16777215),C.beginPath(),C.fillRect(6,53,206,57);const M=C.createGeometryMask();l.setMask(M);const u=Math.floor(l.displayHeight/10);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=void 0),u>6&&(this.descriptionScrollTween=this.scene.tweens.add({targets:l,delay:Et(2e3),loop:-1,hold:Et(2e3),duration:Et((u-6)*2e3),y:`-=${10*(u-6)}`})),this.descriptionContainer.add(l);const h=yE(this.scene,0,0,I??"",X.TOOLTIP_CONTENT,{wordWrap:{width:830}});this.descriptionContainer.add(h),h.setPosition(75-h.displayWidth/2,90),A&&(this.descriptionContainer.x-=150,this.scene.tweens.add({targets:this.descriptionContainer,x:"+=150",ease:"Sine.easeInOut",duration:1e3}))}displayOptionTooltip(){const A=this.getCursor();if(this.tooltipContainer.length>1&&this.tooltipContainer.removeBetween(1,this.tooltipContainer.length,!0),this.tooltipContainer.setVisible(!0),Ve(A)||A>this.optionsContainer.length-2){this.showHideDexProgress(!1);return}let s;const R=this.encounterOptions[A],n=R.dialogue;if(!this.optionsMeetsReqs[A]&&(R.optionMode===ct.DISABLED_OR_DEFAULT||R.optionMode===ct.DISABLED_OR_SPECIAL)&&n.disabledButtonTooltip?s=mA(this.scene,n.disabledButtonTooltip,X.TOOLTIP_CONTENT):s=mA(this.scene,n.buttonTooltip,X.TOOLTIP_CONTENT),s){const I=[...s.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];s=s.replace(/(\(\+\)[^\(\[]*)/gi,a=>"[/color][/shadow]"+RO(a,X.SUMMARY_GREEN)+"[/color][/shadow]"+I),s=s.replace(/(\(\-\)[^\(\[]*)/gi,a=>"[/color][/shadow]"+RO(a,X.SUMMARY_BLUE)+"[/color][/shadow]"+I)}if(s){const I=yE(this.scene,6,7,s,X.TOOLTIP_CONTENT,{wordWrap:{width:600},fontSize:"72px"});this.tooltipContainer.add(I);const a=this.scene.make.graphics({});a.setScale(6),a.fillStyle(16777215),a.beginPath(),a.fillRect(this.tooltipContainer.x,this.tooltipContainer.y+188.5,150,32);const r=a.createGeometryMask();I.setMask(r);const S=Math.floor(I.displayHeight/11.2);this.tooltipScrollTween&&(this.tooltipScrollTween.remove(),this.tooltipScrollTween=void 0),S>3&&(this.tooltipScrollTween=this.scene.tweens.add({targets:I,delay:Et(1200),loop:-1,hold:Et(1200),duration:Et((S-3)*1200),y:`-=${11.2*(S-3)}`}))}R.hasDexProgress&&!this.showDexProgress?this.showHideDexProgress(!0):R.hasDexProgress||this.showHideDexProgress(!1)}clear(){super.clear(),this.overrideSettings=void 0,this.optionsContainer.setVisible(!1),this.optionsContainer.removeAll(!0),this.dexProgressContainer.setVisible(!1),this.descriptionContainer.setVisible(!1),this.tooltipContainer.setVisible(!1),this.descriptionContainer.removeBetween(2,this.descriptionContainer.length,!0),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=void 0}showHideDexProgress(A){A&&!this.showDexProgress?(this.showDexProgress=!0,this.scene.tweens.killTweensOf(this.dexProgressContainer),this.scene.tweens.add({targets:this.dexProgressContainer,y:-63,ease:"Sine.easeInOut",duration:750,onComplete:L(()=>{this.dexProgressContainer.on("pointerover",()=>{this.scene.ui.showTooltip("",D.t("mysteryEncounterMessages:affects_pokedex"),!0)}),this.dexProgressContainer.on("pointerout",()=>{this.scene.ui.hideTooltip()})},"onComplete")})):!A&&this.showDexProgress&&(this.showDexProgress=!1,this.scene.tweens.killTweensOf(this.dexProgressContainer),this.scene.tweens.add({targets:this.dexProgressContainer,y:-43,ease:"Sine.easeInOut",duration:750,onComplete:L(()=>{this.dexProgressContainer.off("pointerover"),this.dexProgressContainer.off("pointerout")},"onComplete")}))}};L(Pm,"MysteryEncounterUiHandler");let A_=Pm;var Oe=(E=>(E[E.MESSAGE=0]="MESSAGE",E[E.TITLE=1]="TITLE",E[E.COMMAND=2]="COMMAND",E[E.FIGHT=3]="FIGHT",E[E.BALL=4]="BALL",E[E.TARGET_SELECT=5]="TARGET_SELECT",E[E.MODIFIER_SELECT=6]="MODIFIER_SELECT",E[E.SAVE_SLOT=7]="SAVE_SLOT",E[E.PARTY=8]="PARTY",E[E.SUMMARY=9]="SUMMARY",E[E.STARTER_SELECT=10]="STARTER_SELECT",E[E.EVOLUTION_SCENE=11]="EVOLUTION_SCENE",E[E.EGG_HATCH_SCENE=12]="EGG_HATCH_SCENE",E[E.EGG_HATCH_SUMMARY=13]="EGG_HATCH_SUMMARY",E[E.CONFIRM=14]="CONFIRM",E[E.OPTION_SELECT=15]="OPTION_SELECT",E[E.MENU=16]="MENU",E[E.MENU_OPTION_SELECT=17]="MENU_OPTION_SELECT",E[E.SETTINGS=18]="SETTINGS",E[E.SETTINGS_DISPLAY=19]="SETTINGS_DISPLAY",E[E.SETTINGS_AUDIO=20]="SETTINGS_AUDIO",E[E.SETTINGS_GAMEPAD=21]="SETTINGS_GAMEPAD",E[E.GAMEPAD_BINDING=22]="GAMEPAD_BINDING",E[E.SETTINGS_KEYBOARD=23]="SETTINGS_KEYBOARD",E[E.KEYBOARD_BINDING=24]="KEYBOARD_BINDING",E[E.ACHIEVEMENTS=25]="ACHIEVEMENTS",E[E.GAME_STATS=26]="GAME_STATS",E[E.EGG_LIST=27]="EGG_LIST",E[E.EGG_GACHA=28]="EGG_GACHA",E[E.LOGIN_FORM=29]="LOGIN_FORM",E[E.REGISTRATION_FORM=30]="REGISTRATION_FORM",E[E.LOADING=31]="LOADING",E[E.SESSION_RELOAD=32]="SESSION_RELOAD",E[E.UNAVAILABLE=33]="UNAVAILABLE",E[E.CHALLENGE_SELECT=34]="CHALLENGE_SELECT",E[E.RENAME_POKEMON=35]="RENAME_POKEMON",E[E.RUN_HISTORY=36]="RUN_HISTORY",E[E.RUN_INFO=37]="RUN_INFO",E[E.TEST_DIALOGUE=38]="TEST_DIALOGUE",E[E.AUTO_COMPLETE=39]="AUTO_COMPLETE",E[E.ADMIN=40]="ADMIN",E[E.MYSTERY_ENCOUNTER=41]="MYSTERY_ENCOUNTER",E))(Oe||{});const _b=[7,8,9,10,11,12,27,28,34,36],tl=[1,14,15,16,17,22,24,18,20,19,21,23,25,26,29,30,31,32,33,35,38,39,40,41,37],Gm=class Gm extends Phaser.GameObjects.Container{constructor(A){super(A,0,A.game.canvas.height/6),this.mode=0,this.modeChain=[],this.handlers=[new ic(A),new x0(A),new l0(A),new C0(A),new U0(A),new _0(A),new Wc(A),new Jc(A),new vE(A),new t0(A),new sS(A),new CC(A),new m0(A),new j0(A),new RC(A),new OS(A),new g0(A),new OS(A,17),new PC(A),new KC(A),new mC(A),new dC(A),new X0(A),new gC(A),new J0(A),new K0(A),new w0(A),new F0(A),new p0(A),new W0(A),new Y0(A),new y0(A),new Z0(A),new k0(A),new H0(A),new $0(A),new Bc(A),new tC(A),new e_(A,38),new t_(A),new B0(A),new A_(A)]}setup(){this.setName(`ui-${Oe[this.mode]}`);for(const A of this.handlers)A.setup();this.overlay=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,0),this.overlay.setName("rect-ui-overlay"),this.overlay.setOrigin(0,0),this.scene.uiContainer.add(this.overlay),this.overlay.setVisible(!1),this.setupTooltip(),this.achvBar=new d0(this.scene),this.achvBar.setup(),this.scene.uiContainer.add(this.achvBar),this.savingIcon=new b0(this.scene),this.savingIcon.setup(),this.scene.uiContainer.add(this.savingIcon)}setupTooltip(){this.tooltipContainer=this.scene.add.container(0,0),this.tooltipContainer.setName("tooltip"),this.tooltipContainer.setVisible(!1),this.tooltipBg=_t(this.scene,0,0,128,31),this.tooltipBg.setName("window-tooltip-bg"),this.tooltipBg.setOrigin(0,0),this.tooltipTitle=le(this.scene,64,4,"",X.TOOLTIP_TITLE),this.tooltipTitle.setName("text-tooltip-title"),this.tooltipTitle.setOrigin(.5,0),this.tooltipContent=le(this.scene,6,16,"",X.TOOLTIP_CONTENT),this.tooltipContent.setName("text-tooltip-content"),this.tooltipContent.setWordWrapWidth(850),this.tooltipContainer.add(this.tooltipBg),this.tooltipContainer.add(this.tooltipTitle),this.tooltipContainer.add(this.tooltipContent),this.scene.uiContainer.add(this.tooltipContainer)}getHandler(){return this.handlers[this.mode]}getMessageHandler(){return this.handlers[0]}processInfoButton(A){if(this.overlayActive)return!1;const s=this.scene;return[14,2,3,0].includes(this.mode)?(s==null||s.processInfoButton(A),!0):(s==null||s.processInfoButton(!1),!0)}processInput(A){if(this.overlayActive)return!1;const s=this.getHandler();return s instanceof xn&&s.tutorialActive?s.processTutorialInput(A):s.processInput(A)}showTextPromise(A,s=0,R=!0,n){return new Promise(I=>{this.showText(A??"",null,()=>I(),s,R,n)})}showText(A,s,R,n,I,a){if(I&&A.indexOf("$")>-1){const r=A.split(/\$/g).map(o=>o.trim());let S=L(()=>R&&R(),"showMessageAndCallback");for(let o=r.length-1;o>=0;o--){const l=S;S=L(()=>this.showText(r[o],null,l,null,!0),"showMessageAndCallback")}S()}else{const r=this.getHandler();r instanceof ps?r.showText(A,s,R,n,I,a):this.getMessageHandler().showText(A,s,R,n,I,a)}}showDialogue(A,s,R=0,n,I,a){const r=this.scene;let S=!1,o=A;const l=r.gameData.gender??vt.UNSET,C=vt[l].toLowerCase();if(D.exists(A)){const u=A;if(S=!0,o=D.t(u,{context:C}),this.shouldSkipDialogue(u)){console.log(`Dialogue ${u} skipped`),n();return}}let M=L(()=>{S&&r.gameData.saveSeenDialogue(A),n()},"showMessageAndCallback");if(o.indexOf("$")>-1){const u=o.split(/\$/g).map(h=>h.trim());for(let h=u.length-1;h>=0;h--){const P=M;M=L(()=>this.showDialogue(u[h],s,null,P),"showMessageAndCallback")}M()}else{const u=this.getHandler();u instanceof ps?u.showDialogue(o,s,R,M,I,!0,a):this.getMessageHandler().showDialogue(o,s,R,M,I,!0,a)}}shouldSkipDialogue(A){const s=this.scene;return!!(D.exists(A)&&s.skipSeenDialogues&&s.gameData.getSeenDialogues()[A]===!0)}getTooltip(){return{visible:this.tooltipContainer.visible,title:this.tooltipTitle.text,content:this.tooltipContent.text}}showTooltip(A,s,R){this.tooltipContainer.setVisible(!0),this.editTooltip(A,s),R?this.scene.uiContainer.moveAbove(this.tooltipContainer,this):this.scene.uiContainer.moveBelow(this.tooltipContainer,this)}editTooltip(A,s){this.tooltipTitle.setText(A||"");const R=this.tooltipContent.runWordWrap(s);this.tooltipContent.setText(R),this.tooltipContent.y=A?16:4,this.tooltipBg.width=Math.min(Math.max(this.tooltipTitle.displayWidth,this.tooltipContent.displayWidth)+12,838),this.tooltipBg.height=(A?31:19)+10.5*(R.split(`
`).length-1),this.tooltipTitle.x=this.tooltipBg.width/2}hideTooltip(){this.tooltipContainer.setVisible(!1),this.tooltipTitle.clearTint()}update(){if(this.tooltipContainer.visible){const A=this.scene.inputMethod==="touch",s=this.scene.game.input.activePointer.x,R=this.scene.game.input.activePointer.y,n=this.tooltipBg.width,I=this.tooltipBg.height,a=2;let r=A?a:s/6+a,S=A?a:R/6+a;A?s<=this.scene.game.canvas.width/2&&R<=this.scene.game.canvas.height/2&&(r=this.scene.game.canvas.width/6-n-a):(r+n+a>this.scene.game.canvas.width/6&&(r=Math.max(a,s/6-n-a)),S+I+a>this.scene.game.canvas.height/6&&(S=Math.max(a,R/6-I-a))),this.tooltipContainer.setPosition(r,S)}}clearText(){const A=this.getHandler();A instanceof ps?A.clearText():this.getMessageHandler().clearText()}setCursor(A){const s=this.getHandler().setCursor(A);return s&&this.playSelect(),s}playSelect(){this.scene.playSound("ui/select")}playError(){this.scene.playSound("ui/error")}fadeOut(A){return new Promise(s=>{if(this.overlayActive)return s();this.overlayActive=!0,this.overlay.setAlpha(0),this.overlay.setVisible(!0),this.scene.tweens.add({targets:this.overlay,alpha:1,duration:A,ease:"Sine.easeOut",onComplete:L(()=>s(),"onComplete")})})}fadeIn(A){return new Promise(s=>{if(!this.overlayActive)return s();this.scene.tweens.add({targets:this.overlay,alpha:0,duration:A,ease:"Sine.easeIn",onComplete:L(()=>{this.overlay.setVisible(!1),s()},"onComplete")}),this.overlayActive=!1})}setModeInternal(A,s,R,n,I){return new Promise(a=>{if(this.mode===A&&!R){a();return}const r=L(()=>{if(this.mode!==A){s&&this.getHandler().clear(),n&&this.mode&&!s&&(this.modeChain.push(this.mode),this.scene.updateGameInfo()),this.mode=A;const S=document==null?void 0:document.getElementById("touchControls");S&&(S.dataset.uiMode=Oe[A]),this.getHandler().show(I)}a()},"doSetMode");!n&&(_b.indexOf(this.mode)>-1||_b.indexOf(A)>-1)&&tl.indexOf(this.mode)===-1&&tl.indexOf(A)===-1||n&&tl.indexOf(A)===-1?this.fadeOut(250).then(()=>{this.scene.time.delayedCall(100,()=>{r(),this.fadeIn(250)})}):r()})}getMode(){return this.mode}setMode(A,...s){return this.setModeInternal(A,!0,!1,!1,s)}setModeForceTransition(A,...s){return this.setModeInternal(A,!0,!0,!1,s)}setModeWithoutClear(A,...s){return this.setModeInternal(A,!1,!1,!1,s)}setOverlayMode(A,...s){return this.setModeInternal(A,!1,!1,!0,s)}resetModeChain(){this.modeChain=[],this.scene.updateGameInfo()}revertMode(){return new Promise(A=>{var n;if(!((n=this==null?void 0:this.modeChain)!=null&&n.length))return A(!1);const s=this.mode,R=L(()=>{this.getHandler().clear(),this.mode=this.modeChain.pop(),this.scene.updateGameInfo();const I=document.getElementById("touchControls");I&&(I.dataset.uiMode=Oe[this.mode]),A(!0)},"doRevertMode");tl.indexOf(s)===-1?this.fadeOut(250).then(()=>{this.scene.time.delayedCall(100,()=>{R(),this.fadeIn(250)})}):R()})}revertModes(){return new Promise(A=>{var s;if(!((s=this==null?void 0:this.modeChain)!=null&&s.length))return A();this.revertMode().then(R=>lr(R,this.revertModes).then(()=>A()))})}getModeChain(){return this.modeChain}getGamepadType(){const A=this.scene;return A.inputMethod==="gamepad"?A.inputController.getConfig(A.inputController.selectedDevice[iA.GAMEPAD]).padType:A.inputMethod}};L(Gm,"UI");let E_=Gm;function NQ(){const E=this,A=L(S=>S instanceof B8?S.value:E.gameSpeed===1?S:Math.ceil(S/=E.gameSpeed),"transformValue"),s=this.time.addEvent;this.time.addEvent=function(S){return!(S instanceof Phaser.Time.TimerEvent)&&S.delay&&(S.delay=A(S.delay)),s.apply(this,[S])};const R=this.tweens.add;this.tweens.add=function(S){return S.loopDelay&&(S.loopDelay=A(S.loopDelay)),S instanceof Phaser.Tweens.TweenChain||(S.duration&&(S.duration=A(S.duration)),S instanceof Phaser.Tweens.Tween||(S.delay&&(S.delay=A(S.delay)),S.repeatDelay&&(S.repeatDelay=A(S.repeatDelay)),S.hold&&(S.hold=A(S.hold)))),R.apply(this,[S])};const n=this.tweens.chain;this.tweens.chain=function(S){return S.tweens&&S.tweens.forEach(o=>{o.duration&&(o.duration=A(o.duration)),o.delay&&(o.delay=A(o.delay)),o.repeatDelay&&(o.repeatDelay=A(o.repeatDelay)),o.loopDelay&&(o.loopDelay=A(o.loopDelay)),o.hold&&(o.hold=A(o.hold))}),n.apply(this,[S])};const I=this.tweens.addCounter;this.tweens.addCounter=function(S){return S.duration&&(S.duration=A(S.duration)),S.delay&&(S.delay=A(S.delay)),S.repeatDelay&&(S.repeatDelay=A(S.repeatDelay)),S.loopDelay&&(S.loopDelay=A(S.loopDelay)),S.hold&&(S.hold=A(S.hold)),I.apply(this,[S])};const a=$R.fadeOut;$R.fadeOut=(S,o,l,C)=>a(S,o,A(l),C);const r=$R.fadeIn;$R.fadeIn=(S,o,l,C,M)=>r(S,o,A(l),C,M)}L(NQ,"initGameSpeed");const TQ=-118,SQ=0,Pb=-116,Hm=class Hm extends Phaser.GameObjects.Container{constructor(A){super(A,TQ,Pb)}setup(){this.bg=this.scene.add.image(0,0,"ability_bar_left"),this.bg.setOrigin(0,0),this.add(this.bg),this.abilityBarText=le(this.scene,15,3,"",X.MESSAGE,{fontSize:"72px"}),this.abilityBarText.setOrigin(0,0),this.abilityBarText.setWordWrapWidth(600,!0),this.add(this.abilityBarText),this.setVisible(!1),this.shown=!1}showAbility(A,s=!1){this.abilityBarText.setText(`${D.t("fightUiHandler:abilityFlyInText",{pokemonName:ee(A),passive:s?D.t("fightUiHandler:passive"):"",abilityName:s?A.getPassiveAbility().name:A.getAbility().name})}`),!this.shown&&(this.scene.fieldUI.bringToTop(this),this.y=Pb+(this.scene.currentBattle.double?14:0),this.tween=this.scene.tweens.add({targets:this,x:SQ,duration:500,ease:"Sine.easeOut",onComplete:L(()=>{this.tween=null,this.resetAutoHideTimer()},"onComplete")}),this.setVisible(!0),this.shown=!0)}hide(){this.shown&&(this.autoHideTimer&&clearInterval(this.autoHideTimer),this.tween&&this.tween.stop(),this.tween=this.scene.tweens.add({targets:this,x:-91,duration:500,ease:"Sine.easeIn",onComplete:L(()=>{this.tween=null,this.setVisible(!1)},"onComplete")}),this.shown=!1)}resetAutoHideTimer(){this.autoHideTimer&&clearInterval(this.autoHideTimer),this.autoHideTimer=setTimeout(()=>{this.hide(),this.autoHideTimer=null},2500)}};L(Hm,"AbilityBar");let s_=Hm;const oQ=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D uMainSampler[%count%];

varying vec2 outTexCoord;
varying float outTexId;
varying float outTintEffect;
varying vec4 outTint;

uniform float time;
uniform int ignoreTimeTint;
uniform int isOutside;
uniform vec3 dayTint;
uniform vec3 duskTint;
uniform vec3 nightTint;
uniform vec3 terrainColor;
uniform float terrainColorRatio;

float blendOverlay(float base, float blend) {
	return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));
}

vec3 blendOverlay(vec3 base, vec3 blend) {
	return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));
}

vec3 blendHardLight(vec3 base, vec3 blend) {
	return blendOverlay(blend, base);
}

float hue2rgb(float f1, float f2, float hue) {
	if (hue < 0.0)
		hue += 1.0;
	else if (hue > 1.0)
		hue -= 1.0;
	float res;
	if ((6.0 * hue) < 1.0)
		res = f1 + (f2 - f1) * 6.0 * hue;
	else if ((2.0 * hue) < 1.0)
		res = f2;
	else if ((3.0 * hue) < 2.0)
		res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;
	else
		res = f1;
	return res;
}

vec3 rgb2hsl(vec3 color) {
	vec3 hsl;
	
	float fmin = min(min(color.r, color.g), color.b);
	float fmax = max(max(color.r, color.g), color.b);
	float delta = fmax - fmin;

	hsl.z = (fmax + fmin) / 2.0;

	if (delta == 0.0) {
		hsl.x = 0.0;
		hsl.y = 0.0;
	} else {
		if (hsl.z < 0.5)
			hsl.y = delta / (fmax + fmin);
		else
			hsl.y = delta / (2.0 - fmax - fmin);
		
		float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;
		float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;
		float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;

		if (color.r == fmax )
			hsl.x = deltaB - deltaG;
		else if (color.g == fmax)
			hsl.x = (1.0 / 3.0) + deltaR - deltaB;
		else if (color.b == fmax)
			hsl.x = (2.0 / 3.0) + deltaG - deltaR;

		if (hsl.x < 0.0)
			hsl.x += 1.0;
		else if (hsl.x > 1.0)
			hsl.x -= 1.0;
	}

	return hsl;
}

vec3 hsl2rgb(vec3 hsl) {
	vec3 rgb;
	
	if (hsl.y == 0.0)
		rgb = vec3(hsl.z);
	else {
		float f2;
		
		if (hsl.z < 0.5)
			f2 = hsl.z * (1.0 + hsl.y);
		else
			f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);
			
		float f1 = 2.0 * hsl.z - f2;
		
		rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));
		rgb.g = hue2rgb(f1, f2, hsl.x);
		rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));
	}
	
	return rgb;
}

vec3 blendHue(vec3 base, vec3 blend) {
	vec3 baseHSL = rgb2hsl(base);
	return hsl2rgb(vec3(rgb2hsl(blend).r, baseHSL.g, baseHSL.b));
}

void main() {
    vec4 texture;

    %forloop%

    vec4 texel = vec4(outTint.bgr * outTint.a, outTint.a);

    //  Multiply texture tint
    vec4 color = texture * texel;

    if (outTintEffect == 1.0) {
        //  Solid color + texture alpha
        color.rgb = mix(texture.rgb, outTint.bgr * outTint.a, texture.a);
    } else if (outTintEffect == 2.0) {
        //  Solid color, no texture
        color = texel;
    }

    /* Apply day/night tint */
    if (color.a > 0.0 && ignoreTimeTint == 0) {
        vec3 dayNightTint;

        if (time < 0.25) {
            dayNightTint = dayTint;
        } else if (isOutside == 0 && time < 0.5) {
            dayNightTint = mix(dayTint, nightTint, (time - 0.25) / 0.25);
        } else if (time < 0.375) {
            dayNightTint = mix(dayTint, duskTint, (time - 0.25) / 0.125);
        } else if (time < 0.5) {
            dayNightTint = mix(duskTint, nightTint, (time - 0.375) / 0.125);
        } else if (time < 0.75) {
            dayNightTint = nightTint;
        } else if (isOutside == 0) {
            dayNightTint = mix(nightTint, dayTint, (time - 0.75) / 0.25);
        } else if (time < 0.875) {
            dayNightTint = mix(nightTint, duskTint, (time - 0.75) / 0.125);
        } else {
            dayNightTint = mix(duskTint, dayTint, (time - 0.875) / 0.125);
        }

        color = vec4(blendHardLight(color.rgb, dayNightTint), color.a);
    }

    if (terrainColorRatio > 0.0 && (1.0 - terrainColorRatio) < outTexCoord.y) {
        if (color.a > 0.0 && (terrainColor.r > 0.0 || terrainColor.g > 0.0 || terrainColor.b > 0.0)) {
            color.rgb = mix(color.rgb, blendHue(color.rgb, terrainColor), 1.0);
        }
    }

    gl_FragColor = color;
}
`,lQ=`
precision mediump float;

uniform mat4 uProjectionMatrix;
uniform int uRoundPixels;
uniform vec2 uResolution;

attribute vec2 inPosition;
attribute vec2 inTexCoord;
attribute float inTexId;
attribute float inTintEffect;
attribute vec4 inTint;

varying vec2 outTexCoord;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

void main() {
    gl_Position = uProjectionMatrix * vec4(inPosition, 1.0, 1.0);
    if (uRoundPixels == 1)
    {
        gl_Position.xy = floor(((gl_Position.xy + 1.0) * 0.5 * uResolution) + 0.5) / uResolution * 2.0 - 1.0;
    }
    outTexCoord = inTexCoord;
    outTexId = inTexId;
    outPosition = inPosition;
    outTint = inTint;
    outTintEffect = inTintEffect;
}
`,dm=class dm extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline{constructor(A,s){super(s||{game:A,name:"field-sprite",fragShader:oQ,vertShader:lQ})}onPreRender(){this.set1f("time",0),this.set1i("ignoreTimeTint",0),this.set1f("terrainColorRatio",0),this.set3fv("terrainColor",[0,0,0])}onBind(A){var S,o;super.onBind();const s=A,R=s.scene,n=s.pipelineData,I=n.ignoreTimeTint,a=n.terrainColorRatio||0,r=(S=R.currentBattle)!=null&&S.waveIndex?(R.currentBattle.waveIndex+R.waveCycleOffset)%40/40:g8();this.set1f("time",r),this.set1i("ignoreTimeTint",I?1:0),this.set1i("isOutside",R.arena.isOutside()?1:0),this.set3fv("dayTint",R.arena.getDayTint().map(l=>l/255)),this.set3fv("duskTint",R.arena.getDuskTint().map(l=>l/255)),this.set3fv("nightTint",R.arena.getNightTint().map(l=>l/255)),this.set3fv("terrainColor",k7(((o=R.arena.terrain)==null?void 0:o.terrainType)||Nt.NONE).map(l=>l/255)),this.set1f("terrainColorRatio",a)}onBatch(A){A&&this.flush()}};L(dm,"FieldSpritePipeline");let FC=dm;const CQ=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D uMainSampler[%count%];

varying vec2 outTexCoord;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

uniform float time;
uniform int ignoreTimeTint;
uniform int isOutside;
uniform vec3 dayTint;
uniform vec3 duskTint;
uniform vec3 nightTint;
uniform float teraTime;
uniform vec3 teraColor;
uniform int hasShadow;
uniform int yCenter;
uniform float fieldScale;
uniform float vCutoff;
uniform vec2 relPosition;
uniform vec2 texFrameUv;
uniform vec2 size;
uniform vec2 texSize;
uniform float yOffset;
uniform float yShadowOffset;
uniform vec4 tone;
uniform ivec4 baseVariantColors[32];
uniform vec4 variantColors[32];
uniform ivec4 spriteColors[32];
uniform ivec4 fusionSpriteColors[32];

const vec3 lumaF = vec3(.299, .587, .114);

float blendOverlay(float base, float blend) {
	return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));
}

vec3 blendOverlay(vec3 base, vec3 blend) {
	return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));
}

vec3 blendHardLight(vec3 base, vec3 blend) {
	return blendOverlay(blend, base);
}

float hue2rgb(float f1, float f2, float hue) {
	if (hue < 0.0)
		hue += 1.0;
	else if (hue > 1.0)
		hue -= 1.0;
	float res;
	if ((6.0 * hue) < 1.0)
		res = f1 + (f2 - f1) * 6.0 * hue;
	else if ((2.0 * hue) < 1.0)
		res = f2;
	else if ((3.0 * hue) < 2.0)
		res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;
	else
		res = f1;
	return res;
}

vec3 rgb2hsl(vec3 color) {
	vec3 hsl;
	
	float fmin = min(min(color.r, color.g), color.b);
	float fmax = max(max(color.r, color.g), color.b);
	float delta = fmax - fmin;

	hsl.z = (fmax + fmin) / 2.0;

	if (delta == 0.0) {
		hsl.x = 0.0;
		hsl.y = 0.0;
	} else {
		if (hsl.z < 0.5)
			hsl.y = delta / (fmax + fmin);
		else
			hsl.y = delta / (2.0 - fmax - fmin);
		
		float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;
		float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;
		float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;

		if (color.r == fmax )
			hsl.x = deltaB - deltaG;
		else if (color.g == fmax)
			hsl.x = (1.0 / 3.0) + deltaR - deltaB;
		else if (color.b == fmax)
			hsl.x = (2.0 / 3.0) + deltaG - deltaR;

		if (hsl.x < 0.0)
			hsl.x += 1.0;
		else if (hsl.x > 1.0)
			hsl.x -= 1.0;
	}

	return hsl;
}

vec3 hsl2rgb(vec3 hsl) {
	vec3 rgb;
	
	if (hsl.y == 0.0)
		rgb = vec3(hsl.z);
	else {
		float f2;
		
		if (hsl.z < 0.5)
			f2 = hsl.z * (1.0 + hsl.y);
		else
			f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);
			
		float f1 = 2.0 * hsl.z - f2;
		
		rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));
		rgb.g = hue2rgb(f1, f2, hsl.x);
		rgb.b= hue2rgb(f1, f2, hsl.x - (1.0/3.0));
	}
	
	return rgb;
}

vec3 blendHue(vec3 base, vec3 blend) {
	vec3 baseHSL = rgb2hsl(base);
	return hsl2rgb(vec3(rgb2hsl(blend).r, baseHSL.g, baseHSL.b));
}

vec3 rgb2hsv(vec3 c) {
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main() {
    vec4 texture = texture2D(uMainSampler[0], outTexCoord);

    ivec4 colorInt = ivec4(int(texture.r * 255.0), int(texture.g * 255.0), int(texture.b * 255.0), int(texture.a * 255.0));

    for (int i = 0; i < 32; i++) {
        if (baseVariantColors[i][3] == 0)
            break;
        if (texture.a > 0.0 && colorInt.r == baseVariantColors[i].r && colorInt.g == baseVariantColors[i].g && colorInt.b == baseVariantColors[i].b) {
            texture.rgb = variantColors[i].rgb;
            break;
        }
    }

    for (int i = 0; i < 32; i++) {
        if (spriteColors[i][3] == 0)
            break;
        if (texture.a > 0.0 && colorInt.r == spriteColors[i].r && colorInt.g == spriteColors[i].g && colorInt.b == spriteColors[i].b) {
            vec3 fusionColor = vec3(float(fusionSpriteColors[i].r) / 255.0, float(fusionSpriteColors[i].g) / 255.0, float(fusionSpriteColors[i].b) / 255.0);
            vec3 bg = vec3(float(spriteColors[i].r) / 255.0, float(spriteColors[i].g) / 255.0, float(spriteColors[i].b) / 255.0);
            float gray = (bg.r + bg.g + bg.b) / 3.0;
            bg = vec3(gray, gray, gray);
            vec3 fg = fusionColor;
            texture.rgb = mix(1.0 - 2.0 * (1.0 - bg) * (1.0 - fg), 2.0 * bg * fg, step(bg, vec3(0.5)));
            break;
        }
    }

    vec4 texel = vec4(outTint.bgr * outTint.a, outTint.a);

    //  Multiply texture tint
    vec4 color = texture * texel;

    if (color.a > 0.0 && teraColor.r > 0.0 && teraColor.g > 0.0 && teraColor.b > 0.0) {
        vec2 relUv = vec2((outTexCoord.x - texFrameUv.x) / (size.x / texSize.x), (outTexCoord.y - texFrameUv.y) / (size.y / texSize.y));
        vec2 teraTexCoord = vec2(relUv.x * (size.x / 200.0), relUv.y * (size.y / 120.0));
        vec4 teraCol = texture2D(uMainSampler[1], teraTexCoord);
        float floorValue = 86.0 / 255.0;
        vec3 teraPatternHsv = rgb2hsv(teraCol.rgb);
        teraCol.rgb = hsv2rgb(vec3((teraPatternHsv.b - floorValue) * 4.0 + teraTexCoord.x * fieldScale / 2.0 + teraTexCoord.y * fieldScale / 2.0 + teraTime * 255.0, teraPatternHsv.b, teraPatternHsv.b));

        color.rgb = mix(color.rgb, blendHue(color.rgb, teraColor), 0.625);
        teraCol.rgb = mix(teraCol.rgb, teraColor, 0.5);
        color.rgb = blendOverlay(color.rgb, teraCol.rgb);

        if (teraColor.r < 1.0 || teraColor.g < 1.0 || teraColor.b < 1.0) {
            vec3 teraColHsv = rgb2hsv(teraColor);
            color.rgb = mix(color.rgb, teraColor, (1.0 - teraColHsv.g) / 2.0);
        }
    }

    if (outTintEffect == 1.0) {
        //  Solid color + texture alpha
        color.rgb = mix(texture.rgb, outTint.bgr * outTint.a, texture.a);
    } else if (outTintEffect == 2.0) {
        //  Solid color, no texture
        color = texel;
    }

    /* Apply gray */
    float luma = dot(color.rgb, lumaF);
    color.rgb = mix(color.rgb, vec3(luma), tone.w);

    /* Apply tone */
    color.rgb += tone.rgb * (color.a / 255.0);

    /* Apply day/night tint */
    if (color.a > 0.0 && ignoreTimeTint == 0) {
        vec3 dayNightTint;

        if (time < 0.25) {
            dayNightTint = dayTint;
        } else if (isOutside == 0 && time < 0.5) {
            dayNightTint = mix(dayTint, nightTint, (time - 0.25) / 0.25);
        } else if (time < 0.375) {
            dayNightTint = mix(dayTint, duskTint, (time - 0.25) / 0.125);
        } else if (time < 0.5) {
            dayNightTint = mix(duskTint, nightTint, (time - 0.375) / 0.125);
        } else if (time < 0.75) {
            dayNightTint = nightTint;
        } else if (isOutside == 0) {
            dayNightTint = mix(nightTint, dayTint, (time - 0.75) / 0.25);
        } else if (time < 0.875) {
            dayNightTint = mix(nightTint, duskTint, (time - 0.75) / 0.125);
        } else {
            dayNightTint = mix(duskTint, dayTint, (time - 0.875) / 0.125);
        }

        color.rgb = blendHardLight(color.rgb, dayNightTint);
    }

    if (hasShadow == 1) {
        float width = size.x - (yOffset / 2.0);

        float spriteX = ((floor(outPosition.x / fieldScale) - relPosition.x) / width) + 0.5;
        float spriteY = ((floor(outPosition.y / fieldScale) - relPosition.y - yShadowOffset) / size.y);

        if (yCenter == 1) {
            spriteY += 0.5;
        } else {
            spriteY += 1.0;
        }

        bool yOverflow = outTexCoord.y >= vCutoff;

        if ((spriteY >= 0.9 && (color.a == 0.0 || yOverflow))) {
            float shadowSpriteY = (spriteY - 0.9) * (1.0 / 0.15);
            if (distance(vec2(spriteX, shadowSpriteY), vec2(0.5, 0.5)) < 0.5) {
                color = vec4(vec3(0.0, 0.0, 0.0), 0.5);
            } else if (yOverflow) {
                discard;
            }
        } else if (yOverflow) {
            discard;
        }
    }

    gl_FragColor = color;
}
`,UQ=`
precision mediump float;

uniform mat4 uProjectionMatrix;
uniform int uRoundPixels;
uniform vec2 uResolution;

attribute vec2 inPosition;
attribute vec2 inTexCoord;
attribute float inTexId;
attribute float inTintEffect;
attribute vec4 inTint;

varying vec2 outTexCoord;
varying vec2 outtexFrameUv;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

void main()
{
    gl_Position = uProjectionMatrix * vec4(inPosition, 1.0, 1.0);
    if (uRoundPixels == 1)
    {
        gl_Position.xy = floor(((gl_Position.xy + 1.0) * 0.5 * uResolution) + 0.5) / uResolution * 2.0 - 1.0;
    }
    outTexCoord = inTexCoord;
    outTexId = inTexId;
    outPosition = inPosition;
    outTint = inTint;
    outTintEffect = inTintEffect;
}
`,fm=class fm extends FC{constructor(A){super(A,{game:A,name:"sprite",fragShader:CQ,vertShader:UQ}),this._tone=[0,0,0,0]}onPreRender(){super.onPreRender(),this.set1f("teraTime",0),this.set3fv("teraColor",[0,0,0]),this.set1i("hasShadow",0),this.set1i("yCenter",0),this.set2f("relPosition",0,0),this.set2f("texFrameUv",0,0),this.set2f("size",0,0),this.set2f("texSize",0,0),this.set1f("yOffset",0),this.set1f("yShadowOffset",0),this.set4fv("tone",this._tone)}onBind(A){super.onBind(A);const s=A,R=s.pipelineData,n=R.tone,I=R.teraColor??[0,0,0],a=R.hasShadow,r=R.yShadowOffset,S=R.ignoreFieldPos,o=R.ignoreOverride,l=s.parentContainer instanceof QR||s.parentContainer instanceof Ds||s.parentContainer instanceof $T,C=l?s.parentContainer.parentContainer:s.parentContainer,M=l?[s.parentContainer.x,s.parentContainer.y]:[s.x,s.y];if(C&&(M[0]+=C.x/C.scale,M[1]+=C.y/C.scale),M[0]+=-(s.width-s.frame.width)/2+s.frame.x+(S?0:s.x-C.x),s.originY===.5&&(M[1]+=s.height/2*((l?s.parentContainer:s).scale-1)+(S?0:s.y-C.y)),this.set1f("teraTime",this.game.getTime()%5e5/5e5),this.set3fv("teraColor",I.map(u=>u/255)),this.set1i("hasShadow",a?1:0),this.set1i("yCenter",s.originY===.5?1:0),this.set1f("fieldScale",(C==null?void 0:C.scale)||1),this.set2f("relPosition",M[0],M[1]),this.set2f("texFrameUv",s.frame.u0,s.frame.v0),this.set2f("size",s.frame.width,s.height),this.set2f("texSize",s.texture.source[0].width,s.texture.source[0].height),this.set1f("yOffset",s.height-s.frame.height*(l?s.parentContainer.scale:s.scale)),this.set1f("yShadowOffset",r??0),this.set4fv("tone",n),this.bindTexture(this.game.textures.get("tera").source[0].glTexture,1),A.scene.fusionPaletteSwaps){const u=o&&R.spriteColorsBase||R.spriteColors||[],h=o&&R.fusionSpriteColorsBase||R.fusionSpriteColors||[],P=[0,0,0,0],G=[],d=[];for(let H=0;H<32;H++)G.splice(G.length,0,...H<u.length?u[H]:P),d.splice(d.length,0,...H<h.length?h[H]:P);this.set4iv("spriteColors",G.flat()),this.set4iv("fusionSpriteColors",d.flat())}}onBatch(A){if(A){const s=A,R=s.pipelineData,n=R.hasOwnProperty("variant")?R.variant:s.parentContainer instanceof QR?s.parentContainer.variant:0;let I;const a=[0,0,0,0],r=[],S=[];if((s.parentContainer instanceof QR?s.parentContainer.shiny:R.shiny)&&(I=CI[s.parentContainer instanceof QR?s.parentContainer.getSprite().texture.key:R.spriteKey])&&I.hasOwnProperty(n)){const o=Object.keys(I[n]);for(let l=0;l<32;l++)if(l<o.length){const C=Array.from(Object.values(hs(o[l]))),M=Array.from(Object.values(hs(I[n][o[l]])));r.splice(r.length,0,...C),S.splice(S.length,0,...M.map(u=>u/255))}else r.splice(r.length,0,...a),S.splice(S.length,0,...a)}else for(let o=0;o<32;o++)r.splice(r.length,0,...a),S.splice(S.length,0,...a);this.set4iv("baseVariantColors",r.flat()),this.set4fv("variantColors",S.flat())}super.onBatch(A)}batchQuad(A,s,R,n,I,a,r,S,o,l,C,M,u,h,P,G,d,H,f,K){const W=A;this.set1f("vCutoff",u);const V=W.pipelineData.hasShadow,k=W.pipelineData.yShadowOffset??0;if(V){const Q=W.parentContainer instanceof QR||W.parentContainer instanceof Ds||W.parentContainer instanceof $T,j=Q?W.parentContainer.parentContainer:W.parentContainer,J=j.scale/6,ne=(Q?W.parentContainer.y:W.y+W.height)*6/J,x=Math.ceil(W.height*.05+Math.max(k,0))*6/J,q=(ne-I)/j.scale;r=I=ne+x;const F=(u-C)/(W.frame.height*(Q?W.parentContainer.scale:W.scale));u+=(q+x/j.scale)*F}return super.batchQuad(A,s,R,n,I,a,r,S,o,l,C,M,u,h,P,G,d,H,f,K)}get tone(){return this._tone}set tone(A){this._tone=A}};L(fm,"SpritePipeline");let R_=fm;const Bm=class Bm extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6,-(A.game.canvas.height/6)+15)}setup(){this.bg=this.scene.add.nineslice(0,0,"party_exp_bar",void 0,8,18,21,5,6,4),this.bg.setOrigin(0,0),this.add(this.bg),this.expText=le(this.scene,22,4,"",X.BATTLE_INFO),this.expText.setOrigin(0,0),this.add(this.expText),this.setVisible(!1),this.shown=!1}showPokemonExp(A,s,R,n){return new Promise(I=>{if(this.shown)return I();this.pokemonIcon=this.scene.addPokemonIcon(A,-8,15,0,.5),this.pokemonIcon.setScale(.5),this.add(this.pokemonIcon),R?n>200?this.expText.setText("Lv. UP"):this.expText.setText(`Lv. UP: ${n.toString()}`):this.expText.setText(`+${s.toString()}`),this.bg.width=this.expText.displayWidth+28,this.scene.fieldUI.bringToTop(this),this.tween&&this.tween.stop(),this.tween=this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6-(this.bg.width-5),duration:500/Math.pow(2,A.scene.expGainsSpeed),ease:"Sine.easeOut",onComplete:L(()=>{this.tween=null,I()},"onComplete")}),this.setVisible(!0),this.shown=!0})}hide(){return new Promise(A=>{if(!this.shown)return A();this.tween&&this.tween.stop(),this.tween=this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:L(()=>{var s;this.tween=null,this.shown=!1,this.setVisible(!1),(s=this.pokemonIcon)==null||s.destroy(),A()},"onComplete")})})}};L(Bm,"PartyExpBar");let O_=Bm;const gm=class gm extends Phaser.GameObjects.Container{constructor(A,s){super(A,s?A.game.canvas.width/6:0,s?-72:-144),this.player=s}setup(){this.bg=this.scene.add.nineslice(0,0,`pb_tray_overlay_${this.player?"player":"enemy"}`,void 0,104,4,48,8,0,0),this.bg.setOrigin(this.player?1:0,0),this.add(this.bg),this.balls=new Array(6).fill(null).map((A,s)=>this.scene.add.sprite((this.player?-83:76)+this.scene.game.canvas.width/6*(this.player?-1:1)+10*s*(this.player?1:-1),-8,"pb_tray_ball","empty"));for(const A of this.balls)A.setOrigin(0,0),this.add(A);this.setVisible(!1),this.shown=!1}showPbTray(A){return new Promise(s=>{if(this.shown)return s();this.scene.fieldUI.bringToTop(this),this.x+=104*(this.player?1:-1),this.bg.width=104,this.bg.alpha=1,this.balls.forEach((R,n)=>{R.x+=(this.scene.game.canvas.width/6+104)*(this.player?1:-1);let I="ball";n>=A.length?I="empty":A[n].hp?A[n].status&&(I="status"):I="faint",R.setFrame(I)}),this.scene.playSound("se/pb_tray_enter"),this.scene.tweens.add({targets:this,x:`${this.player?"-":"+"}=104`,duration:500,ease:"Sine.easeIn",onComplete:L(()=>{this.balls.forEach((R,n)=>{this.scene.tweens.add({targets:R,x:`${this.player?"-":"+"}=104`,duration:n*100,ease:"Sine.easeIn",onComplete:L(()=>this.scene.playSound(`se/${n<A.length?"pb_tray_ball":"pb_tray_empty"}`),"onComplete")})})},"onComplete")}),this.setVisible(!0),this.shown=!0,this.scene.time.delayedCall(1100,()=>s())})}hide(){return new Promise(A=>{if(!this.shown)return A();this.balls.forEach((s,R)=>{this.scene.tweens.add({targets:s,x:`${this.player?"-":"+"}=${this.scene.game.canvas.width/6}`,duration:250,delay:R*100,ease:"Sine.easeIn"})}),this.scene.tweens.add({targets:this.bg,width:144,alpha:0,duration:500,ease:"Sine.easeIn"}),this.scene.time.delayedCall(850,()=>{this.setVisible(!1),A()}),this.shown=!1})}};L(gm,"PokeballTray");let pC=gm;const Km=class Km extends iE{constructor(A){super(A)}start(){super.start(),this.scene.ui.setModeForceTransition(Oe.MESSAGE).then(()=>this.end())}};L(Km,"EndEvolutionPhase");let nS=Km;const mm=class mm extends iE{constructor(A,s,R,n){super(A),this.pokemon=s,this.evolution=R,this.lastLevel=n,this.fusionSpeciesEvolved=R instanceof pn}validate(){return!!this.evolution}setMode(){return this.scene.ui.setModeForceTransition(Oe.EVOLUTION_SCENE)}start(){super.start(),this.setMode().then(()=>{if(!this.validate())return this.end();this.scene.fadeOutBgm(void 0,!1),this.evolutionHandler=this.scene.ui.getHandler(),this.evolutionContainer=this.evolutionHandler.evolutionContainer,this.evolutionBaseBg=this.scene.add.image(0,0,"default_bg"),this.evolutionBaseBg.setOrigin(0,0),this.evolutionContainer.add(this.evolutionBaseBg),this.evolutionBg=this.scene.add.video(0,0,"evo_bg").stop(),this.evolutionBg.setOrigin(0,0),this.evolutionBg.setScale(.4359673025),this.evolutionBg.setVisible(!1),this.evolutionContainer.add(this.evolutionBg),this.evolutionBgOverlay=this.scene.add.rectangle(0,0,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6,2500134),this.evolutionBgOverlay.setOrigin(0,0),this.evolutionBgOverlay.setAlpha(0),this.evolutionContainer.add(this.evolutionBgOverlay);const A=L(()=>{const s=this.scene.addPokemonSprite(this.pokemon,this.evolutionBaseBg.displayWidth/2,this.evolutionBaseBg.displayHeight/2,"pkmn__sub");return s.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),s},"getPokemonSprite");this.evolutionContainer.add(this.pokemonSprite=A()),this.evolutionContainer.add(this.pokemonTintSprite=A()),this.evolutionContainer.add(this.pokemonEvoSprite=A()),this.evolutionContainer.add(this.pokemonEvoTintSprite=A()),this.pokemonTintSprite.setAlpha(0),this.pokemonTintSprite.setTintFill(16777215),this.pokemonEvoSprite.setVisible(!1),this.pokemonEvoTintSprite.setVisible(!1),this.pokemonEvoTintSprite.setTintFill(16777215),this.evolutionOverlay=this.scene.add.rectangle(0,-this.scene.game.canvas.height/6,this.scene.game.canvas.width/6,this.scene.game.canvas.height/6-48,16777215),this.evolutionOverlay.setOrigin(0,0),this.evolutionOverlay.setAlpha(0),this.scene.ui.add(this.evolutionOverlay),[this.pokemonSprite,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(s=>{const R=this.pokemon.getSpriteKey(!0);try{s.play(R)}catch(n){console.error(`Failed to play animation for ${R}`,n)}s.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:dR(this.pokemon.getTeraType())}),s.setPipelineData("ignoreTimeTint",!0),s.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),s.setPipelineData("shiny",this.pokemon.shiny),s.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(n=>{var I;(I=this.pokemon.summonData)!=null&&I.speciesForm&&(n+="Base"),s.pipelineData[n]=this.pokemon.getSprite().pipelineData[n]})}),this.preEvolvedPokemonName=ee(this.pokemon),this.doEvolution()})}doEvolution(){this.scene.ui.showText(D.t("menu:evolving",{pokemonName:this.preEvolvedPokemonName}),null,()=>{this.pokemon.cry(),this.pokemon.getPossibleEvolution(this.evolution).then(A=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(s=>{const R=A.getSpriteKey(!0);try{s.play(R)}catch(n){console.error(`Failed to play animation for ${R}`,n)}s.setPipelineData("ignoreTimeTint",!0),s.setPipelineData("spriteKey",A.getSpriteKey()),s.setPipelineData("shiny",A.shiny),s.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(n=>{var I;(I=A.summonData)!=null&&I.speciesForm&&(n+="Base"),s.pipelineData[n]=A.getSprite().pipelineData[n]})}),this.scene.time.delayedCall(1e3,()=>{this.evolutionBgm=this.scene.playSoundWithoutBgm("evolution"),this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:L(()=>{this.scene.time.delayedCall(1e3,()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),this.scene.playSound("se/charge"),this.doSpiralUpward(),this.scene.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:L(s=>{this.pokemonTintSprite.setAlpha(s.getValue())},"onUpdate"),onComplete:L(()=>{this.pokemonSprite.setVisible(!1),this.scene.time.delayedCall(1100,()=>{this.scene.playSound("se/beam"),this.doArcDownward(),this.scene.time.delayedCall(1500,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),this.evolutionHandler.canCancel=!0,this.doCycle(1).then(s=>{s?this.handleSuccessEvolution(A):this.handleFailedEvolution(A)})})})},"onComplete")})},"onComplete")})})})},1e3)}handleFailedEvolution(A){this.pokemonSprite.setVisible(!0),this.pokemonTintSprite.setScale(1),this.scene.tweens.add({targets:[this.evolutionBg,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite],alpha:0,duration:250,onComplete:L(()=>{this.evolutionBg.setVisible(!1)},"onComplete")}),$R.fadeOut(this.scene,this.evolutionBgm,100),this.scene.unshiftPhase(new nS(this.scene)),this.scene.ui.showText(D.t("menu:stoppedEvolving",{pokemonName:this.preEvolvedPokemonName}),null,()=>{this.scene.ui.showText(D.t("menu:pauseEvolutionsQuestion",{pokemonName:this.preEvolvedPokemonName}),null,()=>{const s=L(()=>{this.scene.ui.showText("",0),this.scene.playBgm(),A.destroy(),this.end()},"end");this.scene.ui.setOverlayMode(Oe.CONFIRM,()=>{this.scene.ui.revertMode(),this.pokemon.pauseEvolutions=!0,this.scene.ui.showText(D.t("menu:evolutionsPaused",{pokemonName:this.preEvolvedPokemonName}),null,s,3e3)},()=>{this.scene.ui.revertMode(),this.scene.time.delayedCall(3e3,s)})})},null,!0)}handleSuccessEvolution(A){this.scene.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward();const s=L(()=>{$R.fadeOut(this.scene,this.evolutionBgm,100),this.scene.time.delayedCall(250,()=>{this.pokemon.cry(),this.scene.time.delayedCall(1250,()=>{this.scene.playSoundWithoutBgm("evolution_fanfare"),A.destroy(),this.scene.ui.showText(D.t("menu:evolutionDone",{pokemonName:this.preEvolvedPokemonName,evolvedPokemonName:this.pokemon.name}),null,()=>this.end(),null,!0,Et(4e3)),this.scene.time.delayedCall(Et(4250),()=>this.scene.playBgm())})})},"onEvolutionComplete");this.scene.time.delayedCall(900,()=>{this.evolutionHandler.canCancel=!1,this.pokemon.evolve(this.evolution,this.pokemon.species).then(()=>{const R=this.fusionSpeciesEvolved?ol.EVOLUTION_FUSED:this.pokemon.fusionSpecies?ol.EVOLUTION_FUSED_BASE:ol.EVOLUTION,n=this.pokemon.getLevelMoves(this.lastLevel+1,!0,!1,!1,R).filter(I=>I[0]===Ae);for(const I of n)this.scene.unshiftPhase(new kn(this.scene,this.scene.getPlayerParty().indexOf(this.pokemon),I[1]));this.scene.unshiftPhase(new nS(this.scene)),this.scene.playSound("se/shine"),this.doSpray(),this.scene.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:L(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),this.scene.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:L(()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:s})},"onComplete")})},"onComplete")})})})}doSpiralUpward(){let A=0;this.scene.tweens.addCounter({repeat:64,duration:NE(1),onRepeat:L(()=>{if(A<64){if(!(A&7))for(let s=0;s<4;s++)this.doSpiralUpwardParticle((A&120)*2+s*64);A++}},"onRepeat")})}doArcDownward(){let A=0;this.scene.tweens.addCounter({repeat:96,duration:NE(1),onRepeat:L(()=>{if(A<96){if(A<6)for(let s=0;s<9;s++)this.doArcDownParticle(s*16);A++}},"onRepeat")})}doCycle(A,s=15){return new Promise(R=>{const n=A===s;this.scene.tweens.add({targets:this.pokemonTintSprite,scale:.25,ease:"Cubic.easeInOut",duration:500/A,yoyo:!n}),this.scene.tweens.add({targets:this.pokemonEvoTintSprite,scale:1,ease:"Cubic.easeInOut",duration:500/A,yoyo:!n,onComplete:L(()=>{if(this.evolutionHandler.cancelled)return R(!1);A<s?this.doCycle(A+.5,s).then(I=>R(I)):(this.pokemonTintSprite.setVisible(!1),R(!0))},"onComplete")})})}doCircleInward(){let A=0;this.scene.tweens.addCounter({repeat:48,duration:NE(1),onRepeat:L(()=>{if(A){if(A===32)for(let s=0;s<16;s++)this.doCircleInwardParticle(s*16,8)}else for(let s=0;s<16;s++)this.doCircleInwardParticle(s*16,4);A++},"onRepeat")})}doSpray(){let A=0;this.scene.tweens.addCounter({repeat:48,duration:NE(1),onRepeat:L(()=>{if(A)A<50&&this.doSprayParticle(hA(8));else for(let s=0;s<8;s++)this.doSprayParticle(s);A++},"onRepeat")})}doSpiralUpwardParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=this.scene.add.image(s,0,"evo_sparkle");this.evolutionContainer.add(R);let n=0,I=48;const a=this.scene.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{r()},"onRepeat")}),r=L(()=>{!n||R.y>8?(R.setPosition(s,88-n*n/80),R.y+=In(A,I)/4,R.x+=WI(A,I),R.setScale(1-n/80),A+=4,n&1&&I--,n++):(R.destroy(),a.remove())},"updateParticle");r()}doArcDownParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=this.scene.add.image(s,0,"evo_sparkle");R.setScale(.5),this.evolutionContainer.add(R);let n=0,I=8;const a=this.scene.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{r()},"onRepeat")}),r=L(()=>{!n||R.y<88?(R.setPosition(s,8+n*n/5),R.y+=In(A,I)/4,R.x+=WI(A,I),I=8+In(n*4,40),n++):(R.destroy(),a.remove())},"updateParticle");r()}doCircleInwardParticle(A,s){const R=this.evolutionBaseBg.displayWidth/2,n=this.evolutionBaseBg.displayHeight/2,I=this.scene.add.image(R,n,"evo_sparkle");this.evolutionContainer.add(I);let a=120;const r=this.scene.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{S()},"onRepeat")}),S=L(()=>{a>8?(I.setPosition(R,n),I.y+=In(A,a),I.x+=WI(A,a),a-=s,A+=4):(I.destroy(),r.remove())},"updateParticle");S()}doSprayParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=this.evolutionBaseBg.displayHeight/2,n=this.scene.add.image(s,R,"evo_sparkle");this.evolutionContainer.add(n);let I=0,a=0;const r=3-hA(8),S=48+hA(64),o=this.scene.tweens.addCounter({repeat:-1,duration:NE(1),onRepeat:L(()=>{l()},"onRepeat")}),l=L(()=>{I&3||a++,A<128?(n.setPosition(s+r*I/3,R+a),n.y+=-In(A,S),I>108&&n.setScale(1-(I-108)/20),A++,I++):(n.destroy(),o.remove())},"updateParticle");l()}};L(mm,"EvolutionPhase");let iS=mm;const Fm=class Fm extends iS{constructor(A,s,R,n){super(A,s,null,0),this.formChange=R,this.modal=n}validate(){return!!this.formChange}setMode(){return this.modal?this.scene.ui.setOverlayMode(Oe.EVOLUTION_SCENE):super.setMode()}doEvolution(){const A=ee(this.pokemon);this.pokemon.getPossibleForm(this.formChange).then(s=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(R=>{const n=s.getSpriteKey(!0);try{R.play(n)}catch(I){console.error(`Failed to play animation for ${n}`,I)}R.setPipelineData("ignoreTimeTint",!0),R.setPipelineData("spriteKey",s.getSpriteKey()),R.setPipelineData("shiny",s.shiny),R.setPipelineData("variant",s.variant),["spriteColors","fusionSpriteColors"].map(I=>{var a;(a=s.summonData)!=null&&a.speciesForm&&(I+="Base"),R.pipelineData[I]=s.getSprite().pipelineData[I]})}),this.scene.time.delayedCall(250,()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:L(()=>{this.scene.time.delayedCall(1e3,()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),this.scene.playSound("se/charge"),this.doSpiralUpward(),this.scene.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:L(R=>{this.pokemonTintSprite.setAlpha(R.getValue())},"onUpdate"),onComplete:L(()=>{this.pokemonSprite.setVisible(!1),this.scene.time.delayedCall(1100,()=>{this.scene.playSound("se/beam"),this.doArcDownward(),this.scene.time.delayedCall(1e3,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),this.doCycle(1,1).then(R=>{this.scene.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward(),this.scene.time.delayedCall(900,()=>{this.pokemon.changeForm(this.formChange).then(()=>{this.modal||this.scene.unshiftPhase(new nS(this.scene)),this.scene.playSound("se/shine"),this.doSpray(),this.scene.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:L(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),this.scene.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:L(()=>{this.scene.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:L(()=>{this.scene.time.delayedCall(250,()=>{this.pokemon.cry(),this.scene.time.delayedCall(1250,()=>{let n=!1;this.formChange.formKey.indexOf(oe.MEGA)>-1?(this.scene.validateAchv(lt.MEGA_EVOLVE),n=!0):(this.formChange.formKey.indexOf(oe.GIGANTAMAX)>-1||this.formChange.formKey.indexOf(oe.ETERNAMAX)>-1)&&(this.scene.validateAchv(lt.GIGANTAMAX),n=!0);const I=n?4e3:1750;this.scene.playSoundWithoutBgm(n?"evolution_fanfare":"minor_fanfare"),s.destroy(),this.scene.ui.showText(rc(this.pokemon,this.formChange,A),null,()=>this.end(),null,!0,Et(I)),this.scene.time.delayedCall(Et(I+250),()=>this.scene.playBgm())})})},"onComplete")})},"onComplete")})},"onComplete")})})})})})})},"onComplete")})},"onComplete")})})})}end(){this.pokemon.findAndRemoveTags(A=>A.tagType===Y.AUTOTOMIZED),this.modal?this.scene.ui.revertMode().then(()=>{if(this.scene.ui.getMode()===Oe.PARTY){const A=this.scene.ui.getHandler();A.clearPartySlots(),A.populatePartySlots()}super.end()}):super.end()}};L(Fm,"FormChangePhase");let n_=Fm;const pm=class pm{setup(A){this.sprites=new Set,A.tweens.addCounter({duration:Et(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:L(()=>this.onLapse(),"onRepeat")})}onLapse(){Array.from(this.sprites.values()).filter(A=>!A.scene).map(A=>this.sprites.delete(A));for(const A of this.sprites.values()){if(!A.pipelineData.teraColor||!A.pipelineData.teraColor.find(M=>M)||!A.visible||A.parentContainer instanceof QR&&!A.parentContainer.parentContainer)continue;const s=A.parentContainer instanceof QR?A.parentContainer:null,R=(s||A).parentContainer,n=A.texture,[I,a]=[n.source[0].width,n.source[0].height],[r,S]=[hA(I),hA(a)],o=A.width/I,l=A.height/a,C=n.manager.getPixel(r,S,n.key,"__BASE");if(C!=null&&C.alpha){const[M,u]=[-A.originX*A.width,-A.originY*A.height],h=A.scene.addFieldSprite(((s==null?void 0:s.x)||0)+A.x+r*o+M,((s==null?void 0:s.y)||0)+A.y+S*l+u,"tera_sparkle");h.pipelineData.ignoreTimeTint=A.pipelineData.ignoreTimeTint,h.setName("sprite-tera-sparkle"),h.play("tera_sparkle"),R.add(h),A.scene.time.delayedCall(Et(Math.floor(1e3/12*13)),()=>h.destroy())}}}add(A){Array.isArray(A)||(A=[A]);for(const s of A)this.sprites.has(s)||this.sprites.add(s)}remove(A){Array.isArray(A)||(A=[A]);for(const s of A)this.sprites.delete(s)}removeAll(){for(const A of this.sprites.values())this.sprites.delete(A)}};L(pm,"PokemonSpriteSparkleHandler");let i_=pm;const Wm=class Wm extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6+32,-42)}setup(){[this.sprite,this.transitionSprite]=new Array(2).fill(null).map(()=>{const A=this.scene.add.sprite(0,0,"","");return A.setOrigin(.5,1),this.add(A),A}),this.transitionSprite.setVisible(!1),this.setVisible(!1),this.shown=!1}showCharacter(A,s){return new Promise(R=>{if(A.startsWith("c_")||(A=`c_${A}`),this.shown){if(A===this.key&&s===this.variant)return R();if(A!==this.key)return this.hide().then(()=>this.showCharacter(A,s));this.setVariant(s).then(()=>R());return}this.sprite.setTexture(A,s),this.scene.fieldUI.bringToTop(this),this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6-102,duration:750,ease:"Cubic.easeOut",onComplete:L(()=>{R()},"onComplete")}),this.setVisible(this.scene.textures.get(A).key!==K8),this.shown=!0,this.key=A,this.variant=s})}setVariant(A){return new Promise(s=>{this.scene.fieldUI.bringToTop(this),this.transitionSprite.setTexture(this.key,A),this.transitionSprite.setAlpha(0),this.transitionSprite.setVisible(!0),this.scene.tweens.add({targets:this.transitionSprite,alpha:1,duration:250,ease:"Sine.easeIn",onComplete:L(()=>{this.sprite.setTexture(this.key,A),this.transitionSprite.setVisible(!1),s()},"onComplete")}),this.variant=A})}hide(){return new Promise(A=>{if(!this.shown)return A();this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6+32,duration:750,ease:"Cubic.easeIn",onComplete:L(()=>{this.shown||this.setVisible(!1),A()},"onComplete")}),this.shown=!1})}};L(Wm,"CharSprite");let I_=Wm;const Ym=class Ym{constructor(){this.damageNumbers=new Map}add(A,s,R=wt.EFFECTIVE,n=!1){const I=A.scene;if(!(I!=null&&I.damageNumbersMode))return;const a=A.getBattlerIndex(),r=A.getSpriteScale()/6,S=le(I,A.x,-(I.game.canvas.height/6)+A.y-A.getSprite().height/2,Il(s,!0),X.SUMMARY);S.setName("text-damage-number"),S.setOrigin(.5,1),S.setScale(r);let[o,l]=[null,null];switch(R){case wt.SUPER_EFFECTIVE:[o,l]=["#f8d030","#b8a038"];break;case wt.NOT_VERY_EFFECTIVE:[o,l]=["#f08030","#c03028"];break;case wt.ONE_HIT_KO:[o,l]=["#a040a0","#483850"];break;case wt.HEAL:[o,l]=["#78c850","#588040"];break;default:[o,l]=["#ffffff","#636363"];break}o&&S.setColor(o),l&&(n?(S.setShadowOffset(0,0),S.setStroke(l,12)):S.setShadowColor(l)),I.fieldUI.add(S),this.damageNumbers.has(a)||this.damageNumbers.set(a,[]);const C=this.damageNumbers.get(a).length*-10;if(C&&(S.y+=C),this.damageNumbers.get(a).push(S),I.damageNumbersMode===1){I.tweens.add({targets:S,duration:Et(750),alpha:1,y:"-=32"}),I.tweens.add({delay:375,targets:S,duration:Et(625),alpha:0,ease:"Sine.easeIn",onComplete:L(()=>{this.damageNumbers.get(a).splice(this.damageNumbers.get(a).indexOf(S),1),S.destroy(!0)},"onComplete")});return}S.setAlpha(0),I.tweens.chain({targets:S,tweens:[{duration:Et(250),alpha:1,scaleX:.75*r,scaleY:1.25*r,y:"-=16",ease:"Cubic.easeOut"},{duration:Et(175),alpha:1,scaleX:.875*r,scaleY:1.125*r,y:"+=16",ease:"Cubic.easeIn"},{duration:Et(100),scaleX:1.25*r,scaleY:.75*r,ease:"Cubic.easeOut"},{duration:Et(175),scaleX:.875*r,scaleY:1.125*r,y:"-=8",ease:"Cubic.easeOut"},{duration:Et(50),scaleX:.925*r,scaleY:1.075*r,y:"+=8",ease:"Cubic.easeIn"},{duration:Et(100),scaleX:1.125*r,scaleY:.875*r,ease:"Cubic.easeOut"},{duration:Et(175),scaleX:.925*r,scaleY:1.075*r,y:"-=4",ease:"Cubic.easeOut"},{duration:Et(50),scaleX:.975*r,scaleY:1.025*r,y:"+=4",ease:"Cubic.easeIn"},{duration:Et(100),scaleX:1.075*r,scaleY:.925*r,ease:"Cubic.easeOut"},{duration:Et(25),scaleX:r,scaleY:r,ease:"Cubic.easeOut"},{delay:Et(500),alpha:0,onComplete:L(()=>{this.damageNumbers.get(a).splice(this.damageNumbers.get(a).indexOf(S),1),S.destroy(!0)},"onComplete")}]})}};L(Ym,"DamageNumberHandler");let a_=Ym;const ym=class ym extends Phaser.GameObjects.Container{constructor(A){super(A,A.game.canvas.width/6,-(A.game.canvas.height/6)+15)}setup(){this.bg=this.scene.add.nineslice(0,0,"party_exp_bar",void 0,8,18,21,5,6,4),this.bg.setOrigin(0,0),this.add(this.bg),this.candyIcon=this.scene.add.sprite(14,0,"items","candy"),this.candyIcon.setOrigin(.5,0),this.candyIcon.setScale(.5),this.add(this.candyIcon),this.candyOverlayIcon=this.scene.add.sprite(14,0,"items","candy_overlay"),this.candyOverlayIcon.setOrigin(.5,0),this.candyOverlayIcon.setScale(.5),this.add(this.candyOverlayIcon),this.countText=le(this.scene,22,4,"",X.BATTLE_INFO),this.countText.setOrigin(0,0),this.add(this.countText),this.setVisible(!1),this.shown=!1}showStarterSpeciesCandy(A,s){return new Promise(R=>{if(this.shown)return this.speciesId===A?R():this.hide().then(()=>this.showStarterSpeciesCandy(A,s)).then(()=>R());const n=RR[A];this.candyIcon.setTint(Xs(hs(n[0]))),this.candyOverlayIcon.setTint(Xs(hs(n[1]))),this.countText.setText(`${this.scene.gameData.starterData[A].candyCount+s} (+${s.toString()})`),this.bg.width=this.countText.displayWidth+28,this.scene.fieldUI.bringToTop(this),this.tween&&this.tween.stop(),this.scene.playSound("se/shing"),this.tween=this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6-(this.bg.width-5),duration:500,ease:"Sine.easeOut",onComplete:L(()=>{this.tween=null,this.resetAutoHideTimer(),R()},"onComplete")}),this.setVisible(!0),this.shown=!0})}hide(){return new Promise(A=>{if(!this.shown)return A();this.autoHideTimer&&clearInterval(this.autoHideTimer),this.tween&&this.tween.stop(),this.tween=this.scene.tweens.add({targets:this,x:this.scene.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:L(()=>{this.tween=null,this.shown=!1,this.setVisible(!1),A()},"onComplete")})})}resetAutoHideTimer(){this.autoHideTimer&&clearInterval(this.autoHideTimer),this.autoHideTimer=setTimeout(()=>{this.hide(),this.autoHideTimer=null},2500)}};L(ym,"CandyBar");let r_=ym;const uQ={padID:"Generic",padType:"xbox",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[fe.Button_Up]:b.UP,[fe.Button_Down]:b.DOWN,[fe.Button_Left]:b.LEFT,[fe.Button_Right]:b.RIGHT,[fe.Button_Action]:b.ACTION,[fe.Button_Cancel]:b.CANCEL,[fe.Button_Cycle_Nature]:b.CYCLE_NATURE,[fe.Button_Cycle_Variant]:b.V,[fe.Button_Menu]:b.MENU,[fe.Button_Stats]:b.STATS,[fe.Button_Cycle_Form]:b.CYCLE_FORM,[fe.Button_Cycle_Shiny]:b.CYCLE_SHINY,[fe.Button_Cycle_Gender]:b.CYCLE_GENDER,[fe.Button_Cycle_Ability]:b.CYCLE_ABILITY,[fe.Button_Speed_Up]:b.SPEED_UP,[fe.Button_Slow_Down]:b.SLOW_DOWN},default:{LC_N:fe.Button_Up,LC_S:fe.Button_Down,LC_W:fe.Button_Left,LC_E:fe.Button_Right,RC_S:fe.Button_Action,RC_E:fe.Button_Cancel,RC_W:fe.Button_Cycle_Nature,RC_N:fe.Button_Cycle_Variant,START:fe.Button_Menu,SELECT:fe.Button_Stats,LB:fe.Button_Cycle_Form,RB:fe.Button_Cycle_Shiny,LT:fe.Button_Cycle_Gender,RT:fe.Button_Cycle_Ability,LS:fe.Button_Speed_Up,RS:fe.Button_Slow_Down},blacklist:["LC_N","LC_S","LC_W","LC_E"]},DQ={padID:"Pro Controller",padType:"xbox",deviceMapping:{RC_S:1,RC_E:0,RC_W:3,RC_N:2,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15,MENU:16},icons:{RC_S:"XB_Letter_B_OL.png",RC_E:"XB_Letter_A_OL.png",RC_W:"XB_Letter_Y_OL.png",RC_N:"XB_Letter_X_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[fe.Button_Up]:b.UP,[fe.Button_Down]:b.DOWN,[fe.Button_Left]:b.LEFT,[fe.Button_Right]:b.RIGHT,[fe.Button_Action]:b.ACTION,[fe.Button_Cancel]:b.CANCEL,[fe.Button_Cycle_Nature]:b.CYCLE_NATURE,[fe.Button_Cycle_Variant]:b.V,[fe.Button_Menu]:b.MENU,[fe.Button_Stats]:b.STATS,[fe.Button_Cycle_Form]:b.CYCLE_FORM,[fe.Button_Cycle_Shiny]:b.CYCLE_SHINY,[fe.Button_Cycle_Gender]:b.CYCLE_GENDER,[fe.Button_Cycle_Ability]:b.CYCLE_ABILITY,[fe.Button_Speed_Up]:b.SPEED_UP,[fe.Button_Slow_Down]:b.SLOW_DOWN},default:{LC_N:fe.Button_Up,LC_S:fe.Button_Down,LC_W:fe.Button_Left,LC_E:fe.Button_Right,RC_S:fe.Button_Action,RC_E:fe.Button_Cancel,RC_W:fe.Button_Cycle_Nature,RC_N:fe.Button_Cycle_Variant,START:fe.Button_Menu,SELECT:fe.Button_Stats,LB:fe.Button_Cycle_Form,RB:fe.Button_Cycle_Shiny,LT:fe.Button_Cycle_Gender,RT:fe.Button_Cycle_Ability,LS:fe.Button_Speed_Up,RS:fe.Button_Slow_Down}},MQ="touchControlPositionsLandscape",hQ="touchControlPositionsPortrait",wm=class wm{constructor(A){this.draggingElement=null,this.configurationEventListeners={touchstart:[],touchmove:[],touchend:[]},this.isLandscapeMode=this.getScreenSize().width>this.getScreenSize().height,this.isLeft=s=>{var R;return(R=document.querySelector("#touchControls .left"))==null?void 0:R.contains(s)},this.startDrag=s=>{this.draggingElement=s},this.drag=s=>{if(!this.draggingElement)return;const R=this.draggingElement.getBoundingClientRect(),n=this.isLeft(this.draggingElement)?s.clientX-R.width/2:window.innerWidth-s.clientX-R.width/2,I=window.innerHeight-s.clientY-R.height/2;this.setPosition(this.draggingElement,n,I)},this.stopDrag=()=>{this.draggingElement=null},this.touchControls=A,this.inConfigurationMode=!1,this.setPositions(this.getSavedPositionsOfCurrentOrientation()??[]),window.addEventListener("resize",s=>{const R=this.getScreenSize();R.width>R.height!==this.isLandscapeMode&&this.changeOrientation(R.width>R.height)})}async changeOrientation(A){if(this.isLandscapeMode=A,this.inConfigurationMode){const R=document.querySelector("#touchControls #orientation");R&&(R.textContent=this.isLandscapeMode?"Landscape":"Portrait")}const s=this.getSavedPositionsOfCurrentOrientation()??[];this.setPositions(s)}getScreenSize(){return{width:window.screen.width,height:window.screen.height}}createToolbarElement(){const A=document.createElement("div");return A.id="configToolbar",A.innerHTML=`
      <div class="column">
        <div class="button-row">
          <div id="resetButton" class="button">Reset</div>
          <div id="saveButton" class="button">Save & close</div>
          <div id="cancelButton" class="button">Cancel</div>
        </div>
        <div class="info-row">
          <div class="orientation-label"> 
            Orientation: <span id="orientation">${this.isLandscapeMode?"Landscape":"Portrait"}</span>
          </div>
        </div>
      </div>
    `,A}createToolbar(){var I;(I=document.querySelector("#touchControls"))==null||I.prepend(this.createToolbarElement());const A=this.getConfigToolbarRefs();if(!A)return;const{saveButton:s,resetButton:R,cancelButton:n}=A;s.addEventListener("click",()=>{this.saveCurrentPositions(),this.disableConfigurationMode()}),R.addEventListener("click",()=>{this.resetPositions()}),n.addEventListener("click",()=>{const a=this.getSavedPositionsOfCurrentOrientation();this.setPositions(a),this.disableConfigurationMode()})}getConfigToolbarRefs(){const A=document.querySelector("#touchControls #configToolbar");if(A)return{toolbar:A,saveButton:A.querySelector("#saveButton"),resetButton:A.querySelector("#resetButton"),cancelButton:A.querySelector("#cancelButton")}}getModifiedCurrentPositions(){return this.getControlGroupElements().filter(A=>A.style.right||A.style.left).map(A=>({id:A.id,x:parseFloat(this.isLeft(A)?A.style.left:A.style.right),y:parseFloat(A.style.bottom)}))}getLocalStorageKey(){return this.isLandscapeMode?MQ:hQ}getSavedPositionsOfCurrentOrientation(){const A=localStorage.getItem(this.getLocalStorageKey());return A?JSON.parse(A):[]}saveCurrentPositions(){const A=this.getModifiedCurrentPositions();localStorage.setItem(this.getLocalStorageKey(),JSON.stringify(A))}setPositions(A){return this.resetPositions(),A.forEach(s=>{const R=document.querySelector(`#${s.id}`);this.setPosition(R,s.x,s.y)})}setPosition(A,s,R){const n=A.getBoundingClientRect(),I=L((S,o,l)=>Math.min(Math.max(S,o),l),"checkBound"),{height:a,width:r}=this.getScreenSize();s=I(s,0,r-n.width),R=I(R,0,a-n.height),this.isLeft(A)?A.style.left=`${s}px`:A.style.right=`${s}px`,A.style.bottom=`${R}px`}resetPositions(){this.getControlGroupElements().forEach(A=>{A.style.removeProperty("left"),A.style.removeProperty("right"),A.style.removeProperty("bottom")})}getControlGroupElements(){return[...document.querySelectorAll("#touchControls .control-group")]}createConfigurationEventListeners(A){return{touchstart:A.map(s=>{const R=L(()=>this.startDrag(s),"startDrag");return s.addEventListener("touchstart",R,{passive:!0}),R}),touchmove:A.map(()=>{const s=L(R=>this.drag(R.touches[0]),"drag");return window.addEventListener("touchmove",s,{passive:!0}),s}),touchend:A.map(()=>{const s=L(()=>this.stopDrag(),"stopDrag");return window.addEventListener("touchend",s,{passive:!0}),s})}}createOverlay(A,s){var I;const R=new Phaser.GameObjects.Container(s,0,0),n=new Phaser.GameObjects.Rectangle(s,0,0,s.game.canvas.width,s.game.canvas.height,0,.5);n.setInteractive(),R.add(n),A.add(R),this.overlay=R,(I=document.querySelector("#touchControls"))==null||I.classList.add("config-mode")}enableConfigurationMode(A,s){this.inConfigurationMode||(this.inConfigurationMode=!0,this.touchControls.disable(),this.createOverlay(A,s),this.createToolbar(),setTimeout(()=>{this.configurationEventListeners=this.createConfigurationEventListeners(this.getControlGroupElements())},500))}disableConfigurationMode(){var I,a;this.inConfigurationMode=!1,this.draggingElement=null;const{touchstart:A,touchmove:s,touchend:R}=this.configurationEventListeners;this.getControlGroupElements().forEach((r,S)=>r.removeEventListener("touchstart",A[S])),s.forEach(r=>window.removeEventListener("touchmove",r)),R.forEach(r=>window.removeEventListener("touchend",r));const n=document.querySelector("#touchControls #configToolbar");n==null||n.remove(),(I=this.overlay)==null||I.destroy(),(a=document.querySelector("#touchControls"))==null||a.classList.remove("config-mode"),this.touchControls.enable()}};L(wm,"MoveTouchControlsHandler");let L_=wm;const Gb=250,vm=class vm{constructor(A){this.gamepads=new Array,this.buttonLock=new Array,this.interactions=new Map,this.configs=new Map,this.gamepadSupport=!0,this.disconnectedGamepads=new Array,this.lastSource="keyboard",this.inputInterval=new Array,this.scene=A,this.selectedDevice={[iA.GAMEPAD]:null,[iA.KEYBOARD]:"default"};for(const s of uE(b))this.interactions[s]={pressTime:!1,isPressed:!1,source:null};delete this.interactions[b.MENU],delete this.interactions[b.STATS],this.init()}init(){var A,s,R,n,I,a,r,S;if(this.events=this.scene.game.events,this.scene.game.events.on(EE.Core.Events.BLUR,()=>{this.loseFocus()}),typeof this.scene.input.gamepad<"u"){if((A=this.scene.input.gamepad)==null||A.on("connected",function(o){o&&(this.refreshGamepads(),this.setupGamepad(o),this.onReconnect(o))},this),(s=this.scene.input.gamepad)==null||s.on("disconnected",function(o){this.onDisconnect(o)},this),(R=this.scene.input.gamepad)==null||R.refreshPads(),(n=this.scene.input.gamepad)!=null&&n.total){this.refreshGamepads();for(const o of this.gamepads)this.scene.input.gamepad.emit("connected",o)}(I=this.scene.input.gamepad)==null||I.on("down",this.gamepadButtonDown,this),(a=this.scene.input.gamepad)==null||a.on("up",this.gamepadButtonUp,this),(r=this.scene.input.keyboard)==null||r.on("keydown",this.keyboardKeyDown,this),(S=this.scene.input.keyboard)==null||S.on("keyup",this.keyboardKeyUp,this)}this.touchControls=new m8(this.scene),this.moveTouchControlsHandler=new L_(this.touchControls)}loseFocus(){this.deactivatePressedKey(),this.touchControls.deactivatePressedKey()}setGamepadSupport(A){A?this.gamepadSupport=!0:(this.gamepadSupport=!1,this.deactivatePressedKey())}setChosenGamepad(A){this.deactivatePressedKey(),this.initChosenGamepad(A)}setChosenKeyboardLayout(A){this.deactivatePressedKey(),this.initChosenLayoutKeyboard(A)}getGamepadsName(){return this.gamepads.filter(A=>!this.disconnectedGamepads.includes(A.id)).map(A=>A.id)}initChosenGamepad(A){var R;A&&(this.selectedDevice[iA.GAMEPAD]=A.toLowerCase());const s=(R=this.scene.ui)==null?void 0:R.handlers[Oe.SETTINGS_GAMEPAD];s&&s.updateChosenGamepadDisplay()}initChosenLayoutKeyboard(A){var R;A&&(this.selectedDevice[iA.KEYBOARD]=A.toLowerCase());const s=(R=this.scene.ui)==null?void 0:R.handlers[Oe.SETTINGS_KEYBOARD];s&&s.updateChosenKeyboardDisplay()}onDisconnect(A){this.disconnectedGamepads.push(A.id)}onReconnect(A){this.disconnectedGamepads=this.disconnectedGamepads.filter(s=>s!==A.id)}setupGamepad(A){var n,I,a;const s=this.getGamepadsName();for(const r of s){const S=r.toLowerCase();this.selectedDevice[iA.GAMEPAD]||this.setChosenGamepad(S);const o=fV(this.getConfig(S));o.custom=((n=this.configs[S])==null?void 0:n.custom)||{...o.default},this.configs[S]=o,(I=this.scene.gameData)==null||I.saveMappingConfigs(S,this.configs[S])}this.lastSource="gamepad";const R=(a=this.scene.ui)==null?void 0:a.handlers[Oe.SETTINGS_GAMEPAD];R&&R.updateChosenGamepadDisplay()}setupKeyboard(){var A,s;for(const R of["default"]){const n=fV(this.getConfigKeyboard(R));n.custom=((A=this.configs[R])==null?void 0:A.custom)||{...n.default},this.configs[R]=n,(s=this.scene.gameData)==null||s.saveMappingConfigs(this.selectedDevice[iA.KEYBOARD],this.configs[R])}this.initChosenLayoutKeyboard(this.selectedDevice[iA.KEYBOARD])}refreshGamepads(){var A;this.gamepads=((A=this.scene.input.gamepad)==null?void 0:A.gamepads.filter(function(s){return s!==null}))??[];for(const[s,R]of this.gamepads.entries())R.index=s}ensureKeyboardIsInit(){var A;(A=this.getActiveConfig(iA.KEYBOARD))!=null&&A.padID||this.setupKeyboard()}keyboardKeyDown(A){this.lastSource="keyboard",this.ensureKeyboardIsInit();const s=jo(this.getActiveConfig(iA.KEYBOARD),A.keyCode);if(s!==void 0){if(this.buttonLock.includes(s))return;this.events.emit("input_down",{controller_type:"keyboard",button:s}),clearInterval(this.inputInterval[s]),this.inputInterval[s]=setInterval(()=>{this.events.emit("input_down",{controller_type:"keyboard",button:s})},Gb),this.buttonLock.push(s)}}keyboardKeyUp(A){this.lastSource="keyboard";const s=jo(this.getActiveConfig(iA.KEYBOARD),A.keyCode);if(s!==void 0){this.events.emit("input_up",{controller_type:"keyboard",button:s});const R=this.buttonLock.indexOf(s);this.buttonLock.splice(R,1),clearInterval(this.inputInterval[s])}}gamepadButtonDown(A,s,R){var a;if((a=this.configs[this.selectedDevice[iA.KEYBOARD]])!=null&&a.padID||this.setupKeyboard(),!A||(this.lastSource="gamepad",(!this.selectedDevice[iA.GAMEPAD]||this.scene.ui.getMode()!==Oe.GAMEPAD_BINDING&&this.selectedDevice[iA.GAMEPAD]!==A.id.toLowerCase())&&this.setChosenGamepad(A.id),!this.gamepadSupport||A.id.toLowerCase()!==this.selectedDevice[iA.GAMEPAD].toLowerCase()))return;const n=this.getActiveConfig(iA.GAMEPAD),I=n&&jo(n,s.index);if(I!==void 0){if(this.buttonLock.includes(I))return;this.events.emit("input_down",{controller_type:"gamepad",button:I}),clearInterval(this.inputInterval[I]),this.inputInterval[I]=setInterval(()=>{if(!this.buttonLock.includes(I)){clearInterval(this.inputInterval[I]);return}this.events.emit("input_down",{controller_type:"gamepad",button:I})},Gb),this.buttonLock.push(I)}}gamepadButtonUp(A,s,R){if(!A||(this.lastSource="gamepad",!this.gamepadSupport||A.id.toLowerCase()!==this.selectedDevice[iA.GAMEPAD]))return;const n=jo(this.getActiveConfig(iA.GAMEPAD),s.index);if(n!==void 0){this.events.emit("input_up",{controller_type:"gamepad",button:n});const I=this.buttonLock.indexOf(n);this.buttonLock.splice(I,1),clearInterval(this.inputInterval[n])}}getConfig(A){return A=A.toLowerCase(),A.includes("081f")&&A.includes("e401")?X6:A.includes("xbox")&&A.includes("360")?k6:A.includes("054c")?Z6:A.includes("057e")&&A.includes("2009")?DQ:uQ}getConfigKeyboard(A){return Q0}deactivatePressedKey(){for(const A of Object.keys(this.inputInterval))clearInterval(this.inputInterval[A]);this.buttonLock=[]}getActiveConfig(A){var s;return(s=this.configs[this.selectedDevice[A]])!=null&&s.padID?this.configs[this.selectedDevice[A]]:null}getIconForLatestInputRecorded(A){return this.lastSource==="keyboard"&&this.ensureKeyboardIsInit(),JX(this.configs,this.lastSource,this.selectedDevice,A)}getLastSourceDevice(){return this.lastSource==="gamepad"?iA.GAMEPAD:iA.KEYBOARD}getLastSourceConfig(){const A=this.getLastSourceDevice();return A===iA.KEYBOARD&&this.ensureKeyboardIsInit(),this.getActiveConfig(A)}getLastSourceType(){const A=this.getLastSourceConfig();return A==null?void 0:A.padType}injectConfig(A,s){this.configs[A]||(this.configs[A]={}),this.configs[A].custom=s.custom}resetConfigs(){var A;this.configs=new Map,(A=this.getGamepadsName())!=null&&A.length&&this.setupGamepad(this.selectedDevice[iA.GAMEPAD]),this.setupKeyboard()}assignBinding(A,s,R){return this.deactivatePressedKey(),A.padType==="keyboard"?$X(A,s,R):zX(A,s,R)}};L(vm,"InputsController");let N_=vm;const Vm=class Vm{constructor(A,s){this.scene=A,this.inputsController=s,this.init()}init(){this.events=this.inputsController.events,this.listenInputs()}detectInputMethod(A){A.controller_type==="keyboard"?A.hasOwnProperty("isTouch")&&A.isTouch?this.scene.inputMethod="touch":this.scene.inputMethod="keyboard":A.controller_type==="gamepad"&&(this.scene.inputMethod="gamepad")}listenInputs(){this.events.on("input_down",A=>{this.detectInputMethod(A);const s=this.getActionsKeyDown();s.hasOwnProperty(A.button)&&s[A.button]()},this),this.events.on("input_up",A=>{const s=this.getActionsKeyUp();s.hasOwnProperty(A.button)&&s[A.button]()},this)}doVibration(A,s){A&&this.scene.enableVibration&&typeof navigator.vibrate<"u"&&navigator.vibrate(s)}getActionsKeyDown(){return{[b.UP]:()=>this.buttonDirection(b.UP),[b.DOWN]:()=>this.buttonDirection(b.DOWN),[b.LEFT]:()=>this.buttonDirection(b.LEFT),[b.RIGHT]:()=>this.buttonDirection(b.RIGHT),[b.SUBMIT]:()=>this.buttonTouch(),[b.ACTION]:()=>this.buttonAb(b.ACTION),[b.CANCEL]:()=>this.buttonAb(b.CANCEL),[b.MENU]:()=>this.buttonMenu(),[b.STATS]:()=>this.buttonGoToFilter(b.STATS),[b.CYCLE_SHINY]:()=>this.buttonCycleOption(b.CYCLE_SHINY),[b.CYCLE_FORM]:()=>this.buttonCycleOption(b.CYCLE_FORM),[b.CYCLE_GENDER]:()=>this.buttonCycleOption(b.CYCLE_GENDER),[b.CYCLE_ABILITY]:()=>this.buttonCycleOption(b.CYCLE_ABILITY),[b.CYCLE_NATURE]:()=>this.buttonCycleOption(b.CYCLE_NATURE),[b.V]:()=>this.buttonCycleOption(b.V),[b.SPEED_UP]:()=>this.buttonSpeedChange(),[b.SLOW_DOWN]:()=>this.buttonSpeedChange(!1)}}getActionsKeyUp(){return{[b.UP]:()=>{},[b.DOWN]:()=>{},[b.LEFT]:()=>{},[b.RIGHT]:()=>{},[b.SUBMIT]:()=>{},[b.ACTION]:()=>{},[b.CANCEL]:()=>{},[b.MENU]:()=>{},[b.STATS]:()=>this.buttonStats(!1),[b.CYCLE_SHINY]:()=>{},[b.CYCLE_FORM]:()=>{},[b.CYCLE_GENDER]:()=>{},[b.CYCLE_ABILITY]:()=>{},[b.CYCLE_NATURE]:()=>{},[b.V]:()=>this.buttonInfo(!1),[b.SPEED_UP]:()=>{},[b.SLOW_DOWN]:()=>{}}}buttonDirection(A){const s=this.scene.ui.processInput(A);this.doVibration(s,5)}buttonAb(A){this.scene.ui.processInput(A)}buttonTouch(){this.scene.ui.processInput(b.SUBMIT)||this.scene.ui.processInput(b.ACTION)}buttonStats(A=!0){for(const s of this.scene.getInfoToggles(!0))s.toggleInfo(A);for(const s of this.scene.getField().filter(R=>R==null?void 0:R.isActive(!0)))s.toggleStats(A)}buttonGoToFilter(A){var n;const s=[sS],R=(n=this.scene.ui)==null?void 0:n.getHandler();s.some(I=>R instanceof I)?this.scene.ui.processInput(A):this.buttonStats(!0)}buttonInfo(A=!0){if(this.scene.showMovesetFlyout)for(const s of this.scene.getField().filter(R=>R==null?void 0:R.isActive(!0)))s.toggleFlyout(A);this.scene.showArenaFlyout&&this.scene.ui.processInfoButton(A)}buttonMenu(){var A;if(!this.scene.disableMenu)switch((A=this.scene.ui)==null?void 0:A.getMode()){case Oe.MESSAGE:const s=this.scene.ui.getHandler();if(!s.pendingPrompt||s.isTextAnimationInProgress())return;case Oe.TITLE:case Oe.COMMAND:case Oe.MODIFIER_SELECT:case Oe.MYSTERY_ENCOUNTER:this.scene.ui.setOverlayMode(Oe.MENU);break;case Oe.STARTER_SELECT:this.buttonTouch();break;case Oe.MENU:this.scene.ui.revertMode(),this.scene.playSound("ui/select");break;default:return}}buttonCycleOption(A){var n;const s=[sS,PC,tC,KC,mC,dC,gC],R=(n=this.scene.ui)==null?void 0:n.getHandler();s.some(I=>R instanceof I)?this.scene.ui.processInput(A):A===b.V&&this.buttonInfo(!0)}buttonSpeedChange(A=!0){var R,n;const s=a6(It.Game_Speed);A&&this.scene.gameSpeed<5?(this.scene.gameData.saveSetting(It.Game_Speed,wA[s].options.findIndex(I=>I.label===`${this.scene.gameSpeed}x`)+1),((R=this.scene.ui)==null?void 0:R.getMode())===Oe.SETTINGS&&this.scene.ui.getHandler().show([])):!A&&this.scene.gameSpeed>1&&(this.scene.gameData.saveSetting(It.Game_Speed,Math.max(wA[s].options.findIndex(I=>I.label===`${this.scene.gameSpeed}x`)-1,0)),((n=this.scene.ui)==null?void 0:n.getMode())===Oe.SETTINGS&&this.scene.ui.getHandler().show([]))}};L(Vm,"UiInputs");let T_=Vm;const xm=class xm extends Phaser.GameObjects.Container{constructor(A,s=0,R=0){super(A,s,R),this.timeOfDayIconFgs=new Array(2),this.timeOfDayIconMgs=new Array(2),this.timeOfDayIconBgs=new Array(2),this.timeOfDayIconPairs=new Map([["bg",this.timeOfDayIconBgs],["mg",this.timeOfDayIconMgs],["fg",this.timeOfDayIconFgs]]),this.currentTime=T.ALL,this.previousTime=T.ALL,this.onEncounterPhaseEvent=n=>this.onEncounterPhase(n),this.battleScene=this.scene,this.setVisible(this.battleScene.showTimeOfDayWidget),this.battleScene.showTimeOfDayWidget&&(this.timeOfDayIconPairs.forEach((n,I)=>{for(let a=0;a<n.length;a++)n[a]=this.scene.add.sprite(0,0,"dawn_icon_"+I).setOrigin()}),this.timeOfDayIcons=[this.timeOfDayIconBgs,this.timeOfDayIconMgs,this.timeOfDayIconFgs].flat(),this.add(this.timeOfDayIcons),this.battleScene.eventTarget.addEventListener(YO.ENCOUNTER_PHASE,this.onEncounterPhaseEvent))}get parentVisible(){return this._parentVisible}set parentVisible(A){var s;A&&!this._parentVisible&&((s=this.timeOfDayIcons)==null||s.forEach(R=>this.scene.tweens.getTweensOf(R).forEach(n=>n.resume()))),this._parentVisible=A}getBackTween(){const A={targets:[this.timeOfDayIconMgs[0],this.timeOfDayIconMgs[1]],angle:"+=90",duration:Et(1500),ease:"Back.easeOut",paused:!this.parentVisible},s={targets:[this.timeOfDayIconBgs[1],this.timeOfDayIconMgs[1],this.timeOfDayIconFgs[1]],alpha:0,duration:Et(500),ease:"Linear",paused:!this.parentVisible};return[A,s]}getBounceTween(){const A={targets:[this.timeOfDayIconMgs[0],this.timeOfDayIconMgs[1]],angle:"+=90",duration:Et(2e3),ease:"Bounce.easeOut",paused:!this.parentVisible},s={targets:[this.timeOfDayIconBgs[1],this.timeOfDayIconMgs[1],this.timeOfDayIconFgs[1]],alpha:0,duration:Et(800),ease:"Linear",paused:!this.parentVisible};return[A,s]}resetIcons(){this.moveBelow(this.timeOfDayIconBgs[0],this.timeOfDayIconBgs[1]),this.moveBelow(this.timeOfDayIconMgs[0],this.timeOfDayIconBgs[1]),this.moveBelow(this.timeOfDayIconFgs[0],this.timeOfDayIconFgs[1]),this.timeOfDayIconPairs.forEach((A,s)=>{A[0].setTexture(T[this.currentTime].toLowerCase()+"_icon_"+s),A[1].setTexture(T[this.previousTime].toLowerCase()+"_icon_"+s)}),this.timeOfDayIconMgs[0].setRotation(-90*(3.14/180)),this.timeOfDayIcons.forEach(A=>A.setAlpha(1))}tweenTimeOfDayIcon(){this.scene.tweens.killTweensOf(this.timeOfDayIcons),this.resetIcons(),(this.battleScene.timeOfDayAnimation===YT.BACK?this.getBackTween():this.getBounceTween()).forEach(A=>this.scene.tweens.add(A)),this.timeOfDayIconPairs.forEach(A=>{const s=A.shift();s&&A.push(s)})}onEncounterPhase(A){const s=this.battleScene.arena.getTimeOfDay();this.currentTime!==s&&(this.currentTime=s,this.previousTime=this.currentTime-1,this.previousTime<T.DAWN&&(this.previousTime=T.NIGHT),this.tweenTimeOfDayIcon())}};L(xm,"TimeOfDayWidget");let S_=xm;function _h(E){if(!E||E===ge.NONE)return E;const s=`arenaFlyout:${F8(E)}`,R=D.t(s);return!R||R===s?Cl(E):R}L(_h,"getFieldEffectText");const bm=class bm extends Phaser.GameObjects.Container{constructor(A){super(A,0,0),this.flyoutWidth=170,this.flyoutHeight=51,this.fieldEffectInfo=[],this.onNewArenaEvent=s=>this.onNewArena(s),this.onTurnEndEvent=s=>this.onTurnEnd(s),this.onFieldEffectChangedEvent=s=>this.onFieldEffectChanged(s),this.setName("arena-flyout"),this.battleScene=this.scene,this.translationX=this.flyoutWidth,this.anchorX=0,this.anchorY=-98,this.flyoutParent=this.scene.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutContainer=this.scene.add.container(0,0),this.flyoutParent.add(this.flyoutContainer),this.flyoutWindow=_t(this.scene,0,0,this.flyoutWidth,this.flyoutHeight,!1,!1,0,0,qR.THIN),this.flyoutContainer.add(this.flyoutWindow),this.flyoutWindowHeader=_t(this.scene,this.flyoutWidth/2,0,this.flyoutWidth/2,14,!1,!1,0,0,qR.XTHIN),this.flyoutWindowHeader.setOrigin(),this.flyoutContainer.add(this.flyoutWindowHeader),this.flyoutTextHeader=le(this.scene,this.flyoutWidth/2,0,D.t("arenaFlyout:activeBattleEffects"),X.BATTLE_INFO),this.flyoutTextHeader.setFontSize(54),this.flyoutTextHeader.setAlign("center"),this.flyoutTextHeader.setOrigin(),this.flyoutContainer.add(this.flyoutTextHeader),this.timeOfDayWidget=new S_(this.scene,this.flyoutWidth/2+this.flyoutWindowHeader.displayWidth/2),this.flyoutContainer.add(this.timeOfDayWidget),this.flyoutTextHeaderPlayer=le(this.scene,6,5,D.t("arenaFlyout:player"),X.SUMMARY_BLUE),this.flyoutTextHeaderPlayer.setFontSize(54),this.flyoutTextHeaderPlayer.setAlign("left"),this.flyoutTextHeaderPlayer.setOrigin(0,0),this.flyoutContainer.add(this.flyoutTextHeaderPlayer),this.flyoutTextHeaderField=le(this.scene,this.flyoutWidth/2,5,D.t("arenaFlyout:neutral"),X.SUMMARY_GREEN),this.flyoutTextHeaderField.setFontSize(54),this.flyoutTextHeaderField.setAlign("center"),this.flyoutTextHeaderField.setOrigin(.5,0),this.flyoutContainer.add(this.flyoutTextHeaderField),this.flyoutTextHeaderEnemy=le(this.scene,this.flyoutWidth-6,5,D.t("arenaFlyout:enemy"),X.SUMMARY_RED),this.flyoutTextHeaderEnemy.setFontSize(54),this.flyoutTextHeaderEnemy.setAlign("right"),this.flyoutTextHeaderEnemy.setOrigin(1,0),this.flyoutContainer.add(this.flyoutTextHeaderEnemy),this.flyoutTextPlayer=le(this.scene,6,13,"",X.BATTLE_INFO),this.flyoutTextPlayer.setLineSpacing(-1),this.flyoutTextPlayer.setFontSize(48),this.flyoutTextPlayer.setAlign("left"),this.flyoutTextPlayer.setOrigin(0,0),this.flyoutContainer.add(this.flyoutTextPlayer),this.flyoutTextField=le(this.scene,this.flyoutWidth/2,13,"",X.BATTLE_INFO),this.flyoutTextField.setLineSpacing(-1),this.flyoutTextField.setFontSize(48),this.flyoutTextField.setAlign("center"),this.flyoutTextField.setOrigin(.5,0),this.flyoutContainer.add(this.flyoutTextField),this.flyoutTextEnemy=le(this.scene,this.flyoutWidth-6,13,"",X.BATTLE_INFO),this.flyoutTextEnemy.setLineSpacing(-1),this.flyoutTextEnemy.setFontSize(48),this.flyoutTextEnemy.setAlign("right"),this.flyoutTextEnemy.setOrigin(1,0),this.flyoutContainer.add(this.flyoutTextEnemy),this.name="Fight Flyout",this.flyoutParent.name="Fight Flyout Parent",this.battleScene.eventTarget.addEventListener(YO.NEW_ARENA,this.onNewArenaEvent),this.battleScene.eventTarget.addEventListener(YO.TURN_END,this.onTurnEndEvent)}onNewArena(A){this.fieldEffectInfo.length=0,this.battleScene.arena.eventTarget.addEventListener(hn.WEATHER_CHANGED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.addEventListener(hn.TERRAIN_CHANGED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.addEventListener(hn.TAG_ADDED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.addEventListener(hn.TAG_REMOVED,this.onFieldEffectChangedEvent)}clearText(){this.flyoutTextPlayer.text="",this.flyoutTextField.text="",this.flyoutTextEnemy.text=""}updateFieldText(){this.clearText(),this.fieldEffectInfo.sort((A,s)=>A.duration-s.duration);for(let A=0;A<this.fieldEffectInfo.length;A++){const s=this.fieldEffectInfo[A];let R;switch(s.effecType){case 0:R=this.flyoutTextPlayer;break;case 1:case 2:case 3:R=this.flyoutTextField;break;case 4:R=this.flyoutTextEnemy;break}R.text+=s.name,s.maxDuration!==0&&(R.text+="  "+s.duration+"/"+s.maxDuration),R.text+=`
`}}onFieldEffectChanged(A){const s=A;if(!s)return;let R;switch(s.constructor){case XI:const n=s,I=this.battleScene.arena.getTag(n.arenaTagType)instanceof eO;let a;n.arenaTagSide===St.BOTH?a=3:n.arenaTagSide===St.PLAYER?a=0:a=4;const r=I?this.fieldEffectInfo.findIndex(u=>n.arenaTagType===u.tagType&&a===u.effecType):-1;let S=_h(ge[n.arenaTagType]);if(I)if(r!==-1){const u=n.arenaTagMaxLayers>1?` (${n.arenaTagLayers})`:"";this.fieldEffectInfo[r].name=`${S}${u}`;break}else n.arenaTagMaxLayers>1&&(S=`${S} (${n.arenaTagLayers})`);this.fieldEffectInfo.push({name:S,effecType:a,maxDuration:n.duration,duration:n.duration,tagType:n.arenaTagType});break;case hI:const o=s;R=this.fieldEffectInfo.findIndex(u=>u.tagType===o.arenaTagType),R!==-1&&this.fieldEffectInfo.splice(R,1);break;case Hi:case yT:const l=s,C=_h(l instanceof Hi?se[l.oldWeatherType]:Nt[l.oldTerrainType]),M={name:_h(l instanceof Hi?se[l.newWeatherType]:Nt[l.newTerrainType]),effecType:l instanceof Hi?1:2,maxDuration:l.duration,duration:l.duration};R=this.fieldEffectInfo.findIndex(u=>[M.name,C].includes(u.name)),R===-1?M.name!==void 0&&this.fieldEffectInfo.push(M):M.name?this.fieldEffectInfo[R]=M:this.fieldEffectInfo.splice(R,1);break}this.updateFieldText()}onTurnEnd(A){if(!A)return;const R=[];this.fieldEffectInfo.forEach(n=>R.push(n));for(let n=0;n<R.length;n++){const I=R[n];I.maxDuration!==0&&(--I.duration,I.duration<=0&&this.fieldEffectInfo.splice(this.fieldEffectInfo.indexOf(I),1))}this.updateFieldText()}toggleFlyout(A){this.scene.tweens.add({targets:this.flyoutParent,x:A?this.anchorX:this.anchorX-this.translationX,duration:Et(125),ease:"Sine.easeInOut",alpha:A?1:0,onComplete:L(()=>this.timeOfDayWidget.parentVisible=A,"onComplete")})}destroy(A){this.battleScene.eventTarget.removeEventListener(YO.NEW_ARENA,this.onNewArenaEvent),this.battleScene.eventTarget.removeEventListener(YO.TURN_END,this.onTurnEndEvent),this.battleScene.arena.eventTarget.removeEventListener(hn.WEATHER_CHANGED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.removeEventListener(hn.TERRAIN_CHANGED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.removeEventListener(hn.TAG_ADDED,this.onFieldEffectChangedEvent),this.battleScene.arena.eventTarget.removeEventListener(hn.TAG_REMOVED,this.onFieldEffectChangedEvent),super.destroy(A)}};L(bm,"ArenaFlyout");let o_=bm;const km=class km extends kO{constructor(A){super(A)}start(){super.start(),this.scene.ui.setMode(Oe.MESSAGE).then(()=>{this.scene.playSound("level_up_fanfare"),this.scene.ui.showText(D.t("battle:levelCapUp",{levelCap:this.scene.getMaxExpLevel()}),null,()=>this.end(),null,!0),this.executeForAll(A=>A.updateInfo(!0))})}};L(km,"LevelCapPhase");let l_=km;const Zm=class Zm extends iE{constructor(A){super(A)}start(){super.start(),this.scene.ui.showText(D.t("menu:boyOrGirl"),null,()=>{this.scene.ui.setMode(Oe.OPTION_SELECT,{options:[{label:D.t("settings:boy"),handler:L(()=>(this.scene.gameData.gender=vt.MALE,this.scene.gameData.saveSetting(It.Player_Gender,0),this.scene.gameData.saveSystem().then(()=>this.end()),!0),"handler")},{label:D.t("settings:girl"),handler:L(()=>(this.scene.gameData.gender=vt.FEMALE,this.scene.gameData.saveSetting(It.Player_Gender,1),this.scene.gameData.saveSystem().then(()=>this.end()),!0),"handler")}]})})}end(){this.scene.ui.setMode(Oe.MESSAGE),super.end()}};L(Zm,"SelectGenderPhase");let C_=Zm;const Xm=class Xm extends iE{constructor(A){super(A)}start(){this.scene.ui.setMode(Oe.UNAVAILABLE,()=>{this.scene.unshiftPhase(new WC(this.scene,!0)),this.end()})}};L(Xm,"UnavailablePhase");let U_=Xm;const YD=class YD extends iE{constructor(A,s){super(A),this.showText=s===void 0||!!s}start(){super.start(),p8(uL),this.scene.ui.setMode(Oe.LOADING,{buttonActions:[]}),lr(Ss,pI).then(A=>{const s=A?A[0]:!1,R=A?A[1]:null;if(s)this.scene.gameData.loadSystem().then(n=>{n||Ss?this.end():(this.scene.ui.setMode(Oe.MESSAGE),this.scene.ui.showText(W8("menu:failedToLoadSaveData")))});else{if(!R||R===400){this.showText&&this.scene.ui.showText(D.t("menu:logInOrCreateAccount")),this.scene.playSound("menu_open");const n=L(()=>{pI().then(I=>{if(!I[0]){al(uL),this.scene.reset(!0,!0);return}this.scene.gameData.loadSystem().then(()=>this.end())})},"loadData");this.scene.ui.setMode(Oe.LOGIN_FORM,{buttonActions:[()=>{this.scene.ui.playSelect(),n()},()=>{this.scene.playSound("menu_open"),this.scene.ui.setMode(Oe.REGISTRATION_FORM,{buttonActions:[()=>{this.scene.ui.playSelect(),pI().then(I=>{if(!I[0]){al(uL),this.scene.reset(!0,!0);return}this.end()})},()=>{this.scene.unshiftPhase(new YD(this.scene,!1)),this.end()}]})},()=>{const r=`https://discord.com/api/oauth2/authorize?client_id=1234567890&redirect_uri=${encodeURIComponent("http://localhost:8001/auth/discord/callback")}&response_type=code&scope=identify&prompt=none`;window.open(r,"_self")},()=>{const r=`https://accounts.google.com/o/oauth2/auth?client_id=1234567890&redirect_uri=${encodeURIComponent("http://localhost:8001/auth/google/callback")}&response_type=code&scope=openid`;window.open(r,"_self")}]})}else R===401?(al(uL),this.scene.reset(!0,!0)):(this.scene.unshiftPhase(new U_(this.scene)),super.end());return null}})}end(){this.scene.ui.setMode(Oe.MESSAGE),this.scene.gameData.gender||this.scene.unshiftPhase(new C_(this.scene)),Wi(this.scene,JR.Intro).then(()=>super.end())}};L(YD,"LoginPhase");let WC=YD;const yD=class yD extends iE{constructor(A,s,R,n,I,a){super(A),this.text=s,this.callbackDelay=R,this.prompt=n,this.promptDelay=I,this.speaker=a}start(){if(super.start(),this.text.indexOf("$")>-1){const A=this.text.indexOf("$");this.scene.unshiftPhase(new yD(this.scene,this.text.slice(A+1),this.callbackDelay,this.prompt,this.promptDelay,this.speaker)),this.text=this.text.slice(0,A).trim()}this.speaker?this.scene.ui.showDialogue(this.text,this.speaker,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.promptDelay??0):this.scene.ui.showText(this.text,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.prompt,this.promptDelay)}end(){this.scene.abilityBar.shown&&this.scene.abilityBar.hide(),super.end()}};L(yD,"MessagePhase");let u_=yD;const Qm=class Qm extends cr{constructor(A){super(A)}start(){super.start()}doEncounter(){var I,a;this.scene.playBgm(void 0,!0);for(const r of this.scene.getPlayerParty())r&&r.resetBattleData();this.scene.arenaNextEnemy.setBiome(this.scene.arena.biomeType),this.scene.arenaNextEnemy.setVisible(!0);const A=this.scene.getEnemyField(),s=[this.scene.arenaEnemy,this.scene.arenaNextEnemy,this.scene.currentBattle.trainer,A,this.scene.lastEnemyTrainer],R=(I=this.scene.lastMysteryEncounter)==null?void 0:I.introVisuals;R&&s.push(R);const n=(a=this.scene.currentBattle.mysteryEncounter)==null?void 0:a.introVisuals;n&&(n.enterFromRight?(n.x+=500,this.scene.tweens.add({targets:n,x:"-=200",duration:2e3})):s.push(n)),this.scene.tweens.add({targets:s.flat(),x:"+=300",duration:2e3,onComplete:L(()=>{this.scene.arenaEnemy.setBiome(this.scene.arena.biomeType),this.scene.arenaEnemy.setX(this.scene.arenaNextEnemy.x),this.scene.arenaEnemy.setAlpha(1),this.scene.arenaNextEnemy.setX(this.scene.arenaNextEnemy.x-300),this.scene.arenaNextEnemy.setVisible(!1),this.scene.lastEnemyTrainer&&this.scene.lastEnemyTrainer.destroy(),R&&(this.scene.field.remove(R,!0),this.scene.lastMysteryEncounter.introVisuals=void 0),this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")})}trySetWeatherIfNewBiome(){}};L(Qm,"NextEncounterPhase");let YC=Qm;const Jm=class Jm extends YC{constructor(A){super(A)}doEncounter(){var n,I;this.scene.playBgm(void 0,!0);for(const a of this.scene.getPlayerParty())a&&a.resetBattleData();for(const a of this.scene.getPlayerParty().filter(r=>r.isOnField()))Ct(cS,a,null);const A=this.scene.getEnemyField(),s=[this.scene.arenaEnemy,A],R=(I=(n=this.scene.currentBattle)==null?void 0:n.mysteryEncounter)==null?void 0:I.introVisuals;R&&s.push(R),this.scene.tweens.add({targets:s.flat(),x:"+=300",duration:2e3,onComplete:L(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")})}trySetWeatherIfNewBiome(){this.scene.arena.trySetWeather(i6(this.scene.arena),!1)}};L(Jm,"NewBiomeEncounterPhase");let D_=Jm;var PR=(E=>(E[E.SUBSTITUTE_ADD=0]="SUBSTITUTE_ADD",E[E.SUBSTITUTE_PRE_MOVE=1]="SUBSTITUTE_PRE_MOVE",E[E.SUBSTITUTE_POST_MOVE=2]="SUBSTITUTE_POST_MOVE",E[E.SUBSTITUTE_REMOVE=3]="SUBSTITUTE_REMOVE",E[E.COMMANDER_APPLY=4]="COMMANDER_APPLY",E[E.COMMANDER_REMOVE=5]="COMMANDER_REMOVE",E))(PR||{});const $m=class $m extends GE{constructor(A,s,R,n){super(A),this.key=s,this.pokemon=R,this.fieldAssets=n??[]}start(){switch(super.start(),this.key){case PR.SUBSTITUTE_ADD:this.doSubstituteAddAnim();break;case PR.SUBSTITUTE_PRE_MOVE:this.doSubstitutePreMoveAnim();break;case PR.SUBSTITUTE_POST_MOVE:this.doSubstitutePostMoveAnim();break;case PR.SUBSTITUTE_REMOVE:this.doSubstituteRemoveAnim();break;case PR.COMMANDER_APPLY:this.doCommanderApplyAnim();break;case PR.COMMANDER_REMOVE:this.doCommanderRemoveAnim();break;default:this.end()}}doSubstituteAddAnim(){const A=this.pokemon.getTag(KE);if(Ve(A))return this.end();const s=L(()=>{const a=this.scene.addFieldSprite(this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y,`pkmn${this.pokemon.isPlayer()?"__back":""}__sub`);return a.setOrigin(.5,1),this.scene.field.add(a),a},"getSprite"),[R,n]=[s(),s()],I=this.pokemon.getSpriteScale()*(this.pokemon.isPlayer()?.5:1);R.setVisible(!1),R.setScale(I),n.setTintFill(16777215),n.setScale(.01),this.pokemon.isPlayer()&&this.scene.field.bringToTop(this.pokemon),this.scene.playSound("PRSFX- Transform"),this.scene.tweens.add({targets:this.pokemon,duration:500,x:this.pokemon.x+this.pokemon.getSubstituteOffset()[0],y:this.pokemon.y+this.pokemon.getSubstituteOffset()[1],alpha:.5,ease:"Sine.easeIn"}),this.scene.tweens.add({targets:n,delay:250,scale:I,ease:"Cubic.easeInOut",duration:500,onComplete:L(()=>{R.setVisible(!0),this.pokemon.scene.tweens.add({targets:n,delay:250,alpha:0,ease:"Cubic.easeOut",duration:1e3,onComplete:L(()=>{n.destroy(),A.sprite=R,this.end()},"onComplete")})},"onComplete")})}doSubstitutePreMoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();this.scene.tweens.add({targets:A,alpha:0,ease:"Sine.easeInOut",duration:500}),this.scene.tweens.add({targets:this.pokemon,x:A.x,y:A.y,alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:L(()=>this.end(),"onComplete")})}doSubstitutePostMoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();this.scene.tweens.add({targets:this.pokemon,x:A.x+this.pokemon.getSubstituteOffset()[0],y:A.y+this.pokemon.getSubstituteOffset()[1],alpha:.5,ease:"Sine.easeInOut",duration:500}),this.scene.tweens.add({targets:A,alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:L(()=>this.end(),"onComplete")})}doSubstituteRemoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();const R=L(()=>{const I=this.scene.addFieldSprite(A.x,A.y,`pkmn${this.pokemon.isPlayer()?"__back":""}__sub`);return I.setOrigin(.5,1),this.scene.field.add(I),I},"getSprite")(),n=this.pokemon.getSpriteScale()*(this.pokemon.isPlayer()?.5:1);R.setAlpha(0),R.setTintFill(16777215),R.setScale(n),this.scene.tweens.add({targets:R,alpha:1,ease:"Sine.easeInOut",duration:500,onComplete:L(()=>{A.destroy();const I=this.scene.time.addEvent({delay:100,repeat:7,startAt:200,callback:L(()=>{this.scene.playSound("PRSFX- Substitute2.wav"),R.setVisible(I.repeatCount%2===0),I.repeatCount||(this.scene.tweens.add({targets:R,scale:.01,ease:"Sine.cubicEaseIn",duration:500}),this.scene.tweens.add({targets:this.pokemon,x:this.pokemon.x-this.pokemon.getSubstituteOffset()[0],y:this.pokemon.y-this.pokemon.getSubstituteOffset()[1],alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:L(()=>{R.destroy(),this.end()},"onComplete")}))},"callback")})},"onComplete")})}doCommanderApplyAnim(){var S,o;if(!((S=this.scene.currentBattle)!=null&&S.double))return this.end();const A=this.pokemon.getAlly();if(((o=A==null?void 0:A.species)==null?void 0:o.speciesId)!==e.DONDOZO)return this.end();const s=this.pokemon.x+this.pokemon.getSprite().x,R=this.pokemon.y+this.pokemon.getSprite().y,I=L(()=>{const l=this.scene.addPokemonSprite(this.pokemon,s,R,this.pokemon.getSprite().texture,this.pokemon.getSprite().frame.name,!0);return["spriteColors","fusionSpriteColors"].map(C=>l.pipelineData[C]=this.pokemon.getSprite().pipelineData[C]),l.setPipelineData("spriteKey",this.pokemon.getBattleSpriteKey()),l.setPipelineData("shiny",this.pokemon.shiny),l.setPipelineData("variant",this.pokemon.variant),l.setPipelineData("ignoreFieldPos",!0),l.setOrigin(.5,1),this.pokemon.getSprite().on("animationupdate",(C,M)=>l.setFrame(M.textureFrame)),this.scene.field.add(l),l},"getSourceSprite")();this.pokemon.setVisible(!1);const a=this.pokemon.getFieldPositionOffset(),r=A.getFieldPositionOffset();this.scene.playSound("se/pb_throw"),this.scene.tweens.add({targets:I,duration:375,scale:.5,x:{value:s+(r[0]-a[0])/2,ease:"Linear"},y:{value:(this.pokemon.isPlayer()?100:65)+a[1],ease:"Sine.easeOut"},onComplete:L(()=>{this.scene.field.bringToTop(A),this.scene.tweens.add({targets:I,duration:375,scale:.01,x:{value:A.x,ease:"Linear"},y:{value:A.y+A.height/2,ease:"Sine.easeIn"},onComplete:L(()=>{I.destroy(),this.scene.playSound("battle_anims/PRSFX- Liquidation1.wav"),this.scene.tweens.add({targets:A,duration:250,ease:"Sine.easeInOut",scale:.85,yoyo:!0,onComplete:L(()=>this.end(),"onComplete")})},"onComplete")})},"onComplete")})}doCommanderRemoveAnim(){const A=this.pokemon.getAlly();if(Ve(A))return console.warn("Aborting COMMANDER_REMOVE anim: Tatsugiri is undefined"),this.end();const s=this.scene.addPokemonSprite(A,this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y+this.pokemon.height/2,A.getSprite().texture,A.getSprite().frame.name,!0);["spriteColors","fusionSpriteColors"].map(R=>s.pipelineData[R]=A.getSprite().pipelineData[R]),s.setPipelineData("spriteKey",A.getBattleSpriteKey()),s.setPipelineData("shiny",A.shiny),s.setPipelineData("variant",A.variant),s.setPipelineData("ignoreFieldPos",!0),this.pokemon.getSprite().on("animationupdate",(R,n)=>s.setFrame(n.textureFrame)),s.setOrigin(.5,1),s.setScale(.01),this.scene.field.add(s),this.scene.field.bringToTop(this.pokemon),s.setVisible(!0),this.scene.tweens.add({targets:this.pokemon,duration:250,ease:"Sine.easeInOut",scale:1.15,yoyo:!0,onComplete:L(()=>{this.scene.playSound("battle_anims/PRSFX- Liquidation4.wav"),this.scene.tweens.add({targets:s,duration:500,scale:1,x:{value:A.x+A.getSprite().x,ease:"Linear"},y:{value:A.y+A.getSprite().y,ease:"Sine.easeIn"},onComplete:L(()=>{A.setVisible(!0),s.destroy(),this.end()},"onComplete")})},"onComplete")})}};L($m,"PokemonAnimPhase");let M_=$m;const zm=class zm extends Is{constructor(A,s,R,n,I,a=!1,r=!1,S=!1,o=!1,l=!1){super(A,s,void 0,oA.HEALTH_UP),this.hpHealed=R,this.message=n,this.showFullHpMessage=I,this.skipAnim=a,this.revive=r,this.healStatus=S,this.preventFullHeal=o,this.fullRestorePP=l}start(){!this.skipAnim&&(this.revive||this.getPokemon().hp)&&!this.getPokemon().isFullHp()?super.start():this.end()}end(){const A=this.getPokemon();if(!A.isOnField()||!this.revive&&!A.isActive())return super.end();const s=!!this.message,R=!A.isFullHp()||this.hpHealed<0,n=A.getTag(Y.HEAL_BLOCK);let I=Re.NONE;if(n&&this.hpHealed>0)return this.scene.queueMessage(n.onActivation(A)),this.message=null,super.end();if(R){const a=new ZE(1);this.revive||this.scene.applyModifiers(oa,this.player,a);const r=new Rt(Math.floor(this.hpHealed*a.value));if(r.value<0&&(A.damageAndUpdate(r.value*-1,wt.HEAL),r.value=0),this.preventFullHeal&&A.hp+r.value>=A.getMaxHp()&&(r.value=A.getMaxHp()-A.hp-1),r.value=A.heal(r.value),r.value&&this.scene.damageNumberHandler.add(A,r.value,wt.HEAL),A.isPlayer()&&(this.scene.validateAchvs(MI,r),r.value>this.scene.gameData.gameStats.highestHeal&&(this.scene.gameData.gameStats.highestHeal=r.value)),this.healStatus&&!this.revive&&A.status&&(I=A.status.effect,A.resetStatus()),this.fullRestorePP)for(const S of this.getPokemon().getMoveset())S&&(S.ppUsed=0);A.updateInfo().then(()=>super.end())}else this.healStatus&&!this.revive&&A.status?(I=A.status.effect,A.resetStatus(),A.updateInfo().then(()=>super.end())):this.showFullHpMessage&&(this.message=D.t("battle:hpIsFull",{pokemonName:ee(A)}));this.message&&this.scene.queueMessage(this.message),this.healStatus&&I&&!s&&this.scene.queueMessage(EI(I,ee(A))),!R&&!I&&super.end()}};L(zm,"PokemonHealPhase");let mE=zm;const qm=class qm extends GE{constructor(A,s,R){super(A),this.pokemon=s,this.formChange=R}start(){if(super.start(),this.pokemon.formIndex===this.pokemon.species.forms.findIndex(I=>I.formKey===this.formChange.formKey))return this.end();const A=ee(this.pokemon);if(!this.pokemon.isOnField()||this.pokemon.getTag(Tn)||this.pokemon.isFainted()){this.pokemon.isPlayer()||this.pokemon.isActive()?this.pokemon.changeForm(this.formChange).then(()=>{this.scene.ui.showText(rc(this.pokemon,this.formChange,A),null,()=>this.end(),1500)}):this.end();return}const s=L(()=>{const I=this.scene.addPokemonSprite(this.pokemon,this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y,"pkmn__sub");I.setOrigin(.5,1);const a=this.pokemon.getBattleSpriteKey();try{I.play(a).stop()}catch(r){console.error(`Failed to play animation for ${a}`,r)}return I.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:dR(this.pokemon.getTeraType())}),["spriteColors","fusionSpriteColors"].map(r=>{var S;(S=this.pokemon.summonData)!=null&&S.speciesForm&&(r+="Base"),I.pipelineData[r]=this.pokemon.getSprite().pipelineData[r]}),this.scene.field.add(I),I},"getPokemonSprite"),[R,n]=[s(),s()];this.pokemon.getSprite().on("animationupdate",(I,a)=>{a.textureKey===R.texture.key?R.setFrame(a.textureFrame):n.setFrame(a.textureFrame)}),R.setAlpha(0),R.setTintFill(16777215),n.setVisible(!1),n.setTintFill(16777215),this.scene.playSound("battle_anims/PRSFX- Transform"),this.scene.tweens.add({targets:R,alpha:1,duration:1e3,ease:"Cubic.easeIn",onComplete:L(()=>{this.pokemon.setVisible(!1),this.pokemon.changeForm(this.formChange).then(()=>{n.setScale(.01);const I=this.pokemon.getBattleSpriteKey();try{n.play(I).stop()}catch(a){console.error(`Failed to play animation for ${I}`,a)}n.setVisible(!0),this.scene.tweens.add({targets:R,delay:250,scale:.01,ease:"Cubic.easeInOut",duration:500,onComplete:L(()=>R.destroy(),"onComplete")}),this.scene.tweens.add({targets:n,delay:250,scale:this.pokemon.getSpriteScale(),ease:"Cubic.easeInOut",duration:500,onComplete:L(()=>{this.pokemon.setVisible(!0),this.scene.tweens.add({targets:n,delay:250,alpha:0,ease:"Cubic.easeOut",duration:1e3,onComplete:L(()=>{R.setVisible(!1),this.scene.ui.showText(rc(this.pokemon,this.formChange,A),null,()=>this.end(),1500)},"onComplete")})},"onComplete")})})},"onComplete")})}end(){var A;if(this.pokemon.findAndRemoveTags(s=>s.tagType===Y.AUTOTOMIZED),((A=this.pokemon.scene)==null?void 0:A.currentBattle.battleSpec)===TE.FINAL_BOSS&&this.pokemon instanceof rs){this.scene.playBgm(),this.scene.unshiftPhase(new mE(this.scene,this.pokemon.getBattlerIndex(),this.pokemon.getMaxHp(),null,!1,!1,!1,!0)),this.pokemon.findAndRemoveTags(()=>!0),this.pokemon.bossSegments=5,this.pokemon.bossSegmentIndex=4,this.pokemon.initBattleInfo(),this.pokemon.cry();const s=this.scene.findPhase(R=>R instanceof HA&&R.pokemon===this.pokemon);s&&s.cancel()}super.end()}};L(qm,"QuietFormChangePhase");let h_=qm;const jm=class jm extends GE{constructor(A,s){super(A),this.nextBiome=s}start(){if(super.start(),this.nextBiome===void 0)return this.end();this.scene.tweens.add({targets:[this.scene.arenaEnemy,this.scene.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:L(()=>{this.scene.arenaEnemy.setX(this.scene.arenaEnemy.x-600),this.scene.newArena(this.nextBiome);const s=`${Fo(this.nextBiome)}_bg`;this.scene.arenaBgTransition.setTexture(s),this.scene.arenaBgTransition.setAlpha(0),this.scene.arenaBgTransition.setVisible(!0),this.scene.arenaPlayerTransition.setBiome(this.nextBiome),this.scene.arenaPlayerTransition.setAlpha(0),this.scene.arenaPlayerTransition.setVisible(!0),this.scene.tweens.add({targets:[this.scene.arenaPlayer,this.scene.arenaBgTransition,this.scene.arenaPlayerTransition],duration:1e3,delay:1e3,ease:"Sine.easeInOut",alpha:L(R=>R===this.scene.arenaPlayer?0:1,"alpha"),onComplete:L(()=>{this.scene.arenaBg.setTexture(s),this.scene.arenaPlayer.setBiome(this.nextBiome),this.scene.arenaPlayer.setAlpha(1),this.scene.arenaEnemy.setBiome(this.nextBiome),this.scene.arenaEnemy.setAlpha(1),this.scene.arenaNextEnemy.setBiome(this.nextBiome),this.scene.arenaBgTransition.setVisible(!1),this.scene.arenaPlayerTransition.setVisible(!1),this.scene.lastEnemyTrainer&&this.scene.lastEnemyTrainer.destroy(),this.end()},"onComplete")})},"onComplete")})}};L(jm,"SwitchBiomePhase");let c_=jm;const eF=class eF extends GE{constructor(A){super(A)}start(){super.start();const A=this.scene.arena.biomeType,s=L(R=>{this.scene.currentBattle.waveIndex%10===1&&(this.scene.applyModifiers(oo,!0,this.scene),this.scene.unshiftPhase(new Gr(this.scene,!1))),this.scene.unshiftPhase(new c_(this.scene,R)),this.end()},"setNextBiome");if(this.scene.gameMode.isClassic&&this.scene.gameMode.isWaveFinal(this.scene.currentBattle.waveIndex+9)||this.scene.gameMode.isDaily&&this.scene.gameMode.isWaveFinal(this.scene.currentBattle.waveIndex)||this.scene.gameMode.hasShortBiomes&&!(this.scene.currentBattle.waveIndex%50))s(N.END);else if(this.scene.gameMode.hasRandomBiomes)s(this.generateNextBiome());else if(Array.isArray(An[A])){let R=[];if(this.scene.executeWithSeedOffset(()=>{R=An[A].filter(n=>!Array.isArray(n)||!_e(n[1])).map(n=>Array.isArray(n)?n[0]:n)},this.scene.currentBattle.waveIndex),R.length>1&&this.scene.findModifier(n=>n instanceof $S)){let n=[];this.scene.executeWithSeedOffset(()=>{n=(Array.isArray(An[A])?An[A]:[An[A]]).filter((a,r)=>!Array.isArray(a)||!_e(a[1])).map(a=>Array.isArray(a)?a[0]:a)},this.scene.currentBattle.waveIndex);const I=n.map(a=>({label:RL(a),handler:L(()=>(this.scene.ui.setMode(Oe.MESSAGE),s(a),!0),"handler")}));this.scene.ui.setMode(Oe.OPTION_SELECT,{options:I,delay:1e3})}else s(R[_e(R.length)])}else An.hasOwnProperty(A)?s(An[A]):s(this.generateNextBiome())}generateNextBiome(){return this.scene.currentBattle.waveIndex%50?this.scene.generateRandomBiome(this.scene.currentBattle.waveIndex):N.END}};L(eF,"SelectBiomePhase");let __=eF;const tF=class tF extends kO{constructor(A,s){var R;super(A),this.skipTurn=!1,this.fieldIndex=s,(R=this.scene.currentBattle.mysteryEncounter)!=null&&R.skipEnemyBattleTurns&&(this.skipTurn=!0)}start(){super.start();const A=this.scene.getEnemyField()[this.fieldIndex],s=this.scene.currentBattle,R=s.trainer;if(s.double&&A.hasAbility(O.COMMANDER)&&A.getAlly().getTag(Y.COMMANDED)&&(this.skipTurn=!0),R&&!A.getMoveQueue().length){const I=A.getOpponents();if(!A.isTrapped()){const a=R.getPartyMemberMatchupScores(A.trainerSlot,!0);if(a.length){const r=I.map(C=>A.getMatchupScore(C)),S=r.reduce((C,M)=>C+=M,0)/r.length,o=R.getSortedPartyMemberMatchupScores(a),l=1-(s.enemySwitchCounter?Math.pow(.1,1/s.enemySwitchCounter):0);if(o[0][1]*l>=S*(R.config.isBoss?2:3)){const C=R.getNextSummonIndex(A.trainerSlot,a);return s.turnCommands[this.fieldIndex+Bt.ENEMY]={command:NA.POKEMON,cursor:C,args:[!1],skip:this.skipTurn},s.enemySwitchCounter++,this.end()}}}}const n=A.getNextMove();this.scene.currentBattle.turnCommands[this.fieldIndex+Bt.ENEMY]={command:NA.FIGHT,move:n,skip:this.skipTurn},this.scene.currentBattle.enemySwitchCounter=Math.max(this.scene.currentBattle.enemySwitchCounter-1,0),this.end()}getFieldIndex(){return this.fieldIndex}};L(tF,"EnemyCommandPhase");let P_=tF;const AF=class AF extends as{constructor(A,s,R){super(A,Bt.ENEMY+s),this.pokeballType=R}start(){super.start();const A=this.getPokemon();if(!(A!=null&&A.hp))return this.end();const s=A.getTag(KE);s&&s.sprite.setVisible(!1),this.scene.pokeballCounts[this.pokeballType]--,this.originalY=A.y;const R=3*A.getMaxHp(),n=2*A.hp,I=A.species.catchRate,a=Hl(this.pokeballType),r=A.status?Qb(A.status.effect):1,S=Math.round((R-n)*I*a/R*r),o=Math.round(65536/Math.pow(255/S,.1875)),l=H7(this.scene,S),C=A.randSeedInt(256)<l,M=A.getFieldPositionOffset(),u=TO(this.pokeballType);this.pokeball=this.scene.addFieldSprite(16,80,"pb",u),this.pokeball.setOrigin(.5,.625),this.scene.field.add(this.pokeball),this.scene.playSound("se/pb_throw",C?{rate:.2}:void 0),this.scene.time.delayedCall(300,()=>{this.scene.field.moveBelow(this.pokeball,A)}),this.scene.tweens.add({targets:this.pokeball,x:{value:236+M[0],ease:"Linear"},y:{value:16+M[1],ease:"Cubic.easeOut"},duration:500,onComplete:L(()=>{this.pokeball.setTexture("pb",`${u}_opening`),this.scene.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${u}_open`)),this.scene.playSound("se/pb_rel"),A.tint(bO(this.pokeballType)),iM(this.scene,this.pokeball.x,this.pokeball.y,this.pokeballType),this.scene.tweens.add({targets:A,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:L(()=>{this.pokeball.setTexture("pb",`${u}_opening`),A.setVisible(!1),this.scene.playSound("se/pb_catch"),this.scene.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${u}`));const h=L(()=>{let P=0;const G=this.pokeball.x,d=this.scene.tweens.addCounter({from:0,to:1,repeat:C?2:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:L(H=>{if(P&&P<(C?2:4)){const f=H.getValue(),K=P%2===1?1:-1;this.pokeball.setX(G+f*4*K),this.pokeball.setAngle(f*27.5*K)}},"onUpdate"),onRepeat:L(()=>{if(!A.species.isObtainable())d.stop(),this.failCatch(P);else if(P++<(C?1:3))a===-1||C||S>=255||A.randSeedInt(65536)<o?this.scene.playSound("se/pb_move"):(d.stop(),this.failCatch(P));else if(C&&A.randSeedInt(65536)>=o)d.stop(),this.failCatch(P);else{this.scene.playSound("se/pb_lock"),u6(this.scene,this.pokeball);const H=this.scene.add.sprite(this.pokeball.x,this.pokeball.y,"pb","pb");H.setOrigin(this.pokeball.originX,this.pokeball.originY),H.setTintFill(0),H.setAlpha(0),this.scene.field.add(H),this.scene.tweens.add({targets:H,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:L(()=>{this.scene.tweens.add({targets:H,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:L(()=>H.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:L(()=>{this.catch()},"onComplete")})},"doShake");this.scene.time.delayedCall(250,()=>e6(this.scene,this.pokeball,16,72,350,h,C))},"onComplete")})},"onComplete")})}failCatch(A){var I;const s=this.getPokemon();this.scene.playSound("se/pb_rel"),s.setY(this.originalY),((I=s.status)==null?void 0:I.effect)!==Re.SLEEP&&s.cry(s.getHpRatio()>.25?void 0:{rate:.85}),s.tint(bO(this.pokeballType)),s.setVisible(!0),s.untint(250,"Sine.easeOut");const R=s.getTag(KE);R&&R.sprite.setVisible(!0);const n=TO(this.pokeballType);this.pokeball.setTexture("pb",`${n}_opening`),this.scene.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${n}_open`)),this.scene.tweens.add({targets:s,duration:250,ease:"Sine.easeOut",scale:1}),this.scene.currentBattle.lastUsedPokeball=this.pokeballType,this.removePb(),this.end()}catch(){const A=this.getPokemon(),s=A.fusionSpecies?A.getFusionSpeciesForm():A.getSpeciesForm();s.abilityHidden&&(A.fusionSpecies?A.fusionAbilityIndex:A.abilityIndex)===s.getAbilityCount()-1&&this.scene.validateAchv(lt.HIDDEN_ABILITY),A.species.subLegendary&&this.scene.validateAchv(lt.CATCH_SUB_LEGENDARY),A.species.legendary&&this.scene.validateAchv(lt.CATCH_LEGENDARY),A.species.mythical&&this.scene.validateAchv(lt.CATCH_MYTHICAL),this.scene.pokemonInfoContainer.show(A,!0),this.scene.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),this.scene.ui.showText(D.t("battle:pokemonCaught",{pokemonName:ee(A)}),null,()=>{const R=L(()=>{this.scene.unshiftPhase(new JT(this.scene,this.battlerIndex)),this.scene.pokemonInfoContainer.hide(),this.removePb(),this.end()},"end"),n=L(()=>{this.scene.addFaintedEnemyScore(A),this.scene.getPlayerField().filter(a=>a.isActive(!0)).forEach(a=>a.removeTagsBySourceId(A.id)),A.hp=0,A.trySetStatus(Re.FAINT),this.scene.clearEnemyHeldItemModifiers(),this.scene.field.remove(A,!0)},"removePokemon"),I=L(a=>{const r=A.addToParty(this.pokeballType,a),S=this.scene.findModifiers(o=>o instanceof Ht,!1);this.scene.getPlayerParty().filter(o=>o.isShiny()).length===or&&this.scene.validateAchv(lt.SHINY_PARTY),Promise.all(S.map(o=>this.scene.addModifier(o,!0))).then(()=>{this.scene.updateModifiers(!0),n(),r?r.loadAssets().then(R):R()})},"addToParty");Promise.all([A.hideInfo(),this.scene.gameData.setPokemonCaught(A)]).then(()=>{if(this.scene.getPlayerParty().length===or){const a=L(()=>{this.scene.ui.showText(D.t("battle:partyFull",{pokemonName:A.getNameToRender()}),null,()=>{this.scene.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),this.scene.ui.setMode(Oe.CONFIRM,()=>{const r=this.scene.addPlayerPokemon(A.species,A.level,A.abilityIndex,A.formIndex,A.gender,A.shiny,A.variant,A.ivs,A.nature,A);this.scene.ui.setMode(Oe.SUMMARY,r,0,rM.DEFAULT,()=>{this.scene.ui.setMode(Oe.MESSAGE).then(()=>{a()})},!1)},()=>{this.scene.ui.setMode(Oe.PARTY,us.RELEASE,this.fieldIndex,(r,S)=>{this.scene.ui.setMode(Oe.MESSAGE).then(()=>{r<6?I(r):a()})})},()=>{this.scene.ui.setMode(Oe.MESSAGE).then(()=>{n(),R()})},"fullParty")})},"promptRelease");a()}else I()})},0,!0)}removePb(){this.scene.tweens.add({targets:this.pokeball,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:L(()=>this.pokeball.destroy(),"onComplete")})}};L(AF,"AttemptCapturePhase");let G_=AF;const EF=class EF extends as{constructor(A,s){super(A,s),this.forceFailEscape=!1}start(){super.start();const A=this.scene.getPlayerField(),s=this.scene.getEnemyField(),R=this.getPokemon(),n=new Rt(0);this.attemptRunAway(A,s,n),Ct(HU,R,null,!1,n),R.randSeedInt(100)<n.value&&!this.forceFailEscape?(this.scene.playSound("se/flee"),this.scene.queueMessage(D.t("battle:runAwaySuccess"),null,!0,500),this.scene.tweens.add({targets:[this.scene.arenaEnemy,s].flat(),alpha:0,duration:250,ease:"Sine.easeIn",onComplete:L(()=>s.forEach(I=>I.destroy()),"onComplete")}),this.scene.clearEnemyHeldItemModifiers(),s.forEach(I=>{I.hideInfo().then(()=>I.destroy()),I.hp=0,I.trySetStatus(Re.FAINT)}),this.scene.pushPhase(new yi(this.scene,!1)),this.scene.pushPhase(new JI(this.scene))):(R.turnData.failedRunAway=!0,this.scene.queueMessage(D.t("battle:runAwayCannotEscape"),null,!0,500)),this.end()}attemptRunAway(A,s,R){const n=s.reduce((u,h)=>u+h.getStat(g.SPD),0),I=A.reduce((u,h)=>u+h.getStat(g.SPD),0);let a=!1;for(let u=0;u<s.length;u++)a=a||s[u].isBoss();const r=I/n,S=a?6:4,o=5,l=a?25:95,C=a?2:10,M=(l-o)/S;R.value=Phaser.Math.Clamp(Math.round(M*r+o+C*this.scene.currentBattle.escapeAttempts++),o,l)}};L(EF,"AttemptRunPhase");let H_=EF;const sF=class sF extends kO{start(){super.start(),this.executeForAll(A=>{if(!!this.scene.findModifier(R=>R instanceof lE&&R.shouldApply(A),A.isPlayer())){const R=new Lt(!1);if(A.getOpponents().map(n=>Ct(ar,n,R)),R.value)A.scene.queueMessage(D.t("abilityTriggers:preventBerryUse",{pokemonNameWithAffix:ee(A)}));else{this.scene.unshiftPhase(new Is(this.scene,A.getBattlerIndex(),A.getBattlerIndex(),oA.USE_ITEM));for(const n of this.scene.applyModifiers(lE,A.isPlayer(),A))n.consumed&&(n.consumed=!1,A.loseHeldItem(n)),this.scene.eventTarget.dispatchEvent(new Vh(n));this.scene.updateModifiers(A.isPlayer()),Ct(PS,A,new Lt(!1))}}}),this.end()}};L(sF,"BerryPhase");let d_=sF;const RF=class RF extends GE{constructor(A,s,R){super(A),this.pokemon=s,this.move=R}canMove(){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon)}start(){super.start(),this.canMove()?MA(kr,this.pokemon,null,this.move.getMove()).then(()=>this.end()):this.end()}};L(RF,"MoveHeaderPhase");let f_=RF;const OF=class OF extends kO{constructor(A){super(A)}start(){super.start(),this.scene.currentBattle.incrementTurn(this.scene),this.scene.eventTarget.dispatchEvent(new kh(this.scene.currentBattle.turn));const A=L(s=>{var R;s.switchOutStatus||(s.lapseTags(QE.TURN_END),this.scene.applyModifiers(Ta,s.isPlayer(),s),((R=this.scene.arena.terrain)==null?void 0:R.terrainType)===Nt.GRASSY&&s.isGrounded()&&this.scene.unshiftPhase(new mE(this.scene,s.getBattlerIndex(),Math.max(s.getMaxHp()>>4,1),D.t("battle:turnEndHpRestore",{pokemonName:ee(s)}),!0)),s.isPlayer()||(this.scene.applyModifiers(ho,!1,s),this.scene.applyModifier(co,!1,s)),kQ(JO,s)),this.scene.applyModifiers(qi,s.isPlayer(),s),this.scene.applyModifiers(Ca,s.isPlayer(),s),s.battleSummonData.turnCount++,s.battleSummonData.waveTurnCount++},"handlePokemon");this.executeForAll(A),this.scene.arena.lapseTags(),this.scene.arena.weather&&!this.scene.arena.weather.lapse()&&(this.scene.arena.trySetWeather(se.NONE,!1),this.scene.arena.triggerWeatherBasedFormChangesToNormal()),this.scene.arena.terrain&&!this.scene.arena.terrain.lapse()&&this.scene.arena.trySetTerrain(Nt.NONE,!1),this.end()}};L(OF,"TurnEndPhase");let B_=OF;const nF=class nF extends Is{constructor(A){var s,R,n;super(A,void 0,void 0,oA.SUNNY+((((R=(s=A==null?void 0:A.arena)==null?void 0:s.weather)==null?void 0:R.weatherType)||se.NONE)-1)),this.weather=(n=A==null?void 0:A.arena)==null?void 0:n.weather}start(){var A,s;if(this.weather=(s=(A=this.scene)==null?void 0:A.arena)==null?void 0:s.weather,!this.weather){this.end();return}if(this.setAnimation(oA.SUNNY+(this.weather.weatherType-1)),this.weather.isDamaging()){const R=new Lt(!1);if(this.executeForAll(n=>gb(Ea,n,this.weather,R)),!R.value){const n=L(I=>{var S;const a=new Lt(!1);if(gb(UU,I,this.weather,a),Ct(DE,I,a),a.value||I.getTag(Y.UNDERGROUND)||I.getTag(Y.UNDERWATER))return;const r=Yt(I.getMaxHp()/16);this.scene.queueMessage(X7((S=this.weather)==null?void 0:S.weatherType,I)),I.damageAndUpdate(r,wt.EFFECTIVE,!1,!1,!0)},"inflictDamage");this.executeForAll(I=>{!I||!!I.getTypes(!0,!0).filter(r=>{var S;return(S=this.weather)==null?void 0:S.isTypeDamageImmune(r)}).length||I.switchOutStatus||n(I)})}}this.scene.ui.showText(Z7(this.weather.weatherType)??"",null,()=>{this.executeForAll(R=>{R.switchOutStatus||XQ(hS,R,this.weather)}),super.start()})}};L(nF,"WeatherEffectPhase");let g_=nF;const iF=class iF extends iE{constructor(A,s){super(A),this.scene=A,this.order=s}start(){const A=this.scene.getField();for(const s of this.order)A[s].status&&A[s].status.isPostTurn()&&this.scene.unshiftPhase(new xT(this.scene,s));this.end()}};L(iF,"CheckStatusEffectPhase");let K_=iF;const IF=class IF extends kO{constructor(A){super(A)}getSpeedOrder(){const A=this.scene.getPlayerField().filter(I=>I.isActive()),s=this.scene.getEnemyField().filter(I=>I.isActive());let R=A.concat(s);this.scene.executeWithSeedOffset(()=>{R=aO(R)},this.scene.currentBattle.turn,this.scene.waveSeed);const n=new Lt(!1);return this.scene.arena.applyTags(vC,!1,n),R.sort((I,a)=>{const r=(I==null?void 0:I.getEffectiveStat(g.SPD))??0,S=(a==null?void 0:a.getEffectiveStat(g.SPD))??0;return n.value?r-S:S-r}),R.map(I=>I.getFieldIndex()+(I.isPlayer()?Bt.PLAYER:Bt.ENEMY))}getCommandOrder(){let A=this.getSpeedOrder();const s={};return this.scene.getField(!0).filter(R=>R.summonData).map(R=>{const n=new Lt(!1),I=new Lt(!0);Ct(wU,R,null,!1,n),Ct(vU,R,null,!1,n,I),I.value&&this.scene.applyModifiers(Na,R.isPlayer(),R,n),s[R.getBattlerIndex()]=n}),A=A.slice(0),A.sort((R,n)=>{const I=this.scene.currentBattle.turnCommands[R],a=this.scene.currentBattle.turnCommands[n];if((I==null?void 0:I.command)!==(a==null?void 0:a.command)){if((I==null?void 0:I.command)===NA.FIGHT)return 1;if((a==null?void 0:a.command)===NA.FIGHT)return-1}else if((I==null?void 0:I.command)===NA.FIGHT){const o=ye[I.move.move],l=ye[a.move.move],C=this.scene.getField(!0).find(G=>G.getBattlerIndex()===R),M=this.scene.getField(!0).find(G=>G.getBattlerIndex()===n),u=o.getPriority(C,!1),h=l.getPriority(M,!1),P=Math.ceil(u)-Math.ceil(h)===0;if(u!==h)return P&&s[R].value!==s[n].value?s[R].value?-1:1:u<h?1:-1}if(s[R].value!==s[n].value)return s[R].value?-1:1;const r=A.indexOf(R),S=A.indexOf(n);return r<S?-1:r>S?1:0}),A}start(){var n;super.start();const A=this.scene.getField(),s=this.getCommandOrder();let R=0;for(const I of s){const a=A[I],r=this.scene.currentBattle.turnCommands[I];if(!(r!=null&&r.skip))switch(r==null?void 0:r.command){case NA.FIGHT:const S=r.move;if(a.turnData.order=R++,!S)continue;const o=a.getMoveset().find(M=>(M==null?void 0:M.moveId)===S.move&&(M==null?void 0:M.ppUsed)<(M==null?void 0:M.getMovePp()))||new Ot(S.move);if(o.getMove().hasAttr(kr)&&this.scene.unshiftPhase(new f_(this.scene,a,o)),a.isPlayer())if(r.cursor===-1)this.scene.pushPhase(new HA(this.scene,a,r.targets||r.move.targets,o));else{const M=new HA(this.scene,a,r.targets||r.move.targets,o,!1,S.ignorePP);this.scene.pushPhase(M)}else this.scene.pushPhase(new HA(this.scene,a,r.targets||r.move.targets,o,!1,S.ignorePP));break;case NA.BALL:this.scene.unshiftPhase(new G_(this.scene,r.targets[0]%2,r.cursor));break;case NA.POKEMON:const l=(n=r.args)!=null&&n[0]?aA.BATON_PASS:aA.SWITCH;this.scene.unshiftPhase(new aR(this.scene,l,a.getFieldIndex(),r.cursor,!0,a.isPlayer()));break;case NA.RUN:let C=a;if(this.scene.currentBattle.double){const M=A.filter(u=>{if(u)return u.isPlayer()&&u.isActive()});if(M.length>1){const u=M[0].getStat(g.SPD)>M[1].getStat(g.SPD)?M[0]:M[1],h=M.find(P=>P.hasAbility(O.RUN_AWAY));C=h!==void 0?h:u}}this.scene.unshiftPhase(new H_(this.scene,C.getFieldIndex()));break}}this.scene.pushPhase(new g_(this.scene)),this.scene.pushPhase(new d_(this.scene)),this.scene.pushPhase(new K_(this.scene,s)),this.scene.pushPhase(new B_(this.scene)),this.end()}};L(IF,"TurnStartPhase");let m_=IF;const aF=class aF extends kO{constructor(A){super(A)}start(){if(super.start(),this.scene.getPlayerField().forEach(A=>{if(A.isOnField()&&!A.isAllowedInBattle()){this.scene.queueMessage(D.t("challenges:illegalEvolution",{pokemon:A.name}),null,!0);const s=this.scene.getPokemonAllowedInBattle();s.length?s.length>=this.scene.currentBattle.getBattlerCount()||this.scene.currentBattle.double&&!s[0].isActive(!0)?A.switchOut():A.leaveField():(this.scene.clearPhaseQueue(),this.scene.unshiftPhase(new CO(this.scene))),s.length===1&&this.scene.currentBattle.double&&this.scene.unshiftPhase(new lO(this.scene,!0))}}),this.scene.eventTarget.dispatchEvent(new bh),cZ(this.scene),_Z(this.scene)){this.end();return}this.scene.getField().forEach((A,s)=>{A!=null&&A.isActive()&&(A.isPlayer()&&this.scene.currentBattle.addParticipant(A),A.resetTurnData(),this.scene.pushPhase(A.isPlayer()?new AS(this.scene,s):new P_(this.scene,s-Bt.ENEMY)))}),this.scene.pushPhase(new m_(this.scene)),this.end()}};L(aF,"TurnInitPhase");let F_=aF;var Or=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.ONLY_LEVEL_UP=1]="ONLY_LEVEL_UP",E[E.SKIP=2]="SKIP",E))(Or||{});const rF=class rF extends Hr{constructor(A,s,R,n){super(A,s),this.pokemon=this.getPlayerPokemon(),this.lastLevel=R,this.level=n}start(){super.start(),this.level>this.scene.gameData.gameStats.highestLevel&&(this.scene.gameData.gameStats.highestLevel=this.level),this.scene.validateAchvs(tr,new Rt(this.level));const A=this.pokemon.stats.slice(0);this.pokemon.calculateStats(),this.pokemon.updateInfo(),this.scene.expParty===Or.DEFAULT?(this.scene.playSound("level_up_fanfare"),this.scene.ui.showText(D.t("battle:levelUp",{pokemonName:ee(this.pokemon),level:this.level}),null,()=>this.scene.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,A,!1).then(()=>this.end()),null,!0)):this.scene.expParty===Or.SKIP?this.end():this.scene.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,A,!1).then(()=>this.end())}end(){if(this.lastLevel<100){const A=this.getPokemon().getLevelMoves(this.lastLevel+1);for(const s of A)this.scene.unshiftPhase(new kn(this.scene,this.partyMemberIndex,s[1]))}if(!this.pokemon.pauseEvolutions){const A=this.pokemon.getEvolution();A&&this.scene.unshiftPhase(new iS(this.scene,this.pokemon,A,this.lastLevel))}return super.end()}};L(rF,"LevelUpPhase");let IS=rF;const LF=class LF extends Hr{constructor(A,s,R){super(A,s),this.expValue=R}start(){super.start();const A=this.getPokemon(),s=new Rt(this.expValue);this.scene.applyModifiers(EL,!0,s),s.value=Math.floor(s.value),this.scene.ui.showText(D.t("battle:expGain",{pokemonName:ee(A),exp:s.value}),null,()=>{const R=A.level;A.addExp(s.value);const n=A.level;n>R&&this.scene.unshiftPhase(new IS(this.scene,this.partyMemberIndex,R,n)),A.updateInfo().then(()=>this.end())},null,!0)}};L(LF,"ExpPhase");let p_=LF;const NF=class NF extends GE{constructor(A){super(A)}start(){super.start(),this.scene.partyExpBar.hide().then(()=>this.end())}};L(NF,"HidePartyExpBarPhase");let W_=NF;const TF=class TF extends Hr{constructor(A,s,R){super(A,s),this.expValue=R}start(){super.start();const A=this.getPokemon(),s=new Rt(this.expValue);this.scene.applyModifiers(EL,!0,s),s.value=Math.floor(s.value);const R=A.level;A.addExp(s.value);const n=A.level;n>R&&this.scene.unshiftPhase(new IS(this.scene,this.partyMemberIndex,R,n)),this.scene.unshiftPhase(new W_(this.scene)),A.updateInfo(),this.scene.expParty===Or.SKIP?this.end():this.scene.expParty===Or.ONLY_LEVEL_UP?n>R?this.scene.partyExpBar.showPokemonExp(A,s.value,this.scene.expParty===Or.ONLY_LEVEL_UP,n).then(()=>{setTimeout(()=>this.end(),800/Math.pow(2,this.scene.expGainsSpeed))}):this.end():this.scene.expGainsSpeed<er.SKIP?this.scene.partyExpBar.showPokemonExp(A,s.value,!1,n).then(()=>{setTimeout(()=>this.end(),500/Math.pow(2,this.scene.expGainsSpeed))}):this.end()}};L(TF,"ShowPartyExpBarPhase");let Y_=TF;const Ss=!0,Hb=(Array.isArray(Ye.OPP_IVS_OVERRIDE)?Ye.OPP_IVS_OVERRIDE:new Array(6).fill(Ye.OPP_IVS_OVERRIDE)).map(E=>isNaN(E)||E===null||E>31?-1:E),pL=Ye.STARTING_WAVE_OVERRIDE||1,Ph=[];let RR;const SF=class SF extends ul{constructor(){super("battle"),this.sessionPlayTime=null,this.lastSavePlayTime=null,this.masterVolume=.5,this.bgmVolume=1,this.fieldVolume=1,this.seVolume=1,this.uiVolume=1,this.gameSpeed=1,this.damageNumbersMode=0,this.reroll=!1,this.shopCursorTarget=Fn.REWARDS,this.showMovesetFlyout=!0,this.showArenaFlyout=!0,this.showTimeOfDayWidget=!0,this.timeOfDayAnimation=YT.NONE,this.showLevelUpStats=!0,this.enableTutorials=!1,this.enableMoveInfo=!0,this.enableRetries=!1,this.hideIvs=!1,this.candyUpgradeNotification=0,this.candyUpgradeDisplay=0,this.moneyFormat=Wh.NORMAL,this.uiTheme=NO.DEFAULT,this.windowType=0,this.experimentalSprites=!1,this.musicPreference=Er.MIXED,this.moveAnimations=!0,this.expGainsSpeed=er.DEFAULT,this.skipSeenDialogues=!1,this.eggSkipPreference=0,this.expParty=0,this.hpBarSpeed=0,this.fusionPaletteSwaps=!0,this.enableTouchControls=!1,this.enableVibration=!1,this.showBgmBar=!0,this.battleStyle=L1.SWITCH,this.typeHints=!1,this.disableMenu=!1,this.mysteryEncounterSaveData=new dr,this.shopOverlayShown=!1,this.shopOverlayOpacity=.8,this.bgmCache=new Set,this.rngCounter=0,this.rngSeedOverride="",this.rngOffset=0,this.infoToggles=[],this.eventTarget=new EventTarget,this.phaseQueue=[],this.phaseQueuePrepend=[],this.conditionalQueue=[],this.phaseQueuePrependSpliceIndex=-1,this.nextCommandPhaseQueue=[],this.eventManager=new v0,this.updateGameInfo()}loadPokemonAtlas(A,s,R){R===void 0&&(R=this.experimentalSprites);const n=s.includes("variant/")||/_[0-3]$/.test(s);R&&(R=this.hasExpSprite(A)),n&&(s=s.replace("variant/","")),this.load.atlas(A,`images/pokemon/${n?"variant/":""}${R?"exp/":""}${s}.png`,`images/pokemon/${n?"variant/":""}${R?"exp/":""}${s}.json`)}loadPokemonVariantAssets(A,s,R){this.experimentalSprites&&this.hasExpSprite(A)&&(s=`exp/${s}`);let I=Zs;s.split("/").map(r=>I?I=I[r]:null);const a=I;a&&R!==void 0&&a[R]===1&&L(S=>new Promise(o=>{if(CI.hasOwnProperty(S))return o();this.cachedFetch(`./images/pokemon/variant/${s}.json`).then(l=>l.json()).then(l=>{CI[S]=l,o()})}),"populateVariantColors")(A)}async preload(){iJ(),await this.initVariantData()}create(){this.scene.remove(cD.KEY),NQ.apply(this),this.inputController=new N_(this),this.uiInputs=new T_(this,this.inputController),this.gameData=new hC(this),e7(this),this.load.setBaseURL(),this.spritePipeline=new R_(this.game),this.renderer.pipelines.add("Sprite",this.spritePipeline),this.fieldSpritePipeline=new FC(this.game),this.renderer.pipelines.add("FieldSprite",this.fieldSpritePipeline),this.launchBattle()}update(){var A;(A=this.ui)==null||A.update()}launchBattle(){this.arenaBg=this.add.sprite(0,0,"plains_bg"),this.arenaBg.setName("sprite-arena-bg"),this.arenaBgTransition=this.add.sprite(0,0,"plains_bg"),this.arenaBgTransition.setName("sprite-arena-bg-transition"),[this.arenaBgTransition,this.arenaBg].forEach(C=>{C.setPipeline(this.fieldSpritePipeline),C.setScale(6),C.setOrigin(0),C.setSize(320,240)});const A=this.add.container(0,0);A.setName("field"),A.setScale(6),this.field=A;const s=this.add.container(0,this.game.canvas.height);s.setName("field-ui"),s.setDepth(1),s.setScale(6),this.fieldUI=s;const R=this.make.rexTransitionImagePack({x:0,y:0,scale:6,key:"loading_bg",origin:{x:0,y:0}},!0);R.transit({mode:"blinds",ease:"Cubic.easeInOut",duration:1250}),R.once("complete",()=>{R.destroy()}),this.add.existing(R);const n=this.add.container(0,0);n.setName("ui"),n.setDepth(2),n.setScale(6),this.uiContainer=n;const I=this.game.canvas.width/6,a=this.game.canvas.height/6-48;this.fieldOverlay=this.add.rectangle(0,a*-1-48,I,a,4342338),this.fieldOverlay.setName("rect-field-overlay"),this.fieldOverlay.setOrigin(0,0),this.fieldOverlay.setAlpha(0),this.fieldUI.add(this.fieldOverlay),this.shopOverlay=this.add.rectangle(0,a*-1-48,I,a,460551),this.shopOverlay.setName("rect-shop-overlay"),this.shopOverlay.setOrigin(0,0),this.shopOverlay.setAlpha(0),this.fieldUI.add(this.shopOverlay),this.modifiers=[],this.enemyModifiers=[],this.modifierBar=new XS(this),this.modifierBar.setName("modifier-bar"),this.add.existing(this.modifierBar),n.add(this.modifierBar),this.enemyModifierBar=new XS(this,!0),this.enemyModifierBar.setName("enemy-modifier-bar"),this.add.existing(this.enemyModifierBar),n.add(this.enemyModifierBar),this.charSprite=new I_(this),this.charSprite.setName("sprite-char"),this.charSprite.setup(),this.fieldUI.add(this.charSprite),this.pbTray=new pC(this,!0),this.pbTray.setName("pb-tray"),this.pbTray.setup(),this.pbTrayEnemy=new pC(this,!1),this.pbTrayEnemy.setName("enemy-pb-tray"),this.pbTrayEnemy.setup(),this.fieldUI.add(this.pbTray),this.fieldUI.add(this.pbTrayEnemy),this.abilityBar=new s_(this),this.abilityBar.setName("ability-bar"),this.abilityBar.setup(),this.fieldUI.add(this.abilityBar),this.partyExpBar=new O_(this),this.partyExpBar.setName("party-exp-bar"),this.partyExpBar.setup(),this.fieldUI.add(this.partyExpBar),this.candyBar=new r_(this),this.candyBar.setName("candy-bar"),this.candyBar.setup(),this.fieldUI.add(this.candyBar),this.biomeWaveText=le(this,this.game.canvas.width/6-2,0,pL.toString(),X.BATTLE_INFO),this.biomeWaveText.setName("text-biome-wave"),this.biomeWaveText.setOrigin(1,.5),this.fieldUI.add(this.biomeWaveText),this.moneyText=le(this,this.game.canvas.width/6-2,0,"",X.MONEY),this.moneyText.setName("text-money"),this.moneyText.setOrigin(1,.5),this.fieldUI.add(this.moneyText),this.scoreText=le(this,this.game.canvas.width/6-2,0,"",X.PARTY,{fontSize:"54px"}),this.scoreText.setName("text-score"),this.scoreText.setOrigin(1,.5),this.fieldUI.add(this.scoreText),this.luckText=le(this,this.game.canvas.width/6-2,0,"",X.PARTY,{fontSize:"54px"}),this.luckText.setName("text-luck"),this.luckText.setOrigin(1,.5),this.luckText.setVisible(!1),this.fieldUI.add(this.luckText),this.luckLabelText=le(this,this.game.canvas.width/6-2,0,D.t("common:luckIndicator"),X.PARTY,{fontSize:"54px"}),this.luckLabelText.setName("text-luck-label"),this.luckLabelText.setOrigin(1,.5),this.luckLabelText.setVisible(!1),this.fieldUI.add(this.luckLabelText),this.arenaFlyout=new o_(this),this.fieldUI.add(this.arenaFlyout),this.fieldUI.moveBelow(this.arenaFlyout,this.fieldOverlay),this.updateUIPositions(),this.damageNumberHandler=new a_,this.spriteSparkleHandler=new i_,this.spriteSparkleHandler.setup(this),this.pokemonInfoContainer=new XT(this,this.game.canvas.width/6+52,-(this.game.canvas.height/6)+66),this.pokemonInfoContainer.setup(),this.fieldUI.add(this.pokemonInfoContainer),this.party=[];const r=[];this.arenaPlayer=new Ja(this,!0),this.arenaPlayer.setName("arena-player"),this.arenaPlayerTransition=new Ja(this,!0),this.arenaPlayerTransition.setName("arena-player-transition"),this.arenaEnemy=new Ja(this,!1),this.arenaEnemy.setName("arena-enemy"),this.arenaNextEnemy=new Ja(this,!1),this.arenaNextEnemy.setName("arena-next-enemy"),this.arenaBgTransition.setVisible(!1),this.arenaPlayerTransition.setVisible(!1),this.arenaNextEnemy.setVisible(!1),[this.arenaPlayer,this.arenaPlayerTransition,this.arenaEnemy,this.arenaNextEnemy].forEach(C=>{C instanceof EE.GameObjects.Sprite&&C.setOrigin(0,0),A.add(C)});const S=this.addFieldSprite(0,0,`trainer_${this.gameData.gender===vt.FEMALE?"f":"m"}_back`);S.setOrigin(.5,1),S.setName("sprite-trainer"),A.add(S),this.trainer=S,this.anims.create({key:"prompt",frames:this.anims.generateFrameNumbers("prompt",{start:1,end:4}),frameRate:6,repeat:-1,showOnStart:!0}),this.anims.create({key:"tera_sparkle",frames:this.anims.generateFrameNumbers("tera_sparkle",{start:0,end:12}),frameRate:18,repeat:0,showOnStart:!0,hideOnComplete:!0}),this.reset(!1,!1,!0);const o=new E_(this);this.uiContainer.add(o),this.ui=o,o.setup();const l=[t.TACKLE,t.TAIL_WHIP,t.FOCUS_ENERGY,t.STRUGGLE];Promise.all([Promise.all(r),jQ(this).then(()=>AJ(this,!0)),Promise.all([t.TACKLE,t.TAIL_WHIP,t.FOCUS_ENERGY,t.STRUGGLE].map(C=>iL(this,C))).then(()=>IL(this,l,!0)),this.initStarterColors()]).then(()=>{this.pushPhase(new WC(this)),this.pushPhase(new $I(this)),this.shiftPhase()})}initSession(){this.sessionPlayTime===null&&(this.sessionPlayTime=0),this.lastSavePlayTime===null&&(this.lastSavePlayTime=0),this.playTimeTimer&&this.playTimeTimer.destroy(),this.playTimeTimer=this.time.addEvent({delay:Et(1e3),repeat:-1,callback:L(()=>{this.gameData&&this.gameData.gameStats.playTime++,this.sessionPlayTime!==null&&this.sessionPlayTime++,this.lastSavePlayTime!==null&&this.lastSavePlayTime++},"callback")}),this.updateBiomeWaveText(),this.updateMoneyText(),this.updateScoreText()}async initExpSprites(){Ph.length||this.cachedFetch("./exp-sprites.json").then(A=>A.json()).then(A=>{Array.isArray(A)&&Ph.push(...A),Promise.resolve()})}async initVariantData(){Object.keys(Zs).forEach(A=>delete Zs[A]),await this.cachedFetch("./images/pokemon/variant/_masterlist.json").then(A=>A.json()).then(A=>{if(Object.keys(A).forEach(s=>Zs[s]=A[s]),this.experimentalSprites){const s=Zs.exp,R=L(n=>{let I=Zs,a=s;n.map((r,S)=>{S<n.length-1?(I=I[r],a=a[r]):I.hasOwnProperty(r)&&a.hasOwnProperty(r)&&(["back","female"].includes(r)?R(n.concat(r)):I[r]=a[r])})},"traverseVariantData");Object.keys(s).forEach(n=>R([n]))}Promise.resolve()})}cachedFetch(A,s){const R=this.game.manifest;if(R){const n=R[`/${A.replace("./","")}`];n&&(A+=`?t=${n}`)}return fetch(A,s)}initStarterColors(){return new Promise(A=>{if(RR)return A();this.cachedFetch("./starter-colors.json").then(s=>s.json()).then(s=>{RR={},Object.keys(s).forEach(R=>{RR[R]=s[R]}),A()})})}hasExpSprite(A){const s=/^pkmn__?(back__)?(shiny__)?(female__)?(\d+)(\-.*?)?(?:_[1-3])?$/g.exec(A);if(!s)return!1;let R=s[4];return s[2]&&(R+="s"),s[1]&&(R+="b"),s[3]&&(R+="f"),s[5]&&(R+=s[5]),!!Ph.includes(R)}getPlayerParty(){return this.party}getPokemonAllowedInBattle(){return this.getPlayerParty().filter(A=>A.isAllowedInBattle())}getPlayerPokemon(A=!0){return this.getPlayerField().find(s=>s.isActive()&&(A||s.switchOutStatus===!1))}getPlayerField(){var s;const A=this.getPlayerParty();return A.slice(0,Math.min(A.length,(s=this.currentBattle)!=null&&s.double?2:1))}getEnemyParty(){var A;return((A=this.currentBattle)==null?void 0:A.enemyParty)??[]}getEnemyPokemon(A=!0){return this.getEnemyField().find(s=>s.isActive()&&(A||s.switchOutStatus===!1))}getEnemyField(){var s;const A=this.getEnemyParty();return A.slice(0,Math.min(A.length,(s=this.currentBattle)!=null&&s.double?2:1))}getField(A=!1){const s=new Array(4).fill(null),R=this.getPlayerField(),n=this.getEnemyField();return s.splice(0,R.length,...R),s.splice(2,n.length,...n),A?s.filter(I=>I==null?void 0:I.isActive()):s}redirectPokemonMoves(A,s){if(this.currentBattle.double!==!1&&s!=null&&s.isActive(!0)){let R;do R=this.findPhase(n=>n instanceof HA&&n.targets.length===1&&n.targets[0]===A.getBattlerIndex()&&n.pokemon.isPlayer()!==s.isPlayer()),R&&R.targets[0]!==s.getBattlerIndex()&&(R.targets[0]=s.getBattlerIndex());while(R)}}getModifierBar(A){return A?this.enemyModifierBar:this.modifierBar}addInfoToggle(A){this.infoToggles.push(A)}getInfoToggles(A=!1){return A?this.infoToggles.filter(s=>s==null?void 0:s.isActive()):this.infoToggles}getPokemonById(A){const s=L(R=>R.find(n=>n.id===A),"findInParty");return(s(this.getPlayerParty())||s(this.getEnemyParty()))??null}addPlayerPokemon(A,s,R,n,I,a,r,S,o,l,C){const M=new wE(this,A,s,R,n,I,a,r,S,o,l);return C&&C(M),M.init(),M}addEnemyPokemon(A,s,R,n=!1,I=!1,a,r){Ye.OPP_LEVEL_OVERRIDE>0&&(s=Ye.OPP_LEVEL_OVERRIDE),Ye.OPP_SPECIES_OVERRIDE&&(A=xe(Ye.OPP_SPECIES_OVERRIDE),n=this.getEncounterBossSegments(this.currentBattle.waveIndex,s,A)>1);const S=new rs(this,A,s,R,n,I,a);if(Ye.OPP_FUSION_OVERRIDE&&S.generateFusionSpecies(),n&&!a){const o=$d(_e(4294967296));for(let l=0;l<S.ivs.length;l++)S.ivs[l]=Math.round(EE.Math.Linear(Math.min(S.ivs[l],o[l]),Math.max(S.ivs[l],o[l]),.75))}r&&r(S);for(let o=0;o<S.ivs.length;o++)Hb[o]>-1&&(S.ivs[o]=Hb[o]);return S.init(),S}removePokemonFromPlayerParty(A,s=!0){if(!A)return;const R=this.party.indexOf(A);this.party.splice(R,1),s&&(this.field.remove(A,!0),A.destroy()),this.updateModifiers(!0)}addPokemonIcon(A,s,R,n=.5,I=.5,a=!1){const r=this.add.container(s,R);r.setName(`${A.name}-icon`);const S=this.add.sprite(0,0,A.getIconAtlasKey(a));if(S.setName(`sprite-${A.name}-icon`),S.setFrame(A.getIconId(!0)),S.frame.name!==A.getIconId(!0)){console.log(`${A.name}'s variant icon does not exist. Replacing with default.`);const o=A.shiny;A.shiny=!1,S.setTexture(A.getIconAtlasKey(a)),S.setFrame(A.getIconId(!0)),A.shiny=o}if(S.setOrigin(.5,0),r.add(S),A.isFusion()){const o=this.add.sprite(0,0,A.getFusionIconAtlasKey(a));o.setName("sprite-fusion-icon"),o.setOrigin(.5,0),o.setFrame(A.getFusionIconId(!0));const l=S.width,C=S.height,M=S.frame,u=(S.frame.cutHeight<=o.frame.cutHeight?Math.ceil:Math.floor)((S.frame.cutHeight+o.frame.cutHeight)/4),h=`${S.frame.name}f${o.frame.name}`;S.frame.texture.has(h)||S.frame.texture.add(h,S.frame.sourceIndex,S.frame.cutX,S.frame.cutY,S.frame.cutWidth,u),S.setFrame(h),o.y=S.frame.cutHeight;const P=o.frame,G=o.frame.cutY+S.frame.cutHeight,d=o.frame.cutHeight-S.frame.cutHeight,H=`${o.frame.name}f${S.frame.name}`;o.frame.texture.has(H)||o.frame.texture.add(H,o.frame.sourceIndex,o.frame.cutX,G,o.frame.cutWidth,d),o.setFrame(H);const f=(M.y+P.y)/2;S.frame.y=o.frame.y=f,r.add(o),n!==.5&&(r.x-=l*(n-.5)),I!==0&&(r.y-=C*I)}else n!==.5&&(r.x-=S.width*(n-.5)),I!==0&&(r.y-=S.height*I);return r}setSeed(A){this.seed=A,this.rngCounter=0,this.waveCycleOffset=this.getGeneratedWaveCycleOffset(),this.offsetGym=this.gameMode.isClassic&&this.getGeneratedOffsetGym()}randBattleSeedInt(A,s=0){var R;return(R=this.currentBattle)==null?void 0:R.randSeedInt(this,A,s)}reset(A=!1,s=!1,R=!1){var n,I,a;s&&(this.gameData=new hC(this)),this.gameMode=dl(SA.CLASSIC),this.disableMenu=!1,this.score=0,this.money=0,this.lockModifierTiers=!1,this.pokeballCounts=Object.fromEntries(uE(be).filter(r=>r<=be.MASTER_BALL).map(r=>[r,0])),this.pokeballCounts[be.POKEBALL]+=5,Ye.POKEBALL_OVERRIDE.active&&(this.pokeballCounts=Ye.POKEBALL_OVERRIDE.pokeballs),this.modifiers=[],this.enemyModifiers=[],this.modifierBar.removeAll(!0),this.enemyModifierBar.removeAll(!0);for(const r of this.getPlayerParty())r.destroy();this.party=[];for(const r of this.getEnemyParty())r.destroy();if((I=(n=this.currentBattle)==null?void 0:n.mysteryEncounter)!=null&&I.introVisuals&&this.field.remove((a=this.currentBattle.mysteryEncounter)==null?void 0:a.introVisuals,!0),this.currentBattle=null,this.setSeed(Ye.SEED_OVERRIDE||tM(24)),console.log("Seed:",this.seed),this.resetSeed(),this.biomeWaveText.setText(pL.toString()),this.biomeWaveText.setVisible(!1),this.updateMoneyText(),this.moneyText.setVisible(!1),this.updateScoreText(),this.scoreText.setVisible(!1),[this.luckLabelText,this.luckText].map(r=>r.setVisible(!1)),this.newArena(Ye.STARTING_BIOME_OVERRIDE||N.TOWN),this.field.setVisible(!0),this.arenaBgTransition.setPosition(0,0),this.arenaPlayer.setPosition(300,0),this.arenaPlayerTransition.setPosition(0,0),[this.arenaEnemy,this.arenaNextEnemy].forEach(r=>r.setPosition(-280,0)),this.arenaNextEnemy.setVisible(!1),this.arena.init(),this.trainer.setTexture(`trainer_${this.gameData.gender===vt.FEMALE?"f":"m"}_back`),this.trainer.setPosition(406,186),this.trainer.setVisible(!0),this.mysteryEncounterSaveData=new dr,this.updateGameInfo(),R){const r=[...fR,...ye,...LE,...uE(PE).map(S=>mT(S)).map(S=>Object.values(S).flat().map(o=>o.modifierType).filter(o=>"localize"in o).map(o=>o)).flat()];for(const S of r)S.localize()}A&&(this.initVariantData(),this.fadeOutBgm(250,!1),this.tweens.add({targets:[this.uiContainer],alpha:0,duration:250,ease:"Sine.easeInOut",onComplete:L(()=>{this.clearPhaseQueue(),this.children.removeAll(!0),this.game.domContainer.innerHTML="",this.launchBattle()},"onComplete")}))}getDoubleBattleChance(A,s){const R=new ZE(A%10===0?32:8);return this.applyModifiers(Qr,!0,R),s.forEach(n=>Ct(_I,n,null,!1,R)),Math.max(R.value,1)}newBattle(A,s,R,n,I){var P;const a=Ye.STARTING_WAVE_OVERRIDE||pL,r=A||(((P=this.currentBattle)==null?void 0:P.waveIndex)||a-1)+1;let S,o,l,C=null;this.resetSeed(r);const M=this.getPlayerField();if(this.gameMode.isFixedBattle(r)&&R===void 0)C=this.gameMode.getFixedBattle(r),S=C.double,o=C.battleType,this.executeWithSeedOffset(()=>l=C==null?void 0:C.getTrainer(this),(C.seedOffsetWaveIndex||r)<<8),l&&this.field.add(l);else{if(this.gameMode.hasTrainers?s===void 0?o=this.gameMode.isWaveTrainer(r,this.arena)?ht.TRAINER:ht.WILD:o=s:o=ht.WILD,o===ht.TRAINER){const G=this.arena.randomTrainerType(r);let d=!1;ZA[G].doubleOnly?d=!0:ZA[G].hasDouble&&(d=!_e(this.getDoubleBattleChance(r,M)),ZA[G].trainerTypeDouble&&![U.TATE,U.LIZA].includes(G)&&(d=!1));const H=d?OA.DOUBLE:_e(2)?OA.FEMALE:OA.DEFAULT;l=R!==void 0?R.toTrainer(this):new Ds(this,G,H),this.field.add(l)}(this.isWaveMysteryEncounter(o,r)||o===ht.MYSTERY_ENCOUNTER)&&(o=ht.MYSTERY_ENCOUNTER,this.mysteryEncounterSaveData.encounterSpawnChance=w6)}if(n===void 0&&r>1?o===ht.WILD&&!this.gameMode.isWaveFinal(r)?S=!_e(this.getDoubleBattleChance(r,M)):o===ht.TRAINER&&(S=(l==null?void 0:l.variant)===OA.DOUBLE):C||(S=!!n),this.gameMode.isEndlessBoss(r)&&(S=!1),!Ve(Ye.BATTLE_TYPE_OVERRIDE)){let G=null;switch(Ye.BATTLE_TYPE_OVERRIDE){case"double":G="double";break;case"single":G="single";break;case"even-doubles":G=r%2?"single":"double";break;case"odd-doubles":G=r%2?"double":"single";break}G==="double"&&(S=!0),o!==ht.TRAINER&&G==="single"&&(S=!1)}const u=this.currentBattle,h=this.getMaxExpLevel();if(this.lastEnemyTrainer=(u==null?void 0:u.trainer)??null,this.lastMysteryEncounter=u==null?void 0:u.mysteryEncounter,o===ht.MYSTERY_ENCOUNTER&&(S=!1),u!=null&&u.double&&!S&&(this.tryRemovePhase(G=>G instanceof Yi),this.getPlayerField().forEach(G=>G.lapseTag(Y.COMMANDED))),this.executeWithSeedOffset(()=>{this.currentBattle=new w_(this.gameMode,r,o,l,S)},r<<3,this.waveSeed),this.currentBattle.incrementTurn(this),o===ht.MYSTERY_ENCOUNTER&&(this.currentBattle.mysteryEncounterType=I),!A&&u){const G=!(u.waveIndex%10),d=this.gameMode.hasShortBiomes||this.gameMode.isDaily,H=this.gameMode.hasShortBiomes&&u.waveIndex%5===0,f=u.waveIndex%50===49,K=G||H||d&&f,W=K||[ht.TRAINER,ht.MYSTERY_ENCOUNTER].includes(this.currentBattle.battleType)||this.currentBattle.battleSpec===TE.FINAL_BOSS;if(this.getEnemyParty().forEach(V=>V.destroy()),this.trySpreadPokerus(),!K&&r%10===5&&this.arena.updatePoolsForTimeOfDay(),W){this.arena.resetArenaEffects(),M.forEach(V=>V.lapseTag(Y.COMMANDED)),M.forEach((V,k)=>{V.isOnField()&&this.pushPhase(new Mr(this,k))});for(const V of this.getPlayerParty())V.resetBattleData(),q6(mr,V);this.trainer.visible||this.pushPhase(new uC(this))}for(const V of this.getPlayerParty())this.triggerPokemonFormChange(V,Ic);!this.gameMode.hasRandomBiomes&&!K?this.pushPhase(new YC(this)):(this.pushPhase(new __(this)),this.pushPhase(new D_(this)),this.getMaxExpLevel()>h&&this.pushPhase(new l_(this)))}return this.currentBattle}newArena(A){return this.arena=new hD(this,A,N[A].toLowerCase()),this.eventTarget.dispatchEvent(new Zh),this.arenaBg.pipelineData={terrainColorRatio:this.arena.getBgTerrainColorRatioForBiome()},this.arena}updateFieldScale(){return new Promise(A=>{const s=Math.floor(Math.pow(1/this.getField(!0).map(R=>R.getSpriteScale()).reduce((R,n)=>R=Math.max(n,R),0),.7)*40)/40;this.setFieldScale(s).then(()=>A())})}setFieldScale(A,s=!1){return new Promise(R=>{if(A*=6,this.field.scale===A)return R();const n=this.arenaBg.width*6,I=132*6,a=this.arenaBg.width*A,r=132*A;this.tweens.add({targets:this.field,scale:A,x:(n-a)/2,y:I-r,duration:s?0:Et(Math.abs(this.field.scale-A)*200),ease:"Sine.easeInOut",onComplete:L(()=>R(),"onComplete")})})}getSpeciesFormIndex(A,s,R,n){var I,a,r,S,o,l;if(!((I=A.forms)!=null&&I.length))return 0;switch(A.speciesId){case e.UNOWN:case e.SHELLOS:case e.GASTRODON:case e.BASCULIN:case e.DEERLING:case e.SAWSBUCK:case e.FROAKIE:case e.FROGADIER:case e.SCATTERBUG:case e.SPEWPA:case e.VIVILLON:case e.FLABEBE:case e.FLOETTE:case e.FLORGES:case e.FURFROU:case e.PUMPKABOO:case e.GOURGEIST:case e.ORICORIO:case e.MAGEARNA:case e.ZARUDE:case e.SQUAWKABILLY:case e.TATSUGIRI:case e.PALDEA_TAUROS:return _e(A.forms.length);case e.PIKACHU:return((a=this.currentBattle)==null?void 0:a.battleType)===ht.TRAINER&&((r=this.currentBattle)==null?void 0:r.waveIndex)<30?0:_e(8);case e.EEVEE:return((S=this.currentBattle)==null?void 0:S.battleType)===ht.TRAINER&&((o=this.currentBattle)==null?void 0:o.waveIndex)<30?0:_e(2);case e.GRENINJA:return((l=this.currentBattle)==null?void 0:l.battleType)===ht.TRAINER?0:_e(2);case e.ZYGARDE:return _e(4);case e.MINIOR:return _e(7);case e.ALCREMIE:return _e(9);case e.MEOWSTIC:case e.INDEEDEE:case e.BASCULEGION:case e.OINKOLOGNE:return s===je.FEMALE?1:0;case e.TOXTRICITY:const C=[At.LONELY,At.BOLD,At.RELAXED,At.TIMID,At.SERIOUS,At.MODEST,At.MILD,At.QUIET,At.BASHFUL,At.CALM,At.GENTLE,At.CAREFUL];return R!==void 0&&C.indexOf(R)>-1?1:0;case e.GIMMIGHOUL:return this.gameMode.hasMysteryEncounters?1:_e(A.forms.length)}if(n){switch(A.speciesId){case e.BURMY:case e.WORMADAM:case e.ROTOM:case e.LYCANROC:return _e(A.forms.length)}return 0}return this.arena.getSpeciesFormIndex(A)}getGeneratedOffsetGym(){let A=!1;return this.executeWithSeedOffset(()=>{A=!_e(2)},0,this.seed.toString()),A}getGeneratedWaveCycleOffset(){let A=0;return this.executeWithSeedOffset(()=>{A=_e(8)*5},0,this.seed.toString()),A}getEncounterBossSegments(A,s,R,n=!1){if(Ye.OPP_HEALTH_SEGMENTS_OVERRIDE>1)return Ye.OPP_HEALTH_SEGMENTS_OVERRIDE;if(Ye.OPP_HEALTH_SEGMENTS_OVERRIDE===1)return 0;if(this.gameMode.isDaily&&this.gameMode.isWaveFinal(A))return 5;let I;if(n||R&&(R.subLegendary||R.legendary||R.mythical)?I=!0:this.executeWithSeedOffset(()=>{I=A%10===0||this.gameMode.hasRandomBosses&&_e(100)<Math.min(Math.max(Math.ceil((A-250)/50),0)*2,30)},A<<2),!I)return 0;let a=2;return s>=100&&a++,R&&R.baseTotal>=670&&a++,a+=Math.floor(A/250),a}trySpreadPokerus(){const A=this.getPlayerParty(),s=[],R=L((n,I)=>{const a=A[n+I];!a.pokerus&&!_e(10)&&(a.pokerus=!0,s.push(n+I))},"spread");A.forEach((n,I)=>{!n.pokerus||s.indexOf(I)>-1||this.executeWithSeedOffset(()=>{I&&R(I,-1),I<A.length-1&&R(I,1)},this.currentBattle.waveIndex+(I<<8))})}resetSeed(A){var R;const s=A||((R=this.currentBattle)==null?void 0:R.waveIndex)||0;this.waveSeed=yh(this.seed,s),EE.Math.RND.sow([this.waveSeed]),console.log("Wave Seed:",this.waveSeed,s),this.rngCounter=0}executeWithSeedOffset(A,s,R){if(!A)return;const n=this.rngCounter,I=this.rngOffset,a=this.rngSeedOverride,r=EE.Math.RND.state();EE.Math.RND.sow([yh(R||this.seed,s)]),this.rngCounter=0,this.rngOffset=s,this.rngSeedOverride=R||"",A(),EE.Math.RND.state(r),this.rngCounter=n,this.rngOffset=I,this.rngSeedOverride=a}addFieldSprite(A,s,R,n,I=0){const a=this.add.sprite(A,s,R,n);return a.setPipeline(this.fieldSpritePipeline),I&&(a.pipelineData.terrainColorRatio=I),a}addPokemonSprite(A,s,R,n,I,a=!1,r=!1){const S=this.addFieldSprite(s,R,n,I);return this.initPokemonSprite(S,A,a,r),S}initPokemonSprite(A,s,R=!1,n=!1){return A.setPipeline(this.spritePipeline,{tone:[0,0,0,0],hasShadow:R,ignoreOverride:n,teraColor:s?dR(s.getTeraType()):void 0}),this.spriteSparkleHandler.add(A),A}moveBelowOverlay(A){this.fieldUI.moveBelow(A,this.fieldOverlay)}processInfoButton(A){this.arenaFlyout.toggleFlyout(A)}showFieldOverlay(A){return new Promise(s=>{this.tweens.add({targets:this.fieldOverlay,alpha:.5,ease:"Sine.easeOut",duration:A,onComplete:L(()=>s(),"onComplete")})})}hideFieldOverlay(A){return new Promise(s=>{this.tweens.add({targets:this.fieldOverlay,alpha:0,duration:A,ease:"Cubic.easeIn",onComplete:L(()=>s(),"onComplete")})})}updateShopOverlayOpacity(A){this.shopOverlayOpacity=A,this.shopOverlayShown&&this.shopOverlay.setAlpha(this.shopOverlayOpacity)}showShopOverlay(A){return this.shopOverlayShown=!0,new Promise(s=>{this.tweens.add({targets:this.shopOverlay,alpha:this.shopOverlayOpacity,ease:"Sine.easeOut",duration:A,onComplete:L(()=>s(),"onComplete")})})}hideShopOverlay(A){return this.shopOverlayShown=!1,new Promise(s=>{this.tweens.add({targets:this.shopOverlay,alpha:0,duration:A,ease:"Cubic.easeIn",onComplete:L(()=>s(),"onComplete")})})}showEnemyModifierBar(){this.enemyModifierBar.setVisible(!0)}hideEnemyModifierBar(){this.enemyModifierBar.setVisible(!1)}updateBiomeWaveText(){const A=!(this.currentBattle.waveIndex%10),s=RL(this.arena.biomeType);this.fieldUI.moveAbove(this.biomeWaveText,this.luckText),this.biomeWaveText.setText(s+" - "+this.currentBattle.waveIndex.toString()),this.biomeWaveText.setColor(A?"#f89890":"#ffffff"),this.biomeWaveText.setShadowColor(A?"#984038":"#636363"),this.biomeWaveText.setVisible(!0)}updateMoneyText(A=!0){if(this.money===void 0)return;const s=Go(this.moneyFormat,this.money);this.moneyText.setText(D.t("battleScene:moneyOwned",{formattedMoney:s})),this.fieldUI.moveAbove(this.moneyText,this.luckText),A&&this.moneyText.setVisible(!0)}animateMoneyChanged(A){if(this.tweens.getTweensOf(this.moneyText).length>0)return;const s=this.moneyText.scale*.14*(A?1:-1);this.moneyText.setShadowColor(A?"#008000":"#FF0000"),this.tweens.add({targets:this.moneyText,duration:250,scale:this.moneyText.scale+s,loop:0,yoyo:!0,onComplete:L(R=>this.moneyText.setShadowColor(IA(X.MONEY,!0)),"onComplete")})}updateScoreText(){this.scoreText.setText(`Score: ${this.score.toString()}`),this.scoreText.setVisible(this.gameMode.isDaily)}updateAndShowText(A){const s=[this.luckLabelText,this.luckText];s.forEach(n=>n.setAlpha(0));const R=pi(this.getPlayerParty());this.luckText.setText(O6(R)),R<14?this.luckText.setTint(n6(R)):this.luckText.setTint(16772956,4718441,7039999,16738665),this.luckLabelText.setX(this.game.canvas.width/6-2-(this.luckText.displayWidth+2)),this.tweens.add({targets:s,duration:A,alpha:1,onComplete:L(()=>{s.forEach(n=>n.setVisible(!0))},"onComplete")})}hideLuckText(A){if(this.reroll)return;const s=[this.luckLabelText,this.luckText];this.tweens.add({targets:s,duration:A,alpha:0,onComplete:L(()=>{s.forEach(R=>R.setVisible(!1))},"onComplete")})}updateUIPositions(){var n;const A=this.enemyModifiers.filter(I=>I.isIconVisible(this)).length,s=this.biomeWaveText.getBottomLeft().y-this.biomeWaveText.getTopLeft().y;this.biomeWaveText.setY(-(this.game.canvas.height/6)+(A?A<=12?15:24:0)+s/2),this.moneyText.setY(this.biomeWaveText.y+10),this.scoreText.setY(this.moneyText.y+10),[this.luckLabelText,this.luckText].map(I=>I.setY((this.scoreText.visible?this.scoreText:this.moneyText).y+10));const R=(this.scoreText.visible?this.scoreText:this.moneyText).y+15;this.partyExpBar.setY(R),this.candyBar.setY(R+15),(n=this.ui)==null||n.achvBar.setY(this.game.canvas.height/6+R)}sendTextToBack(){this.fieldUI.sendToBack(this.biomeWaveText),this.fieldUI.sendToBack(this.moneyText),this.fieldUI.sendToBack(this.scoreText)}addFaintedEnemyScore(A){let s=A.getSpeciesForm().getBaseExp()*(A.level/this.getMaxExpLevel())*(A.ivs.reduce((R,n)=>n+=R,0)/93*.2+.8);this.findModifiers(R=>R instanceof Ht&&R.pokemonId===A.id,!1).map(R=>s*=R.getScoreMultiplier()),A.isBoss()&&(s*=Math.sqrt(A.bossSegments)),this.currentBattle.battleScore+=Math.ceil(s)}getMaxExpLevel(A){var I;if(A)return Number.MAX_SAFE_INTEGER;const s=Math.ceil((((I=this.currentBattle)==null?void 0:I.waveIndex)||1)/10)*10,R=this.gameMode.getWaveForDifficulty(s),n=(1+R/2+Math.pow(R/25,2))*1.2;return Math.ceil(n/2)*2+2}randomSpecies(A,s,R,n,I){if(R)return this.arena.randomSpecies(A,s,void 0,pi(this.party));const a=n?[...new Set(fR.filter(r=>r.isCatchable()).filter(n).map(r=>{if(!I)for(;QA.hasOwnProperty(r.speciesId);)r=xe(QA[r.speciesId]);return r}))]:fR.filter(r=>r.isCatchable());return a[_e(a.length)]}generateRandomBiome(A){const s=A%250,R=uE(N).slice(1,uE(N).filter(o=>o>=40).length*-1),n=KO[N.END][0]-2,I=new Array(n+1).fill(null).map((o,l)=>(1-Math.min(Math.abs(l/(n-1)-s/250)+.25,1))/.75*250),a=[];let r=0;for(const o of R)r+=Math.ceil(I[KO[o][0]-1]/KO[o][1]),a.push(r);const S=_e(r);for(const o of R)if(S<a[o])return o;return R[_e(R.length)]}isBgmPlaying(){return this.bgm&&this.bgm.isPlaying}playBgm(A,s){var a,r;if(A===void 0&&(A=((a=this.currentBattle)==null?void 0:a.getBgmOverride(this))||((r=this.arena)==null?void 0:r.bgm)),this.bgm&&A===this.bgm.key){this.bgm.isPlaying||this.bgm.play({volume:this.masterVolume*this.bgmVolume});return}s&&!this.bgm&&(s=!1),this.bgmCache.add(A),this.loadBgm(A);let R=0;R=A===this.arena.bgm?this.arena.getBgmLoopPoint():this.getBgmLoopPoint(A);let n=!1;const I=L(()=>{if(this.ui.bgmBar.setBgmToBgmBar(A),A===null&&this.bgm&&!this.bgm.pendingRemove){this.bgm.play({volume:this.masterVolume*this.bgmVolume});return}this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPlaying&&this.bgm.stop(),this.bgm=this.sound.add(A,{loop:!0}),this.bgm.play({volume:this.masterVolume*this.bgmVolume}),R&&this.bgm.on("looped",()=>this.bgm.play({seek:R}))},"playNewBgm");if(this.load.once(EE.Loader.Events.COMPLETE,()=>{n=!0,(!s||!this.bgm.isPlaying)&&I()}),s){const S=L(()=>{n&&(!this.bgm.isPlaying||this.bgm.pendingRemove)&&I()},"onBgmFaded");this.time.delayedCall(this.fadeOutBgm(500,!0)?750:250,S)}this.load.isLoading()||this.load.start()}pauseBgm(){return this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPlaying?(this.bgm.pause(),!0):!1}resumeBgm(){return this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPaused?(this.bgm.resume(),!0):!1}updateSoundVolume(){if(this.sound)for(const A of this.sound.getAllPlaying())if(this.bgmCache.has(A.key))A.setVolume(this.masterVolume*this.bgmVolume);else{const s=A.key.split("/");switch(s[0]){case"battle_anims":case"cry":s[1].startsWith("PRSFX- ")?A.setVolume(this.masterVolume*this.fieldVolume*.5):A.setVolume(this.masterVolume*this.fieldVolume);break;case"se":case"ui":A.setVolume(this.masterVolume*this.seVolume)}}}fadeOutBgm(A=500,s=!0){return this.bgm&&this.sound.getAllPlaying().find(n=>n.key===this.bgm.key)?($R.fadeOut(this,this.bgm,A,s),!0):!1}fadeAndSwitchBgm(A,s=!1,R=2e3){this.fadeOutBgm(R,s),this.time.delayedCall(R,()=>{this.playBgm(A)})}playSound(A,s){const R=typeof A=="string"?A:A.key;s=s??{};try{const n=R.split("/");switch(s.volume=s.volume??1,n[0]){case"level_up_fanfare":case"item_fanfare":case"minor_fanfare":case"heal":case"evolution":case"evolution_fanfare":s.volume*=this.masterVolume*this.bgmVolume;break;case"battle_anims":case"cry":s.volume*=this.masterVolume*this.fieldVolume,n[1].startsWith("PRSFX- ")&&(s.volume*=.5);break;case"ui":s.volume*=this.masterVolume*this.uiVolume;break;case"se":s.volume*=this.masterVolume*this.seVolume;break}return this.sound.play(R,s),this.sound.get(R)}catch{return console.log(`${R} not found`),A}}playSoundWithoutBgm(A,s){this.bgmCache.add(A);const R=this.pauseBgm();this.playSound(A);const n=this.sound.get(A);return this.bgmResumeTimer&&this.bgmResumeTimer.destroy(),R&&(this.bgmResumeTimer=this.time.delayedCall(s||Et(n.totalDuration*1e3),()=>{this.resumeBgm(),this.bgmResumeTimer=null})),n}getBgmLoopPoint(A){switch(A){case"battle_kanto_champion":return 13.95;case"battle_johto_champion":return 23.498;case"battle_hoenn_champion_g5":return 11.328;case"battle_hoenn_champion_g6":return 11.762;case"battle_sinnoh_champion":return 12.235;case"battle_champion_alder":return 27.653;case"battle_champion_iris":return 10.145;case"battle_kalos_champion":return 10.38;case"battle_alola_champion":return 13.025;case"battle_galar_champion":return 61.635;case"battle_champion_geeta":return 37.447;case"battle_champion_nemona":return 14.914;case"battle_champion_kieran":return 7.206;case"battle_hoenn_elite":return 11.35;case"battle_unova_elite":return 17.73;case"battle_kalos_elite":return 12.34;case"battle_alola_elite":return 19.212;case"battle_galar_elite":return 164.069;case"battle_paldea_elite":return 12.77;case"battle_bb_elite":return 19.434;case"battle_final_encounter":return 19.159;case"battle_final":return 16.453;case"battle_kanto_gym":return 13.857;case"battle_johto_gym":return 12.911;case"battle_hoenn_gym":return 12.379;case"battle_sinnoh_gym":return 13.122;case"battle_unova_gym":return 19.145;case"battle_kalos_gym":return 44.81;case"battle_galar_gym":return 171.262;case"battle_paldea_gym":return 127.489;case"battle_legendary_kanto":return 32.966;case"battle_legendary_raikou":return 12.632;case"battle_legendary_entei":return 2.905;case"battle_legendary_suicune":return 12.636;case"battle_legendary_lugia":return 19.77;case"battle_legendary_ho_oh":return 17.668;case"battle_legendary_regis_g5":return 49.5;case"battle_legendary_regis_g6":return 21.13;case"battle_legendary_gro_kyo":return 10.547;case"battle_legendary_rayquaza":return 10.495;case"battle_legendary_deoxys":return 13.333;case"battle_legendary_lake_trio":return 16.887;case"battle_legendary_sinnoh":return 22.77;case"battle_legendary_dia_pal":return 16.009;case"battle_legendary_origin_forme":return 18.961;case"battle_legendary_giratina":return 10.451;case"battle_legendary_arceus":return 9.595;case"battle_legendary_unova":return 13.855;case"battle_legendary_kyurem":return 18.314;case"battle_legendary_res_zek":return 18.329;case"battle_legendary_xern_yvel":return 26.468;case"battle_legendary_tapu":return 0;case"battle_legendary_sol_lun":return 6.525;case"battle_legendary_ub":return 9.818;case"battle_legendary_dusk_dawn":return 5.211;case"battle_legendary_ultra_nec":return 10.344;case"battle_legendary_zac_zam":return 11.424;case"battle_legendary_glas_spec":return 12.503;case"battle_legendary_calyrex":return 50.641;case"battle_legendary_riders":return 18.155;case"battle_legendary_birds_galar":return .175;case"battle_legendary_ruinous":return 6.333;case"battle_legendary_kor_mir":return 6.442;case"battle_legendary_loyal_three":return 6.5;case"battle_legendary_ogerpon":return 14.335;case"battle_legendary_terapagos":return 24.377;case"battle_legendary_pecharunt":return 6.508;case"battle_rival":return 14.11;case"battle_rival_2":return 17.714;case"battle_rival_3":return 17.586;case"battle_trainer":return 13.686;case"battle_wild":return 12.703;case"battle_wild_strong":return 13.94;case"end_summit":return 30.025;case"battle_rocket_grunt":return 12.707;case"battle_aqua_magma_grunt":return 12.062;case"battle_galactic_grunt":return 13.043;case"battle_plasma_grunt":return 12.974;case"battle_flare_grunt":return 4.228;case"battle_aether_grunt":return 16;case"battle_skull_grunt":return 20.87;case"battle_macro_grunt":return 11.56;case"battle_star_grunt":return 133.362;case"battle_galactic_admin":return 11.997;case"battle_skull_admin":return 15.463;case"battle_oleana":return 14.11;case"battle_star_admin":return 9.493;case"battle_rocket_boss":return 9.115;case"battle_aqua_magma_boss":return 14.847;case"battle_galactic_boss":return 106.962;case"battle_plasma_boss":return 25.624;case"battle_flare_boss":return 8.085;case"battle_aether_boss":return 11.33;case"battle_skull_boss":return 13.13;case"battle_macro_boss":return 11.42;case"battle_star_boss":return 25.764;case"mystery_encounter_gen_5_gts":return 8.52;case"mystery_encounter_gen_6_gts":return 9.24;case"mystery_encounter_fun_and_games":return 4.78;case"mystery_encounter_weird_dream":return 41.42;case"mystery_encounter_delibirdy":return 82.28}return 0}toggleInvert(A){A?this.cameras.main.setPostPipeline(Y8):this.cameras.main.removePostPipeline("InvertPostFX")}getCurrentPhase(){return this.currentPhase}getStandbyPhase(){return this.standbyPhase}pushConditionalPhase(A,s){this.conditionalQueue.push([s,A])}pushPhase(A,s=!1){(s?this.nextCommandPhaseQueue:this.phaseQueue).push(A)}unshiftPhase(A){this.phaseQueuePrependSpliceIndex===-1?this.phaseQueuePrepend.push(A):this.phaseQueuePrepend.splice(this.phaseQueuePrependSpliceIndex,0,A)}clearPhaseQueue(){this.phaseQueue.splice(0,this.phaseQueue.length)}setPhaseQueueSplice(){this.phaseQueuePrependSpliceIndex=this.phaseQueuePrepend.length}clearPhaseQueueSplice(){this.phaseQueuePrependSpliceIndex=-1}shiftPhase(){var A;if(this.standbyPhase){this.currentPhase=this.standbyPhase,this.standbyPhase=null;return}if(this.phaseQueuePrependSpliceIndex>-1&&this.clearPhaseQueueSplice(),this.phaseQueuePrepend.length)for(;this.phaseQueuePrepend.length;){const s=this.phaseQueuePrepend.pop();s&&this.phaseQueue.unshift(s)}if(this.phaseQueue.length||(this.populatePhaseQueue(),this.conditionalQueue=[]),this.currentPhase=this.phaseQueue.shift()??null,(A=this.conditionalQueue)!=null&&A.length){const s=this.conditionalQueue.shift();s!=null&&s[0]()?this.pushPhase(s[1]):s?this.conditionalQueue.unshift(s):console.warn("condition phase is undefined/null!",s)}this.currentPhase&&(console.log(`%cStart Phase ${this.currentPhase.constructor.name}`,"color:green;"),this.currentPhase.start())}overridePhase(A){return this.standbyPhase?!1:(this.standbyPhase=this.currentPhase,this.currentPhase=A,console.log(`%cStart Phase ${A.constructor.name}`,"color:green;"),A.start(),!0)}findPhase(A){return this.phaseQueue.find(A)}tryReplacePhase(A,s){const R=this.phaseQueue.findIndex(A);return R>-1?(this.phaseQueue[R]=s,!0):!1}tryRemovePhase(A){const s=this.phaseQueue.findIndex(A);return s>-1?(this.phaseQueue.splice(s,1),!0):!1}tryRemoveUnshiftedPhase(A){const s=this.phaseQueuePrepend.findIndex(A);return s>-1?(this.phaseQueuePrepend.splice(s,1),!0):!1}prependToPhase(A,s){const R=this.phaseQueue.findIndex(n=>n instanceof s);return R!==-1?(this.phaseQueue.splice(R,0,A),!0):(this.unshiftPhase(A),!1)}appendToPhase(A,s){const R=this.phaseQueue.findIndex(n=>n instanceof s);return R!==-1&&this.phaseQueue.length>R?(this.phaseQueue.splice(R+1,0,A),!0):(this.unshiftPhase(A),!1)}queueMessage(A,s,R,n,I){const a=new u_(this,A,s,R,n);I?this.pushPhase(a):this.unshiftPhase(a)}populatePhaseQueue(){this.nextCommandPhaseQueue.length&&(this.phaseQueue.push(...this.nextCommandPhaseQueue),this.nextCommandPhaseQueue.splice(0,this.nextCommandPhaseQueue.length)),this.phaseQueue.push(new F_(this))}addMoney(A){this.money=Math.min(this.money+A,Number.MAX_SAFE_INTEGER),this.updateMoneyText(),this.animateMoneyChanged(!0),this.validateAchvs(uI)}getWaveMoneyAmount(A){const s=this.currentBattle.waveIndex,R=Math.ceil(s/10)-1,n=Math.pow((R+1+(.75+((s-1)%10+1)/10))*100,1+.005*R)*A;return Math.floor(n/10)*10}addModifier(A,s,R,n,I,a){return A?new Promise(r=>{let S=!1;const o=A.type.soundName;this.validateAchvs(fl,A);const l=[],C=[];if(A instanceof VA){if(A instanceof OR&&l.push(...this.findModifiers(M=>M instanceof OR&&M.pokemonId===A.pokemonId)),A.add(this.modifiers,!!n,this)){if(A instanceof IR||A instanceof OR){const M=this.getPokemonById(A.pokemonId);M&&(S=A.apply(M,!0))}R&&!this.sound.get(o)&&this.playSound(o)}else if(!n){const M=x7(A.type.tier);return this.queueMessage(D.t("battle:itemStackFull",{fullItemName:A.type.name,itemName:M.name}),void 0,!0),this.addModifier(M.newModifier(),s,R,!1,I).then(u=>r(u))}for(const M of l)this.removeModifier(M);if(!s&&!n)return this.updateModifiers(!0,I).then(()=>r(S))}else if(A instanceof $i)if(R&&!this.sound.get(o)&&this.playSound(o),A instanceof KR){for(const M in this.party){const u=this.party[M],h=[];if(A instanceof tI)if(A.fainted)h.push(1);else{const P=new ZE(1);this.applyModifiers(oa,!0,P),h.push(P.value)}else A instanceof io?h.push(this.getPokemonById(A.fusePokemonId)):A instanceof no&&!Ve(a)&&h.push(a);if(A.shouldApply(u,...h)){const P=A.apply(u,...h);P instanceof Promise?C.push(P.then(G=>S||(S=G))):S||(S=P)}}return Promise.allSettled([this.party.map(M=>M.updateInfo(I)),...C]).then(()=>r(S))}else{const M=[this];if(A.shouldApply(...M)){const u=A.apply(...M);if(u instanceof Promise)return u.then(h=>r(h));S||(S=u)}}r(S)}):Promise.resolve(!1)}addEnemyModifier(A,s,R){return new Promise(n=>{const I=[];if(A instanceof OR&&I.push(...this.findModifiers(a=>a instanceof OR&&a.pokemonId===A.pokemonId,!1)),A.add(this.enemyModifiers,!1,this)){if(A instanceof IR||A instanceof OR){const a=this.getPokemonById(A.pokemonId);a&&A.apply(a,!0)}for(const a of I)this.removeModifier(a,!0)}s?n():this.updateModifiers(!1,R).then(()=>n())})}tryTransferHeldItemModifier(A,s,R,n=1,I,a,r=!0){return new Promise(S=>{const o=A.pokemonId?A.getPokemon(s.scene):null,l=new Lt(!1);lr(!!o&&o.isPlayer()!==s.isPlayer(),()=>Ct(Fr,o,l)).then(()=>{if(l.value)return S(!1);const C=A.clone();C.pokemonId=s.id;const M=s.scene.findModifier(h=>h instanceof Ht&&h.matchType(A)&&h.pokemonId===s.id,s.isPlayer());let u=!0;if(M){const h=M.getMaxStackCount(s.scene);if(M.stackCount>=h)return S(!1);const P=Math.min(n,A.stackCount,h-M.stackCount);A.stackCount-=P,C.stackCount=M.stackCount+P,u=!A.stackCount}else{const h=Math.min(n,A.stackCount);A.stackCount-=h,C.stackCount=h}if(u=!A.stackCount,!u||!o||this.removeModifier(A,!o.isPlayer())){const h=L(()=>{!M||this.removeModifier(M,!s.isPlayer())?s.isPlayer()?this.addModifier(C,a,R,!1,I).then(()=>{o&&r&&On(kR,o,!1),S(!0)}):this.addEnemyModifier(C,a,I).then(()=>{o&&r&&On(kR,o,!1),S(!0)}):S(!1)},"addModifier");o&&o.isPlayer()!==s.isPlayer()&&!a?this.updateModifiers(o.isPlayer(),I).then(()=>h()):h();return}S(!1)})})}removePartyMemberModifiers(A){return new Promise(s=>{const R=this.getPlayerParty()[A].id,n=this.modifiers.filter(I=>I instanceof Ht&&I.pokemonId===R);for(const I of n)this.modifiers.splice(this.modifiers.indexOf(I),1);this.updateModifiers().then(()=>s())})}generateEnemyModifiers(A){return new Promise(s=>{if(this.currentBattle.battleSpec===TE.FINAL_BOSS)return s();const R=this.gameMode.getWaveForDifficulty(this.currentBattle.waveIndex),n=this.gameMode.isWaveFinal(this.currentBattle.waveIndex);let I=Math.ceil(R/10);n&&(I=Math.ceil(I*2.5));const a=this.getEnemyParty();if(this.currentBattle.trainer){const r=this.currentBattle.trainer.genModifiers(a);for(const S of r)this.addEnemyModifier(S,!0,!0)}a.forEach((r,S)=>{var o;if(A&&S<A.length&&A[S])A[S].forEach(l=>{let C;l.modifier instanceof DA?C=l.modifier.newModifier(r):(C=l.modifier,C.pokemonId=r.id),C.stackCount=l.stackCount??1,C.isTransferable=l.isTransferable??C.isTransferable,this.addEnemyModifier(C,!0)});else{const l=r.isBoss()||this.currentBattle.battleType===ht.TRAINER&&!!((o=this.currentBattle.trainer)!=null&&o.config.isBoss);let C=32;l&&(C/=2),n&&(C/=8);const M=this.gameMode.getEnemyModifierChance(l);let u=M;this.currentBattle.battleType===ht.TRAINER&&this.currentBattle.trainer&&(u=Math.ceil(u*this.currentBattle.trainer.getPartyMemberModifierChanceMultiplier(S)));let h=0;for(let P=0;P<I;P++)_e(M)||h++;l&&(h=Math.max(h,Math.floor(I/2))),v7(R,h,[r],this.currentBattle.battleType===ht.TRAINER?PE.TRAINER:PE.WILD,C).map(P=>P.newModifier(r).add(this.enemyModifiers,!1,this))}return!0}),this.updateModifiers(!1).then(()=>s())})}clearEnemyModifiers(){const A=this.enemyModifiers.filter(s=>s instanceof VA);for(const s of A)this.enemyModifiers.splice(this.enemyModifiers.indexOf(s),1);this.updateModifiers(!1).then(()=>this.updateUIPositions())}clearEnemyHeldItemModifiers(A){const s=this.enemyModifiers.filter(R=>R instanceof Ht&&(!A||R.getPokemon(this)===A));for(const R of s)this.enemyModifiers.splice(this.enemyModifiers.indexOf(R),1);this.updateModifiers(!1).then(()=>this.updateUIPositions())}setModifiersVisible(A){[this.modifierBar,this.enemyModifierBar].map(s=>s.setVisible(A))}updateModifiers(A,s){return A===void 0&&(A=!0),new Promise(R=>{const n=A?this.modifiers:this.enemyModifiers;for(let a=0;a<n.length;a++){const r=n[a];r instanceof Ht&&!this.getPokemonById(r.pokemonId)&&n.splice(a--,1)}for(const a of n)a instanceof VA&&(a.virtualStackCount=0);const I=n.slice(0);for(const a of I)a.getStackCount()||n.splice(n.indexOf(a),1);this.updatePartyForModifiers(A?this.getPlayerParty():this.getEnemyParty(),s).then(()=>{(A?this.modifierBar:this.enemyModifierBar).updateModifiers(n),A||this.updateUIPositions(),R()})})}updatePartyForModifiers(A,s){return new Promise(R=>{Promise.allSettled(A.map(n=>(n.scene&&n.calculateStats(),n.updateInfo(s)))).then(()=>R())})}removeModifier(A,s=!1){const R=s?this.enemyModifiers:this.modifiers,n=R.indexOf(A);if(n>-1){if(R.splice(n,1),A instanceof IR||A instanceof OR){const I=this.getPokemonById(A.pokemonId);I&&A.apply(I,!1)}return!0}return!1}getModifiers(A,s=!0){return(s?this.modifiers:this.enemyModifiers).filter(R=>R instanceof A)}findModifiers(A,s=!0){return(s?this.modifiers:this.enemyModifiers).filter(A)}findModifier(A,s=!0){return(s?this.modifiers:this.enemyModifiers).find(A)}applyShuffledModifiers(A,s,R=!0,...n){let I=(R?this.modifiers:this.enemyModifiers).filter(a=>a instanceof s&&a.shouldApply(...n));return A.executeWithSeedOffset(()=>{const a=L(r=>{if(r.length<1)return r;const S=_e(r.length);return[r[S],...a(r.filter((o,l)=>l!==S))]},"shuffleModifiers");I=a(I)},A.currentBattle.turn<<4,A.waveSeed),this.applyModifiersInternal(I,R,n)}applyModifiers(A,s=!0,...R){const n=(s?this.modifiers:this.enemyModifiers).filter(I=>I instanceof A&&I.shouldApply(...R));return this.applyModifiersInternal(n,s,R)}applyModifiersInternal(A,s,R){const n=[];for(const I of A)I.apply(...R)&&(console.log("Applied",I.type.name,s?"":"(enemy)"),n.push(I));return n}applyModifier(A,s=!0,...R){const n=(s?this.modifiers:this.enemyModifiers).filter(I=>I instanceof A&&I.shouldApply(...R));for(const I of n)if(I.apply(...R))return console.log("Applied",I.type.name,s?"":"(enemy)"),I;return null}triggerPokemonFormChange(A,s,R=!1,n=!1){if(VO.hasOwnProperty(A.species.speciesId)){const I=VO[A.species.speciesId].filter(r=>r.findTrigger(s)&&r.canChange(A));let a;if(A.species.speciesId===e.NECROZMA&&I.length>1){const r=this.findModifiers(S=>S instanceof IR&&S.pokemonId===A.id).filter(S=>S.active).map(S=>S.formChangeItem);a=r.includes(XR.N_LUNARIZER)?I[0]:r.includes(XR.N_SOLARIZER)?I[1]:null}else a=I[0];if(a){let r;return A instanceof wE&&!a.quiet?r=new n_(this,A,a,n):r=new h_(this,A,a),A instanceof wE&&!a.quiet&&n?this.overridePhase(r):R?this.pushPhase(r):this.unshiftPhase(r),!0}}return!1}triggerPokemonBattleAnim(A,s,R,n=!1){const I=new M_(this,s,A,R);return n?this.pushPhase(I):this.unshiftPhase(I),!0}validateAchvs(A,...s){const R=Object.values(lt).filter(n=>n instanceof A);for(const n of R)this.validateAchv(n,s)}validateAchv(A,s){return(!this.gameData.achvUnlocks.hasOwnProperty(A.id)||Ye.ACHIEVEMENTS_REUNLOCK_OVERRIDE)&&A.validate(this,s)?(this.gameData.achvUnlocks[A.id]=new Date().getTime(),this.ui.achvBar.showAchv(A),Ms.hasOwnProperty(A.id)&&this.validateVoucher(Ms[A.id]),!0):!1}validateVoucher(A,s){return!this.gameData.voucherUnlocks.hasOwnProperty(A.id)&&A.validate(this,s)?(this.gameData.voucherUnlocks[A.id]=new Date().getTime(),this.ui.achvBar.showAchv(A),this.gameData.voucherCounts[A.voucherType]++,!0):!1}updateGameInfo(){var s,R;const A={playTime:this.sessionPlayTime??0,gameMode:this.currentBattle?this.gameMode.getName():"Title",biome:this.currentBattle?RL(this.arena.biomeType):"",wave:((s=this.currentBattle)==null?void 0:s.waveIndex)??0,party:this.party?this.party.map(n=>{var I;return{name:n.name,form:n.getFormKey(),types:n.getTypes().map(a=>i[a]),teraType:n.getTeraType()!==i.UNKNOWN?i[n.getTeraType()]:"",level:n.level,currentHP:n.hp,maxHP:n.getMaxHp(),status:(I=n.status)!=null&&I.effect?Re[n.status.effect]:""}}):[],modeChain:((R=this.ui)==null?void 0:R.getModeChain())??[]};window.gameInfo=A}getActiveKeys(){const A=[];let s=this.getPlayerParty();return s=s.concat(this.getEnemyParty()),s.forEach(R=>{A.push(R.getSpriteKey(!0)),R instanceof wE&&A.push(R.getBattleSpriteKey(!0,!0)),A.push(R.species.getCryKey(R.formIndex)),R.fusionSpecies&&A.push(R.fusionSpecies.getCryKey(R.fusionFormIndex))}),A}initFinalBossPhaseTwo(A){if(A instanceof rs&&A.isBoss()&&!A.formIndex&&A.bossSegmentIndex<1){this.fadeOutBgm(Et(2e3),!1),this.ui.showDialogue(D6[TE.FINAL_BOSS].firstStageWin,A.species.name,void 0,()=>{const s=RM($.MINI_BLACK_HOLE).newModifier(A);s.setTransferrableFalse(),this.addEnemyModifier(s,!1,!0),A.generateAndPopulateMoveset(1),this.setFieldScale(.75),this.triggerPokemonFormChange(A,bt,!1),this.currentBattle.double=!0;const R=this.getPlayerParty().filter(n=>n.isAllowedInBattle());R.length>1&&(this.pushPhase(new lO(this,!0)),R[1].isOnField()||this.pushPhase(new XE(this,1))),this.shiftPhase()});return}this.shiftPhase()}applyPartyExp(A,s,R,n){var u;const I=n??this.currentBattle.playerParticipantIds,a=this.getPlayerParty(),r=this.findModifier(h=>h instanceof ro),S=this.findModifier(h=>h instanceof Lo),o=this.findModifier(h=>h instanceof Io),l=a.filter(h=>h.hp),C=l.filter(h=>h.level<this.getMaxExpLevel()),M=[];if(R&&(A=Math.floor(A*this.currentBattle.waveIndex/5+1)),I.size>0){this.currentBattle.battleType===ht.TRAINER||((u=this.currentBattle.mysteryEncounter)==null?void 0:u.encounterMode)===oE.TRAINER_BATTLE?A=Math.floor(A*1.5):this.currentBattle.isBattleMysteryEncounter()&&this.currentBattle.mysteryEncounter&&(A=Math.floor(A*this.currentBattle.mysteryEncounter.expMultiplier));for(const h of l){const P=h.id,G=I.has(P);if(G&&s){h.addFriendship(l7);const f=h.getHeldItems().find(K=>K instanceof ra);f&&f.stackCount<f.getMaxStackCount(this)&&(f.stackCount++,this.updateModifiers(!0,!0),h.updateInfo())}if(!C.includes(h))continue;if(!G&&!r){M.push(0);continue}let d=0;G?(d+=1/I.size,I.size>1&&o&&(d+=o.getStackCount()*.2)):r&&(d+=r.getStackCount()*.2/I.size),h.pokerus&&(d*=1.5),Ye.XP_MULTIPLIER_OVERRIDE!==null&&(d=Ye.XP_MULTIPLIER_OVERRIDE);const H=new Rt(A*d);this.applyModifiers(ao,!0,h,H),M.push(Math.floor(H.value))}if(S){let h=0,P=0;C.forEach((f,K)=>{P+=M[K],h+=f.level});const G=Math.floor(h/C.length),d=[];C.forEach((f,K)=>{f.level<=G&&d.push(K)});const H=Math.floor(P/d.length);C.forEach((f,K)=>{M[K]=EE.Math.Linear(M[K],d.indexOf(K)>-1?H:0,.2*S.getStackCount())})}for(let h=0;h<C.length;h++){const P=M[h];if(P){const G=a.indexOf(C[h]);this.unshiftPhase(C[h].isOnField()?new p_(this,G,P):new Y_(this,G,P))}}}}isMysteryEncounterValidForWave(A,s){const[R,n]=this.gameMode.getMysteryEncounterLegalWaves();return this.gameMode.hasMysteryEncounters&&A===ht.WILD&&!this.gameMode.isBoss(s)&&s<n&&s>R}isWaveMysteryEncounter(A,s){const[R,n]=this.gameMode.getMysteryEncounterLegalWaves();if(this.isMysteryEncounterValidForWave(A,s)){const I=this.mysteryEncounterSaveData.encounterSpawnChance,a=this.mysteryEncounterSaveData.encounteredEvents,S=FX/(n-R)*(s-R)-a.length,o=I+Math.min(S*pX,Ch/2),l=Ve(Ye.MYSTERY_ENCOUNTER_RATE_OVERRIDE)?o:Ye.MYSTERY_ENCOUNTER_RATE_OVERRIDE;if(a.length===0||s-a[a.length-1].waveIndex>3||!Ve(Ye.MYSTERY_ENCOUNTER_RATE_OVERRIDE)){let M=Ch;return this.executeWithSeedOffset(()=>{M=_e(Ch)},s*3*1e3),M<l}}return!1}getMysteryEncounter(A,s){var h;let R;if(!Ve(Ye.MYSTERY_ENCOUNTER_OVERRIDE)&&nA.hasOwnProperty(Ye.MYSTERY_ENCOUNTER_OVERRIDE)){if(R=nA[Ye.MYSTERY_ENCOUNTER_OVERRIDE],s)return R}else{if(s)return R=nA[A??-1],R;R=Ve(A)?null:nA[A]}if(!R&&((h=this.mysteryEncounterSaveData)!=null&&h.queuedEncounters)&&this.mysteryEncounterSaveData.queuedEncounters.length>0){let P=0;for(;P<this.mysteryEncounterSaveData.queuedEncounters.length&&R;){const G=this.mysteryEncounterSaveData.queuedEncounters[P],d=G.spawnPercent;_e(100)<d&&(R=nA[G.type]),P++}}if(R)return R=new zT(R),R.populateDialogueTokensFromRequirements(this),R;const n=[Vt.COMMON,Vt.GREAT,Vt.ULTRA,Vt.ROGUE];this.mysteryEncounterSaveData.encounteredEvents.forEach(P=>{P.tier===Vt.COMMON?n[0]=n[0]-6:P.tier===Vt.GREAT&&(n[1]=n[1]-4)});const I=n.reduce((P,G)=>P+G),a=_e(I),r=I-n[0],S=I-n[0]-n[1],o=I-n[0]-n[1]-n[2];let l=a>r?Vt.COMMON:a>S?Vt.GREAT:a>o?Vt.ULTRA:Vt.ROGUE;Ve(Ye.MYSTERY_ENCOUNTER_TIER_OVERRIDE)||(l=Ye.MYSTERY_ENCOUNTER_TIER_OVERRIDE);let C=[];const M=this.mysteryEncounterSaveData.encounteredEvents.length>0?this.mysteryEncounterSaveData.encounteredEvents[this.mysteryEncounterSaveData.encounteredEvents.length-1].type:null,u=ga.get(this.arena.biomeType)??[];for(;C.length===0&&l!==null;)C=u.filter(P=>{const G=nA[P];if(!G||G.encounterTier!==l)return!1;const d=G.disallowedGameModes;if(d&&d.length>0&&d.includes(this.gameMode.modeId))return!1;if(this.gameMode.modeId===SA.CHALLENGE){const H=G.disallowedChallenges;if(H&&H.length>0&&this.gameMode.challenges.some(f=>H.includes(f.id)))return!1}return!(!G.meetsRequirements(this)||M!==null&&P===M||this.mysteryEncounterSaveData.encounteredEvents.length>0&&G.maxAllowedEncounters&&G.maxAllowedEncounters>0&&this.mysteryEncounterSaveData.encounteredEvents.filter(H=>H.type===P).length>=G.maxAllowedEncounters)}).map(P=>nA[P]),l===Vt.ROGUE?l=Vt.ULTRA:l===Vt.ULTRA?l=Vt.GREAT:l===Vt.GREAT?l=Vt.COMMON:l=null;return C.length===0?(console.log("No Mystery Encounters found, falling back to Mysterious Challengers."),nA[qe.MYSTERIOUS_CHALLENGERS]):(R=C[_e(C.length)],R=new zT(R),R.populateDialogueTokensFromRequirements(this),R)}};L(SF,"BattleScene");let y_=SF;const MJ=Object.freeze(Object.defineProperty({__proto__:null,bypassLogin:Ss,default:y_,get starterColors(){return RR},startingWave:pL},Symbol.toStringTag,{value:"Module"})),db=460,cQ=508;var cn=(E=>(E[E.COMMON=0]="COMMON",E[E.UNCOMMON=1]="UNCOMMON",E[E.RARE=2]="RARE",E[E.SUPER_RARE=3]="SUPER_RARE",E[E.ULTRA_RARE=4]="ULTRA_RARE",E))(cn||{}),Tt=(E=>(E[E.NONE=0]="NONE",E[E.TRAINER=1]="TRAINER",E[E.TRAINER_PARTNER=2]="TRAINER_PARTNER",E))(Tt||{});const oF=class oF{constructor(A,s,R,n){this.size=A,this.strength=s,this.sameSpecies=!!R,this.balanced=!!n}getStrength(A){return this.strength}isSameSpecies(A){return this.sameSpecies}isBalanced(A){return this.balanced}};L(oF,"TrainerPartyTemplate");let Je=oF;const lF=class lF extends Je{constructor(...A){super(A.reduce((s,R)=>(s+=R.size,s),0),we.AVERAGE),this.templates=A}getStrength(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.getStrength(A-s);s+=R.size}return super.getStrength(A)}isSameSpecies(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.isSameSpecies(A-s);s+=R.size}return super.isSameSpecies(A)}isBalanced(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.isBalanced(A-s);s+=R.size}return super.isBalanced(A)}};L(lF,"TrainerPartyCompoundTemplate");let vA=lF;const et={ONE_WEAK_ONE_STRONG:new vA(new Je(1,we.WEAK),new Je(1,we.STRONG)),ONE_AVG:new Je(1,we.AVERAGE),ONE_AVG_ONE_STRONG:new vA(new Je(1,we.AVERAGE),new Je(1,we.STRONG)),ONE_STRONG:new Je(1,we.STRONG),ONE_STRONGER:new Je(1,we.STRONGER),TWO_WEAKER:new Je(2,we.WEAKER),TWO_WEAK:new Je(2,we.WEAK),TWO_WEAK_ONE_AVG:new vA(new Je(2,we.WEAK),new Je(1,we.AVERAGE)),TWO_WEAK_SAME_ONE_AVG:new vA(new Je(2,we.WEAK,!0),new Je(1,we.AVERAGE)),TWO_WEAK_SAME_TWO_WEAK_SAME:new vA(new Je(2,we.WEAK,!0),new Je(2,we.WEAK,!0)),TWO_WEAK_ONE_STRONG:new vA(new Je(2,we.WEAK),new Je(1,we.STRONG)),TWO_AVG:new Je(2,we.AVERAGE),TWO_AVG_ONE_STRONG:new vA(new Je(2,we.AVERAGE),new Je(1,we.STRONG)),TWO_AVG_SAME_ONE_AVG:new vA(new Je(2,we.AVERAGE,!0),new Je(1,we.AVERAGE)),TWO_AVG_SAME_ONE_STRONG:new vA(new Je(2,we.AVERAGE,!0),new Je(1,we.STRONG)),TWO_AVG_SAME_TWO_AVG_SAME:new vA(new Je(2,we.AVERAGE,!0),new Je(2,we.AVERAGE,!0)),TWO_STRONG:new Je(2,we.STRONG),THREE_WEAK:new Je(3,we.WEAK),THREE_WEAK_SAME:new Je(3,we.WEAK,!0),THREE_AVG:new Je(3,we.AVERAGE),THREE_AVG_SAME:new Je(3,we.AVERAGE,!0),THREE_WEAK_BALANCED:new Je(3,we.WEAK,!1,!0),FOUR_WEAKER:new Je(4,we.WEAKER),FOUR_WEAKER_SAME:new Je(4,we.WEAKER,!0),FOUR_WEAK:new Je(4,we.WEAK),FOUR_WEAK_SAME:new Je(4,we.WEAK,!0),FOUR_WEAK_BALANCED:new Je(4,we.WEAK,!1,!0),FIVE_WEAKER:new Je(5,we.WEAKER),FIVE_WEAK:new Je(5,we.WEAK),FIVE_WEAK_BALANCED:new Je(5,we.WEAK,!1,!0),SIX_WEAKER:new Je(6,we.WEAKER),SIX_WEAKER_SAME:new Je(6,we.WEAKER,!0),SIX_WEAK_SAME:new Je(6,we.WEAK,!0),SIX_WEAK_BALANCED:new Je(6,we.WEAK,!1,!0),GYM_LEADER_1:new vA(new Je(1,we.AVERAGE),new Je(1,we.STRONG)),GYM_LEADER_2:new vA(new Je(1,we.AVERAGE),new Je(1,we.STRONG),new Je(1,we.STRONGER)),GYM_LEADER_3:new vA(new Je(2,we.AVERAGE),new Je(1,we.STRONG),new Je(1,we.STRONGER)),GYM_LEADER_4:new vA(new Je(3,we.AVERAGE),new Je(1,we.STRONG),new Je(1,we.STRONGER)),GYM_LEADER_5:new vA(new Je(3,we.AVERAGE),new Je(2,we.STRONG),new Je(1,we.STRONGER)),ELITE_FOUR:new vA(new Je(2,we.AVERAGE),new Je(3,we.STRONG),new Je(1,we.STRONGER)),CHAMPION:new vA(new Je(1,we.STRONGER),new Je(5,we.STRONG,!1,!0)),RIVAL:new vA(new Je(1,we.STRONG),new Je(1,we.AVERAGE)),RIVAL_2:new vA(new Je(1,we.STRONG),new Je(1,we.AVERAGE),new Je(1,we.WEAK,!1,!0)),RIVAL_3:new vA(new Je(1,we.STRONG),new Je(1,we.AVERAGE),new Je(1,we.AVERAGE,!1,!0),new Je(1,we.WEAK,!1,!0)),RIVAL_4:new vA(new Je(1,we.STRONG),new Je(1,we.AVERAGE),new Je(2,we.AVERAGE,!1,!0),new Je(1,we.WEAK,!1,!0)),RIVAL_5:new vA(new Je(1,we.STRONG),new Je(1,we.AVERAGE),new Je(3,we.AVERAGE,!1,!0),new Je(1,we.STRONG)),RIVAL_6:new vA(new Je(1,we.STRONG),new Je(1,we.AVERAGE),new Je(3,we.AVERAGE,!1,!0),new Je(1,we.STRONGER))},wD=class wD{constructor(A,s){this.hasGenders=!1,this.hasDouble=!1,this.hasCharSprite=!1,this.doubleOnly=!1,this.moneyMultiplier=1,this.isBoss=!1,this.hasStaticParty=!1,this.useSameSeedForAllMembers=!1,this.modifierRewardFuncs=[],this.eventRewardFuncs=[],this.partyMemberFuncs={},this.specialtyTypes=[],this.hasVoucher=!1,this.encounterMessages=[],this.victoryMessages=[],this.defeatMessages=[],this.trainerType=A,this.name=wn(U[this.getDerivedType()]),this.battleBgm="battle_trainer",this.mixedBattleBgm="battle_trainer",this.victoryBgm="victory_trainer",this.partyTemplates=[et.TWO_AVG],this.speciesFilter=R=>(s||!R.legendary&&!R.subLegendary&&!R.mythical)&&!R.isTrainerForbidden()}getKey(){return U[this.getDerivedType()].toString().toLowerCase()}getSpriteKey(A,s=!1){let R=this.getKey();return this.hasGenders&&(R+=`_${A?"f":"m"}`),this.trainerTypeDouble&&A&&s&&(R=U[this.getDerivedType(this.trainerTypeDouble)].toString().toLowerCase()),R}setName(A){return A==="Finn"&&(CR()||UR(),A==="Finn"&&(A=D.t("trainerNames:rival"))),this.name=A,this}setHasVoucher(A){this.hasVoucher=A}setTitle(A){return CR()||UR(),A=A.toLowerCase().replace(/\s/g,"_"),this.title=D.t(`titles:${A}`),this}getDerivedType(A=null){let s=A||this.trainerType;switch(s){case U.RIVAL_2:case U.RIVAL_3:case U.RIVAL_4:case U.RIVAL_5:case U.RIVAL_6:s=U.RIVAL;break;case U.LANCE_CHAMPION:s=U.LANCE;break;case U.LARRY_ELITE:s=U.LARRY;break;case U.ROCKET_BOSS_GIOVANNI_1:case U.ROCKET_BOSS_GIOVANNI_2:s=U.GIOVANNI;break;case U.MAXIE_2:s=U.MAXIE;break;case U.ARCHIE_2:s=U.ARCHIE;break;case U.CYRUS_2:s=U.CYRUS;break;case U.GHETSIS_2:s=U.GHETSIS;break;case U.LYSANDRE_2:s=U.LYSANDRE;break;case U.LUSAMINE_2:s=U.LUSAMINE;break;case U.GUZMA_2:s=U.GUZMA;break;case U.ROSE_2:s=U.ROSE;break;case U.PENNY_2:s=U.PENNY;break;case U.MARNIE_ELITE:s=U.MARNIE;break;case U.NESSA_ELITE:s=U.NESSA;break;case U.BEA_ELITE:s=U.BEA;break;case U.ALLISTER_ELITE:s=U.ALLISTER;break;case U.RAIHAN_ELITE:s=U.RAIHAN;break}return s}setHasGenders(A,s){return A==="Ivy"?(CR()||UR(),this.nameFemale=D.t("trainerNames:rival_female")):this.nameFemale=A,this.hasGenders=!0,s&&(this.femaleEncounterBgm=typeof s=="number"?U[s].toString().replace(/_/g," ").toLowerCase():s),this}setHasDouble(A,s){return this.hasDouble=!0,this.nameDouble=A,s&&(this.doubleEncounterBgm=typeof s=="number"?U[s].toString().replace(/\_/g," ").toLowerCase():s),this}setDoubleTrainerType(A){return this.trainerTypeDouble=A,this.setDoubleMessages(this.nameDouble),this}setDoubleMessages(A){bo[A]&&(this.doubleEncounterMessages=bo[A].encounter,this.doubleVictoryMessages=bo[A].victory,this.doubleDefeatMessages=bo[A].defeat)}setDoubleTitle(A){return CR()||UR(),A=A.toLowerCase().replace(/\s/g,"_"),this.titleDouble=D.t(`titles:${A}`),this}setHasCharSprite(){return this.hasCharSprite=!0,this}setDoubleOnly(){return this.doubleOnly=!0,this}setMoneyMultiplier(A){return this.moneyMultiplier=A,this}setBoss(){return this.isBoss=!0,this}setStaticParty(){return this.hasStaticParty=!0,this}setUseSameSeedForAllMembers(){return this.useSameSeedForAllMembers=!0,this}setMixedBattleBgm(A){return this.mixedBattleBgm=A,this}setBattleBgm(A){return this.battleBgm=A,this}setEncounterBgm(A){return this.encounterBgm=typeof A=="number"?U[A].toString().toLowerCase():A,this}setVictoryBgm(A){return this.victoryBgm=A,this}setPartyTemplates(...A){return this.partyTemplates=A,this}setPartyTemplateFunc(A){return this.partyTemplateFunc=A,this}setPartyMemberFunc(A,s){return this.partyMemberFuncs[A]=s,this}setSpeciesPools(A){return this.speciesPools=Array.isArray(A)?{0:A}:A,this}setSpeciesFilter(A,s){const R=this.speciesFilter;return this.speciesFilter=s?A:n=>A(n)&&R(n),this}setSpecialtyTypes(...A){return this.specialtyTypes=A,this}setGenModifiersFunc(A){return this.genModifiersFunc=A,this}setEventModifierRewardFuncs(...A){return this.eventRewardFuncs=A.map(s=>()=>{const R=s(),n=R();return n.withIdFromFunc(R),n}),this}setModifierRewardFuncs(...A){return this.modifierRewardFuncs=A.map(s=>()=>{const R=s(),n=R();return n.withIdFromFunc(R),n}),this}speciesPoolPerEvilTeamAdmin(A){switch(A=A.toLowerCase(),A){case"rocket":return{0:[e.RATTATA,e.KOFFING,e.EKANS,e.ZUBAT,e.MAGIKARP,e.HOUNDOUR,e.ONIX,e.CUBONE,e.GROWLITHE,e.MURKROW,e.GASTLY,e.EXEGGCUTE,e.VOLTORB,e.DROWZEE,e.VILEPLUME],1:[e.PORYGON,e.MANKEY,e.MAGNEMITE,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GRIMER,e.ALOLA_GEODUDE,e.PALDEA_TAUROS,e.OMANYTE,e.KABUTO,e.MAGBY,e.ELEKID],2:[e.DRATINI,e.LARVITAR]};case"magma":return{0:[e.GROWLITHE,e.SLUGMA,e.SOLROCK,e.HIPPOPOTAS,e.BALTOY,e.ROLYCOLY,e.GLIGAR,e.TORKOAL,e.HOUNDOUR,e.MAGBY],1:[e.TRAPINCH,e.SILICOBRA,e.RHYHORN,e.ANORITH,e.LILEEP,e.HISUI_GROWLITHE,e.TURTONATOR,e.ARON,e.TOEDSCOOL],2:[e.CAPSAKID,e.CHARCADET]};case"aqua":return{0:[e.CORPHISH,e.SPHEAL,e.CLAMPERL,e.CHINCHOU,e.WOOPER,e.WINGULL,e.TENTACOOL,e.AZURILL,e.LOTAD,e.WAILMER,e.REMORAID,e.BARBOACH],1:[e.MANTYKE,e.HISUI_QWILFISH,e.ARROKUDA,e.DHELMISE,e.CLOBBOPUS,e.FEEBAS,e.PALDEA_WOOPER,e.HORSEA,e.SKRELP],2:[e.DONDOZO,e.BASCULEGION]};case"galactic":return{0:[e.BRONZOR,e.SWINUB,e.YANMA,e.LICKITUNG,e.TANGELA,e.MAGBY,e.ELEKID,e.SKORUPI,e.ZUBAT,e.MURKROW,e.MAGIKARP,e.VOLTORB],1:[e.HISUI_GROWLITHE,e.HISUI_QWILFISH,e.SNEASEL,e.DUSKULL,e.ROTOM,e.HISUI_VOLTORB,e.GLIGAR,e.ABRA],2:[e.URSALUNA,e.HISUI_LILLIGANT,e.SPIRITOMB,e.HISUI_SNEASEL]};case"plasma":return{0:[e.YAMASK,e.ROGGENROLA,e.JOLTIK,e.TYMPOLE,e.FRILLISH,e.FERROSEED,e.SANDILE,e.TIMBURR,e.DARUMAKA,e.FOONGUS,e.CUBCHOO,e.VANILLITE],1:[e.PAWNIARD,e.VULLABY,e.ZORUA,e.DRILBUR,e.KLINK,e.TYNAMO,e.GALAR_DARUMAKA,e.GOLETT,e.MIENFOO,e.DURANT,e.SIGILYPH],2:[e.HISUI_ZORUA,e.AXEW,e.DEINO,e.HISUI_BRAVIARY]};case"flare":return{0:[e.FLETCHLING,e.LITLEO,e.INKAY,e.FOONGUS,e.HELIOPTILE,e.ELECTRIKE,e.SKORUPI,e.PURRLOIN,e.CLAWITZER,e.PANCHAM,e.ESPURR,e.BUNNELBY],1:[e.LITWICK,e.SNEASEL,e.PUMPKABOO,e.PHANTUMP,e.HONEDGE,e.BINACLE,e.HOUNDOUR,e.SKRELP,e.SLIGGOO],2:[e.NOIBAT,e.HISUI_AVALUGG,e.HISUI_SLIGGOO]};case"aether":return{0:[e.BRUXISH,e.SLOWPOKE,e.BALTOY,e.EXEGGCUTE,e.ABRA,e.ALOLA_RAICHU,e.ELGYEM,e.NATU,e.BLIPBUG,e.GIRAFARIG,e.ORANGURU],1:[e.GALAR_SLOWPOKE,e.MEDITITE,e.BELDUM,e.HATENNA,e.INKAY,e.RALTS,e.GALAR_MR_MIME],2:[e.ARMAROUGE,e.HISUI_BRAVIARY,e.PORYGON]};case"skull":return{0:[e.MAREANIE,e.ALOLA_GRIMER,e.GASTLY,e.ZUBAT,e.FOMANTIS,e.VENIPEDE,e.BUDEW,e.KOFFING,e.STUNKY,e.CROAGUNK,e.NIDORAN_F],1:[e.GALAR_SLOWPOKE,e.SKORUPI,e.PALDEA_WOOPER,e.VULLABY,e.HISUI_QWILFISH,e.GLIMMET],2:[e.SKRELP,e.HISUI_SNEASEL]};case"macro":return{0:[e.HATENNA,e.FEEBAS,e.BOUNSWEET,e.SALANDIT,e.GALAR_PONYTA,e.GOTHITA,e.FROSLASS,e.VULPIX,e.FRILLISH,e.ODDISH,e.SINISTEA],1:[e.VULLABY,e.MAREANIE,e.ALOLA_VULPIX,e.TOGEPI,e.GALAR_CORSOLA,e.APPLIN],2:[e.TINKATINK,e.HISUI_LILLIGANT]};case"star_1":return{0:[e.MURKROW,e.SEEDOT,e.CACNEA,e.STUNKY,e.SANDILE,e.NYMBLE,e.MASCHIFF,e.GALAR_ZIGZAGOON],1:[e.UMBREON,e.SNEASEL,e.CORPHISH,e.ZORUA,e.INKAY,e.BOMBIRDIER],2:[e.DEINO,e.SPRIGATITO]};case"star_2":return{0:[e.GROWLITHE,e.HOUNDOUR,e.NUMEL,e.LITWICK,e.FLETCHLING,e.LITLEO,e.ROLYCOLY,e.CAPSAKID],1:[e.PONYTA,e.FLAREON,e.MAGBY,e.TORKOAL,e.SALANDIT,e.TURTONATOR],2:[e.LARVESTA,e.FUECOCO]};case"star_3":return{0:[e.ZUBAT,e.GRIMER,e.STUNKY,e.FOONGUS,e.MAREANIE,e.TOXEL,e.SHROODLE,e.PALDEA_WOOPER],1:[e.GASTLY,e.SEVIPER,e.SKRELP,e.ALOLA_GRIMER,e.GALAR_SLOWPOKE,e.HISUI_QWILFISH],2:[e.GLIMMET,e.BULBASAUR]};case"star_4":return{0:[e.CLEFFA,e.IGGLYBUFF,e.AZURILL,e.COTTONEE,e.FLABEBE,e.HATENNA,e.IMPIDIMP,e.TINKATINK],1:[e.TOGEPI,e.GARDEVOIR,e.SYLVEON,e.KLEFKI,e.MIMIKYU,e.ALOLA_VULPIX],2:[e.GALAR_PONYTA,e.POPPLIO]};case"star_5":return{0:[e.SHROOMISH,e.MAKUHITA,e.MEDITITE,e.CROAGUNK,e.SCRAGGY,e.MIENFOO,e.PAWMI,e.PALDEA_TAUROS],1:[e.RIOLU,e.TIMBURR,e.HAWLUCHA,e.PASSIMIAN,e.FALINKS,e.FLAMIGO],2:[e.JANGMO_O,e.QUAXLY]}}return console.warn(`Evil team admin for ${A} not found. Returning empty species pools.`),[]}initForEvilTeamAdmin(A,s,R){CR()||UR(),this.setPartyTemplates(et.RIVAL_5),this.speciesPools=this.speciesPoolPerEvilTeamAdmin(s),R.forEach((I,a)=>{Array.isArray(I)||(I=[I]),this.setPartyMemberFunc(-(a+1),Ce(I))});const n=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${n}`),this.setHasVoucher(!1),this.setTitle(A),this.setMoneyMultiplier(1.5),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForStatTrainer(A,s,...R){CR()||UR(),this.setPartyTemplates(et.ELITE_FOUR),A.forEach((I,a)=>{Array.isArray(I)||(I=[I]),this.setPartyMemberFunc(-(a+1),Ce(I))}),R.length&&(this.setSpeciesFilter(I=>R.find(a=>I.isOfType(a))!==void 0),this.setSpecialtyTypes(...R));const n=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${n}`),this.setMoneyMultiplier(2),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_trainer"),this.setVictoryBgm("victory_trainer"),this}initForEvilTeamLeader(A,s,R=!1,...n){CR()||UR(),R?this.setPartyTemplates(et.ELITE_FOUR):this.setPartyTemplates(et.RIVAL_5),s.forEach((a,r)=>{Array.isArray(a)||(a=[a]),this.setPartyMemberFunc(-(r+1),Ce(a))}),n.length&&(this.setSpeciesFilter(a=>n.find(r=>a.isOfType(r))!==void 0),this.setSpecialtyTypes(...n));const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${I}`),this.setTitle(A),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForGymLeader(A,s,...R){CR()||UR(),this.setPartyTemplateFunc(_Q),A.forEach((I,a)=>{Array.isArray(I)||(I=[I]),this.setPartyMemberFunc(-(a+1),Ce(I))}),R.length&&(this.setSpeciesFilter(I=>R.find(a=>I.isOfType(a))!==void 0),this.setSpecialtyTypes(...R));const n=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${n}`),this.setTitle("gym_leader"),s||this.setTitle("gym_leader_female"),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_gym"),this.setVictoryBgm("victory_gym"),this.setGenModifiersFunc(I=>{const a=I[0].scene.currentBattle.waveIndex;return Gh(I,a>=100?1:0,R.length?R:void 0)}),this}initForEliteFour(A,s,...R){CR()||UR(),this.setPartyTemplates(et.ELITE_FOUR),A.forEach((I,a)=>{Array.isArray(I)||(I=[I]),this.setPartyMemberFunc(-(a+1),Ce(I))}),R.length?(this.setSpeciesFilter(I=>R.some(a=>I.isOfType(a))&&I.baseTotal>=db),this.setSpecialtyTypes(...R)):this.setSpeciesFilter(I=>I.baseTotal>=db);const n=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${n}`),this.setTitle("elite_four"),s||this.setTitle("elite_four_female"),this.setMoneyMultiplier(3.25),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_elite"),this.setVictoryBgm("victory_gym"),this.setGenModifiersFunc(I=>Gh(I,2,R.length?R:void 0)),this}initForChampion(A,s){CR()||UR(),this.setPartyTemplates(et.CHAMPION),A.forEach((n,I)=>{Array.isArray(n)||(n=[n]),this.setPartyMemberFunc(-(I+1),Ce(n))}),this.setSpeciesFilter(n=>n.baseTotal>=cQ);const R=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${R}`),this.setTitle("champion"),s||this.setTitle("champion_female"),this.setMoneyMultiplier(10),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_champion_alder"),this.setVictoryBgm("victory_champion"),this.setGenModifiersFunc(n=>Gh(n,3)),this}setLocalizedName(A){return CR()||UR(),this.name=D.t(`trainerNames:${A.toLowerCase().replace(/\s/g,"_")}`),this}getTitle(A=0,s){const R=this.name;if(!A&&s===OA.DOUBLE&&this.nameDouble)return this.nameDouble;if(this.hasGenders){if(this.nameFemale){if(s===OA.FEMALE||s===OA.DOUBLE&&A===2)return this.nameFemale}else if(s&&(CR()||UR(),D.exists(`trainerClasses:${this.name.toLowerCase()}`)))return R+"_female"}return R}loadAssets(A,s){return new Promise(R=>{const n=s===OA.DOUBLE,I=this.getSpriteKey(s===OA.FEMALE,!1),a=this.getSpriteKey(!0,!0);A.loadAtlas(I,"trainer"),n&&A.loadAtlas(a,"trainer"),A.load.once(Phaser.Loader.Events.COMPLETE,()=>{const r=console.warn;console.warn=()=>{};const S=A.anims.generateFrameNames(I,{zeroPad:4,suffix:".png",start:1,end:128}),o=n?A.anims.generateFrameNames(a,{zeroPad:4,suffix:".png",start:1,end:128}):"";console.warn=r,A.anims.exists(I)||A.anims.create({key:I,frames:S,frameRate:24,repeat:-1}),n&&!A.anims.exists(a)&&A.anims.create({key:a,frames:o,frameRate:24,repeat:-1}),R()}),A.load.isLoading()||A.load.start()})}clone(){var s,R,n,I,a,r,S,o,l;let A=new wD(this.trainerType);return A=this.trainerTypeDouble?A.setDoubleTrainerType(this.trainerTypeDouble):A,A=this.name?A.setName(this.name):A,A=this.hasGenders?A.setHasGenders(this.nameFemale,this.femaleEncounterBgm):A,A=this.hasDouble?A.setHasDouble(this.nameDouble,this.doubleEncounterBgm):A,A=this.title?A.setTitle(this.title):A,A=this.titleDouble?A.setDoubleTitle(this.titleDouble):A,A=this.hasCharSprite?A.setHasCharSprite():A,A=this.doubleOnly?A.setDoubleOnly():A,A=this.moneyMultiplier?A.setMoneyMultiplier(this.moneyMultiplier):A,A=this.isBoss?A.setBoss():A,A=this.hasStaticParty?A.setStaticParty():A,A=this.useSameSeedForAllMembers?A.setUseSameSeedForAllMembers():A,A=this.battleBgm?A.setBattleBgm(this.battleBgm):A,A=this.encounterBgm?A.setEncounterBgm(this.encounterBgm):A,A=this.victoryBgm?A.setVictoryBgm(this.victoryBgm):A,A=this.genModifiersFunc?A.setGenModifiersFunc(this.genModifiersFunc):A,this.modifierRewardFuncs&&(A.modifierRewardFuncs=this.modifierRewardFuncs.slice(0)),this.partyTemplates&&(A.partyTemplates=this.partyTemplates.slice(0)),A=this.partyTemplateFunc?A.setPartyTemplateFunc(this.partyTemplateFunc):A,this.partyMemberFuncs&&Object.keys(this.partyMemberFuncs).forEach(C=>{A=A.setPartyMemberFunc(parseInt(C,10),this.partyMemberFuncs[C])}),A=this.speciesPools?A.setSpeciesPools(this.speciesPools):A,A=this.speciesFilter?A.setSpeciesFilter(this.speciesFilter):A,this.specialtyTypes&&(A.specialtyTypes=this.specialtyTypes.slice(0)),A.encounterMessages=(s=this.encounterMessages)==null?void 0:s.slice(0),A.victoryMessages=(R=this.victoryMessages)==null?void 0:R.slice(0),A.defeatMessages=(n=this.defeatMessages)==null?void 0:n.slice(0),A.femaleEncounterMessages=(I=this.femaleEncounterMessages)==null?void 0:I.slice(0),A.femaleVictoryMessages=(a=this.femaleVictoryMessages)==null?void 0:a.slice(0),A.femaleDefeatMessages=(r=this.femaleDefeatMessages)==null?void 0:r.slice(0),A.doubleEncounterMessages=(S=this.doubleEncounterMessages)==null?void 0:S.slice(0),A.doubleVictoryMessages=(o=this.doubleVictoryMessages)==null?void 0:o.slice(0),A.doubleDefeatMessages=(l=this.doubleDefeatMessages)==null?void 0:l.slice(0),A}};L(wD,"TrainerConfig");let re=wD,Ne=0;function dA(E){var s;const A=(s=E.currentBattle)==null?void 0:s.waveIndex;return A<40?et.TWO_AVG:A<63?et.THREE_AVG:A<65?et.TWO_AVG_ONE_STRONG:A<112?et.GYM_LEADER_4:et.GYM_LEADER_5}L(dA,"getEvilGruntPartyTemplate");function Tl(E,...A){var s;return A[Math.min(Math.max(Math.ceil((E.gameMode.getWaveForDifficulty(((s=E.currentBattle)==null?void 0:s.waveIndex)||pL,!0)-20)/30),0),A.length-1)]}L(Tl,"getWavePartyTemplate");function _Q(E){return Tl(E,et.GYM_LEADER_1,et.GYM_LEADER_2,et.GYM_LEADER_3,et.GYM_LEADER_4,et.GYM_LEADER_5)}L(_Q,"getGymLeaderPartyTemplate");function Ce(E,A=1,s=!1,R){return(n,I,a)=>{let r=JA(E);return n.gameMode.isClassic&&n.currentBattle.waveIndex===20&&(s=!0),s||(r=xe(r).getTrainerSpeciesForLevel(I,!0,a,n.currentBattle.waveIndex)),n.addEnemyPokemon(xe(r),I,A,void 0,!1,void 0,R)}}L(Ce,"getRandomPartyMemberFunc");function lL(E,A=1,s,R){const n=L(I=>!I.legendary&&!I.subLegendary&&!I.mythical&&!I.isTrainerForbidden()&&E(I),"speciesFilter");return(I,a,r)=>{const S=I.currentBattle.waveIndex,o=xe(I.randomSpecies(S,a,!1,n).getTrainerSpeciesForLevel(a,!0,r,S));return I.addEnemyPokemon(o,a,A,void 0,!1,void 0,R)}}L(lL,"getSpeciesFilterRandomPartyMemberFunc");function Gh(E,A,s){const R=[],n=new Array(E.length).fill(null).map((I,a)=>a);for(let I=0;I<Math.min(A,E.length);I++){const a=JA(n);n.splice(n.indexOf(a),1),R.push($.TERA_SHARD().generateType([],[JA(s||E[a].getTypes())]).withIdFromFunc($.TERA_SHARD).newModifier(E[a]))}return R}L(Gh,"getRandomTeraModifiers");const We={BROCK:[e.GEODUDE,e.ONIX],MISTY:[e.STARYU,e.PSYDUCK],LT_SURGE:[e.VOLTORB,e.PIKACHU,e.ELECTABUZZ],ERIKA:[e.ODDISH,e.BELLSPROUT,e.TANGELA,e.HOPPIP],JANINE:[e.VENONAT,e.SPINARAK,e.ZUBAT],SABRINA:[e.ABRA,e.MR_MIME,e.ESPEON],BLAINE:[e.GROWLITHE,e.PONYTA,e.MAGMAR],GIOVANNI:[e.SANDILE,e.MURKROW,e.NIDORAN_M,e.NIDORAN_F],FALKNER:[e.PIDGEY,e.HOOTHOOT,e.DODUO],BUGSY:[e.SCYTHER,e.HERACROSS,e.SHUCKLE,e.PINSIR],WHITNEY:[e.JIGGLYPUFF,e.MILTANK,e.AIPOM,e.GIRAFARIG],MORTY:[e.GASTLY,e.MISDREAVUS,e.SABLEYE],CHUCK:[e.POLIWRATH,e.MANKEY],JASMINE:[e.MAGNEMITE,e.STEELIX],PRYCE:[e.SEEL,e.SWINUB],CLAIR:[e.DRATINI,e.HORSEA,e.GYARADOS],ROXANNE:[e.GEODUDE,e.NOSEPASS],BRAWLY:[e.MACHOP,e.MAKUHITA],WATTSON:[e.MAGNEMITE,e.VOLTORB,e.ELECTRIKE],FLANNERY:[e.SLUGMA,e.TORKOAL,e.NUMEL],NORMAN:[e.SLAKOTH,e.SPINDA,e.ZIGZAGOON,e.KECLEON],WINONA:[e.SWABLU,e.WINGULL,e.TROPIUS,e.SKARMORY],TATE:[e.SOLROCK,e.NATU,e.CHIMECHO,e.GALLADE],LIZA:[e.LUNATONE,e.SPOINK,e.BALTOY,e.GARDEVOIR],JUAN:[e.HORSEA,e.BARBOACH,e.SPHEAL,e.RELICANTH],ROARK:[e.CRANIDOS,e.LARVITAR,e.GEODUDE],GARDENIA:[e.ROSELIA,e.TANGELA,e.TURTWIG],MAYLENE:[e.LUCARIO,e.MEDITITE,e.CHIMCHAR],CRASHER_WAKE:[e.BUIZEL,e.WOOPER,e.PIPLUP,e.MAGIKARP],FANTINA:[e.MISDREAVUS,e.DRIFLOON,e.SPIRITOMB],BYRON:[e.SHIELDON,e.BRONZOR,e.AGGRON],CANDICE:[e.SNEASEL,e.SNOVER,e.SNORUNT],VOLKNER:[e.SHINX,e.CHINCHOU,e.ROTOM],CILAN:[e.PANSAGE,e.FOONGUS,e.PETILIL],CHILI:[e.PANSEAR,e.DARUMAKA,e.NUMEL],CRESS:[e.PANPOUR,e.TYMPOLE,e.SLOWPOKE],CHEREN:[e.LILLIPUP,e.MINCCINO,e.PIDOVE],LENORA:[e.PATRAT,e.DEERLING,e.AUDINO],ROXIE:[e.VENIPEDE,e.TRUBBISH,e.SKORUPI],BURGH:[e.SEWADDLE,e.SHELMET,e.KARRABLAST],ELESA:[e.EMOLGA,e.BLITZLE,e.JOLTIK],CLAY:[e.DRILBUR,e.SANDILE,e.GOLETT],SKYLA:[e.DUCKLETT,e.WOOBAT,e.RUFFLET],BRYCEN:[e.CRYOGONAL,e.VANILLITE,e.CUBCHOO],DRAYDEN:[e.DRUDDIGON,e.AXEW,e.DEINO],MARLON:[e.WAILMER,e.FRILLISH,e.TIRTOUGA],VIOLA:[e.SURSKIT,e.SCATTERBUG],GRANT:[e.AMAURA,e.TYRUNT],KORRINA:[e.HAWLUCHA,e.LUCARIO,e.MIENFOO],RAMOS:[e.SKIDDO,e.HOPPIP,e.BELLSPROUT],CLEMONT:[e.HELIOPTILE,e.MAGNEMITE,e.EMOLGA],VALERIE:[e.SYLVEON,e.MAWILE,e.MR_MIME],OLYMPIA:[e.ESPURR,e.SIGILYPH,e.SLOWKING],WULFRIC:[e.BERGMITE,e.SNOVER,e.CRYOGONAL],MILO:[e.GOSSIFLEUR,e.APPLIN,e.BOUNSWEET],NESSA:[e.CHEWTLE,e.ARROKUDA,e.WIMPOD],KABU:[e.SIZZLIPEDE,e.VULPIX,e.TORKOAL],BEA:[e.GALAR_FARFETCHD,e.MACHOP,e.CLOBBOPUS],ALLISTER:[e.GALAR_YAMASK,e.GALAR_CORSOLA,e.GASTLY],OPAL:[e.MILCERY,e.TOGETIC,e.GALAR_WEEZING],BEDE:[e.HATENNA,e.GALAR_PONYTA,e.GARDEVOIR],GORDIE:[e.ROLYCOLY,e.STONJOURNER,e.BINACLE],MELONY:[e.SNOM,e.GALAR_DARUMAKA,e.GALAR_MR_MIME],PIERS:[e.GALAR_ZIGZAGOON,e.SCRAGGY,e.INKAY],MARNIE:[e.IMPIDIMP,e.PURRLOIN,e.MORPEKO],RAIHAN:[e.DURALUDON,e.TURTONATOR,e.GOOMY],KATY:[e.NYMBLE,e.TAROUNTULA,e.HERACROSS],BRASSIUS:[e.SMOLIV,e.SHROOMISH,e.ODDISH],IONO:[e.TADBULB,e.WATTREL,e.VOLTORB],KOFU:[e.VELUZA,e.WIGLETT,e.WINGULL],LARRY:[e.STARLY,e.DUNSPARCE,e.LECHONK,e.KOMALA],RYME:[e.GREAVARD,e.SHUPPET,e.MIMIKYU],TULIP:[e.GIRAFARIG,e.FLITTLE,e.RALTS],GRUSHA:[e.CETODDLE,e.ALOLA_VULPIX,e.CUBCHOO],LORELEI:[e.JYNX,[e.SLOWBRO,e.GALAR_SLOWBRO],e.LAPRAS,[e.ALOLA_SANDSLASH,e.CLOYSTER]],BRUNO:[e.MACHAMP,e.HITMONCHAN,e.HITMONLEE,[e.ALOLA_GOLEM,e.GOLEM]],AGATHA:[e.GENGAR,[e.ARBOK,e.WEEZING],e.CROBAT,e.ALOLA_MAROWAK],LANCE:[e.DRAGONITE,e.GYARADOS,e.AERODACTYL,e.ALOLA_EXEGGUTOR],WILL:[e.XATU,e.JYNX,[e.SLOWBRO,e.SLOWKING],e.EXEGGUTOR],KOGA:[[e.WEEZING,e.MUK],[e.VENOMOTH,e.ARIADOS],e.CROBAT,e.TENTACRUEL],KAREN:[e.UMBREON,e.HONCHKROW,e.HOUNDOOM,e.WEAVILE],SIDNEY:[[e.SHIFTRY,e.CACTURNE],[e.SHARPEDO,e.CRAWDAUNT],e.ABSOL,e.MIGHTYENA],PHOEBE:[e.SABLEYE,e.DUSKNOIR,e.BANETTE,[e.MISMAGIUS,e.DRIFBLIM]],GLACIA:[e.GLALIE,e.WALREIN,e.FROSLASS,e.ABOMASNOW],DRAKE:[e.ALTARIA,e.SALAMENCE,e.FLYGON,e.KINGDRA],AARON:[[e.SCIZOR,e.KLEAVOR],e.HERACROSS,[e.VESPIQUEN,e.YANMEGA],e.DRAPION],BERTHA:[e.WHISCASH,e.HIPPOWDON,e.GLISCOR,e.RHYPERIOR],FLINT:[[e.FLAREON,e.RAPIDASH],e.MAGMORTAR,[e.STEELIX,e.LOPUNNY],e.INFERNAPE],LUCIAN:[e.MR_MIME,e.GALLADE,e.BRONZONG,[e.ALAKAZAM,e.ESPEON]],SHAUNTAL:[e.COFAGRIGUS,e.CHANDELURE,e.GOLURK,e.JELLICENT],MARSHAL:[e.CONKELDURR,e.MIENSHAO,e.THROH,e.SAWK],GRIMSLEY:[e.LIEPARD,e.KINGAMBIT,e.SCRAFTY,e.KROOKODILE],CAITLIN:[e.MUSHARNA,e.GOTHITELLE,e.SIGILYPH,e.REUNICLUS],MALVA:[e.PYROAR,e.TORKOAL,e.CHANDELURE,e.TALONFLAME],SIEBOLD:[e.CLAWITZER,e.GYARADOS,e.BARBARACLE,e.STARMIE],WIKSTROM:[e.KLEFKI,e.PROBOPASS,e.SCIZOR,e.AEGISLASH],DRASNA:[e.DRAGALGE,e.DRUDDIGON,e.ALTARIA,e.NOIVERN],HALA:[e.HARIYAMA,e.BEWEAR,e.CRABOMINABLE,[e.POLIWRATH,e.ANNIHILAPE]],MOLAYNE:[e.KLEFKI,e.MAGNEZONE,e.METAGROSS,e.ALOLA_DUGTRIO],OLIVIA:[e.RELICANTH,e.CARBINK,e.ALOLA_GOLEM,e.LYCANROC],ACEROLA:[[e.BANETTE,e.DRIFBLIM],e.MIMIKYU,e.DHELMISE,e.PALOSSAND],KAHILI:[[e.BRAVIARY,e.MANDIBUZZ],e.HAWLUCHA,e.ORICORIO,e.TOUCANNON],MARNIE_ELITE:[e.MORPEKO,e.LIEPARD,[e.TOXICROAK,e.SCRAFTY],e.GRIMMSNARL],NESSA_ELITE:[e.GOLISOPOD,[e.PELIPPER,e.QUAGSIRE],e.TOXAPEX,e.DREDNAW],BEA_ELITE:[e.HAWLUCHA,[e.GRAPPLOCT,e.SIRFETCHD],e.FALINKS,e.MACHAMP],ALLISTER_ELITE:[e.DUSKNOIR,[e.POLTEAGEIST,e.RUNERIGUS],e.CURSOLA,e.GENGAR],RAIHAN_ELITE:[e.GOODRA,[e.TORKOAL,e.TURTONATOR],e.FLYGON,e.ARCHALUDON],RIKA:[e.WHISCASH,[e.DONPHAN,e.DUGTRIO],e.CAMERUPT,e.CLODSIRE],POPPY:[e.COPPERAJAH,e.BRONZONG,e.CORVIKNIGHT,e.TINKATON],LARRY_ELITE:[e.STARAPTOR,e.FLAMIGO,e.ALTARIA,e.TROPIUS],HASSEL:[e.NOIVERN,[e.FLAPPLE,e.APPLETUN],e.DRAGALGE,e.BAXCALIBUR],CRISPIN:[e.TALONFLAME,e.CAMERUPT,e.MAGMORTAR,e.BLAZIKEN],AMARYS:[e.SKARMORY,e.EMPOLEON,e.SCIZOR,e.METAGROSS],LACEY:[e.EXCADRILL,e.PRIMARINA,[e.ALCREMIE,e.GRANBULL],e.WHIMSICOTT],DRAYTON:[e.DRAGONITE,e.ARCHALUDON,e.HAXORUS,e.SCEPTILE],BLUE:[[e.GYARADOS,e.EXEGGUTOR,e.ARCANINE],e.HO_OH,[e.RHYPERIOR,e.MAGNEZONE]],RED:[e.LUGIA,e.SNORLAX,[e.ESPEON,e.UMBREON,e.SYLVEON]],LANCE_CHAMPION:[e.DRAGONITE,e.KINGDRA,e.ALOLA_EXEGGUTOR],STEVEN:[e.AGGRON,[e.ARMALDO,e.CRADILY],e.DIALGA],WALLACE:[e.MILOTIC,e.PALKIA,e.LUDICOLO],CYNTHIA:[e.GIRATINA,e.LUCARIO,e.TOGEKISS],ALDER:[e.VOLCARONA,e.ZEKROM,[e.ACCELGOR,e.ESCAVALIER],e.KELDEO],IRIS:[e.HAXORUS,e.RESHIRAM,e.ARCHEOPS],DIANTHA:[e.HAWLUCHA,e.XERNEAS,e.GOODRA],HAU:[[e.SOLGALEO,e.LUNALA],e.NOIVERN,[e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA],[e.TAPU_BULU,e.TAPU_FINI,e.TAPU_KOKO,e.TAPU_LELE]],LEON:[e.DRAGAPULT,e.ZACIAN,e.AEGISLASH],GEETA:[e.MIRAIDON,[e.ESPATHRA,e.VELUZA],[e.AVALUGG,e.HISUI_AVALUGG],e.KINGAMBIT],NEMONA:[e.KORAIDON,e.PAWMOT,[e.DUDUNSPARCE,e.ORTHWORM],[e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL]],KIERAN:[[e.GRIMMSNARL,e.INCINEROAR,e.PORYGON_Z],e.OGERPON,e.TERAPAGOS,e.HYDRAPPLE]},ZA={[U.UNKNOWN]:new re(0).setHasGenders(),[U.ACE_TRAINER]:new re(++Ne).setHasGenders("Ace Trainer Female").setHasDouble("Ace Duo").setMoneyMultiplier(2.25).setEncounterBgm(U.ACE_TRAINER).setPartyTemplateFunc(E=>Tl(E,et.THREE_WEAK_BALANCED,et.FOUR_WEAK_BALANCED,et.FIVE_WEAK_BALANCED,et.SIX_WEAK_BALANCED)),[U.ARTIST]:new re(++Ne).setEncounterBgm(U.RICH).setPartyTemplates(et.ONE_STRONG,et.TWO_AVG,et.THREE_AVG).setSpeciesPools([e.SMEARGLE]),[U.BACKERS]:new re(++Ne).setHasGenders("Backers").setDoubleOnly().setEncounterBgm(U.CYCLIST),[U.BACKPACKER]:new re(++Ne).setHasGenders("Backpacker Female").setHasDouble("Backpackers").setSpeciesFilter(E=>E.isOfType(i.FLYING)||E.isOfType(i.ROCK)).setEncounterBgm(U.BACKPACKER).setPartyTemplates(et.ONE_STRONG,et.ONE_WEAK_ONE_STRONG,et.ONE_AVG_ONE_STRONG).setSpeciesPools({0:[e.RHYHORN,e.AIPOM,e.MAKUHITA,e.MAWILE,e.NUMEL,e.LILLIPUP,e.SANDILE,e.WOOLOO],1:[e.GIRAFARIG,e.ZANGOOSE,e.SEVIPER,e.CUBCHOO,e.PANCHAM,e.SKIDDO,e.MUDBRAY],2:[e.TAUROS,e.STANTLER,e.DARUMAKA,e.BOUFFALANT,e.DEERLING,e.IMPIDIMP],3:[e.GALAR_DARUMAKA,e.TEDDIURSA]}),[U.BAKER]:new re(++Ne).setEncounterBgm(U.CLERK).setMoneyMultiplier(1.35).setSpeciesFilter(E=>E.isOfType(i.GRASS)||E.isOfType(i.FIRE)),[U.BEAUTY]:new re(++Ne).setMoneyMultiplier(1.55).setEncounterBgm(U.PARASOL_LADY),[U.BIKER]:new re(++Ne).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(i.POISON)),[U.BLACK_BELT]:new re(++Ne).setHasGenders("Battle Girl",U.PSYCHIC).setHasDouble("Crush Kin").setEncounterBgm(U.ROUGHNECK).setSpecialtyTypes(i.FIGHTING).setPartyTemplates(et.TWO_WEAK_ONE_AVG,et.TWO_WEAK_ONE_AVG,et.TWO_AVG,et.TWO_AVG,et.TWO_WEAK_ONE_STRONG,et.THREE_AVG,et.TWO_AVG_ONE_STRONG).setSpeciesPools({0:[e.NIDORAN_F,e.NIDORAN_M,e.MACHOP,e.MAKUHITA,e.MEDITITE,e.CROAGUNK,e.TIMBURR],1:[e.MANKEY,e.POLIWRATH,e.TYROGUE,e.BRELOOM,e.SCRAGGY,e.MIENFOO,e.PANCHAM,e.STUFFUL,e.CRABRAWLER],2:[e.HERACROSS,e.RIOLU,e.THROH,e.SAWK,e.PASSIMIAN,e.CLOBBOPUS],3:[e.HITMONTOP,e.INFERNAPE,e.GALLADE,e.HAWLUCHA,e.HAKAMO_O],4:[e.KUBFU]}),[U.BREEDER]:new re(++Ne).setMoneyMultiplier(1.325).setEncounterBgm(U.POKEFAN).setHasGenders("Breeder Female").setHasDouble("Breeders").setPartyTemplateFunc(E=>Tl(E,et.FOUR_WEAKER,et.FIVE_WEAKER,et.SIX_WEAKER)).setSpeciesFilter(E=>E.baseTotal<450),[U.CLERK]:new re(++Ne).setHasGenders("Clerk Female").setHasDouble("Colleagues").setEncounterBgm(U.CLERK).setPartyTemplates(et.TWO_WEAK,et.THREE_WEAK,et.ONE_AVG,et.TWO_AVG,et.TWO_WEAK_ONE_AVG).setSpeciesPools({0:[e.MEOWTH,e.PSYDUCK,e.BUDEW,e.PIDOVE,e.CINCCINO,e.LITLEO],1:[e.JIGGLYPUFF,e.MAGNEMITE,e.MARILL,e.COTTONEE,e.SKIDDO],2:[e.BUIZEL,e.SNEASEL,e.KLEFKI,e.INDEEDEE]}),[U.CYCLIST]:new re(++Ne).setMoneyMultiplier(1.3).setHasGenders("Cyclist Female").setHasDouble("Cyclists").setEncounterBgm(U.CYCLIST).setPartyTemplates(et.TWO_WEAK,et.ONE_AVG).setSpeciesPools({0:[e.PICHU,e.STARLY,e.TAILLOW,e.BOLTUND],1:[e.DODUO,e.ELECTRIKE,e.BLITZLE,e.WATTREL],2:[e.YANMA,e.NINJASK,e.WHIRLIPEDE,e.EMOLGA],3:[e.ACCELGOR,e.DREEPY]}),[U.DANCER]:new re(++Ne).setMoneyMultiplier(1.55).setEncounterBgm(U.CYCLIST).setPartyTemplates(et.TWO_WEAK,et.ONE_AVG,et.TWO_AVG,et.TWO_WEAK_SAME_TWO_WEAK_SAME).setSpeciesPools({0:[e.RALTS,e.SPOINK,e.LOTAD,e.BUDEW],1:[e.SPINDA,e.SWABLU,e.MARACTUS],2:[e.BELLOSSOM,e.HITMONTOP,e.MIME_JR,e.ORICORIO],3:[e.POPPLIO]}),[U.DEPOT_AGENT]:new re(++Ne).setMoneyMultiplier(1.45).setEncounterBgm(U.CLERK),[U.DOCTOR]:new re(++Ne).setHasGenders("Nurse","lass").setHasDouble("Medical Team").setMoneyMultiplier(3).setEncounterBgm(U.CLERK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.HEAL_PULSE)),[U.FIREBREATHER]:new re(++Ne).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.SMOG)||E.isOfType(i.FIRE)),[U.FISHERMAN]:new re(++Ne).setMoneyMultiplier(1.25).setEncounterBgm(U.BACKPACKER).setSpecialtyTypes(i.WATER).setPartyTemplates(et.TWO_WEAK_SAME_ONE_AVG,et.ONE_AVG,et.THREE_WEAK_SAME,et.ONE_STRONG,et.SIX_WEAKER).setSpeciesPools({0:[e.TENTACOOL,e.MAGIKARP,e.GOLDEEN,e.STARYU,e.REMORAID,e.SKRELP,e.CLAUNCHER,e.ARROKUDA],1:[e.POLIWAG,e.SHELLDER,e.KRABBY,e.HORSEA,e.CARVANHA,e.BARBOACH,e.CORPHISH,e.FINNEON,e.TYMPOLE,e.BASCULIN,e.FRILLISH,e.INKAY],2:[e.CHINCHOU,e.CORSOLA,e.WAILMER,e.BARBOACH,e.CLAMPERL,e.LUVDISC,e.MANTYKE,e.ALOMOMOLA,e.TATSUGIRI,e.VELUZA],3:[e.LAPRAS,e.FEEBAS,e.RELICANTH,e.DONDOZO]}),[U.GUITARIST]:new re(++Ne).setMoneyMultiplier(1.2).setEncounterBgm(U.ROUGHNECK).setSpecialtyTypes(i.ELECTRIC).setSpeciesFilter(E=>E.isOfType(i.ELECTRIC)),[U.HARLEQUIN]:new re(++Ne).setEncounterBgm(U.PSYCHIC).setSpeciesFilter(E=>bI[t.TRICK_ROOM].indexOf(E.speciesId)>-1),[U.HIKER]:new re(++Ne).setEncounterBgm(U.BACKPACKER).setPartyTemplates(et.TWO_AVG_SAME_ONE_AVG,et.TWO_AVG_SAME_ONE_STRONG,et.TWO_AVG,et.FOUR_WEAK,et.ONE_STRONG).setSpeciesPools({0:[e.SANDSHREW,e.DIGLETT,e.GEODUDE,e.MACHOP,e.ARON,e.ROGGENROLA,e.DRILBUR,e.NACLI],1:[e.ZUBAT,e.RHYHORN,e.ONIX,e.CUBONE,e.WOOBAT,e.SWINUB,e.NOSEPASS,e.HIPPOPOTAS,e.DWEBBLE,e.KLAWF,e.TOEDSCOOL],2:[e.TORKOAL,e.TRAPINCH,e.BARBOACH,e.GOLETT,e.ALOLA_DIGLETT,e.ALOLA_GEODUDE,e.GALAR_STUNFISK,e.PALDEA_WOOPER],3:[e.MAGBY,e.LARVITAR]}),[U.HOOLIGANS]:new re(++Ne).setDoubleOnly().setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(i.POISON)||E.isOfType(i.DARK)),[U.HOOPSTER]:new re(++Ne).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.INFIELDER]:new re(++Ne).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.JANITOR]:new re(++Ne).setMoneyMultiplier(1.1).setEncounterBgm(U.CLERK),[U.LINEBACKER]:new re(++Ne).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.MAID]:new re(++Ne).setMoneyMultiplier(1.6).setEncounterBgm(U.RICH),[U.MUSICIAN]:new re(++Ne).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.SING)),[U.HEX_MANIAC]:new re(++Ne).setMoneyMultiplier(1.5).setEncounterBgm(U.PSYCHIC).setPartyTemplates(et.TWO_AVG,et.ONE_AVG_ONE_STRONG,et.TWO_AVG_SAME_ONE_AVG,et.THREE_AVG,et.TWO_STRONG).setSpeciesFilter(E=>E.isOfType(i.GHOST)),[U.NURSERY_AIDE]:new re(++Ne).setMoneyMultiplier(1.3).setEncounterBgm("lass"),[U.OFFICER]:new re(++Ne).setMoneyMultiplier(1.55).setEncounterBgm(U.CLERK).setPartyTemplates(et.ONE_AVG,et.ONE_STRONG,et.TWO_AVG,et.TWO_WEAK_SAME_ONE_AVG).setSpeciesPools({0:[e.VULPIX,e.GROWLITHE,e.SNUBBULL,e.POOCHYENA,e.ELECTRIKE,e.LILLIPUP,e.YAMPER,e.FIDOUGH],1:[e.HOUNDOUR,e.ROCKRUFF,e.MASCHIFF],2:[e.JOLTEON,e.RIOLU],3:[],4:[e.ENTEI,e.SUICUNE,e.RAIKOU]}),[U.PARASOL_LADY]:new re(++Ne).setMoneyMultiplier(1.55).setEncounterBgm(U.PARASOL_LADY).setSpeciesFilter(E=>E.isOfType(i.WATER)),[U.PILOT]:new re(++Ne).setEncounterBgm(U.CLERK).setSpeciesFilter(E=>bI[t.FLY].indexOf(E.speciesId)>-1),[U.POKEFAN]:new re(++Ne).setMoneyMultiplier(1.4).setName("PokéFan").setHasGenders("PokéFan Female").setHasDouble("PokéFan Family").setEncounterBgm(U.POKEFAN).setPartyTemplates(et.SIX_WEAKER,et.FOUR_WEAK,et.TWO_AVG,et.ONE_STRONG,et.FOUR_WEAK_SAME,et.FIVE_WEAK,et.SIX_WEAKER_SAME),[U.PRESCHOOLER]:new re(++Ne).setMoneyMultiplier(.2).setEncounterBgm(U.YOUNGSTER).setHasGenders("Preschooler Female","lass").setHasDouble("Preschoolers").setPartyTemplates(et.THREE_WEAK,et.FOUR_WEAKER,et.TWO_WEAK_SAME_ONE_AVG,et.FIVE_WEAKER).setSpeciesPools({0:[e.CATERPIE,e.PICHU,e.SANDSHREW,e.LEDYBA,e.BUDEW,e.BURMY,e.WOOLOO,e.PAWMI,e.SMOLIV],1:[e.EEVEE,e.CLEFFA,e.IGGLYBUFF,e.SWINUB,e.WOOPER,e.DRIFLOON,e.DEDENNE,e.STUFFUL],2:[e.RALTS,e.RIOLU,e.JOLTIK,e.TANDEMAUS],3:[e.DARUMAKA,e.TINKATINK]}),[U.PSYCHIC]:new re(++Ne).setHasGenders("Psychic Female").setHasDouble("Psychics").setMoneyMultiplier(1.4).setEncounterBgm(U.PSYCHIC).setPartyTemplates(et.TWO_WEAK,et.TWO_AVG,et.TWO_WEAK_SAME_ONE_AVG,et.TWO_WEAK_SAME_TWO_WEAK_SAME,et.ONE_STRONGER).setSpeciesPools({0:[e.ABRA,e.DROWZEE,e.RALTS,e.SPOINK,e.GOTHITA,e.SOLOSIS,e.BLIPBUG,e.ESPURR,e.HATENNA],1:[e.MIME_JR,e.EXEGGCUTE,e.MEDITITE,e.NATU,e.EXEGGCUTE,e.WOOBAT,e.INKAY,e.ORANGURU],2:[e.ELGYEM,e.SIGILYPH,e.BALTOY,e.GIRAFARIG,e.MEOWSTIC],3:[e.BELDUM,e.ESPEON,e.STANTLER]}),[U.RANGER]:new re(++Ne).setMoneyMultiplier(1.4).setName("Pokémon Ranger").setEncounterBgm(U.BACKPACKER).setHasGenders("Pokémon Ranger Female").setHasDouble("Pokémon Rangers").setSpeciesPools({0:[e.PICHU,e.GROWLITHE,e.PONYTA,e.ZIGZAGOON,e.SEEDOT,e.BIDOOF,e.RIOLU,e.SEWADDLE,e.SKIDDO,e.SALANDIT,e.YAMPER],1:[e.AZURILL,e.TAUROS,e.MAREEP,e.FARFETCHD,e.TEDDIURSA,e.SHROOMISH,e.ELECTRIKE,e.BUDEW,e.BUIZEL,e.MUDBRAY,e.STUFFUL],2:[e.EEVEE,e.SCYTHER,e.KANGASKHAN,e.RALTS,e.MUNCHLAX,e.ZORUA,e.PALDEA_TAUROS,e.TINKATINK,e.CYCLIZAR,e.FLAMIGO],3:[e.LARVESTA]}),[U.RICH]:new re(++Ne).setMoneyMultiplier(5).setName("Gentleman").setHasGenders("Madame").setHasDouble("Rich Couple"),[U.RICH_KID]:new re(++Ne).setMoneyMultiplier(3.75).setName("Rich Boy").setHasGenders("Lady").setHasDouble("Rich Kids").setEncounterBgm(U.RICH),[U.ROUGHNECK]:new re(++Ne).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(i.DARK)),[U.SAILOR]:new re(++Ne).setMoneyMultiplier(1.4).setEncounterBgm(U.BACKPACKER).setSpeciesFilter(E=>E.isOfType(i.WATER)||E.isOfType(i.FIGHTING)),[U.SCIENTIST]:new re(++Ne).setHasGenders("Scientist Female").setHasDouble("Scientists").setMoneyMultiplier(1.7).setEncounterBgm(U.SCIENTIST).setSpeciesPools({0:[e.MAGNEMITE,e.GRIMER,e.DROWZEE,e.VOLTORB,e.KOFFING],1:[e.BALTOY,e.BRONZOR,e.FERROSEED,e.KLINK,e.CHARJABUG,e.BLIPBUG,e.HELIOPTILE],2:[e.ABRA,e.DITTO,e.PORYGON,e.ELEKID,e.SOLOSIS,e.GALAR_WEEZING],3:[e.OMANYTE,e.KABUTO,e.AERODACTYL,e.LILEEP,e.ANORITH,e.CRANIDOS,e.SHIELDON,e.TIRTOUGA,e.ARCHEN,e.ARCTOVISH,e.ARCTOZOLT,e.DRACOVISH,e.DRACOZOLT],4:[e.ROTOM,e.MELTAN]}),[U.SMASHER]:new re(++Ne).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.SNOW_WORKER]:new re(++Ne).setName("Worker").setHasDouble("Workers").setMoneyMultiplier(1.7).setEncounterBgm(U.CLERK).setSpeciesFilter(E=>E.isOfType(i.ICE)||E.isOfType(i.STEEL)),[U.STRIKER]:new re(++Ne).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.SCHOOL_KID]:new re(++Ne).setMoneyMultiplier(.75).setEncounterBgm(U.YOUNGSTER).setHasGenders("School Kid Female","lass").setHasDouble("School Kids").setSpeciesPools({0:[e.ODDISH,e.EXEGGCUTE,e.TEDDIURSA,e.WURMPLE,e.RALTS,e.SHROOMISH,e.FLETCHLING],1:[e.VOLTORB,e.WHISMUR,e.MEDITITE,e.MIME_JR,e.NYMBLE],2:[e.TANGELA,e.EEVEE,e.YANMA],3:[e.TADBULB]}),[U.SWIMMER]:new re(++Ne).setMoneyMultiplier(1.3).setEncounterBgm(U.PARASOL_LADY).setHasGenders("Swimmer Female").setHasDouble("Swimmers").setSpecialtyTypes(i.WATER).setSpeciesFilter(E=>E.isOfType(i.WATER)),[U.TWINS]:new re(++Ne).setDoubleOnly().setMoneyMultiplier(.65).setUseSameSeedForAllMembers().setPartyTemplateFunc(E=>Tl(E,et.TWO_WEAK,et.TWO_AVG,et.TWO_STRONG)).setPartyMemberFunc(0,Ce([e.PLUSLE,e.VOLBEAT,e.PACHIRISU,e.SILCOON,e.METAPOD,e.IGGLYBUFF,e.PETILIL,e.EEVEE])).setPartyMemberFunc(1,Ce([e.MINUN,e.ILLUMISE,e.EMOLGA,e.CASCOON,e.KAKUNA,e.CLEFFA,e.COTTONEE,e.EEVEE],2)).setEncounterBgm(U.TWINS),[U.VETERAN]:new re(++Ne).setHasGenders("Veteran Female").setHasDouble("Veteran Duo").setMoneyMultiplier(2.5).setEncounterBgm(U.ACE_TRAINER).setSpeciesFilter(E=>E.isOfType(i.DRAGON)),[U.WAITER]:new re(++Ne).setHasGenders("Waitress").setHasDouble("Restaurant Staff").setMoneyMultiplier(1.5).setEncounterBgm(U.CLERK).setSpeciesPools({0:[e.CLEFFA,e.CHATOT,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.MINCCINO],1:[e.TROPIUS,e.PETILIL,e.BOUNSWEET,e.INDEEDEE],2:[e.APPLIN,e.SINISTEA,e.POLTCHAGEIST]}),[U.WORKER]:new re(++Ne).setHasGenders("Worker Female").setHasDouble("Workers").setEncounterBgm(U.CLERK).setMoneyMultiplier(1.7).setSpeciesFilter(E=>E.isOfType(i.ROCK)||E.isOfType(i.STEEL)),[U.YOUNGSTER]:new re(++Ne).setMoneyMultiplier(.5).setEncounterBgm(U.YOUNGSTER).setHasGenders("Lass","lass").setHasDouble("Beginners").setPartyTemplates(et.TWO_WEAKER).setSpeciesPools([e.CATERPIE,e.WEEDLE,e.RATTATA,e.SENTRET,e.POOCHYENA,e.ZIGZAGOON,e.WURMPLE,e.BIDOOF,e.PATRAT,e.LILLIPUP]),[U.ROCKET_GRUNT]:new re(++Ne).setHasGenders("Rocket Grunt Female").setHasDouble("Rocket Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.WEEDLE,e.RATTATA,e.EKANS,e.SANDSHREW,e.ZUBAT,e.GEODUDE,e.KOFFING,e.GRIMER,e.ODDISH,e.SLOWPOKE],1:[e.GYARADOS,e.LICKITUNG,e.TAUROS,e.MANKEY,e.SCYTHER,e.ELEKID,e.MAGBY,e.CUBONE,e.GROWLITHE,e.MURKROW,e.GASTLY,e.EXEGGCUTE,e.VOLTORB,e.MAGNEMITE],2:[e.PORYGON,e.ALOLA_RATTATA,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GRIMER,e.ALOLA_GEODUDE,e.PALDEA_TAUROS,e.OMANYTE,e.KABUTO],3:[e.DRATINI,e.LARVITAR]}),[U.ARCHER]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.HOUNDOOM]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.ARIANA]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin_female","rocket",[e.ARBOK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.PROTON]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.CROBAT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.PETREL]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.WEEZING]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.MAGMA_GRUNT]:new re(++Ne).setHasGenders("Magma Grunt Female").setHasDouble("Magma Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.SLUGMA,e.POOCHYENA,e.NUMEL,e.ZIGZAGOON,e.DIGLETT,e.MAGBY,e.TORKOAL,e.GROWLITHE,e.BALTOY],1:[e.SOLROCK,e.HIPPOPOTAS,e.SANDACONDA,e.PHANPY,e.ROLYCOLY,e.GLIGAR,e.RHYHORN,e.HEATMOR],2:[e.TRAPINCH,e.LILEEP,e.ANORITH,e.HISUI_GROWLITHE,e.TURTONATOR,e.ARON,e.TOEDSCOOL],3:[e.CAPSAKID,e.CHARCADET]}),[U.TABITHA]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin","magma",[e.CAMERUPT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.COURTNEY]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin_female","magma",[e.CAMERUPT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.AQUA_GRUNT]:new re(++Ne).setHasGenders("Aqua Grunt Female").setHasDouble("Aqua Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.CARVANHA,e.WAILMER,e.ZIGZAGOON,e.LOTAD,e.CORPHISH,e.SPHEAL,e.REMORAID,e.QWILFISH,e.BARBOACH],1:[e.CLAMPERL,e.CHINCHOU,e.WOOPER,e.WINGULL,e.TENTACOOL,e.AZURILL,e.CLOBBOPUS,e.HORSEA],2:[e.MANTYKE,e.DHELMISE,e.HISUI_QWILFISH,e.ARROKUDA,e.PALDEA_WOOPER,e.SKRELP],3:[e.DONDOZO,e.BASCULEGION]}),[U.MATT]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin","aqua",[e.SHARPEDO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.SHELLY]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin_female","aqua",[e.SHARPEDO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.GALACTIC_GRUNT]:new re(++Ne).setHasGenders("Galactic Grunt Female").setHasDouble("Galactic Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.GLAMEOW,e.STUNKY,e.CROAGUNK,e.SHINX,e.WURMPLE,e.BRONZOR,e.DRIFLOON,e.BURMY,e.CARNIVINE],1:[e.LICKITUNG,e.RHYHORN,e.TANGELA,e.ZUBAT,e.YANMA,e.SKORUPI,e.GLIGAR,e.SWINUB],2:[e.HISUI_GROWLITHE,e.HISUI_QWILFISH,e.SNEASEL,e.ELEKID,e.MAGBY,e.DUSKULL],3:[e.ROTOM,e.SPIRITOMB,e.HISUI_SNEASEL]}),[U.JUPITER]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.SKUNTANK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.MARS]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.PURUGLY]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.SATURN]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander","galactic",[e.TOXICROAK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.PLASMA_GRUNT]:new re(++Ne).setHasGenders("Plasma Grunt Female").setHasDouble("Plasma Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.PATRAT,e.LILLIPUP,e.PURRLOIN,e.SCRAFTY,e.WOOBAT,e.VANILLITE,e.SANDILE,e.TRUBBISH,e.TYMPOLE],1:[e.FRILLISH,e.VENIPEDE,e.GOLETT,e.TIMBURR,e.DARUMAKA,e.FOONGUS,e.JOLTIK,e.CUBCHOO,e.KLINK],2:[e.PAWNIARD,e.RUFFLET,e.VULLABY,e.ZORUA,e.DRILBUR,e.MIENFOO,e.DURANT,e.BOUFFALANT],3:[e.DRUDDIGON,e.HISUI_ZORUA,e.AXEW,e.DEINO]}),[U.ZINZOLIN]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma",[e.CRYOGONAL]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.ROOD]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma",[e.SWOOBAT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.FLARE_GRUNT]:new re(++Ne).setHasGenders("Flare Grunt Female").setHasDouble("Flare Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.FLETCHLING,e.LITLEO,e.PONYTA,e.INKAY,e.HOUNDOUR,e.SKORUPI,e.SCRAFTY,e.CROAGUNK,e.SCATTERBUG,e.ESPURR],1:[e.HELIOPTILE,e.ELECTRIKE,e.SKRELP,e.PANCHAM,e.PURRLOIN,e.POOCHYENA,e.BINACLE,e.CLAUNCHER,e.PUMPKABOO,e.PHANTUMP,e.FOONGUS],2:[e.LITWICK,e.SNEASEL,e.PAWNIARD,e.SLIGGOO],3:[e.NOIBAT,e.HISUI_SLIGGOO,e.HISUI_AVALUGG]}),[U.BRYONY]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin_female","flare",[e.LIEPARD]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.XEROSIC]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin","flare",[e.MALAMAR]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.AETHER_GRUNT]:new re(++Ne).setHasGenders("Aether Grunt Female").setHasDouble("Aether Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.PIKIPEK,e.ROCKRUFF,e.ALOLA_DIGLETT,e.ALOLA_EXEGGUTOR,e.YUNGOOS,e.CORSOLA,e.ALOLA_GEODUDE,e.ALOLA_RAICHU,e.BOUNSWEET,e.LILLIPUP,e.KOMALA,e.MORELULL,e.COMFEY,e.TOGEDEMARU],1:[e.POLIWAG,e.STUFFUL,e.ORANGURU,e.PASSIMIAN,e.BRUXISH,e.MINIOR,e.WISHIWASHI,e.ALOLA_SANDSHREW,e.ALOLA_VULPIX,e.CRABRAWLER,e.CUTIEFLY,e.ORICORIO,e.MUDBRAY,e.PYUKUMUKU,e.ALOLA_MAROWAK],2:[e.GALAR_CORSOLA,e.TURTONATOR,e.MIMIKYU,e.MAGNEMITE,e.DRAMPA],3:[e.JANGMO_O,e.PORYGON]}),[U.FABA]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aether_admin","aether",[e.HYPNO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.SKULL_GRUNT]:new re(++Ne).setHasGenders("Skull Grunt Female").setHasDouble("Skull Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.SALANDIT,e.ALOLA_RATTATA,e.EKANS,e.ALOLA_MEOWTH,e.SCRAGGY,e.KOFFING,e.ALOLA_GRIMER,e.MAREANIE,e.SPINARAK,e.TRUBBISH,e.DROWZEE],1:[e.FOMANTIS,e.SABLEYE,e.SANDILE,e.HOUNDOUR,e.ALOLA_MAROWAK,e.GASTLY,e.PANCHAM,e.ZUBAT,e.VENIPEDE,e.VULLABY],2:[e.SANDYGAST,e.PAWNIARD,e.MIMIKYU,e.DHELMISE,e.WISHIWASHI,e.NYMBLE],3:[e.GRUBBIN,e.DEWPIDER]}),[U.PLUMERIA]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("skull_admin","skull",[e.SALAZZLE]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.MACRO_GRUNT]:new re(++Ne).setHasGenders("Macro Grunt Female").setHasDouble("Macro Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_macro_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.CUFANT,e.GALAR_MEOWTH,e.KLINK,e.ROOKIDEE,e.CRAMORANT,e.GALAR_ZIGZAGOON,e.SKWOVET,e.STEELIX,e.MAWILE,e.FERROSEED],1:[e.DRILBUR,e.MAGNEMITE,e.HATENNA,e.ARROKUDA,e.APPLIN,e.GALAR_PONYTA,e.GALAR_YAMASK,e.SINISTEA,e.RIOLU],2:[e.FALINKS,e.BELDUM,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.HONEDGE,e.SCIZOR,e.GALAR_DARUMAKA],3:[e.DURALUDON,e.DREEPY]}),[U.OLEANA]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("macro_admin","macro",[e.GARBODOR]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_oleana").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)),[U.STAR_GRUNT]:new re(++Ne).setHasGenders("Star Grunt Female").setHasDouble("Star Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setSpeciesPools({0:[e.DUNSPARCE,e.HOUNDOUR,e.AZURILL,e.GULPIN,e.FOONGUS,e.FLETCHLING,e.LITLEO,e.FLABEBE,e.CRABRAWLER,e.NYMBLE,e.PAWMI,e.FIDOUGH,e.SQUAWKABILLY,e.MASCHIFF,e.SHROODLE,e.KLAWF,e.WIGLETT,e.PALDEA_WOOPER],1:[e.KOFFING,e.EEVEE,e.GIRAFARIG,e.RALTS,e.TORKOAL,e.SEVIPER,e.SCRAGGY,e.ZORUA,e.MIMIKYU,e.IMPIDIMP,e.FALINKS,e.CAPSAKID,e.TINKATINK,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.PALDEA_TAUROS],2:[e.MANKEY,e.PAWNIARD,e.CHARCADET,e.FLITTLE,e.VAROOM,e.ORTHWORM],3:[e.DONDOZO,e.GIMMIGHOUL]}),[U.GIACOMO]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_1",[e.KINGAMBIT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=1,E.moveset=[new Ot(t.WICKED_TORQUE),new Ot(t.SPIN_OUT),new Ot(t.SHIFT_GEAR),new Ot(t.HIGH_HORSEPOWER)]})),[U.MELA]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_2",[e.ARMAROUGE]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=2,E.moveset=[new Ot(t.BLAZING_TORQUE),new Ot(t.SPIN_OUT),new Ot(t.SHIFT_GEAR),new Ot(t.HIGH_HORSEPOWER)]})),[U.ATTICUS]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_3",[e.REVAVROOM]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=3,E.moveset=[new Ot(t.NOXIOUS_TORQUE),new Ot(t.SPIN_OUT),new Ot(t.SHIFT_GEAR),new Ot(t.HIGH_HORSEPOWER)]})),[U.ORTEGA]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_4",[e.DACHSBUN]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=4,E.moveset=[new Ot(t.MAGICAL_TORQUE),new Ot(t.SPIN_OUT),new Ot(t.SHIFT_GEAR),new Ot(t.HIGH_HORSEPOWER)]})),[U.ERI]:new re(++Ne).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_5",[e.ANNIHILAPE]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(E=>dA(E)).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=5,E.moveset=[new Ot(t.COMBAT_TORQUE),new Ot(t.SPIN_OUT),new Ot(t.SHIFT_GEAR),new Ot(t.HIGH_HORSEPOWER)]})),[U.BROCK]:new re(Ne=U.BROCK).initForGymLeader(We.BROCK,!0,i.ROCK).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.MISTY]:new re(++Ne).initForGymLeader(We.MISTY,!1,i.WATER).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.LT_SURGE]:new re(++Ne).initForGymLeader(We.LT_SURGE,!0,i.ELECTRIC).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.ERIKA]:new re(++Ne).initForGymLeader(We.ERIKA,!1,i.GRASS).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.JANINE]:new re(++Ne).initForGymLeader(We.JANINE,!1,i.POISON).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.SABRINA]:new re(++Ne).initForGymLeader(We.SABRINA,!1,i.PSYCHIC).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.BLAINE]:new re(++Ne).initForGymLeader(We.BLAINE,!0,i.FIRE).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.GIOVANNI]:new re(++Ne).initForGymLeader(We.GIOVANNI,!0,i.DARK).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.FALKNER]:new re(++Ne).initForGymLeader(We.FALKNER,!0,i.FLYING).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.BUGSY]:new re(++Ne).initForGymLeader(We.BUGSY,!0,i.BUG).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.WHITNEY]:new re(++Ne).initForGymLeader(We.WHITNEY,!1,i.NORMAL).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.MORTY]:new re(++Ne).initForGymLeader(We.MORTY,!0,i.GHOST).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.CHUCK]:new re(++Ne).initForGymLeader(We.CHUCK,!0,i.FIGHTING).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.JASMINE]:new re(++Ne).initForGymLeader(We.JASMINE,!1,i.STEEL).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.PRYCE]:new re(++Ne).initForGymLeader(We.PRYCE,!0,i.ICE).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.CLAIR]:new re(++Ne).initForGymLeader(We.CLAIR,!1,i.DRAGON).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.ROXANNE]:new re(++Ne).initForGymLeader(We.ROXANNE,!1,i.ROCK).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.BRAWLY]:new re(++Ne).initForGymLeader(We.BRAWLY,!0,i.FIGHTING).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.WATTSON]:new re(++Ne).initForGymLeader(We.WATTSON,!0,i.ELECTRIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.FLANNERY]:new re(++Ne).initForGymLeader(We.FLANNERY,!1,i.FIRE).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.NORMAN]:new re(++Ne).initForGymLeader(We.NORMAN,!0,i.NORMAL).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.WINONA]:new re(++Ne).initForGymLeader(We.WINONA,!1,i.FLYING).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.TATE]:new re(++Ne).initForGymLeader(We.TATE,!0,i.PSYCHIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("tate_liza_double").setDoubleTrainerType(U.LIZA).setDoubleTitle("gym_leader_double"),[U.LIZA]:new re(++Ne).initForGymLeader(We.LIZA,!1,i.PSYCHIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("liza_tate_double").setDoubleTrainerType(U.TATE).setDoubleTitle("gym_leader_double"),[U.JUAN]:new re(++Ne).initForGymLeader(We.JUAN,!0,i.WATER).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.ROARK]:new re(++Ne).initForGymLeader(We.ROARK,!0,i.ROCK).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.GARDENIA]:new re(++Ne).initForGymLeader(We.GARDENIA,!1,i.GRASS).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.MAYLENE]:new re(++Ne).initForGymLeader(We.MAYLENE,!1,i.FIGHTING).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CRASHER_WAKE]:new re(++Ne).initForGymLeader(We.CRASHER_WAKE,!0,i.WATER).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.FANTINA]:new re(++Ne).initForGymLeader(We.FANTINA,!1,i.GHOST).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.BYRON]:new re(++Ne).initForGymLeader(We.BYRON,!0,i.STEEL).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CANDICE]:new re(++Ne).initForGymLeader(We.CANDICE,!1,i.ICE).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.VOLKNER]:new re(++Ne).initForGymLeader(We.VOLKNER,!0,i.ELECTRIC).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CILAN]:new re(++Ne).initForGymLeader(We.CILAN,!0,i.GRASS).setMixedBattleBgm("battle_unova_gym"),[U.CHILI]:new re(++Ne).initForGymLeader(We.CHILI,!0,i.FIRE).setMixedBattleBgm("battle_unova_gym"),[U.CRESS]:new re(++Ne).initForGymLeader(We.CRESS,!0,i.WATER).setMixedBattleBgm("battle_unova_gym"),[U.CHEREN]:new re(++Ne).initForGymLeader(We.CHEREN,!0,i.NORMAL).setMixedBattleBgm("battle_unova_gym"),[U.LENORA]:new re(++Ne).initForGymLeader(We.LENORA,!1,i.NORMAL).setMixedBattleBgm("battle_unova_gym"),[U.ROXIE]:new re(++Ne).initForGymLeader(We.ROXIE,!1,i.POISON).setMixedBattleBgm("battle_unova_gym"),[U.BURGH]:new re(++Ne).initForGymLeader(We.BURGH,!0,i.BUG).setMixedBattleBgm("battle_unova_gym"),[U.ELESA]:new re(++Ne).initForGymLeader(We.ELESA,!1,i.ELECTRIC).setMixedBattleBgm("battle_unova_gym"),[U.CLAY]:new re(++Ne).initForGymLeader(We.CLAY,!0,i.GROUND).setMixedBattleBgm("battle_unova_gym"),[U.SKYLA]:new re(++Ne).initForGymLeader(We.SKYLA,!1,i.FLYING).setMixedBattleBgm("battle_unova_gym"),[U.BRYCEN]:new re(++Ne).initForGymLeader(We.BRYCEN,!0,i.ICE).setMixedBattleBgm("battle_unova_gym"),[U.DRAYDEN]:new re(++Ne).initForGymLeader(We.DRAYDEN,!0,i.DRAGON).setMixedBattleBgm("battle_unova_gym"),[U.MARLON]:new re(++Ne).initForGymLeader(We.MARLON,!0,i.WATER).setMixedBattleBgm("battle_unova_gym"),[U.VIOLA]:new re(++Ne).initForGymLeader(We.VIOLA,!1,i.BUG).setMixedBattleBgm("battle_kalos_gym"),[U.GRANT]:new re(++Ne).initForGymLeader(We.GRANT,!0,i.ROCK).setMixedBattleBgm("battle_kalos_gym"),[U.KORRINA]:new re(++Ne).initForGymLeader(We.KORRINA,!1,i.FIGHTING).setMixedBattleBgm("battle_kalos_gym"),[U.RAMOS]:new re(++Ne).initForGymLeader(We.RAMOS,!0,i.GRASS).setMixedBattleBgm("battle_kalos_gym"),[U.CLEMONT]:new re(++Ne).initForGymLeader(We.CLEMONT,!0,i.ELECTRIC).setMixedBattleBgm("battle_kalos_gym"),[U.VALERIE]:new re(++Ne).initForGymLeader(We.VALERIE,!1,i.FAIRY).setMixedBattleBgm("battle_kalos_gym"),[U.OLYMPIA]:new re(++Ne).initForGymLeader(We.OLYMPIA,!1,i.PSYCHIC).setMixedBattleBgm("battle_kalos_gym"),[U.WULFRIC]:new re(++Ne).initForGymLeader(We.WULFRIC,!0,i.ICE).setMixedBattleBgm("battle_kalos_gym"),[U.MILO]:new re(++Ne).initForGymLeader(We.MILO,!0,i.GRASS).setMixedBattleBgm("battle_galar_gym"),[U.NESSA]:new re(++Ne).setName("Nessa").initForGymLeader(We.NESSA,!1,i.WATER).setMixedBattleBgm("battle_galar_gym"),[U.KABU]:new re(++Ne).initForGymLeader(We.KABU,!0,i.FIRE).setMixedBattleBgm("battle_galar_gym"),[U.BEA]:new re(++Ne).setName("Bea").initForGymLeader(We.BEA,!1,i.FIGHTING).setMixedBattleBgm("battle_galar_gym"),[U.ALLISTER]:new re(++Ne).setName("Allister").initForGymLeader(We.ALLISTER,!0,i.GHOST).setMixedBattleBgm("battle_galar_gym"),[U.OPAL]:new re(++Ne).initForGymLeader(We.OPAL,!1,i.FAIRY).setMixedBattleBgm("battle_galar_gym"),[U.BEDE]:new re(++Ne).initForGymLeader(We.BEDE,!0,i.FAIRY).setMixedBattleBgm("battle_galar_gym"),[U.GORDIE]:new re(++Ne).initForGymLeader(We.GORDIE,!0,i.ROCK).setMixedBattleBgm("battle_galar_gym"),[U.MELONY]:new re(++Ne).initForGymLeader(We.MELONY,!1,i.ICE).setMixedBattleBgm("battle_galar_gym"),[U.PIERS]:new re(++Ne).initForGymLeader(We.PIERS,!0,i.DARK).setHasDouble("piers_marnie_double").setDoubleTrainerType(U.MARNIE).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[U.MARNIE]:new re(++Ne).setName("Marnie").initForGymLeader(We.MARNIE,!1,i.DARK).setHasDouble("marnie_piers_double").setDoubleTrainerType(U.PIERS).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[U.RAIHAN]:new re(++Ne).setName("Raihan").initForGymLeader(We.RAIHAN,!0,i.DRAGON).setMixedBattleBgm("battle_galar_gym"),[U.KATY]:new re(++Ne).initForGymLeader(We.KATY,!1,i.BUG).setMixedBattleBgm("battle_paldea_gym"),[U.BRASSIUS]:new re(++Ne).initForGymLeader(We.BRASSIUS,!0,i.GRASS).setMixedBattleBgm("battle_paldea_gym"),[U.IONO]:new re(++Ne).initForGymLeader(We.IONO,!1,i.ELECTRIC).setMixedBattleBgm("battle_paldea_gym"),[U.KOFU]:new re(++Ne).initForGymLeader(We.KOFU,!0,i.WATER).setMixedBattleBgm("battle_paldea_gym"),[U.LARRY]:new re(++Ne).setName("Larry").initForGymLeader(We.LARRY,!0,i.NORMAL).setMixedBattleBgm("battle_paldea_gym"),[U.RYME]:new re(++Ne).initForGymLeader(We.RYME,!1,i.GHOST).setMixedBattleBgm("battle_paldea_gym"),[U.TULIP]:new re(++Ne).initForGymLeader(We.TULIP,!1,i.PSYCHIC).setMixedBattleBgm("battle_paldea_gym"),[U.GRUSHA]:new re(++Ne).initForGymLeader(We.GRUSHA,!0,i.ICE).setMixedBattleBgm("battle_paldea_gym"),[U.LORELEI]:new re(Ne=U.LORELEI).initForEliteFour(We.LORELEI,!1,i.ICE).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.BRUNO]:new re(++Ne).initForEliteFour(We.BRUNO,!0,i.FIGHTING).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.AGATHA]:new re(++Ne).initForEliteFour(We.AGATHA,!1,i.GHOST).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.LANCE]:new re(++Ne).setName("Lance").initForEliteFour(We.LANCE,!0,i.DRAGON).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.WILL]:new re(++Ne).initForEliteFour(We.WILL,!0,i.PSYCHIC).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.KOGA]:new re(++Ne).initForEliteFour(We.KOGA,!0,i.POISON).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.KAREN]:new re(++Ne).initForEliteFour(We.KAREN,!1,i.DARK).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.SIDNEY]:new re(++Ne).initForEliteFour(We.SIDNEY,!0,i.DARK).setMixedBattleBgm("battle_hoenn_elite"),[U.PHOEBE]:new re(++Ne).initForEliteFour(We.PHOEBE,!1,i.GHOST).setMixedBattleBgm("battle_hoenn_elite"),[U.GLACIA]:new re(++Ne).initForEliteFour(We.GLACIA,!1,i.ICE).setMixedBattleBgm("battle_hoenn_elite"),[U.DRAKE]:new re(++Ne).initForEliteFour(We.DRAKE,!0,i.DRAGON).setMixedBattleBgm("battle_hoenn_elite"),[U.AARON]:new re(++Ne).initForEliteFour(We.AARON,!0,i.BUG).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.BERTHA]:new re(++Ne).initForEliteFour(We.BERTHA,!1,i.GROUND).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.FLINT]:new re(++Ne).initForEliteFour(We.FLINT,!0,i.FIRE).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.LUCIAN]:new re(++Ne).initForEliteFour(We.LUCIAN,!0,i.PSYCHIC).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.SHAUNTAL]:new re(++Ne).initForEliteFour(We.SHAUNTAL,!1,i.GHOST).setMixedBattleBgm("battle_unova_elite"),[U.MARSHAL]:new re(++Ne).initForEliteFour(We.MARSHAL,!0,i.FIGHTING).setMixedBattleBgm("battle_unova_elite"),[U.GRIMSLEY]:new re(++Ne).initForEliteFour(We.GRIMSLEY,!0,i.DARK).setMixedBattleBgm("battle_unova_elite"),[U.CAITLIN]:new re(++Ne).initForEliteFour(We.CAITLIN,!1,i.PSYCHIC).setMixedBattleBgm("battle_unova_elite"),[U.MALVA]:new re(++Ne).initForEliteFour(We.MALVA,!1,i.FIRE).setMixedBattleBgm("battle_kalos_elite"),[U.SIEBOLD]:new re(++Ne).initForEliteFour(We.SIEBOLD,!0,i.WATER).setMixedBattleBgm("battle_kalos_elite"),[U.WIKSTROM]:new re(++Ne).initForEliteFour(We.WIKSTROM,!0,i.STEEL).setMixedBattleBgm("battle_kalos_elite"),[U.DRASNA]:new re(++Ne).initForEliteFour(We.DRASNA,!1,i.DRAGON).setMixedBattleBgm("battle_kalos_elite"),[U.HALA]:new re(++Ne).initForEliteFour(We.HALA,!0,i.FIGHTING).setMixedBattleBgm("battle_alola_elite"),[U.MOLAYNE]:new re(++Ne).initForEliteFour(We.MOLAYNE,!0,i.STEEL).setMixedBattleBgm("battle_alola_elite"),[U.OLIVIA]:new re(++Ne).initForEliteFour(We.OLIVIA,!1,i.ROCK).setMixedBattleBgm("battle_alola_elite"),[U.ACEROLA]:new re(++Ne).initForEliteFour(We.ACEROLA,!1,i.GHOST).setMixedBattleBgm("battle_alola_elite"),[U.KAHILI]:new re(++Ne).initForEliteFour(We.KAHILI,!1,i.FLYING).setMixedBattleBgm("battle_alola_elite"),[U.MARNIE_ELITE]:new re(++Ne).setName("Marnie").initForEliteFour(We.MARNIE_ELITE,!1,i.DARK).setMixedBattleBgm("battle_galar_elite"),[U.NESSA_ELITE]:new re(++Ne).setName("Nessa").initForEliteFour(We.NESSA_ELITE,!1,i.WATER).setMixedBattleBgm("battle_galar_elite"),[U.BEA_ELITE]:new re(++Ne).setName("Bea").initForEliteFour(We.BEA_ELITE,!1,i.FIGHTING).setMixedBattleBgm("battle_galar_elite"),[U.ALLISTER_ELITE]:new re(++Ne).setName("Allister").initForEliteFour(We.ALLISTER_ELITE,!0,i.GHOST).setMixedBattleBgm("battle_galar_elite"),[U.RAIHAN_ELITE]:new re(++Ne).setName("Raihan").initForEliteFour(We.RAIHAN_ELITE,!0,i.DRAGON).setMixedBattleBgm("battle_galar_elite"),[U.RIKA]:new re(++Ne).initForEliteFour(We.RIKA,!1,i.GROUND).setMixedBattleBgm("battle_paldea_elite"),[U.POPPY]:new re(++Ne).initForEliteFour(We.POPPY,!1,i.STEEL).setMixedBattleBgm("battle_paldea_elite"),[U.LARRY_ELITE]:new re(++Ne).setName("Larry").initForEliteFour(We.LARRY_ELITE,!0,i.NORMAL,i.FLYING).setMixedBattleBgm("battle_paldea_elite"),[U.HASSEL]:new re(++Ne).initForEliteFour(We.HASSEL,!0,i.DRAGON).setMixedBattleBgm("battle_paldea_elite"),[U.CRISPIN]:new re(++Ne).initForEliteFour(We.CRISPIN,!0,i.FIRE).setMixedBattleBgm("battle_bb_elite"),[U.AMARYS]:new re(++Ne).initForEliteFour(We.AMARYS,!1,i.STEEL).setMixedBattleBgm("battle_bb_elite"),[U.LACEY]:new re(++Ne).initForEliteFour(We.LACEY,!1,i.FAIRY).setMixedBattleBgm("battle_bb_elite"),[U.DRAYTON]:new re(++Ne).initForEliteFour(We.DRAYTON,!0,i.DRAGON).setMixedBattleBgm("battle_bb_elite"),[U.BLUE]:new re(Ne=U.BLUE).initForChampion(We.BLUE,!0).setBattleBgm("battle_kanto_champion").setMixedBattleBgm("battle_kanto_champion").setHasDouble("blue_red_double").setDoubleTrainerType(U.RED).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.ALAKAZAM],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.PIDGEOT],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.RED]:new re(++Ne).initForChampion(We.RED,!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setHasDouble("red_blue_double").setDoubleTrainerType(U.BLUE).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.PIKACHU],1,!0,E=>{E.formIndex=8,E.generateAndPopulateMoveset(),E.generateName()})).setPartyMemberFunc(1,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.LANCE_CHAMPION]:new re(++Ne).setName("Lance").initForChampion(We.LANCE_CHAMPION,!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setPartyMemberFunc(0,Ce([e.AERODACTYL],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.LATIAS,e.LATIOS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.STEVEN]:new re(++Ne).initForChampion(We.STEVEN,!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("steven_wallace_double").setDoubleTrainerType(U.WALLACE).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.SKARMORY],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.METAGROSS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.WALLACE]:new re(++Ne).initForChampion(We.WALLACE,!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("wallace_steven_double").setDoubleTrainerType(U.STEVEN).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.PELIPPER],1,!0,E=>{E.abilityIndex=1,E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.SWAMPERT],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.CYNTHIA]:new re(++Ne).initForChampion(We.CYNTHIA,!1).setBattleBgm("battle_sinnoh_champion").setMixedBattleBgm("battle_sinnoh_champion").setPartyMemberFunc(0,Ce([e.SPIRITOMB],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.GARCHOMP],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.ALDER]:new re(++Ne).initForChampion(We.ALDER,!0).setHasDouble("alder_iris_double").setDoubleTrainerType(U.IRIS).setDoubleTitle("champion_double").setBattleBgm("battle_champion_alder").setMixedBattleBgm("battle_champion_alder").setPartyMemberFunc(0,Ce([e.BOUFFALANT,e.BRAVIARY],1,!0,E=>{E.generateAndPopulateMoveset()})),[U.IRIS]:new re(++Ne).initForChampion(We.IRIS,!1).setBattleBgm("battle_champion_iris").setMixedBattleBgm("battle_champion_iris").setHasDouble("iris_alder_double").setDoubleTrainerType(U.ALDER).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ce([e.DRUDDIGON],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.LAPRAS],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.DIANTHA]:new re(++Ne).initForChampion(We.DIANTHA,!1).setMixedBattleBgm("battle_kalos_champion").setPartyMemberFunc(0,Ce([e.GOURGEIST],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.GARDEVOIR],1,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})),[U.HAU]:new re(++Ne).initForChampion(We.HAU,!0).setMixedBattleBgm("battle_alola_champion").setPartyMemberFunc(0,Ce([e.ALOLA_RAICHU],1,!0,E=>{E.generateAndPopulateMoveset()})),[U.LEON]:new re(++Ne).initForChampion(We.LEON,!0).setMixedBattleBgm("battle_galar_champion").setPartyMemberFunc(0,Ce([e.RILLABOOM,e.CINDERACE,e.INTELEON],1,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.CHARIZARD],1,!0,E=>{E.formIndex=3,E.generateAndPopulateMoveset(),E.generateName()})),[U.GEETA]:new re(++Ne).initForChampion(We.GEETA,!1).setMixedBattleBgm("battle_champion_geeta").setPartyMemberFunc(0,Ce([e.GLIMMORA],1,!0,E=>{E.generateAndPopulateMoveset()})),[U.NEMONA]:new re(++Ne).initForChampion(We.NEMONA,!1).setMixedBattleBgm("battle_champion_nemona").setPartyMemberFunc(0,Ce([e.LYCANROC],1,!0,E=>{E.formIndex=0,E.generateAndPopulateMoveset()})),[U.KIERAN]:new re(++Ne).initForChampion(We.KIERAN,!0).setMixedBattleBgm("battle_champion_kieran").setPartyMemberFunc(0,Ce([e.POLIWRATH,e.POLITOED],1,!0,E=>{E.generateAndPopulateMoveset()})),[U.RIVAL]:new re(Ne=U.RIVAL).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(et.RIVAL).setModifierRewardFuncs(()=>$.SUPER_EXP_CHARM,()=>$.EXP_SHARE).setEventModifierRewardFuncs(()=>$.SHINY_CHARM,()=>$.ABILITY_CHARM,()=>$.CATCHING_CHARM).setPartyMemberFunc(0,Ce([e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],1,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ce([e.PIDGEY,e.HOOTHOOT,e.TAILLOW,e.STARLY,e.PIDOVE,e.FLETCHLING,e.PIKIPEK,e.ROOKIDEE,e.WATTREL],1,!0)),[U.RIVAL_2]:new re(++Ne).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.25).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(et.RIVAL_2).setModifierRewardFuncs(()=>$.EXP_SHARE).setEventModifierRewardFuncs(()=>$.SHINY_CHARM).setPartyMemberFunc(0,Ce([e.IVYSAUR,e.CHARMELEON,e.WARTORTLE,e.BAYLEEF,e.QUILAVA,e.CROCONAW,e.GROVYLE,e.COMBUSKEN,e.MARSHTOMP,e.GROTLE,e.MONFERNO,e.PRINPLUP,e.SERVINE,e.PIGNITE,e.DEWOTT,e.QUILLADIN,e.BRAIXEN,e.FROGADIER,e.DARTRIX,e.TORRACAT,e.BRIONNE,e.THWACKEY,e.RABOOT,e.DRIZZILE,e.FLORAGATO,e.CROCALOR,e.QUAXWELL],1,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ce([e.PIDGEOTTO,e.HOOTHOOT,e.TAILLOW,e.STARAVIA,e.TRANQUILL,e.FLETCHINDER,e.TRUMBEAK,e.CORVISQUIRE,e.WATTREL],1,!0)).setPartyMemberFunc(2,lL(E=>!kt.hasOwnProperty(E.speciesId)&&!QA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)),[U.RIVAL_3]:new re(++Ne).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.5).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(et.RIVAL_3).setPartyMemberFunc(0,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ce([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,lL(E=>!kt.hasOwnProperty(E.speciesId)&&!QA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540),[U.RIVAL_4]:new re(++Ne).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(1.75).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival_2").setMixedBattleBgm("battle_rival_2").setPartyTemplates(et.RIVAL_4).setPartyMemberFunc(0,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ce([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,lL(E=>!kt.hasOwnProperty(E.speciesId)&&!QA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setGenModifiersFunc(E=>{const A=E[0];return[$.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc($.TERA_SHARD).newModifier(A)]}),[U.RIVAL_5]:new re(++Ne).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(2.25).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(et.RIVAL_5).setPartyMemberFunc(0,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>{E.setBoss(!0,2),E.abilityIndex=0})).setPartyMemberFunc(1,Ce([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0)).setPartyMemberFunc(2,lL(E=>!kt.hasOwnProperty(E.speciesId)&&!QA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setPartyMemberFunc(5,Ce([e.RAYQUAZA],1,!0,E=>{E.setBoss(!0,3),E.pokeball=be.MASTER_BALL,E.shiny=!0,E.variant=1})).setGenModifiersFunc(E=>{const A=E[0];return[$.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc($.TERA_SHARD).newModifier(A)]}),[U.RIVAL_6]:new re(++Ne).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(3).setEncounterBgm("final").setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(et.RIVAL_6).setPartyMemberFunc(0,Ce([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],1,!0,E=>{E.setBoss(!0,3),E.abilityIndex=0,E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(2,lL(E=>!kt.hasOwnProperty(E.speciesId)&&!QA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setPartyMemberFunc(5,Ce([e.RAYQUAZA],1,!0,E=>{E.setBoss(),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL,E.shiny=!0,E.variant=1,E.formIndex=1,E.generateName()})).setGenModifiersFunc(E=>{const A=E[0];return[$.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc($.TERA_SHARD).newModifier(A)]}),[U.ROCKET_BOSS_GIOVANNI_1]:new re(Ne=U.ROCKET_BOSS_GIOVANNI_1).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[]).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.PERSIAN,e.ALOLA_PERSIAN],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=je.MALE})).setPartyMemberFunc(1,Ce([e.DUGTRIO,e.ALOLA_DUGTRIO])).setPartyMemberFunc(2,Ce([e.HONCHKROW])).setPartyMemberFunc(3,Ce([e.NIDOKING,e.NIDOQUEEN])).setPartyMemberFunc(4,Ce([e.RHYPERIOR])).setPartyMemberFunc(5,Ce([e.KANGASKHAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName()})),[U.ROCKET_BOSS_GIOVANNI_2]:new re(++Ne).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[],!0).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.TYRANITAR,e.IRON_THORNS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.HIPPOWDON])).setPartyMemberFunc(2,Ce([e.EXCADRILL,e.GARCHOMP])).setPartyMemberFunc(3,Ce([e.KANGASKHAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(4,Ce([e.GASTRODON,e.SEISMITOAD],1,!0,E=>{E.species.speciesId===e.GASTRODON?E.abilityIndex=0:E.species.speciesId===e.SEISMITOAD&&(E.abilityIndex=2)})).setPartyMemberFunc(5,Ce([e.MEWTWO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.MAXIE]:new re(++Ne).setName("Maxie").initForEvilTeamLeader("Magma Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.MIGHTYENA])).setPartyMemberFunc(1,Ce([e.CROBAT,e.GLISCOR])).setPartyMemberFunc(2,Ce([e.WEEZING,e.GALAR_WEEZING])).setPartyMemberFunc(3,Ce([e.MAGMORTAR,e.TORKOAL])).setPartyMemberFunc(4,Ce([e.FLYGON])).setPartyMemberFunc(5,Ce([e.CAMERUPT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=je.MALE})),[U.MAXIE_2]:new re(++Ne).setName("Maxie").initForEvilTeamLeader("Magma Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.SOLROCK,e.TYPHLOSION],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.TORKOAL,e.NINETALES],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(2,Ce([e.SHIFTRY,e.SCOVILLAIN],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=0})).setPartyMemberFunc(3,Ce([e.GREAT_TUSK])).setPartyMemberFunc(4,Ce([e.CAMERUPT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=je.MALE})).setPartyMemberFunc(5,Ce([e.GROUDON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.ARCHIE]:new re(++Ne).setName("Archie").initForEvilTeamLeader("Aqua Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.LINOONE])).setPartyMemberFunc(1,Ce([e.CROBAT,e.PELIPPER])).setPartyMemberFunc(2,Ce([e.MUK,e.ALOLA_MUK])).setPartyMemberFunc(3,Ce([e.TENTACRUEL])).setPartyMemberFunc(4,Ce([e.RELICANTH,e.WAILORD])).setPartyMemberFunc(5,Ce([e.SHARPEDO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=je.MALE})),[U.ARCHIE_2]:new re(++Ne).setName("Archie").initForEvilTeamLeader("Aqua Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.EMPOLEON,e.LUDICOLO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.POLITOED,e.PELIPPER],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(2,Ce([e.BEARTIC,e.ARMALDO],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(3,Ce([e.OVERQWIL],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,Ce([e.SHARPEDO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=je.MALE})).setPartyMemberFunc(5,Ce([e.KYOGRE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.CYRUS]:new re(++Ne).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[]).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.GYARADOS])).setPartyMemberFunc(1,Ce([e.HONCHKROW,e.HISUI_BRAVIARY])).setPartyMemberFunc(2,Ce([e.CROBAT,e.GLISCOR])).setPartyMemberFunc(3,Ce([e.AZELF,e.UXIE,e.MESPRIT])).setPartyMemberFunc(4,Ce([e.HOUNDOOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(5,Ce([e.WEAVILE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.gender=je.MALE})),[U.CYRUS_2]:new re(++Ne).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[],!0).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.AZELF,e.UXIE,e.MESPRIT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.ELECTRODE,e.HISUI_ELECTRODE])).setPartyMemberFunc(2,Ce([e.SALAMENCE,e.ROARING_MOON])).setPartyMemberFunc(3,Ce([e.HOUNDOOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(4,Ce([e.WEAVILE,e.SNEASLER],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.gender=je.MALE})).setPartyMemberFunc(5,Ce([e.DARKRAI],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.GHETSIS]:new re(++Ne).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[]).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.COFAGRIGUS,e.RUNERIGUS])).setPartyMemberFunc(1,Ce([e.BOUFFALANT])).setPartyMemberFunc(2,Ce([e.SEISMITOAD,e.CARRACOSTA])).setPartyMemberFunc(3,Ce([e.EELEKTROSS,e.GALVANTULA])).setPartyMemberFunc(4,Ce([e.VOLCARONA])).setPartyMemberFunc(5,Ce([e.HYDREIGON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.gender=je.MALE})),[U.GHETSIS_2]:new re(++Ne).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[],!0).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.GENESECT],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=_e(4,1)})).setPartyMemberFunc(1,Ce([e.BASCULEGION,e.JELLICENT],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=je.MALE,E.formIndex=0})).setPartyMemberFunc(2,Ce([e.KINGAMBIT])).setPartyMemberFunc(3,Ce([e.VOLCARONA,e.SLITHER_WING])).setPartyMemberFunc(4,Ce([e.HYDREIGON,e.IRON_JUGULIS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.species.speciesId===e.HYDREIGON?E.gender=je.MALE:E.species.speciesId===e.IRON_JUGULIS&&(E.gender=je.GENDERLESS)})).setPartyMemberFunc(5,Ce([e.KYUREM],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.LYSANDRE]:new re(++Ne).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[]).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.MIENSHAO])).setPartyMemberFunc(1,Ce([e.HONCHKROW,e.TALONFLAME])).setPartyMemberFunc(2,Ce([e.PYROAR],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=je.MALE})).setPartyMemberFunc(3,Ce([e.CLAWITZER,e.DRAGALGE])).setPartyMemberFunc(4,Ce([e.HELIOLISK,e.MALAMAR])).setPartyMemberFunc(5,Ce([e.GYARADOS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=je.MALE})),[U.LYSANDRE_2]:new re(++Ne).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[],!0).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.SCREAM_TAIL,e.FLUTTER_MANE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.PYROAR],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=je.MALE})).setPartyMemberFunc(2,Ce([e.IRON_MOTH])).setPartyMemberFunc(3,Ce([e.GOODRA,e.HISUI_GOODRA])).setPartyMemberFunc(4,Ce([e.GYARADOS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=je.MALE})).setPartyMemberFunc(5,Ce([e.YVELTAL],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.LUSAMINE]:new re(++Ne).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[]).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.CLEFABLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=je.FEMALE})).setPartyMemberFunc(1,Ce([e.LILLIGANT,e.HISUI_LILLIGANT])).setPartyMemberFunc(2,Ce([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(3,Ce([e.GALAR_SLOWBRO,e.GALAR_SLOWKING])).setPartyMemberFunc(4,Ce([e.BEWEAR])).setPartyMemberFunc(5,Ce([e.NIHILEGO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})),[U.LUSAMINE_2]:new re(++Ne).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[],!0).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.NIHILEGO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(1,Ce([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(2,Ce([e.CLEFABLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.gender=je.FEMALE})).setPartyMemberFunc(3,Ce([e.STAKATAKA,e.CELESTEELA,e.GUZZLORD],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(4,Ce([e.PHEROMOSA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(5,Ce([e.NECROZMA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.GUZMA]:new re(++Ne).setName("Guzma").initForEvilTeamLeader("Skull Boss",[]).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.LOKIX,e.YANMEGA],1,!0,E=>{E.species.speciesId===e.LOKIX?E.abilityIndex=2:E.species.speciesId===e.YANMEGA&&(E.abilityIndex=1)})).setPartyMemberFunc(1,Ce([e.HERACROSS])).setPartyMemberFunc(2,Ce([e.SCIZOR,e.KLEAVOR],1,!0,E=>{E.species.speciesId===e.SCIZOR?E.abilityIndex=1:E.species.speciesId===e.KLEAVOR&&(E.abilityIndex=2)})).setPartyMemberFunc(3,Ce([e.GALVANTULA,e.VIKAVOLT])).setPartyMemberFunc(4,Ce([e.PINSIR],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=be.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(5,Ce([e.GOLISOPOD],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.gender=je.MALE,E.pokeball=be.ULTRA_BALL})),[U.GUZMA_2]:new re(++Ne).setName("Guzma").initForEvilTeamLeader("Skull Boss",[],!0).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.GOLISOPOD],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.abilityIndex=2,E.gender=je.MALE,E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.SCIZOR,e.KLEAVOR],1,!0,E=>{E.species.speciesId===e.SCIZOR?E.abilityIndex=1:E.species.speciesId===e.KLEAVOR&&(E.abilityIndex=2)})).setPartyMemberFunc(2,Ce([e.HISUI_SAMUROTT,e.CRAWDAUNT],1,!0,E=>{E.abilityIndex=2})).setPartyMemberFunc(3,Ce([e.BUZZWOLE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(4,Ce([e.XURKITREE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(5,Ce([e.PINSIR],1,!0,E=>{E.setBoss(!0,2),E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.pokeball=be.ULTRA_BALL})),[U.ROSE]:new re(++Ne).setName("Rose").initForEvilTeamLeader("Macro Boss",[]).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.ARCHALUDON])).setPartyMemberFunc(1,Ce([e.FERROTHORN,e.ESCAVALIER])).setPartyMemberFunc(2,Ce([e.SIRFETCHD,e.MR_RIME])).setPartyMemberFunc(3,Ce([e.CORVIKNIGHT])).setPartyMemberFunc(4,Ce([e.PERRSERKER,e.KLINKLANG])).setPartyMemberFunc(5,Ce([e.COPPERAJAH],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName(),E.pokeball=be.ULTRA_BALL,E.gender=je.FEMALE})),[U.ROSE_2]:new re(++Ne).setName("Rose").initForEvilTeamLeader("Macro Boss",[],!0).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.ARCHALUDON],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ce([e.AEGISLASH,e.GHOLDENGO])).setPartyMemberFunc(2,Ce([e.DRACOVISH,e.DRACOZOLT],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(3,Ce([e.MELMETAL])).setPartyMemberFunc(4,Ce([e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(5,Ce([e.COPPERAJAH],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName(),E.pokeball=be.ULTRA_BALL,E.gender=je.FEMALE})),[U.PENNY]:new re(++Ne).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[]).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.VAPOREON,e.JOLTEON,e.FLAREON])).setPartyMemberFunc(1,Ce([e.ESPEON,e.UMBREON],1,!0,E=>{E.abilityIndex=2,E.generateAndPopulateMoveset()})).setPartyMemberFunc(2,Ce([e.LEAFEON,e.GLACEON])).setPartyMemberFunc(3,Ce([e.ROTOM],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=_e(5,1)})).setPartyMemberFunc(4,Ce([e.SYLVEON],1,!0,E=>{E.abilityIndex=2,E.generateAndPopulateMoveset(),E.gender=je.FEMALE})).setPartyMemberFunc(5,Ce([e.EEVEE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=2,E.pokeball=be.ULTRA_BALL,E.generateName()})).setGenModifiersFunc(E=>{const A=E[4];return[$.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc($.TERA_SHARD).newModifier(A)]}),[U.PENNY_2]:new re(++Ne).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[],!0).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ce([e.SYLVEON],1,!0,E=>{E.setBoss(!0,2),E.abilityIndex=2,E.generateAndPopulateMoveset(),E.gender=je.FEMALE})).setPartyMemberFunc(1,Ce([e.ENTEI,e.RAIKOU,e.SUICUNE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(2,Ce([e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT])).setPartyMemberFunc(3,Ce([e.REVAVROOM],1,!0,E=>{E.formIndex=_e(5,1),E.generateAndPopulateMoveset(),E.pokeball=be.ROGUE_BALL})).setPartyMemberFunc(4,Ce([e.EEVEE],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=2,E.generateName(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(5,Ce([e.ZAMAZENTA],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})).setGenModifiersFunc(E=>{const A=E[0];return[$.TERA_SHARD().generateType([],[A.species.type1]).withIdFromFunc($.TERA_SHARD).newModifier(A)]}),[U.BUCK]:new re(++Ne).setName("Buck").initForStatTrainer([],!0).setPartyMemberFunc(0,Ce([e.CLAYDOL],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.VENUSAUR,e.COALOSSAL],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.species.speciesId===e.VENUSAUR?(E.formIndex=2,E.abilityIndex=2):E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ce([e.AGGRON],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ce([e.TORKOAL],1,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,Ce([e.GREAT_TUSK],1,!0)).setPartyMemberFunc(5,Ce([e.HEATRAN],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.CHERYL]:new re(++Ne).setName("Cheryl").initForStatTrainer([],!1).setPartyMemberFunc(0,Ce([e.BLISSEY],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.SNORLAX,e.LAPRAS],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ce([e.AUDINO],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ce([e.GOODRA],1,!0)).setPartyMemberFunc(4,Ce([e.IRON_HANDS],1,!0)).setPartyMemberFunc(5,Ce([e.CRESSELIA,e.ENAMORUS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.species.speciesId===e.ENAMORUS&&(E.formIndex=1,E.generateName()),E.pokeball=be.MASTER_BALL})),[U.MARLEY]:new re(++Ne).setName("Marley").initForStatTrainer([],!1).setPartyMemberFunc(0,Ce([e.ARCANINE],1,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=be.ULTRA_BALL})).setPartyMemberFunc(1,Ce([e.CINDERACE,e.INTELEON],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ce([e.AERODACTYL],1,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ce([e.DRAGAPULT],1,!0)).setPartyMemberFunc(4,Ce([e.IRON_BUNDLE],1,!0)).setPartyMemberFunc(5,Ce([e.REGIELEKI],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.MIRA]:new re(++Ne).setName("Mira").initForStatTrainer([],!1).setPartyMemberFunc(0,Ce([e.ALAKAZAM],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=be.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(1,Ce([e.GENGAR,e.HATTERENE],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.formIndex=E.species.speciesId===e.GENGAR?2:1,E.generateName()})).setPartyMemberFunc(2,Ce([e.FLUTTER_MANE],1,!0)).setPartyMemberFunc(3,Ce([e.HYDREIGON],1,!0)).setPartyMemberFunc(4,Ce([e.MAGNEZONE],1,!0)).setPartyMemberFunc(5,Ce([e.LATIOS,e.LATIAS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=be.MASTER_BALL})),[U.RILEY]:new re(++Ne).setName("Riley").initForStatTrainer([],!0).setPartyMemberFunc(0,Ce([e.LUCARIO],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=be.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(1,Ce([e.RILLABOOM,e.CENTISKORCH],1,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=be.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ce([e.TYRANITAR],1,!0)).setPartyMemberFunc(3,Ce([e.ROARING_MOON],1,!0)).setPartyMemberFunc(4,Ce([e.URSALUNA],1,!0)).setPartyMemberFunc(5,Ce([e.REGIGIGAS,e.LANDORUS],1,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.species.speciesId===e.LANDORUS&&(E.formIndex=1,E.generateName()),E.pokeball=be.MASTER_BALL})),[U.VICTOR]:new re(++Ne).setTitle("The Winstrates").setLocalizedName("Victor").setMoneyMultiplier(1).setPartyTemplates(et.ONE_AVG_ONE_STRONG),[U.VICTORIA]:new re(++Ne).setTitle("The Winstrates").setLocalizedName("Victoria").setMoneyMultiplier(1).setPartyTemplates(et.ONE_AVG_ONE_STRONG),[U.VIVI]:new re(++Ne).setTitle("The Winstrates").setLocalizedName("Vivi").setMoneyMultiplier(1).setPartyTemplates(et.TWO_AVG_ONE_STRONG),[U.VICKY]:new re(++Ne).setTitle("The Winstrates").setLocalizedName("Vicky").setMoneyMultiplier(1).setPartyTemplates(et.ONE_AVG),[U.VITO]:new re(++Ne).setTitle("The Winstrates").setLocalizedName("Vito").setMoneyMultiplier(2).setPartyTemplates(new vA(new Je(3,we.AVERAGE),new Je(2,we.STRONG))),[U.BUG_TYPE_SUPERFAN]:new re(++Ne).setMoneyMultiplier(2.25).setEncounterBgm(U.ACE_TRAINER).setPartyTemplates(new Je(2,we.AVERAGE)),[U.EXPERT_POKEMON_BREEDER]:new re(++Ne).setMoneyMultiplier(3).setEncounterBgm(U.ACE_TRAINER).setLocalizedName("Expert Pokemon Breeder").setPartyTemplates(new Je(3,we.AVERAGE)),[U.FUTURE_SELF_M]:new re(++Ne).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self M").setPartyTemplates(new Je(6,we.STRONG)),[U.FUTURE_SELF_F]:new re(++Ne).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self F").setPartyTemplates(new Je(6,we.STRONG))};var OA=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FEMALE=1]="FEMALE",E[E.DOUBLE=2]="DOUBLE",E))(OA||{});const CF=class CF extends Phaser.GameObjects.Container{constructor(A,s,R,n,I,a,r){if(super(A,-72,80),this.config=ZA.hasOwnProperty(s)?ZA[s]:ZA[U.ACE_TRAINER],r&&(this.config=r),this.variant=R,this.partyTemplateIndex=Math.min(n!==void 0?n:y8(this.config.partyTemplates.map((C,M)=>M)),this.config.partyTemplates.length-1),FL.hasOwnProperty(s)){const C=FL[s];this.name=I||JA(Array.isArray(C[0])?C[R===1?1:0]:C),R===2&&(this.config.doubleOnly?a?this.partnerName=a:[this.name,this.partnerName]=this.name.split(" & "):this.partnerName=a||JA(Array.isArray(C[0])?C[1]:C))}switch(this.variant){case 1:this.config.hasGenders||(R=0);break;case 2:this.config.hasDouble||(R=0);break}console.log(Object.keys(et)[Object.values(et).indexOf(this.getPartyTemplate())]);const S=L((C,M)=>{const u=this.scene.addFieldSprite(0,0,this.config.getSpriteKey(R===1||M,this.isDouble()));return u.setOrigin(.5,1),u.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!!C}),u},"getSprite"),o=S(!0),l=S();if(l.setVisible(!1),this.add(o),this.add(l),R===2&&!this.config.doubleOnly){const C=S(!0,!0),M=S(!1,!0);M.setVisible(!1),o.x=-4,l.x=-4,C.x=28,M.x=28,this.add(C),this.add(M)}}getKey(A){return this.config.getSpriteKey(this.variant===1||A,this.isDouble())}getName(A=Tt.NONE,s=!1){let R=this.config.getTitle(A,this.variant),n=s&&this.config.title?this.config.title:null;const I=["grunt"];return this.name===""&&I.some(a=>R.toLocaleLowerCase().includes(a))?(n=D.t(`trainerClasses:${R.toLowerCase().replace(/\s/g,"_")}`),console.log("Localized grunt name: "+n),n):(this.name&&(s&&(CR()||UR(),n=D.t(`trainerClasses:${R.toLowerCase().replace(/\s/g,"_")}`)),A?R=A===Tt.TRAINER?this.name:this.partnerName||this.name:(R=this.name,this.partnerName&&(R=`${R} & ${this.partnerName}`))),this.config.titleDouble&&this.variant===2&&!this.config.doubleOnly&&(n=this.config.titleDouble,R=D.t(`trainerNames:${this.config.nameDouble.toLowerCase().replace(/\s/g,"_")}`)),console.log(n?`${n} ${R}`:R),n?`${n} ${R}`:R)}isDouble(){return this.config.doubleOnly||this.variant===2}getMixedBattleBgm(){return this.config.mixedBattleBgm}getBattleBgm(){return this.config.battleBgm}getEncounterBgm(){return this.variant?(this.variant===2?this.config.doubleEncounterBgm:this.config.femaleEncounterBgm)||this.config.encounterBgm:this.config.encounterBgm}getEncounterMessages(){return this.variant?(this.variant===2?this.config.doubleEncounterMessages:this.config.femaleEncounterMessages)||this.config.encounterMessages:this.config.encounterMessages}getVictoryMessages(){return this.variant?(this.variant===2?this.config.doubleVictoryMessages:this.config.femaleVictoryMessages)||this.config.victoryMessages:this.config.victoryMessages}getDefeatMessages(){return this.variant?(this.variant===2?this.config.doubleDefeatMessages:this.config.femaleDefeatMessages)||this.config.defeatMessages:this.config.defeatMessages}getPartyTemplate(){return this.config.partyTemplateFunc?this.config.partyTemplateFunc(this.scene):this.config.partyTemplates[this.partyTemplateIndex]}getPartyLevels(A){const s=[],R=this.getPartyTemplate(),n=this.scene.gameMode.getWaveForDifficulty(A),I=1+n/2+Math.pow(n/25,2);this.isDouble()&&R.size<2&&(R.size=2);for(let a=0;a<R.size;a++){let r=1;const S=R.getStrength(a);switch(S){case we.WEAKER:r=.95;break;case we.WEAK:r=1;break;case we.AVERAGE:r=1.1;break;case we.STRONG:r=1.2;break;case we.STRONGER:r=1.25;break}let o=0;S<we.STRONG&&(r=Math.min(r+.025*Math.floor(n/25),1.2),o=-Math.floor(n/50*(we.STRONG-S)));const l=Math.ceil(I*r)+o;s.push(l)}return s}genPartyMember(A){var I;const s=this.scene.currentBattle,R=(I=s.enemyLevels)==null?void 0:I[A];let n;return this.scene.executeWithSeedOffset(()=>{const a=this.getPartyTemplate(),r=a.getStrength(A);if(!(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly)){if(this.config.partyMemberFuncs.hasOwnProperty(A)){n=this.config.partyMemberFuncs[A](this.scene,R,r);return}if(this.config.partyMemberFuncs.hasOwnProperty(A-a.size)){n=this.config.partyMemberFuncs[A-a.size](this.scene,R,a.getStrength(A));return}}let S=0;if(a instanceof vA)for(const M of a.templates){if(S+M.size>A)break;S+=M.size}let o=[],l=!1;if(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly){l=!0;const M=We[U[this.config.trainerTypeDouble]],u=We[U[this.config.trainerType]],h=s.enemyParty.map(d=>d.species.speciesId),P=u.filter(d=>Array.isArray(d)?!d.some(H=>h.includes(H)):!h.includes(d)).flat(),G=M.filter(d=>Array.isArray(d)?!d.some(H=>h.includes(H)):!h.includes(d)).flat();A%2?A===1&&U[this.config.trainerTypeDouble]===U[U.TATE]?o=[e.SOLROCK]:A===1&&U[this.config.trainerTypeDouble]===U[U.LIZA]?o=[e.LUNATONE]:o=G:A===0&&U[this.config.trainerType]===U[U.TATE]?o=[e.SOLROCK]:A===0&&U[this.config.trainerType]===U[U.LIZA]?o=[e.LUNATONE]:o=P,o.length===0&&(l=!1)}let C=l?xe(o[Math.floor(_e(o.length))]):a.isSameSpecies(A)&&A>S?xe(s.enemyParty[S].species.getTrainerSpeciesForLevel(R,!1,a.getStrength(S),this.scene.currentBattle.waveIndex)):this.genNewPartyMemberSpecies(R,r);o&&(C=xe(C.getSpeciesForLevel(R,!0,!0,r,this.scene.currentBattle.waveIndex))),n=this.scene.addEnemyPokemon(C,R,!this.isDouble()||!(A%2)?Tt.TRAINER:Tt.TRAINER_PARTNER)},this.config.hasStaticParty?this.config.getDerivedType()+(A+1<<8):this.scene.currentBattle.waveIndex+(this.config.getDerivedType()<<10)+((this.config.useSameSeedForAllMembers?0:A)+1<<8)),n}genNewPartyMemberSpecies(A,s,R){const n=this.scene.currentBattle,I=this.getPartyTemplate();let a;if(this.config.speciesPools){const o=_e(512);let l=o>=156?cn.COMMON:o>=32?cn.UNCOMMON:o>=6?cn.RARE:o>=1?cn.SUPER_RARE:cn.ULTRA_RARE;for(console.log(cn[l]);!this.config.speciesPools.hasOwnProperty(l)||!this.config.speciesPools[l].length;)console.log(`Downgraded trainer Pokemon rarity tier from ${cn[l]} to ${cn[l-1]}`),l--;const C=this.config.speciesPools[l];a=xe(JA(C))}else a=this.scene.randomSpecies(n.waveIndex,A,!1,this.config.speciesFilter);let r=xe(a.getTrainerSpeciesForLevel(A,!0,s,this.scene.currentBattle.waveIndex)),S=!1;if(console.log(r.getName()),QA.hasOwnProperty(a.speciesId)&&r.speciesId!==a.speciesId)S=!0;else if(I.isBalanced(n.enemyParty.length)){const o=n.enemyParty.map(l=>l.getTypes(!0)).flat();(o.indexOf(r.type1)>-1||r.type2!==null&&o.indexOf(r.type2)>-1)&&(S=!0)}if(!S&&this.config.specialtyTypes.length&&!this.config.specialtyTypes.find(o=>r.isOfType(o))){S=!0,console.log("Attempting reroll of species evolution to fit specialty type...");let o=0;for(;S&&o++<10;)r=xe(a.getTrainerSpeciesForLevel(A,!0,s,this.scene.currentBattle.waveIndex)),console.log(r.name),this.config.specialtyTypes.find(l=>r.isOfType(l))&&(S=!1)}return this.checkDuplicateSpecies(r,a)&&(console.log("Duplicate species detected, prompting reroll..."),S=!0),S&&(R??0)<10&&(console.log("Rerolling party member..."),r=this.genNewPartyMemberSpecies(A,s,(R??0)+1)),r}checkDuplicateSpecies(A,s){const R=(We[U[this.config.trainerType]]??[]).flat(1);return this.scene.getEnemyParty().map(I=>I.species.speciesId).includes(A.speciesId)||R.includes(s.speciesId)}getPartyMemberMatchupScores(A=Tt.NONE,s=!1){A&&!this.isDouble()&&(A=Tt.NONE);const R=this.scene.getEnemyParty();return R.slice(this.scene.currentBattle.getBattlerCount()).filter(a=>a.isAllowedInBattle()).filter(a=>!A||a.trainerSlot===A).map(a=>{const r=this.scene.getPlayerField().filter(o=>o.isAllowedInBattle());let S=0;if(r.length>0){for(const o of r)S+=a.getMatchupScore(o),o.species.legendary&&(S/=2);S/=r.length,s&&!a.isOnField()&&this.scene.arena.findTagsOnSide(o=>o instanceof eO,St.ENEMY).map(o=>S*=o.getMatchupScoreMultiplier(a))}return[R.indexOf(a),S]})}getSortedPartyMemberMatchupScores(A=this.getPartyMemberMatchupScores()){const s=A.slice(0);return s.sort((R,n)=>{const I=R[1],a=n[1];return I<a?1:I>a?-1:0}),s}getNextSummonIndex(A=Tt.NONE,s=this.getPartyMemberMatchupScores(A)){A&&!this.isDouble()&&(A=Tt.NONE);const R=this.getSortedPartyMemberMatchupScores(s),n=s.filter(I=>I[1]===R[0][1]).map(I=>I[0]);if(n.length>1){let I;return this.scene.executeWithSeedOffset(()=>I=_e(n.length),this.scene.currentBattle.turn<<2),n[I]}return n[0]}getPartyMemberModifierChanceMultiplier(A){switch(this.getPartyTemplate().getStrength(A)){case we.WEAKER:return .75;case we.WEAK:return .675;case we.AVERAGE:return .5625;case we.STRONG:return .45;case we.STRONGER:return .375;default:return console.warn("getPartyMemberModifierChanceMultiplier not defined. Using default 0"),0}}genModifiers(A){return this.config.genModifiersFunc?this.config.genModifiersFunc(A):[]}loadAssets(){return this.config.loadAssets(this.scene,this.variant)}initSprite(){this.getSprites().map((A,s)=>A.setTexture(this.getKey(!!s)).setFrame(0)),this.getTintSprites().map((A,s)=>A.setTexture(this.getKey(!!s)).setFrame(0))}tryPlaySprite(A,s,R){return A.texture.key==="__MISSING"?(console.error(`No texture found for '${R.key}'!`),!1):A.texture.frameTotal<=1?(console.warn(`No animation found for '${R.key}'. Is this intentional?`),!1):(A.play(R),s.play(R),!0)}playAnim(){const A={key:this.getKey(),repeat:0,startFrame:0},s=this.getSprites(),R=this.getTintSprites();if(this.tryPlaySprite(s[0],R[0],A),this.variant===2&&!this.config.doubleOnly){const n={key:this.getKey(!0),repeat:0,startFrame:0};this.tryPlaySprite(s[1],R[1],n)}}getSprites(){const A=[this.getAt(0)];return this.variant===2&&!this.config.doubleOnly&&A.push(this.getAt(2)),A}getTintSprites(){const A=[this.getAt(1)];return this.variant===2&&!this.config.doubleOnly&&A.push(this.getAt(3)),A}tint(A,s,R,n){this.getTintSprites().map(a=>{a.setTintFill(A),a.setVisible(!0),R?(a.setAlpha(0),this.scene.tweens.add({targets:a,alpha:s||1,duration:R,ease:n||"Linear"})):a.setAlpha(s)})}untint(A,s){this.getTintSprites().map(n=>{A?this.scene.tweens.add({targets:n,alpha:0,duration:A,ease:s||"Linear",onComplete:L(()=>{n.setVisible(!1),n.setAlpha(1)},"onComplete")}):(n.setVisible(!1),n.setAlpha(1))})}};L(CF,"Trainer");let Ds=CF;var $6=(E=>(E[E.EVIL_BOSS_1=115]="EVIL_BOSS_1",E[E.EVIL_BOSS_2=165]="EVIL_BOSS_2",E))($6||{}),ht=(E=>(E[E.WILD=0]="WILD",E[E.TRAINER=1]="TRAINER",E[E.CLEAR=2]="CLEAR",E[E.MYSTERY_ENCOUNTER=3]="MYSTERY_ENCOUNTER",E))(ht||{}),Bt=(E=>(E[E.ATTACKER=-1]="ATTACKER",E[E.PLAYER=0]="PLAYER",E[E.PLAYER_2=1]="PLAYER_2",E[E.ENEMY=2]="ENEMY",E[E.ENEMY_2=3]="ENEMY_2",E))(Bt||{});const UF=class UF{constructor(A,s,R,n,I){this.enemyParty=[],this.seenEnemyPartyMemberIds=new Set,this.started=!1,this.enemySwitchCounter=0,this.turn=0,this.playerParticipantIds=new Set,this.battleScore=0,this.postBattleLoot=[],this.escapeAttempts=0,this.battleSeed=tM(16,!0),this.battleSeedState=null,this.moneyScattered=0,this.lastUsedPokeball=null,this.playerFaints=0,this.enemyFaints=0,this.playerFaintsHistory=[],this.enemyFaintsHistory=[],this.rngCounter=0,this.gameMode=A,this.waveIndex=s,this.battleType=R,this.trainer=n??null,this.initBattleSpec(),this.enemyLevels=R!==1?new Array(I?2:1).fill(null).map(()=>this.getLevelForWave()):n==null?void 0:n.getPartyLevels(this.waveIndex),this.double=I??!1}initBattleSpec(){let A=TE.DEFAULT;this.gameMode.isWaveFinal(this.waveIndex)&&this.gameMode.isClassic&&(A=TE.FINAL_BOSS),this.battleSpec=A}getLevelForWave(){const A=this.gameMode.getWaveForDifficulty(this.waveIndex),s=1+A/2+Math.pow(A/25,2),R=1.2;if(this.gameMode.isBoss(this.waveIndex)){const a=Math.floor(s*R);if(this.battleSpec===TE.FINAL_BOSS||!(this.waveIndex%250))return Math.ceil(a/25)*25;let r=0;return this.gameMode.isWaveFinal(this.waveIndex)||(r=Math.round(Phaser.Math.RND.realInRange(-1,1)*Math.floor(A/10))),a+r}let n=0;const I=10/A;return n=Math.abs(this.randSeedGaussForLevel(I)),Math.max(Math.round(s+n),1)}randSeedGaussForLevel(A){let s=0;for(let R=A;R>0;R--)s+=Phaser.Math.RND.realInRange(0,1);return s/A}getBattlerCount(){return this.double?2:1}incrementTurn(A){this.turn++,this.turnCommands=Object.fromEntries(uE(Bt).map(s=>[s,null])),this.battleSeedState=null}addParticipant(A){this.playerParticipantIds.add(A.id)}removeFaintedParticipant(A){this.playerParticipantIds.delete(A.id)}addPostBattleLoot(A){this.postBattleLoot.push(...A.scene.findModifiers(s=>s instanceof Ht&&s.pokemonId===A.id&&s.isTransferable,!1).map(s=>{const R=s;return R.pokemonId=null,R}))}pickUpScatteredMoney(A){const s=new ZE(A.currentBattle.moneyScattered);A.applyModifiers(mR,!0,s),A.arena.getTag(ge.HAPPY_HOUR)&&(s.value*=2),A.addMoney(s.value);const R=navigator.language||"en-US",n=s.value.toLocaleString(R),I=D.t("battle:moneyPickedUp",{moneyAmount:n});A.queueMessage(I,void 0,!0),A.currentBattle.moneyScattered=0}addBattleScore(A){let s=A.getEnemyParty().length/2+.5;this.double&&(s/=1.5);for(const I of A.getEnemyParty())I.isBoss()&&(s*=I.bossSegments/1.5/A.getEnemyParty().length);const R=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.min(this.turn-2,10*s)/(10*s)),n=Math.ceil(this.battleScore*R);A.score+=n,console.log(`Battle Score: ${n} (${this.turn-1} Turns x${Math.floor(R*100)/100})`),console.log(`Total Score: ${A.score}`),A.updateScoreText()}getBgmOverride(A){var R,n,I,a,r,S,o,l;if(this.isBattleMysteryEncounter()&&((R=this.mysteryEncounter)==null?void 0:R.encounterMode)===oE.DEFAULT)return null;if(this.battleType===1||((n=this.mysteryEncounter)==null?void 0:n.encounterMode)===oE.TRAINER_BATTLE)return!this.started&&((I=this.trainer)!=null&&I.config.encounterBgm)&&((r=(a=this.trainer)==null?void 0:a.getEncounterMessages())!=null&&r.length)?`encounter_${(S=this.trainer)==null?void 0:S.getEncounterBgm()}`:A.musicPreference===Er.CONSISTENT?((o=this.trainer)==null?void 0:o.getBattleBgm())??null:((l=this.trainer)==null?void 0:l.getMixedBattleBgm())??null;if(this.gameMode.isClassic&&this.waveIndex>195&&this.battleSpec!==TE.FINAL_BOSS)return"end_summit";const s=A.getEnemyParty();for(const C of s){if(this.battleSpec===TE.FINAL_BOSS)return C.species.getFormSpriteKey(C.formIndex)===oe.ETERNAMAX?"battle_final":"battle_final_encounter";if(C.species.legendary||C.species.subLegendary||C.species.mythical){if(A.musicPreference===Er.CONSISTENT)switch(C.species.speciesId){case e.REGIROCK:case e.REGICE:case e.REGISTEEL:case e.REGIGIGAS:case e.REGIDRAGO:case e.REGIELEKI:return"battle_legendary_regis_g5";case e.KYUREM:return"battle_legendary_kyurem";default:return C.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}else if(A.musicPreference===Er.MIXED)switch(C.species.speciesId){case e.ARTICUNO:case e.ZAPDOS:case e.MOLTRES:case e.MEWTWO:case e.MEW:return"battle_legendary_kanto";case e.RAIKOU:return"battle_legendary_raikou";case e.ENTEI:return"battle_legendary_entei";case e.SUICUNE:return"battle_legendary_suicune";case e.LUGIA:return"battle_legendary_lugia";case e.HO_OH:return"battle_legendary_ho_oh";case e.REGIROCK:case e.REGICE:case e.REGISTEEL:case e.REGIGIGAS:case e.REGIDRAGO:case e.REGIELEKI:return"battle_legendary_regis_g6";case e.GROUDON:case e.KYOGRE:return"battle_legendary_gro_kyo";case e.RAYQUAZA:return"battle_legendary_rayquaza";case e.DEOXYS:return"battle_legendary_deoxys";case e.UXIE:case e.MESPRIT:case e.AZELF:return"battle_legendary_lake_trio";case e.HEATRAN:case e.CRESSELIA:case e.DARKRAI:case e.SHAYMIN:return"battle_legendary_sinnoh";case e.DIALGA:case e.PALKIA:return C.species.getFormSpriteKey(C.formIndex)===oe.ORIGIN?"battle_legendary_origin_forme":"battle_legendary_dia_pal";case e.GIRATINA:return"battle_legendary_giratina";case e.ARCEUS:return"battle_legendary_arceus";case e.COBALION:case e.TERRAKION:case e.VIRIZION:case e.KELDEO:case e.TORNADUS:case e.LANDORUS:case e.THUNDURUS:case e.MELOETTA:case e.GENESECT:return"battle_legendary_unova";case e.KYUREM:return"battle_legendary_kyurem";case e.XERNEAS:case e.YVELTAL:case e.ZYGARDE:return"battle_legendary_xern_yvel";case e.TAPU_KOKO:case e.TAPU_LELE:case e.TAPU_BULU:case e.TAPU_FINI:return"battle_legendary_tapu";case e.SOLGALEO:case e.LUNALA:return"battle_legendary_sol_lun";case e.NECROZMA:switch(C.getFormKey()){case"dusk-mane":case"dawn-wings":return"battle_legendary_dusk_dawn";case"ultra":return"battle_legendary_ultra_nec";default:return"battle_legendary_sol_lun"}case e.NIHILEGO:case e.PHEROMOSA:case e.BUZZWOLE:case e.XURKITREE:case e.CELESTEELA:case e.KARTANA:case e.GUZZLORD:case e.POIPOLE:case e.NAGANADEL:case e.STAKATAKA:case e.BLACEPHALON:return"battle_legendary_ub";case e.ZACIAN:case e.ZAMAZENTA:return"battle_legendary_zac_zam";case e.GLASTRIER:case e.SPECTRIER:return"battle_legendary_glas_spec";case e.CALYREX:return C.getFormKey()==="ice"||C.getFormKey()==="shadow"?"battle_legendary_riders":"battle_legendary_calyrex";case e.GALAR_ARTICUNO:case e.GALAR_ZAPDOS:case e.GALAR_MOLTRES:return"battle_legendary_birds_galar";case e.WO_CHIEN:case e.CHIEN_PAO:case e.TING_LU:case e.CHI_YU:return"battle_legendary_ruinous";case e.KORAIDON:case e.MIRAIDON:return"battle_legendary_kor_mir";case e.OKIDOGI:case e.MUNKIDORI:case e.FEZANDIPITI:return"battle_legendary_loyal_three";case e.OGERPON:return"battle_legendary_ogerpon";case e.TERAPAGOS:return"battle_legendary_terapagos";case e.PECHARUNT:return"battle_legendary_pecharunt";default:return C.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}}}return A.gameMode.isClassic&&this.waveIndex<=4?"battle_wild":null}randSeedInt(A,s,R=0){if(s<=1)return R;const n=A.rngCounter,I=A.rngSeedOverride,a=Phaser.Math.RND.state();this.battleSeedState?Phaser.Math.RND.state(this.battleSeedState):(Phaser.Math.RND.sow([yh(this.battleSeed,this.turn<<6)]),console.log("Battle Seed:",this.battleSeed)),A.rngCounter=this.rngCounter++,A.rngSeedOverride=this.battleSeed;const r=_e(s,R);return this.battleSeedState=Phaser.Math.RND.state(),Phaser.Math.RND.state(a),A.rngCounter=n,A.rngSeedOverride=I,r}isBattleMysteryEncounter(){return this.battleType===3}};L(UF,"Battle");let w_=UF;const uF=class uF{setBattleType(A){return this.battleType=A,this}setDouble(A){return this.double=A,this}setGetTrainerFunc(A){return this.getTrainer=A,this}setGetEnemyPartyFunc(A){return this.getEnemyParty=A,this}setSeedOffsetWave(A){return this.seedOffsetWaveIndex=A,this}setCustomModifierRewards(A){return this.customModifierRewardSettings=A,this}};L(uF,"FixedBattleConfig");let CE=uF;function WR(E,A=!1,s=0){return R=>{const n=_e(E.length),I=[];R.executeWithSeedOffset(()=>{for(const o of E){const l=Array.isArray(o)?JA(o):o;I.push(l)}},s);let a=OA.DEFAULT;A&&(a=hA(2)===0?OA.FEMALE:OA.DEFAULT);const S=[U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT].includes(I[n]);return ZA[I[n]].hasDouble&&S?new Ds(R,I[n],hA(3)===0?OA.DOUBLE:a):new Ds(R,I[n],a)}}L(WR,"getRandomTrainerFunc");const fb={5:new CE().setBattleType(1).setGetTrainerFunc(E=>new Ds(E,U.YOUNGSTER,_e(2)?OA.FEMALE:OA.DEFAULT)),8:new CE().setBattleType(1).setGetTrainerFunc(E=>new Ds(E,U.RIVAL,E.gameData.gender===vt.MALE?OA.FEMALE:OA.DEFAULT)),25:new CE().setBattleType(1).setGetTrainerFunc(E=>new Ds(E,U.RIVAL_2,E.gameData.gender===vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[v.ULTRA,v.GREAT,v.GREAT],allowLuckUpgrades:!1}),35:new CE().setBattleType(1).setGetTrainerFunc(WR([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),55:new CE().setBattleType(1).setGetTrainerFunc(E=>new Ds(E,U.RIVAL_3,E.gameData.gender===vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[v.ULTRA,v.ULTRA,v.GREAT,v.GREAT],allowLuckUpgrades:!1}),62:new CE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(WR([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),64:new CE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(WR([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),66:new CE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(WR([[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[U.TABITHA,U.COURTNEY],[U.MATT,U.SHELLY],[U.JUPITER,U.MARS,U.SATURN],[U.ZINZOLIN,U.ROOD],[U.XEROSIC,U.BRYONY],U.FABA,U.PLUMERIA,U.OLEANA,[U.GIACOMO,U.MELA,U.ATTICUS,U.ORTEGA,U.ERI]],!0)),95:new CE().setBattleType(1).setGetTrainerFunc(E=>new Ds(E,U.RIVAL_4,E.gameData.gender===vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[v.ULTRA,v.ULTRA,v.ULTRA,v.ULTRA],allowLuckUpgrades:!1}),112:new CE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(WR([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),114:new CE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(WR([[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[U.TABITHA,U.COURTNEY],[U.MATT,U.SHELLY],[U.JUPITER,U.MARS,U.SATURN],[U.ZINZOLIN,U.ROOD],[U.XEROSIC,U.BRYONY],U.FABA,U.PLUMERIA,U.OLEANA,[U.GIACOMO,U.MELA,U.ATTICUS,U.ORTEGA,U.ERI]],!0,1)),115:new CE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(WR([U.ROCKET_BOSS_GIOVANNI_1,U.MAXIE,U.ARCHIE,U.CYRUS,U.GHETSIS,U.LYSANDRE,U.LUSAMINE,U.GUZMA,U.ROSE,U.PENNY])).setCustomModifierRewards({guaranteedModifierTiers:[v.ROGUE,v.ROGUE,v.ULTRA,v.ULTRA,v.ULTRA],allowLuckUpgrades:!1}),145:new CE().setBattleType(1).setGetTrainerFunc(E=>new Ds(E,U.RIVAL_5,E.gameData.gender===vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[v.ROGUE,v.ROGUE,v.ROGUE,v.ULTRA,v.ULTRA],allowLuckUpgrades:!1}),165:new CE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(WR([U.ROCKET_BOSS_GIOVANNI_2,U.MAXIE_2,U.ARCHIE_2,U.CYRUS_2,U.GHETSIS_2,U.LYSANDRE_2,U.LUSAMINE_2,U.GUZMA_2,U.ROSE_2,U.PENNY_2])).setCustomModifierRewards({guaranteedModifierTiers:[v.ROGUE,v.ROGUE,v.ULTRA,v.ULTRA,v.ULTRA,v.ULTRA],allowLuckUpgrades:!1}),182:new CE().setBattleType(1).setGetTrainerFunc(WR([U.LORELEI,U.WILL,U.SIDNEY,U.AARON,U.SHAUNTAL,U.MALVA,[U.HALA,U.MOLAYNE],U.MARNIE_ELITE,U.RIKA,U.CRISPIN])),184:new CE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(WR([U.BRUNO,U.KOGA,U.PHOEBE,U.BERTHA,U.MARSHAL,U.SIEBOLD,U.OLIVIA,U.NESSA_ELITE,U.POPPY,U.AMARYS])),186:new CE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(WR([U.AGATHA,U.BRUNO,U.GLACIA,U.FLINT,U.GRIMSLEY,U.WIKSTROM,U.ACEROLA,[U.BEA_ELITE,U.ALLISTER_ELITE],U.LARRY_ELITE,U.LACEY])),188:new CE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(WR([U.LANCE,U.KAREN,U.DRAKE,U.LUCIAN,U.CAITLIN,U.DRASNA,U.KAHILI,U.RAIHAN_ELITE,U.HASSEL,U.DRAYTON])),190:new CE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(WR([U.BLUE,[U.RED,U.LANCE_CHAMPION],[U.STEVEN,U.WALLACE],U.CYNTHIA,[U.ALDER,U.IRIS],U.DIANTHA,U.HAU,U.LEON,[U.GEETA,U.NEMONA],U.KIERAN])),195:new CE().setBattleType(1).setGetTrainerFunc(E=>new Ds(E,U.RIVAL_6,E.gameData.gender===vt.MALE?OA.FEMALE:OA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[v.ROGUE,v.ROGUE,v.ULTRA,v.ULTRA,v.GREAT,v.GREAT],allowLuckUpgrades:!1})},vD=class vD extends as{constructor(A,s,R,n){if(super(A,s),this.move=n,R.includes(s)&&this.move.getMove().moveTarget===JE.ALL_NEAR_OTHERS){const I=R.indexOf(s);R.splice(I,I+1)}this.targets=R}start(){super.start();const A=this.getUserPokemon(),s=this.getTargets();if(!A)return super.end();const R=this.move.getMove().hasAttr(Xn);if(!A.isOnField())if(R){if(!A.scene)return super.end();Ve(A.turnData)&&A.resetTurnData()}else return super.end();const n=new Lt(!1),I=this.move.getMove();MA(ln,A,this.getFirstTarget()??null,I,n,this.move.virtual).then(()=>{var M,u,h,P,G,d,H,f;if(n.value)return this.end();if(A.lapseTags(QE.MOVE_EFFECT),A.turnData.hitsLeft===0&&A.turnData.hitCount>0&&A.turnData.extraTurns>0&&(A.turnData.hitsLeft=-1,A.turnData.hitCount=0,A.turnData.extraTurns--),A.turnData.hitsLeft===-1){const K=new Rt(1);MA(TA,A,this.getFirstTarget()??null,I,K),wO(SS,A,null,I,!1,K,null),this.scene.applyModifiers(Jn,A.isPlayer(),A,I.id,K),A.turnData.hitCount=K.value,A.turnData.hitsLeft=K.value}const a={move:this.move.moveId,targets:this.targets,result:CA.PENDING,virtual:this.move.virtual},r=Object.fromEntries(s.map(K=>[K.getBattlerIndex(),this.hitCheck(K)])),S=s.some(K=>K.isActive(!0)),o=((M=s[0])==null?void 0:M.hasAbilityWithAttr(iO))&&((G=(P=(h=(u=s[0])==null?void 0:u.getAbility())==null?void 0:h.getAttrs(iO))==null?void 0:P[0])==null?void 0:G.getImmuneType())===A.getMoveType(I)&&!((d=s[0])!=null&&d.getTag(Tn));if(!S||!I.hasAttr(aa)&&!I.isMultiTarget()&&!r[this.targets[0]]&&!s[0].getTag(Xi)&&!o)return this.stopMultiHit(),S?(this.scene.queueMessage(D.t("battle:attackMissed",{pokemonNameWithAffix:this.getFirstTarget()?ee(this.getFirstTarget()):""})),a.result=CA.MISS,MA(sO,A,null,this.move.getMove())):(this.scene.queueMessage(D.t("battle:attackFailed")),a.result=CA.FAIL),A.pushMoveHistory(a),this.end();const l=[],C=((f=(H=this.scene.currentBattle)==null?void 0:H.mysteryEncounter)==null?void 0:f.hasBattleAnimationsWithoutTargets)??!1;new nu(I.id,A,this.getFirstTarget().getBattlerIndex(),C).play(this.scene,I.hitsSubstitute(A,this.getFirstTarget()),()=>{var V,k,Q,j,J,ne,x;let K=!1;for(const q of s){if(I.moveTarget===JE.ENEMY_SIDE&&q!==s[s.length-1])continue;const F=q.isPlayer()?St.PLAYER:St.ENEMY,Te=new Lt(!1),He=new Lt(!1);this.move.getMove().isAllyTarget()||this.scene.arena.applyTagsForSide(ea,F,!1,Te,A,q,I.id,He);const ue=(He.value||!this.move.getMove().checkFlag(tA.IGNORE_PROTECT,A,q))&&(Te.value||!q.findTags(st=>st instanceof vr).length&&q.findTags(st=>st instanceof Xi).find(st=>q.lapseTag(st.tagType))||this.move.getMove().category!==Mt.STATUS&&q.findTags(st=>st instanceof vr).find(st=>q.lapseTag(st.tagType))),me=q.hasAbilityWithAttr(iO)&&((Q=(k=(V=q.getAbility())==null?void 0:V.getAttrs(iO))==null?void 0:k[0])==null?void 0:Q.getImmuneType())===A.getMoveType(I)&&!q.getTag(Tn),Me=this.scene.currentBattle.double&&((J=(j=q.getAlly())==null?void 0:j.getTag(Y.COMMANDED))==null?void 0:J.getSourcePokemon(this.scene))===q;if(q.switchOutStatus||Me||!me&&!ue&&!r[q.getBattlerIndex()]){this.stopMultiHit(q),q.switchOutStatus||this.scene.queueMessage(D.t("battle:attackMissed",{pokemonNameWithAffix:ee(q)})),a.result===CA.PENDING&&(a.result=CA.MISS),A.pushMoveHistory(a),MA(sO,A,null,I);continue}const Ie=A.turnData.hitsLeft===A.turnData.hitCount;Ie&&A.pushMoveHistory(a),a.result=CA.SUCCESS;const z=ue?wt.NO_EFFECT:q.apply(A,I),te=[wt.EFFECTIVE,wt.SUPER_EFFECTIVE,wt.NOT_VERY_EFFECTIVE,wt.ONE_HIT_KO].includes(z),Le=te&&!K;Le&&(K=!0),z===wt.NO_EFFECT&&(a.result=CA.FAIL);const Ue=A.turnData.hitsLeft===1||!((ne=this.getFirstTarget())!=null&&ne.isActive());Ue&&(this.scene.triggerPokemonFormChange(A,HT),A.turnData.hitCount>1&&C1(wr,q,0,q.hasPassive(),!1,[],A));const Be=new Promise(st=>{let ft=CL(tt=>tt instanceof Ut&&tt.trigger===Ka.PRE_APPLY&&(!tt.firstHitOnly||Ie)&&(!tt.lastHitOnly||Ue)&&z!==wt.NO_EFFECT,A,q,I);if(z===wt.FAIL)return st();ft=ft.then(this.applySelfTargetEffects(A,q,Ie,Ue)),z!==wt.NO_EFFECT?ft.then(this.applyPostApplyEffects(A,q,Ie,Ue)).then(this.applyHeldItemFlinchCheck(A,q,te)).then(this.applySuccessfulAttackEffects(A,q,Ie,Ue,!!ue,z,Le)).then(()=>st()):ft.then(()=>MA(gO,A,null,I)).then(st)});l.push(Be)}const W=A.turnData.hitsLeft===1||!((x=this.getFirstTarget())!=null&&x.isActive())?CL(q=>q instanceof Ut&&q.trigger===Ka.POST_TARGET,A,null,I):null;W&&(l.length?l[l.length-1].then(()=>W):l.push(W)),Promise.allSettled(l).then(()=>{s.forEach(q=>{const F=q.getTag(KE);F&&F.hp<=0&&q.lapseTag(Y.SUBSTITUTE)}),this.end()})})})}end(){var s;const A=this.getUserPokemon();if(A)if(A.turnData.hitsLeft&&--A.turnData.hitsLeft>=1&&((s=this.getFirstTarget())!=null&&s.isActive()))this.scene.unshiftPhase(this.getNewHitPhase());else{const R=A.turnData.hitCount-Math.max(A.turnData.hitsLeft,0);(R>1||A.turnData.hitsLeft&&A.turnData.hitsLeft>0)&&this.scene.queueMessage(D.t("battle:attackHitsCount",{count:R})),this.scene.applyModifiers(ji,this.player,A),this.getTargets().forEach(n=>n.turnData.moveEffectiveness=null)}super.end()}applySelfTargetEffects(A,s,R,n){return()=>CL(I=>I instanceof Ut&&I.trigger===Ka.POST_APPLY&&I.selfTarget&&(!I.firstHitOnly||R)&&(!I.lastHitOnly||n),A,s,this.move.getMove())}applyPostApplyEffects(A,s,R,n){return()=>CL(I=>I instanceof Ut&&I.trigger===Ka.POST_APPLY&&!I.selfTarget&&(!I.firstHitOnly||R)&&(!I.lastHitOnly||n),A,s,this.move.getMove())}applyOnHitEffects(A,s,R,n,I){return CL(a=>a instanceof Ut&&a.trigger===Ka.HIT&&(!a.firstHitOnly||R)&&(!a.lastHitOnly||n)&&(!a.firstTargetOnly||I),A,s,this.move.getMove())}applyOnGetHitAbEffects(A,s,R){return lr(!s.isFainted()||s.canApplyAbility(),()=>FQ(zE,s,A,this.move.getMove(),R).then(()=>{this.move.getMove().hitsSubstitute(A,s)||(!A.isPlayer()&&this.move.getMove()instanceof B&&A.scene.applyShuffledModifiers(this.scene,sL,!1,s),s.lapseTags(QE.AFTER_HIT))}))}applySuccessfulAttackEffects(A,s,R,n,I,a,r){return()=>lr(!I,()=>this.applyOnHitEffects(A,s,R,n,r).then(()=>this.applyOnGetHitAbEffects(A,s,a)).then(()=>j6(bi,A,s,this.move.getMove(),a)).then(()=>{this.move.getMove()instanceof B&&this.scene.applyModifiers(Ua,this.player,A,s)}))}applyHeldItemFlinchCheck(A,s,R){return()=>{if(!this.move.getMove().hasAttr(LA)&&R&&!s.hasAbilityWithAttr(xi)&&!this.move.getMove().hitsSubstitute(A,s)){const n=new Lt(!1);A.scene.applyModifiers(so,A.isPlayer(),A,n),n.value&&s.addTag(Y.FLINCHED,void 0,this.move.moveId,A.id)}}}hitCheck(A){var r;if([JE.USER,JE.ENEMY_SIDE].includes(this.move.getMove().moveTarget))return!0;const s=this.getUserPokemon();if(!s)return!1;if(s.turnData.hitsLeft<s.turnData.hitCount&&(!this.move.getMove().hasFlag(tA.CHECK_ALL_HITS)||s.hasAbilityWithAttr(GS))||s.hasAbilityWithAttr(fS)||A.hasAbilityWithAttr(fS)||s.getTag(Y.IGNORE_ACCURACY)&&(((r=s.getLastXMoves().find(()=>!0))==null?void 0:r.targets)||[]).indexOf(A.getBattlerIndex())!==-1||A.getTag(Y.ALWAYS_GET_HIT)||A.getTag(Y.TELEKINESIS)&&!A.getTag(Tn)&&!this.move.getMove().hasAttr(vO))return!0;const R=A.getTag(Tn);if(R&&!this.move.getMove().getAttrs(_R).some(S=>S.tagType===R.tagType)&&!(this.move.getMove().hasAttr(vu)&&s.isOfType(i.POISON)))return!1;const n=this.move.getMove().calculateBattleAccuracy(s,A);if(n===-1)return!0;const I=s.getAccuracyMultiplier(A,this.move.getMove());return s.randSeedInt(100)<n*I}getUserPokemon(){return this.battlerIndex>Bt.ENEMY_2?this.scene.getPokemonById(this.battlerIndex):(this.player?this.scene.getPlayerField():this.scene.getEnemyField())[this.fieldIndex]}getTargets(){return this.scene.getField(!0).filter(A=>this.targets.indexOf(A.getBattlerIndex())>-1)}getFirstTarget(){return this.getTargets()[0]}removeTarget(A){this.targets.findIndex(R=>R===A.getBattlerIndex())!==-1&&this.targets.splice(this.targets.findIndex(R=>R===A.getBattlerIndex()),1)}stopMultiHit(A){A&&this.removeTarget(A);const s=this.getUserPokemon();s&&(!A||this.targets.length===0)&&(s.turnData.hitCount=1,s.turnData.hitsLeft=1)}getNewHitPhase(){return new vD(this.scene,this.battlerIndex,this.targets,this.move)}};L(vD,"MoveEffectPhase");let NR=vD;var St=(E=>(E[E.BOTH=0]="BOTH",E[E.PLAYER=1]="PLAYER",E[E.ENEMY=2]="ENEMY",E))(St||{});const DF=class DF{constructor(A,s,R,n,I=0){this.tagType=A,this.turnCount=s,this.sourceMove=R,this.sourceId=n,this.side=I}apply(A,s,...R){return!0}onAdd(A,s=!1){}onRemove(A,s=!1){s||A.scene.queueMessage(D.t(`arenaTag:arenaOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:this.getMoveName()}))}onOverlap(A){}lapse(A){return this.turnCount<1||!!--this.turnCount}getMoveName(){return this.sourceMove?ye[this.sourceMove].name:null}loadTag(A){this.turnCount=A.turnCount,this.sourceMove=A.sourceMove,this.sourceId=A.sourceId,this.side=A.side}getSourcePokemon(A){return this.sourceId?A.getPokemonById(this.sourceId):null}getAffectedPokemon(A){switch(this.side){case 1:return A.getPlayerField()??[];case 2:return A.getEnemyField()??[];case 0:default:return A.getField(!0)??[]}}};L(DF,"ArenaTag");let VE=DF;const MF=class MF extends VE{constructor(A,s,R){super(ge.MIST,A,t.MIST,s,R)}onAdd(A,s=!1){if(super.onAdd(A),this.sourceId){const R=A.scene.getPokemonById(this.sourceId);!s&&R?A.scene.queueMessage(D.t("arenaTag:mistOnAdd",{pokemonNameWithAffix:ee(R)})):s||console.warn("Failed to get source for MistTag onAdd")}}apply(A,s,R,n){if(R){const I=new Lt(!1);if(Ct(sa,R,null,!1,I),I.value)return!1}return n.value=!0,s||A.scene.queueMessage(D.t("arenaTag:mistApply")),!0}};L(MF,"MistTag");let yC=MF;const hF=class hF extends VE{constructor(A,s,R,n,I,a){super(A,s,R,n,I),this.weakenedCategories=a}apply(A,s,R,n,I){if(this.weakenedCategories.includes(n)){const a=new Lt(!1);return Ct(sa,R,null,!1,a),a.value?!1:(I.value=A.scene.currentBattle.double?2732/4096:.5,!0)}return!1}};L(hF,"WeakenMoveScreenTag");let Kr=hF;const cF=class cF extends Kr{constructor(A,s,R){super(ge.REFLECT,A,t.REFLECT,s,R,[Mt.PHYSICAL])}onAdd(A,s=!1){s||A.scene.queueMessage(D.t(`arenaTag:reflectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};L(cF,"ReflectTag");let v_=cF;const _F=class _F extends Kr{constructor(A,s,R){super(ge.LIGHT_SCREEN,A,t.LIGHT_SCREEN,s,R,[Mt.SPECIAL])}onAdd(A,s=!1){s||A.scene.queueMessage(D.t(`arenaTag:lightScreenOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};L(_F,"LightScreenTag");let V_=_F;const PF=class PF extends Kr{constructor(A,s,R){super(ge.AURORA_VEIL,A,t.AURORA_VEIL,s,R,[Mt.SPECIAL,Mt.PHYSICAL])}onAdd(A,s=!1){s||A.scene.queueMessage(D.t(`arenaTag:auroraVeilOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};L(PF,"AuroraVeilTag");let x_=PF;const GF=class GF extends VE{constructor(A,s,R,n,I,a=!1){super(A,1,s,R,n),this.protectConditionFunc=I,this.ignoresBypass=a}onAdd(A){A.scene.queueMessage(D.t(`arenaTag:conditionalProtectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:super.getMoveName()}))}onRemove(A){}apply(A,s,R,n,I,a,r){return this.side===1===I.isPlayer()&&this.protectConditionFunc(A,a)?(R.value||(R.value=!0,s||(n.stopMultiHit(I),new Qi(oA.PROTECT,I).play(A.scene),A.scene.queueMessage(D.t("arenaTag:conditionalProtectApply",{moveName:super.getMoveName(),pokemonNameWithAffix:ee(I)})))),r.value=r.value||this.ignoresBypass,!0):!1}};L(GF,"ConditionalProtectTag");let ea=GF;const PQ=L((E,A)=>{const s=ye[A],R=E.scene.getCurrentPhase();if(R instanceof NR){const n=R.getUserPokemon();if(n)return s.getPriority(n)>0}return s.priority>0},"QuickGuardConditionFunc"),HF=class HF extends ea{constructor(A,s){super(ge.QUICK_GUARD,t.QUICK_GUARD,A,s,PQ)}};L(HF,"QuickGuardTag");let b_=HF;const GQ=L((E,A)=>{switch(ye[A].moveTarget){case JE.ALL_ENEMIES:case JE.ALL_NEAR_ENEMIES:case JE.ALL_OTHERS:case JE.ALL_NEAR_OTHERS:return!0}return!1},"WideGuardConditionFunc"),dF=class dF extends ea{constructor(A,s){super(ge.WIDE_GUARD,t.WIDE_GUARD,A,s,GQ)}};L(dF,"WideGuardTag");let k_=dF;const HQ=L((E,A)=>ye[A].category!==Mt.STATUS,"MatBlockConditionFunc"),fF=class fF extends ea{constructor(A,s){super(ge.MAT_BLOCK,t.MAT_BLOCK,A,s,HQ)}onAdd(A){if(this.sourceId){const s=A.scene.getPokemonById(this.sourceId);s?A.scene.queueMessage(D.t("arenaTag:matBlockOnAdd",{pokemonNameWithAffix:ee(s)})):console.warn("Failed to get source for MatBlockTag onAdd")}}};L(fF,"MatBlockTag");let Z_=fF;const dQ=L((E,A)=>{const s=ye[A];return s.category===Mt.STATUS&&s.moveTarget!==JE.ENEMY_SIDE&&s.moveTarget!==JE.BOTH_SIDES&&s.moveTarget!==JE.ALL},"CraftyShieldConditionFunc"),BF=class BF extends ea{constructor(A,s){super(ge.CRAFTY_SHIELD,t.CRAFTY_SHIELD,A,s,dQ,!0)}};L(BF,"CraftyShieldTag");let X_=BF;const gF=class gF extends VE{constructor(A,s,R,n){super(ge.NO_CRIT,A,s,R,n)}onAdd(A){A.scene.queueMessage(D.t(`arenaTag:noCritOnAdd${this.side===1?"Player":"Enemy"}`,{moveName:this.getMoveName()}))}onRemove(A){const s=A.scene.getPokemonById(this.sourceId);A.scene.queueMessage(D.t("arenaTag:noCritOnRemove",{pokemonNameWithAffix:ee(s??void 0),moveName:this.getMoveName()}))}};L(gF,"NoCritTag");let wC=gF;const KF=class KF extends VE{constructor(A,s,R){super(ge.WISH,A,t.WISH,s,R)}onAdd(A){if(this.sourceId){const s=A.scene.getPokemonById(this.sourceId);s?(this.battlerIndex=s.getBattlerIndex(),this.triggerMessage=D.t("arenaTag:wishTagOnAdd",{pokemonNameWithAffix:ee(s)}),this.healHp=Yt(s.getMaxHp()/2)):console.warn("Failed to get source for WishTag onAdd")}}onRemove(A){const s=A.scene.getField()[this.battlerIndex];s!=null&&s.isActive(!0)&&(A.scene.queueMessage(this.triggerMessage),A.scene.unshiftPhase(new mE(s.scene,s.getBattlerIndex(),this.healHp,null,!0,!1)))}};L(KF,"WishTag");let Q_=KF;const mF=class mF extends VE{constructor(A,s,R,n,I){super(A,s,n,I),this.weakenedType=R}apply(A,s,R,n){return R===this.weakenedType?(n.value*=.33,!0):!1}};L(mF,"WeakenMoveTypeTag");let aS=mF;const FF=class FF extends aS{constructor(A,s){super(ge.MUD_SPORT,A,i.ELECTRIC,t.MUD_SPORT,s)}onAdd(A){A.scene.queueMessage(D.t("arenaTag:mudSportOnAdd"))}onRemove(A){A.scene.queueMessage(D.t("arenaTag:mudSportOnRemove"))}};L(FF,"MudSportTag");let J_=FF;const pF=class pF extends aS{constructor(A,s){super(ge.WATER_SPORT,A,i.FIRE,t.WATER_SPORT,s)}onAdd(A){A.scene.queueMessage(D.t("arenaTag:waterSportOnAdd"))}onRemove(A){A.scene.queueMessage(D.t("arenaTag:waterSportOnRemove"))}};L(pF,"WaterSportTag");let $_=pF;const WF=class WF extends VE{constructor(A){super(ge.ION_DELUGE,1,A)}onAdd(A){A.scene.queueMessage(D.t("arenaTag:plasmaFistsOnAdd"))}onRemove(A){}apply(A,s,R){return R.value===i.NORMAL?(R.value=i.ELECTRIC,!0):!1}};L(WF,"IonDelugeTag");let z_=WF;const YF=class YF extends VE{constructor(A,s,R,n,I){super(A,0,s,R,n),this.layers=1,this.maxLayers=I}onOverlap(A){this.layers<this.maxLayers&&(this.layers++,this.onAdd(A))}apply(A,s,R){return this.side===1!==R.isPlayer()?!1:this.activateTrap(R,s)}activateTrap(A,s){return!1}getMatchupScoreMultiplier(A){return A.isGrounded()?1:Phaser.Math.Linear(0,1/Math.pow(2,this.layers),Math.min(A.getHpRatio(),.5)*2)}loadTag(A){super.loadTag(A),this.layers=A.layers,this.maxLayers=A.maxLayers}};L(YF,"ArenaTrapTag");let eO=YF;const yF=class yF extends eO{constructor(A,s){super(ge.SPIKES,t.SPIKES,A,s,3)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;!s&&R&&A.scene.queueMessage(D.t("arenaTag:spikesOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}activateTrap(A,s){if(A.isGrounded()){const R=new Lt(!1);if(Ct(DE,A,R),s)return!R.value;if(!R.value){const n=1/(10-2*this.layers),I=Yt(A.getMaxHp()*n);return A.scene.queueMessage(D.t("arenaTag:spikesActivateTrap",{pokemonNameWithAffix:ee(A)})),A.damageAndUpdate(I,wt.OTHER),A.turnData&&(A.turnData.damageTaken+=I),!0}}return!1}};L(yF,"SpikesTag");let q_=yF;const wF=class wF extends eO{constructor(A,s){super(ge.TOXIC_SPIKES,t.TOXIC_SPIKES,A,s,2),this.neutralized=!1}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;!s&&R&&A.scene.queueMessage(D.t("arenaTag:toxicSpikesOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}onRemove(A){this.neutralized||super.onRemove(A)}activateTrap(A,s){if(A.isGrounded()){if(s)return!0;if(A.isOfType(i.POISON)){if(this.neutralized=!0,A.scene.arena.removeTag(this.tagType))return A.scene.queueMessage(D.t("arenaTag:toxicSpikesActivateTrapPoison",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()})),!0}else if(!A.status){const R=this.layers>1;if(A.trySetStatus(R?Re.TOXIC:Re.POISON,!0,null,0,this.getMoveName()))return!0}}return!1}getMatchupScoreMultiplier(A){return A.isGrounded()||!A.canSetStatus(Re.POISON,!0)?1:A.isOfType(i.POISON)?1.25:super.getMatchupScoreMultiplier(A)}};L(wF,"ToxicSpikesTag");let j_=wF;const vF=class vF extends VE{constructor(A,s,R,n,I=0){super(A,3,s,R,I),this.targetIndex=n,this.side=I}lapse(A){const s=super.lapse(A);return s||A.scene.unshiftPhase(new NR(A.scene,this.sourceId,[this.targetIndex],new Ot(this.sourceMove,0,0,!0))),s}onRemove(A){}};L(vF,"DelayedAttackTag");let eP=vF;const VF=class VF extends eO{constructor(A,s){super(ge.STEALTH_ROCK,t.STEALTH_ROCK,A,s,1)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;!s&&R&&A.scene.queueMessage(D.t("arenaTag:stealthRockOnAdd",{opponentDesc:R.getOpponentDescriptor()}))}getDamageHpRatio(A){const s=A.getAttackTypeEffectiveness(i.ROCK,void 0,!0);let R=0;switch(s){case 0:R=0;break;case .25:R=.03125;break;case .5:R=.0625;break;case 1:R=.125;break;case 2:R=.25;break;case 4:R=.5;break}return R}activateTrap(A,s){const R=new Lt(!1);if(Ct(DE,A,R),R.value)return!1;const n=this.getDamageHpRatio(A);if(n){if(s)return!0;const I=Yt(A.getMaxHp()*n);return A.scene.queueMessage(D.t("arenaTag:stealthRockActivateTrap",{pokemonNameWithAffix:ee(A)})),A.damageAndUpdate(I,wt.OTHER),A.turnData&&(A.turnData.damageTaken+=I),!0}return!1}getMatchupScoreMultiplier(A){const s=this.getDamageHpRatio(A);return Phaser.Math.Linear(super.getMatchupScoreMultiplier(A),1,1-Math.pow(s,s))}};L(VF,"StealthRockTag");let tP=VF;const xF=class xF extends eO{constructor(A,s){super(ge.STICKY_WEB,t.STICKY_WEB,A,s,1)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;!s&&R&&A.scene.queueMessage(D.t("arenaTag:stickyWebOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}activateTrap(A,s){if(A.isGrounded()){const R=new Lt(!1);if(Ct(bR,A,R),s)return!R.value;if(!R.value){A.scene.queueMessage(D.t("arenaTag:stickyWebActivateTrap",{pokemonName:A.getNameToRender()}));const n=new Rt(-1);return A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!1,[g.SPD],n.value)),!0}}return!1}};L(xF,"StickyWebTag");let AP=xF;const bF=class bF extends VE{constructor(A,s){super(ge.TRICK_ROOM,A,t.TRICK_ROOM,s)}apply(A,s,R){return R.value=!R.value,!0}onAdd(A){const s=this.sourceId?A.scene.getPokemonById(this.sourceId):null;s&&A.scene.queueMessage(D.t("arenaTag:trickRoomOnAdd",{pokemonNameWithAffix:ee(s)}))}onRemove(A){A.scene.queueMessage(D.t("arenaTag:trickRoomOnRemove"))}};L(bF,"TrickRoomTag");let vC=bF;const kF=class kF extends VE{constructor(A){super(ge.GRAVITY,A,t.GRAVITY)}onAdd(A){A.scene.queueMessage(D.t("arenaTag:gravityOnAdd")),A.scene.getField(!0).forEach(s=>{s!==null&&(s.removeTag(Y.FLOATING),s.removeTag(Y.TELEKINESIS),s.getTag(Y.FLYING)&&s.addTag(Y.INTERRUPTED))})}onRemove(A){A.scene.queueMessage(D.t("arenaTag:gravityOnRemove"))}};L(kF,"GravityTag");let EP=kF;const ZF=class ZF extends VE{constructor(A,s,R){super(ge.TAILWIND,A,t.TAILWIND,s,R)}onAdd(A,s=!1){s||A.scene.queueMessage(D.t(`arenaTag:tailwindOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`));const R=A.scene.getPokemonById(this.sourceId),n=(R!=null&&R.isPlayer()?R.scene.getPlayerField():R==null?void 0:R.scene.getEnemyField())??[];for(const I of n)I.hasAbility(O.WIND_POWER)&&!I.getTag(Y.CHARGED)&&(I.addTag(Y.CHARGED),I.scene.queueMessage(D.t("abilityTriggers:windPowerCharged",{pokemonName:ee(I),moveName:this.getMoveName()}))),I.hasAbility(O.WIND_RIDER)&&(I.scene.unshiftPhase(new bn(I.scene,I.getBattlerIndex())),I.scene.unshiftPhase(new Jt(I.scene,I.getBattlerIndex(),!0,[g.ATK],1,!0)))}onRemove(A,s=!1){s||A.scene.queueMessage(D.t(`arenaTag:tailwindOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};L(ZF,"TailwindTag");let sP=ZF;const XF=class XF extends VE{constructor(A,s,R){super(ge.HAPPY_HOUR,A,t.HAPPY_HOUR,s,R)}onAdd(A){A.scene.queueMessage(D.t("arenaTag:happyHourOnAdd"))}onRemove(A){A.scene.queueMessage(D.t("arenaTag:happyHourOnRemove"))}};L(XF,"HappyHourTag");let RP=XF;const QF=class QF extends VE{constructor(A,s,R){super(ge.SAFEGUARD,A,t.SAFEGUARD,s,R)}onAdd(A){A.scene.queueMessage(D.t(`arenaTag:safeguardOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}onRemove(A){A.scene.queueMessage(D.t(`arenaTag:safeguardOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};L(QF,"SafeguardTag");let OP=QF;const JF=class JF extends VE{constructor(){super(ge.NONE,0)}};L(JF,"NoneTag");let nP=JF;var Sr;let fQ=(Sr=class extends eO{constructor(A,s){super(ge.IMPRISON,t.IMPRISON,A,s,1)}onAdd({scene:A}){const s=this.getSourcePokemon(A);if(s){const R=this.getAffectedPokemon(A);R==null||R.forEach(n=>{n.isAllowedInBattle()&&n.addTag(Y.IMPRISON,1,t.IMPRISON,this.sourceId)}),A.queueMessage(D.t("battlerTags:imprisonOnAdd",{pokemonNameWithAffix:ee(s)}))}}lapse({scene:A}){const s=this.getSourcePokemon(A);return s?s.isActive(!0):!1}activateTrap(A){const s=this.getSourcePokemon(A.scene);return s&&s.isActive(!0)&&A.isAllowedInBattle()&&A.addTag(Y.IMPRISON,1,t.IMPRISON,this.sourceId),!0}onRemove({scene:A}){const s=this.getAffectedPokemon(A);s==null||s.forEach(R=>{R.removeTag(Y.IMPRISON)})}},L(Sr,"ImprisonTag"),Sr);const $F=class $F extends VE{constructor(A,s){super(ge.FIRE_GRASS_PLEDGE,4,t.FIRE_PLEDGE,A,s)}onAdd(A){A.scene.queueMessage(D.t(`arenaTag:fireGrassPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}lapse(A){return(this.side===1?A.scene.getPlayerField():A.scene.getEnemyField()).filter(R=>!R.isOfType(i.FIRE)&&!R.switchOutStatus).forEach(R=>{R.scene.queueMessage(D.t("arenaTag:fireGrassPledgeLapse",{pokemonNameWithAffix:ee(R)})),R.scene.unshiftPhase(new Is(R.scene,R.getBattlerIndex(),R.getBattlerIndex(),oA.MAGMA_STORM)),R.damageAndUpdate(Yt(R.getMaxHp()/8))}),super.lapse(A)}};L($F,"FireGrassPledgeTag");let iP=$F;const zF=class zF extends VE{constructor(A,s){super(ge.WATER_FIRE_PLEDGE,4,t.WATER_PLEDGE,A,s)}onAdd(A){A.scene.queueMessage(D.t(`arenaTag:waterFirePledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}apply(A,s,R){return R.value*=2,!0}};L(zF,"WaterFirePledgeTag");let IP=zF;const qF=class qF extends VE{constructor(A,s){super(ge.GRASS_WATER_PLEDGE,4,t.GRASS_PLEDGE,A,s)}onAdd(A){A.scene.queueMessage(D.t(`arenaTag:grassWaterPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};L(qF,"GrassWaterPledgeTag");let aP=qF;const jF=class jF extends VE{constructor(A,s){super(ge.FAIRY_LOCK,A,t.FAIRY_LOCK,s)}onAdd(A){A.scene.queueMessage(D.t("arenaTag:fairyLockOnAdd"))}};L(jF,"FairyLockTag");let rP=jF;function z6(E,A,s,R,n,I=0){switch(E){case ge.MIST:return new yC(A,R,I);case ge.QUICK_GUARD:return new b_(R,I);case ge.WIDE_GUARD:return new k_(R,I);case ge.MAT_BLOCK:return new Z_(R,I);case ge.CRAFTY_SHIELD:return new X_(R,I);case ge.NO_CRIT:return new wC(A,s,R,I);case ge.MUD_SPORT:return new J_(A,R);case ge.WATER_SPORT:return new $_(A,R);case ge.ION_DELUGE:return new z_(s);case ge.SPIKES:return new q_(R,I);case ge.TOXIC_SPIKES:return new j_(R,I);case ge.FUTURE_SIGHT:case ge.DOOM_DESIRE:return new eP(E,s,R,n,I);case ge.WISH:return new Q_(A,R,I);case ge.STEALTH_ROCK:return new tP(R,I);case ge.STICKY_WEB:return new AP(R,I);case ge.TRICK_ROOM:return new vC(A,R);case ge.GRAVITY:return new EP(A);case ge.REFLECT:return new v_(A,R,I);case ge.LIGHT_SCREEN:return new V_(A,R,I);case ge.AURORA_VEIL:return new x_(A,R,I);case ge.TAILWIND:return new sP(A,R,I);case ge.HAPPY_HOUR:return new RP(A,R,I);case ge.SAFEGUARD:return new OP(A,R,I);case ge.IMPRISON:return new fQ(R,I);case ge.FIRE_GRASS_PLEDGE:return new iP(R,I);case ge.WATER_FIRE_PLEDGE:return new IP(R,I);case ge.GRASS_WATER_PLEDGE:return new aP(R,I);case ge.FAIRY_LOCK:return new rP(A,R);default:return null}}L(z6,"getArenaTag");function BQ(E){const A=z6(E.tagType,E.turnCount,E.sourceMove,E.sourceId,E.targetIndex,E.side)??new nP;return A.loadTag(E),A}L(BQ,"loadArenaTag");const ep=class ep{constructor(A,s){this.id=A,this.nameAppend="",this.generation=s,this.attrs=[],this.conditions=[],this.localize()}localize(){const A=O[this.id].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.name=this.id?`${D.t(`ability:${A}.name`)}${this.nameAppend}`:"",this.description=this.id?D.t(`ability:${A}.description`):""}getAttrs(A){return this.attrs.filter(s=>s instanceof A)}hasAttr(A){return this.attrs.some(s=>s instanceof A)}attr(A,...s){const R=new A(...s);return this.attrs.push(R),this}conditionalAttr(A,s,...R){const n=new s(...R);return n.addCondition(A),this.attrs.push(n),this}bypassFaint(){return this.isBypassFaint=!0,this}ignorable(){return this.isIgnorable=!0,this}condition(A){return this.conditions.push(A),this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}edgeCase(){return this}};L(ep,"Ability");let Ee=ep;const tp=class tp{constructor(A=!0){this.showAbility=A}apply(A,s,R,n,I){return!1}getTriggerMessage(A,s,...R){return null}getCondition(){return this.extraCondition||null}addCondition(A){return this.extraCondition=A,this}};L(tp,"AbAttr");let ot=tp;const Ap=class Ap extends ot{apply(A,s,R,n,I){return n.value=!0,!0}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:blockRecoilDamage",{pokemonName:ee(A),abilityName:s})}};L(Ap,"BlockRecoilDamageAttr");let VC=Ap;const Ep=class Ep extends ot{constructor(){super(!1)}apply(A,s,R,n,I){const a=I[0];return a.value=a.value/4,!0}};L(Ep,"DoubleBattleChanceAbAttr");let _I=Ep;const sp=class sp extends ot{applyPostBattleInit(A,s,R,n){return!1}};L(sp,"PostBattleInitAbAttr");let mr=sp;const Rp=class Rp extends mr{constructor(A){super(!0),this.formFunc=A}applyPostBattleInit(A,s,R,n){return this.formFunc(A)!==A.formIndex&&!R?A.scene.triggerPokemonFormChange(A,bt,!1):!1}};L(Rp,"PostBattleInitFormChangeAbAttr");let GO=Rp;const Op=class Op extends mr{constructor(A,s,R){super(),this.stats=A,this.stages=s,this.selfTarget=!!R}applyPostBattleInit(A,s,R,n){var a;const I=[];if(!R){if(this.selfTarget)I.push(new Jt(A.scene,A.getBattlerIndex(),!0,this.stats,this.stages));else for(const r of A.getOpponents())I.push(new Jt(A.scene,r.getBattlerIndex(),!1,this.stats,this.stages));for(const r of I)!this.selfTarget&&!((a=r.getPokemon())!=null&&a.summonData)?A.scene.pushPhase(r):A.scene.unshiftPhase(r)}return!0}};L(Op,"PostBattleInitStatStageChangeAbAttr");let wa=Op;const np=class np extends ot{applyPreDefend(A,s,R,n,I,a,r){return!1}};L(np,"PreDefendAbAttr");let QO=np;const ip=class ip extends QO{applyPreDefend(A,s,R,n,I,a,r){return A.isFullHp()&&A.getMaxHp()>1&&r[0].value>=A.hp?R||A.addTag(Y.STURDY,1):!1}};L(ip,"PreDefendFullHpEndureAbAttr");let xC=ip;const Ip=class Ip extends ot{apply(A,s,R,n,I){return n.value=!0,!0}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:blockItemTheft",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(Ip,"BlockItemTheftAbAttr");let Fr=Ip;const ap=class ap extends ot{apply(A,s,R,n,I){return I[0].value>1?(I[0].value+=.5,!0):!1}};L(ap,"StabBoostAbAttr");let bC=ap;const rp=class rp extends QO{constructor(A,s){super(),this.condition=A,this.damageMultiplier=s}applyPreDefend(A,s,R,n,I,a,r){return this.condition(A,n,I)?(r[0].value=Yt(r[0].value*this.damageMultiplier),!0):!1}};L(rp,"ReceivedMoveDamageMultiplierAbAttr");let sR=rp;const Lp=class Lp extends QO{constructor(A){super(),this.damageMultiplier=A}applyPreDefend(A,s,R,n,I,a,r){const S=r[0];return S.value=Yt(S.value*this.damageMultiplier),!0}};L(Lp,"AlliedFieldDamageReductionAbAttr");let kC=Lp;const Np=class Np extends sR{constructor(A,s){super((R,n,I)=>n.getMoveType(I)===A,s)}};L(Np,"ReceivedTypeDamageMultiplierAbAttr");let Ti=Np;const Tp=class Tp extends QO{constructor(A,s){super(),this.immuneType=A,this.condition=s??null}applyPreDefend(A,s,R,n,I,a,r){return[JE.BOTH_SIDES,JE.ENEMY_SIDE,JE.USER_SIDE].includes(I.moveTarget)?!1:n!==A&&n.getMoveType(I)===this.immuneType?(r[0].value=0,!0):!1}getImmuneType(){return this.immuneType}getCondition(){return this.condition}};L(Tp,"TypeImmunityAbAttr");let iO=Tp;const Sp=class Sp extends iO{constructor(A,s){super(A,s)}applyPreDefend(A,s,R,n,I,a,r){return I.category!==Mt.STATUS&&!I.hasAttr(Zu)?super.applyPreDefend(A,s,R,n,I,a,r):!1}};L(Sp,"AttackTypeImmunityAbAttr");let LP=Sp;const op=class op extends iO{constructor(A){super(A)}applyPreDefend(A,s,R,n,I,a,r){if(super.applyPreDefend(A,s,R,n,I,a,r)){if(!A.isFullHp()&&!R){const o=(s?A.getPassiveAbility():A.getAbility()).name;A.scene.unshiftPhase(new mE(A.scene,A.getBattlerIndex(),Yt(A.getMaxHp()/4),D.t("abilityTriggers:typeImmunityHeal",{pokemonNameWithAffix:ee(A),abilityName:o}),!0)),a.value=!0}return!0}return!1}};L(op,"TypeImmunityHealAbAttr");let va=op;const lp=class lp extends iO{constructor(A,s,R,n){super(A,n),this.stat=s,this.stages=R}applyPreDefend(A,s,R,n,I,a,r){const S=super.applyPreDefend(A,s,R,n,I,a,r);return S&&(a.value=!0,R||A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[this.stat],this.stages))),S}};L(lp,"TypeImmunityStatStageChangeAbAttr");let rI=lp;const Cp=class Cp extends iO{constructor(A,s,R,n){super(A,n),this.tagType=s,this.turnCount=R}applyPreDefend(A,s,R,n,I,a,r){const S=super.applyPreDefend(A,s,R,n,I,a,r);return S&&(a.value=!0,R||A.addTag(this.tagType,this.turnCount,void 0,A.id)),S}};L(Cp,"TypeImmunityAddBattlerTagAbAttr");let NP=Cp;const Up=class Up extends iO{constructor(A){super(null,A)}applyPreDefend(A,s,R,n,I,a,r){const S=r.length>0?r[0].value:A.getAttackTypeEffectiveness(n.getMoveType(I),n,void 0,void 0,I);return I instanceof B&&S<2?(a.value=!0,r[0].value=0,!0):!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:nonSuperEffectiveImmunity",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(Up,"NonSuperEffectiveImmunityAbAttr");let TP=Up;const up=class up extends QO{applyPreDefend(A,s,R,n,I,a,r){const S=r[0];return!(S&&S instanceof Rt)||I&&I.hasAttr(DO)?!1:A.isFullHp()&&S.value>.5?(S.value=.5,A.turnData.moveEffectiveness=.5,!0):!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:fullHpResistType",{pokemonNameWithAffix:ee(A)})}};L(up,"FullHpResistTypeAbAttr");let ZC=up;const Dp=class Dp extends ot{applyPostDefend(A,s,R,n,I,a,r){return!1}};L(Dp,"PostDefendAbAttr");let zE=Dp;const Mp=class Mp extends QO{applyPreDefend(A,s,R,n,I,a,r){return I.moveTarget===JE.USER||I.moveTarget===JE.NEAR_ALLY?!1:I.getPriority(n)>0&&!I.isMultiTarget()?(a.value=!0,!0):!1}};L(Mp,"FieldPriorityMoveImmunityAbAttr");let nr=Mp;const hp=class hp extends ot{applyPostStatStageChange(A,s,R,n,I,a){return!1}};L(hp,"PostStatStageChangeAbAttr");let XC=hp;const cp=class cp extends QO{constructor(A){super(!0),this.immuneCondition=A}applyPreDefend(A,s,R,n,I,a,r){return this.immuneCondition(A,n,I)?(a.value=!0,!0):!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:ee(A)})}};L(cp,"MoveImmunityAbAttr");let Kn=cp;const _p=class _p extends QO{applyPreDefend(A,s,R,n,I,a,r){const S=r[0];return I.category===Mt.STATUS&&S.value>=50?(S.value=50,!0):!1}};L(_p,"WonderSkinAbAttr");let QC=_p;const Pp=class Pp extends Kn{constructor(A,s,R){super(A),this.stat=s,this.stages=R}applyPreDefend(A,s,R,n,I,a,r){const S=super.applyPreDefend(A,s,R,n,I,a,r);return S&&!R&&A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[this.stat],this.stages)),S}};L(Pp,"MoveImmunityStatStageChangeAbAttr");let SP=Pp;const Gp=class Gp extends zE{applyPostDefend(A,s,R,n,I,a,r){return I.hasAttr(Ks)&&!I.hitsSubstitute(n,A)?(R||A.scene.queueMessage(D.t("abilityTriggers:reverseDrain",{pokemonNameWithAffix:ee(n)})),!0):!1}};L(Gp,"ReverseDrainAbAttr");let rS=Gp;const Hp=class Hp extends zE{constructor(A,s,R,n=!0,I=!1){super(!0),this.condition=A,this.stat=s,this.stages=R,this.selfTarget=n,this.allOthers=I}applyPostDefend(A,s,R,n,I,a,r){if(this.condition(A,n,I)&&!I.hitsSubstitute(n,A)){if(R)return!0;if(this.allOthers){const S=A.getAlly()?A.getOpponents().concat([A.getAlly()]):A.getOpponents();for(const o of S)o.scene.unshiftPhase(new Jt(o.scene,o.getBattlerIndex(),!1,[this.stat],this.stages));return!0}return A.scene.unshiftPhase(new Jt(A.scene,(this.selfTarget?A:n).getBattlerIndex(),this.selfTarget,[this.stat],this.stages)),!0}return!1}};L(Hp,"PostDefendStatStageChangeAbAttr");let yR=Hp;const dp=class dp extends zE{constructor(A,s,R,n,I=!0){super(!0),this.condition=A,this.hpGate=s,this.stats=R,this.stages=n,this.selfTarget=I}applyPostDefend(A,s,R,n,I,a,r){const S=Math.ceil(A.getMaxHp()*this.hpGate),o=A.turnData.attacksReceived[A.turnData.attacksReceived.length-1],l=(o==null?void 0:o.damage)||0;return this.condition(A,n,I)&&A.hp<=S&&A.hp+l>S&&!I.hitsSubstitute(n,A)?(R||A.scene.unshiftPhase(new Jt(A.scene,(this.selfTarget?A:n).getBattlerIndex(),!0,this.stats,this.stages)),!0):!1}};L(dp,"PostDefendHpGatedStatStageChangeAbAttr");let WL=dp;const fp=class fp extends zE{constructor(A,s){super(!0),this.condition=A,this.tagType=s}applyPostDefend(A,s,R,n,I,a,r){if(this.condition(A,n,I)&&!I.hitsSubstitute(n,A)){const S=A.scene.arena.getTag(this.tagType);if(!A.scene.arena.getTag(this.tagType)||S.layers<S.maxLayers)return R||A.scene.arena.addTag(this.tagType,0,void 0,A.id,A.isPlayer()?St.ENEMY:St.PLAYER),!0}return!1}};L(fp,"PostDefendApplyArenaTrapTagAbAttr");let oP=fp;const Bp=class Bp extends zE{constructor(A,s){super(!0),this.condition=A,this.tagType=s}applyPostDefend(A,s,R,n,I,a,r){return this.condition(A,n,I)&&!I.hitsSubstitute(n,A)?(!A.getTag(this.tagType)&&!R&&(A.addTag(this.tagType,void 0,void 0,A.id),A.scene.queueMessage(D.t("abilityTriggers:windPowerCharged",{pokemonName:ee(A),moveName:I.name}))),!0):!1}};L(Bp,"PostDefendApplyBattlerTagAbAttr");let JC=Bp;const gp=class gp extends zE{applyPostDefend(A,s,R,n,I,a,r){if(a<wt.NO_EFFECT&&!I.hitsSubstitute(n,A)){if(R)return!0;const S=n.getMoveType(I),o=A.getTypes(!0);if(o.length!==1||o[0]!==S)return A.summonData.types=[S],!0}return!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:postDefendTypeChange",{pokemonNameWithAffix:ee(A),abilityName:s,typeName:D.t(`pokemonInfo:Type.${i[A.getTypes(!0)[0]]}`)})}};L(gp,"PostDefendTypeChangeAbAttr");let lP=gp;const Kp=class Kp extends zE{constructor(A){super(),this.terrainType=A}applyPostDefend(A,s,R,n,I,a,r){var S;return a<wt.NO_EFFECT&&!I.hitsSubstitute(n,A)?R?((S=A.scene.arena.terrain)==null?void 0:S.terrainType)!==(this.terrainType||void 0):A.scene.arena.trySetTerrain(this.terrainType,!0):!1}};L(Kp,"PostDefendTerrainChangeAbAttr");let CP=Kp;const mp=class mp extends zE{constructor(A,...s){super(),this.chance=A,this.effects=s}applyPostDefend(A,s,R,n,I,a,r){if(I.checkFlag(tA.MAKES_CONTACT,n,A)&&!n.status&&(this.chance===-1||A.randSeedInt(100)<this.chance)&&!I.hitsSubstitute(n,A)){const S=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return R?n.canSetStatus(S,!0,!1,A):n.trySetStatus(S,!0,A)}return!1}};L(mp,"PostDefendContactApplyStatusEffectAbAttr");let ir=mp;const Fp=class Fp extends ir{constructor(){super(10,Re.POISON,Re.PARALYSIS,Re.SLEEP)}applyPostDefend(A,s,R,n,I,a,r){return n.hasAbility(O.OVERCOAT)||n.isOfType(i.GRASS)?!1:super.applyPostDefend(A,s,R,n,I,a,r)}};L(Fp,"EffectSporeAbAttr");let UP=Fp;const pp=class pp extends zE{constructor(A,s,R){super(),this.tagType=s,this.chance=A,this.turnCount=R}applyPostDefend(A,s,R,n,I,a,r){return I.checkFlag(tA.MAKES_CONTACT,n,A)&&A.randSeedInt(100)<this.chance&&!I.hitsSubstitute(n,A)?R?n.canAddTag(this.tagType):n.addTag(this.tagType,this.turnCount,I.id,n.id):!1}};L(pp,"PostDefendContactApplyTagChanceAbAttr");let uP=pp;const Wp=class Wp extends zE{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostDefend(A,s,R,n,I,a,r){return I.hitsSubstitute(n,A)?!1:(R||A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[this.stat],this.stages)),!0)}getCondition(){return A=>A.turnData.attacksReceived.length!==0&&A.turnData.attacksReceived[A.turnData.attacksReceived.length-1].critical}};L(Wp,"PostDefendCritStatStageChangeAbAttr");let DP=Wp;const Yp=class Yp extends zE{constructor(A){super(),this.damageRatio=A}applyPostDefend(A,s,R,n,I,a,r){return!R&&I.checkFlag(tA.MAKES_CONTACT,n,A)&&!n.hasAbilityWithAttr(DE)&&!I.hitsSubstitute(n,A)?(n.damageAndUpdate(Yt(n.getMaxHp()*(1/this.damageRatio)),wt.OTHER),n.turnData.damageTaken+=Yt(n.getMaxHp()*(1/this.damageRatio)),!0):!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:postDefendContactDamage",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(Yp,"PostDefendContactDamageAbAttr");let $C=Yp;const yp=class yp extends zE{constructor(A){super(),this.turns=A}applyPostDefend(A,s,R,n,I,a,r){return I.checkFlag(tA.MAKES_CONTACT,n,A)&&!I.hitsSubstitute(n,A)?A.getTag(Y.PERISH_SONG)||n.getTag(Y.PERISH_SONG)?!1:(R||(n.addTag(Y.PERISH_SONG,this.turns),A.addTag(Y.PERISH_SONG,this.turns)),!0):!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:perishBody",{pokemonName:ee(A),abilityName:s})}};L(yp,"PostDefendPerishSongAbAttr");let MP=yp;const wp=class wp extends zE{constructor(A,s){super(),this.weatherType=A,this.condition=s}applyPostDefend(A,s,R,n,I,a,r){var S,o;return this.condition&&!this.condition(A,n,I)||I.hitsSubstitute(n,A)||(S=A.scene.arena.weather)!=null&&S.isImmutable()?!1:R?((o=A.scene.arena.weather)==null?void 0:o.weatherType)!==this.weatherType:A.scene.arena.trySetWeather(this.weatherType,!0)}};L(wp,"PostDefendWeatherChangeAbAttr");let hP=wp;const vp=class vp extends zE{constructor(){super()}applyPostDefend(A,s,R,n,I,a,r){if(I.checkFlag(tA.MAKES_CONTACT,n,A)&&!n.getAbility().hasAttr(uA)&&!I.hitsSubstitute(n,A)){if(!R){const S=n.getAbility().id;n.summonData.ability=A.getAbility().id,A.summonData.ability=S}return!0}return!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:postDefendAbilitySwap",{pokemonNameWithAffix:ee(A)})}};L(vp,"PostDefendAbilitySwapAbAttr");let cP=vp;const VD=class VD extends zE{constructor(A){super(),this.ability=A}applyPostDefend(A,s,R,n,I,a,r){return I.checkFlag(tA.MAKES_CONTACT,n,A)&&!n.getAbility().hasAttr(rE)&&!n.getAbility().hasAttr(VD)&&!I.hitsSubstitute(n,A)?(R||(n.summonData.ability=this.ability),!0):!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:postDefendAbilityGive",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(VD,"PostDefendAbilityGiveAbAttr");let zC=VD;const Vp=class Vp extends zE{constructor(A){super(),this.chance=A}applyPostDefend(A,s,R,n,I,a,r){return n.getTag(Y.DISABLED)===null&&!I.hitsSubstitute(n,A)&&I.checkFlag(tA.MAKES_CONTACT,n,A)&&(this.chance===-1||A.randSeedInt(100)<this.chance)?(R||(this.attacker=n,this.move=I,this.attacker.addTag(Y.DISABLED,4,0,A.id)),!0):!1}};L(Vp,"PostDefendMoveDisableAbAttr");let _P=Vp;const xp=class xp extends XC{constructor(A,s,R){super(!0),this.condition=A,this.statsToChange=s,this.stages=R}applyPostStatStageChange(A,s,R,n,I,a){return this.condition(A,R,n)&&!I?(s||A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,this.statsToChange,this.stages)),!0):!1}};L(xp,"PostStatStageChangeStatStageChangeAbAttr");let qC=xp;const bp=class bp extends ot{applyPreAttack(A,s,R,n,I,a){return!1}};L(bp,"PreAttackAbAttr");let ta=bp;const kp=class kp extends ot{constructor(A){super(!0),this.chanceMultiplier=A}apply(A,s,R,n,I){this.showAbility=I[4];const a=[t.ORDER_UP,t.ELECTRO_SHOT];return I[0].value<=0||a.includes(I[1].id)?!1:(I[0].value*=this.chanceMultiplier,I[0].value=Math.min(I[0].value,100),!0)}};L(kp,"MoveEffectChanceMultiplierAbAttr");let LS=kp;const Zp=class Zp extends QO{applyPreDefend(A,s,R,n,I,a,r){return r[0].value<=0?!1:(r[0].value=0,!0)}};L(Zp,"IgnoreMoveEffectsAbAttr");let xi=Zp;const Xp=class Xp extends ta{applyPreAttack(A,s,R,n,I,a){return!1}};L(Xp,"VariableMovePowerAbAttr");let NS=Xp;const Qp=class Qp extends ot{apply(A,s,R,n,I){return n.value=!0,!0}};L(Qp,"FieldPreventExplosiveMovesAbAttr");let TS=Qp;const xD=class xD extends ot{constructor(A,s,R=!1){super(!1),this.stat=A,this.multiplier=s,this.canStack=R}applyFieldStat(A,s,R,n,I,a,r,S){return!this.canStack&&r.value?!1:this.stat===n&&a.getAbilityAttrs(xD).every(o=>o.stat!==n)?(I.value*=this.multiplier,r.value=!0,!0):!1}};L(xD,"FieldMultiplyStatAbAttr");let PI=xD;const Jp=class Jp extends ta{constructor(A,s,R){super(!0),this.newType=A,this.powerMultiplier=s,this.condition=R}applyPreAttack(A,s,R,n,I,a){return this.condition&&this.condition(A,n,I)?(a[0]&&a[0]instanceof Rt&&(a[0].value=this.newType),a[1]&&a[1]instanceof Rt&&(a[1].value*=this.powerMultiplier),!0):!1}};L(Jp,"MoveTypeChangeAbAttr");let sn=Jp;const $p=class $p extends ta{constructor(){super(!0)}applyPreAttack(A,s,R,n,I,a){if(!A.isTerastallized()&&I.id!==t.STRUGGLE&&!I.findAttr(r=>r instanceof bS||r instanceof tD||r instanceof AD||r instanceof Xr)){const r=A.getMoveType(I);if(A.getTypes().some(S=>S!==r))return R||(this.moveType=r,A.summonData.types=[r],A.updateInfo()),!0}return!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:ee(A),moveType:D.t(`pokemonInfo:Type.${i[this.moveType]}`)})}};L($p,"PokemonTypeChangeAbAttr");let yI=$p;const zp=class zp extends ta{constructor(A){super(!1),this.damageMultiplier=A}applyPreAttack(A,s,R,n,I,a){const r=a[0],S=a[1];return I.canBeMultiStrikeEnhanced(A,!0)?(this.showAbility=!!(r!=null&&r.value),r!=null&&r.value&&(r.value+=1),S!=null&&S.value&&A.turnData.hitsLeft===1&&(S.value=this.damageMultiplier),!0):!1}};L(zp,"AddSecondStrikeAbAttr");let SS=zp;const qp=class qp extends ta{constructor(A,s){super(!0),this.damageMultiplier=A,this.condition=s}applyPreAttack(A,s,R,n,I,a){if(this.condition(A,n,I)){const r=a[0];return r.value=Math.floor(r.value*this.damageMultiplier),!0}return!1}};L(qp,"DamageBoostAbAttr");let jC=qp;const jp=class jp extends NS{constructor(A,s,R=!0){super(R),this.condition=A,this.powerMultiplier=s}applyPreAttack(A,s,R,n,I,a){return this.condition(A,n,I)?(a[0].value*=this.powerMultiplier,!0):!1}};L(jp,"MovePowerBoostAbAttr");let Es=jp;const e5=class e5 extends Es{constructor(A,s){super((R,n,I)=>(R==null?void 0:R.getMoveType(I))===A,s||1.5)}};L(e5,"MoveTypePowerBoostAbAttr");let BO=e5;const t5=class t5 extends BO{constructor(A){super(A)}getCondition(){return A=>A.getHpRatio()<=.33}};L(t5,"LowHpMoveTypePowerBoostAbAttr");let Va=t5;const A5=class A5 extends NS{constructor(A,s=!0){super(s),this.mult=A}applyPreAttack(A,s,R,n,I,a){const r=this.mult(A,n,I);return r!==1?(a[0].value*=r,!0):!1}};L(A5,"VariableMovePowerBoostAbAttr");let PP=A5;const E5=class E5 extends ot{constructor(A,s){super(!1),this.condition=A,this.powerMultiplier=s}applyPreAttack(A,s,R,n,I,a){return this.condition(A,n,I)?(a[0].value*=this.powerMultiplier,!0):!1}};L(E5,"FieldMovePowerBoostAbAttr");let eU=E5;const s5=class s5 extends eU{constructor(A,s){super((R,n,I)=>(R==null?void 0:R.getMoveType(I))===A,s||1.5)}};L(s5,"PreAttackFieldMoveTypePowerBoostAbAttr");let tU=s5;const R5=class R5 extends tU{};L(R5,"FieldMoveTypePowerBoostAbAttr");let GI=R5;const O5=class O5 extends tU{};L(O5,"UserFieldMoveTypePowerBoostAbAttr");let AU=O5;const n5=class n5 extends eU{constructor(A,s){super((R,n,I)=>A.includes(I.category),s)}};L(n5,"AllyMoveCategoryPowerBoostAbAttr");let oS=n5;const i5=class i5 extends ot{constructor(A,s,R){super(!1),this.stat=A,this.multiplier=s,this.condition=R??null}applyStatStage(A,s,R,n,I,a){const r=a[0];return n===this.stat&&(!this.condition||this.condition(A,null,r))?(I.value*=this.multiplier,!0):!1}};L(i5,"StatMultiplierAbAttr");let fA=i5;const I5=class I5 extends ot{constructor(A=(R,n,I)=>I.category!==Mt.STATUS,s=!0){super(s),this.attackCondition=A}applyPostAttack(A,s,R,n,I,a,r){return this.attackCondition(A,n,I)?this.applyPostAttackAfterMoveTypeCheck(A,s,R,n,I,a,r):!1}applyPostAttackAfterMoveTypeCheck(A,s,R,n,I,a,r){return!1}};L(I5,"PostAttackAbAttr");let bi=I5;const a5=class a5 extends bi{constructor(){super((A,s,R)=>!0,!1)}applyPostAttackAfterMoveTypeCheck(A,s,R,n,I,a,r){return R||(A.getTag(Y.GORILLA_TACTICS)?!1:(A.addTag(Y.GORILLA_TACTICS),!0))}};L(a5,"GorillaTacticsAbAttr");let GP=a5;const r5=class r5 extends bi{constructor(A){super(),this.stealCondition=A??null}applyPostAttackAfterMoveTypeCheck(A,s,R,n,I,a,r){return new Promise(S=>{if(!R&&a<wt.NO_EFFECT&&(!this.stealCondition||this.stealCondition(A,n,I))){const o=this.getTargetHeldItems(n).filter(l=>l.isTransferable);if(o.length){const l=o[A.randSeedInt(o.length)];A.scene.tryTransferHeldItemModifier(l,A,!1).then(C=>{C&&A.scene.queueMessage(D.t("abilityTriggers:postAttackStealHeldItem",{pokemonNameWithAffix:ee(A),defenderName:n.name,stolenItemType:l.type.name})),S(C)});return}}S(R)})}getTargetHeldItems(A){return A.scene.findModifiers(s=>s instanceof Ht&&s.pokemonId===A.id,A.isPlayer())}};L(r5,"PostAttackStealHeldItemAbAttr");let HP=r5;const L5=class L5 extends bi{constructor(A,s,...R){super(),this.contactRequired=A,this.chance=s,this.effects=R}applyPostAttackAfterMoveTypeCheck(A,s,R,n,I,a,r){if(A!==n&&I.hitsSubstitute(n,A))return!1;if(!n.hasAbilityWithAttr(xi)&&!R&&A!==n&&(!this.contactRequired||I.checkFlag(tA.MAKES_CONTACT,n,A))&&A.randSeedInt(100)<this.chance&&!A.status){const S=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return n.trySetStatus(S,!0,A)}return R}};L(L5,"PostAttackApplyStatusEffectAbAttr");let EU=L5;const N5=class N5 extends EU{constructor(A,...s){super(!0,A,...s)}};L(N5,"PostAttackContactApplyStatusEffectAbAttr");let dP=N5;const T5=class T5 extends bi{constructor(A,s,...R){super(),this.contactRequired=A,this.chance=s,this.effects=R}applyPostAttackAfterMoveTypeCheck(A,s,R,n,I,a,r){if(!n.hasAbilityWithAttr(xi)&&A!==n&&(!this.contactRequired||I.checkFlag(tA.MAKES_CONTACT,n,A))&&A.randSeedInt(100)<this.chance(n,A,I)&&!A.status){const S=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return R||n.addTag(S)}return!1}};L(T5,"PostAttackApplyBattlerTagAbAttr");let fP=T5;const S5=class S5 extends zE{constructor(A){super(),this.condition=A}applyPostDefend(A,s,R,n,I,a,r){return new Promise(S=>{if(!R&&a<wt.NO_EFFECT&&(!this.condition||this.condition(A,n,I))&&!I.hitsSubstitute(n,A)){const o=this.getTargetHeldItems(n).filter(l=>l.isTransferable);if(o.length){const l=o[A.randSeedInt(o.length)];A.scene.tryTransferHeldItemModifier(l,A,!1).then(C=>{C&&A.scene.queueMessage(D.t("abilityTriggers:postDefendStealHeldItem",{pokemonNameWithAffix:ee(A),attackerName:n.name,stolenItemType:l.type.name})),S(C)});return}}S(R)})}getTargetHeldItems(A){return A.scene.findModifiers(s=>s instanceof Ht&&s.pokemonId===A.id,A.isPlayer())}};L(S5,"PostDefendStealHeldItemAbAttr");let BP=S5;const o5=class o5 extends ot{applyPostSetStatus(A,s=null,R,n,I,a){return!1}};L(o5,"PostSetStatusAbAttr");let sU=o5;const l5=class l5 extends sU{applyPostSetStatus(A,s=null,R,n,I,a){const r=new Set([Re.BURN,Re.PARALYSIS,Re.POISON,Re.TOXIC]);return s&&r.has(n)?(I||s.trySetStatus(n,!0,A),!0):!1}};L(l5,"SynchronizeStatusAbAttr");let gP=l5;const C5=class C5 extends ot{applyPostVictory(A,s,R,n){return!1}};L(C5,"PostVictoryAbAttr");let lS=C5;const U5=class U5 extends lS{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostVictory(A,s,R,n){const I=typeof this.stat=="function"?this.stat(A):this.stat;return R||A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[I],this.stages)),!0}};L(U5,"PostVictoryStatStageChangeAbAttr");let Si=U5;const u5=class u5 extends lS{constructor(A){super(!0),this.formFunc=A}applyPostVictory(A,s,R,n){return this.formFunc(A)!==A.formIndex?(R||A.scene.triggerPokemonFormChange(A,bt,!1),!0):!1}};L(u5,"PostVictoryFormChangeAbAttr");let KP=u5;const D5=class D5 extends ot{applyPostKnockOut(A,s,R,n,I){return!1}};L(D5,"PostKnockOutAbAttr");let CS=D5;const M5=class M5 extends CS{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostKnockOut(A,s,R,n,I){const a=typeof this.stat=="function"?this.stat(A):this.stat;return R||A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[a],this.stages)),!0}};L(M5,"PostKnockOutStatStageChangeAbAttr");let mP=M5;const h5=class h5 extends CS{constructor(){super()}applyPostKnockOut(A,s,R,n,I){return A.isPlayer()===n.isPlayer()&&!n.getAbility().hasAttr(sA)?(R||(A.summonData.ability=n.getAbility().id,A.scene.queueMessage(D.t("abilityTriggers:copyFaintedAllyAbility",{pokemonNameWithAffix:ee(n),abilityName:LE[n.getAbility().id].name}))),!0):!1}};L(h5,"CopyFaintedAllyAbilityAbAttr");let RU=h5;const c5=class c5 extends ot{constructor(A){super(!1),this.stats=A??MO}apply(A,s,R,n,I){return this.stats.includes(I[0])?(I[1].value=!0,!0):!1}};L(c5,"IgnoreOpponentStatStagesAbAttr");let Ki=c5;const _5=class _5 extends ot{constructor(){super(!1)}apply(A,s,R,n,I){return n.value=!0,!0}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:intimidateImmunity",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(_5,"IntimidateImmunityAbAttr");let HI=_5;const P5=class P5 extends ot{constructor(A,s,R){super(!0),this.stats=A,this.stages=s,this.overwrites=!!R}apply(A,s,R,n,I){return R||A.scene.pushPhase(new Jt(A.scene,A.getBattlerIndex(),!1,this.stats,this.stages)),n.value=this.overwrites,!0}};L(P5,"PostIntimidateStatStageChangeAbAttr");let US=P5;const G5=class G5 extends ot{applyPostSummon(A,s,R,n){return!1}};L(G5,"PostSummonAbAttr");let HE=G5;const H5=class H5 extends HE{constructor(A){super(!0),this.arenaTags=A}applyPostSummon(A,s,R,n){if(!R)for(const I of this.arenaTags)A.scene.arena.removeTag(I);return!0}};L(H5,"PostSummonRemoveArenaTagAbAttr");let FP=H5;const d5=class d5 extends HE{constructor(A){super(!0),this.messageFunc=A}applyPostSummon(A,s,R,n){return R||A.scene.queueMessage(this.messageFunc(A)),!0}};L(d5,"PostSummonMessageAbAttr");let gs=d5;const f5=class f5 extends HE{constructor(A){super(!0),this.message=A}applyPostSummon(A,s,R,n){return R||A.scene.queueMessage(this.message),!0}};L(f5,"PostSummonUnnamedMessageAbAttr");let OU=f5;const B5=class B5 extends HE{constructor(A,s,R){super(R),this.tagType=A,this.turnCount=s}applyPostSummon(A,s,R,n){return R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount)}};L(B5,"PostSummonAddBattlerTagAbAttr");let Gn=B5;const g5=class g5 extends HE{constructor(A,s,R,n){super(!1),this.stats=A,this.stages=s,this.selfTarget=!!R,this.intimidate=!!n}applyPostSummon(A,s,R,n){if(R)return!0;if(U1(A,s),this.selfTarget)return A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,this.stats,this.stages)),!0;for(const I of A.getOpponents()){const a=new Lt(!1);this.intimidate&&(Ct(HI,I,a,R),Ct(US,I,a,R),I.getTag(Y.SUBSTITUTE)&&(a.value=!0)),a.value||A.scene.unshiftPhase(new Jt(A.scene,I.getBattlerIndex(),!1,this.stats,this.stages))}return!0}};L(g5,"PostSummonStatStageChangeAbAttr");let dI=g5;const K5=class K5 extends HE{constructor(A,s=!1){super(),this.healRatio=A||4,this.showAnim=s}applyPostSummon(A,s,R,n){const I=A.getAlly();return I!=null&&I.isActive(!0)?(R||I.scene.unshiftPhase(new mE(I.scene,I.getBattlerIndex(),Yt(A.getMaxHp()/this.healRatio),D.t("abilityTriggers:postSummonAllyHeal",{pokemonNameWithAffix:ee(I),pokemonName:A.name}),!0,!this.showAnim)),!0):!1}};L(K5,"PostSummonAllyHealAbAttr");let pP=K5;const m5=class m5 extends HE{constructor(){super()}applyPostSummon(A,s,R,n){const I=A.getAlly();if(I!=null&&I.isActive(!0)){if(!R){for(const a of MO)I.setStatStage(a,0);I.scene.queueMessage(D.t("abilityTriggers:postSummonClearAllyStats",{pokemonNameWithAffix:ee(I)}))}return!0}return!1}};L(m5,"PostSummonClearAllyStatStagesAbAttr");let WP=m5;const F5=class F5 extends HE{applyPostSummon(A,s,R,n){this.enemyDef=0,this.enemySpDef=0,this.enemyCountTally=0;for(const I of A.getOpponents())this.enemyCountTally++,this.enemyDef+=I.getEffectiveStat(g.DEF),this.enemySpDef+=I.getEffectiveStat(g.SPDEF);return this.enemyDef=Math.round(this.enemyDef/this.enemyCountTally),this.enemySpDef=Math.round(this.enemySpDef/this.enemyCountTally),this.enemyDef<this.enemySpDef?this.stats=[g.ATK]:this.stats=[g.SPATK],this.enemyDef>0&&this.enemySpDef>0?(R||A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!1,this.stats,1)),!0):!1}};L(F5,"DownloadAbAttr");let YP=F5;const p5=class p5 extends HE{constructor(A){super(),this.weatherType=A}applyPostSummon(A,s,R,n){var I,a;return this.weatherType===se.HEAVY_RAIN||this.weatherType===se.HARSH_SUN||this.weatherType===se.STRONG_WINDS||!((I=A.scene.arena.weather)!=null&&I.isImmutable())?R?((a=A.scene.arena.weather)==null?void 0:a.weatherType)!==this.weatherType:A.scene.arena.trySetWeather(this.weatherType,!0):!1}};L(p5,"PostSummonWeatherChangeAbAttr");let qO=p5;const W5=class W5 extends HE{constructor(A){super(),this.terrainType=A}applyPostSummon(A,s,R,n){var I;return R?((I=A.scene.arena.terrain)==null?void 0:I.terrainType)!==this.terrainType:A.scene.arena.trySetTerrain(this.terrainType,!0)}};L(W5,"PostSummonTerrainChangeAbAttr");let LI=W5;const Y5=class Y5 extends HE{constructor(A){super(!0),this.formFunc=A}applyPostSummon(A,s,R,n){return this.formFunc(A)!==A.formIndex?R||A.scene.triggerPokemonFormChange(A,bt,!1):!1}};L(Y5,"PostSummonFormChangeAbAttr");let oi=Y5;const y5=class y5 extends HE{applyPostSummon(A,s,R,n){const I=A.getOpponents();if(!I.length)return!1;let a;return I.length>1?A.scene.executeWithSeedOffset(()=>a=JA(I),A.scene.currentBattle.waveIndex):a=I[0],a.getAbility().hasAttr(sA)&&!(A.hasAbility(O.TRACE)&&a.getAbility().id===O.WONDER_GUARD)?!1:(R||(this.target=a,this.targetAbilityName=LE[a.getAbility().id].name,A.summonData.ability=a.getAbility().id,e8(a),A.updateInfo()),!0)}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:trace",{pokemonName:ee(A),targetName:ee(this.target),abilityName:this.targetAbilityName})}};L(y5,"PostSummonCopyAbilityAbAttr");let yP=y5;const w5=class w5 extends HE{constructor(...A){super(!1),this.statusEffect=A}applyPostSummon(A,s,R,n){const a=(A instanceof wE?A.scene.getPlayerField():A.scene.getEnemyField()).filter(r=>r.isAllowedInBattle());if(a.length<1)return!1;if(!R)for(const r of a)r.status&&this.statusEffect.includes(r.status.effect)&&(r.scene.queueMessage(EI(r.status.effect,ee(r))),r.resetStatus(!1),r.updateInfo());return!0}};L(w5,"PostSummonUserFieldRemoveStatusEffectAbAttr");let wP=w5;const v5=class v5 extends HE{applyPostSummon(A,s,R,n){if(!A.scene.currentBattle.double)return!1;const I=A.getAlly();if(!I||I.getStatStages().every(a=>a===0))return!1;if(!R){for(const a of MO)A.setStatStage(a,I.getStatStage(a));A.updateInfo()}return!0}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:costar",{pokemonName:ee(A),allyName:ee(A.getAlly())})}};L(v5,"PostSummonCopyAllyStatsAbAttr");let vP=v5;const V5=class V5 extends HE{constructor(){super(!0)}async applyPostSummon(A,s,R,n){const I=A.getOpponents();if(R||!I.length)return R;const a=[];let r;if(I.length>1?A.scene.executeWithSeedOffset(()=>{if(I[0].fusionSpecies){r=I[1];return}else if(I[1].fusionSpecies){r=I[0];return}r=JA(I)},A.scene.currentBattle.waveIndex):r=I[0],r=r,r.fusionSpecies||A.fusionSpecies)return!1;A.summonData.speciesForm=r.getSpeciesForm(),A.summonData.ability=r.getAbility().id,A.summonData.gender=r.getGender();for(const S of Vn)A.setStat(S,r.getStat(S,!1),!1);for(const S of MO)A.setStatStage(S,r.getStatStage(S));return A.summonData.moveset=r.getMoveset().map(S=>S?new Ot(S.moveId,0,0,!1,Math.min(S.getMove().pp,5)):(console.warn(`Imposter: somehow iterating over a ${S} value when copying moveset!`),new Ot(t.NONE))),A.summonData.types=r.getTypes(),a.push(A.updateInfo()),A.scene.queueMessage(D.t("abilityTriggers:postSummonTransform",{pokemonNameWithAffix:ee(A),targetName:r.name})),A.scene.playSound("battle_anims/PRSFX- Transform"),a.push(A.loadAssets(!1).then(()=>{A.playAnim(),A.updateInfo()})),await Promise.all(a),!0}};L(V5,"PostSummonTransformAbAttr");let VP=V5;const x5=class x5 extends HE{applyPostSummon(A,s,R,n){return t8(A.scene).length<1?!1:(R||A.scene.arena.triggerWeatherBasedFormChangesToNormal(),!0)}};L(x5,"PostSummonWeatherSuppressedFormChangeAbAttr");let nU=x5;const b5=class b5 extends HE{constructor(A){super(!1),this.ability=A}applyPostSummon(A,s,R,n){const I=A.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,a=A.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;return I||a?R||(A.scene.triggerPokemonFormChange(A,cR),A.scene.triggerPokemonFormChange(A,mn),U1(A,s),!0):!1}};L(b5,"PostSummonFormChangeByWeatherAbAttr");let iU=b5;const k5=class k5 extends ot{constructor(){super(!0)}apply(A,s,R,n,I){var a,r;return(a=A.scene.currentBattle)!=null&&a.double&&((r=A.getAlly())==null?void 0:r.species.speciesId)===e.DONDOZO?A.getAlly().isFainted()||A.getAlly().getTag(Y.COMMANDED)?!1:(R||(A.lapseTags(QE.MOVE_EFFECT),A.scene.triggerPokemonBattleAnim(A,PR.COMMANDER_APPLY),A.getAlly().addTag(Y.COMMANDED,0,t.NONE,A.id),A.scene.tryRemovePhase(S=>S instanceof HA&&S.pokemon===A)),!0):!1}};L(k5,"CommanderAbAttr");let pr=k5;const Z5=class Z5 extends ot{constructor(){super(!0)}applyPreSwitchOut(A,s,R,n){return!1}};L(Z5,"PreSwitchOutAbAttr");let Aa=Z5;const X5=class X5 extends Aa{applyPreSwitchOut(A,s,R,n){return A.status?(R||(A.resetStatus(),A.updateInfo()),!0):!1}};L(X5,"PreSwitchOutResetStatusAbAttr");let xP=X5;const Q5=class Q5 extends Aa{applyPreSwitchOut(A,s,R,n){var r;const I=(r=A.scene.arena.weather)==null?void 0:r.weatherType;let a=!1;switch(I){case se.HARSH_SUN:A.hasAbility(O.DESOLATE_LAND)&&A.scene.getField(!0).filter(S=>S!==A).filter(S=>S.hasAbility(O.DESOLATE_LAND)).length===0&&(a=!0);break;case se.HEAVY_RAIN:A.hasAbility(O.PRIMORDIAL_SEA)&&A.scene.getField(!0).filter(S=>S!==A).filter(S=>S.hasAbility(O.PRIMORDIAL_SEA)).length===0&&(a=!0);break;case se.STRONG_WINDS:A.hasAbility(O.DELTA_STREAM)&&A.scene.getField(!0).filter(S=>S!==A).filter(S=>S.hasAbility(O.DELTA_STREAM)).length===0&&(a=!0);break}return R?a:a?(A.scene.arena.trySetWeather(se.NONE,!1),!0):!1}};L(Q5,"PreSwitchOutClearWeatherAbAttr");let YL=Q5;const J5=class J5 extends Aa{applyPreSwitchOut(A,s,R,n){if(!A.isFullHp()){if(!R){const I=Yt(A.getMaxHp()*.33);A.heal(I),A.updateInfo()}return!0}return!1}};L(J5,"PreSwitchOutHealAbAttr");let bP=J5;const $5=class $5 extends Aa{constructor(A){super(),this.formFunc=A}applyPreSwitchOut(A,s,R,n){return this.formFunc(A)!==A.formIndex?(R||A.scene.triggerPokemonFormChange(A,bt,!1),!0):!1}};L($5,"PreSwitchOutFormChangeAbAttr");let kP=$5;const z5=class z5 extends ot{applyPreStatStageChange(A,s,R,n,I,a){return!1}};L(z5,"PreStatStageChangeAbAttr");let ZP=z5;const q5=class q5 extends ZP{constructor(A){super(),this.protectedStat=A}applyPreStatStageChange(A,s,R,n,I,a){return Ve(this.protectedStat)||n===this.protectedStat?(I.value=!0,!0):!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:protectStat",{pokemonNameWithAffix:ee(A),abilityName:s,statName:this.protectedStat?D.t(_E(this.protectedStat)):D.t("battle:stats")})}};L(q5,"ProtectStatAbAttr");let bR=q5;const j5=class j5 extends bi{constructor(...A){super((s,R,n)=>!0),this.effects=A}applyPostAttackAfterMoveTypeCheck(A,s,R,n,I,a,r){return this.effects.indexOf(r[0])>-1&&!n.isFainted()?R?n.canAddTag(Y.CONFUSED):n.addTag(Y.CONFUSED,A.randSeedIntRange(2,5),I.id,n.id):!1}};L(j5,"ConfusionOnStatusEffectAbAttr");let IU=j5;const eW=class eW extends ot{applyPreSetStatus(A,s,R,n,I,a){return!1}};L(eW,"PreSetStatusAbAttr");let XP=eW;const tW=class tW extends XP{constructor(...A){super(),this.immuneEffects=A}applyPreSetStatus(A,s,R,n,I,a){return this.immuneEffects.length<1||this.immuneEffects.includes(n)?(I.value=!0,!0):!1}getTriggerMessage(A,s,...R){return this.immuneEffects.length?D.t("abilityTriggers:statusEffectImmunityWithName",{pokemonNameWithAffix:ee(A),abilityName:s,statusEffectName:Xb(R[0])}):D.t("abilityTriggers:statusEffectImmunity",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(tW,"PreSetStatusEffectImmunityAbAttr");let aU=tW;const AW=class AW extends aU{};L(AW,"StatusEffectImmunityAbAttr");let MR=AW;const EW=class EW extends aU{};L(EW,"UserFieldStatusEffectImmunityAbAttr");let uS=EW;const sW=class sW extends ot{applyPreApplyBattlerTag(A,s,R,n,I,a){return!1}};L(sW,"PreApplyBattlerTagAbAttr");let QP=sW;const RW=class RW extends QP{constructor(A){super(),this.immuneTagTypes=Array.isArray(A)?A:[A]}applyPreApplyBattlerTag(A,s,R,n,I,a){return this.immuneTagTypes.includes(n.tagType)?(I.value=!0,R||(this.battlerTag=n),!0):!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:battlerTagImmunity",{pokemonNameWithAffix:ee(A),abilityName:s,battlerTagName:this.battlerTag.getDescriptor()})}};L(RW,"PreApplyBattlerTagImmunityAbAttr");let rU=RW;const OW=class OW extends rU{};L(OW,"BattlerTagImmunityAbAttr");let Rn=OW;const nW=class nW extends rU{};L(nW,"UserFieldBattlerTagImmunityAbAttr");let Wr=nW;const iW=class iW extends ot{apply(A,s,R,n,I){return I[0].value=!0,!0}};L(iW,"BlockCritAbAttr");let DS=iW;const IW=class IW extends ot{apply(A,s,R,n,I){return I[0].value=!0,!0}};L(IW,"BonusCritAbAttr");let LU=IW;const aW=class aW extends ot{constructor(A){super(!0),this.multAmount=A}apply(A,s,R,n,I){const a=I[0];return a.value>1?(a.value*=this.multAmount,!0):!1}};L(aW,"MultCritAbAttr");let NU=aW;const rW=class rW extends ot{constructor(A,s){super(),this.condition=A}apply(A,s,R,n,I){const a=I[1],r=I[2];return this.condition(A,a,r)?(I[0].value=!0,!0):!1}};L(rW,"ConditionalCritAbAttr");let TU=rW;const LW=class LW extends ot{apply(A,s,R,n,I){return n.value=!0,!0}};L(LW,"BlockNonDirectDamageAbAttr");let DE=LW;const NW=class NW extends ot{constructor(...A){super(!1),this.effects=A}apply(A,s,R,n,I){return A.status&&this.effects.includes(A.status.effect)?(n.value=!0,!0):!1}};L(NW,"BlockStatusDamageAbAttr");let SU=NW;const TW=class TW extends ot{apply(A,s,R,n,I){return n.value=!0,!0}};L(TW,"BlockOneHitKOAbAttr");let oU=TW;const SW=class SW extends ot{constructor(A,s){super(!0),this.moveFunc=A,this.changeAmount=s}apply(A,s,R,n,I){return this.moveFunc(A,I[0])?(I[1].value+=this.changeAmount,!0):!1}};L(SW,"ChangeMovePriorityAbAttr");let _i=SW;const oW=class oW extends ot{};L(oW,"IgnoreContactAbAttr");let lU=oW;const lW=class lW extends ot{applyPreWeatherEffect(A,s,R,n,I,a){return!1}};L(lW,"PreWeatherEffectAbAttr");let CU=lW;const CW=class CW extends CU{};L(CW,"PreWeatherDamageAbAttr");let UU=CW;const UW=class UW extends UU{constructor(...A){super(),this.weatherTypes=A}applyPreWeatherEffect(A,s,R,n,I,a){return(!this.weatherTypes.length||this.weatherTypes.indexOf(n==null?void 0:n.weatherType)>-1)&&(I.value=!0),!0}};L(UW,"BlockWeatherDamageAttr");let li=UW;const uW=class uW extends CU{constructor(A){super(),this.affectsImmutable=!!A}applyPreWeatherEffect(A,s,R,n,I,a){return this.affectsImmutable||n.isImmutable()?(I.value=!0,!0):!1}};L(uW,"SuppressWeatherEffectAbAttr");let Ea=uW;function Al(){return E=>{if(!E.turnData)return!0;const A=E.turnData.attacksReceived[0];if(!A)return!0;const s=E.getOpponents().find(n=>n.id===A.sourceId);return s?!(ye[A.move].chance>=0&&s.hasAbility(O.SHEER_FORCE)):!0}}L(Al,"getSheerForceHitDisableAbCondition");function Bs(...E){return A=>{var R,n,I;if(!((R=A.scene)!=null&&R.arena)||(n=A.scene.arena.weather)!=null&&n.isEffectSuppressed(A.scene))return!1;const s=(I=A.scene.arena.weather)==null?void 0:I.weatherType;return!!s&&E.indexOf(s)>-1}}L(Bs,"getWeatherCondition");function gQ(){return E=>{for(const A of E.getOpponents())for(const s of A.moveset)if(s){if(s.getMove()instanceof B&&E.getAttackTypeEffectiveness(s.getMove().type,A,!0,void 0,s.getMove())>=2||s.getMove().hasAttr(vO))return!0;if(s.getMove().id===t.HIDDEN_POWER){const R=Math.floor(((A.ivs[g.HP]&1)+(A.ivs[g.ATK]&1)*2+(A.ivs[g.DEF]&1)*4+(A.ivs[g.SPD]&1)*8+(A.ivs[g.SPATK]&1)*16+(A.ivs[g.SPDEF]&1)*32)*15/63),n=[i.FIGHTING,i.FLYING,i.POISON,i.GROUND,i.ROCK,i.BUG,i.GHOST,i.STEEL,i.FIRE,i.WATER,i.GRASS,i.ELECTRIC,i.PSYCHIC,i.ICE,i.DRAGON,i.DARK][R];if(E.getAttackTypeEffectiveness(n,A)>=2)return!0}}return!1}}L(gQ,"getAnticipationCondition");function KQ(E){return A=>{var s;return!((s=A.battleData)!=null&&s.abilitiesApplied.includes(E))}}L(KQ,"getOncePerBattleCondition");const DW=class DW extends HE{constructor(){super(!0)}applyPostSummon(A,s,R,n){let I=0,a="",r=0;for(const S of A.getOpponents())for(const o of S.moveset)(o==null?void 0:o.getMove())instanceof ce?r=1:o!=null&&o.getMove().hasAttr(vO)?r=150:(o==null?void 0:o.getMove().id)===t.COUNTER||(o==null?void 0:o.getMove().id)===t.MIRROR_COAT||(o==null?void 0:o.getMove().id)===t.METAL_BURST?r=120:(o==null?void 0:o.getMove().power)===-1?r=80:r=(o==null?void 0:o.getMove().power)??0,r>I&&(I=r,a=(o==null?void 0:o.getName())??"");return R||A.scene.queueMessage(D.t("abilityTriggers:forewarn",{pokemonNameWithAffix:ee(A),moveName:a})),!0}};L(DW,"ForewarnAbAttr");let JP=DW;const MW=class MW extends HE{constructor(){super(!0)}applyPostSummon(A,s,R,n){if(!R)for(const I of A.getOpponents())A.scene.queueMessage(D.t("abilityTriggers:frisk",{pokemonNameWithAffix:ee(A),opponentName:I.name,opponentAbilityName:I.getAbility().name})),e8(I);return!0}};L(MW,"FriskAbAttr");let $P=MW;const hW=class hW extends ot{applyPostWeatherChange(A,s,R,n,I){return!1}};L(hW,"PostWeatherChangeAbAttr");let MS=hW;const cW=class cW extends MS{constructor(A,s){super(!1),this.ability=A,this.formRevertingWeathers=s}applyPostWeatherChange(A,s,R,n,I){var S;const a=A.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,r=A.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;if(a||r){if(R)return R;const o=(S=A.scene.arena.weather)==null?void 0:S.weatherType;return o&&this.formRevertingWeathers.includes(o)?A.scene.arena.triggerWeatherBasedFormChangesToNormal():A.scene.arena.triggerWeatherBasedFormChanges(),!0}return!1}};L(cW,"PostWeatherChangeFormChangeAbAttr");let uU=cW;const _W=class _W extends MS{constructor(A,s,...R){super(),this.tagType=A,this.turnCount=s,this.weatherTypes=R}applyPostWeatherChange(A,s,R,n,I){return console.log(this.weatherTypes.find(a=>n===a),se[n]),this.weatherTypes.find(a=>n===a)?R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount):!1}};L(_W,"PostWeatherChangeAddBattlerTagAttr");let DU=_W;const PW=class PW extends ot{constructor(...A){super(),this.weatherTypes=A}applyPostWeatherLapse(A,s,R,n,I){return!1}getCondition(){return Bs(...this.weatherTypes)}};L(PW,"PostWeatherLapseAbAttr");let hS=PW;const GW=class GW extends hS{constructor(A,...s){super(...s),this.healFactor=A}applyPostWeatherLapse(A,s,R,n,I){if(!A.isFullHp()){const a=A.scene,r=(s?A.getPassiveAbility():A.getAbility()).name;return R||a.unshiftPhase(new mE(a,A.getBattlerIndex(),Yt(A.getMaxHp()/(16/this.healFactor)),D.t("abilityTriggers:postWeatherLapseHeal",{pokemonNameWithAffix:ee(A),abilityName:r}),!0)),!0}return!1}};L(GW,"PostWeatherLapseHealAbAttr");let yL=GW;const HW=class HW extends hS{constructor(A,...s){super(...s),this.damageFactor=A}applyPostWeatherLapse(A,s,R,n,I){const a=A.scene;if(A.hasAbilityWithAttr(DE))return!1;if(!R){const r=(s?A.getPassiveAbility():A.getAbility()).name;a.queueMessage(D.t("abilityTriggers:postWeatherLapseDamage",{pokemonNameWithAffix:ee(A),abilityName:r})),A.damageAndUpdate(Yt(A.getMaxHp()/(16/this.damageFactor)),wt.OTHER)}return!0}};L(HW,"PostWeatherLapseDamageAbAttr");let MU=HW;const dW=class dW extends ot{applyPostTerrainChange(A,s,R,n,I){return!1}};L(dW,"PostTerrainChangeAbAttr");let hU=dW;const fW=class fW extends hU{constructor(A,s,...R){super(),this.tagType=A,this.turnCount=s,this.terrainTypes=R}applyPostTerrainChange(A,s,R,n,I){return this.terrainTypes.find(a=>a===n)?R?A.canAddTag(this.tagType):A.addTag(this.tagType,this.turnCount):!1}};L(fW,"PostTerrainChangeAddBattlerTagAttr");let zP=fW;function El(...E){return A=>{var R;const s=(R=A.scene.arena.terrain)==null?void 0:R.terrainType;return!!s&&E.indexOf(s)>-1}}L(El,"getTerrainCondition");const BW=class BW extends ot{applyPostTurn(A,s,R,n){return!1}};L(BW,"PostTurnAbAttr");let JO=BW;const gW=class gW extends JO{constructor(...A){super(!1),this.effects=A}applyPostTurn(A,s,R,n){if(A.status&&this.effects.includes(A.status.effect)&&!A.isFullHp()){if(!R){const I=A.scene,a=(s?A.getPassiveAbility():A.getAbility()).name;I.unshiftPhase(new mE(I,A.getBattlerIndex(),Yt(A.getMaxHp()/8),D.t("abilityTriggers:poisonHeal",{pokemonName:ee(A),abilityName:a}),!0))}return!0}return!1}};L(gW,"PostTurnStatusHealAbAttr");let qP=gW;const KW=class KW extends JO{constructor(A=!1){super(!0),this.allyTarget=A}applyPostTurn(A,s,R,n){var I,a;return this.allyTarget?this.target=A.getAlly():this.target=A,(I=this.target)!=null&&I.status?(R||(this.target.scene.queueMessage(EI((a=this.target.status)==null?void 0:a.effect,ee(this.target))),this.target.resetStatus(!1),this.target.updateInfo()),!0):!1}};L(KW,"PostTurnResetStatusAbAttr");let wL=KW;const mW=class mW extends JO{constructor(A,s){super(),this.itemType=A,this.procChance=s}applyPostTurn(A,s,R,n){const I=Phaser.Math.RND.realInRange(0,1);return Math.max(Math.min(this.procChance(A),1),0)<I?!1:this.itemType==="EATEN_BERRIES"?this.createEatenBerry(A,R):!1}createEatenBerry(A,s){const R=A.battleData.berriesEaten;if(!R.length)return!1;if(s)return!0;const n=_e(R.length),I=R[n],a=new gT(I);R.splice(n);const r=A.scene.findModifier(S=>S instanceof lE&&S.berryType===I,A.isPlayer());if(r)r.stackCount<r.getMaxHeldItemCount(A)&&r.stackCount++;else{const S=new lE(a,A.id,I,1);A.isPlayer()?A.scene.addModifier(S):A.scene.addEnemyModifier(S)}return A.scene.queueMessage(D.t("abilityTriggers:postTurnLootCreateEatenBerry",{pokemonNameWithAffix:ee(A),berryName:a.name})),A.scene.updateModifiers(A.isPlayer()),!0}};L(mW,"PostTurnLootAbAttr");let jP=mW;const FW=class FW extends JO{constructor(){super(!0)}applyPostTurn(A,s,R,n){const I=Vn.filter(r=>A.getStatStage(r)<6);let a=Vn.filter(r=>A.getStatStage(r)>-6);if(!R){if(I.length>0){const r=I[A.randSeedInt(I.length)];a=I.filter(S=>S!==r),A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[r],2))}if(a.length>0){const r=a[A.randSeedInt(a.length)];A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[r],-1))}}return!0}};L(FW,"MoodyAbAttr");let eG=FW;const pW=class pW extends JO{constructor(){super(!0)}applyPostTurn(A,s,R,n){if(!R)if(!A.turnData.switchedInThisTurn&&!A.turnData.failedRunAway)A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[g.SPD],1));else return!1;return!0}};L(pW,"SpeedBoostAbAttr");let tG=pW;const WW=class WW extends JO{constructor(A){super(!0),this.formFunc=A}applyPostTurn(A,s,R,n){return this.formFunc(A)!==A.formIndex?(R||A.scene.triggerPokemonFormChange(A,bt,!1),!0):!1}};L(WW,"PostTurnFormChangeAbAttr");let Hn=WW;const YW=class YW extends JO{applyPostTurn(A,s,R,n){var a;let I=!1;for(const r of A.getOpponents())(((a=r.status)==null?void 0:a.effect)===Re.SLEEP||r.hasAbility(O.COMATOSE))&&!r.hasAbilityWithAttr(DE)&&!r.switchOutStatus&&(R||(r.damageAndUpdate(Yt(r.getMaxHp()/8),wt.OTHER),A.scene.queueMessage(D.t("abilityTriggers:badDreams",{pokemonName:ee(r)}))),I=!0);return I}};L(YW,"PostTurnHurtIfSleepingAbAttr");let AG=YW;const yW=class yW extends JO{constructor(){super()}applyPostTurn(A,s,R,n){if(R)return!1;const I=A.scene.currentBattle.lastUsedPokeball;return I!==null&&A.isPlayer?(A.scene.pokeballCounts[I]++,A.scene.currentBattle.lastUsedPokeball=null,A.scene.queueMessage(D.t("abilityTriggers:fetchBall",{pokemonNameWithAffix:ee(A),pokeballName:Gl(I)})),!0):!1}};L(yW,"FetchBallAbAttr");let EG=yW;const wW=class wW extends ot{};L(wW,"PostBiomeChangeAbAttr");let cS=wW;const vW=class vW extends cS{constructor(A){super(),this.weatherType=A}apply(A,s,R,n,I){var a,r;return(a=A.scene.arena.weather)!=null&&a.isImmutable()?!1:R?((r=A.scene.arena.weather)==null?void 0:r.weatherType)!==this.weatherType:A.scene.arena.trySetWeather(this.weatherType,!0)}};L(vW,"PostBiomeChangeWeatherChangeAbAttr");let jO=vW;const VW=class VW extends cS{constructor(A){super(),this.terrainType=A}apply(A,s,R,n,I){var a;return R?((a=A.scene.arena.terrain)==null?void 0:a.terrainType)!==this.terrainType:A.scene.arena.trySetTerrain(this.terrainType,!0)}};L(VW,"PostBiomeChangeTerrainChangeAbAttr");let NI=VW;const xW=class xW extends ot{applyPostMoveUsed(A,s,R,n,I,a){return!1}};L(xW,"PostMoveUsedAbAttr");let cU=xW;const bW=class bW extends cU{applyPostMoveUsed(A,s,R,n,I,a){const r=[Y.FLYING,Y.UNDERWATER,Y.UNDERGROUND,Y.HIDDEN];if(R.getBattlerIndex()!==A.getBattlerIndex()&&!A.summonData.tags.some(S=>r.includes(S.tagType))){if(!I)if(s.getMove()instanceof B||s.getMove()instanceof ce){const S=this.getTarget(A,R,n);A.scene.unshiftPhase(new HA(A.scene,A,S,s,!0,!0))}else s.getMove()instanceof ze&&A.scene.unshiftPhase(new HA(A.scene,A,[A.getBattlerIndex()],s,!0,!0));return!0}return!1}getTarget(A,s,R){return A.isPlayer()?s.isPlayer()?R:[s.getBattlerIndex()]:s.isPlayer()?[s.getBattlerIndex()]:R}};L(bW,"PostDancingMoveAbAttr");let sG=bW;const kW=class kW extends ot{applyPostItemLost(A,s,R){return!1}};L(kW,"PostItemLostAbAttr");let kR=kW;const ZW=class ZW extends kR{constructor(A){super(!0),this.tagType=A}applyPostItemLost(A,s,R){return!A.getTag(this.tagType)&&!s?(A.addTag(this.tagType),!0):!1}};L(ZW,"PostItemLostApplyBattlerTagAbAttr");let RG=ZW;const XW=class XW extends ot{constructor(A){super(!0),this.multiplier=A}apply(A,s,R,n,I){return I[0].value*=this.multiplier,!0}};L(XW,"StatStageChangeMultiplierAbAttr");let _S=XW;const QW=class QW extends ot{apply(A,s,R,n,I){return R||A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,I[0],I[1],!0,!1,!1)),!0}};L(QW,"StatStageChangeCopyAbAttr");let _U=QW;const JW=class JW extends ot{constructor(){super(!1)}apply(A,s,R,n,I){return n.value=!0,!0}};L(JW,"BypassBurnDamageReductionAbAttr");let PU=JW;const $W=class $W extends ot{constructor(A){super(!1),this.multiplier=A}apply(A,s,R,n,I){return I[0].value=Yt(I[0].value*this.multiplier),!0}};L($W,"ReduceBurnDamageAbAttr");let GU=$W;const zW=class zW extends ot{apply(A,s,R,n,I){return I[0].value*=2,!0}};L(zW,"DoubleBerryEffectAbAttr");let Ir=zW;const qW=class qW extends ot{apply(A,s,R,n,I){return n.value=!0,!0}};L(qW,"PreventBerryUseAbAttr");let ar=qW;const jW=class jW extends ot{constructor(A){super(),this.healPercent=Math.max(Math.min(A,1),0)}apply(A,s,R,...n){const{name:I}=s?A.getPassiveAbility():A.getAbility();return R||A.scene.unshiftPhase(new mE(A.scene,A.getBattlerIndex(),Yt(A.getMaxHp()*this.healPercent),D.t("abilityTriggers:healFromBerryUse",{pokemonNameWithAffix:ee(A),abilityName:I}),!0)),!0}};L(jW,"HealFromBerryUseAbAttr");let PS=jW;const eY=class eY extends ot{apply(A,s,R,n,I){return I[0].value=256,!0}};L(eY,"RunSuccessAbAttr");let HU=eY;const tY=class tY extends ot{constructor(A){super(!1),this.arenaTrapCondition=A}applyCheckTrapped(A,s,R,n,I,a){return!1}};L(tY,"CheckTrappedAbAttr");let dU=tY;const AY=class AY extends dU{applyCheckTrapped(A,s,R,n,I,a){return this.arenaTrapCondition(A,I)?I.getTypes(!0).includes(i.GHOST)||I.getTypes(!0).includes(i.STELLAR)&&I.getTypes().includes(i.GHOST)||I.hasAbility(O.RUN_AWAY)?(n.value=!1,!1):(n.value=!0,!0):(n.value=!1,!1)}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:arenaTrap",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(AY,"ArenaTrapAbAttr");let vL=AY;const EY=class EY extends ot{apply(A,s,R,n,I){return I[0].value=0,!0}};L(EY,"MaxMultiHitAbAttr");let GS=EY;const sY=class sY extends ot{constructor(){super(!0)}applyPostBattle(A,s,R,n){return!1}};L(sY,"PostBattleAbAttr");let HS=sY;const RY=class RY extends HS{applyPostBattle(A,s,R,n){const I=A.scene.currentBattle.postBattleLoot;if(!R&&I.length&&n[0]){const a=JA(I);if(A.scene.tryTransferHeldItemModifier(a,A,!0,1,!0,void 0,!1))return I.splice(I.indexOf(a),1),A.scene.queueMessage(D.t("abilityTriggers:postBattleLoot",{pokemonNameWithAffix:ee(A),itemName:a.type.name})),!0}return!1}};L(RY,"PostBattleLootAbAttr");let OG=RY;const OY=class OY extends ot{applyPostFaint(A,s,R,n,I,a,...r){return!1}};L(OY,"PostFaintAbAttr");let ki=OY;const nY=class nY extends ki{applyPostFaint(A,s,R,n,I,a,r){return t8(A.scene).length<1?!1:(R||A.scene.arena.triggerWeatherBasedFormChanges(),!0)}};L(nY,"PostFaintUnsuppressedWeatherFormChangeAbAttr");let fU=nY;const iY=class iY extends ki{applyPostFaint(A,s,R,n,I,a,...r){var l;const S=(l=A.scene.arena.weather)==null?void 0:l.weatherType;let o=!1;switch(S){case se.HARSH_SUN:A.hasAbility(O.DESOLATE_LAND)&&A.scene.getField(!0).filter(C=>C.hasAbility(O.DESOLATE_LAND)).length===0&&(o=!0);break;case se.HEAVY_RAIN:A.hasAbility(O.PRIMORDIAL_SEA)&&A.scene.getField(!0).filter(C=>C.hasAbility(O.PRIMORDIAL_SEA)).length===0&&(o=!0);break;case se.STRONG_WINDS:A.hasAbility(O.DELTA_STREAM)&&A.scene.getField(!0).filter(C=>C.hasAbility(O.DELTA_STREAM)).length===0&&(o=!0);break}return R?o:o?(A.scene.arena.trySetWeather(se.NONE,!1),!0):!1}};L(iY,"PostFaintClearWeatherAbAttr");let VL=iY;const IY=class IY extends ki{constructor(A){super(),this.damageRatio=A}applyPostFaint(A,s,R,n,I,a,...r){if(I!==void 0&&n!==void 0&&I.checkFlag(tA.MAKES_CONTACT,n,A)){const S=new Lt(!1);return A.scene.getField(!0).map(o=>Ct(TS,o,S,R)),S.value||n.hasAbilityWithAttr(DE)?!1:(R||(n.damageAndUpdate(Yt(n.getMaxHp()*(1/this.damageRatio)),wt.OTHER),n.turnData.damageTaken+=Yt(n.getMaxHp()*(1/this.damageRatio))),!0)}return!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:postFaintContactDamage",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(IY,"PostFaintContactDamageAbAttr");let nG=IY;const aY=class aY extends ki{constructor(){super()}applyPostFaint(A,s,R,n,I,a,...r){if(I!==void 0&&n!==void 0&&!R){const S=A.turnData.attacksReceived[0].damage;n.damageAndUpdate(S,wt.OTHER),n.turnData.damageTaken+=S}return!0}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:postFaintHpDamage",{pokemonNameWithAffix:ee(A),abilityName:s})}};L(aY,"PostFaintHPDamageAbAttr");let iG=aY;const rY=class rY extends ot{apply(A,s,R,n,I){if(this.canRedirect(I[0])){const a=I[1],r=A.getBattlerIndex();if(a.value!==r)return a.value=r,!0}return!1}canRedirect(A){const s=ye[A];return!![JE.NEAR_OTHER,JE.OTHER].find(R=>s.moveTarget===R)}};L(rY,"RedirectMoveAbAttr");let BU=rY;const LY=class LY extends BU{constructor(A){super(),this.type=A}canRedirect(A){return super.canRedirect(A)&&ye[A].type===this.type}};L(LY,"RedirectTypeMoveAbAttr");let gU=LY;const NY=class NY extends ot{};L(NY,"BlockRedirectAbAttr");let Yr=NY;const TY=class TY extends ot{constructor(A){super(!0),this.statusEffect=A}apply(A,s,R,n,I){return I[1]instanceof Rt&&I[0]===this.statusEffect?(I[1].value-=1,!0):!1}};L(TY,"ReduceStatusEffectDurationAbAttr");let KU=TY;const SY=class SY extends ot{constructor(){super(!0)}};L(SY,"FlinchEffectAbAttr");let mU=SY;const oY=class oY extends mU{constructor(A,s){super(),this.stats=Array.isArray(A)?A:[A],this.stages=s}apply(A,s,R,n,I){return R||A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,this.stats,this.stages)),!0}};L(oY,"FlinchStatStageChangeAbAttr");let IG=oY;const lY=class lY extends ot{};L(lY,"IncreasePpAbAttr");let FU=lY;const CY=class CY extends ot{apply(A,s,R,n,I){return n.value=!0,!0}};L(CY,"ForceSwitchOutImmunityAbAttr");let Zi=CY;const UY=class UY extends ot{constructor(){super()}apply(A,s,R,n,I){const a=A.getHpRatio();return I[0].value<a?(I[0].value*=2,I[0].value>=a):!1}};L(UY,"ReduceBerryUseThresholdAbAttr");let fI=UY;const uY=class uY extends ot{constructor(A){super(),this.multiplier=A}apply(A,s,R,n,I){return I[0].value*=this.multiplier,!0}};L(uY,"WeightMultiplierAbAttr");let dS=uY;const DY=class DY extends ot{constructor(){super(!1)}apply(A,s,R,n,I){return I[0].setNature(A.getNature()),!0}};L(DY,"SyncEncounterNatureAbAttr");let pU=DY;const MY=class MY extends ot{constructor(A){super(!1),this.moveIgnoreFunc=A||((s,R)=>!0)}apply(A,s,R,n,I){return this.moveIgnoreFunc(A,I[0])?(n.value=!0,!0):!1}};L(MY,"MoveAbilityBypassAbAttr");let fi=MY;const bD=class bD extends ot{constructor(){super(!1)}apply(A,s,R,n,I){const a=I[0];return!a.hasAttr(rE)&&!a.hasAttr(bD)?(n.value=!0,!0):!1}};L(bD,"SuppressFieldAbilitiesAbAttr");let Pi=bD;const hY=class hY extends ot{};L(hY,"AlwaysHitAbAttr");let fS=hY;const cY=class cY extends ot{};L(cY,"IgnoreProtectOnContactAbAttr");let WU=cY;const _Y=class _Y extends ot{apply(A,s,R,n,I){const a=I[0];return I[0]instanceof Lt?(a.value=!0,!0):!1}};L(_Y,"InfiltratorAbAttr");let sa=_Y;const PY=class PY extends ot{constructor(){super(!1)}};L(PY,"UncopiableAbilityAbAttr");let sA=PY;const GY=class GY extends ot{constructor(){super(!1)}};L(GY,"UnsuppressableAbilityAbAttr");let rE=GY;const HY=class HY extends ot{constructor(){super(!1)}};L(HY,"UnswappableAbilityAbAttr");let uA=HY;const dY=class dY extends ot{constructor(){super(!1)}};L(dY,"NoTransformAbilityAbAttr");let tR=dY;const fY=class fY extends ot{constructor(){super(!1)}};L(fY,"NoFusionAbilityAbAttr");let ss=fY;const BY=class BY extends ot{constructor(A,s){super(!0),this.defenderType=A,this.allowedMoveTypes=s}apply(A,s,R,n,I){return this.defenderType===I[1]&&this.allowedMoveTypes.includes(I[0])?(n.value=!0,!0):!1}};L(BY,"IgnoreTypeImmunityAbAttr");let yr=BY;const gY=class gY extends ot{constructor(A,s){super(!0),this.statusEffect=A,this.defenderType=s}apply(A,s,R,n,I){return this.statusEffect.includes(I[0])&&this.defenderType.includes(I[1])?(n.value=!0,!0):!1}};L(gY,"IgnoreTypeStatusEffectImmunityAbAttr");let YU=gY;const KY=class KY extends HS{constructor(){super()}applyPostBattle(A,s,R,n){return!R&&n[0]?(A.scene.currentBattle.moneyScattered+=A.scene.getWaveMoneyAmount(.2),!0):!1}};L(KY,"MoneyAbAttr");let aG=KY;const mY=class mY extends dI{constructor(A){super([g.ATK],1,!0,!1),this.tagType=A}applyPostSummon(A,s,R,n){const I=A.isPlayer()?St.PLAYER:St.ENEMY;return A.scene.arena.getTagOnSide(this.tagType,I)?super.applyPostSummon(A,s,R,n):!1}};L(mY,"PostSummonStatStageChangeOnArenaAbAttr");let rG=mY;const FY=class FY extends sR{constructor(A,s,R,n,I){super(A,s),this.multiplier=s,this.tagType=R,this.recoilDamageFunc=I,this.triggerMessageFunc=n}applyPreDefend(A,s,R,n,I,a,r){return this.condition(A,n,I)&&!I.hitsSubstitute(n,A)?(R||(r[0].value=this.multiplier,A.removeTag(this.tagType),this.recoilDamageFunc&&A.damageAndUpdate(this.recoilDamageFunc(A),wt.OTHER,!1,!1,!0,!0)),!0):!1}getTriggerMessage(A,s,...R){return this.triggerMessageFunc(A,s)}};L(FY,"FormBlockDamageAbAttr");let yU=FY;const pY=class pY extends ot{constructor(A){super(!0),this.chance=A}apply(A,s,R,n,I){var r;if(R)return!1;const a=I[0];if(!a.value&&A.randSeedInt(100)<this.chance){const S=A.scene.currentBattle.turnCommands[A.getBattlerIndex()],o=(S==null?void 0:S.command)===NA.FIGHT,l=(r=S==null?void 0:S.move)!=null&&r.move?ye[S.move.move]:null,C=(l==null?void 0:l.category)===Mt.PHYSICAL||(l==null?void 0:l.category)===Mt.SPECIAL;if(o&&C)return a.value=!0,!0}return!1}getTriggerMessage(A,s,...R){return D.t("abilityTriggers:quickDraw",{pokemonName:ee(A)})}};L(pY,"BypassSpeedChanceAbAttr");let wU=pY;const WY=class WY extends ot{constructor(A){super(!0),this.condition=A}apply(A,s,R,n,I){var C;const a=I[0],r=I[1],S=A.scene.currentBattle.turnCommands[A.getBattlerIndex()],o=(S==null?void 0:S.command)===NA.FIGHT,l=(C=S==null?void 0:S.move)!=null&&C.move?ye[S.move.move]:null;return this.condition(A,l)&&o?(a.value=!1,r.value=!1,!1):!0}};L(WY,"PreventBypassSpeedChanceAbAttr");let vU=WY;const YY=class YY extends HE{constructor(){super(!0)}apply(A,s,R,n,I){if(A.isTerastallized())return!1;const a=A.scene.arena.getTerrainType(),r=this.determineTypeChange(A,a);return r.length!==0&&(A.summonData.addedType&&r.includes(A.summonData.addedType)&&(A.summonData.addedType=null),A.summonData.types=r,A.updateInfo()),!0}determineTypeChange(A,s){const R=[];switch(s){case Nt.ELECTRIC:R.push(i.ELECTRIC);break;case Nt.MISTY:R.push(i.FAIRY);break;case Nt.GRASSY:R.push(i.GRASS);break;case Nt.PSYCHIC:R.push(i.PSYCHIC);break;default:A.getTypes(!1,!1,!0).forEach(n=>{R.push(n)});break}return R}applyPostSummon(A,s,R,n){return A.scene.arena.getTerrainType()!==Nt.NONE?this.apply(A,s,R,new Lt(!1),[]):!1}getTriggerMessage(A,s,...R){const n=A.scene.arena.getTerrainType(),I=ee(A);if(n===Nt.NONE)return D.t("abilityTriggers:pokemonTypeChangeRevert",{pokemonNameWithAffix:I});{const a=D.t(`pokemonInfo:Type.${i[this.determineTypeChange(A,n)[0]]}`);return D.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:I,moveType:a})}}};L(YY,"TerrainEventTypeChangeAbAttr");let VU=YY;async function RE(E,A,s,R,n=!1,I=!1,a=[]){for(const r of[!1,!0]){if(!(A!=null&&A.canApplyAbility(r))||r&&A.getPassiveAbility().id===A.getAbility().id)continue;const S=r?A.getPassiveAbility():A.getAbility();for(const o of S.getAttrs(E)){const l=o.getCondition();if(l&&!l(A))continue;A.scene.setPhaseQueueSplice();let C=s(o,r);if(C instanceof Promise&&(C=await C),C){A.summonData&&!A.summonData.abilitiesApplied.includes(S.id)&&A.summonData.abilitiesApplied.push(S.id),A.battleData&&!I&&!A.battleData.abilitiesApplied.includes(S.id)&&A.battleData.abilitiesApplied.push(S.id),o.showAbility&&!I&&(n?A.scene.abilityBar.showAbility(A,r):U1(A,r));const M=o.getTriggerMessage(A,S.name,R);M&&(I||A.scene.queueMessage(M)),a.push(M)}}A.scene.clearPhaseQueueSplice()}}L(RE,"applyAbAttrsInternal");const yY=class yY{constructor(A){this.switchType=A}switchOutLogic(A){var R;const s=A;if(s instanceof wE){if(s.scene.getPlayerParty().filter(n=>n.isAllowedInBattle()&&!n.isOnField()).length<1)return!1;if(s.hp>0)return s.leaveField(this.switchType===aA.SWITCH),A.scene.prependToPhase(new Yi(A.scene,this.switchType,s.getFieldIndex(),!0,!0),nO),!0}else if(A.scene.currentBattle.battleType!==ht.WILD){if(s.scene.getEnemyParty().filter(n=>n.isAllowedInBattle()&&!n.isOnField()).length<1)return!1;if(s.hp>0)return s.leaveField(this.switchType===aA.SWITCH),A.scene.prependToPhase(new aR(A.scene,this.switchType,s.getFieldIndex(),A.scene.currentBattle.trainer?A.scene.currentBattle.trainer.getNextSummonIndex(s.trainerSlot):0,!1,!1),nO),!0}else{if(!A.scene.currentBattle.waveIndex||A.scene.currentBattle.waveIndex%10===0)return!1;if(s.hp>0&&(s.leaveField(!1),A.scene.queueMessage(D.t("moveTriggers:fled",{pokemonName:ee(s)}),null,!0,500),s.scene.currentBattle.double)){const n=s.getAlly();s.scene.redirectPokemonMoves(s,n)}(R=s.getAlly())!=null&&R.isActive(!0)||(A.scene.clearEnemyHeldItemModifiers(),s.hp&&(A.scene.pushPhase(new yi(A.scene,!1)),A.scene.pushPhase(new JI(A.scene))))}return!1}getSwitchOutCondition(A,s){var a;const R=A,n=R instanceof wE;if(n){const r=new Lt(!1);return Ct(Zi,s,r),!r.value}if(!n&&A.scene.currentBattle.battleType===ht.WILD&&!A.scene.currentBattle.waveIndex&&A.scene.currentBattle.waveIndex%10===0||!n&&A.scene.currentBattle.isBattleMysteryEncounter()&&!((a=A.scene.currentBattle.mysteryEncounter)!=null&&a.fleeAllowed))return!1;const I=n?A.scene.getPlayerParty():A.scene.getEnemyParty();return!n&&A.scene.currentBattle.battleType===ht.WILD||I.filter(r=>r.isAllowedInBattle()&&(n||r.trainerSlot===R.trainerSlot)).length>A.scene.currentBattle.getBattlerCount()}getFailedText(A){const s=new Lt(!1);return Ct(Zi,A,s),s.value?D.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:ee(A)}):null}};L(yY,"ForceSwitchOutHelper");let LG=yY;function mQ(E){const A=E.getHeldItems().find(s=>s instanceof ji);return A?Yt(E.turnData.totalDamageDealt/8)*A.stackCount:0}L(mQ,"calculateShellBellRecovery");const wY=class wY extends ot{applyPostDamage(A,s,R,n,I,a){return!1}};L(wY,"PostDamageAbAttr");let wr=wY;const vY=class vY extends wr{constructor(A=.5){super(),this.helper=new LG(aA.SWITCH),this.hpRatio=A}applyPostDamage(A,s,R,n,I,a){const r=A.getMoveHistory(),S=[t.BELLY_DRUM,t.SUBSTITUTE,t.CURSE,t.PAIN_SPLIT];if(r.length>0){const l=r[r.length-1];if(S.includes(l.move))return!1}const o=[t.DRAGON_TAIL,t.CIRCLE_THROW];if(a){const l=a.getMoveHistory();if(l.length>0){const C=l[l.length-1];if(o.includes(C.move)||C.move===t.SKY_DROP&&C.result===CA.OTHER)return!1;if(ye[C.move].chance>=0&&a.hasAbility(O.SHEER_FORCE))return!1;if(a.turnData.hitsLeft>1)return!1;a.turnData.hitCount>1&&(s=A.turnData.damageTaken)}}if(A.hp+s>=A.getMaxHp()*this.hpRatio){const l=mQ(A);if(A.hp-l<A.getMaxHp()*this.hpRatio){for(const C of A.getOpponents())if(!this.helper.getSwitchOutCondition(A,C))return!1;return this.helper.switchOutLogic(A)}else return!1}else return!1}getFailedText(A,s,R,n){return this.helper.getFailedText(s)}};L(vY,"PostDamageForceSwitchAbAttr");let Ra=vY;function Ct(E,A,s,R=!1,...n){return RE(E,A,(I,a)=>I.apply(A,a,R,s,n),n,!1,R)}L(Ct,"applyAbAttrs");function q6(E,A,s=!1,...R){return RE(E,A,(n,I)=>n.applyPostBattleInit(A,I,s,R),R,!1,s)}L(q6,"applyPostBattleInitAbAttrs");function dn(E,A,s,R,n,I=!1,...a){return RE(E,A,(r,S)=>r.applyPreDefend(A,S,I,s,R,n,a),a,!1,I)}L(dn,"applyPreDefendAbAttrs");function FQ(E,A,s,R,n,I=!1,...a){return RE(E,A,(r,S)=>r.applyPostDefend(A,S,I,s,R,n,a),a,!1,I)}L(FQ,"applyPostDefendAbAttrs");function pQ(E,A,s,R,n,I=!1,...a){return RE(E,A,(r,S)=>r.applyPostMoveUsed(A,s,R,n,I,a),a,!1,I)}L(pQ,"applyPostMoveUsedAbAttrs");function Hh(E,A,s,R,n=!1,...I){return RE(E,A,(a,r)=>a.applyStatStage(A,r,n,s,R,I),I)}L(Hh,"applyStatMultiplierAbAttrs");function WQ(E,A,s,R,n=!1,...I){return RE(E,A,(a,r)=>a.applyPostSetStatus(A,R,r,s,n,I),I,!1,n)}L(WQ,"applyPostSetStatusAbAttrs");function C1(E,A,s,R,n=!1,I,a){return RE(E,A,(r,S)=>r.applyPostDamage(A,s,S,n,I,a),I)}L(C1,"applyPostDamageAbAttrs");function YQ(E,A,s,R,n,I,a=!1,...r){return RE(E,A,(S,o)=>S.applyFieldStat(A,o,a,s,R,n,I,r),r)}L(YQ,"applyFieldStatMultiplierAbAttrs");function wO(E,A,s,R,n=!1,...I){return RE(E,A,(a,r)=>a.applyPreAttack(A,r,n,s,R,I),I,!1,n)}L(wO,"applyPreAttackAbAttrs");function j6(E,A,s,R,n,I=!1,...a){return RE(E,A,(r,S)=>r.applyPostAttack(A,S,I,s,R,n,a),a,!1,I)}L(j6,"applyPostAttackAbAttrs");function yQ(E,A,s,R=!1,...n){return RE(E,A,(I,a)=>I.applyPostKnockOut(A,a,R,s,n),n,!1,R)}L(yQ,"applyPostKnockOutAbAttrs");function wQ(E,A,s=!1,...R){return RE(E,A,(n,I)=>n.applyPostVictory(A,I,s,R),R,!1,s)}L(wQ,"applyPostVictoryAbAttrs");function vQ(E,A,s=!1,...R){return RE(E,A,(n,I)=>n.applyPostSummon(A,I,s,R),R,!1,s)}L(vQ,"applyPostSummonAbAttrs");function VQ(E,A,s=!1,...R){return RE(E,A,(n,I)=>n.applyPreSwitchOut(A,I,s,R),R,!0,s)}L(VQ,"applyPreSwitchOutAbAttrs");function xQ(E,A,s,R,n=!1,...I){return RE(E,A,(a,r)=>a.applyPreStatStageChange(A,r,n,s,R,I),I,!1,n)}L(xQ,"applyPreStatStageChangeAbAttrs");function bQ(E,A,s,R,n,I=!1,...a){return RE(E,A,(r,S)=>r.applyPostStatStageChange(A,I,s,R,n,a),a,!1,I)}L(bQ,"applyPostStatStageChangeAbAttrs");function Bb(E,A,s,R,n=!1,...I){return RE(E,A,(a,r)=>a.applyPreSetStatus(A,r,n,s,R,I),I,!1,n)}L(Bb,"applyPreSetStatusAbAttrs");function sl(E,A,s,R,n=!1,...I){return RE(E,A,(a,r)=>a.applyPreApplyBattlerTag(A,r,n,s,R,I),I,!1,n)}L(sl,"applyPreApplyBattlerTagAbAttrs");function gb(E,A,s,R,n=!1,...I){return RE(E,A,(a,r)=>a.applyPreWeatherEffect(A,r,n,s,R,I),I,!0,n)}L(gb,"applyPreWeatherEffectAbAttrs");function kQ(E,A,s=!1,...R){return RE(E,A,(n,I)=>n.applyPostTurn(A,I,s,R),R,!1,s)}L(kQ,"applyPostTurnAbAttrs");function ZQ(E,A,s,R=!1,...n){return RE(E,A,(I,a)=>I.applyPostWeatherChange(A,a,R,s,n),n,!1,R)}L(ZQ,"applyPostWeatherChangeAbAttrs");function XQ(E,A,s,R=!1,...n){return RE(E,A,(I,a)=>I.applyPostWeatherLapse(A,a,R,s,n),n,!1,R)}L(XQ,"applyPostWeatherLapseAbAttrs");function QQ(E,A,s,R=!1,...n){return RE(E,A,(I,a)=>I.applyPostTerrainChange(A,a,R,s,n),n,!1,R)}L(QQ,"applyPostTerrainChangeAbAttrs");function JQ(E,A,s,R,n,I=!1,...a){return RE(E,A,(r,S)=>r.applyCheckTrapped(A,S,I,s,R,a),a,!1,I,n)}L(JQ,"applyCheckTrappedAbAttrs");function $Q(E,A,s=!1,...R){return RE(E,A,(n,I)=>n.applyPostBattle(A,I,s,R),R,!1,s)}L($Q,"applyPostBattleAbAttrs");function Kb(E,A,s,R,n,I=!1,...a){return RE(E,A,(r,S)=>r.applyPostFaint(A,S,I,s,R,n,a),a,!1,I)}L(Kb,"applyPostFaintAbAttrs");function On(E,A,s=!1,...R){return RE(E,A,(n,I)=>n.applyPostItemLost(A,s,R),R)}L(On,"applyPostItemLostAbAttrs");function U1(E,A){E.scene.unshiftPhase(new bn(E.scene,E.id,A)),E.scene.clearPhaseQueueSplice()}L(U1,"queueShowAbility");function e8(E){E.battleData&&(E.battleData.abilityRevealed=!0)}L(e8,"setAbilityRevealed");function t8(E){return E.getField(!0).filter(A=>A.hasAbility(O.FORECAST)&&A.species.speciesId===e.CASTFORM||A.hasAbility(O.FLOWER_GIFT)&&A.species.speciesId===e.CHERRIM)}L(t8,"getPokemonWithWeatherBasedForms");const LE=[new Ee(O.NONE,3)];function zQ(){LE.push(new Ee(O.STENCH,3).attr(fP,!1,(E,A,s)=>!s.hasAttr(LA)&&!s.hitsSubstitute(E,A)?10:0,Y.FLINCHED),new Ee(O.DRIZZLE,3).attr(qO,se.RAIN).attr(jO,se.RAIN),new Ee(O.SPEED_BOOST,3).attr(tG),new Ee(O.BATTLE_ARMOR,3).attr(DS).ignorable(),new Ee(O.STURDY,3).attr(xC).attr(oU).ignorable(),new Ee(O.DAMP,3).attr(TS).ignorable(),new Ee(O.LIMBER,3).attr(MR,Re.PARALYSIS).ignorable(),new Ee(O.SAND_VEIL,3).attr(fA,g.EVA,1.2).attr(li,se.SANDSTORM).condition(Bs(se.SANDSTORM)).ignorable(),new Ee(O.STATIC,3).attr(ir,30,Re.PARALYSIS).bypassFaint(),new Ee(O.VOLT_ABSORB,3).attr(va,i.ELECTRIC).ignorable(),new Ee(O.WATER_ABSORB,3).attr(va,i.WATER).ignorable(),new Ee(O.OBLIVIOUS,3).attr(Rn,[Y.INFATUATED,Y.TAUNT]).attr(HI).ignorable(),new Ee(O.CLOUD_NINE,3).attr(Ea,!0).attr(OU,D.t("abilityTriggers:weatherEffectDisappeared")).attr(nU).attr(fU).bypassFaint(),new Ee(O.COMPOUND_EYES,3).attr(fA,g.ACC,1.3),new Ee(O.INSOMNIA,3).attr(MR,Re.SLEEP).attr(Rn,Y.DROWSY).ignorable(),new Ee(O.COLOR_CHANGE,3).attr(lP).condition(Al()),new Ee(O.IMMUNITY,3).attr(MR,Re.POISON,Re.TOXIC).ignorable(),new Ee(O.FLASH_FIRE,3).attr(NP,i.FIRE,Y.FIRE_BOOST,1).ignorable(),new Ee(O.SHIELD_DUST,3).attr(xi).ignorable(),new Ee(O.OWN_TEMPO,3).attr(Rn,Y.CONFUSED).attr(HI).ignorable(),new Ee(O.SUCTION_CUPS,3).attr(Zi).ignorable(),new Ee(O.INTIMIDATE,3).attr(dI,[g.ATK],-1,!1,!0),new Ee(O.SHADOW_TAG,3).attr(vL,(E,A)=>!A.hasAbility(O.SHADOW_TAG)),new Ee(O.ROUGH_SKIN,3).attr($C,8).bypassFaint(),new Ee(O.WONDER_GUARD,3).attr(TP).attr(sA).attr(uA).ignorable(),new Ee(O.LEVITATE,3).attr(LP,i.GROUND,E=>!E.getTag(FS)&&!E.scene.arena.getTag(ge.GRAVITY)).ignorable(),new Ee(O.EFFECT_SPORE,3).attr(UP),new Ee(O.SYNCHRONIZE,3).attr(pU).attr(gP),new Ee(O.CLEAR_BODY,3).attr(bR).ignorable(),new Ee(O.NATURAL_CURE,3).attr(xP),new Ee(O.LIGHTNING_ROD,3).attr(gU,i.ELECTRIC).attr(rI,i.ELECTRIC,g.SPATK,1).ignorable(),new Ee(O.SERENE_GRACE,3).attr(LS,2),new Ee(O.SWIFT_SWIM,3).attr(fA,g.SPD,2).condition(Bs(se.RAIN,se.HEAVY_RAIN)),new Ee(O.CHLOROPHYLL,3).attr(fA,g.SPD,2).condition(Bs(se.SUNNY,se.HARSH_SUN)),new Ee(O.ILLUMINATE,3).attr(bR,g.ACC).attr(_I).attr(Ki,[g.EVA]).ignorable(),new Ee(O.TRACE,3).attr(yP).attr(sA),new Ee(O.HUGE_POWER,3).attr(fA,g.ATK,2),new Ee(O.POISON_POINT,3).attr(ir,30,Re.POISON).bypassFaint(),new Ee(O.INNER_FOCUS,3).attr(Rn,Y.FLINCHED).attr(HI).ignorable(),new Ee(O.MAGMA_ARMOR,3).attr(MR,Re.FREEZE).ignorable(),new Ee(O.WATER_VEIL,3).attr(MR,Re.BURN).ignorable(),new Ee(O.MAGNET_PULL,3).attr(vL,(E,A)=>!!(A.getTypes(!0).includes(i.STEEL)||A.getTypes(!0).includes(i.STELLAR)&&A.getTypes().includes(i.STEEL))),new Ee(O.SOUNDPROOF,3).attr(Kn,(E,A,s)=>E!==A&&s.hasFlag(tA.SOUND_BASED)).ignorable(),new Ee(O.RAIN_DISH,3).attr(yL,1,se.RAIN,se.HEAVY_RAIN),new Ee(O.SAND_STREAM,3).attr(qO,se.SANDSTORM).attr(jO,se.SANDSTORM),new Ee(O.PRESSURE,3).attr(FU).attr(gs,E=>D.t("abilityTriggers:postSummonPressure",{pokemonNameWithAffix:ee(E)})),new Ee(O.THICK_FAT,3).attr(Ti,i.FIRE,.5).attr(Ti,i.ICE,.5).ignorable(),new Ee(O.EARLY_BIRD,3).attr(KU,Re.SLEEP),new Ee(O.FLAME_BODY,3).attr(ir,30,Re.BURN).bypassFaint(),new Ee(O.RUN_AWAY,3).attr(HU),new Ee(O.KEEN_EYE,3).attr(bR,g.ACC).ignorable(),new Ee(O.HYPER_CUTTER,3).attr(bR,g.ATK).ignorable(),new Ee(O.PICKUP,3).attr(OG),new Ee(O.TRUANT,3).attr(Gn,Y.TRUANT,1,!1),new Ee(O.HUSTLE,3).attr(fA,g.ATK,1.5).attr(fA,g.ACC,.8,(E,A,s)=>s.category===Mt.PHYSICAL),new Ee(O.CUTE_CHARM,3).attr(uP,30,Y.INFATUATED),new Ee(O.PLUS,3).conditionalAttr(E=>E.scene.currentBattle.double&&[O.PLUS,O.MINUS].some(A=>E.getAlly().hasAbility(A)),fA,g.SPATK,1.5),new Ee(O.MINUS,3).conditionalAttr(E=>E.scene.currentBattle.double&&[O.PLUS,O.MINUS].some(A=>E.getAlly().hasAbility(A)),fA,g.SPATK,1.5),new Ee(O.FORECAST,3).attr(sA).attr(ss).attr(iU,O.FORECAST).attr(uU,O.FORECAST,[se.NONE,se.SANDSTORM,se.STRONG_WINDS,se.FOG]),new Ee(O.STICKY_HOLD,3).attr(Fr).bypassFaint().ignorable(),new Ee(O.SHED_SKIN,3).conditionalAttr(E=>!_e(3),wL),new Ee(O.GUTS,3).attr(PU).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),fA,g.ATK,1.5),new Ee(O.MARVEL_SCALE,3).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),fA,g.DEF,1.5).ignorable(),new Ee(O.LIQUID_OOZE,3).attr(rS),new Ee(O.OVERGROW,3).attr(Va,i.GRASS),new Ee(O.BLAZE,3).attr(Va,i.FIRE),new Ee(O.TORRENT,3).attr(Va,i.WATER),new Ee(O.SWARM,3).attr(Va,i.BUG),new Ee(O.ROCK_HEAD,3).attr(VC),new Ee(O.DROUGHT,3).attr(qO,se.SUNNY).attr(jO,se.SUNNY),new Ee(O.ARENA_TRAP,3).attr(vL,(E,A)=>!!A.isGrounded()).attr(_I),new Ee(O.VITAL_SPIRIT,3).attr(MR,Re.SLEEP).attr(Rn,Y.DROWSY).ignorable(),new Ee(O.WHITE_SMOKE,3).attr(bR).ignorable(),new Ee(O.PURE_POWER,3).attr(fA,g.ATK,2),new Ee(O.SHELL_ARMOR,3).attr(DS).ignorable(),new Ee(O.AIR_LOCK,3).attr(Ea,!0).attr(OU,D.t("abilityTriggers:weatherEffectDisappeared")).attr(nU).attr(fU).bypassFaint(),new Ee(O.TANGLED_FEET,4).conditionalAttr(E=>!!E.getTag(Y.CONFUSED),fA,g.EVA,2).ignorable(),new Ee(O.MOTOR_DRIVE,4).attr(rI,i.ELECTRIC,g.SPD,1).ignorable(),new Ee(O.RIVALRY,4).attr(Es,(E,A,s)=>(E==null?void 0:E.gender)!==je.GENDERLESS&&(A==null?void 0:A.gender)!==je.GENDERLESS&&(E==null?void 0:E.gender)===(A==null?void 0:A.gender),1.25,!0).attr(Es,(E,A,s)=>(E==null?void 0:E.gender)!==je.GENDERLESS&&(A==null?void 0:A.gender)!==je.GENDERLESS&&(E==null?void 0:E.gender)!==(A==null?void 0:A.gender),.75),new Ee(O.STEADFAST,4).attr(IG,[g.SPD],1),new Ee(O.SNOW_CLOAK,4).attr(fA,g.EVA,1.2).attr(li,se.HAIL).condition(Bs(se.HAIL,se.SNOW)).ignorable(),new Ee(O.GLUTTONY,4).attr(fI),new Ee(O.ANGER_POINT,4).attr(DP,g.ATK,6),new Ee(O.UNBURDEN,4).attr(RG,Y.UNBURDEN).bypassFaint().edgeCase(),new Ee(O.HEATPROOF,4).attr(Ti,i.FIRE,.5).attr(GU,.5).ignorable(),new Ee(O.SIMPLE,4).attr(_S,2).ignorable(),new Ee(O.DRY_SKIN,4).attr(MU,2,se.SUNNY,se.HARSH_SUN).attr(yL,2,se.RAIN,se.HEAVY_RAIN).attr(Ti,i.FIRE,1.25).attr(va,i.WATER).ignorable(),new Ee(O.DOWNLOAD,4).attr(YP),new Ee(O.IRON_FIST,4).attr(Es,(E,A,s)=>s.hasFlag(tA.PUNCHING_MOVE),1.2),new Ee(O.POISON_HEAL,4).attr(qP,Re.TOXIC,Re.POISON).attr(SU,Re.TOXIC,Re.POISON),new Ee(O.ADAPTABILITY,4).attr(bC),new Ee(O.SKILL_LINK,4).attr(GS),new Ee(O.HYDRATION,4).attr(wL).condition(Bs(se.RAIN,se.HEAVY_RAIN)),new Ee(O.SOLAR_POWER,4).attr(MU,2,se.SUNNY,se.HARSH_SUN).attr(fA,g.SPATK,1.5).condition(Bs(se.SUNNY,se.HARSH_SUN)),new Ee(O.QUICK_FEET,4).conditionalAttr(E=>E.status?E.status.effect===Re.PARALYSIS:!1,fA,g.SPD,2).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),fA,g.SPD,1.5),new Ee(O.NORMALIZE,4).attr(sn,i.NORMAL,1.2,(E,A,s)=>![t.HIDDEN_POWER,t.WEATHER_BALL,t.NATURAL_GIFT,t.JUDGMENT,t.TECHNO_BLAST].includes(s.id)),new Ee(O.SNIPER,4).attr(NU,1.5),new Ee(O.MAGIC_GUARD,4).attr(DE),new Ee(O.NO_GUARD,4).attr(fS).attr(_I),new Ee(O.STALL,4).attr(_i,(E,A)=>!0,-.2),new Ee(O.TECHNICIAN,4).attr(Es,(E,A,s)=>{const R=new Rt(s.power);return MA(WA,E,A,s,R),R.value<=60},1.5),new Ee(O.LEAF_GUARD,4).attr(MR).condition(Bs(se.SUNNY,se.HARSH_SUN)).ignorable(),new Ee(O.KLUTZ,4).unimplemented(),new Ee(O.MOLD_BREAKER,4).attr(gs,E=>D.t("abilityTriggers:postSummonMoldBreaker",{pokemonNameWithAffix:ee(E)})).attr(fi),new Ee(O.SUPER_LUCK,4).attr(LU),new Ee(O.AFTERMATH,4).attr(nG,4).bypassFaint(),new Ee(O.ANTICIPATION,4).conditionalAttr(gQ(),gs,E=>D.t("abilityTriggers:postSummonAnticipation",{pokemonNameWithAffix:ee(E)})),new Ee(O.FOREWARN,4).attr(JP),new Ee(O.UNAWARE,4).attr(Ki,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.ACC,g.EVA]).ignorable(),new Ee(O.TINTED_LENS,4).attr(jC,2,(E,A,s)=>((A==null?void 0:A.getMoveEffectiveness(E,s))??1)<=.5),new Ee(O.FILTER,4).attr(sR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75).ignorable(),new Ee(O.SLOW_START,4).attr(Gn,Y.SLOW_START,5),new Ee(O.SCRAPPY,4).attr(yr,i.GHOST,[i.NORMAL,i.FIGHTING]).attr(HI),new Ee(O.STORM_DRAIN,4).attr(gU,i.WATER).attr(rI,i.WATER,g.SPATK,1).ignorable(),new Ee(O.ICE_BODY,4).attr(li,se.HAIL).attr(yL,1,se.HAIL,se.SNOW),new Ee(O.SOLID_ROCK,4).attr(sR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75).ignorable(),new Ee(O.SNOW_WARNING,4).attr(qO,se.SNOW).attr(jO,se.SNOW),new Ee(O.HONEY_GATHER,4).attr(aG),new Ee(O.FRISK,4).attr($P),new Ee(O.RECKLESS,4).attr(Es,(E,A,s)=>s.hasFlag(tA.RECKLESS_MOVE),1.2),new Ee(O.MULTITYPE,4).attr(sA).attr(uA).attr(rE).attr(ss),new Ee(O.FLOWER_GIFT,4).conditionalAttr(Bs(se.SUNNY||se.HARSH_SUN),fA,g.ATK,1.5).conditionalAttr(Bs(se.SUNNY||se.HARSH_SUN),fA,g.SPDEF,1.5).attr(sA).attr(ss).attr(iU,O.FLOWER_GIFT).attr(uU,O.FLOWER_GIFT,[se.NONE,se.SANDSTORM,se.STRONG_WINDS,se.FOG,se.HAIL,se.HEAVY_RAIN,se.SNOW,se.RAIN]).partial().ignorable(),new Ee(O.BAD_DREAMS,4).attr(AG),new Ee(O.PICKPOCKET,5).attr(BP,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT)).condition(Al()),new Ee(O.SHEER_FORCE,5).attr(Es,(E,A,s)=>s.chance>=1,5461/4096).attr(LS,0),new Ee(O.CONTRARY,5).attr(_S,-1).ignorable(),new Ee(O.UNNERVE,5).attr(ar),new Ee(O.DEFIANT,5).attr(qC,(E,A,s)=>s<0,[g.ATK],2),new Ee(O.DEFEATIST,5).attr(fA,g.ATK,.5).attr(fA,g.SPATK,.5).condition(E=>E.getHpRatio()<=.5),new Ee(O.CURSED_BODY,5).attr(_P,30).bypassFaint(),new Ee(O.HEALER,5).conditionalAttr(E=>E.getAlly()&&_e(10)<3,wL,!0),new Ee(O.FRIEND_GUARD,5).attr(kC,.75).ignorable(),new Ee(O.WEAK_ARMOR,5).attr(yR,(E,A,s)=>s.category===Mt.PHYSICAL,g.DEF,-1).attr(yR,(E,A,s)=>s.category===Mt.PHYSICAL,g.SPD,2),new Ee(O.HEAVY_METAL,5).attr(dS,2).ignorable(),new Ee(O.LIGHT_METAL,5).attr(dS,.5).ignorable(),new Ee(O.MULTISCALE,5).attr(sR,(E,A,s)=>E.isFullHp(),.5).ignorable(),new Ee(O.TOXIC_BOOST,5).attr(Es,(E,A,s)=>{var R,n;return s.category===Mt.PHYSICAL&&(((R=E==null?void 0:E.status)==null?void 0:R.effect)===Re.POISON||((n=E==null?void 0:E.status)==null?void 0:n.effect)===Re.TOXIC)},1.5),new Ee(O.FLARE_BOOST,5).attr(Es,(E,A,s)=>{var R;return s.category===Mt.SPECIAL&&((R=E==null?void 0:E.status)==null?void 0:R.effect)===Re.BURN},1.5),new Ee(O.HARVEST,5).attr(jP,"EATEN_BERRIES",E=>.5*(Bs(se.SUNNY,se.HARSH_SUN)(E)?2:1)).edgeCase(),new Ee(O.TELEPATHY,5).attr(Kn,(E,A,s)=>E.getAlly()===A&&s instanceof B).ignorable(),new Ee(O.MOODY,5).attr(eG),new Ee(O.OVERCOAT,5).attr(li).attr(Kn,(E,A,s)=>E!==A&&s.hasFlag(tA.POWDER_MOVE)).ignorable(),new Ee(O.POISON_TOUCH,5).attr(dP,30,Re.POISON),new Ee(O.REGENERATOR,5).attr(bP),new Ee(O.BIG_PECKS,5).attr(bR,g.DEF).ignorable(),new Ee(O.SAND_RUSH,5).attr(fA,g.SPD,2).attr(li,se.SANDSTORM).condition(Bs(se.SANDSTORM)),new Ee(O.WONDER_SKIN,5).attr(QC).ignorable(),new Ee(O.ANALYTIC,5).attr(Es,(E,A,s)=>{const R=E==null?void 0:E.scene.findPhase(n=>n instanceof HA&&n.pokemon.id!==E.id);return Ve(R)},1.3),new Ee(O.ILLUSION,5).attr(sA).attr(uA).unimplemented(),new Ee(O.IMPOSTER,5).attr(VP).attr(sA),new Ee(O.INFILTRATOR,5).attr(sa).partial(),new Ee(O.MUMMY,5).attr(zC,O.MUMMY).bypassFaint(),new Ee(O.MOXIE,5).attr(Si,g.ATK,1),new Ee(O.JUSTIFIED,5).attr(yR,(E,A,s)=>A.getMoveType(s)===i.DARK&&s.category!==Mt.STATUS,g.ATK,1),new Ee(O.RATTLED,5).attr(yR,(E,A,s)=>{const R=A.getMoveType(s);return s.category!==Mt.STATUS&&(R===i.DARK||R===i.BUG||R===i.GHOST)},g.SPD,1).attr(US,[g.SPD],1),new Ee(O.MAGIC_BOUNCE,5).ignorable().unimplemented(),new Ee(O.SAP_SIPPER,5).attr(rI,i.GRASS,g.ATK,1).ignorable(),new Ee(O.PRANKSTER,5).attr(_i,(E,A)=>A.category===Mt.STATUS,1),new Ee(O.SAND_FORCE,5).attr(BO,i.ROCK,1.3).attr(BO,i.GROUND,1.3).attr(BO,i.STEEL,1.3).attr(li,se.SANDSTORM).condition(Bs(se.SANDSTORM)),new Ee(O.IRON_BARBS,5).attr($C,8).bypassFaint(),new Ee(O.ZEN_MODE,5).attr(GO,()=>0).attr(oi,E=>E.getHpRatio()<=.5?1:0).attr(Hn,E=>E.getHpRatio()<=.5?1:0).attr(sA).attr(uA).attr(rE).attr(ss).bypassFaint(),new Ee(O.VICTORY_STAR,5).attr(fA,g.ACC,1.1).partial(),new Ee(O.TURBOBLAZE,5).attr(gs,E=>D.t("abilityTriggers:postSummonTurboblaze",{pokemonNameWithAffix:ee(E)})).attr(fi),new Ee(O.TERAVOLT,5).attr(gs,E=>D.t("abilityTriggers:postSummonTeravolt",{pokemonNameWithAffix:ee(E)})).attr(fi),new Ee(O.AROMA_VEIL,6).attr(Wr,[Y.INFATUATED,Y.TAUNT,Y.DISABLED,Y.TORMENT,Y.HEAL_BLOCK]).ignorable(),new Ee(O.FLOWER_VEIL,6).ignorable().unimplemented(),new Ee(O.CHEEK_POUCH,6).attr(PS,1/3),new Ee(O.PROTEAN,6).attr(yI),new Ee(O.FUR_COAT,6).attr(sR,(E,A,s)=>s.category===Mt.PHYSICAL,.5).ignorable(),new Ee(O.MAGICIAN,6).attr(HP),new Ee(O.BULLETPROOF,6).attr(Kn,(E,A,s)=>E!==A&&s.hasFlag(tA.BALLBOMB_MOVE)).ignorable(),new Ee(O.COMPETITIVE,6).attr(qC,(E,A,s)=>s<0,[g.SPATK],2),new Ee(O.STRONG_JAW,6).attr(Es,(E,A,s)=>s.hasFlag(tA.BITING_MOVE),1.5),new Ee(O.REFRIGERATE,6).attr(sn,i.ICE,1.2,(E,A,s)=>s.type===i.NORMAL&&!s.hasAttr(is)),new Ee(O.SWEET_VEIL,6).attr(uS,Re.SLEEP).attr(Wr,Y.DROWSY).ignorable().partial(),new Ee(O.STANCE_CHANGE,6).attr(sA).attr(uA).attr(rE).attr(ss),new Ee(O.GALE_WINGS,6).attr(_i,(E,A)=>E.isFullHp()&&E.getMoveType(A)===i.FLYING,1),new Ee(O.MEGA_LAUNCHER,6).attr(Es,(E,A,s)=>s.hasFlag(tA.PULSE_MOVE),1.5),new Ee(O.GRASS_PELT,6).conditionalAttr(El(Nt.GRASSY),fA,g.DEF,1.5).ignorable(),new Ee(O.SYMBIOSIS,6).unimplemented(),new Ee(O.TOUGH_CLAWS,6).attr(Es,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT),1.3),new Ee(O.PIXILATE,6).attr(sn,i.FAIRY,1.2,(E,A,s)=>s.type===i.NORMAL&&!s.hasAttr(is)),new Ee(O.GOOEY,6).attr(yR,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT),g.SPD,-1,!1),new Ee(O.AERILATE,6).attr(sn,i.FLYING,1.2,(E,A,s)=>s.type===i.NORMAL&&!s.hasAttr(is)),new Ee(O.PARENTAL_BOND,6).attr(SS,.25),new Ee(O.DARK_AURA,6).attr(gs,E=>D.t("abilityTriggers:postSummonDarkAura",{pokemonNameWithAffix:ee(E)})).attr(GI,i.DARK,4/3),new Ee(O.FAIRY_AURA,6).attr(gs,E=>D.t("abilityTriggers:postSummonFairyAura",{pokemonNameWithAffix:ee(E)})).attr(GI,i.FAIRY,4/3),new Ee(O.AURA_BREAK,6).ignorable().conditionalAttr(E=>E.scene.getField(!0).some(A=>A.hasAbility(O.DARK_AURA)),GI,i.DARK,9/16).conditionalAttr(E=>E.scene.getField(!0).some(A=>A.hasAbility(O.FAIRY_AURA)),GI,i.FAIRY,9/16).conditionalAttr(E=>E.scene.getField(!0).some(A=>A.hasAbility(O.DARK_AURA)||A.hasAbility(O.FAIRY_AURA)),gs,E=>D.t("abilityTriggers:postSummonAuraBreak",{pokemonNameWithAffix:ee(E)})),new Ee(O.PRIMORDIAL_SEA,6).attr(qO,se.HEAVY_RAIN).attr(jO,se.HEAVY_RAIN).attr(YL).attr(VL).bypassFaint(),new Ee(O.DESOLATE_LAND,6).attr(qO,se.HARSH_SUN).attr(jO,se.HARSH_SUN).attr(YL).attr(VL).bypassFaint(),new Ee(O.DELTA_STREAM,6).attr(qO,se.STRONG_WINDS).attr(jO,se.STRONG_WINDS).attr(YL).attr(VL).bypassFaint(),new Ee(O.STAMINA,7).attr(yR,(E,A,s)=>s.category!==Mt.STATUS,g.DEF,1),new Ee(O.WIMP_OUT,7).attr(Ra).edgeCase(),new Ee(O.EMERGENCY_EXIT,7).attr(Ra).edgeCase(),new Ee(O.WATER_COMPACTION,7).attr(yR,(E,A,s)=>A.getMoveType(s)===i.WATER&&s.category!==Mt.STATUS,g.DEF,2),new Ee(O.MERCILESS,7).attr(TU,(E,A,s)=>{var R,n;return((R=A==null?void 0:A.status)==null?void 0:R.effect)===Re.TOXIC||((n=A==null?void 0:A.status)==null?void 0:n.effect)===Re.POISON}),new Ee(O.SHIELDS_DOWN,7).attr(GO,()=>0).attr(oi,E=>E.formIndex%7+(E.getHpRatio()<=.5?7:0)).attr(Hn,E=>E.formIndex%7+(E.getHpRatio()<=.5?7:0)).attr(sA).attr(uA).attr(rE).attr(ss).bypassFaint().partial(),new Ee(O.STAKEOUT,7).attr(Es,(E,A,s)=>!!(A!=null&&A.turnData.switchedInThisTurn),2),new Ee(O.WATER_BUBBLE,7).attr(Ti,i.FIRE,.5).attr(BO,i.WATER,2).attr(MR,Re.BURN).ignorable(),new Ee(O.STEELWORKER,7).attr(BO,i.STEEL),new Ee(O.BERSERK,7).attr(WL,(E,A,s)=>s.category!==Mt.STATUS,.5,[g.SPATK],1).condition(Al()),new Ee(O.SLUSH_RUSH,7).attr(fA,g.SPD,2).condition(Bs(se.HAIL,se.SNOW)),new Ee(O.LONG_REACH,7).attr(lU),new Ee(O.LIQUID_VOICE,7).attr(sn,i.WATER,1,(E,A,s)=>s.hasFlag(tA.SOUND_BASED)),new Ee(O.TRIAGE,7).attr(_i,(E,A)=>A.hasFlag(tA.TRIAGE_MOVE),3),new Ee(O.GALVANIZE,7).attr(sn,i.ELECTRIC,1.2,(E,A,s)=>s.type===i.NORMAL&&!s.hasAttr(is)),new Ee(O.SURGE_SURFER,7).conditionalAttr(El(Nt.ELECTRIC),fA,g.SPD,2),new Ee(O.SCHOOLING,7).attr(GO,()=>0).attr(oi,E=>E.level<20||E.getHpRatio()<=.25?0:1).attr(Hn,E=>E.level<20||E.getHpRatio()<=.25?0:1).attr(sA).attr(uA).attr(rE).attr(ss).bypassFaint(),new Ee(O.DISGUISE,7).attr(sA).attr(uA).attr(rE).attr(tR).attr(ss).conditionalAttr(E=>E.formIndex===0,Gn,Y.DISGUISE,0,!1).attr(yU,(E,A,s)=>!!E.getTag(Y.DISGUISE)&&E.getMoveEffectiveness(A,s)>0,0,Y.DISGUISE,(E,A)=>D.t("abilityTriggers:disguiseAvoidedDamage",{pokemonNameWithAffix:ee(E),abilityName:A}),E=>Yt(E.getMaxHp()/8)).attr(GO,()=>0).bypassFaint().ignorable(),new Ee(O.BATTLE_BOND,7).attr(KP,()=>2).attr(GO,()=>1).attr(sA).attr(uA).attr(rE).attr(ss).bypassFaint(),new Ee(O.POWER_CONSTRUCT,7).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,GO,()=>2).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,GO,()=>3).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,oi,E=>E.getHpRatio()<=.5||E.getFormKey()==="complete"?4:2).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,Hn,E=>E.getHpRatio()<=.5||E.getFormKey()==="complete"?4:2).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,oi,E=>E.getHpRatio()<=.5||E.getFormKey()==="10-complete"?5:3).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,Hn,E=>E.getHpRatio()<=.5||E.getFormKey()==="10-complete"?5:3).attr(sA).attr(uA).attr(rE).attr(ss).bypassFaint(),new Ee(O.CORROSION,7).attr(YU,[Re.POISON,Re.TOXIC],[i.STEEL,i.POISON]).edgeCase(),new Ee(O.COMATOSE,7).attr(sA).attr(uA).attr(rE).attr(MR,...cL()).attr(Rn,Y.DROWSY),new Ee(O.QUEENLY_MAJESTY,7).attr(nr).ignorable(),new Ee(O.INNARDS_OUT,7).attr(iG).bypassFaint(),new Ee(O.DANCER,7).attr(sG),new Ee(O.BATTERY,7).attr(oS,[Mt.SPECIAL],1.3),new Ee(O.FLUFFY,7).attr(sR,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT),.5).attr(sR,(E,A,s)=>A.getMoveType(s)===i.FIRE,2).ignorable(),new Ee(O.DAZZLING,7).attr(nr).ignorable(),new Ee(O.SOUL_HEART,7).attr(mP,g.SPATK,1),new Ee(O.TANGLING_HAIR,7).attr(yR,(E,A,s)=>s.hasFlag(tA.MAKES_CONTACT),g.SPD,-1,!1),new Ee(O.RECEIVER,7).attr(RU).attr(sA),new Ee(O.POWER_OF_ALCHEMY,7).attr(RU).attr(sA),new Ee(O.BEAST_BOOST,7).attr(Si,E=>{let A,s=0;for(const R of Vn){const n=E.getStat(R,!1);n>s&&(A=R,s=n)}return A},1),new Ee(O.RKS_SYSTEM,7).attr(sA).attr(uA).attr(rE).attr(ss),new Ee(O.ELECTRIC_SURGE,7).attr(LI,Nt.ELECTRIC).attr(NI,Nt.ELECTRIC),new Ee(O.PSYCHIC_SURGE,7).attr(LI,Nt.PSYCHIC).attr(NI,Nt.PSYCHIC),new Ee(O.MISTY_SURGE,7).attr(LI,Nt.MISTY).attr(NI,Nt.MISTY),new Ee(O.GRASSY_SURGE,7).attr(LI,Nt.GRASSY).attr(NI,Nt.GRASSY),new Ee(O.FULL_METAL_BODY,7).attr(bR),new Ee(O.SHADOW_SHIELD,7).attr(sR,(E,A,s)=>E.isFullHp(),.5),new Ee(O.PRISM_ARMOR,7).attr(sR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75),new Ee(O.NEUROFORCE,7).attr(Es,(E,A,s)=>((A==null?void 0:A.getMoveEffectiveness(E,s))??1)>=2,1.25),new Ee(O.INTREPID_SWORD,8).attr(dI,[g.ATK],1,!0),new Ee(O.DAUNTLESS_SHIELD,8).attr(dI,[g.DEF],1,!0),new Ee(O.LIBERO,8).attr(yI),new Ee(O.BALL_FETCH,8).attr(EG).condition(KQ(O.BALL_FETCH)),new Ee(O.COTTON_DOWN,8).attr(yR,(E,A,s)=>s.category!==Mt.STATUS,g.SPD,-1,!1,!0).bypassFaint(),new Ee(O.PROPELLER_TAIL,8).attr(Yr),new Ee(O.MIRROR_ARMOR,8).ignorable().unimplemented(),new Ee(O.GULP_MISSILE,8).attr(rE).attr(tR).attr(ss).attr(sA).attr(uA).bypassFaint(),new Ee(O.STALWART,8).attr(Yr),new Ee(O.STEAM_ENGINE,8).attr(yR,(E,A,s)=>{const R=A.getMoveType(s);return s.category!==Mt.STATUS&&(R===i.FIRE||R===i.WATER)},g.SPD,6),new Ee(O.PUNK_ROCK,8).attr(Es,(E,A,s)=>s.hasFlag(tA.SOUND_BASED),1.3).attr(sR,(E,A,s)=>s.hasFlag(tA.SOUND_BASED),.5).ignorable(),new Ee(O.SAND_SPIT,8).attr(hP,se.SANDSTORM,(E,A,s)=>s.category!==Mt.STATUS),new Ee(O.ICE_SCALES,8).attr(sR,(E,A,s)=>s.category===Mt.SPECIAL,.5).ignorable(),new Ee(O.RIPEN,8).attr(Ir),new Ee(O.ICE_FACE,8).attr(sA).attr(uA).attr(rE).attr(tR).attr(ss).conditionalAttr(E=>E.formIndex===0,Gn,Y.ICE_FACE,0,!1).conditionalAttr(Bs(se.HAIL,se.SNOW),Gn,Y.ICE_FACE,0).attr(DU,Y.ICE_FACE,0,se.HAIL,se.SNOW).attr(yU,(E,A,s)=>s.category===Mt.PHYSICAL&&!!E.getTag(Y.ICE_FACE),0,Y.ICE_FACE,(E,A)=>D.t("abilityTriggers:iceFaceAvoidedDamage",{pokemonNameWithAffix:ee(E),abilityName:A})).attr(GO,()=>0).bypassFaint().ignorable(),new Ee(O.POWER_SPOT,8).attr(oS,[Mt.SPECIAL,Mt.PHYSICAL],1.3),new Ee(O.MIMICRY,8).attr(VU),new Ee(O.SCREEN_CLEANER,8).attr(FP,[ge.AURORA_VEIL,ge.LIGHT_SCREEN,ge.REFLECT]),new Ee(O.STEELY_SPIRIT,8).attr(AU,i.STEEL),new Ee(O.PERISH_BODY,8).attr(MP,4),new Ee(O.WANDERING_SPIRIT,8).attr(cP).bypassFaint().edgeCase(),new Ee(O.GORILLA_TACTICS,8).attr(GP),new Ee(O.NEUTRALIZING_GAS,8).attr(Pi).attr(sA).attr(uA).attr(tR).attr(gs,E=>D.t("abilityTriggers:postSummonNeutralizingGas",{pokemonNameWithAffix:ee(E)})).partial(),new Ee(O.PASTEL_VEIL,8).attr(wP,Re.POISON,Re.TOXIC).attr(uS,Re.POISON,Re.TOXIC).ignorable(),new Ee(O.HUNGER_SWITCH,8).attr(Hn,E=>E.getFormKey()?0:1).attr(Hn,E=>E.getFormKey()?1:0).attr(sA).attr(uA).attr(tR).attr(ss).condition(E=>!E.isTerastallized()),new Ee(O.QUICK_DRAW,8).attr(wU,30),new Ee(O.UNSEEN_FIST,8).attr(WU),new Ee(O.CURIOUS_MEDICINE,8).attr(WP),new Ee(O.TRANSISTOR,8).attr(BO,i.ELECTRIC),new Ee(O.DRAGONS_MAW,8).attr(BO,i.DRAGON),new Ee(O.CHILLING_NEIGH,8).attr(Si,g.ATK,1),new Ee(O.GRIM_NEIGH,8).attr(Si,g.SPATK,1),new Ee(O.AS_ONE_GLASTRIER,8).attr(gs,E=>D.t("abilityTriggers:postSummonAsOneGlastrier",{pokemonNameWithAffix:ee(E)})).attr(ar).attr(Si,g.ATK,1).attr(sA).attr(uA).attr(rE),new Ee(O.AS_ONE_SPECTRIER,8).attr(gs,E=>D.t("abilityTriggers:postSummonAsOneSpectrier",{pokemonNameWithAffix:ee(E)})).attr(ar).attr(Si,g.SPATK,1).attr(sA).attr(uA).attr(rE),new Ee(O.LINGERING_AROMA,9).attr(zC,O.LINGERING_AROMA).bypassFaint(),new Ee(O.SEED_SOWER,9).attr(CP,Nt.GRASSY),new Ee(O.THERMAL_EXCHANGE,9).attr(yR,(E,A,s)=>A.getMoveType(s)===i.FIRE&&s.category!==Mt.STATUS,g.ATK,1).attr(MR,Re.BURN).ignorable(),new Ee(O.ANGER_SHELL,9).attr(WL,(E,A,s)=>s.category!==Mt.STATUS,.5,[g.ATK,g.SPATK,g.SPD],1).attr(WL,(E,A,s)=>s.category!==Mt.STATUS,.5,[g.DEF,g.SPDEF],-1).condition(Al()),new Ee(O.PURIFYING_SALT,9).attr(MR).attr(Ti,i.GHOST,.5).ignorable(),new Ee(O.WELL_BAKED_BODY,9).attr(rI,i.FIRE,g.DEF,2).ignorable(),new Ee(O.WIND_RIDER,9).attr(SP,(E,A,s)=>E!==A&&s.hasFlag(tA.WIND_MOVE)&&s.category!==Mt.STATUS,g.ATK,1).attr(rG,ge.TAILWIND).ignorable(),new Ee(O.GUARD_DOG,9).attr(US,[g.ATK],1,!0).attr(Zi).ignorable(),new Ee(O.ROCKY_PAYLOAD,9).attr(BO,i.ROCK),new Ee(O.WIND_POWER,9).attr(JC,(E,A,s)=>s.hasFlag(tA.WIND_MOVE),Y.CHARGED),new Ee(O.ZERO_TO_HERO,9).attr(sA).attr(uA).attr(rE).attr(tR).attr(ss).attr(GO,()=>0).attr(kP,E=>E.isFainted()?E.formIndex:1).bypassFaint(),new Ee(O.COMMANDER,9).attr(pr).attr(_I).attr(sA).attr(uA).edgeCase(),new Ee(O.ELECTROMORPHOSIS,9).attr(JC,(E,A,s)=>s.category!==Mt.STATUS,Y.CHARGED),new Ee(O.PROTOSYNTHESIS,9).conditionalAttr(Bs(se.SUNNY,se.HARSH_SUN),Gn,Y.PROTOSYNTHESIS,0,!0).attr(DU,Y.PROTOSYNTHESIS,0,se.SUNNY,se.HARSH_SUN).attr(sA).attr(uA).attr(tR).partial(),new Ee(O.QUARK_DRIVE,9).conditionalAttr(El(Nt.ELECTRIC),Gn,Y.QUARK_DRIVE,0,!0).attr(zP,Y.QUARK_DRIVE,0,Nt.ELECTRIC).attr(sA).attr(uA).attr(tR).partial(),new Ee(O.GOOD_AS_GOLD,9).attr(Kn,(E,A,s)=>E!==A&&s.category===Mt.STATUS).ignorable().partial(),new Ee(O.VESSEL_OF_RUIN,9).attr(PI,g.SPATK,.75).attr(gs,E=>D.t("abilityTriggers:postSummonVesselOfRuin",{pokemonNameWithAffix:ee(E),statName:D.t(_E(g.SPATK))})).ignorable(),new Ee(O.SWORD_OF_RUIN,9).attr(PI,g.DEF,.75).attr(gs,E=>D.t("abilityTriggers:postSummonSwordOfRuin",{pokemonNameWithAffix:ee(E),statName:D.t(_E(g.DEF))})),new Ee(O.TABLETS_OF_RUIN,9).attr(PI,g.ATK,.75).attr(gs,E=>D.t("abilityTriggers:postSummonTabletsOfRuin",{pokemonNameWithAffix:ee(E),statName:D.t(_E(g.ATK))})).ignorable(),new Ee(O.BEADS_OF_RUIN,9).attr(PI,g.SPDEF,.75).attr(gs,E=>D.t("abilityTriggers:postSummonBeadsOfRuin",{pokemonNameWithAffix:ee(E),statName:D.t(_E(g.SPDEF))})),new Ee(O.ORICHALCUM_PULSE,9).attr(qO,se.SUNNY).attr(jO,se.SUNNY).conditionalAttr(Bs(se.SUNNY,se.HARSH_SUN),fA,g.ATK,4/3),new Ee(O.HADRON_ENGINE,9).attr(LI,Nt.ELECTRIC).attr(NI,Nt.ELECTRIC).conditionalAttr(El(Nt.ELECTRIC),fA,g.SPATK,4/3),new Ee(O.OPPORTUNIST,9).attr(_U),new Ee(O.CUD_CHEW,9).unimplemented(),new Ee(O.SHARPNESS,9).attr(Es,(E,A,s)=>s.hasFlag(tA.SLICING_MOVE),1.5),new Ee(O.SUPREME_OVERLORD,9).attr(PP,(E,A,s)=>1+.1*Math.min(E.isPlayer()?E.scene.currentBattle.playerFaints:E.scene.currentBattle.enemyFaints,5)).partial(),new Ee(O.COSTAR,9).attr(vP),new Ee(O.TOXIC_DEBRIS,9).attr(oP,(E,A,s)=>s.category===Mt.PHYSICAL,ge.TOXIC_SPIKES).bypassFaint(),new Ee(O.ARMOR_TAIL,9).attr(nr).ignorable(),new Ee(O.EARTH_EATER,9).attr(va,i.GROUND).ignorable(),new Ee(O.MYCELIUM_MIGHT,9).attr(_i,(E,A)=>A.category===Mt.STATUS,-.2).attr(vU,(E,A)=>A.category===Mt.STATUS).attr(fi,(E,A)=>A.category===Mt.STATUS),new Ee(O.MINDS_EYE,9).attr(yr,i.GHOST,[i.NORMAL,i.FIGHTING]).attr(bR,g.ACC).attr(Ki,[g.EVA]).ignorable(),new Ee(O.SUPERSWEET_SYRUP,9).attr(dI,[g.EVA],-1),new Ee(O.HOSPITALITY,9).attr(pP,4,!0),new Ee(O.TOXIC_CHAIN,9).attr(EU,!1,30,Re.TOXIC),new Ee(O.EMBODY_ASPECT_TEAL,9).attr(wa,[g.SPD],1,!0).attr(sA).attr(uA).attr(tR).partial(),new Ee(O.EMBODY_ASPECT_WELLSPRING,9).attr(wa,[g.SPDEF],1,!0).attr(sA).attr(uA).attr(tR).partial(),new Ee(O.EMBODY_ASPECT_HEARTHFLAME,9).attr(wa,[g.ATK],1,!0).attr(sA).attr(uA).attr(tR).partial(),new Ee(O.EMBODY_ASPECT_CORNERSTONE,9).attr(wa,[g.DEF],1,!0).attr(sA).attr(uA).attr(tR).partial(),new Ee(O.TERA_SHIFT,9).attr(oi,E=>E.getFormKey()?0:1).attr(sA).attr(uA).attr(rE).attr(tR).attr(ss),new Ee(O.TERA_SHELL,9).attr(ZC).attr(sA).attr(uA).ignorable(),new Ee(O.TERAFORM_ZERO,9).attr(sA).attr(uA).unimplemented(),new Ee(O.POISON_PUPPETEER,9).attr(sA).attr(uA).attr(IU,Re.POISON,Re.TOXIC))}L(zQ,"initAbilities");var QE=(E=>(E[E.FAINT=0]="FAINT",E[E.MOVE=1]="MOVE",E[E.PRE_MOVE=2]="PRE_MOVE",E[E.AFTER_MOVE=3]="AFTER_MOVE",E[E.MOVE_EFFECT=4]="MOVE_EFFECT",E[E.TURN_END=5]="TURN_END",E[E.HIT=6]="HIT",E[E.AFTER_HIT=7]="AFTER_HIT",E[E.CUSTOM=8]="CUSTOM",E))(QE||{});const VY=class VY{constructor(A,s,R,n,I,a=!1){this.tagType=A,this.lapseTypes=Array.isArray(s)?s:[s],this.turnCount=R,this.sourceMove=n,this.sourceId=I,this.isBatonPassable=a}canAdd(A){return!0}onAdd(A){}onRemove(A){}onOverlap(A){}lapse(A,s){return--this.turnCount>0}getDescriptor(){return""}isSourceLinked(){return!1}getMoveName(){return this.sourceMove?ye[this.sourceMove].name:null}loadTag(A){this.turnCount=A.turnCount,this.sourceMove=A.sourceMove,this.sourceId=A.sourceId}getSourcePokemon(A){return this.sourceId?A.getPokemonById(this.sourceId):null}};L(VY,"BattlerTag");let Wt=VY;const xY=class xY extends Wt{constructor(A,s,R,n,I){super(A,s,R,n,I)}lapse(A,s){if(s===2){const R=A.scene.getCurrentPhase(),n=R.move;return this.isMoveRestricted(n.moveId,A)&&(this.interruptedText(A,n.moveId)&&A.scene.queueMessage(this.interruptedText(A,n.moveId)),R.cancel()),!0}return super.lapse(A,s)}isMoveTargetRestricted(A,s,R){return!1}interruptedText(A,s){return""}};L(xY,"MoveRestrictionBattlerTag");let UO=xY;const bY=class bY extends UO{constructor(){super(Y.THROAT_CHOPPED,[5,2],2,t.THROAT_CHOP)}isMoveRestricted(A){return ye[A].hasFlag(tA.SOUND_BASED)}selectionDeniedText(A,s){return D.t("battle:moveCannotBeSelected",{moveName:ye[s].name})}interruptedText(A,s){return D.t("battle:throatChopInterruptedMove",{pokemonName:ee(A)})}};L(bY,"ThroatChoppedTag");let NG=bY;const kY=class kY extends UO{constructor(A){super(Y.DISABLED,[2,5],4,t.DISABLE,A),this.moveId=t.NONE}isMoveRestricted(A){return A===this.moveId}onAdd(A){super.onAdd(A);const s=A.getLastXMoves().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual);s!==void 0&&(this.moveId=s.move,A.scene.queueMessage(D.t("battlerTags:disabledOnAdd",{pokemonNameWithAffix:ee(A),moveName:ye[this.moveId].name})))}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:disabledLapse",{pokemonNameWithAffix:ee(A),moveName:ye[this.moveId].name}))}selectionDeniedText(A,s){return D.t("battle:moveDisabled",{moveName:ye[s].name})}interruptedText(A,s){return D.t("battle:disableInterruptedMove",{pokemonNameWithAffix:ee(A),moveName:ye[s].name})}loadTag(A){super.loadTag(A),this.moveId=A.moveId}};L(kY,"DisabledTag");let TG=kY;const kD=class kD extends UO{constructor(){super(Y.GORILLA_TACTICS,8,0),this.moveId=t.NONE}isMoveRestricted(A){return A!==this.moveId}canAdd(A){return this.getLastValidMove(A)!==void 0&&!A.getTag(kD)}onAdd(A){const s=this.getLastValidMove(A);s&&(this.moveId=s,A.setStat(g.ATK,A.getStat(g.ATK,!1)*1.5,!1))}loadTag(A){super.loadTag(A),this.moveId=A.moveId}selectionDeniedText(A,s){return D.t("battle:canOnlyUseMove",{moveName:ye[this.moveId].name,pokemonName:ee(A)})}getLastValidMove(A){const s=A.getLastXMoves().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual);return s==null?void 0:s.move}};L(kD,"GorillaTacticsTag");let SG=kD;const ZY=class ZY extends Wt{constructor(A){super(Y.RECHARGING,[2,5],2,A)}onAdd(A){super.onAdd(A),A.getMoveQueue().push({move:t.NONE,targets:[]})}lapse(A,s){return s===2&&(A.scene.queueMessage(D.t("battlerTags:rechargingLapse",{pokemonNameWithAffix:ee(A)})),A.scene.getCurrentPhase().cancel(),A.getMoveQueue().shift()),super.lapse(A,s)}};L(ZY,"RechargingTag");let oG=ZY;const XY=class XY extends Wt{constructor(){super(Y.BEAK_BLAST_CHARGING,[2,5,7],1,t.BEAK_BLAST)}onAdd(A){new yS(Zn.BEAK_BLAST_CHARGING,this.sourceMove,A).play(A.scene),A.scene.queueMessage(D.t("moveTriggers:startedHeatingUpBeak",{pokemonName:ee(A)}))}lapse(A,s){if(s===7){const R=E8(A);return R!=null&&R.move.hasFlag(tA.MAKES_CONTACT)&&R.attacker.trySetStatus(Re.BURN,!0,A),!0}return super.lapse(A,s)}};L(XY,"BeakBlastChargingTag");let lG=XY;const QY=class QY extends Wt{constructor(){super(Y.SHELL_TRAP,[5,7],1),this.activated=!1}onAdd(A){A.scene.queueMessage(D.t("moveTriggers:setUpShellTrap",{pokemonName:ee(A)}))}lapse(A,s){if(s===7){const R=E8(A);if((R==null?void 0:R.move.category)===Mt.PHYSICAL&&A.isOpponent(R.attacker)){const n=A.scene.phaseQueue.findIndex(a=>a instanceof HA&&a.pokemon===A),I=A.scene.phaseQueue.findIndex(a=>a instanceof HA);if(n!==-1&&n!==I){const a=A.scene.phaseQueue.splice(n,1)[0];A.scene.prependToPhase(a,HA)}this.activated=!0}return!0}return super.lapse(A,s)}};L(QY,"ShellTrapTag");let xU=QY;const ZD=class ZD extends Wt{constructor(A,s,R,n,I){super(A,s,R,n,I,!0)}canAdd(A){const s=A.scene.getPokemonById(this.sourceId),R=ye[this.sourceMove],n=A.isOfType(i.GHOST),I=A.getTag(ZD),a=R.hitsSubstitute(s,A);return!I&&!n&&!a}onAdd(A){super.onAdd(A),A.scene.queueMessage(this.getTrapMessage(A))}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:trappedOnRemove",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()}))}getDescriptor(){return D.t("battlerTags:trappedDesc")}isSourceLinked(){return!0}getTrapMessage(A){return D.t("battlerTags:trappedOnAdd",{pokemonNameWithAffix:ee(A)})}};L(ZD,"TrappedTag");let gR=ZD;const JY=class JY extends gR{constructor(A){super(Y.NO_RETREAT,8,0,t.NO_RETREAT,A)}canAdd(A){return!A.getTag(gR)}};L(JY,"NoRetreatTag");let CG=JY;const $Y=class $Y extends Wt{constructor(A){super(Y.FLINCHED,[2,5],0,A)}onAdd(A){super.onAdd(A),Ct(mU,A,null)}lapse(A,s){return s===2&&(A.scene.getCurrentPhase().cancel(),A.scene.queueMessage(D.t("battlerTags:flinchedLapse",{pokemonNameWithAffix:ee(A)}))),super.lapse(A,s)}getDescriptor(){return D.t("battlerTags:flinchedDesc")}};L($Y,"FlinchedTag");let UG=$Y;const zY=class zY extends Wt{constructor(A){super(Y.INTERRUPTED,2,0,A)}canAdd(A){return!!A.getTag(Y.FLYING)}onAdd(A){super.onAdd(A),A.getMoveQueue().shift(),A.pushMoveHistory({move:t.NONE,result:CA.OTHER})}lapse(A,s){return A.scene.getCurrentPhase().cancel(),super.lapse(A,s)}};L(zY,"InterruptedTag");let uG=zY;const qY=class qY extends Wt{constructor(A,s){super(Y.CONFUSED,1,A,s,void 0,!0)}canAdd(A){var s;return((s=A.scene.arena.terrain)==null?void 0:s.terrainType)!==Nt.MISTY||!A.isGrounded()}onAdd(A){super.onAdd(A),A.scene.unshiftPhase(new Is(A.scene,A.getBattlerIndex(),void 0,oA.CONFUSION)),A.scene.queueMessage(D.t("battlerTags:confusedOnAdd",{pokemonNameWithAffix:ee(A)}))}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:confusedOnRemove",{pokemonNameWithAffix:ee(A)}))}onOverlap(A){super.onOverlap(A),A.scene.queueMessage(D.t("battlerTags:confusedOnOverlap",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){const R=s!==8&&super.lapse(A,s);if(R&&(A.scene.queueMessage(D.t("battlerTags:confusedLapse",{pokemonNameWithAffix:ee(A)})),A.scene.unshiftPhase(new Is(A.scene,A.getBattlerIndex(),void 0,oA.CONFUSION)),A.randSeedInt(3)===0)){const n=A.getEffectiveStat(g.ATK),I=A.getEffectiveStat(g.DEF),a=Yt(((2*A.level/5+2)*40*n/I/50+2)*(A.randSeedIntRange(85,100)/100));A.scene.queueMessage(D.t("battlerTags:confusedLapseHurtItself")),A.damageAndUpdate(a),A.battleData.hitCount++,A.scene.getCurrentPhase().cancel()}return R}getDescriptor(){return D.t("battlerTags:confusedDesc")}};L(qY,"ConfusedTag");let DG=qY;const jY=class jY extends Wt{constructor(A,s){super(Y.DESTINY_BOND,2,1,A,s,!0)}lapse(A,s){if(s!==8)return super.lapse(A,s);const R=this.sourceId?A.scene.getPokemonById(this.sourceId):null;return R!=null&&R.isFainted()?(R==null?void 0:R.getAlly())===A?!1:A.isBossImmune()?(A.scene.queueMessage(D.t("battlerTags:destinyBondLapseIsBoss",{pokemonNameWithAffix:ee(A)})),!1):(A.scene.queueMessage(D.t("battlerTags:destinyBondLapse",{pokemonNameWithAffix:ee(R),pokemonNameWithAffix2:ee(A)})),A.damageAndUpdate(A.hp,wt.ONE_HIT_KO,!1,!1,!0),!1):!0}};L(jY,"DestinyBondTag");let MG=jY;const ey=class ey extends Wt{constructor(A,s){super(Y.INFATUATED,1,1,A,s)}canAdd(A){if(this.sourceId){const s=A.scene.getPokemonById(this.sourceId);return s?A.isOppositeGender(s):(console.warn("canAdd: this.sourceId is not a valid pokemon id!",this.sourceId),!1)}else return console.warn("canAdd: this.sourceId is undefined"),!1}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:infatuatedOnAdd",{pokemonNameWithAffix:ee(A),sourcePokemonName:ee(A.scene.getPokemonById(this.sourceId)??void 0)}))}onOverlap(A){super.onOverlap(A),A.scene.queueMessage(D.t("battlerTags:infatuatedOnOverlap",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&(A.scene.queueMessage(D.t("battlerTags:infatuatedLapse",{pokemonNameWithAffix:ee(A),sourcePokemonName:ee(A.scene.getPokemonById(this.sourceId)??void 0)})),A.scene.unshiftPhase(new Is(A.scene,A.getBattlerIndex(),void 0,oA.ATTRACT)),A.randSeedInt(2)&&(A.scene.queueMessage(D.t("battlerTags:infatuatedLapseImmobilize",{pokemonNameWithAffix:ee(A)})),A.scene.getCurrentPhase().cancel())),R}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:infatuatedOnRemove",{pokemonNameWithAffix:ee(A)}))}isSourceLinked(){return!0}getDescriptor(){return D.t("battlerTags:infatuatedDesc")}};L(ey,"InfatuatedTag");let hG=ey;const ty=class ty extends Wt{constructor(A){super(Y.SEEDED,5,1,t.LEECH_SEED,A,!0)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}canAdd(A){return!A.isOfType(i.GRASS)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:seededOnAdd",{pokemonNameWithAffix:ee(A)})),this.sourceIndex=A.scene.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){const n=A.getOpponents().find(I=>I.getBattlerIndex()===this.sourceIndex);if(n){const I=new Lt(!1);if(Ct(DE,A,I),!I.value){A.scene.unshiftPhase(new Is(A.scene,n.getBattlerIndex(),A.getBattlerIndex(),oA.LEECH_SEED));const a=A.damageAndUpdate(Yt(A.getMaxHp()/8)),r=A.hasAbilityWithAttr(rS,!1);A.scene.unshiftPhase(new mE(A.scene,n.getBattlerIndex(),r?a*-1:a,r?D.t("battlerTags:seededLapseShed",{pokemonNameWithAffix:ee(A)}):D.t("battlerTags:seededLapse",{pokemonNameWithAffix:ee(A)}),!1,!0))}}}return R}getDescriptor(){return D.t("battlerTags:seedDesc")}};L(ty,"SeedTag");let cG=ty;const Ay=class Ay extends Wt{constructor(){super(Y.POWDER,[2,5],1)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:powderOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){if(s===2){const R=A.scene.getCurrentPhase();if(R instanceof HA){const n=R.move.getMove(),I=A.scene.arena.weather;if(A.getMoveType(n)===i.FIRE&&!(I&&I.weatherType===se.HEAVY_RAIN&&!I.isEffectSuppressed(A.scene))){R.fail(),R.showMoveText(),A.scene.unshiftPhase(new Is(A.scene,A.getBattlerIndex(),A.getBattlerIndex(),oA.POWDER));const a=new Lt(!1);Ct(DE,A,a),a.value||A.damageAndUpdate(Math.floor(A.getMaxHp()/4),wt.OTHER),A.scene.queueMessage(D.t("battlerTags:powderLapse",{moveName:n.name}))}}return!0}else return super.lapse(A,s)}};L(Ay,"PowderTag");let _G=Ay;const Ey=class Ey extends Wt{constructor(){super(Y.NIGHTMARE,5,1,t.NIGHTMARE)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:nightmareOnAdd",{pokemonNameWithAffix:ee(A)}))}onOverlap(A){super.onOverlap(A),A.scene.queueMessage(D.t("battlerTags:nightmareOnOverlap",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){A.scene.queueMessage(D.t("battlerTags:nightmareLapse",{pokemonNameWithAffix:ee(A)})),A.scene.unshiftPhase(new Is(A.scene,A.getBattlerIndex(),void 0,oA.CURSE));const n=new Lt(!1);Ct(DE,A,n),n.value||A.damageAndUpdate(Yt(A.getMaxHp()/4))}return R}getDescriptor(){return D.t("battlerTags:nightmareDesc")}};L(Ey,"NightmareTag");let PG=Ey;const sy=class sy extends Wt{constructor(A,s,R){super(Y.FRENZY,8,A,s,R)}onRemove(A){super.onRemove(A),this.turnCount<2&&A.addTag(Y.CONFUSED,A.randSeedIntRange(2,4))}};L(sy,"FrenzyTag");let GG=sy;const Ry=class Ry extends UO{constructor(A){super(Y.ENCORE,[8,3],3,t.ENCORE,A)}loadTag(A){super.loadTag(A),this.moveId=A.moveId}canAdd(A){const s=A.getLastXMoves(1);if(!s.length)return!1;const R=s[0];if(!R.move||R.virtual)return!1;switch(R.move){case t.MIMIC:case t.MIRROR_MOVE:case t.TRANSFORM:case t.STRUGGLE:case t.SKETCH:case t.SLEEP_TALK:case t.ENCORE:return!1}return this.moveId=R.move,!0}onAdd(A){if(super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:encoreOnAdd",{pokemonNameWithAffix:ee(A)})),A.scene.findPhase(R=>R instanceof HA&&R.pokemon===A)){const R=A.getMoveset().find(n=>n.moveId===this.moveId);if(R){const n=A.getLastXMoves(1)[0];A.scene.tryReplacePhase(I=>I instanceof HA&&I.pokemon===A,new HA(A.scene,A,n.targets,R))}}}lapse(A,s){if(s===8){const R=A.getMoveset().find(n=>(n==null?void 0:n.moveId)===this.moveId);return!!(R&&(R==null?void 0:R.getPpRatio())>0)}else return super.lapse(A,s)}isMoveRestricted(A,s){return A!==this.moveId}selectionDeniedText(A,s){return D.t("battle:moveDisabled",{moveName:ye[s].name})}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:encoreOnRemove",{pokemonNameWithAffix:ee(A)}))}};L(Ry,"EncoreTag");let BS=Ry;const Oy=class Oy extends Wt{constructor(A){super(Y.HELPING_HAND,5,1,t.HELPING_HAND,A)}onAdd(A){A.scene.queueMessage(D.t("battlerTags:helpingHandOnAdd",{pokemonNameWithAffix:ee(A.scene.getPokemonById(this.sourceId)??void 0),pokemonName:ee(A)}))}};L(Oy,"HelpingHandTag");let bU=Oy;const ny=class ny extends gR{constructor(A){super(Y.INGRAIN,5,1,t.INGRAIN,A)}canAdd(A){return!A.getTag(Y.TRAPPED)}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&A.scene.unshiftPhase(new mE(A.scene,A.getBattlerIndex(),Yt(A.getMaxHp()/16),D.t("battlerTags:ingrainLapse",{pokemonNameWithAffix:ee(A)}),!0)),R}getTrapMessage(A){return D.t("battlerTags:ingrainOnTrap",{pokemonNameWithAffix:ee(A)})}getDescriptor(){return D.t("battlerTags:ingrainDesc")}};L(ny,"IngrainTag");let HG=ny;const iy=class iy extends gR{constructor(A){super(Y.OCTOLOCK,5,1,t.OCTOLOCK,A)}lapse(A,s){return s!==8||super.lapse(A,s)?(A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!1,[g.DEF,g.SPDEF],-1)),!0):!1}};L(iy,"OctolockTag");let dG=iy;const Iy=class Iy extends Wt{constructor(){super(Y.AQUA_RING,5,1,t.AQUA_RING,void 0,!0)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:aquaRingOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&A.scene.unshiftPhase(new mE(A.scene,A.getBattlerIndex(),Yt(A.getMaxHp()/16),D.t("battlerTags:aquaRingLapse",{moveName:this.getMoveName(),pokemonName:ee(A)}),!0)),R}};L(Iy,"AquaRingTag");let fG=Iy;const ay=class ay extends Wt{constructor(){super(Y.MINIMIZED,5,1,t.MINIMIZE)}onAdd(A){super.onAdd(A)}lapse(A,s){return s!==8||super.lapse(A,s)}onRemove(A){super.onRemove(A)}};L(ay,"MinimizeTag");let BG=ay;const ry=class ry extends Wt{constructor(){super(Y.DROWSY,5,2,t.YAWN)}canAdd(A){var s;return((s=A.scene.arena.terrain)==null?void 0:s.terrainType)!==Nt.ELECTRIC||!A.isGrounded()}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:drowsyOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){return super.lapse(A,s)?!0:(A.trySetStatus(Re.SLEEP,!0),!1)}getDescriptor(){return D.t("battlerTags:drowsyDesc")}};L(ry,"DrowsyTag");let gG=ry;const Ly=class Ly extends gR{constructor(A,s,R,n,I){super(A,5,R,n,I),this.commonAnim=s}loadTag(A){super.loadTag(A),this.commonAnim=A.commonAnim}canAdd(A){return!A.getTag(gR)&&!A.getTag(Y.SUBSTITUTE)}lapse(A,s){const R=super.lapse(A,s);if(R){A.scene.queueMessage(D.t("battlerTags:damagingTrapLapse",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()})),A.scene.unshiftPhase(new Is(A.scene,A.getBattlerIndex(),void 0,this.commonAnim));const n=new Lt(!1);Ct(DE,A,n),n.value||A.damageAndUpdate(Yt(A.getMaxHp()/8))}return R}};L(Ly,"DamagingTrapTag");let uO=Ly;const Ny=class Ny extends uO{constructor(A,s){super(Y.BIND,oA.BIND,A,t.BIND,s)}getTrapMessage(A){return D.t("battlerTags:bindOnTrap",{pokemonNameWithAffix:ee(A),sourcePokemonName:ee(A.scene.getPokemonById(this.sourceId)??void 0),moveName:this.getMoveName()})}};L(Ny,"BindTag");let KG=Ny;const Ty=class Ty extends uO{constructor(A,s){super(Y.WRAP,oA.WRAP,A,t.WRAP,s)}getTrapMessage(A){return D.t("battlerTags:wrapOnTrap",{pokemonNameWithAffix:ee(A),sourcePokemonName:ee(A.scene.getPokemonById(this.sourceId)??void 0)})}};L(Ty,"WrapTag");let mG=Ty;const Sy=class Sy extends uO{constructor(A,s,R,n,I){super(A,s,R,n,I)}getTrapMessage(A){return D.t("battlerTags:vortexOnTrap",{pokemonNameWithAffix:ee(A)})}};L(Sy,"VortexTrapTag");let kU=Sy;const oy=class oy extends kU{constructor(A,s){super(Y.FIRE_SPIN,oA.FIRE_SPIN,A,t.FIRE_SPIN,s)}};L(oy,"FireSpinTag");let FG=oy;const ly=class ly extends kU{constructor(A,s){super(Y.WHIRLPOOL,oA.WHIRLPOOL,A,t.WHIRLPOOL,s)}};L(ly,"WhirlpoolTag");let pG=ly;const Cy=class Cy extends uO{constructor(A,s){super(Y.CLAMP,oA.CLAMP,A,t.CLAMP,s)}getTrapMessage(A){return D.t("battlerTags:clampOnTrap",{sourcePokemonNameWithAffix:ee(A.scene.getPokemonById(this.sourceId)??void 0),pokemonName:ee(A)})}};L(Cy,"ClampTag");let WG=Cy;const Uy=class Uy extends uO{constructor(A,s){super(Y.SAND_TOMB,oA.SAND_TOMB,A,t.SAND_TOMB,s)}getTrapMessage(A){return D.t("battlerTags:sandTombOnTrap",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()})}};L(Uy,"SandTombTag");let YG=Uy;const uy=class uy extends uO{constructor(A,s){super(Y.MAGMA_STORM,oA.MAGMA_STORM,A,t.MAGMA_STORM,s)}getTrapMessage(A){return D.t("battlerTags:magmaStormOnTrap",{pokemonNameWithAffix:ee(A)})}};L(uy,"MagmaStormTag");let yG=uy;const Dy=class Dy extends uO{constructor(A,s){super(Y.SNAP_TRAP,oA.SNAP_TRAP,A,t.SNAP_TRAP,s)}getTrapMessage(A){return D.t("battlerTags:snapTrapOnTrap",{pokemonNameWithAffix:ee(A)})}};L(Dy,"SnapTrapTag");let wG=Dy;const My=class My extends uO{constructor(A,s){super(Y.THUNDER_CAGE,oA.THUNDER_CAGE,A,t.THUNDER_CAGE,s)}getTrapMessage(A){return D.t("battlerTags:thunderCageOnTrap",{pokemonNameWithAffix:ee(A),sourcePokemonNameWithAffix:ee(A.scene.getPokemonById(this.sourceId)??void 0)})}};L(My,"ThunderCageTag");let vG=My;const hy=class hy extends uO{constructor(A,s){super(Y.INFESTATION,oA.INFESTATION,A,t.INFESTATION,s)}getTrapMessage(A){return D.t("battlerTags:infestationOnTrap",{pokemonNameWithAffix:ee(A),sourcePokemonNameWithAffix:ee(A.scene.getPokemonById(this.sourceId)??void 0)})}};L(hy,"InfestationTag");let VG=hy;const cy=class cy extends Wt{constructor(A,s=Y.PROTECTED){super(s,5,0,A)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:protectedOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){if(s===8){new Qi(oA.PROTECT,A).play(A.scene),A.scene.queueMessage(D.t("battlerTags:protectedLapse",{pokemonNameWithAffix:ee(A)}));const R=A.scene.getCurrentPhase();return R instanceof NR&&R.stopMultiHit(A),!0}return super.lapse(A,s)}};L(cy,"ProtectedTag");let Xi=cy;const _y=class _y extends Xi{};L(_y,"DamageProtectedTag");let vr=_y;const Py=class Py extends Xi{constructor(A,s){super(A,Y.SPIKY_SHIELD),this.damageRatio=s}loadTag(A){super.loadTag(A),this.damageRatio=A.damageRatio}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=A.scene.getCurrentPhase();if(n instanceof NR&&n.move.getMove().hasFlag(tA.MAKES_CONTACT)){const I=n.getPokemon();I.hasAbilityWithAttr(DE)||I.damageAndUpdate(Yt(I.getMaxHp()*(1/this.damageRatio)),wt.OTHER)}}return R}};L(Py,"ContactDamageProtectedTag");let xG=Py;const Gy=class Gy extends vr{constructor(A,s,R,n){super(A,s),this.stat=R,this.levels=n}loadTag(A){super.loadTag(A),this.stat=A.stat,this.levels=A.levels}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=A.scene.getCurrentPhase();if(n instanceof NR&&n.move.getMove().hasFlag(tA.MAKES_CONTACT)){const I=n.getPokemon();A.scene.unshiftPhase(new Jt(A.scene,I.getBattlerIndex(),!1,[this.stat],this.levels))}}return R}};L(Gy,"ContactStatStageChangeProtectedTag");let xL=Gy;const Hy=class Hy extends Xi{constructor(A){super(A,Y.BANEFUL_BUNKER)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=A.scene.getCurrentPhase();n instanceof NR&&n.move.getMove().hasFlag(tA.MAKES_CONTACT)&&n.getPokemon().trySetStatus(Re.POISON,!0,A)}return R}};L(Hy,"ContactPoisonProtectedTag");let bG=Hy;const dy=class dy extends vr{constructor(A){super(A,Y.BURNING_BULWARK)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=A.scene.getCurrentPhase();n instanceof NR&&n.move.getMove().hasFlag(tA.MAKES_CONTACT)&&n.getPokemon().trySetStatus(Re.BURN,!0)}return R}};L(dy,"ContactBurnProtectedTag");let kG=dy;const fy=class fy extends Wt{constructor(A,s,R){super(A,s,0,R)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:enduringOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){return s===8?(A.scene.queueMessage(D.t("battlerTags:enduringLapse",{pokemonNameWithAffix:ee(A)})),!0):super.lapse(A,s)}};L(fy,"EnduringTag");let ZU=fy;const By=class By extends Wt{constructor(A){super(Y.STURDY,5,0,A)}lapse(A,s){return s===8?(A.scene.queueMessage(D.t("battlerTags:sturdyLapse",{pokemonNameWithAffix:ee(A)})),!0):super.lapse(A,s)}};L(By,"SturdyTag");let ZG=By;const gy=class gy extends Wt{constructor(A){super(Y.PERISH_SONG,5,A,t.PERISH_SONG,void 0,!0)}canAdd(A){return!A.isBossImmune()}lapse(A,s){const R=super.lapse(A,s);return R?A.scene.queueMessage(D.t("battlerTags:perishSongLapse",{pokemonNameWithAffix:ee(A),turnCount:this.turnCount})):A.damageAndUpdate(A.hp,wt.ONE_HIT_KO,!1,!0,!0),R}};L(gy,"PerishSongTag");let XG=gy;const Ky=class Ky extends Wt{constructor(A){super(Y.CENTER_OF_ATTENTION,5,1,A),this.powder=this.sourceMove===t.RAGE_POWDER}canAdd(A){return!(A.isPlayer()?A.scene.getPlayerField():A.scene.getEnemyField()).find(R=>R.getTag(Y.CENTER_OF_ATTENTION))}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:centerOfAttentionOnAdd",{pokemonNameWithAffix:ee(A)}))}};L(Ky,"CenterOfAttentionTag");let XU=Ky;const my=class my extends Wt{constructor(A,s,R,n){super(A,R,n),this.ability=s}loadTag(A){super.loadTag(A),this.ability=A.ability}};L(my,"AbilityBattlerTag");let Vr=my;const Fy=class Fy extends Vr{constructor(){super(Y.UNBURDEN,O.UNBURDEN,8,1)}onAdd(A){super.onAdd(A)}onRemove(A){super.onRemove(A)}};L(Fy,"UnburdenTag");let QG=Fy;const py=class py extends Vr{constructor(){super(Y.TRUANT,O.TRUANT,1,1)}lapse(A,s){if(!A.hasAbility(O.TRUANT))return super.lapse(A,s);const R=A.getAbility().id!==O.TRUANT,n=A.getLastXMoves().find(()=>!0);return n&&n.move!==t.NONE&&(A.scene.getCurrentPhase().cancel(),A.scene.unshiftPhase(new bn(A.scene,A.id,R)),A.scene.queueMessage(D.t("battlerTags:truantLapse",{pokemonNameWithAffix:ee(A)}))),!0}};L(py,"TruantTag");let JG=py;const Wy=class Wy extends Vr{constructor(){super(Y.SLOW_START,O.SLOW_START,5,5)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:slowStartOnAdd",{pokemonNameWithAffix:ee(A)}),null,!1,null,!0)}lapse(A,s){return A.hasAbility(this.ability)||(this.turnCount=1),super.lapse(A,s)}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:slowStartOnRemove",{pokemonNameWithAffix:ee(A)}),null,!1,null)}};L(Wy,"SlowStartTag");let $G=Wy;const Yy=class Yy extends Vr{constructor(A,s){super(A,s,8,1)}loadTag(A){super.loadTag(A),this.stat=A.stat,this.multiplier=A.multiplier}onAdd(A){super.onAdd(A);let s;switch(Vn.map(R=>A.getEffectiveStat(R)).reduce((R,n,I)=>n>R?(s=Vn[I],n):R,0),s=s,this.stat=s,this.stat){case g.SPD:this.multiplier=1.5;break;default:this.multiplier=1.3;break}A.scene.queueMessage(D.t("battlerTags:highestStatBoostOnAdd",{pokemonNameWithAffix:ee(A),statName:D.t(_E(s))}),null,!1,null,!0)}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:highestStatBoostOnRemove",{pokemonNameWithAffix:ee(A),abilityName:LE[this.ability].name}))}};L(Yy,"HighestStatBoostTag");let gS=Yy;const yy=class yy extends gS{constructor(A,s,...R){super(A,s),this.weatherTypes=R}loadTag(A){super.loadTag(A),this.weatherTypes=A.weatherTypes.map(s=>s)}};L(yy,"WeatherHighestStatBoostTag");let zG=yy;const wy=class wy extends gS{constructor(A,s,...R){super(A,s),this.terrainTypes=R}loadTag(A){super.loadTag(A),this.terrainTypes=A.terrainTypes.map(s=>s)}};L(wy,"TerrainHighestStatBoostTag");let qG=wy;const vy=class vy extends Wt{constructor(A,s,R){super(A,4,s,R)}onAdd(A){super.onAdd(A),A.setVisible(!1)}onRemove(A){A.scene.tweens.addCounter({duration:NE(2),onComplete:L(()=>A.setVisible(!0),"onComplete")})}};L(vy,"SemiInvulnerableTag");let Tn=vy;const Vy=class Vy extends Wt{constructor(A,s,R,n=1){super(A,5,n,s,void 0,!0),this.immuneType=R}loadTag(A){super.loadTag(A),this.immuneType=A.immuneType}};L(Vy,"TypeImmuneTag");let QU=Vy;const xy=class xy extends QU{constructor(A,s,R){super(A,s,i.GROUND,R)}onAdd(A){super.onAdd(A),this.sourceMove===t.MAGNET_RISE&&A.scene.queueMessage(D.t("battlerTags:magnetRisenOnAdd",{pokemonNameWithAffix:ee(A)}))}onRemove(A){super.onRemove(A),this.sourceMove===t.MAGNET_RISE&&A.scene.queueMessage(D.t("battlerTags:magnetRisenOnRemove",{pokemonNameWithAffix:ee(A)}))}};L(xy,"FloatingTag");let jG=xy;const by=class by extends Wt{constructor(A,s,R,n,I){super(A,5,1,s),this.boostedType=R,this.boostValue=n,this.oneUse=I}loadTag(A){super.loadTag(A),this.boostedType=A.boostedType,this.boostValue=A.boostValue,this.oneUse=A.oneUse}lapse(A,s){return s!==8||super.lapse(A,s)}};L(by,"TypeBoostTag");let xr=by;const ky=class ky extends Wt{constructor(A,s){super(A,5,1,s,void 0,!0)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:critBoostOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){return s!==8||super.lapse(A,s)}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battlerTags:critBoostOnRemove",{pokemonNameWithAffix:ee(A)}))}};L(ky,"CritBoostTag");let KS=ky;const Zy=class Zy extends KS{constructor(){super(Y.CRIT_BOOST,t.DRAGON_CHEER)}onAdd(A){super.onAdd(A),this.typesOnAdd=A.getTypes(!0)}};L(Zy,"DragonCheerTag");let JU=Zy;const Xy=class Xy extends Wt{constructor(A){super(Y.SALT_CURED,5,1,t.SALT_CURE,A)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:saltCuredOnAdd",{pokemonNameWithAffix:ee(A)})),this.sourceIndex=A.scene.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){A.scene.unshiftPhase(new Is(A.scene,A.getBattlerIndex(),A.getBattlerIndex(),oA.SALT_CURE));const n=new Lt(!1);if(Ct(DE,A,n),!n.value){const I=A.isOfType(i.STEEL)||A.isOfType(i.WATER);A.damageAndUpdate(Yt(I?A.getMaxHp()/4:A.getMaxHp()/8)),A.scene.queueMessage(D.t("battlerTags:saltCuredLapse",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()}))}}return R}};L(Xy,"SaltCuredTag");let eH=Xy;const Qy=class Qy extends Wt{constructor(A){super(Y.CURSED,5,1,t.CURSE,A,!0)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}onAdd(A){super.onAdd(A),this.sourceIndex=A.scene.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){A.scene.unshiftPhase(new Is(A.scene,A.getBattlerIndex(),A.getBattlerIndex(),oA.SALT_CURE));const n=new Lt(!1);Ct(DE,A,n),n.value||(A.damageAndUpdate(Yt(A.getMaxHp()/4)),A.scene.queueMessage(D.t("battlerTags:cursedLapse",{pokemonNameWithAffix:ee(A)})))}return R}};L(Qy,"CursedTag");let tH=Qy;const Jy=class Jy extends Wt{constructor(A,s,R){super(A,s,1,R)}};L(Jy,"RemovedTypeTag");let mS=Jy;const $y=class $y extends Wt{constructor(A,s,R){super(A,s,1,R)}};L($y,"GroundedTag");let FS=$y;const zy=class zy extends Wt{constructor(){super(Y.ROOSTED,5,1,t.ROOST)}onRemove(A){const s=A.getTypes(),R=A.getTypes(!1,!1,!0),n=s.includes(i.GRASS)&&!R.includes(i.GRASS),I=s.includes(i.GHOST)&&!R.includes(i.GHOST);if(this.isBaseFlying){let a=[];this.isBasePureFlying?n||I?(a=s.filter(r=>r!==i.NORMAL),a.push(i.FLYING)):a=[i.FLYING]:(a=[...s],a.push(i.FLYING)),A.summonData.types=a,A.updateInfo()}}onAdd(A){const s=A.getTypes(),R=A.getTypes(!1,!1,!0),n=R.length===2,I=s.length===2;if(this.isBaseFlying=R.includes(i.FLYING),this.isBasePureFlying=R[0]===i.FLYING&&R.length===1,this.isBaseFlying){let a;this.isBasePureFlying&&!I?a=[i.NORMAL]:A.getTag(mS)&&n&&!I?a=[i.UNKNOWN]:a=s.filter(r=>r!==i.FLYING),A.summonData.types=a,A.updateInfo()}}};L(zy,"RoostedTag");let AH=zy;const qy=class qy extends Wt{constructor(A){super(A,8,1)}canAdd(A){return A.formIndex===0}onAdd(A){super.onAdd(A),A.formIndex!==0&&A.scene.triggerPokemonFormChange(A,bt)}onRemove(A){super.onRemove(A),A.scene.triggerPokemonFormChange(A,bt)}};L(qy,"FormBlockDamageTag");let $U=qy;const jy=class jy extends $U{constructor(A){super(A)}canAdd(A){var n;const s=(n=A.scene.arena.weather)==null?void 0:n.weatherType,R=s===se.HAIL||s===se.SNOW;return super.canAdd(A)||R}};L(jy,"IceFaceBlockDamageTag");let EH=jy;const ew=class ew extends Wt{constructor(A){super(Y.COMMANDED,8,0,t.NONE,A)}get tatsugiriFormKey(){return this._tatsugiriFormKey}onAdd(A){var s;this._tatsugiriFormKey=((s=this.getSourcePokemon(A.scene))==null?void 0:s.getFormKey())??"curly",A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],2))}onRemove(A){var s;(s=this.getSourcePokemon(A.scene))!=null&&s.isActive(!0)&&A.scene.triggerPokemonBattleAnim(A,PR.COMMANDER_REMOVE)}loadTag(A){super.loadTag(A),this._tatsugiriFormKey=A._tatsugiriFormKey}};L(ew,"CommandedTag");let zU=ew;const tw=class tw extends Wt{constructor(A=t.NONE){super(Y.STOCKPILING,8,1,A),this.stockpiledCount=0,this.statChangeCounts={[g.DEF]:0,[g.SPDEF]:0},this.onStatStagesChanged=(s,R,n)=>{const I=n[R.indexOf(g.DEF)]??0,a=n[R.indexOf(g.SPDEF)]??0;I&&this.statChangeCounts[g.DEF]++,a&&this.statChangeCounts[g.SPDEF]++}}loadTag(A){var s,R;super.loadTag(A),this.stockpiledCount=A.stockpiledCount||0,this.statChangeCounts={[g.DEF]:((s=A.statChangeCounts)==null?void 0:s[g.DEF])??0,[g.SPDEF]:((R=A.statChangeCounts)==null?void 0:R[g.SPDEF])??0}}onAdd(A){this.stockpiledCount<3&&(this.stockpiledCount++,A.scene.queueMessage(D.t("battlerTags:stockpilingOnAdd",{pokemonNameWithAffix:ee(A),stockpiledCount:this.stockpiledCount})),A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[g.SPDEF,g.DEF],1,!0,!1,!0,this.onStatStagesChanged)))}onOverlap(A){this.onAdd(A)}onRemove(A){const s=this.statChangeCounts[g.DEF],R=this.statChangeCounts[g.SPDEF];s&&A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[g.DEF],-s,!0,!1,!0)),R&&A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[g.SPDEF],-R,!0,!1,!0))}};L(tw,"StockpilingTag");let Oa=tw;const Aw=class Aw extends Wt{constructor(A,s){super(A,6,0,s)}lapse(A,s){if(A.getTag(Y.UNDERWATER))return!0;const R=A.scene.getCurrentPhase();if(R instanceof NR){const n=R.getUserPokemon();if(!n)return!1;if(R.move.getMove().hitsSubstitute(n,A))return!0;const I=new Lt(!1);Ct(DE,n,I),I.value||n.damageAndUpdate(Math.max(1,Math.floor(n.getMaxHp()/4)),wt.OTHER),this.tagType===Y.GULP_MISSILE_ARROKUDA?A.scene.unshiftPhase(new Jt(A.scene,n.getBattlerIndex(),!1,[g.DEF],-1)):n.trySetStatus(Re.PARALYSIS,!0,A)}return!1}canAdd(A){const s=[t.SURF,t.DIVE].includes(this.sourceMove),R=A.formIndex===0&&!A.getTag(Y.GULP_MISSILE_ARROKUDA)&&!A.getTag(Y.GULP_MISSILE_PIKACHU),n=A.species.speciesId===e.CRAMORANT;return s&&R&&n}onAdd(A){super.onAdd(A),A.scene.triggerPokemonFormChange(A,bt)}onRemove(A){super.onRemove(A),A.scene.triggerPokemonFormChange(A,bt)}};L(Aw,"GulpMissileTag");let qU=Aw;const Ew=class Ew extends Wt{constructor(A,s,R,n){super(A,8,1,s),this.defenderType=R,this.allowedTypes=n}loadTag(A){super.loadTag(A),this.defenderType=A.defenderType,this.allowedTypes=A.allowedTypes}ignoreImmunity(A,s){return A===this.defenderType&&this.allowedTypes.includes(s)}};L(Ew,"ExposedTag");let br=Ew;const sw=class sw extends UO{constructor(A,s){super(Y.HEAL_BLOCK,[2,5],A,s)}onActivation(A){return D.t("battle:battlerTagsHealBlock",{pokemonNameWithAffix:ee(A)})}isMoveRestricted(A){return!!(ye[A].hasFlag(tA.TRIAGE_MOVE)&&ye[A].category===Mt.STATUS)}isMoveTargetRestricted(A,s,R){const n=new Rt(ye[A].category);return MA(bu,s,R,ye[A],n),!!(ye[A].hasAttr(Cu)&&n.value===Mt.STATUS)}selectionDeniedText(A,s){return D.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:ee(A),moveName:ye[s].name,healBlockName:ye[t.HEAL_BLOCK].name})}interruptedText(A,s){return D.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:ee(A),moveName:ye[s].name,healBlockName:ye[t.HEAL_BLOCK].name})}onRemove(A){super.onRemove(A),A.scene.queueMessage(D.t("battle:battlerTagsHealBlockOnRemove",{pokemonNameWithAffix:ee(A)}),null,!1,null)}};L(sw,"HealBlockTag");let sH=sw;const Rw=class Rw extends Wt{constructor(){super(Y.TAR_SHOT,8,0)}canAdd(A){return!A.isTerastallized()}onAdd(A){A.scene.queueMessage(D.t("battlerTags:tarShotOnAdd",{pokemonNameWithAffix:ee(A)}))}};L(Rw,"TarShotTag");let jU=Rw;const Ow=class Ow extends Wt{constructor(){super(Y.ELECTRIFIED,5,1,t.ELECTRIFY)}onAdd(A){A.scene.queueMessage(D.t("battlerTags:electrifiedOnAdd",{pokemonNameWithAffix:ee(A)}))}};L(Ow,"ElectrifiedTag");let RH=Ow;const nw=class nw extends Wt{constructor(A=t.AUTOTOMIZE){super(Y.AUTOTOMIZED,8,1,A),this.autotomizeCount=0}onAdd(A){A.getWeight()>.1&&A.scene.queueMessage(D.t("battlerTags:autotomizeOnAdd",{pokemonNameWithAffix:ee(A)})),this.autotomizeCount+=1}onOverlap(A){this.onAdd(A)}};L(nw,"AutotomizedTag");let eu=nw;const iw=class iw extends Wt{constructor(A,s){super(Y.SUBSTITUTE,[2,3,6],0,A,s,!0)}onAdd(A){this.hp=Math.floor(A.scene.getPokemonById(this.sourceId).getMaxHp()/4),this.sourceInFocus=!1,A.scene.triggerPokemonBattleAnim(A,PR.SUBSTITUTE_ADD),this.sourceMove===t.SHED_TAIL?A.scene.queueMessage(D.t("battlerTags:shedTailOnAdd",{pokemonNameWithAffix:ee(A)}),1500):A.scene.queueMessage(D.t("battlerTags:substituteOnAdd",{pokemonNameWithAffix:ee(A)}),1500),A.findAndRemoveTags(s=>s instanceof uO)}onRemove(A){this.sourceInFocus?this.sprite.destroy():A.scene.triggerPokemonBattleAnim(A,PR.SUBSTITUTE_REMOVE,[this.sprite]),A.scene.queueMessage(D.t("battlerTags:substituteOnRemove",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){switch(s){case 2:this.onPreMove(A);break;case 3:this.onAfterMove(A);break;case 6:this.onHit(A);break}return s!==8}onPreMove(A){A.scene.triggerPokemonBattleAnim(A,PR.SUBSTITUTE_PRE_MOVE,[this.sprite]),this.sourceInFocus=!0}onAfterMove(A){A.scene.triggerPokemonBattleAnim(A,PR.SUBSTITUTE_POST_MOVE,[this.sprite]),this.sourceInFocus=!1}onHit(A){const s=A.scene.getCurrentPhase();if(s instanceof NR){const R=s.getUserPokemon();if(!R)return;const n=s.move.getMove();R.turnData.hitCount===R.turnData.hitsLeft&&n.hitsSubstitute(R,A)&&A.scene.queueMessage(D.t("battlerTags:substituteOnHit",{pokemonNameWithAffix:ee(A)}))}}loadTag(A){super.loadTag(A),this.hp=A.hp}};L(iw,"SubstituteTag");let KE=iw;const Iw=class Iw extends Wt{constructor(){super(Y.MYSTERY_ENCOUNTER_POST_SUMMON,8,1)}onAdd(A){super.onAdd(A)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=new Lt(!1);Ct(bR,A,n),n.value||A.mysteryEncounterBattleEffects&&A.mysteryEncounterBattleEffects(A)}return R}onRemove(A){super.onRemove(A)}};L(Iw,"MysteryEncounterPostSummonTag");let tu=Iw;const aw=class aw extends UO{constructor(A){super(Y.TORMENT,3,1,t.TORMENT,A)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:tormentOnAdd",{pokemonNameWithAffix:ee(A)}),1500)}lapse(A,s){return A.isActive(!0)}isMoveRestricted(A,s){if(!s)return!1;const R=s.getLastXMoves(1)[0];if(!R)return!1;const I=ye[R.move].hasAttr(Lr)||s.getTag(Y.FRENZY),a=R.result===CA.SUCCESS||R.result===CA.MISS;return!!(R.move===A&&a&&R.move!==t.STRUGGLE&&!I)}selectionDeniedText(A,s){return D.t("battle:moveDisabledTorment",{pokemonNameWithAffix:ee(A)})}};L(aw,"TormentTag");let OH=aw;const rw=class rw extends UO{constructor(){super(Y.TAUNT,[2,3],4,t.TAUNT)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:tauntOnAdd",{pokemonNameWithAffix:ee(A)}),1500)}isMoveRestricted(A){return ye[A].category===Mt.STATUS}selectionDeniedText(A,s){return D.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:ee(A),moveName:ye[s].name})}interruptedText(A,s){return D.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:ee(A),moveName:ye[s].name})}};L(rw,"TauntTag");let nH=rw;const Lw=class Lw extends UO{constructor(A){super(Y.IMPRISON,[2,3],1,t.IMPRISON,A)}lapse(A,s){const R=this.getSourcePokemon(A.scene);return R?s===2?super.lapse(A,s)&&R.isActive(!0):R.isActive(!0):!1}isMoveRestricted(A,s){const R=this.getSourcePokemon(s.scene);if(R){const n=R.getMoveset().map(I=>I.moveId);return(n==null?void 0:n.includes(A))&&R.isActive(!0)}return!1}selectionDeniedText(A,s){return D.t("battle:moveDisabledImprison",{pokemonNameWithAffix:ee(A),moveName:ye[s].name})}interruptedText(A,s){return D.t("battle:moveDisabledImprison",{pokemonNameWithAffix:ee(A),moveName:ye[s].name})}};L(Lw,"ImprisonTag");let iH=Lw;const Nw=class Nw extends Wt{constructor(A){super(Y.SYRUP_BOMB,5,3,t.SYRUP_BOMB,A)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:syrupBombOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){var R;return this.sourceId&&!((R=A.scene.getPokemonById(this.sourceId))!=null&&R.isActive(!0))?!1:(A.scene.queueMessage(D.t("battlerTags:syrupBombLapse",{pokemonNameWithAffix:ee(A)})),A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[g.SPD],-1,!0,!1,!0)),--this.turnCount>0)}};L(Nw,"SyrupBombTag");let IH=Nw;const Tw=class Tw extends Wt{constructor(A){super(Y.TELEKINESIS,[2,3],3,A,void 0,!0)}onAdd(A){A.scene.queueMessage(D.t("battlerTags:telekinesisOnAdd",{pokemonNameWithAffix:ee(A)}))}};L(Tw,"TelekinesisTag");let aH=Tw;const Sw=class Sw extends Wt{constructor(A,s){super(Y.POWER_TRICK,8,0,A,s,!0)}onAdd(A){this.swapStat(A),A.scene.queueMessage(D.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:ee(A)}))}onRemove(A){this.swapStat(A),A.scene.queueMessage(D.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:ee(A)}))}onOverlap(A){A.removeTag(this.tagType)}swapStat(A){const s=A.getStat(g.ATK,!1);A.setStat(g.ATK,A.getStat(g.DEF,!1),!1),A.setStat(g.DEF,s,!1)}};L(Sw,"PowerTrickTag");let Au=Sw;const ow=class ow extends Wt{constructor(){super(Y.GRUDGE,[8,2],1,t.GRUDGE)}onAdd(A){super.onAdd(A),A.scene.queueMessage(D.t("battlerTags:grudgeOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s,R){if(s===8&&R){if(R.isActive()&&A.isOpponent(R)){const n=A.turnData.attacksReceived[0],I=R.getMoveset().find(a=>(a==null?void 0:a.moveId)===n.move);I&&n.move!==t.STRUGGLE&&(I.ppUsed=I.getMovePp(),A.scene.queueMessage(D.t("battlerTags:grudgeLapse",{pokemonNameWithAffix:ee(A),moveName:I.getName()})))}return!1}else return super.lapse(A,s)}};L(ow,"GrudgeTag");let rH=ow;const lw=class lw extends Wt{constructor(){super(Y.PSYCHO_SHIFT,3,1,t.PSYCHO_SHIFT)}lapse(A,s){return A.status&&A.isActive(!0)&&(A.scene.queueMessage(EI(A.status.effect,ee(A))),A.resetStatus(),A.updateInfo()),!1}};L(lw,"PsychoShiftTag");let LH=lw;function A8(E,A,s,R){switch(E){case Y.RECHARGING:return new oG(s);case Y.BEAK_BLAST_CHARGING:return new lG;case Y.SHELL_TRAP:return new xU;case Y.FLINCHED:return new UG(s);case Y.INTERRUPTED:return new uG(s);case Y.CONFUSED:return new DG(A,s);case Y.INFATUATED:return new hG(s,R);case Y.SEEDED:return new cG(R);case Y.POWDER:return new _G;case Y.NIGHTMARE:return new PG;case Y.FRENZY:return new GG(A,s,R);case Y.CHARGING:return new Wt(E,8,1,s,R);case Y.ENCORE:return new BS(R);case Y.HELPING_HAND:return new bU(R);case Y.INGRAIN:return new HG(R);case Y.AQUA_RING:return new fG;case Y.DROWSY:return new gG;case Y.TRAPPED:return new gR(E,8,A,s,R);case Y.NO_RETREAT:return new CG(R);case Y.BIND:return new KG(A,R);case Y.WRAP:return new mG(A,R);case Y.FIRE_SPIN:return new FG(A,R);case Y.WHIRLPOOL:return new pG(A,R);case Y.CLAMP:return new WG(A,R);case Y.SAND_TOMB:return new YG(A,R);case Y.MAGMA_STORM:return new yG(A,R);case Y.SNAP_TRAP:return new wG(A,R);case Y.THUNDER_CAGE:return new vG(A,R);case Y.INFESTATION:return new VG(A,R);case Y.PROTECTED:return new Xi(s);case Y.SPIKY_SHIELD:return new xG(s,8);case Y.KINGS_SHIELD:return new xL(s,E,g.ATK,-1);case Y.OBSTRUCT:return new xL(s,E,g.DEF,-2);case Y.SILK_TRAP:return new xL(s,E,g.SPD,-1);case Y.BANEFUL_BUNKER:return new bG(s);case Y.BURNING_BULWARK:return new kG(s);case Y.ENDURING:return new ZU(E,5,s);case Y.ENDURE_TOKEN:return new ZU(E,7,s);case Y.STURDY:return new ZG(s);case Y.PERISH_SONG:return new XG(A);case Y.CENTER_OF_ATTENTION:return new XU(s);case Y.TRUANT:return new JG;case Y.SLOW_START:return new $G;case Y.PROTOSYNTHESIS:return new zG(E,O.PROTOSYNTHESIS,se.SUNNY,se.HARSH_SUN);case Y.QUARK_DRIVE:return new qG(E,O.QUARK_DRIVE,Nt.ELECTRIC);case Y.FLYING:case Y.UNDERGROUND:case Y.UNDERWATER:case Y.HIDDEN:return new Tn(E,A,s);case Y.FIRE_BOOST:return new xr(E,s,i.FIRE,1.5,!1);case Y.CRIT_BOOST:return new KS(E,s);case Y.DRAGON_CHEER:return new JU;case Y.ALWAYS_CRIT:case Y.IGNORE_ACCURACY:return new Wt(E,5,2,s);case Y.ALWAYS_GET_HIT:case Y.RECEIVE_DOUBLE_DAMAGE:return new Wt(E,2,1,s);case Y.BYPASS_SLEEP:return new Wt(E,5,A,s);case Y.IGNORE_FLYING:return new FS(E,8,s);case Y.ROOSTED:return new AH;case Y.BURNED_UP:return new mS(E,8,s);case Y.DOUBLE_SHOCKED:return new mS(E,8,s);case Y.SALT_CURED:return new eH(R);case Y.CURSED:return new tH(R);case Y.CHARGED:return new xr(E,s,i.ELECTRIC,2,!0);case Y.FLOATING:return new jG(E,s,A);case Y.MINIMIZED:return new BG;case Y.DESTINY_BOND:return new MG(s,R);case Y.ICE_FACE:return new EH(E);case Y.DISGUISE:return new $U(E);case Y.COMMANDED:return new zU(R);case Y.STOCKPILING:return new Oa(s);case Y.OCTOLOCK:return new dG(R);case Y.DISABLED:return new TG(R);case Y.IGNORE_GHOST:return new br(E,s,i.GHOST,[i.NORMAL,i.FIGHTING]);case Y.IGNORE_DARK:return new br(E,s,i.DARK,[i.PSYCHIC]);case Y.GULP_MISSILE_ARROKUDA:case Y.GULP_MISSILE_PIKACHU:return new qU(E,s);case Y.TAR_SHOT:return new jU;case Y.ELECTRIFIED:return new RH;case Y.THROAT_CHOPPED:return new NG;case Y.GORILLA_TACTICS:return new SG;case Y.UNBURDEN:return new QG;case Y.SUBSTITUTE:return new KE(s,R);case Y.AUTOTOMIZED:return new eu;case Y.MYSTERY_ENCOUNTER_POST_SUMMON:return new tu;case Y.HEAL_BLOCK:return new sH(A,s);case Y.TORMENT:return new OH(R);case Y.TAUNT:return new nH;case Y.IMPRISON:return new iH(R);case Y.SYRUP_BOMB:return new IH(R);case Y.TELEKINESIS:return new aH(s);case Y.POWER_TRICK:return new Au(s,R);case Y.GRUDGE:return new rH;case Y.PSYCHO_SHIFT:return new LH;case Y.NONE:default:return new Wt(E,8,A,s,R)}}L(A8,"getBattlerTag");function qQ(E){const A=A8(E.tagType,E.turnCount,E.sourceMove,E.sourceId);return A.loadTag(E),A}L(qQ,"loadBattlerTag");function E8(E){const A=E.scene.getCurrentPhase();return A instanceof NR?{phase:A,attacker:A.getPokemon(),move:A.move.getMove()}:null}L(E8,"getMoveEffectPhaseData");var NH=(E=>(E[E.USER=0]="USER",E[E.TARGET=1]="TARGET",E[E.GRAPHIC=2]="GRAPHIC",E))(NH||{}),Zn=(E=>(E[E.FLY_CHARGING=1e3]="FLY_CHARGING",E[E.BOUNCE_CHARGING=1001]="BOUNCE_CHARGING",E[E.DIG_CHARGING=1002]="DIG_CHARGING",E[E.FUTURE_SIGHT_CHARGING=1003]="FUTURE_SIGHT_CHARGING",E[E.DIVE_CHARGING=1004]="DIVE_CHARGING",E[E.SOLAR_BEAM_CHARGING=1005]="SOLAR_BEAM_CHARGING",E[E.SHADOW_FORCE_CHARGING=1006]="SHADOW_FORCE_CHARGING",E[E.SKULL_BASH_CHARGING=1007]="SKULL_BASH_CHARGING",E[E.FREEZE_SHOCK_CHARGING=1008]="FREEZE_SHOCK_CHARGING",E[E.SKY_DROP_CHARGING=1009]="SKY_DROP_CHARGING",E[E.SKY_ATTACK_CHARGING=1010]="SKY_ATTACK_CHARGING",E[E.ICE_BURN_CHARGING=1011]="ICE_BURN_CHARGING",E[E.DOOM_DESIRE_CHARGING=1012]="DOOM_DESIRE_CHARGING",E[E.RAZOR_WIND_CHARGING=1013]="RAZOR_WIND_CHARGING",E[E.PHANTOM_FORCE_CHARGING=1014]="PHANTOM_FORCE_CHARGING",E[E.GEOMANCY_CHARGING=1015]="GEOMANCY_CHARGING",E[E.SHADOW_BLADE_CHARGING=1016]="SHADOW_BLADE_CHARGING",E[E.SOLAR_BLADE_CHARGING=1017]="SOLAR_BLADE_CHARGING",E[E.BEAK_BLAST_CHARGING=1018]="BEAK_BLAST_CHARGING",E[E.METEOR_BEAM_CHARGING=1019]="METEOR_BEAM_CHARGING",E[E.ELECTRO_SHOT_CHARGING=1020]="ELECTRO_SHOT_CHARGING",E))(Zn||{}),oA=(E=>(E[E.USE_ITEM=2e3]="USE_ITEM",E[E.HEALTH_UP=2001]="HEALTH_UP",E[E.POISON=2010]="POISON",E[E.TOXIC=2011]="TOXIC",E[E.PARALYSIS=2012]="PARALYSIS",E[E.SLEEP=2013]="SLEEP",E[E.FROZEN=2014]="FROZEN",E[E.BURN=2015]="BURN",E[E.CONFUSION=2016]="CONFUSION",E[E.ATTRACT=2017]="ATTRACT",E[E.BIND=2018]="BIND",E[E.WRAP=2019]="WRAP",E[E.CURSE_NO_GHOST=2020]="CURSE_NO_GHOST",E[E.LEECH_SEED=2021]="LEECH_SEED",E[E.FIRE_SPIN=2022]="FIRE_SPIN",E[E.PROTECT=2023]="PROTECT",E[E.COVET=2024]="COVET",E[E.WHIRLPOOL=2025]="WHIRLPOOL",E[E.BIDE=2026]="BIDE",E[E.SAND_TOMB=2027]="SAND_TOMB",E[E.QUICK_GUARD=2028]="QUICK_GUARD",E[E.WIDE_GUARD=2029]="WIDE_GUARD",E[E.CURSE=2030]="CURSE",E[E.MAGMA_STORM=2031]="MAGMA_STORM",E[E.CLAMP=2032]="CLAMP",E[E.SNAP_TRAP=2033]="SNAP_TRAP",E[E.THUNDER_CAGE=2034]="THUNDER_CAGE",E[E.INFESTATION=2035]="INFESTATION",E[E.ORDER_UP_CURLY=2036]="ORDER_UP_CURLY",E[E.ORDER_UP_DROOPY=2037]="ORDER_UP_DROOPY",E[E.ORDER_UP_STRETCHY=2038]="ORDER_UP_STRETCHY",E[E.RAGING_BULL_FIRE=2039]="RAGING_BULL_FIRE",E[E.RAGING_BULL_WATER=2040]="RAGING_BULL_WATER",E[E.SALT_CURE=2041]="SALT_CURE",E[E.POWDER=2042]="POWDER",E[E.SUNNY=2100]="SUNNY",E[E.RAIN=2101]="RAIN",E[E.SANDSTORM=2102]="SANDSTORM",E[E.HAIL=2103]="HAIL",E[E.SNOW=2104]="SNOW",E[E.WIND=2105]="WIND",E[E.HEAVY_RAIN=2106]="HEAVY_RAIN",E[E.HARSH_SUN=2107]="HARSH_SUN",E[E.STRONG_WINDS=2108]="STRONG_WINDS",E[E.MISTY_TERRAIN=2110]="MISTY_TERRAIN",E[E.ELECTRIC_TERRAIN=2111]="ELECTRIC_TERRAIN",E[E.GRASSY_TERRAIN=2112]="GRASSY_TERRAIN",E[E.PSYCHIC_TERRAIN=2113]="PSYCHIC_TERRAIN",E[E.LOCK_ON=2120]="LOCK_ON",E))(oA||{});const Cw=class Cw{constructor(A){if(this.frameTimedEvents=new Map,A){this.id=A.id,this.graphic=A.graphic;const s=A.frames;s.map(n=>{for(let I=0;I<n.length;I++)n[I]=new TH(n[I])}),this.frames=s;const R=A.frameTimedEvents;for(const n of Object.keys(R)){const I=[];for(const a of R[n]){let r;switch(a.eventType){case"AnimTimedSoundEvent":r=new pS(a.frameIndex,a.resourceName,a);break;case"AnimTimedAddBgEvent":r=new WS(a.frameIndex,a.resourceName,a);break;case"AnimTimedUpdateBgEvent":r=new Ou(a.frameIndex,a.resourceName,a);break}r&&I.push(r)}this.frameTimedEvents.set(parseInt(n),I)}this.position=A.position,this.hue=A.hue}else this.frames=[]}getSoundResourceNames(){const A=new Set;for(const s of this.frameTimedEvents.values())for(const R of s)R instanceof pS&&R.resourceName&&A.add(R.resourceName);return Array.from(A.values())}getBackgroundResourceNames(){const A=new Set;for(const s of this.frameTimedEvents.values())for(const R of s)R instanceof WS&&R.resourceName&&A.add(R.resourceName);return Array.from(A.values())}};L(Cw,"AnimConfig");let LO=Cw;const Uw=class Uw{constructor(A,s,R,n,I,a,r,S,o,l,C,M,u,h,P,G,d,H,f,K,W,V,k,Q,j,J){if(this.x=J?A:((A||0)-128)*.5,this.y=J?s:((s||0)-224)*.5,R?this.zoomX=R:J&&(this.zoomX=0),n?this.zoomY=n:J&&(this.zoomY=0),I?this.angle=I:J&&(this.angle=0),a?this.mirror=a:J&&(this.mirror=!1),r?this.visible=r:J&&(this.visible=!1),S?this.blendType=S:J&&(this.blendType=0),!J){let ne=2;switch(o){case-2:ne=1;break;case-1:ne=0;break}this.target=ne,this.graphicFrame=o>=0?o:0}l?this.opacity=l:J&&(this.opacity=0),C||M||u||h?this.color=[C||0,M||0,u||0,h||0]:J&&(this.color=[0,0,0,0]),P||G||d||H?this.tone=[P||0,G||0,d||0,H||0]:J&&(this.tone=[0,0,0,0]),f||K||W||V?this.flash=[f||0,K||0,W||0,V||0]:J&&(this.flash=[0,0,0,0]),k?this.locked=k:J&&(this.locked=!1),Q?this.priority=Q:J&&(this.priority=0),this.focus=j||1}};L(Uw,"AnimFrame");let Eu=Uw;const uw=class uw extends Eu{constructor(A){const s=A.color||[0,0,0,0],R=A.tone||[0,0,0,0],n=A.flash||[0,0,0,0];super(A.x,A.y,A.zoomX,A.zoomY,A.angle,A.mirror,A.visible,A.blendType,A.graphicFrame,A.opacity,s[0],s[1],s[2],s[3],R[0],R[1],R[2],R[3],n[0],n[1],n[2],n[3],A.locked,A.priority,A.focus,!0),this.target=A.target,this.graphicFrame=A.graphicFrame}};L(uw,"ImportedAnimFrame");let TH=uw;const Dw=class Dw{constructor(A,s){this.frameIndex=A,this.resourceName=s}};L(Dw,"AnimTimedEvent");let su=Dw;const Mw=class Mw extends su{constructor(A,s,R){super(A,s),this.volume=100,this.pitch=100,R&&(this.volume=R.volume,this.pitch=R.pitch)}execute(A,s,R){const n={rate:this.pitch*.01,volume:this.volume*.01};if(this.resourceName){try{A.playSound(`battle_anims/${this.resourceName}`,n)}catch(I){console.error(I)}return Math.ceil(A.sound.get(`battle_anims/${this.resourceName}`).totalDuration*1e3/33.33)}else return Math.ceil(s.user.cry(n).totalDuration*1e3/33.33)}getEventType(){return"AnimTimedSoundEvent"}};L(Mw,"AnimTimedSoundEvent");let pS=Mw;const hw=class hw extends su{constructor(A,s,R){super(A,s),this.bgX=0,this.bgY=0,this.opacity=0,this.duration=0,R&&(this.bgX=R.bgX,this.bgY=R.bgY,this.opacity=R.opacity,this.duration=R.duration)}};L(hw,"AnimTimedBgEvent");let Ru=hw;const cw=class cw extends Ru{constructor(A,s,R){super(A,s,R)}execute(A,s,R){const n={};return this.bgX!==void 0&&(n.x=this.bgX*.5-320),this.bgY!==void 0&&(n.y=this.bgY*.5-284),this.opacity!==void 0&&(n.alpha=(this.opacity||0)/255),Object.keys(n).length&&A.tweens.add(Object.assign({targets:s.bgSprite,duration:NE(this.duration*3)},n)),this.duration*2}getEventType(){return"AnimTimedUpdateBgEvent"}};L(cw,"AnimTimedUpdateBgEvent");let Ou=cw;const _w=class _w extends Ru{constructor(A,s,R){super(A,s,R)}execute(A,s,R){s.bgSprite&&s.bgSprite.destroy(),s.bgSprite=this.resourceName?A.add.tileSprite(this.bgX-320,this.bgY-284,896,576,this.resourceName):A.add.rectangle(this.bgX-320,this.bgY-284,896,576,0),s.bgSprite.setOrigin(0,0),s.bgSprite.setScale(1.25),s.bgSprite.setAlpha(this.opacity/255),A.field.add(s.bgSprite);const n=A.getEnemyPokemon(!1)??A.getPlayerPokemon(!1);return Ve(R)?n!=null&&n.isOnField()&&A.field.moveBelow(s.bgSprite,n):A.field.moveTo(s.bgSprite,R),A.tweens.add({targets:s.bgSprite,duration:NE(this.duration*3)}),this.duration*2}getEventType(){return"AnimTimedAddBgEvent"}};L(_w,"AnimTimedAddBgEvent");let WS=_w;const Js=new Map,$s=new Map,NM=new Map,bL=new Map;function jQ(E){return new Promise(A=>{const s=IO(oA),R=uE(oA),n=[];for(let I=0;I<R.length;I++){const a=R[I];n.push(E.cachedFetch(`./battle-anims/common-${s[I].toLowerCase().replace(/\_/g,"-")}.json`).then(r=>r.json()).then(r=>NM.set(a,new LO(r))))}Promise.allSettled(n).then(()=>A())})}L(jQ,"initCommonAnims");function iL(E,A){return new Promise(s=>{if(Js.has(A))if(Js.get(A)!==null)s();else{const R=setInterval(()=>{if(Js.get(A)!==null){const n=ye[A].isChargingMove()?ye[A]:ye[A].getAttrs(Xn)[0]??ye[A].getAttrs(Zr)[0];if(n&&$s.get(n.chargeAnim)===null)return;clearInterval(R),s()}},50)}else{Js.set(A,null);const R=ye[A]instanceof B?t.TACKLE:ye[A]instanceof ze?t.FOCUS_ENERGY:t.TAIL_WHIP;L(I=>{E.cachedFetch(`./battle-anims/${xb(I)}.json`).then(a=>{const r=a.headers.get("content-type");return!a.ok||(r==null?void 0:r.indexOf("application/json"))===-1?(mb(I,R),Fb(I,a.status,a.statusText),s()):a.json()}).then(a=>{Array.isArray(a)?(Sl(I,a[0]),Sl(I,a[1])):Sl(I,a);const r=ye[I].isChargingMove()?ye[I]:ye[I].getAttrs(Xn)[0]??ye[I].getAttrs(Zr)[0];r?tJ(E,r.chargeAnim).then(()=>s()):s()}).catch(a=>(mb(I,R),Fb(I,a),s()))},"fetchAnimAndResolve")(A)}})}L(iL,"initMoveAnim");function mb(E,A){Sl(E,Js.get(A))}L(mb,"useDefaultAnim");function Fb(E,...A){const s=xb(E);console.warn(`Could not load animation file for move '${s}'`,...A)}L(Fb,"logMissingMoveAnim");async function eJ(E,A){const s=Array.isArray(A)?A:[A],R=IO(zR),n=[];for(const I of s)bL.has(I)&&!Ve(bL.get(I))||n.push(E.cachedFetch(`./battle-anims/encounter-${R[I].toLowerCase().replace(/\_/g,"-")}.json`).then(a=>a.json()).then(a=>bL.set(I,new LO(a))));await Promise.allSettled(n)}L(eJ,"initEncounterAnims");function tJ(E,A){return new Promise(s=>{if($s.has(A))if($s.get(A)!==null)s();else{const R=setInterval(()=>{$s.get(A)!==null&&(clearInterval(R),s())},50)}else $s.set(A,null),E.cachedFetch(`./battle-anims/${Zn[A].toLowerCase().replace(/\_/g,"-")}.json`).then(R=>R.json()).then(R=>{Array.isArray(R)?(dh(A,R[0]),dh(A,R[1])):dh(A,R),s()})})}L(tJ,"initMoveChargeAnim");function Sl(E,A){const s=new LO(A);if(Js.get(E)===null){Js.set(E,s);return}Js.set(E,[Js.get(E),s])}L(Sl,"populateMoveAnim");function dh(E,A){const s=new LO(A);if($s.get(E)===null){$s.set(E,s);return}$s.set(E,[$s.get(E),s])}L(dh,"populateMoveChargeAnim");function AJ(E,A){return new Promise(s=>{u1(E,Array.from(NM.values()),A).then(()=>s())})}L(AJ,"loadCommonAnimAssets");async function EJ(E,A){await u1(E,Array.from(bL.values()),A)}L(EJ,"loadEncounterAnimAssets");function IL(E,A,s){return new Promise(R=>{const n=A.map(I=>Js.get(I)).flat();for(const I of A){const a=ye[I].isChargingMove()?ye[I]:ye[I].getAttrs(Xn)[0]??ye[I].getAttrs(Zr)[0];if(a){const r=$s.get(a.chargeAnim);n.push(r instanceof LO?r:r[0]),Array.isArray(r)&&n.push(r[1])}}u1(E,n,s).then(()=>R())})}L(IL,"loadMoveAnimAssets");function u1(E,A,s){return new Promise(R=>{var a;const n=new Set,I=new Set;for(const r of A){if(!((a=r.frames)!=null&&a.length))continue;const S=r.getSoundResourceNames();for(const l of S)I.add(l);const o=r.getBackgroundResourceNames();for(const l of o)n.add(l);r.graphic&&E.loadSpritesheet(r.graphic,"battle_anims",96)}for(const r of n)E.loadImage(r,"battle_anims");for(const r of I)E.loadSe(r,"battle_anims",r);s?(E.load.once(EE.Loader.Events.COMPLETE,()=>R()),E.load.isLoading()||E.load.start()):R()})}L(u1,"loadAnimAssets");const fh=106,Bh=116,gh=234,Kh=52;function sJ(E,A,s,R,n,I,a,r,S,o){const l=RJ(E,A,s,R,S,o);return OJ(n,I,a,r,l[0],l[1])}L(sJ,"transformPoint");function RJ(E,A,s,R,n,I){const a=s-E,r=R-A,S=a===0?0:(n-E)/a,o=r===0?0:(I-A)/r;return[S,o]}L(RJ,"yAxisIntersect");function OJ(E,A,s,R,n,I){const a=s-E,r=R-A,S=E+n*a,o=A+I*r;return[S,o]}L(OJ,"repositionY");function nJ(E,A,s,R){return E===A?!1:E<A?s>R:s<R}L(nJ,"isReversed");const Pw=class Pw{constructor(A,s,R=!1){this.user=A??null,this.target=s??null,this.sprites=[],this.playRegardlessOfIssues=R}isHideUser(){return!1}isHideTarget(){return!1}getGraphicFrameData(A,s,R){var H,f;const n=new Map([[2,new Map],[0,new Map],[1,new Map]]),I=this.isOppAnim(),a=I?this.target:this.user,r=I?this.user:this.target,S=R&&a!==r?r.getTag(KE):null,o=a.x,l=a.y,C=a.getSprite().displayHeight/2,M=((H=S==null?void 0:S.sprite)==null?void 0:H.x)??r.x,u=((f=S==null?void 0:S.sprite)==null?void 0:f.y)??r.y,h=((S==null?void 0:S.sprite)??r.getSprite()).displayHeight/2;let P=0,G=0,d=0;for(const K of s){let W=K.x+106,V=K.y+116,k=K.zoomX/100*(K.mirror?-1:1);const Q=K.zoomY/100;switch(K.focus){case 1:W+=M-gh,V+=u-h-Kh;break;case 2:W+=o-fh,V+=l-C-Bh;break;case 3:const ne=sJ(this.srcLine[0],this.srcLine[1],this.srcLine[2],this.srcLine[3],this.dstLine[0],this.dstLine[1]-C,this.dstLine[2],this.dstLine[3]-h,W,V);W=ne[0],V=ne[1],K.target===2&&nJ(this.srcLine[0],this.srcLine[2],this.dstLine[0],this.dstLine[2])&&(k=k*-1);break}const j=-K.angle,J=K.target===2?P++:K.target===0?G++:d++;n.get(K.target).set(J,{x:W,y:V,scaleX:k,scaleY:Q,angle:j})}return n}play(A,s,R){var K,W;const n=this.isOppAnim(),I=n?this.target:this.user,a=n?this.user:this.target;if(!(a!=null&&a.isOnField())&&!this.playRegardlessOfIssues){R&&R();return}const r=s&&I!==a?a.getTag(KE):null,S=I.getSprite(),o=(r==null?void 0:r.sprite)??a.getSprite(),l={2:[],0:[],1:[]},C=[],M=L(()=>{S.setPosition(0,0),S.setScale(1),S.setAlpha(1),S.pipelineData.tone=[0,0,0,0],S.setAngle(0),r?(o.setPosition(a.x-a.getSubstituteOffset()[0],a.y-a.getSubstituteOffset()[1]),o.setScale(a.getSpriteScale()*(a.isPlayer()?.5:1)),o.setAlpha(1)):(o.setPosition(0,0),o.setScale(1),o.setAlpha(1)),o.pipelineData.tone=[0,0,0,0],o.setAngle(0);const V=n?o:S,k=n?S:o;!this.isHideUser()&&V&&V.setVisible(!0),!this.isHideTarget()&&(k!==V||!this.isHideUser())&&k.setVisible(!0);for(const Q of Object.values(l).flat())Q&&Q.destroy();this.bgSprite&&this.bgSprite.destroy(),R&&R()},"cleanUpAndComplete");if(!A.moveAnimations&&!this.playRegardlessOfIssues)return M();const u=this.getAnim(),h=I.x,P=I.y,G=((K=r==null?void 0:r.sprite)==null?void 0:K.x)??a.x,d=((W=r==null?void 0:r.sprite)==null?void 0:W.y)??a.y;this.srcLine=[fh,Bh,gh,Kh],this.dstLine=[h,P,G,d];let H=(u==null?void 0:u.frames.length)??0,f=0;A.tweens.addCounter({duration:NE(3),repeat:(u==null?void 0:u.frames.length)??0,onRepeat:L(()=>{f||(S.setVisible(!1),o.setVisible(!1));const V=u.frames[f],k=this.getGraphicFrameData(A,u.frames[f],s);let Q=0,j=0,J=0;for(const x of V)if(x.target!==2){const q=x.target===0;if(q&&a===I)continue;if(this.playRegardlessOfIssues&&x.target===1&&!a.isOnField())continue;const F=l[q?0:1],Te=q?S:o;if((q?Q:j)===F.length)if(q||!r){const Ie=A.addPokemonSprite(q?I:a,0,0,Te.texture,Te.frame.name,!0);["spriteColors","fusionSpriteColors"].map(z=>Ie.pipelineData[z]=(q?I:a).getSprite().pipelineData[z]),Ie.setPipelineData("spriteKey",(q?I:a).getBattleSpriteKey()),Ie.setPipelineData("shiny",(q?I:a).shiny),Ie.setPipelineData("variant",(q?I:a).variant),Ie.setPipelineData("ignoreFieldPos",!0),Te.on("animationupdate",(z,te)=>Ie.setFrame(te.textureFrame)),A.field.add(Ie),F.push(Ie)}else{const Ie=A.addFieldSprite(Te.x,Te.y,Te.texture);Te.on("animationupdate",(z,te)=>Ie.setFrame(te.textureFrame)),A.field.add(Ie),F.push(Ie)}const He=q?Q++:j++,ue=F[He],me=k.get(x.target).get(He),Me=q||!r?Te.parentContainer.scale:a.getSpriteScale()*(a.isPlayer()?.5:1);ue.setPosition(me.x,me.y-Te.height/2*(Me-1)),ue.setAngle(me.angle),ue.setScale(me.scaleX*Me,me.scaleY*Me),ue.setData("locked",x.locked),ue.setAlpha(x.opacity/255),ue.pipelineData.tone=x.tone,ue.setVisible(x.visible&&(q?I.visible:a.visible)),ue.setBlendMode(x.blendType===0?EE.BlendModes.NORMAL:x.blendType===1?EE.BlendModes.ADD:EE.BlendModes.DIFFERENCE)}else{const q=l[2];if(J===q.length){const ue=A.addFieldSprite(0,0,u.graphic,1);q.push(ue),A.field.add(ue),C.push(1)}const F=J++,Te=q[F];if(C[F]!==x.priority){C[F]=x.priority;const ue=L(me=>{switch(me){case 0:A.field.moveBelow(Te,A.getEnemyPokemon(!1)??A.getPlayerPokemon(!1));break;case 1:A.field.moveTo(Te,A.field.getAll().length-1);break;case 2:switch(x.focus){case 2:this.bgSprite?A.field.moveAbove(Te,this.bgSprite):A.field.moveBelow(Te,this.user);break;case 1:A.field.moveBelow(Te,this.target);break;default:ue(1);break}break;case 3:switch(x.focus){case 2:A.field.moveAbove(Te,this.user);break;case 1:A.field.moveAbove(Te,this.target);break;default:ue(1);break}break;default:ue(1)}},"setSpritePriority");ue(x.priority)}Te.setFrame(x.graphicFrame);const He=k.get(x.target).get(F);Te.setPosition(He.x,He.y),Te.setAngle(He.angle),Te.setScale(He.scaleX,He.scaleY),Te.setAlpha(x.opacity/255),Te.setVisible(x.visible),Te.setBlendMode(x.blendType===0?EE.BlendModes.NORMAL:x.blendType===1?EE.BlendModes.ADD:EE.BlendModes.DIFFERENCE)}if(u!=null&&u.frameTimedEvents.has(f))for(const x of u.frameTimedEvents.get(f))H=Math.max(u.frames.length-f+x.execute(A,this),H);const ne=uE(NH);for(const x of ne){const q=x===2?J:x===0?Q:j;if(q<l[x].length){const F=l[x].slice(q,l[x].length);for(const Te of F)if(!Te.getData("locked")){const He=l[x].indexOf(Te);l[x].splice(He,1),x===2&&C.splice(He,1),Te.destroy()}}}f++,H--},"onRepeat"),onComplete:L(()=>{for(const V of Object.values(l).flat())V&&!V.getData("locked")&&V.destroy();H?A.tweens.addCounter({duration:NE(H),onComplete:L(()=>M(),"onComplete")}):M()},"onComplete")})}getGraphicFrameDataWithoutTarget(A,s,R){var S;const n=new Map([[2,new Map],[0,new Map],[1,new Map]]);let I=0,a=0,r=0;for(const o of A){let{x:l,y:C}=o;const M=o.zoomX/100*(o.mirror?-1:1),u=o.zoomY/100;l+=s,C+=R;const h=-o.angle,P=o.target===2?I++:o.target===0?a++:r++;(S=n.get(o.target))==null||S.set(P,{x:l,y:C,scaleX:M,scaleY:u,angle:h})}return n}playWithoutTargets(A,s,R,n,I,a){const r={2:[],0:[],1:[]},S=L(()=>{for(const u of Object.values(r).flat())u&&u.destroy();this.bgSprite&&this.bgSprite.destroy(),a&&a()},"cleanUpAndComplete");if(!A.moveAnimations&&!this.playRegardlessOfIssues)return S();const o=this.getAnim();this.srcLine=[fh,Bh,gh,Kh],this.dstLine=[150,75,s,R];let l=o.frames.length,C=0,M=A.field.getAll().slice(0);A.tweens.addCounter({duration:NE(3)*n,repeat:o.frames.length,onRepeat:L(()=>{var d;M=A.field.getAll().slice(0);const u=o.frames[C],h=this.getGraphicFrameDataWithoutTarget(o.frames[C],s,R);let P=0;for(const H of u){if(H.target!==2){console.log("Encounter animations do not support targets");continue}const f=r[2];if(P===f.length){const k=A.addFieldSprite(0,0,o.graphic,1);f.push(k),A.field.add(k)}const K=P++,W=f[K];Ve(H.priority)||L(Q=>{if(M.length>Q){const j=A.field.getIndex(M[Q]);A.field.moveTo(W,j)}else A.field.moveTo(W,A.field.getAll().length-1)},"setSpritePriority")(H.priority),W.setFrame(H.graphicFrame);const V=(d=h.get(H.target))==null?void 0:d.get(K);V&&(W.setPosition(V.x,V.y),W.setAngle(V.angle),W.setScale(V.scaleX,V.scaleY),W.setAlpha(H.opacity/255),W.setVisible(H.visible),W.setBlendMode(H.blendType===0?EE.BlendModes.NORMAL:H.blendType===1?EE.BlendModes.ADD:EE.BlendModes.DIFFERENCE))}if(o!=null&&o.frameTimedEvents.get(C))for(const H of o.frameTimedEvents.get(C))l=Math.max(o.frames.length-C+H.execute(A,this,I),l);const G=uE(NH);for(const H of G){const f=P;if(f<r[H].length){const K=r[H].slice(f,r[H].length);for(const W of K)if(!W.getData("locked")){const V=r[H].indexOf(W);r[H].splice(V,1),W.destroy()}}}C++,l--},"onRepeat"),onComplete:L(()=>{for(const u of Object.values(r).flat())u&&!u.getData("locked")&&u.destroy();l?A.tweens.addCounter({duration:NE(l),onComplete:L(()=>S(),"onComplete")}):S()},"onComplete")})}};L(Pw,"BattleAnim");let YS=Pw;const Gw=class Gw extends YS{constructor(A,s,R,n=!1){super(s,R||s,n),this.commonAnim=A}getAnim(){return this.commonAnim?NM.get(this.commonAnim)??null:null}isOppAnim(){return!1}};L(Gw,"CommonBattleAnim");let Qi=Gw;const Hw=class Hw extends YS{constructor(A,s,R,n=!1){super(s,s.scene.getField()[R],n),this.move=A}getAnim(){var A,s;return Js.get(this.move)instanceof LO?Js.get(this.move):(s=Js.get(this.move))==null?void 0:s[(A=this.user)!=null&&A.isPlayer()?0:1]}isOppAnim(){var A;return!((A=this.user)!=null&&A.isPlayer())&&Array.isArray(Js.get(this.move))}isHideUser(){return ye[this.move].hasFlag(tA.HIDE_USER)}isHideTarget(){return ye[this.move].hasFlag(tA.HIDE_TARGET)}};L(Hw,"MoveAnim");let nu=Hw;const dw=class dw extends nu{constructor(A,s,R){super(s,R,0),this.chargeAnim=A}isOppAnim(){var A;return!((A=this.user)!=null&&A.isPlayer())&&Array.isArray($s.get(this.chargeAnim))}getAnim(){var A,s;return $s.get(this.chargeAnim)instanceof LO?$s.get(this.chargeAnim):(s=$s.get(this.chargeAnim))==null?void 0:s[(A=this.user)!=null&&A.isPlayer()?0:1]}};L(dw,"MoveChargeAnim");let yS=dw;const fw=class fw extends YS{constructor(A,s,R,n){super(s,R??s,!0),this.encounterAnim=A,this.oppAnim=n??!1}getAnim(){return bL.get(this.encounterAnim)??null}isOppAnim(){return this.oppAnim}};L(fw,"EncounterBattleAnim");let Yn=fw;async function iJ(){const A=IO(oA).map(l=>l.toLowerCase()).map(l=>l.replace(/\_/g,"")),s=uE(oA),n=IO(Zn).map(l=>l.toLowerCase()).map(l=>l.replace(/\_/g," ")),I=uE(Zn),a=/name: (?:Common:)?(Opp )?(.*)/,r={};for(const l of uE(t).slice(1)){const C=t[l].toUpperCase().replace(/\_/g,"");r[C]=l}const S=[],o=[];for(let l=0;l<o.length;l++){const C=o[l].split("@").slice(1),M=C.find(f=>f.startsWith("name: "));let u,h,P;if(!M.startsWith("name: Move:")&&!(u=M.startsWith("name: OppMove:"))){const K=a.exec(M)[2].toLowerCase();A.indexOf(K)>-1?h=s[A.indexOf(K)]:n.indexOf(K)>-1&&(u=M.startsWith("name: Opp "),P=I[n.indexOf(K)])}const G=M.indexOf(":",5)+1,d=M.slice(G,M.indexOf(`
`,G));if(!r.hasOwnProperty(d)&&!h&&!P)continue;const H=h||P?new LO:new LO;H instanceof LO&&(H.id=r[d]),h?NM.set(h,H):P?$s.set(P,u?[$s.get(P),H]:H):Js.set(r[d],u?[Js.get(r[d]),H]:H);for(let f=0;f<C.length;f++){const K=C[f],W=K.slice(0,K.indexOf(":")),V=K.slice(W.length+1,K.lastIndexOf(`
`)).trim();switch(W){case"array":const k=V.split("  - - - ").slice(1);for(let J=0;J<k.length;J++){H.frames.push([]);const x=k[J].split("    - - ");for(let q=0;q<x.length;q++){const F=x[q].replace(/      \- /g,"").split(`
`),Te=new Eu(parseFloat(F[0]),parseFloat(F[1]),parseFloat(F[2]),parseFloat(F[11]),parseFloat(F[3]),parseInt(F[4])===1,parseInt(F[6])===1,parseInt(F[5]),parseInt(F[7]),parseInt(F[8]),parseInt(F[12]),parseInt(F[13]),parseInt(F[14]),parseInt(F[15]),parseInt(F[16]),parseInt(F[17]),parseInt(F[18]),parseInt(F[19]),parseInt(F[21]),parseInt(F[22]),parseInt(F[23]),parseInt(F[24]),parseInt(F[20])===1,parseInt(F[25]),parseInt(F[26]));H.frames[J].push(Te)}}break;case"graphic":const Q=V!=="''"?V:"";H.graphic=Q.indexOf(".")>-1?Q.slice(0,V.indexOf(".")):Q;break;case"timing":const j=V.split("- !ruby/object:PBAnimTiming ").slice(1);for(let J=0;J<j.length;J++){const ne=j[J].replace(/\n/g," ").replace(/[ ]{2,}/g," ").replace(/[a-z]+: ! '', /ig,"").replace(/name: (.*?),/,'name: "$1",').replace(/flashColor: !ruby\/object:Color { alpha: ([\d\.]+), blue: ([\d\.]+), green: ([\d\.]+), red: ([\d\.]+)}/,"flashRed: $4, flashGreen: $3, flashBlue: $2, flashAlpha: $1"),x=parseInt(/frame: (\d+)/.exec(ne)[1]);let q=/name: "(.*?)"/.exec(ne)[1].replace("''","");const F=parseInt(/timingType: (\d)/.exec(ne)[1]);let Te;switch(F){case 0:if(q&&q.indexOf(".")===-1){let me;["wav","mp3","m4a"].every(Me=>S.indexOf(`${q}.${Me}`)>-1?(me=Me,!1):!0),me||(me=".wav"),q+=`.${me}`}Te=new pS(x,q);break;case 1:Te=new WS(x,q.slice(0,q.indexOf(".")));break;case 2:Te=new Ou(x,q.slice(0,q.indexOf(".")));break}if(!Te)continue;const He=/([a-z]+): (.*?)(?:,|\})/ig;let ue;for(;ue=He.exec(ne);){const me=ue[1];let Me=ue[2];switch(me){case"bgX":case"bgY":Me=parseFloat(Me);break;case"volume":case"pitch":case"opacity":case"colorRed":case"colorGreen":case"colorBlue":case"colorAlpha":case"duration":case"flashScope":case"flashRed":case"flashGreen":case"flashBlue":case"flashAlpha":case"flashDuration":Me=parseInt(Me);break}Te.hasOwnProperty(me)&&(Te[me]=Me)}H.frameTimedEvents.has(x)||H.frameTimedEvents.set(x,[]),H.frameTimedEvents.get(x).push(Te)}break;case"position":H.position=parseInt(V);break;case"hue":H.hue=parseInt(V);break}}}}L(iJ,"populateAnims");var Mt=(E=>(E[E.PHYSICAL=0]="PHYSICAL",E[E.SPECIAL=1]="SPECIAL",E[E.STATUS=2]="STATUS",E))(Mt||{}),JE=(E=>(E[E.USER=0]="USER",E[E.OTHER=1]="OTHER",E[E.ALL_OTHERS=2]="ALL_OTHERS",E[E.NEAR_OTHER=3]="NEAR_OTHER",E[E.ALL_NEAR_OTHERS=4]="ALL_NEAR_OTHERS",E[E.NEAR_ENEMY=5]="NEAR_ENEMY",E[E.ALL_NEAR_ENEMIES=6]="ALL_NEAR_ENEMIES",E[E.RANDOM_NEAR_ENEMY=7]="RANDOM_NEAR_ENEMY",E[E.ALL_ENEMIES=8]="ALL_ENEMIES",E[E.ATTACKER=9]="ATTACKER",E[E.NEAR_ALLY=10]="NEAR_ALLY",E[E.ALLY=11]="ALLY",E[E.USER_OR_NEAR_ALLY=12]="USER_OR_NEAR_ALLY",E[E.USER_AND_ALLIES=13]="USER_AND_ALLIES",E[E.ALL=14]="ALL",E[E.USER_SIDE=15]="USER_SIDE",E[E.ENEMY_SIDE=16]="ENEMY_SIDE",E[E.BOTH_SIDES=17]="BOTH_SIDES",E[E.PARTY=18]="PARTY",E[E.CURSE=19]="CURSE",E))(JE||{}),tA=(E=>(E[E.NONE=0]="NONE",E[E.MAKES_CONTACT=1]="MAKES_CONTACT",E[E.IGNORE_PROTECT=2]="IGNORE_PROTECT",E[E.IGNORE_VIRTUAL=4]="IGNORE_VIRTUAL",E[E.SOUND_BASED=8]="SOUND_BASED",E[E.HIDE_USER=16]="HIDE_USER",E[E.HIDE_TARGET=32]="HIDE_TARGET",E[E.BITING_MOVE=64]="BITING_MOVE",E[E.PULSE_MOVE=128]="PULSE_MOVE",E[E.PUNCHING_MOVE=256]="PUNCHING_MOVE",E[E.SLICING_MOVE=512]="SLICING_MOVE",E[E.RECKLESS_MOVE=1024]="RECKLESS_MOVE",E[E.BALLBOMB_MOVE=2048]="BALLBOMB_MOVE",E[E.POWDER_MOVE=4096]="POWDER_MOVE",E[E.DANCE_MOVE=8192]="DANCE_MOVE",E[E.WIND_MOVE=16384]="WIND_MOVE",E[E.TRIAGE_MOVE=32768]="TRIAGE_MOVE",E[E.IGNORE_ABILITIES=65536]="IGNORE_ABILITIES",E[E.CHECK_ALL_HITS=131072]="CHECK_ALL_HITS",E[E.IGNORE_SUBSTITUTE=262144]="IGNORE_SUBSTITUTE",E[E.REDIRECT_COUNTER=524288]="REDIRECT_COUNTER",E))(tA||{});const Bw=class Bw{constructor(A,s,R,n,I,a,r,S,o,l){this.attrs=[],this.conditions=[],this.flags=0,this.nameAppend="",this.id=A,this._type=s,this._category=R,this.moveTarget=n,this.power=I,this.accuracy=a,this.pp=r,this.chance=S,this.priority=o,this.generation=l,n===0&&this.setFlag(2,!0),R===0&&this.setFlag(1,!0),this.localize()}get type(){return this._type}get category(){return this._category}localize(){const A=t[this.id].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.name=this.id?`${D.t(`move:${A}.name`)}${this.nameAppend}`:"",this.effect=this.id?`${D.t(`move:${A}.effect`)}${this.nameAppend}`:""}getAttrs(A){return this.attrs.filter(s=>s instanceof A)}hasAttr(A){return this.attrs.some(s=>s instanceof A)}findAttr(A){return this.attrs.find(A)}attr(A,...s){const R=new A(...s);this.attrs.push(R);let n=R.getCondition();return n&&(typeof n=="function"&&(n=new vI(n)),this.conditions.push(n)),this}addAttr(A){this.attrs.push(A);let s=A.getCondition();return s&&(typeof s=="function"&&(s=new vI(s)),this.conditions.push(s)),this}target(A){return this.moveTarget=A,this}hasFlag(A){return!!(this.flags&A)}isMultiTarget(){switch(this.moveTarget){case 2:case 4:case 6:case 8:case 13:case 14:case 15:case 16:case 17:return!0}return!1}isAllyTarget(){switch(this.moveTarget){case 0:case 10:case 11:case 12:case 13:case 15:return!0}return!1}isChargingMove(){return!1}isTypeImmune(A,s,R){if(this.moveTarget===0)return!1;switch(R){case i.GRASS:if(this.hasFlag(4096))return!0;break;case i.DARK:if(A.hasAbility(O.PRANKSTER)&&this.category===2&&A.isPlayer()!==s.isPlayer())return!0;break}return!1}hitsSubstitute(A,s){if([0,15,16,17].includes(this.moveTarget)||!(s!=null&&s.getTag(Y.SUBSTITUTE)))return!1;const R=new Lt(!1);return Ct(sa,A,null,!1,R),!R.value&&!this.hasFlag(8)&&!this.hasFlag(262144)}condition(A){return typeof A=="function"&&(A=new vI(A)),this.conditions.push(A),this}edgeCase(){return this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}setFlag(A,s){s?this.flags|=A:this.flags^=A}makesContact(A=!0){return this.setFlag(1,A),this}ignoresProtect(){return this.setFlag(2,!0),this}ignoresVirtual(){return this.setFlag(4,!0),this}soundBased(){return this.setFlag(8,!0),this}hidesUser(){return this.setFlag(16,!0),this}hidesTarget(){return this.setFlag(32,!0),this}bitingMove(){return this.setFlag(64,!0),this}pulseMove(){return this.setFlag(128,!0),this}punchingMove(){return this.setFlag(256,!0),this}slicingMove(){return this.setFlag(512,!0),this}recklessMove(){return this.setFlag(1024,!0),this}ballBombMove(){return this.setFlag(2048,!0),this}powderMove(){return this.setFlag(4096,!0),this}danceMove(){return this.setFlag(8192,!0),this}windMove(){return this.setFlag(16384,!0),this}triageMove(){return this.setFlag(32768,!0),this}ignoresAbilities(){return this.setFlag(65536,!0),this}checkAllHits(){return this.setFlag(131072,!0),this}ignoresSubstitute(){return this.setFlag(262144,!0),this}redirectCounter(){return this.setFlag(524288,!0),this}checkFlag(A,s,R){switch(A){case 1:if(s.hasAbilityWithAttr(lU)||this.hitsSubstitute(s,R))return!1;break;case 65536:if(s.hasAbilityWithAttr(fi)){const n=new Lt(!1);if(Ct(fi,s,n,!1,this),n.value)return!0}break;case 2:if(s.hasAbilityWithAttr(WU)&&this.checkFlag(1,s,null))return!0;break}return!!(this.flags&A)}applyConditions(A,s,R){for(const n of this.conditions)if(!n.apply(A,s,R))return!1;return!0}getFailedText(A,s,R,n){for(const I of this.attrs){const a=I.getFailedText(A,s,R,n);if(a!==null)return a}return null}getUserBenefitScore(A,s,R){let n=0;for(const I of this.attrs)n+=I.getUserBenefitScore(A,s,R);for(const I of this.conditions)n+=I.getUserBenefitScore(A,s,R);return n}getTargetBenefitScore(A,s,R){var I,a;let n=0;if(((a=(I=s.getAlly())==null?void 0:I.getTag(Y.COMMANDED))==null?void 0:a.getSourcePokemon(s.scene))===s)return 20*(s.isPlayer()===A.isPlayer()?-1:1);for(const r of this.attrs)n+=r.getTargetBenefitScore(A,r.selfTarget?A:s,R)*(s!==A&&r.selfTarget?-1:1);return n}calculateBattleAccuracy(A,s,R=!1){var a;const n=new Rt(this.accuracy);if(MA(Qn,A,s,this,n),dn(QC,s,A,this,{value:!1},R,n),n.value===-1)return n.value;const I=this.hasAttr(mi);return I||A.scene.applyModifiers(So,A.isPlayer(),A,n),((a=A.scene.arena.weather)==null?void 0:a.weatherType)===se.FOG&&(n.value=Math.floor(n.value*.9)),!I&&A.scene.arena.getTag(ge.GRAVITY)&&(n.value=Math.floor(n.value*1.67)),n.value}calculateBattlePower(A,s,R=!1){if(this.category===2)return-1;const n=new Rt(this.power),I=new Rt(1);wO(sn,A,s,this,!0,null,I);const a=A.getTeraType();a!==i.UNKNOWN&&a===this.type&&n.value<60&&this.priority<=0&&!this.hasAttr(TA)&&!A.scene.findModifier(l=>l instanceof Jn&&l.pokemonId===A.id)&&(n.value=60),wO(NS,A,s,this,R,n),A.getAlly()&&wO(oS,A.getAlly(),s,this,R,n);const r=new Set(A.scene.getField(!0).map(l=>l.getAbilityAttrs(GI).filter(C=>{const M=C.getCondition();return!M||M(l)})).flat());for(const l of r)l.applyPreAttack(A,null,R,s,this,[n]);(A instanceof wE?A.scene.getPlayerField():A.scene.getEnemyField()).forEach(l=>wO(AU,l,s,this,R,n)),n.value*=I.value;const o=A.findTag(l=>l instanceof xr&&l.boostedType===this.type);return o&&(n.value*=o.boostValue),MA(WA,A,s,this,n),this.hasAttr(xS)||(A.scene.arena.applyTags(aS,R,this.type,n),A.scene.applyModifiers(Sn,A.isPlayer(),A,this.type,n)),A.getTag(bU)&&(n.value*=1.5),n.value}getPriority(A,s=!0){const R=new Rt(this.priority);return MA(Uu,A,null,this,R),Ct(_i,A,null,s,this,R),R.value}canBeMultiStrikeEnhanced(A,s=!1){const{targets:R,multiple:n}=Cn(A,this.id),I=n&&R.length>1,a=[TA,yn,na],r=[t.FLING,t.UPROAR,t.ROLLOUT,t.ICE_BALL,t.ENDEAVOR];return(!s||!I)&&!this.isChargingMove()&&!a.some(S=>this.hasAttr(S))&&!r.some(S=>this.id===S)&&this.category!==2}};L(Bw,"Move");let wS=Bw;const gw=class gw extends wS{constructor(A,s,R,n,I,a,r,S,o){super(A,s,R,3,n,I,a,r,S,o),this.type===i.FIRE&&this.addAttr(new jA(!1,Re.FREEZE))}getTargetBenefitScore(A,s,R){let n=super.getTargetBenefitScore(A,s,R),I=0;const a=s.getAttackTypeEffectiveness(this.type,A,void 0,void 0,this);if(I=Math.pow(a-1,2)*a<1?-2:2,I){if(this.category===0){const S=new ZE(A.getEffectiveStat(g.ATK,s));if(MA(ia,A,s,R,S),S.value>A.getEffectiveStat(g.SPATK,s)){const o=A.getEffectiveStat(g.SPATK,s)/S.value;o<=.75?I*=2:o<=.875&&(I*=1.5)}}else{const S=new ZE(A.getEffectiveStat(g.SPATK,s));if(MA(ia,A,s,R,S),S.value>A.getEffectiveStat(g.ATK,s)){const o=A.getEffectiveStat(g.ATK,s)/S.value;o<=.75?I*=2:o<=.875&&(I*=1.5)}}const r=new Rt(this.power);MA(WA,A,s,R,r),I+=Math.floor(r.value/5)}return n-=I,n}};L(gw,"AttackMove");let B=gw;const Kw=class Kw extends wS{constructor(A,s,R,n,I,a,r){super(A,s,2,3,-1,R,n,I,a,r)}};L(Kw,"StatusMove");let ce=Kw;const mw=class mw extends wS{constructor(A,s,R,n,I,a,r){super(A,s,2,0,-1,R,n,I,a,r)}};L(mw,"SelfStatusMove");let ze=mw;function s8(E){return class extends E{constructor(){super(...arguments),this.chargeAnim=Zn[`${t[this.id]}_CHARGING`],this.chargeAttrs=[]}isChargingMove(){return!0}chargeText(A){return this._chargeText=A,this}showChargeText(A,s){A.scene.queueMessage(this._chargeText.replace("{USER}",ee(A)).replace("{TARGET}",ee(s)))}getChargeAttrs(A){return this.chargeAttrs.filter(s=>s instanceof A)}hasChargeAttr(A){return this.chargeAttrs.some(s=>s instanceof A)}chargeAttr(A,...s){const R=new A(...s);return this.chargeAttrs.push(R),this}}}L(s8,"ChargeMove");const Fw=class Fw extends s8(B){};L(Fw,"ChargingAttackMove");let Ns=Fw;const pw=class pw extends s8(ze){};L(pw,"ChargingSelfStatusMove");let SH=pw;const Ww=class Ww{constructor(A=!1){this.selfTarget=A}apply(A,s,R,n){return!0}getCondition(){return null}getFailedText(A,s,R,n){return null}getUserBenefitScore(A,s,R){return 0}getTargetBenefitScore(A,s,R){return 0}};L(Ww,"MoveAttr");let rA=Ww;var Ka=(E=>(E[E.PRE_APPLY=0]="PRE_APPLY",E[E.POST_APPLY=1]="POST_APPLY",E[E.HIT=2]="HIT",E[E.POST_TARGET=3]="POST_TARGET",E))(Ka||{});const Yw=class Yw extends rA{constructor(A,s){super(A),this.options=s}get trigger(){var A;return((A=this.options)==null?void 0:A.trigger)??1}get firstHitOnly(){var A;return((A=this.options)==null?void 0:A.firstHitOnly)??!1}get lastHitOnly(){var A;return((A=this.options)==null?void 0:A.lastHitOnly)??!1}get firstTargetOnly(){var A;return((A=this.options)==null?void 0:A.firstTargetOnly)??!1}get effectChanceOverride(){var A;return(A=this.options)==null?void 0:A.effectChanceOverride}canApply(A,s,R,n){return!!(this.selfTarget?A.hp&&!A.getTag(Y.FRENZY):s.hp)&&(this.selfTarget||!s.getTag(Y.PROTECTED)||R.checkFlag(2,A,s))}apply(A,s,R,n){return this.canApply(A,s,R,n)}getMoveChance(A,s,R,n,I){const a=new Rt(this.effectChanceOverride??R.chance);if(Ct(LS,A,null,!1,a,R,s,n,I),(!R.hasAttr(LA)||a.value<=R.chance)&&!R.hasAttr(Gu)){const r=A.isPlayer()?St.PLAYER:St.ENEMY;A.scene.arena.applyTagsForSide(ge.WATER_FIRE_PLEDGE,r,!1,a)}return n||dn(xi,s,A,null,null,!1,a),a.value}};L(Yw,"MoveEffectAttr");let Ut=Yw;const yw=class yw extends rA{constructor(){super(!0)}};L(yw,"MoveHeaderAttr");let kr=yw;const ww=class ww extends kr{constructor(A){super(),this.message=A}apply(A,s,R,n){const I=typeof this.message=="string"?this.message:this.message(A,R);return I?(A.scene.queueMessage(I),!0):!1}};L(ww,"MessageHeaderAttr");let oH=ww;const vw=class vw extends kr{constructor(A){super(),this.tagType=A}apply(A,s,R,n){return A.addTag(this.tagType),!0}};L(vw,"AddBattlerTagHeaderAttr");let iu=vw;const Vw=class Vw extends iu{constructor(){super(Y.BEAK_BLAST_CHARGING),this.chargeAnim=Zn.BEAK_BLAST_CHARGING}};L(Vw,"BeakBlastHeaderAttr");let Zr=Vw;const xw=class xw extends rA{constructor(A){super(),this.message=A}apply(A,s,R,n){const I=typeof this.message=="string"?this.message:this.message(A,s,R);return I?(A.scene.queueMessage(I,500),!0):!1}};L(xw,"PreMoveMessageAttr");let rr=xw;const bw=class bw extends rA{};L(bw,"RespectAttackTypeImmunityAttr");let Iu=bw;const kw=class kw extends rA{apply(A,s,R,n){return n[0].value=!0,!0}};L(kw,"IgnoreOpponentStatStagesAttr");let wI=kw;const Zw=class Zw extends rA{apply(A,s,R,n){return n[0].value++,!0}getUserBenefitScore(A,s,R){return 3}};L(Zw,"HighCritAttr");let qA=Zw;const Xw=class Xw extends rA{apply(A,s,R,n){return n[0].value=!0,!0}getUserBenefitScore(A,s,R){return 5}};L(Xw,"CritOnlyAttr");let nn=Xw;const Qw=class Qw extends rA{constructor(A){super(),this.damage=A}apply(A,s,R,n){return n[0].value=this.getDamage(A,s,R),!0}getDamage(A,s,R){return this.damage}};L(Qw,"FixedDamageAttr");let DO=Qw;const Jw=class Jw extends DO{constructor(){super(0)}apply(A,s,R,n){return n[0].value=A.hp,!0}};L(Jw,"UserHpDamageAttr");let lH=Jw;const $w=class $w extends DO{constructor(){super(0)}apply(A,s,R,n){var a;const I=((a=A.getHeldItems().find(r=>r instanceof Jn))==null?void 0:a.getStackCount())??0;if(I<=0)return n[0].value=Yt(s.hp/2),!0;switch(A.turnData.hitCount-A.turnData.hitsLeft){case 0:this.initialHp=s.hp;default:return n[0].value=Yt(this.initialHp/2),!0;case I+1:return n[0].value=Yt(s.hp/2),!0}}getTargetBenefitScore(A,s,R){return s.getHpRatio()>.5?Math.floor((s.getHpRatio()-.5)*-24+4):-20}};L($w,"TargetHalfHpDamageAttr");let kL=$w;const zw=class zw extends DO{constructor(){super(0)}apply(A,s,R,n){return n[0].value=s.hp-A.hp,!0}getCondition(){return(A,s,R)=>A.hp<=s.hp}};L(zw,"MatchHpAttr");let CH=zw;const qw=class qw extends DO{constructor(A,s){super(0),this.moveFilter=A,this.multiplier=s}apply(A,s,R,n){const I=A.turnData.attacksReceived.filter(a=>this.moveFilter(ye[a.move])).reduce((a,r)=>a+r.damage,0);return n[0].value=Yt(I*this.multiplier),!0}getCondition(){return(A,s,R)=>!!A.turnData.attacksReceived.filter(n=>this.moveFilter(ye[n.move])).length}};L(qw,"CounterDamageAttr");let BI=qw;const jw=class jw extends DO{constructor(){super(0)}getDamage(A,s,R){return A.level}};L(jw,"LevelDamageAttr");let au=jw;const e4=class e4 extends DO{constructor(){super(0)}getDamage(A,s,R){return Yt(A.level*(A.randSeedIntRange(50,150)*.01))}};L(e4,"RandomLevelDamageAttr");let UH=e4;const t4=class t4 extends rA{apply(A,s,R,n){const I=n[0];return I.value=this.getModifiedDamage(A,s,R,I.value),!0}getModifiedDamage(A,s,R,n){return n}};L(t4,"ModifiedDamageAttr");let ru=t4;const A4=class A4 extends ru{getModifiedDamage(A,s,R,n){return Math.min(n,s.hp-1)}getCondition(){return(A,s,R)=>s.hp>1}getUserBenefitScore(A,s,R){return s.hp>1?0:-20}};L(A4,"SurviveDamageAttr");let Lu=A4;const E4=class E4 extends Ut{constructor(A=!1,s=.25,R=!1){super(!0,{lastHitOnly:!0}),this.useHp=A,this.damageRatio=s,this.unblockable=R}apply(A,s,R,n){var o;if(!super.apply(A,s,R,n))return!1;const I=new Lt(!1);if(this.unblockable||(Ct(VC,A,I),Ct(DE,A,I)),I.value||this.useHp&&[CA.FAIL,CA.MISS].includes((o=A.getLastXMoves(1)[0])==null?void 0:o.result))return!1;const a=(this.useHp?A.getMaxHp():A.turnData.totalDamageDealt)*this.damageRatio,r=A.turnData.totalDamageDealt?1:0,S=Yt(a,r);return!S||I.value?!1:(A.damageAndUpdate(S,wt.OTHER,!1,!0,!0),A.scene.queueMessage(D.t("moveTriggers:hitWithRecoil",{pokemonName:ee(A)})),A.turnData.damageTaken+=S,!0)}getUserBenefitScore(A,s,R){return Math.floor(R.power/5/-4)}};L(E4,"RecoilAttr");let bs=E4;const s4=class s4 extends Ut{constructor(){super(!0,{trigger:3})}apply(A,s,R,n){return A.damageAndUpdate(A.hp,wt.OTHER,!1,!0,!0),A.turnData.damageTaken+=A.hp,!0}getUserBenefitScore(A,s,R){return A.isBoss()?-20:Math.ceil(((1-A.getHpRatio())*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};L(s4,"SacrificialAttr");let yn=s4;const R4=class R4 extends Ut{constructor(){super(!0,{trigger:2})}apply(A,s,R,n){return super.apply(A,s,R,n)?(A.damageAndUpdate(A.hp,wt.OTHER,!1,!0,!0),A.turnData.damageTaken+=A.hp,!0):!1}getUserBenefitScore(A,s,R){return A.isBoss()?-20:Math.ceil(((1-A.getHpRatio())*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};L(R4,"SacrificialAttrOnHit");let na=R4;const O4=class O4 extends Ut{constructor(){super(!0,{trigger:3})}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=new Lt(!1);return Ct(DE,A,I),I.value||(A.damageAndUpdate(Yt(A.getMaxHp()/2),wt.OTHER,!1,!0,!0),A.scene.queueMessage(D.t("moveTriggers:cutHpPowerUpMove",{pokemonName:ee(A)}))),!0}getUserBenefitScore(A,s,R){return A.isBoss()?-10:Math.ceil(((1-A.getHpRatio()/2)*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};L(O4,"HalfSacrificialAttr");let Nu=O4;const n4=class n4 extends Ut{constructor(A=.25){super(!0),this.hpCost=A}apply(A,s,R,n){return super.apply(A,s,R,n)?(A.damageAndUpdate(Math.floor(A.getMaxHp()*this.hpCost),wt.OTHER,!1,!0,!0),A.addTag(Y.SUBSTITUTE,0,R.id,A.id),!0):!1}getUserBenefitScore(A,s,R){return A.isBoss()?-10:5}getCondition(){return(A,s,R)=>!A.getTag(KE)&&A.hp>Math.floor(A.getMaxHp()*this.hpCost)&&A.getMaxHp()>1}getFailedText(A,s,R,n){return A.getTag(KE)?D.t("moveTriggers:substituteOnOverlap",{pokemonName:ee(A)}):A.hp<=Math.floor(A.getMaxHp()/4)||A.getMaxHp()===1?D.t("moveTriggers:substituteNotEnoughHp"):D.t("battle:attackFailed")}};L(n4,"AddSubstituteAttr");let Tu=n4;const i4=class i4 extends Ut{constructor(A,s,R){super(R===void 0||R),this.healRatio=A||1,this.showAnim=!!s}apply(A,s,R,n){return this.addHealPhase(this.selfTarget?A:s,this.healRatio),!0}addHealPhase(A,s){A.scene.unshiftPhase(new mE(A.scene,A.getBattlerIndex(),Yt(A.getMaxHp()*s),D.t("moveTriggers:healHp",{pokemonName:ee(A)}),!0,!this.showAnim))}getTargetBenefitScore(A,s,R){const n=(1-(this.selfTarget?A:s).getHpRatio())*20-this.healRatio*10;return Math.round(n/(1-this.healRatio/2))}};L(i4,"HealAttr");let os=i4;const I4=class I4 extends Ut{constructor(A,s){super(),this.message=A,this.abilityCondition=s}canApply(A,s,R,n){return!!(this.selfTarget&&A.hp&&!A.getTag(Y.FRENZY)||!this.selfTarget&&(!s.getTag(Y.PROTECTED)||R.hasFlag(2)))}apply(A,s,R,n){return this.canApply(A,s,R,n)?((A.isPlayer()?A.scene.getPlayerParty():A.scene.getEnemyParty()).forEach(a=>this.cureStatus(a,A.id)),this.message&&A.scene.queueMessage(this.message),!0):!1}cureStatus(A,s){var R;!A.isOnField()||A.id===s?(A.resetStatus(!1),A.updateInfo()):A.hasAbility(this.abilityCondition)?A.scene.unshiftPhase(new bn(A.scene,A.id,((R=A.getPassiveAbility())==null?void 0:R.id)===this.abilityCondition)):(A.resetStatus(),A.updateInfo())}};L(I4,"PartyStatusCureAttr");let ZL=I4;const a4=class a4 extends Ut{apply(A,s,R,n){const I=s.getAlly(),a=new Lt(!1);return I&&Ct(DE,I,a),a.value||!I||I.switchOutStatus?!1:(I.damageAndUpdate(Math.max(1,Math.floor(1/16*I.getMaxHp())),wt.OTHER),!0)}getTargetBenefitScore(A,s,R){return s.getAlly()?-5:0}};L(a4,"FlameBurstAttr");let uH=a4;const r4=class r4 extends yn{constructor(A,s){super(),this.restorePP=A,this.moveMessage=s}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=A.scene.getPlayerParty().map(a=>a.getMaxHp()).reduce((a,r)=>Math.max(r,a),0);return A.scene.pushPhase(new mE(A.scene,A.getBattlerIndex(),I,D.t(this.moveMessage,{pokemonName:ee(A)}),!0,!1,!1,!0,!1,this.restorePP),!0),!0}getUserBenefitScore(A,s,R){return-20}getCondition(){return(A,s,R)=>A.scene.getPlayerParty().filter(n=>n.isActive()).length>A.scene.currentBattle.getBattlerCount()}};L(r4,"SacrificialFullRestoreAttr");let Su=r4;const L4=class L4 extends rA{constructor(A){super(),this.weather=A}apply(A,s,R,n){var a;const I=n[0];return((a=A.scene.arena.weather)==null?void 0:a.weatherType)===this.weather&&(I.value=Math.max(I.value,1)),!0}};L(L4,"IgnoreWeatherTypeDebuffAttr");let ou=L4;const N4=class N4 extends os{constructor(){super(.5)}apply(A,s,R,n){var a,r;let I=.5;if(!((a=A.scene.arena.weather)!=null&&a.isEffectSuppressed(A.scene))){const S=((r=A.scene.arena.weather)==null?void 0:r.weatherType)||se.NONE;I=this.getWeatherHealRatio(S)}return this.addHealPhase(A,I),!0}};L(N4,"WeatherHealAttr");let lu=N4;const T4=class T4 extends lu{getWeatherHealRatio(A){switch(A){case se.SUNNY:case se.HARSH_SUN:return 2/3;case se.RAIN:case se.SANDSTORM:case se.HAIL:case se.SNOW:case se.HEAVY_RAIN:return .25;default:return .5}}};L(T4,"PlantHealAttr");let XL=T4;const S4=class S4 extends lu{getWeatherHealRatio(A){switch(A){case se.SANDSTORM:return 2/3;default:return .5}}};L(S4,"SandHealAttr");let DH=S4;const o4=class o4 extends os{constructor(A,s,R,n,I){super(A,R,n),this.normalHealRatio=A,this.boostedHealRatio=s,this.condition=I}apply(A,s,R,n){const I=this.condition&&this.condition(A,s,R)?this.boostedHealRatio:this.normalHealRatio;return this.addHealPhase(s,I),!0}};L(o4,"BoostHealAttr");let MH=o4;const l4=class l4 extends os{apply(A,s,R,n){return A.getAlly()===s?(super.apply(A,s,R,n),!0):!1}};L(l4,"HealOnAllyAttr");let Cu=l4;const C4=class C4 extends Ut{constructor(A,s){super(!0,{trigger:2}),this.healRatio=A??.5,this.healStat=s??null}apply(A,s,R,n){let I=0,a="";const r=s.hasAbilityWithAttr(rS,!1);return this.healStat!==null?(I=s.getEffectiveStat(this.healStat),a=D.t("battle:drainMessage",{pokemonName:ee(s)})):(I=Yt(A.turnData.singleHitDamageDealt*this.healRatio),a=D.t("battle:regainHealth",{pokemonName:ee(A)})),r&&(A.hasAbilityWithAttr(DE)?(I=0,a=""):(A.turnData.damageTaken+=I,I=I*-1,a="")),A.scene.unshiftPhase(new mE(A.scene,A.getBattlerIndex(),I,a,!1,!0)),!0}getUserBenefitScore(A,s,R){if(this.healStat){const n=s.getEffectiveStat(this.healStat);return Math.floor(Math.max(0,Math.min(1,(n+A.hp)/A.getMaxHp()-.33))/A.getHpRatio())}return Math.floor(Math.max(1-A.getHpRatio()-.33,0)*(R.power/4))}};L(C4,"HitHealAttr");let Ks=C4;const U4=class U4 extends rA{constructor(A,s=1){super(),this.moveIncrementFunc=A,this.increaseAmount=s}apply(A,s,R,n){return this.moveIncrementFunc(A,s,R)?(n[0].value+=this.increaseAmount,!0):!1}};L(U4,"IncrementMovePriorityAttr");let Uu=U4;const u4=class u4 extends rA{constructor(A){super(),this.intrinsicMultiHitType=A!==void 0?A:1,this.multiHitType=this.intrinsicMultiHitType}getMultiHitType(){return this.multiHitType}apply(A,s,R,n){const I=new Rt(this.intrinsicMultiHitType);return MA(uu,A,s,R,I),this.multiHitType=I.value,n[0].value=this.getHitCount(A,s),!0}getTargetBenefitScore(A,s,R){return-5}getHitCount(A,s){switch(this.multiHitType){case 1:{const n=A.randSeedInt(16),I=new ZE(n);return Ct(GS,A,null,!1,I),I.value>=10?2:I.value>=4?3:I.value>=2?4:5}case 0:return 2;case 2:return 3;case 3:return 10;case 4:return(A.isPlayer()?A.scene.getPlayerParty():A.scene.getEnemyParty()).reduce((n,I)=>n+(I.id===A.id?1:I!=null&&I.status&&I.status.effect!==Re.NONE?0:1),0)}}};L(u4,"MultiHitAttr");let TA=u4;const D4=class D4 extends rA{apply(A,s,R,n){return!1}};L(D4,"ChangeMultiHitTypeAttr");let uu=D4;const M4=class M4 extends uu{apply(A,s,R,n){return A.species.speciesId===e.GRENINJA&&A.hasAbility(O.BATTLE_BOND)&&A.formIndex===2?(n[0].value=2,!0):!1}};L(M4,"WaterShurikenMultiHitTypeAttr");let hH=M4;const h4=class h4 extends Ut{constructor(A,s,R,n=!1){super(s,{trigger:2}),this.overrideStatus=!1,this.effect=A,this.turnsRemaining=R,this.overrideStatus=n}apply(A,s,R,n){if(!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const I=this.getMoveChance(A,s,R,this.selfTarget,!0);if(I<0||I===100||A.randSeedInt(100)<I){const r=this.selfTarget?A:s;if(r.status)if(this.overrideStatus)r.resetStatus();else return!1;if(A!==s&&s.isSafeguarded(A))return R.category===2&&A.scene.queueMessage(D.t("moveTriggers:safeguard",{targetName:ee(s)})),!1;if((!r.status||r.status.effect===this.effect&&I<0)&&r.trySetStatus(this.effect,!0,A,this.turnsRemaining))return j6(IU,A,s,R,null,!1,this.effect),!0}return!1}getTargetBenefitScore(A,s,R){const n=this.getMoveChance(A,s,R,this.selfTarget,!1),I=n<0?-10:Math.floor(n*-.1),a=this.selfTarget?A:s;return!a.status&&a.canSetStatus(this.effect,!0,!1,A)?I:0}};L(h4,"StatusEffectAttr");let nt=h4;const c4=class c4 extends nt{constructor(A,s,R,n){super(A[0],s,R,n),this.effects=A}apply(A,s,R,n){return this.effect=JA(this.effects),super.apply(A,s,R,n)}getTargetBenefitScore(A,s,R){const n=this.getMoveChance(A,s,R,this.selfTarget,!1),I=n<0?-10:Math.floor(n*-.1),a=this.selfTarget?A:s;return!a.status&&a.canSetStatus(this.effect,!0,!1,A)?I:0}};L(c4,"MultiStatusEffectAttr");let Du=c4;const _4=class _4 extends Ut{constructor(){super(!1,{trigger:2})}apply(A,s,R,n){var a;const I=((a=A.status)==null?void 0:a.effect)??(A.hasAbility(O.COMATOSE)?Re.SLEEP:void 0);if(s.status)return!1;{const S=s.canSetStatus(I,!0,!1,A)?s.trySetStatus(I,!0,A):!1;return S&&A.status&&A.addTag(Y.PSYCHO_SHIFT),S}}getTargetBenefitScore(A,s,R){var n;return!s.status&&s.canSetStatus((n=A.status)==null?void 0:n.effect,!0,!1,A)?-10:0}};L(_4,"PsychoShiftEffectAttr");let cH=_4;const P4=class P4 extends Ut{constructor(A){super(!1,{trigger:2}),this.chance=A}apply(A,s,R,n){return new Promise(I=>{if(R.hitsSubstitute(A,s)||Phaser.Math.RND.realInRange(0,1)>=this.chance)return I(!1);const r=this.getTargetHeldItems(s).filter(S=>S.isTransferable);if(r.length){const S=s.isPlayer()?PE.PLAYER:s.hasTrainer()?PE.TRAINER:PE.WILD,o=r.map(M=>M.type.getOrInferTier(S)).reduce((M,u)=>Math.max(u,M),0),l=r.filter(M=>M.type.getOrInferTier(S)===o),C=l[A.randSeedInt(l.length)];A.scene.tryTransferHeldItemModifier(C,A,!1).then(M=>{M&&A.scene.queueMessage(D.t("moveTriggers:stoleItem",{pokemonName:ee(A),targetName:ee(s),itemName:C.type.name})),I(M)});return}I(!1)})}getTargetHeldItems(A){return A.scene.findModifiers(s=>s instanceof Ht&&s.pokemonId===A.id,A.isPlayer())}getUserBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?5:0}getTargetBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?-5:0}};L(P4,"StealHeldItemChanceAttr");let Mu=P4;const G4=class G4 extends Ut{constructor(A){super(!1,{trigger:2}),this.berriesOnly=A}apply(A,s,R,n){if(!this.berriesOnly&&s.isPlayer()||R.hitsSubstitute(A,s))return!1;const I=new Lt(!1);if(Ct(Fr,s,I),I.value===!0)return!1;let a=this.getTargetHeldItems(s).filter(r=>r.isTransferable);if(this.berriesOnly&&(a=a.filter(r=>r instanceof lE&&r.pokemonId===s.id,s.isPlayer())),a.length){const r=a[A.randSeedInt(a.length)];s.loseHeldItem(r),s.scene.updateModifiers(s.isPlayer()),this.berriesOnly?A.scene.queueMessage(D.t("moveTriggers:incineratedItem",{pokemonName:ee(A),targetName:ee(s),itemName:r.type.name})):A.scene.queueMessage(D.t("moveTriggers:knockedOffItem",{pokemonName:ee(A),targetName:ee(s),itemName:r.type.name}))}return!0}getTargetHeldItems(A){return A.scene.findModifiers(s=>s instanceof Ht&&s.pokemonId===A.id,A.isPlayer())}getUserBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?5:0}getTargetBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?-5:0}};L(G4,"RemoveHeldItemAttr");let hu=G4;const H4=class H4 extends Ut{constructor(){super(!0,{trigger:2})}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=this.getTargetHeldBerries(s);if(I.length<=0)return!1;this.chosenBerry=I[A.randSeedInt(I.length)];const a=new Lt(!1);return s.scene.applyModifiers(Sa,s.isPlayer(),s,a),a.value||this.reduceBerryModifier(s),this.eatBerry(s),!0}getTargetHeldBerries(A){return A.scene.findModifiers(s=>s instanceof lE&&s.pokemonId===A.id,A.isPlayer())}reduceBerryModifier(A){this.chosenBerry&&A.loseHeldItem(this.chosenBerry),A.scene.updateModifiers(A.isPlayer())}eatBerry(A,s){a8(this.chosenBerry.berryType)(A,s),Ct(PS,A,new Lt(!1))}};L(H4,"EatBerryAttr");let vS=H4;const d4=class d4 extends vS{constructor(){super()}apply(A,s,R,n){if(R.hitsSubstitute(A,s))return!1;const I=new Lt(!1);if(Ct(Fr,s,I),I.value===!0)return!1;const a=this.getTargetHeldBerries(s);if(a.length<=0)return!1;this.chosenBerry=a[A.randSeedInt(a.length)],On(kR,s,!1);const r=D.t("battle:stealEatBerry",{pokemonName:A.name,targetName:s.name,berryName:this.chosenBerry.type.name});return A.scene.queueMessage(r),this.reduceBerryModifier(s),this.eatBerry(A,s),!0}};L(d4,"StealEatBerryAttr");let cu=d4;const f4=class f4 extends Ut{constructor(A,s){super(A,{lastHitOnly:!0}),this.effects=[s].flat(1)}apply(A,s,R,n){if(!super.apply(A,s,R,n)||!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const I=Cn(A,R.id);if(s.hasAbilityWithAttr(xi)&&R.id===t.SPARKLING_ARIA&&I.targets.length===1)return!1;const a=this.selfTarget?A:s;return a.status&&this.effects.includes(a.status.effect)?(a.scene.queueMessage(EI(a.status.effect,ee(a))),a.resetStatus(),a.updateInfo(),!0):!1}isOfEffect(A){return this.effects.includes(A)}getUserBenefitScore(A,s,R){return A.status?10:0}};L(f4,"HealStatusEffectAttr");let jA=f4;const B4=class B4 extends rA{apply(A,s,R,n){var I;return((I=A.status)==null?void 0:I.effect)===Re.SLEEP?(A.addTag(Y.BYPASS_SLEEP,1,R.id,A.id),!0):!1}getUserBenefitScore(A,s,R){return A.status&&A.status.effect===Re.SLEEP?200:-10}};L(B4,"BypassSleepAttr");let VS=B4;const g4=class g4 extends rA{apply(A,s,R,n){return n[0].value=!0,!0}};L(g4,"BypassBurnDamageReductionAttr");let _u=g4;const K4=class K4 extends Ut{constructor(A){super(),this.weatherType=A}apply(A,s,R,n){return A.scene.arena.trySetWeather(this.weatherType,!0)}getCondition(){return(A,s,R)=>!A.scene.arena.weather||A.scene.arena.weather.weatherType!==this.weatherType&&!A.scene.arena.weather.isImmutable()}};L(K4,"WeatherChangeAttr");let TI=K4;const m4=class m4 extends Ut{constructor(A){super(),this.weatherType=A}apply(A,s,R,n){var I;return((I=A.scene.arena.weather)==null?void 0:I.weatherType)===this.weatherType?A.scene.arena.trySetWeather(se.NONE,!0):!1}};L(m4,"ClearWeatherAttr");let _H=m4;const F4=class F4 extends Ut{constructor(A){super(),this.terrainType=A}apply(A,s,R,n){return A.scene.arena.trySetTerrain(this.terrainType,!0,!0)}getCondition(){return(A,s,R)=>!A.scene.arena.terrain||A.scene.arena.terrain.terrainType!==this.terrainType}getUserBenefitScore(A,s,R){return A.scene.arena.terrain?0:6}};L(F4,"TerrainChangeAttr");let SI=F4;const p4=class p4 extends Ut{constructor(){super()}apply(A,s,R,n){return A.scene.arena.trySetTerrain(Nt.NONE,!0,!0)}};L(p4,"ClearTerrainAttr");let xa=p4;const W4=class W4 extends rA{apply(A,s,R,n){return s.isBossImmune()?!1:(n[0].value=!0,!0)}getCondition(){return(A,s,R)=>{const n=new Lt(!1);return Ct(oU,s,n),!n.value&&A.level>=s.level}}};L(W4,"OneHitKOAttr");let vO=W4;const Y4=class Y4 extends rA{constructor(A){super(!0),this.condition=A}apply(A,s,R,n){const I=n[0];return I instanceof Lt&&this.condition(A,R)?(I.value=!0,!0):!1}};L(Y4,"InstantChargeAttr");let Pu=Y4;const y4=class y4 extends Pu{constructor(A){super((s,R)=>{const n=s.scene.arena.weather;return Ve(n==null?void 0:n.weatherType)?!1:!(n!=null&&n.isEffectSuppressed(s.scene))&&A.includes(n==null?void 0:n.weatherType)})}};L(y4,"WeatherInstantChargeAttr");let QL=y4;const w4=class w4 extends rA{apply(A,s,R,n){return!0}};L(w4,"OverrideMoveEffectAttr");let ln=w4;const v4=class v4 extends ln{constructor(A,s,R){super(),this.tagType=A,this.chargeAnim=s,this.chargeText=R}apply(A,s,R,n){if(!s)return Promise.resolve(!0);const I=s.isPlayer()?St.PLAYER:St.ENEMY;return new Promise(a=>{n.length<2||!n[1]?new yS(this.chargeAnim,R.id,A).play(A.scene,!1,()=>{n[0].value=!0,A.scene.queueMessage(this.chargeText.replace("{TARGET}",ee(s)).replace("{USER}",ee(A))),A.pushMoveHistory({move:R.id,targets:[s.getBattlerIndex()],result:CA.OTHER}),A.scene.arena.addTag(this.tagType,3,R.id,A.id,I,!1,s.getBattlerIndex()),a(!0)}):A.scene.ui.showText(D.t("moveTriggers:tookMoveAttack",{pokemonName:ee(A.scene.getPokemonById(s.id)??void 0),moveName:R.name}),null,()=>a(!0))})}};L(v4,"DelayedAttackAttr");let Xn=v4;const XD=class XD extends ln{constructor(){super(!0)}apply(A,s,R,n){if(A.turnData.combiningPledge)return A.scene.queueMessage(D.t("moveTriggers:combiningPledge")),!1;const I=n[0],a=A.scene.findPhase(r=>r instanceof HA&&r.pokemon.isPlayer()===A.isPlayer());if(a){const r=a.move.getMove();if(r!==R&&r.hasAttr(XD)){[A,a.pokemon].forEach(l=>l.turnData.combiningPledge=R.id),A.scene.queueMessage(D.t("moveTriggers:awaitingPledge",{userPokemonName:ee(A),allyPokemonName:ee(a.pokemon)}));const S=A.scene.phaseQueue.indexOf(a),o=A.scene.phaseQueue.findIndex(l=>l instanceof HA);return S!==o&&A.scene.prependToPhase(A.scene.phaseQueue.splice(S,1)[0],HA),I.value=!0,!0}}return!1}};L(XD,"AwaitCombinedPledgeAttr");let JL=XD;const V4=class V4 extends Ut{constructor(A,s,R,n){super(R,n),this.stats=A,this.stages=s,this.options=n}get condition(){var A;return((A=this.options)==null?void 0:A.condition)??null}get showMessage(){var A;return((A=this.options)==null?void 0:A.showMessage)??!0}get trigger(){var A;return((A=this.options)==null?void 0:A.trigger)??2}apply(A,s,R,n){if(!super.apply(A,s,R,n)||this.condition&&!this.condition(A,s,R)||!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const I=this.getMoveChance(A,s,R,this.selfTarget,!0);if(I<0||I===100||A.randSeedInt(100)<I){const a=this.getLevels(A);return A.scene.unshiftPhase(new Jt(A.scene,(this.selfTarget?A:s).getBattlerIndex(),this.selfTarget,this.stats,a,this.showMessage)),!0}return!1}getLevels(A){return this.stages}getTargetBenefitScore(A,s,R){let n=0;const I=this.getLevels(A);for(const a of this.stats){let r=I;const S=s.getStatStage(a);r>0?r=Math.min(S+r,6)-S:r=Math.max(S+r,-6)-S;let o=!1;switch(a){case g.ATK:this.selfTarget&&(o=!A.getMoveset().find(l=>l instanceof B&&l.category===0));break;case g.DEF:this.selfTarget||(o=!A.getMoveset().find(l=>l instanceof B&&l.category===0));break;case g.SPATK:this.selfTarget&&(o=!A.getMoveset().find(l=>l instanceof B&&l.category===1));break;case g.SPDEF:this.selfTarget||(o=!A.getMoveset().find(l=>l instanceof B&&l.category===1));break}o||(n+=r*4+(r>0?-2:2))}return n}};L(V4,"StatStageChangeAttr");let De=V4;const x4=class x4 extends Ut{constructor(){super(!1)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;let I;const a=A.scene.arena.getTerrainType();if(a!==Nt.NONE)I=this.determineTerrainEffect(a);else{const r=A.scene.arena.biomeType;I=this.determineBiomeEffect(r)}return I.apply(A,s,R,[])}determineTerrainEffect(A){let s;switch(A){case Nt.ELECTRIC:default:s=new nt(Re.PARALYSIS,!1);break;case Nt.MISTY:s=new De([g.SPATK],-1,!1);break;case Nt.GRASSY:s=new nt(Re.SLEEP,!1);break;case Nt.PSYCHIC:s=new De([g.SPD],-1,!1);break}return s}determineBiomeEffect(A){let s;switch(A){case N.PLAINS:case N.GRASS:case N.TALL_GRASS:case N.FOREST:case N.JUNGLE:case N.MEADOW:s=new nt(Re.SLEEP,!1);break;case N.SWAMP:case N.MOUNTAIN:case N.TEMPLE:case N.RUINS:s=new De([g.SPD],-1,!1);break;case N.ICE_CAVE:case N.SNOWY_FOREST:s=new nt(Re.FREEZE,!1);break;case N.VOLCANO:s=new nt(Re.BURN,!1);break;case N.FAIRY_CAVE:s=new De([g.SPATK],-1,!1);break;case N.DESERT:case N.CONSTRUCTION_SITE:case N.BEACH:case N.ISLAND:case N.BADLANDS:s=new De([g.ACC],-1,!1);break;case N.SEA:case N.LAKE:case N.SEABED:s=new De([g.ATK],-1,!1);break;case N.CAVE:case N.WASTELAND:case N.GRAVEYARD:case N.ABYSS:case N.SPACE:s=new Gt(Y.FLINCHED,!1,!0);break;case N.END:s=new De([g.DEF],-1,!1);break;case N.TOWN:case N.METROPOLIS:case N.SLUM:case N.DOJO:case N.FACTORY:case N.LABORATORY:case N.POWER_PLANT:default:s=new nt(Re.PARALYSIS,!1);break}return s}};L(x4,"SecretPowerAttr");let Gu=x4;const b4=class b4 extends rA{constructor(A,s,R,n,I=!0,a=!1){super(),this.stats=A,this.stages=s,this.condition=n,this.showMessage=I}applyPostVictory(A,s,R){if(this.condition&&!this.condition(A,s,R))return;new De(this.stats,this.stages,this.showMessage).apply(A,s,R)}};L(b4,"PostVictoryStatStageChangeAttr");let Hu=b4;const k4=class k4 extends Ut{constructor(){super()}apply(A,s,R,n){const I=MO.filter(a=>s.getStatStage(a)<6);if(I.length>0){const a=[I[A.randSeedInt(I.length)]];return A.scene.unshiftPhase(new Jt(A.scene,s.getBattlerIndex(),this.selfTarget,a,2)),!0}return!1}};L(k4,"AcupressureStatStageChangeAttr");let PH=k4;const Z4=class Z4 extends De{constructor(){super([g.ATK,g.SPATK],1,!0)}getLevels(A){var s,R;if(!((s=A.scene.arena.weather)!=null&&s.isEffectSuppressed(A.scene))){const n=(R=A.scene.arena.weather)==null?void 0:R.weatherType;if(n===se.SUNNY||n===se.HARSH_SUN)return this.stages+1}return this.stages}};L(Z4,"GrowthStatStageChangeAttr");let GH=Z4;const X4=class X4 extends De{constructor(A,s,R,n){super(A,s,!0),this.cutRatio=R,this.messageCallback=n}apply(A,s,R,n){return new Promise(I=>{A.damageAndUpdate(Yt(A.getMaxHp()/this.cutRatio),wt.OTHER,!1,!0),A.updateInfo().then(()=>{const a=super.apply(A,s,R,n);this.messageCallback&&this.messageCallback(A),I(a)})})}getCondition(){return(A,s,R)=>A.getHpRatio()>1/this.cutRatio&&this.stats.some(n=>A.getStatStage(n)<6)}};L(X4,"CutHpStatStageBoostAttr");let $L=X4;const Q4=class Q4 extends Ut{constructor(){super(!0,{trigger:2})}apply(A,s,R,n){const I=A.getTag(zU);if(!I)return!1;let a=g.ATK;switch(I.tatsugiriFormKey){case"curly":a=g.ATK;break;case"droopy":a=g.DEF;break;case"stretchy":a=g.SPD;break}return A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),this.selfTarget,[a],1)),!0}};L(Q4,"OrderUpStatBoostAttr");let HH=Q4;const J4=class J4 extends Ut{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;for(const I of MO)A.setStatStage(I,s.getStatStage(I));return s.getTag(Y.CRIT_BOOST)?A.addTag(Y.CRIT_BOOST,0,R.id):A.removeTag(Y.CRIT_BOOST),s.updateInfo(),A.updateInfo(),s.scene.queueMessage(D.t("moveTriggers:copiedStatChanges",{pokemonName:ee(A),targetName:ee(s)})),!0}};L(J4,"CopyStatsAttr");let dH=J4;const $4=class $4 extends Ut{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;for(const I of MO)s.setStatStage(I,-s.getStatStage(I));return s.updateInfo(),A.updateInfo(),s.scene.queueMessage(D.t("moveTriggers:invertStats",{pokemonName:ee(s)})),!0}};L($4,"InvertStatsAttr");let fH=$4;const z4=class z4 extends Ut{constructor(A){super(),this.targetAllPokemon=A}async apply(A,s,R,n){const I=[];return this.targetAllPokemon?(A.scene.getField(!0).forEach(r=>I.push(this.resetStats(r))),s.scene.queueMessage(D.t("moveTriggers:statEliminated"))):R.hitsSubstitute(A,s)||(I.push(this.resetStats(s)),s.scene.queueMessage(D.t("moveTriggers:resetStats",{pokemonName:ee(s)}))),await Promise.all(I),!0}async resetStats(A){for(const s of MO)A.setStatStage(s,0);return A.updateInfo()}};L(z4,"ResetStatsAttr");let zL=z4;const q4=class q4 extends Ut{constructor(A){super(),this.stats=A}apply(A,s,R,n){if(super.apply(A,s,R,n)){for(const I of this.stats){const a=A.getStatStage(I);A.setStatStage(I,s.getStatStage(I)),s.setStatStage(I,a)}return s.updateInfo(),A.updateInfo(),this.stats.length===7?A.scene.queueMessage(D.t("moveTriggers:switchedStatChanges",{pokemonName:ee(A)})):this.stats.length===2&&A.scene.queueMessage(D.t("moveTriggers:switchedTwoStatChanges",{pokemonName:ee(A),firstStat:D.t(_E(this.stats[0])),secondStat:D.t(_E(this.stats[1]))})),!0}return!1}};L(q4,"SwapStatStagesAttr");let qL=q4;const j4=class j4 extends Ut{apply(A,s,R,n){return new Promise(I=>{if(!super.apply(A,s,R,n))return I(!1);const a=[],r=Math.floor((s.hp+A.hp)/2);if(A.hp<r){const S=A.heal(r-A.hp);S&&A.scene.damageNumberHandler.add(A,S,wt.HEAL)}else if(A.hp>r){const S=A.damage(A.hp-r,!0);S&&A.scene.damageNumberHandler.add(A,S)}if(a.push(A.updateInfo()),s.hp<r){const S=s.heal(r-s.hp);S&&A.scene.damageNumberHandler.add(A,S,wt.HEAL)}else if(s.hp>r){const S=s.damage(s.hp-r,!0);S&&s.scene.damageNumberHandler.add(s,S)}return a.push(s.updateInfo()),Promise.all(a).then(()=>I(!0))})}};L(j4,"HpSplitAttr");let BH=j4;const e3=class e3 extends rA{apply(A,s,R,n){return!1}};L(e3,"VariablePowerAttr");let WA=e3;const t3=class t3 extends WA{apply(A,s,R,n){var o;const I=R.pp,a=(o=A.moveset.find(l=>(l==null?void 0:l.moveId)===R.id))==null?void 0:o.ppUsed;let r=I-a;r<0&&(r=0);const S=n[0];switch(r){case 0:S.value=200;break;case 1:S.value=80;break;case 2:S.value=60;break;case 3:S.value=50;break;default:S.value=40;break}return!0}};L(t3,"LessPPMorePowerAttr");let gH=t3;const A3=class A3 extends WA{constructor(A){super(),this.powerMultiplierFunc=A}apply(A,s,R,n){const I=n[0];return I.value*=this.powerMultiplierFunc(A,s,R),!0}};L(A3,"MovePowerMultiplierAttr");let GA=A3;const IJ=L((E,A)=>{const s=E.isPlayer()?E.scene.getPlayerParty():E.scene.getEnemyParty();for(let R=A;R<s.length;R++){const n=s[R];if(!(n.id!==E.id&&(n!=null&&n.status)&&n.status.effect!==Re.NONE))return n.species.getBaseStat(g.ATK)/10+5}return 0},"beatUpFunc"),E3=class E3 extends WA{apply(A,s,R,n){const I=n[0],r=(A.isPlayer()?A.scene.getPlayerParty():A.scene.getEnemyParty()).filter(o=>{var l;return o.id===A.id||!((l=o.status)!=null&&l.effect)}).length,S=(A.turnData.hitCount-A.turnData.hitsLeft)%r;return I.value=IJ(A,S),!0}};L(E3,"BeatUpAttr");let KH=E3;const aJ=L((E,A,s)=>{let R="";return E.scene.executeWithSeedOffset(()=>{_e(100)<s.chance&&(R=D.t("moveTriggers:goingAllOutForAttack",{pokemonName:ee(E)}))},E.scene.currentBattle.turn<<6,E.scene.waveSeed),R},"doublePowerChanceMessageFunc"),s3=class s3 extends WA{apply(A,s,R,n){let I;if(A.scene.executeWithSeedOffset(()=>I=_e(100),A.scene.currentBattle.turn<<6,A.scene.waveSeed),I<R.chance){const a=n[0];return a.value*=2,!0}return!1}};L(s3,"DoublePowerChanceAttr");let mH=s3;const R3=class R3 extends GA{constructor(A,s,R,...n){super((I,a,r)=>{var C;const S=I.getLastXMoves(A+1).slice(1);let o=0,l;for(;(((C=l=S.shift())==null?void 0:C.move)===r.id||n.length&&n.includes(l==null?void 0:l.move))&&(!s||(l==null?void 0:l.result)===CA.SUCCESS);)if(o<A-1)o++;else if(R)o=0;else break;return this.getMultiplier(o)})}};L(R3,"ConsecutiveUsePowerMultiplierAttr");let du=R3;const O3=class O3 extends du{getMultiplier(A){return Math.pow(2,A)}};L(O3,"ConsecutiveUseDoublePowerAttr");let Lr=O3;const n3=class n3 extends du{getMultiplier(A){return A+1}};L(n3,"ConsecutiveUseMultiBasePowerAttr");let FH=n3;const i3=class i3 extends WA{apply(A,s,R,n){const I=n[0],a=s.getWeight(),r=[10,25,50,100,200];let S=0;for(;a>=r[S]&&++S!==r.length;);return I.value=(S+1)*20,!0}};L(i3,"WeightPowerAttr");let fu=i3;const I3=class I3 extends WA{apply(A,s,R,n){const I=n[0],a=s.getEffectiveStat(g.SPD)/A.getEffectiveStat(g.SPD),r=[.25,1/3,.5,1,-1],S=[150,120,80,60,40];let o=0;for(;o<r.length-1&&a>r[o]&&++o!==r.length;);return I.value=S[o],!0}};L(I3,"ElectroBallPowerAttr");let pH=I3;const a3=class a3 extends WA{apply(A,s,R,n){const I=n[0],a=A.getEffectiveStat(g.SPD);return a<1?(I.value=1,!0):(I.value=Math.floor(Math.min(150,25*s.getEffectiveStat(g.SPD)/a+1)),!0)}};L(a3,"GyroBallPowerAttr");let WH=a3;const r3=class r3 extends WA{apply(A,s,R,n){const I=n[0],a=A.getHpRatio();switch(!0){case a<.0417:I.value=200;break;case a<.1042:I.value=150;break;case a<.2083:I.value=100;break;case a<.3542:I.value=80;break;case a<.6875:I.value=40;break;default:I.value=20;break}return!0}};L(r3,"LowHpPowerAttr");let Bu=r3;const L3=class L3 extends WA{apply(A,s,R,n){const I=n[0],a=A.getWeight(),r=s.getWeight();if(!a||a===0)return!1;const S=r/a*100;switch(!0){case S<20.01:I.value=120;break;case S<25.01:I.value=100;break;case S<33.35:I.value=80;break;case S<50.01:I.value=60;break;default:I.value=40;break}return!0}};L(L3,"CompareWeightPowerAttr");let gu=L3;const N3=class N3 extends WA{apply(A,s,R,n){return n[0].value=Yt(150*A.getHpRatio()),!0}};L(N3,"HpPowerAttr");let jL=N3;const T3=class T3 extends WA{constructor(A){super(),this.maxBasePower=A}apply(A,s,R,n){return n[0].value=Yt(this.maxBasePower*s.getHpRatio()),!0}};L(T3,"OpponentHighHpPowerAttr");let eN=T3;const S3=class S3 extends WA{apply(A,s,R,n){return console.log(s.getLastXMoves(1),s.scene.currentBattle.turn),s.getLastXMoves(1).find(I=>I.turn===s.scene.currentBattle.turn)?!1:(n[0].value*=2,!0)}};L(S3,"FirstAttackDoublePowerAttr");let Ku=S3;const o3=class o3 extends WA{apply(A,s,R,n){return A.turnData.attacksReceived.find(I=>I.damage&&I.sourceId===s.id)?(n[0].value*=2,!0):!1}};L(o3,"TurnDamagedDoublePowerAttr");let mu=o3;const rJ=L((E,A,s)=>{let R;return E.scene.executeWithSeedOffset(()=>{const n=[5,15,35,65,75,95],I=_e(100);let a=0;for(;a<n.length&&!(I<n[a]);a++);R=D.t("moveTriggers:magnitudeMessage",{magnitude:a+4})},E.scene.currentBattle.turn<<6,E.scene.waveSeed),R},"magnitudeMessageFunc"),l3=class l3 extends WA{apply(A,s,R,n){const I=n[0],a=[5,15,35,65,75,95],r=[10,30,50,70,90,100,110,150];let S;A.scene.executeWithSeedOffset(()=>S=_e(100),A.scene.currentBattle.turn<<6,A.scene.waveSeed);let o=0;for(;o<a.length&&!(S<a[o]);o++);return I.value=r[o],!0}};L(l3,"MagnitudePowerAttr");let YH=l3;const C3=class C3 extends WA{apply(A,s,R,n){var I,a;if(!((I=A.scene.arena.weather)!=null&&I.isEffectSuppressed(A.scene))){const r=n[0];switch(((a=A.scene.arena.weather)==null?void 0:a.weatherType)||se.NONE){case se.RAIN:case se.SANDSTORM:case se.HAIL:case se.SNOW:case se.HEAVY_RAIN:return r.value*=.5,!0}}return!1}};L(C3,"AntiSunlightPowerDecreaseAttr");let Fu=C3;const U3=class U3 extends WA{constructor(A){super(),this.invert=!!A}apply(A,s,R,n){const I=n[0],a=Math.floor(Math.min(A instanceof wE?A.friendship:A.species.baseFriendship,255)/2.5);return I.value=Math.max(this.invert?102-a:a,1),!0}};L(U3,"FriendshipPowerAttr");let ba=U3;const u3=class u3 extends WA{apply(A,s,R,n){return n[0].value+=Math.min(A.battleData.hitCount,6)*50,!0}};L(u3,"HitCountPowerAttr");let yH=u3;const R8=L(E=>E.getStatStages().reduce((A,s)=>s&&s>0?A+s:A,0),"countPositiveStatStages"),D3=class D3 extends WA{apply(A,s,R,n){const I=R8(A);return n[0].value+=I*20,!0}};L(D3,"PositiveStatStagePowerAttr");let pu=D3;const M3=class M3 extends WA{constructor(){super(...arguments),this.PUNISHMENT_MIN_BASE_POWER=60,this.PUNISHMENT_MAX_BASE_POWER=200}apply(A,s,R,n){const I=R8(s);return n[0].value=Math.min(this.PUNISHMENT_MAX_BASE_POWER,this.PUNISHMENT_MIN_BASE_POWER+I*20),!0}};L(M3,"PunishmentPowerAttr");let wH=M3;const h3=class h3 extends WA{apply(A,s,R,n){const I=A.turnData.hitCount===A.turnData.hitsLeft,a=_e(I?100:80);return a<=40?n[0].value=40:40<a&&a<=70?n[0].value=80:70<a&&a<=80?n[0].value=120:80<a&&a<=100&&(A.stopMultiHit(),s.scene.unshiftPhase(new mE(s.scene,s.getBattlerIndex(),Yt(s.getMaxHp()/4),D.t("moveTriggers:regainedHealth",{pokemonName:ee(s)}),!0))),!0}};L(h3,"PresentPowerAttr");let vH=h3;const c3=class c3 extends WA{apply(A,s,R,n){return A.species.speciesId===e.GRENINJA&&A.hasAbility(O.BATTLE_BOND)&&A.formIndex===2?(n[0].value=20,!0):!1}};L(c3,"WaterShurikenPowerAttr");let VH=c3;const _3=class _3 extends WA{constructor(A){super(),this.multiplier=0,this.multiplier=A}apply(A,s,R,n){const I=A.getTag(Oa);if(I&&I.stockpiledCount>0){const a=n[0];return a.value=this.multiplier*I.stockpiledCount,!0}return!1}};L(_3,"SpitUpPowerAttr");let xH=_3;const P3=class P3 extends os{apply(A,s,R,n){const I=A.getTag(Oa);if(I&&I.stockpiledCount>0){const a=I.stockpiledCount;let r;if(a===1?r=.25:a===2?r=.5:r=1,r)return this.addHealPhase(A,r),!0}return!1}};L(P3,"SwallowHealAttr");let bH=P3;const pb=L(E=>{const A=E.getTag(Oa);return!!A&&A.stockpiledCount>0},"hasStockpileStacksCondition"),G3=class G3 extends WA{constructor(A){super(),this.maxHits=A}apply(A,s,R,n){const I=A.turnData.hitCount-Math.max(A.turnData.hitsLeft,0),a=n[0];return a.value=R.power*(1+I%this.maxHits),!0}};L(G3,"MultiHitPowerIncrementAttr");let Wu=G3;const H3=class H3 extends WA{constructor(A){super(),this.move=A}apply(A,s,R,n){const I=n[0],a=A.getOpponent(0),r=[];if(a!=null&&a.turnData.acted&&r.push(a),A.scene.currentBattle.double){const S=A.getAlly(),o=a==null?void 0:a.getAlly();S&&S.turnData.acted&&r.push(S),o&&o.turnData.acted&&r.push(o)}r.sort((S,o)=>o.turnData.order-S.turnData.order);for(const S of r){const[o]=S.getLastXMoves(1);if((o==null?void 0:o.result)!==CA.FAIL){if((o==null?void 0:o.result)===CA.SUCCESS&&(o==null?void 0:o.move)===this.move)return I.value*=2,!0;break}}return!1}};L(H3,"LastMoveDoublePowerAttr");let Yu=H3;const d3=class d3 extends WA{apply(A,s,R,n){const I=n[0];if(!(I instanceof Rt))return!1;const a=A.turnData.combiningPledge;return a&&a!==R.id?(I.value*=150/80,!0):!1}};L(d3,"CombinedPledgePowerAttr");let tN=d3;const f3=class f3 extends rA{apply(A,s,R,n){const I=n[0];if(!(I instanceof Rt))return!1;const a=A.turnData.combiningPledge;return a&&a!==R.id?(I.value=1.5,!0):!1}};L(f3,"CombinedPledgeStabBoostAttr");let Nr=f3;const B3=class B3 extends WA{apply(A,s,R,n){var a;const I=n[0];return I instanceof Rt&&(a=A.turnData)!=null&&a.joinedRound?(I.value*=2,!0):!1}};L(B3,"RoundPowerAttr");let kH=B3;const g3=class g3 extends Ut{constructor(){super(!0,{lastHitOnly:!0})}apply(A,s,R,n){const I=A.scene.findPhase(S=>S instanceof HA&&S.move.moveId===t.ROUND);if(!I)return!1;const a=A.scene.phaseQueue.indexOf(I),r=A.scene.phaseQueue.findIndex(S=>S instanceof HA);return a!==r&&A.scene.prependToPhase(A.scene.phaseQueue.splice(a,1)[0],HA),I.pokemon.turnData.joinedRound=!0,!0}};L(g3,"CueNextRoundAttr");let ZH=g3;const K3=class K3 extends rA{constructor(){super()}apply(A,s,R,n){return!1}};L(K3,"VariableAtkAttr");let ia=K3;const m3=class m3 extends ia{constructor(){super()}apply(A,s,R,n){return n[0].value=s.getEffectiveStat(g.ATK,s),!0}};L(m3,"TargetAtkUserAtkAttr");let XH=m3;const F3=class F3 extends ia{constructor(){super()}apply(A,s,R,n){return n[0].value=A.getEffectiveStat(g.DEF,s),!0}};L(F3,"DefAtkAttr");let QH=F3;const p3=class p3 extends rA{constructor(){super()}apply(A,s,R,n){return!1}};L(p3,"VariableDefAttr");let yu=p3;const W3=class W3 extends yu{constructor(){super()}apply(A,s,R,n){return n[0].value=s.getEffectiveStat(g.DEF,A),!0}};L(W3,"DefDefAttr");let AN=W3;const Y3=class Y3 extends rA{apply(A,s,R,n){return!1}};L(Y3,"VariableAccuracyAttr");let Qn=Y3;const y3=class y3 extends Qn{apply(A,s,R,n){var I,a;if(!((I=A.scene.arena.weather)!=null&&I.isEffectSuppressed(A.scene))){const r=n[0];switch(((a=A.scene.arena.weather)==null?void 0:a.weatherType)||se.NONE){case se.SUNNY:case se.HARSH_SUN:return r.value=50,!0;case se.RAIN:case se.HEAVY_RAIN:return r.value=-1,!0}}return!1}};L(y3,"ThunderAccuracyAttr");let wu=y3;const w3=class w3 extends Qn{apply(A,s,R,n){var I,a;if(!((I=A.scene.arena.weather)!=null&&I.isEffectSuppressed(A.scene))){const r=n[0];switch(((a=A.scene.arena.weather)==null?void 0:a.weatherType)||se.NONE){case se.RAIN:case se.HEAVY_RAIN:return r.value=-1,!0}}return!1}};L(w3,"StormAccuracyAttr");let EN=w3;const v3=class v3 extends Qn{apply(A,s,R,n){if(s.getTag(Y.MINIMIZED)){const I=n[0];return I.value=-1,!0}return!1}};L(v3,"AlwaysHitMinimizeAttr");let en=v3;const V3=class V3 extends Qn{apply(A,s,R,n){if(A.isOfType(i.POISON)){const I=n[0];return I.value=-1,!0}return!1}};L(V3,"ToxicAccuracyAttr");let vu=V3;const x3=class x3 extends Qn{apply(A,s,R,n){var I,a;if(!((I=A.scene.arena.weather)!=null&&I.isEffectSuppressed(A.scene))){const r=n[0],S=((a=A.scene.arena.weather)==null?void 0:a.weatherType)||se.NONE;if(S===se.HAIL||S===se.SNOW)return r.value=-1,!0}return!1}};L(x3,"BlizzardAccuracyAttr");let JH=x3;const b3=class b3 extends rA{apply(A,s,R,n){return!1}};L(b3,"VariableMoveCategoryAttr");let Ji=b3;const k3=class k3 extends Ji{apply(A,s,R,n){const I=n[0];return A.getEffectiveStat(g.ATK,s,R)>A.getEffectiveStat(g.SPATK,s,R)?(I.value=0,!0):!1}};L(k3,"PhotonGeyserCategoryAttr");let Vu=k3;const Z3=class Z3 extends Ji{apply(A,s,R,n){const I=n[0];return A.isTerastallized()&&A.getEffectiveStat(g.ATK,s,R)>A.getEffectiveStat(g.SPATK,s,R)?(I.value=0,!0):!1}};L(Z3,"TeraMoveCategoryAttr");let xu=Z3;const X3=class X3 extends WA{apply(A,s,R,n){const I=n[0];return A.isTerastallized()&&A.getTeraType()===i.STELLAR?(I.value=100,!0):!1}};L(X3,"TeraBlastPowerAttr");let $H=X3;const Q3=class Q3 extends Ji{apply(A,s,R,n){const I=n[0];return A.getAlly()===s?(I.value=2,!0):!1}};L(Q3,"StatusCategoryOnAllyAttr");let bu=Q3;const J3=class J3 extends Ji{apply(A,s,R,n){const I=n[0],a=s.getBaseDamage(A,R,0,!0,!0),r=s.getBaseDamage(A,R,1,!0,!0);return a>r||a===r&&A.randSeedInt(2)===0?(I.value=0,!0):!1}};L(J3,"ShellSideArmCategoryAttr");let zH=J3;const $3=class $3 extends rA{apply(A,s,R,n){return!1}};L($3,"VariableMoveTypeAttr");let is=$3;const z3=class z3 extends is{apply(A,s,R,n){if(A.isTerastallized()&&(A.hasFusionSpecies(e.TERAPAGOS)||A.species.speciesId===e.TERAPAGOS)){const I=n[0];return I.value=i.STELLAR,!0}return!1}};L(z3,"TeraStarstormTypeAttr");let qH=z3;const q3=class q3 extends is{apply(A,s,R,n){var a,r,S;const I=n[0];if(!(I instanceof Rt))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.ARCEUS)||[A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.SILVALLY)){const o=A.species.speciesId===e.ARCEUS||A.species.speciesId===e.SILVALLY?A.formIndex:(S=A.fusionSpecies)==null?void 0:S.formIndex;return I.value=i[i[o]],!0}return!1}};L(q3,"FormChangeItemTypeAttr");let ku=q3;const j3=class j3 extends is{apply(A,s,R,n){var a,r;const I=n[0];if(!(I instanceof Rt))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.GENESECT)){switch(A.species.speciesId===e.GENESECT?A.formIndex:(r=A.fusionSpecies)==null?void 0:r.formIndex){case 1:I.value=i.ELECTRIC;break;case 2:I.value=i.FIRE;break;case 3:I.value=i.ICE;break;case 4:I.value=i.WATER;break;default:I.value=i.NORMAL;break}return!0}return!1}};L(j3,"TechnoBlastTypeAttr");let jH=j3;const e2=class e2 extends is{apply(A,s,R,n){var a,r;const I=n[0];if(!(I instanceof Rt))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.MORPEKO)){switch(A.species.speciesId===e.MORPEKO?A.formIndex:(r=A.fusionSpecies)==null?void 0:r.formIndex){case 1:I.value=i.DARK;break;default:I.value=i.ELECTRIC;break}return!0}return!1}};L(e2,"AuraWheelTypeAttr");let ed=e2;const t2=class t2 extends is{apply(A,s,R,n){var a,r;const I=n[0];if(!(I instanceof Rt))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.PALDEA_TAUROS)){switch(A.species.speciesId===e.PALDEA_TAUROS?A.formIndex:(r=A.fusionSpecies)==null?void 0:r.formIndex){case 1:I.value=i.FIRE;break;case 2:I.value=i.WATER;break;default:I.value=i.FIGHTING;break}return!0}return!1}};L(t2,"RagingBullTypeAttr");let td=t2;const A2=class A2 extends is{apply(A,s,R,n){var a,r;const I=n[0];if(!(I instanceof Rt))return!1;if([A.species.speciesId,(a=A.fusionSpecies)==null?void 0:a.speciesId].includes(e.OGERPON)){switch(A.species.speciesId===e.OGERPON?A.formIndex:(r=A.fusionSpecies)==null?void 0:r.formIndex){case 1:case 5:I.value=i.WATER;break;case 2:case 6:I.value=i.FIRE;break;case 3:case 7:I.value=i.ROCK;break;case 4:default:I.value=i.GRASS;break}return!0}return!1}};L(A2,"IvyCudgelTypeAttr");let Ad=A2;const E2=class E2 extends is{apply(A,s,R,n){var a,r;const I=n[0];if(!(I instanceof Rt))return!1;if(!((a=A.scene.arena.weather)!=null&&a.isEffectSuppressed(A.scene))){switch((r=A.scene.arena.weather)==null?void 0:r.weatherType){case se.SUNNY:case se.HARSH_SUN:I.value=i.FIRE;break;case se.RAIN:case se.HEAVY_RAIN:I.value=i.WATER;break;case se.SANDSTORM:I.value=i.ROCK;break;case se.HAIL:case se.SNOW:I.value=i.ICE;break;default:return!1}return!0}return!1}};L(E2,"WeatherBallTypeAttr");let Ed=E2;const s2=class s2 extends is{apply(A,s,R,n){const I=n[0];if(!(I instanceof Rt)||!A.isGrounded())return!1;switch(A.scene.arena.getTerrainType()){case Nt.MISTY:I.value=i.FAIRY;break;case Nt.ELECTRIC:I.value=i.ELECTRIC;break;case Nt.GRASSY:I.value=i.GRASS;break;case Nt.PSYCHIC:I.value=i.PSYCHIC;break;default:return!1}return!0}};L(s2,"TerrainPulseTypeAttr");let sd=s2;const R2=class R2 extends is{apply(A,s,R,n){const I=n[0];if(!(I instanceof Rt))return!1;const a=Math.floor(((A.ivs[g.HP]&1)+(A.ivs[g.ATK]&1)*2+(A.ivs[g.DEF]&1)*4+(A.ivs[g.SPD]&1)*8+(A.ivs[g.SPATK]&1)*16+(A.ivs[g.SPDEF]&1)*32)*15/63);return I.value=[i.FIGHTING,i.FLYING,i.POISON,i.GROUND,i.ROCK,i.BUG,i.GHOST,i.STEEL,i.FIRE,i.WATER,i.GRASS,i.ELECTRIC,i.PSYCHIC,i.ICE,i.DRAGON,i.DARK][a],!0}};L(R2,"HiddenPowerTypeAttr");let Rd=R2;const O2=class O2 extends is{apply(A,s,R,n){const I=n[0];return I instanceof Rt&&A.isTerastallized()?(I.value=A.getTeraType(),!0):!1}};L(O2,"TeraBlastTypeAttr");let Od=O2;const n2=class n2 extends is{apply(A,s,R,n){const I=n[0];if(!(I instanceof Rt))return!1;const a=A.getTypes(!0);if(a.includes(i.STELLAR)){const r=A.getTypes();return I.value=r[0],!0}else return a.length>0?(I.value=a[0],!0):!1}};L(n2,"MatchUserTypeAttr");let nd=n2;const i2=class i2 extends is{apply(A,s,R,n){const I=n[0];if(!(I instanceof Rt))return!1;const a=A.turnData.combiningPledge;if(!a)return!1;switch(R.id){case t.FIRE_PLEDGE:return a===t.WATER_PLEDGE?(I.value=i.WATER,!0):!1;case t.WATER_PLEDGE:return a===t.GRASS_PLEDGE?(I.value=i.GRASS,!0):!1;case t.GRASS_PLEDGE:return a===t.FIRE_PLEDGE?(I.value=i.FIRE,!0):!1;default:return!1}}};L(i2,"CombinedPledgeTypeAttr");let sN=i2;const I2=class I2 extends rA{apply(A,s,R,n){return!1}};L(I2,"VariableMoveTypeMultiplierAttr");let Ia=I2;const a2=class a2 extends Ia{apply(A,s,R,n){if(!s.getTag(Y.IGNORE_FLYING)){const I=n[0];return s.isOfType(i.FLYING)&&(I.value=1),!0}return!1}};L(a2,"NeutralDamageAgainstFlyingTypeMultiplierAttr");let Zu=a2;const r2=class r2 extends Ia{apply(A,s,R,n){const I=n[0];return s.isOfType(i.ICE)?(I.value=0,!0):!1}};L(r2,"IceNoEffectTypeAttr");let id=r2;const L2=class L2 extends Ia{apply(A,s,R,n){const I=n[0];return I.value*=s.getAttackTypeEffectiveness(i.FLYING,A),!0}};L(L2,"FlyingTypeMultiplierAttr");let Id=L2;const N2=class N2 extends rA{apply(A,s,R,n){return!1}};L(N2,"VariableMoveTypeChartAttr");let Xu=N2;const T2=class T2 extends Xu{apply(A,s,R,n){const I=n[0];return n[1]===i.WATER?(I.value=2,!0):!1}};L(T2,"FreezeDryAttr");let ad=T2;const S2=class S2 extends Qn{apply(A,s,R,n){const I=n[0];return A.level<s.level?I.value=0:I.value=Math.min(Math.max(30+100*(1-s.level/A.level),0),100),!0}};L(S2,"OneHitKOAccuracyAttr");let mi=S2;const o2=class o2 extends mi{apply(A,s,R,n){const I=n[0];if(A.level<s.level)I.value=0;else{const a=A.isOfType(i.ICE)?30:20;I.value=Math.min(Math.max(a+100*(1-s.level/A.level),0),100)}return!0}};L(o2,"SheerColdAccuracyAttr");let rd=o2;const l2=class l2 extends rA{constructor(A){super(),this.missEffectFunc=A}apply(A,s,R,n){return this.missEffectFunc(A,R),!0}};L(l2,"MissEffectAttr");let sO=l2;const C2=class C2 extends rA{constructor(A){super(),this.noEffectFunc=A}apply(A,s,R,n){return this.noEffectFunc(A,R),!0}};L(C2,"NoEffectAttr");let gO=C2;const ni=L((E,A)=>{const s=new Lt(!1);return Ct(DE,E,s),s.value?!1:(E.damageAndUpdate(Yt(E.getMaxHp()/2),wt.OTHER,!1,!0),E.scene.queueMessage(D.t("moveTriggers:keptGoingAndCrashed",{pokemonName:ee(E)})),E.turnData.damageTaken+=Yt(E.getMaxHp()/2),!0)},"crashDamageFunc"),U2=class U2 extends rA{};L(U2,"TypelessAttr");let xS=U2;const u2=class u2 extends rA{constructor(A=!1){super(),this.abilitiesOnly=A}};L(u2,"BypassRedirectAttr");let gI=u2;const D2=class D2 extends Ut{constructor(){super(!0,{trigger:2,lastHitOnly:!0})}canApply(A,s,R,n){return!(this.selfTarget?A:s).isFainted()}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;if(!A.getTag(Y.FRENZY)&&!A.getMoveQueue().length){const I=A.randSeedIntRange(1,2);new Array(I).fill(null).map(()=>A.getMoveQueue().push({move:R.id,targets:[s.getBattlerIndex()],ignorePP:!0})),A.addTag(Y.FRENZY,I,R.id,A.id)}else MA(Gt,A,s,R,n),A.lapseTag(Y.FRENZY);return!0}};L(D2,"FrenzyAttr");let ka=D2;const _n=L((E,A)=>{for(;E.getMoveQueue().length&&E.getMoveQueue()[0].move===A.id;)E.getMoveQueue().shift();return E.removeTag(Y.FRENZY),!0},"frenzyMissFunc"),M2=class M2 extends Ut{constructor(A){super(!0),this.tagType=A}apply(A,s,R,n){return super.apply(A,s,R,n)?A.addTag(this.tagType,1,R.id,A.id):!1}};L(M2,"SemiInvulnerableAttr");let fn=M2;const h2=class h2 extends Ut{constructor(A,s=!1,R=!1,n=0,I,a=!1,r=!1){super(s,{lastHitOnly:a}),this.tagType=A,this.turnCountMin=n,this.turnCountMax=I!==void 0?I:n,this.failOnOverlap=!!R,this.cancelOnFail=r}canApply(A,s,R,n){var I;return!(!super.canApply(A,s,R,n)||this.cancelOnFail===!0&&((I=A.getLastXMoves(1)[0])==null?void 0:I.result)===CA.FAIL)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=this.getMoveChance(A,s,R,this.selfTarget,!0);return I<0||I===100||A.randSeedInt(100)<I?(this.selfTarget?A:s).addTag(this.tagType,A.randSeedIntRange(this.turnCountMin,this.turnCountMax),R.id,A.id):!1}getCondition(){return this.failOnOverlap?(A,s,R)=>!(this.selfTarget?A:s).getTag(this.tagType):null}getTagTargetBenefitScore(A,s,R){switch(this.tagType){case Y.RECHARGING:case Y.PERISH_SONG:return-16;case Y.FLINCHED:case Y.CONFUSED:case Y.INFATUATED:case Y.NIGHTMARE:case Y.DROWSY:case Y.DISABLED:case Y.HEAL_BLOCK:case Y.RECEIVE_DOUBLE_DAMAGE:return-5;case Y.SEEDED:case Y.SALT_CURED:case Y.CURSED:case Y.FRENZY:case Y.TRAPPED:case Y.BIND:case Y.WRAP:case Y.FIRE_SPIN:case Y.WHIRLPOOL:case Y.CLAMP:case Y.SAND_TOMB:case Y.MAGMA_STORM:case Y.SNAP_TRAP:case Y.THUNDER_CAGE:case Y.INFESTATION:return-3;case Y.ENCORE:return-2;case Y.MINIMIZED:case Y.ALWAYS_GET_HIT:return 0;case Y.INGRAIN:case Y.IGNORE_ACCURACY:case Y.AQUA_RING:return 3;case Y.PROTECTED:case Y.FLYING:case Y.CRIT_BOOST:case Y.ALWAYS_CRIT:return 5}}getTargetBenefitScore(A,s,R){let n=this.getMoveChance(A,s,R,this.selfTarget,!1);return n<0&&(n=100),Math.floor(this.getTagTargetBenefitScore(A,s,R)*(n/100))}};L(h2,"AddBattlerTagAttr");let Gt=h2;const c2=class c2 extends Gt{constructor(){super(Y.SEEDED)}apply(A,s,R,n){return!R.hitsSubstitute(A,s)&&super.apply(A,s,R,n)}};L(c2,"LeechSeedAttr");let Qu=c2;const _2=class _2 extends Ut{constructor(){super(!0)}apply(A,s,R,n){return super.apply(A,s,R,n)&&A.hasAbility(O.GULP_MISSILE)&&A.species.speciesId===e.CRAMORANT?(A.getHpRatio()>=.5?A.addTag(Y.GULP_MISSILE_ARROKUDA,0,R.id):A.addTag(Y.GULP_MISSILE_PIKACHU,0,R.id),!0):!1}getUserBenefitScore(A,s,R){return A.hasAbility(O.GULP_MISSILE)&&A.species.speciesId===e.CRAMORANT&&!A.getTag(qU)?10:0}};L(_2,"GulpMissileTagAttr");let Ju=_2;const P2=class P2 extends Gt{constructor(){super(Y.TRAPPED)}apply(A,s,R,n){if(!super.canApply(A,s,R,n)||A.getTag(gR)||s.getTag(gR))return!1;const I=this.getMoveChance(A,s,R,this.selfTarget);return I<0||I===100||A.randSeedInt(100)<I?s.addTag(Y.TRAPPED,1,R.id,A.id)&&A.addTag(Y.TRAPPED,1,R.id,s.id):!1}};L(P2,"JawLockAttr");let Ld=P2;const G2=class G2 extends Ut{apply(A,s,R,n){if(A.getTypes(!0).includes(i.GHOST)){if(s.getTag(Y.CURSED))return A.scene.queueMessage(D.t("battle:attackFailed")),!1;const I=Math.max(1,Math.floor(A.getMaxHp()/2));return A.damageAndUpdate(I,wt.OTHER,!1,!0,!0),A.scene.queueMessage(D.t("battlerTags:cursedOnAdd",{pokemonNameWithAffix:ee(A),pokemonName:ee(s)})),s.addTag(Y.CURSED,0,R.id,A.id),!0}else return A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[g.ATK,g.DEF],1)),A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[g.SPD],-1)),!0}};L(G2,"CurseAttr");let Nd=G2;const H2=class H2 extends Ut{constructor(A,s=!1){super(s),this.tagTypes=A}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;for(const I of this.tagTypes)(this.selfTarget?A:s).lapseTag(I);return!0}};L(H2,"LapseBattlerTagAttr");let Td=H2;const d2=class d2 extends Ut{constructor(A,s=!1){super(s),this.tagTypes=A}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;for(const I of this.tagTypes)(this.selfTarget?A:s).removeTag(I);return!0}};L(d2,"RemoveBattlerTagAttr");let Bn=d2;const f2=class f2 extends Gt{constructor(){super(Y.FLINCHED,!1)}apply(A,s,R,n){return R.hitsSubstitute(A,s)?!1:super.apply(A,s,R,n)}};L(f2,"FlinchAttr");let LA=f2;const B2=class B2 extends Gt{constructor(A){super(Y.CONFUSED,A,!1,2,5)}apply(A,s,R,n){return!this.selfTarget&&s.isSafeguarded(A)?(R.category===2&&A.scene.queueMessage(D.t("moveTriggers:safeguard",{targetName:ee(s)})),!1):R.hitsSubstitute(A,s)?!1:super.apply(A,s,R,n)}};L(B2,"ConfuseAttr");let kE=B2;const g2=class g2 extends Gt{constructor(){super(Y.RECHARGING,!0,!1,1,1,!0,!0)}};L(g2,"RechargeAttr");let wR=g2;const K2=class K2 extends Gt{constructor(A){super(A,!1,!1,4,5)}};L(K2,"TrapAttr");let AO=K2;const QD=class QD extends Gt{constructor(A=Y.PROTECTED){super(A,!0)}getCondition(){return(A,s,R)=>{let n=0;const I=A.getLastXMoves();let a;for(;I.length&&(a=I.shift(),!(!ye[a==null?void 0:a.move].hasAttr(QD)||(a==null?void 0:a.result)!==CA.SUCCESS));)n++;return n?!A.randSeedInt(Math.pow(3,n)):!0}}};L(QD,"ProtectAttr");let vR=QD;const m2=class m2 extends Gt{constructor(){super(Y.IGNORE_ACCURACY,!0,!1,2)}apply(A,s,R,n){return super.apply(A,s,R,n)?(A.scene.queueMessage(D.t("moveTriggers:tookAimAtTarget",{pokemonName:ee(A),targetName:ee(s)})),!0):!1}};L(m2,"IgnoreAccuracyAttr");let $u=m2;const F2=class F2 extends Gt{constructor(){super(Y.PERISH_SONG,!1,!0,4)}apply(A,s,R,n){return super.apply(A,s,R,n)?(A.scene.queueMessage(D.t("moveTriggers:faintCountdown",{pokemonName:ee(s),turnCount:this.turnCountMin-1})),!0):!1}};L(F2,"FaintCountdownAttr");let Sd=F2;const p2=class p2 extends Ut{constructor(){super(!0)}apply(A,s,R,n){return super.apply(A,s,R,n)?(A.scene.getField(!0).forEach(I=>I.findAndRemoveTags(a=>a.tagType===Y.SUBSTITUTE)),!0):!1}};L(p2,"RemoveAllSubstitutesAttr");let od=p2;const W2=class W2 extends rA{constructor(A,s=!1){super(),this.tagType=A,this.doubleDamage=!!s}getTargetBenefitScore(A,s,R){return s.getTag(this.tagType)?this.doubleDamage?10:5:0}};L(W2,"HitsTagAttr");let _R=W2;const Y2=class Y2 extends _R{constructor(A){super(A,!0)}};L(Y2,"HitsTagForDoubleDamageAttr");let AR=Y2;const y2=class y2 extends Ut{constructor(A,s,R=!1,n=!1){super(!0),this.tagType=A,this.turnCount=s,this.failOnOverlap=R,this.selfSideTarget=n}apply(A,s,R,n){var I;if(!super.apply(A,s,R,n))return!1;if((R.chance<0||R.chance===100||A.randSeedInt(100)<R.chance)&&((I=A.getLastXMoves(1)[0])==null?void 0:I.result)===CA.SUCCESS){const a=(this.selfSideTarget?A:s).isPlayer()?St.PLAYER:St.ENEMY;return A.scene.arena.addTag(this.tagType,this.turnCount,R.id,A.id,a),!0}return!1}getCondition(){return this.failOnOverlap?(A,s,R)=>!A.scene.arena.getTagOnSide(this.tagType,s.isPlayer()?St.PLAYER:St.ENEMY):null}};L(y2,"AddArenaTagAttr");let eE=y2;const w2=class w2 extends Ut{constructor(A,s){super(!0),this.tagTypes=A,this.selfSideTarget=s}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=(this.selfSideTarget?A:s).isPlayer()?St.PLAYER:St.ENEMY;for(const a of this.tagTypes)A.scene.arena.removeTagOnSide(a,I);return!0}};L(w2,"RemoveArenaTagsAttr");let ld=w2;const v2=class v2 extends eE{getCondition(){return(A,s,R)=>{const n=(this.selfSideTarget?A:s).isPlayer()?St.PLAYER:St.ENEMY,I=A.scene.arena.getTagOnSide(this.tagType,n);return I?I.layers<I.maxLayers:!0}}};L(v2,"AddArenaTrapTagAttr");let Za=v2;const V2=class V2 extends eE{apply(A,s,R,n){var S;const I=this.getMoveChance(A,s,R,this.selfTarget,!0),a=(this.selfSideTarget?A:s).isPlayer()?St.PLAYER:St.ENEMY,r=A.scene.arena.getTagOnSide(this.tagType,a);return(I<0||I===100||A.randSeedInt(100)<I)&&((S=A.getLastXMoves(1)[0])==null?void 0:S.result)===CA.SUCCESS?(A.scene.arena.addTag(this.tagType,0,R.id,A.id,a),r?r.layers<r.maxLayers:!0):!1}};L(V2,"AddArenaTrapTagHitAttr");let zu=V2;const x2=class x2 extends Ut{constructor(A=!1){super(!0,{trigger:0}),this.targetBothSides=A}apply(A,s,R,n){return super.apply(A,s,R,n)?(this.targetBothSides?(A.scene.arena.removeTagOnSide(ge.SPIKES,St.PLAYER),A.scene.arena.removeTagOnSide(ge.TOXIC_SPIKES,St.PLAYER),A.scene.arena.removeTagOnSide(ge.STEALTH_ROCK,St.PLAYER),A.scene.arena.removeTagOnSide(ge.STICKY_WEB,St.PLAYER),A.scene.arena.removeTagOnSide(ge.SPIKES,St.ENEMY),A.scene.arena.removeTagOnSide(ge.TOXIC_SPIKES,St.ENEMY),A.scene.arena.removeTagOnSide(ge.STEALTH_ROCK,St.ENEMY),A.scene.arena.removeTagOnSide(ge.STICKY_WEB,St.ENEMY)):(A.scene.arena.removeTagOnSide(ge.SPIKES,s.isPlayer()?St.ENEMY:St.PLAYER),A.scene.arena.removeTagOnSide(ge.TOXIC_SPIKES,s.isPlayer()?St.ENEMY:St.PLAYER),A.scene.arena.removeTagOnSide(ge.STEALTH_ROCK,s.isPlayer()?St.ENEMY:St.PLAYER),A.scene.arena.removeTagOnSide(ge.STICKY_WEB,s.isPlayer()?St.ENEMY:St.PLAYER)),!0):!1}};L(x2,"RemoveArenaTrapAttr");let Xa=x2;const b2=class b2 extends Ut{constructor(A=!1){super(!0,{trigger:0}),this.targetBothSides=A}apply(A,s,R,n){return super.apply(A,s,R,n)?(this.targetBothSides?(A.scene.arena.removeTagOnSide(ge.REFLECT,St.PLAYER),A.scene.arena.removeTagOnSide(ge.LIGHT_SCREEN,St.PLAYER),A.scene.arena.removeTagOnSide(ge.AURORA_VEIL,St.PLAYER),A.scene.arena.removeTagOnSide(ge.REFLECT,St.ENEMY),A.scene.arena.removeTagOnSide(ge.LIGHT_SCREEN,St.ENEMY),A.scene.arena.removeTagOnSide(ge.AURORA_VEIL,St.ENEMY)):(A.scene.arena.removeTagOnSide(ge.REFLECT,s.isPlayer()?St.PLAYER:St.ENEMY),A.scene.arena.removeTagOnSide(ge.LIGHT_SCREEN,s.isPlayer()?St.PLAYER:St.ENEMY),A.scene.arena.removeTagOnSide(ge.AURORA_VEIL,s.isPlayer()?St.PLAYER:St.ENEMY)),!0):!1}};L(b2,"RemoveScreensAttr");let Qa=b2;const k2=class k2 extends Ut{constructor(A){super(!0),this.SwapTags=A}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=A.scene.arena.findTagsOnSide(r=>this.SwapTags.includes(r.tagType),St.PLAYER),a=A.scene.arena.findTagsOnSide(r=>this.SwapTags.includes(r.tagType),St.ENEMY);if(I)for(const r of I)A.scene.arena.removeTagOnSide(r.tagType,St.PLAYER,!0),A.scene.arena.addTag(r.tagType,r.turnCount,r.sourceMove,r.sourceId,St.ENEMY,!0);if(a)for(const r of a)A.scene.arena.removeTagOnSide(r.tagType,St.ENEMY,!0),A.scene.arena.addTag(r.tagType,r.turnCount,r.sourceMove,r.sourceId,St.PLAYER,!0);return A.scene.queueMessage(D.t("moveTriggers:swapArenaTags",{pokemonName:ee(A)})),!0}};L(k2,"SwapArenaTagsAttr");let Cd=k2;const Z2=class Z2 extends eE{constructor(A,s,R=!1){super(A,4,!1,R),this.requiredPledge=s}apply(A,s,R,n){var I;return((I=A.getLastXMoves(1)[0])==null?void 0:I.result)!==CA.SUCCESS?!1:A.turnData.combiningPledge===this.requiredPledge?super.apply(A,s,R,n):!1}};L(Z2,"AddPledgeEffectAttr");let Ci=Z2;const X2=class X2 extends Ut{constructor(A){super(!0)}apply(A,s,R,n){return new Promise(I=>{if(A instanceof wE&&A.scene.getPlayerParty().findIndex(a=>a.isFainted())>-1)A.revivalBlessing().then(()=>{I(!0)});else if(A instanceof rs&&A.hasTrainer()&&A.scene.getEnemyParty().findIndex(a=>a.isFainted()&&!a.isBoss())>-1){const a=A.scene.getEnemyParty().filter(o=>o.isFainted()&&!o.isBoss()),r=a[A.randSeedInt(a.length)],S=A.scene.getEnemyParty().findIndex(o=>r.id===o.id);if(r.resetStatus(),r.heal(Math.min(Yt(.5*r.getMaxHp()),r.getMaxHp())),A.scene.queueMessage(D.t("moveTriggers:revivalBlessing",{pokemonName:ee(r)}),0,!0),A.scene.currentBattle.double&&A.scene.getEnemyParty().length>1){const o=A.getAlly();S<=1?A.scene.unshiftPhase(new aR(A.scene,aA.SWITCH,r.getFieldIndex(),S,!1,!1)):o.isFainted()&&A.scene.unshiftPhase(new aR(A.scene,aA.SWITCH,o.getFieldIndex(),S,!1,!1))}I(!0)}else A.scene.queueMessage(D.t("battle:attackFailed")),I(!1)})}getUserBenefitScore(A,s,R){return A.hasTrainer()&&A.scene.getEnemyParty().findIndex(n=>n.isFainted()&&!n.isBoss())>-1?20:-20}};L(X2,"RevivalBlessingAttr");let Ud=X2;const Q2=class Q2 extends Ut{constructor(A=!1,s=aA.SWITCH){super(!1,{lastHitOnly:!0}),this.selfSwitch=A,this.switchType=s}isBatonPass(){return this.switchType===aA.BATON_PASS}apply(A,s,R,n){var a;if(!this.getSwitchOutCondition()(A,s,R))return!1;const I=this.selfSwitch?A:s;if(I.lapseTag(Y.COMMANDED),I instanceof wE){if(s.getAbility().hasAttr(Ra)&&[t.U_TURN,t.VOLT_SWITCH,t.FLIP_TURN].includes(R.id)&&this.hpDroppedBelowHalf(s))return!1;const r=[];if(I.scene.getPlayerParty().forEach((S,o)=>{S.isAllowedInBattle()&&!S.isOnField()&&r.push(o)}),r.length<1)return!1;if(I.hp>0)if(this.switchType===aA.FORCE_SWITCH){I.leaveField(!0);const S=r[A.randSeedInt(r.length)];A.scene.prependToPhase(new aR(A.scene,this.switchType,I.getFieldIndex(),S,!1,!0),nO)}else return I.leaveField(this.switchType===aA.SWITCH),A.scene.prependToPhase(new Yi(A.scene,this.switchType,I.getFieldIndex(),!0,!0),nO),!0;return!1}else if(A.scene.currentBattle.battleType!==ht.WILD){const r=[];if(I.scene.getEnemyParty().forEach((S,o)=>{S.isAllowedInBattle()&&!S.isOnField()&&r.push(o)}),r.length<1)return!1;if(I.hp>0)if(this.switchType===aA.FORCE_SWITCH){I.leaveField(!0);const S=r[A.randSeedInt(r.length)];A.scene.prependToPhase(new aR(A.scene,this.switchType,I.getFieldIndex(),S,!1,!1),nO)}else I.leaveField(this.switchType===aA.SWITCH),A.scene.prependToPhase(new aR(A.scene,this.switchType,I.getFieldIndex(),A.scene.currentBattle.trainer?A.scene.currentBattle.trainer.getNextSummonIndex(I.trainerSlot):0,!1,!1),nO)}else{if(s.getAbility().hasAttr(Ra)&&[t.U_TURN,t.VOLT_SWITCH,t.FLIP_TURN].includes(R.id)&&this.hpDroppedBelowHalf(s)||A.scene.currentBattle.waveIndex%10===0||this.selfSwitch&&!A.isPlayer()&&R.category!==2)return!1;if(I.hp>0&&(I.leaveField(!1),A.scene.queueMessage(D.t("moveTriggers:fled",{pokemonName:ee(I)}),null,!0,500),I.scene.currentBattle.double)){const r=I.getAlly();I.scene.redirectPokemonMoves(I,r)}(a=I.getAlly())!=null&&a.isActive(!0)||(A.scene.clearEnemyHeldItemModifiers(),I.hp&&(A.scene.pushPhase(new yi(A.scene,!1)),A.scene.pushPhase(new JI(A.scene))))}return!0}getCondition(){return(A,s,R)=>R.category!==2||this.getSwitchOutCondition()(A,s,R)}getFailedText(A,s,R,n){const I=new Lt(!1);return Ct(Zi,s,I),I.value?D.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:ee(s)}):null}getSwitchOutCondition(){return(A,s,R)=>{var r,S;const n=this.selfSwitch?A:s,I=n instanceof wE;if(!this.selfSwitch){if(R.hitsSubstitute(A,s))return!1;const o=n.getTag(Y.COMMANDED);if((r=o==null?void 0:o.getSourcePokemon(n.scene))!=null&&r.isActive(!0)||!I&&A.scene.currentBattle.isBattleMysteryEncounter()&&!((S=A.scene.currentBattle.mysteryEncounter)!=null&&S.fleeAllowed))return!1;const l=new Lt(!1);return Ct(Zi,s,l),!l.value}if(!I&&A.scene.currentBattle.battleType===ht.WILD&&(this.isBatonPass()||A.scene.currentBattle.waveIndex%10===0))return!1;const a=I?A.scene.getPlayerParty():A.scene.getEnemyParty();return!I&&!A.scene.currentBattle.battleType||a.filter(o=>o.isAllowedInBattle()&&(I||o.trainerSlot===n.trainerSlot)).length>A.scene.currentBattle.getBattlerCount()}}getUserBenefitScore(A,s,R){if(!A.scene.getEnemyParty().find(I=>I.isActive()&&!I.isOnField()))return-20;let n=this.selfSwitch?Math.floor((1-A.getHpRatio())*20):super.getUserBenefitScore(A,s,R);if(this.selfSwitch&&this.isBatonPass()){const I=A.getStatStages().reduce((a,r)=>r+=a,0);n=n/2+Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut")(Math.min(Math.abs(I),10)/10)*(I>=0?10:-10)}return n}hpDroppedBelowHalf(A){const s=A.hp,R=A.getMaxHp(),n=A.turnData.damageTaken;return s+n>=R/2&&s<R/2}};L(Q2,"ForceSwitchOutAttr");let ks=Q2;const J2=class J2 extends ks{apply(A,s,R,n){return A.scene.arena.trySetWeather(se.SNOW,!0),super.apply(A,s,R,n)}getCondition(){return(A,s,R)=>{var n;return((n=A.scene.arena.weather)==null?void 0:n.weatherType)!==se.SNOW||super.getSwitchOutCondition()(A,s,R)}}};L(J2,"ChillyReceptionAttr");let ud=J2;const $2=class $2 extends Ut{constructor(A,s){super(!0,{trigger:3}),this.removedType=A,this.messageCallback=s}apply(A,s,R,n){if(!super.apply(A,s,R,n)||A.isTerastallized()&&A.getTeraType()===this.removedType)return!1;const a=A.getTypes(!0).filter(r=>r!==this.removedType);return a.length===0&&a.push(i.UNKNOWN),A.summonData.types=a,A.updateInfo(),this.messageCallback&&this.messageCallback(A),!0}};L($2,"RemoveTypeAttr");let qu=$2;const z2=class z2 extends Ut{constructor(){super(!1)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=s.getTypes(!0);return I.includes(i.UNKNOWN)&&I.indexOf(i.UNKNOWN)>-1&&(I[I.indexOf(i.UNKNOWN)]=i.NORMAL),A.summonData.types=I,A.updateInfo(),A.scene.queueMessage(D.t("moveTriggers:copyType",{pokemonName:ee(A),targetPokemonName:ee(s)})),!0}getCondition(){return(A,s,R)=>s.getTypes()[0]!==i.UNKNOWN||s.summonData.addedType!==null}};L(z2,"CopyTypeAttr");let Dd=z2;const q2=class q2 extends Ut{constructor(){super(!0)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=A.scene.arena.getTerrainType();let a;return I!==Nt.NONE?a=this.getTypeForTerrain(A.scene.arena.getTerrainType()):a=this.getTypeForBiome(A.scene.arena.biomeType),A.summonData.types=[a],A.updateInfo(),A.scene.queueMessage(D.t("moveTriggers:transformedIntoType",{pokemonName:ee(A),typeName:D.t(`pokemonInfo:Type.${i[a]}`)})),!0}getTypeForTerrain(A){switch(A){case Nt.ELECTRIC:return i.ELECTRIC;case Nt.MISTY:return i.FAIRY;case Nt.GRASSY:return i.GRASS;case Nt.PSYCHIC:return i.PSYCHIC;case Nt.NONE:default:return i.UNKNOWN}}getTypeForBiome(A){switch(A){case N.TOWN:case N.PLAINS:case N.METROPOLIS:return i.NORMAL;case N.GRASS:case N.TALL_GRASS:return i.GRASS;case N.FOREST:case N.JUNGLE:return i.BUG;case N.SLUM:case N.SWAMP:return i.POISON;case N.SEA:case N.BEACH:case N.LAKE:case N.SEABED:return i.WATER;case N.MOUNTAIN:return i.FLYING;case N.BADLANDS:return i.GROUND;case N.CAVE:case N.DESERT:return i.ROCK;case N.ICE_CAVE:case N.SNOWY_FOREST:return i.ICE;case N.MEADOW:case N.FAIRY_CAVE:case N.ISLAND:return i.FAIRY;case N.POWER_PLANT:return i.ELECTRIC;case N.VOLCANO:return i.FIRE;case N.GRAVEYARD:case N.TEMPLE:return i.GHOST;case N.DOJO:case N.CONSTRUCTION_SITE:return i.FIGHTING;case N.FACTORY:case N.LABORATORY:return i.STEEL;case N.RUINS:case N.SPACE:return i.PSYCHIC;case N.WASTELAND:case N.END:return i.DRAGON;case N.ABYSS:return i.DARK;default:return i.UNKNOWN}}};L(q2,"CopyBiomeTypeAttr");let Md=q2;const j2=class j2 extends Ut{constructor(A){super(!1,{trigger:2}),this.type=A}apply(A,s,R,n){return s.summonData.types=[this.type],s.updateInfo(),A.scene.queueMessage(D.t("moveTriggers:transformedIntoType",{pokemonName:ee(s),typeName:D.t(`pokemonInfo:Type.${i[this.type]}`)})),!0}getCondition(){return(A,s,R)=>!s.isTerastallized()&&!s.hasAbility(O.MULTITYPE)&&!s.hasAbility(O.RKS_SYSTEM)&&!(s.getTypes().length===1&&s.getTypes()[0]===this.type)}};L(j2,"ChangeTypeAttr");let ju=j2;const ev=class ev extends Ut{constructor(A){super(!1,{trigger:2}),this.type=A}apply(A,s,R,n){return s.summonData.addedType=this.type,s.updateInfo(),A.scene.queueMessage(D.t("moveTriggers:addType",{typeName:D.t(`pokemonInfo:Type.${i[this.type]}`),pokemonName:ee(s)})),!0}getCondition(){return(A,s,R)=>!s.isTerastallized()&&!s.getTypes().includes(this.type)}};L(ev,"AddTypeAttr");let eD=ev;const tv=class tv extends Ut{constructor(){super(!0)}apply(A,s,R,n){var a;if(!super.apply(A,s,R,n))return!1;const I=(a=s.getMoveset()[0])==null?void 0:a.getMove().type;return A.summonData.types=[I],A.scene.queueMessage(D.t("battle:transformedIntoType",{pokemonName:ee(A),type:D.t(`pokemonInfo:Type.${i[I]}`)})),!0}};L(tv,"FirstMoveTypeAttr");let hd=tv;const Av=class Av extends ln{constructor(A){super(),this.enemyMoveset=A}apply(A,s,R,n){const I=(this.enemyMoveset?s:A).getMoveset(),a=I.filter(r=>!(r!=null&&r.getMove().hasFlag(4)));if(a.length){const r=a[A.randSeedInt(a.length)],S=I.findIndex(M=>(M==null?void 0:M.moveId)===(r==null?void 0:r.moveId)),o=Cn(A,r==null?void 0:r.moveId);if(!o.targets.length)return!1;let l;switch(!0){case(o.multiple||o.targets.length===1):{l=o.targets;break}case o.targets.indexOf(s.getBattlerIndex())>-1:{l=[s.getBattlerIndex()];break}default:{o.targets.splice(o.targets.indexOf(A.getAlly().getBattlerIndex())),l=[o.targets[A.randSeedInt(o.targets.length)]];break}}const C=l;return A.getMoveQueue().push({move:r==null?void 0:r.moveId,targets:C,ignorePP:!0}),A.scene.unshiftPhase(new HA(A.scene,A,C,I[S],!0)),!0}return!1}};L(Av,"RandomMovesetMoveAttr");let bS=Av;const Ev=class Ev extends ln{getMoveOverride(){return null}apply(A,s,R,n){return new Promise(I=>{const a=uE(t).filter(l=>!ye[l].hasFlag(4)&&!ye[l].name.endsWith(" (N)")),r=this.getMoveOverride()??a[A.randSeedInt(a.length)],S=Cn(A,r);if(!S.targets.length){I(!1);return}const o=S.multiple||S.targets.length===1?S.targets:S.targets.indexOf(s.getBattlerIndex())>-1?[s.getBattlerIndex()]:[S.targets[A.randSeedInt(S.targets.length)]];A.getMoveQueue().push({move:r,targets:o,ignorePP:!0}),A.scene.unshiftPhase(new HA(A.scene,A,o,new Ot(r,0,0,!0),!0)),iL(A.scene,r).then(()=>{IL(A.scene,[r],!0).then(()=>I(!0))})})}};L(Ev,"RandomMoveAttr");let tD=Ev;const sv=class sv extends ln{apply(A,s,R,n){return new Promise(I=>{let a;switch(A.scene.arena.getTerrainType()){case Nt.NONE:switch(A.scene.arena.biomeType){case N.TOWN:a=t.ROUND;break;case N.METROPOLIS:a=t.TRI_ATTACK;break;case N.SLUM:a=t.SLUDGE_BOMB;break;case N.PLAINS:a=t.SILVER_WIND;break;case N.GRASS:a=t.GRASS_KNOT;break;case N.TALL_GRASS:a=t.POLLEN_PUFF;break;case N.MEADOW:a=t.GIGA_DRAIN;break;case N.FOREST:a=t.BUG_BUZZ;break;case N.JUNGLE:a=t.LEAF_STORM;break;case N.SEA:a=t.HYDRO_PUMP;break;case N.SWAMP:a=t.MUD_BOMB;break;case N.BEACH:a=t.SCALD;break;case N.LAKE:a=t.BUBBLE_BEAM;break;case N.SEABED:a=t.BRINE;break;case N.ISLAND:a=t.LEAF_TORNADO;break;case N.MOUNTAIN:a=t.AIR_SLASH;break;case N.BADLANDS:a=t.EARTH_POWER;break;case N.DESERT:a=t.SCORCHING_SANDS;break;case N.WASTELAND:a=t.DRAGON_PULSE;break;case N.CONSTRUCTION_SITE:a=t.STEEL_BEAM;break;case N.CAVE:a=t.POWER_GEM;break;case N.ICE_CAVE:a=t.ICE_BEAM;break;case N.SNOWY_FOREST:a=t.FROST_BREATH;break;case N.VOLCANO:a=t.LAVA_PLUME;break;case N.GRAVEYARD:a=t.SHADOW_BALL;break;case N.RUINS:a=t.ANCIENT_POWER;break;case N.TEMPLE:a=t.EXTRASENSORY;break;case N.DOJO:a=t.FOCUS_BLAST;break;case N.FAIRY_CAVE:a=t.ALLURING_VOICE;break;case N.ABYSS:a=t.OMINOUS_WIND;break;case N.SPACE:a=t.DRACO_METEOR;break;case N.FACTORY:a=t.FLASH_CANNON;break;case N.LABORATORY:a=t.ZAP_CANNON;break;case N.POWER_PLANT:a=t.CHARGE_BEAM;break;case N.END:a=t.ETERNABEAM;break}break;case Nt.MISTY:a=t.MOONBLAST;break;case Nt.ELECTRIC:a=t.THUNDERBOLT;break;case Nt.GRASSY:a=t.ENERGY_BALL;break;case Nt.PSYCHIC:a=t.PSYCHIC;break;default:a=t.TRI_ATTACK;break}A.getMoveQueue().push({move:a,targets:[s.getBattlerIndex()],ignorePP:!0}),A.scene.unshiftPhase(new HA(A.scene,A,[s.getBattlerIndex()],new Ot(a,0,0,!0),!0)),iL(A.scene,a).then(()=>{IL(A.scene,[a],!0).then(()=>I(!0))})})}};L(sv,"NaturePowerAttr");let AD=sv;const LJ=L((E,A,s)=>{const R=E.scene.currentBattle.lastMove;return!(!R||ye[R].isChargingMove())},"lastMoveCopiableCondition"),Rv=class Rv extends ln{apply(A,s,R,n){const I=A.scene.currentBattle.lastMove,a=Cn(A,I);if(!a.targets.length)return!1;const r=a.multiple||a.targets.length===1?a.targets:a.targets.indexOf(s.getBattlerIndex())>-1?[s.getBattlerIndex()]:[a.targets[A.randSeedInt(a.targets.length)]];return A.getMoveQueue().push({move:I,targets:r,ignorePP:!0}),A.scene.unshiftPhase(new HA(A.scene,A,r,new Ot(I,0,0,!0),!0)),!0}getCondition(){return LJ}};L(Rv,"CopyMoveAttr");let Xr=Rv;const Ov=class Ov extends Ut{constructor(){super(!1,{trigger:1})}apply(A,s,R,n){const I=s.getLastXMoves(-1).find(S=>S.move!==t.NONE),a=s.getMoveset().find(S=>(S==null?void 0:S.moveId)===I.move),r=I.targets??[];return A.scene.queueMessage(D.t("moveTriggers:instructingMove",{userPokemonName:ee(A),targetPokemonName:ee(s)})),s.getMoveQueue().unshift({move:I.move,targets:r,ignorePP:!1}),s.turnData.extraTurns++,s.scene.appendToPhase(new HA(s.scene,s,r,a),nO),!0}getCondition(){return(A,s,R)=>{const n=s.getLastXMoves(-1).find(S=>S.move!==t.NONE),I=s.getMoveset().find(S=>(S==null?void 0:S.moveId)===(n==null?void 0:n.move)),a=(n==null?void 0:n.targets)??[],r=[t.OUTRAGE,t.RAGING_FURY,t.ROLLOUT,t.PETAL_DANCE,t.THRASH,t.ICE_BALL,t.BIDE,t.SHELL_TRAP,t.BEAK_BLAST,t.FOCUS_PUNCH,t.FAKE_OUT,t.FIRST_IMPRESSION,t.MAT_BLOCK,t.HYPER_BEAM,t.ETERNABEAM,t.FRENZY_PLANT,t.BLAST_BURN,t.HYDRO_CANNON,t.GIGA_IMPACT,t.PRISMATIC_LASER,t.ROAR_OF_TIME,t.ROCK_WRECKER,t.METEOR_ASSAULT,t.DIG,t.FLY,t.BOUNCE,t.SHADOW_FORCE,t.PHANTOM_FORCE,t.DIVE,t.ELECTRO_SHOT,t.ICE_BURN,t.GEOMANCY,t.FREEZE_SHOCK,t.SKY_DROP,t.SKY_ATTACK,t.SKULL_BASH,t.SOLAR_BEAM,t.SOLAR_BLADE,t.METEOR_BEAM,t.INSTRUCT,t.KINGS_SHIELD,t.SKETCH,t.TRANSFORM,t.MIMIC,t.STRUGGLE];return!(!I||I.ppUsed===I.getMovePp()||ye[(n==null?void 0:n.move)??t.NONE].isChargingMove()||!a.length||r.includes((n==null?void 0:n.move)??t.NONE))}}getTargetBenefitScore(A,s,R){return 2}};L(Ov,"RepeatMoveAttr");let cd=Ov;const nv=class nv extends Ut{constructor(A){super(),this.reduction=A}apply(A,s,R,n){const I=s.getLastXMoves().find(()=>!0),a=s.getMoveset().find(o=>(o==null?void 0:o.moveId)===(I==null?void 0:I.move)),r=a==null?void 0:a.ppUsed;a.ppUsed=Math.min((a==null?void 0:a.ppUsed)+this.reduction,a==null?void 0:a.getMovePp());const S=D.t("battle:ppReduced",{targetName:ee(s),moveName:a==null?void 0:a.getName(),reduction:(a==null?void 0:a.ppUsed)-r});return A.scene.eventTarget.dispatchEvent(new DT(s==null?void 0:s.id,a==null?void 0:a.getMove(),a==null?void 0:a.ppUsed)),A.scene.queueMessage(S),!0}getCondition(){return(A,s,R)=>{const n=s.getLastXMoves().find(()=>!0);if(n){const I=s.getMoveset().find(a=>(a==null?void 0:a.moveId)===n.move);return!!(I!=null&&I.getPpRatio())}return!1}}getTargetBenefitScore(A,s,R){const n=s.getLastXMoves().find(()=>!0);if(n){const I=s.getMoveset().find(a=>(a==null?void 0:a.moveId)===n.move);if(I){const a=I.getMovePp(),r=a-I.ppUsed,S=-(8-Math.ceil(Math.min(a,30)/5));return r<4?S/4*r:S}}return 0}};L(nv,"ReducePpMoveAttr");let ED=nv;const iv=class iv extends ED{constructor(A){super(A)}apply(A,s,R,n){const I=s.getLastXMoves().find(()=>!0);if(I){const a=s.getMoveset().find(r=>(r==null?void 0:r.moveId)===I.move);a!=null&&a.getPpRatio()&&super.apply(A,s,R,n)}return!0}getCondition(){return(A,s,R)=>!0}};L(iv,"AttackReducePpMoveAttr");let _d=iv;const O8=L((E,A,s)=>{const R=A.getMoveHistory().filter(I=>!I.virtual);if(!R.length)return!1;const n=R[0];return!(!n.move||ye[n.move].isChargingMove()&&n.result===CA.OTHER)},"targetMoveCopiableCondition"),Iv=class Iv extends ln{apply(A,s,R,n){const I=s.getMoveHistory().filter(S=>!S.virtual);if(!I.length)return!1;const a=ye[I[0].move],r=A.getMoveset().findIndex(S=>(S==null?void 0:S.moveId)===R.id);return r===-1?!1:(A.summonData.moveset=A.getMoveset().slice(0),A.summonData.moveset[r]=new Ot(a.id,0,0),A.scene.queueMessage(D.t("moveTriggers:copiedMove",{pokemonName:ee(A),moveName:a.name})),!0)}getCondition(){return O8}};L(Iv,"MovesetCopyMoveAttr");let Pd=Iv;const av=class av extends Ut{constructor(){super(!0)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=s.getLastXMoves(-1).find(S=>S.move!==t.NONE&&S.move!==t.STRUGGLE&&!S.virtual);if(!I)return!1;const a=ye[I.move],r=A.getMoveset().findIndex(S=>(S==null?void 0:S.moveId)===R.id);return r===-1?!1:(A.setMove(r,a.id),A.scene.queueMessage(D.t("moveTriggers:sketchedMove",{pokemonName:ee(A),moveName:a.name})),!0)}getCondition(){return(A,s,R)=>{if(!O8(A,s))return!1;const n=s.getMoveHistory().filter(a=>!a.virtual).at(-1);return!(!n||[t.CHATTER,t.MIRROR_MOVE,t.SLEEP_TALK,t.STRUGGLE,t.SKETCH,t.REVIVAL_BLESSING,t.TERA_STARSTORM,t.BREAKNECK_BLITZ__PHYSICAL,t.BREAKNECK_BLITZ__SPECIAL].includes(n.move)||A.getMoveset().find(a=>(a==null?void 0:a.moveId)===n.move))}}};L(av,"SketchAttr");let Gd=av;const rv=class rv extends Ut{constructor(A,s){super(s,{trigger:2}),this.ability=A}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=this.selfTarget?A:s;return I.summonData.ability=this.ability,A.scene.triggerPokemonFormChange(I,mn),A.scene.queueMessage(D.t("moveTriggers:acquiredAbility",{pokemonName:ee(this.selfTarget?A:s),abilityName:LE[this.ability].name})),!0}getCondition(){return(A,s,R)=>!(this.selfTarget?A:s).getAbility().hasAttr(rE)&&(this.selfTarget?A:s).getAbility().id!==this.ability}};L(rv,"AbilityChangeAttr");let sD=rv;const Lv=class Lv extends Ut{constructor(A=!1){super(!1,{trigger:2}),this.copyToPartner=A}apply(A,s,R,n){var I;return super.apply(A,s,R,n)?(A.summonData.ability=s.getAbility().id,A.scene.queueMessage(D.t("moveTriggers:copiedTargetAbility",{pokemonName:ee(A),targetName:ee(s),abilityName:LE[s.getAbility().id].name})),this.copyToPartner&&((I=A.scene.currentBattle)!=null&&I.double)&&A.getAlly().hp&&(A.getAlly().summonData.ability=s.getAbility().id,A.getAlly().scene.queueMessage(D.t("moveTriggers:copiedTargetAbility",{pokemonName:ee(A.getAlly()),targetName:ee(s),abilityName:LE[s.getAbility().id].name}))),!0):!1}getCondition(){return(A,s,R)=>{var I;let n=!s.getAbility().hasAttr(sA)&&!A.getAbility().hasAttr(rE);return this.copyToPartner&&((I=A.scene.currentBattle)!=null&&I.double)?n=n&&(!A.getAlly().hp||!A.getAlly().getAbility().hasAttr(rE)):n=n&&A.getAbility().id!==s.getAbility().id,n}}};L(Lv,"AbilityCopyAttr");let RD=Lv;const Nv=class Nv extends Ut{constructor(){super(!1,{trigger:2})}apply(A,s,R,n){return super.apply(A,s,R,n)?(s.summonData.ability=A.getAbility().id,A.scene.queueMessage(D.t("moveTriggers:acquiredAbility",{pokemonName:ee(s),abilityName:LE[A.getAbility().id].name})),!0):!1}getCondition(){return(A,s,R)=>!A.getAbility().hasAttr(sA)&&!s.getAbility().hasAttr(rE)&&A.getAbility().id!==s.getAbility().id}};L(Nv,"AbilityGiveAttr");let Hd=Nv;const Tv=class Tv extends Ut{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=A.getAbility().id;return A.summonData.ability=s.getAbility().id,s.summonData.ability=I,A.scene.queueMessage(D.t("moveTriggers:swappedAbilitiesWithTarget",{pokemonName:ee(A)})),A.scene.arena.triggerWeatherBasedFormChangesToNormal(),A.scene.arena.triggerWeatherBasedFormChanges(),!0}getCondition(){return(A,s,R)=>!A.getAbility().hasAttr(uA)&&!s.getAbility().hasAttr(uA)}};L(Tv,"SwitchAbilitiesAttr");let dd=Tv;const Sv=class Sv extends Ut{apply(A,s,R,n){return super.apply(A,s,R,n)?(s.summonData.abilitySuppressed=!0,s.scene.arena.triggerWeatherBasedFormChangesToNormal(),s.scene.queueMessage(D.t("moveTriggers:suppressAbilities",{pokemonName:ee(s)})),!0):!1}getCondition(){return(A,s,R)=>!s.getAbility().hasAttr(rE)&&!s.summonData.abilitySuppressed}};L(Sv,"SuppressAbilitiesAttr");let OD=Sv;const ov=class ov extends Ut{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;if(s.turnData.acted){const I=new OD;I.getCondition()(A,s,R)&&I.apply(A,s,R,n)}return!0}};L(ov,"SuppressAbilitiesIfActedAttr");let fd=ov;const lv=class lv extends Ut{async apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=[];A.summonData.speciesForm=s.getSpeciesForm(),A.summonData.ability=s.getAbility().id,A.summonData.gender=s.getGender(),A.removeTag(Y.POWER_TRICK);for(const a of Vn)A.setStat(a,s.getStat(a,!1),!1);for(const a of MO)A.setStatStage(a,s.getStatStage(a));return A.summonData.moveset=s.getMoveset().map(a=>a?new Ot(a.moveId,0,0,!1,Math.min(a.getMove().pp,5)):(console.warn(`Transform: somehow iterating over a ${a} value when copying moveset!`),new Ot(t.NONE))),A.summonData.types=s.getTypes(),I.push(A.updateInfo()),A.scene.queueMessage(D.t("moveTriggers:transformedIntoTarget",{pokemonName:ee(A),targetName:ee(s)})),I.push(A.loadAssets(!1).then(()=>{A.playAnim(),A.updateInfo()})),await Promise.all(I),!0}};L(lv,"TransformAttr");let Bd=lv;const Cv=class Cv extends Ut{constructor(A){super(),this.stat=A}apply(A,s,R,n){if(super.apply(A,s,R,n)){const I=A.getStat(this.stat,!1);return A.setStat(this.stat,s.getStat(this.stat,!1),!1),s.setStat(this.stat,I,!1),A.scene.queueMessage(D.t("moveTriggers:switchedStat",{pokemonName:ee(A),stat:D.t(_E(this.stat))})),!0}return!1}};L(Cv,"SwapStatAttr");let gd=Cv;const Uv=class Uv extends Ut{constructor(A,s){super(),this.statToSwitch=A,this.statToSwitchWith=s}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=A.getStat(this.statToSwitch,!1),a=A.getStat(this.statToSwitchWith,!1);return A.setStat(this.statToSwitch,a,!1),A.setStat(this.statToSwitchWith,I,!1),A.scene.queueMessage(D.t("moveTriggers:shiftedStats",{pokemonName:ee(A),statToSwitch:D.t(_E(this.statToSwitch)),statToSwitchWith:D.t(_E(this.statToSwitchWith))})),!0}getUserBenefitScore(A,s,R){return A.getStat(this.statToSwitchWith,!1)>A.getStat(this.statToSwitch,!1)?10:0}};L(Uv,"ShiftStatAttr");let Kd=Uv;const uv=class uv extends Ut{constructor(A,s){super(),this.stats=A,this.msgKey=s}apply(A,s,R,n){if(super.apply(A,s,R,n)){for(const I of this.stats){const a=Math.floor((A.getStat(I,!1)+s.getStat(I,!1))/2);A.setStat(I,a,!1),s.setStat(I,a,!1)}return A.scene.queueMessage(D.t(this.msgKey,{pokemonName:ee(A)})),!0}return!1}};L(uv,"AverageStatsAttr");let nD=uv;const Dv=class Dv extends rA{getUserBenefitScore(A,s,R){const n=A.getLastXMoves(4);console.log(n);for(let I=0;I<n.length;I++)if(n[I].move===R.id)return(4-(I+1))*-10;return 0}};L(Dv,"DiscourageFrequentUseAttr");let md=Dv;const Mv=class Mv extends Ut{constructor(){super(!0,{trigger:2,firstHitOnly:!0})}apply(A,s,R){return A.scene.currentBattle.moneyScattered+=A.scene.getWaveMoneyAmount(.2),A.scene.queueMessage(D.t("moveTriggers:coinsScatteredEverywhere")),!0}};L(Mv,"MoneyAttr");let iD=Mv;const hv=class hv extends Ut{constructor(){super(!0,{trigger:0})}apply(A,s,R,n){return A.scene.queueMessage(`${D.t("moveTriggers:tryingToTakeFoeDown",{pokemonName:ee(A)})}`),A.addTag(Y.DESTINY_BOND,void 0,R.id,A.id),!0}};L(hv,"DestinyBondAttr");let Fd=hv;const cv=class cv extends Gt{constructor(A){super(A,!1,!1,2,5)}apply(A,s,R,n){return s.turnData.statStagesIncreased&&super.apply(A,s,R,n),!0}};L(cv,"AddBattlerTagIfBoostedAttr");let pd=cv;const _v=class _v extends Ut{constructor(A){super(!0,{trigger:2}),this.effect=A}apply(A,s,R,n){return s.turnData.statStagesIncreased&&s.trySetStatus(this.effect,!0,A),!0}};L(_v,"StatusIfBoostedAttr");let Wd=_v;const Pv=class Pv extends rA{getCondition(){return(A,s,R)=>{const n=new Set,I=A.getMoveset().map(a=>a==null?void 0:a.moveId);return A.getMoveHistory().map(a=>{a.move!==R.id&&I.find(r=>r===a.move)&&n.add(a.move)}),n.size>=I.length-1}}};L(Pv,"LastResortAttr");let Yd=Pv;const Gv=class Gv extends rA{getCondition(){return(A,s,R)=>{var a,r;const n=s.getHeldItems().filter(S=>S.isTransferable);if(n.length===0)return!1;const I=((r=(a=n[0])==null?void 0:a.type)==null?void 0:r.name)??"item";return s.scene.queueMessage(D.t("moveTriggers:attackedByItem",{pokemonName:ee(s),itemName:I})),!0}}};L(Gv,"AttackedByItemAttr");let yd=Gv;const Hv=class Hv extends rA{constructor(A){super(),this.targetChangeFunc=A}apply(A,s,R,n){const I=n[0];return I.value=this.targetChangeFunc(A,s,R),!0}};L(Hv,"VariableTargetAttr");let aa=Hv;const dv=class dv extends Ut{apply(A,s,R,n){A.scene.queueMessage(D.t("moveTriggers:afterYou",{targetName:ee(s)}));const I=s.scene.findPhase(a=>a.pokemon===s);return I&&s.scene.tryRemovePhase(a=>a.pokemon===s)&&s.scene.prependToPhase(new HA(s.scene,s,[...I.targets],I.move),HA),!0}};L(dv,"AfterYouAttr");let wd=dv;const ii=L((E,A,s)=>!E.scene.arena.getTag(ge.GRAVITY),"failOnGravityCondition"),mh=L((E,A,s)=>!A.isBossImmune(),"failOnBossCondition"),Ba=L((E,A,s)=>E.scene.currentBattle.double,"failIfSingleBattle"),Rl=L((E,A,s)=>{const R=new Lt(!1);return E.scene.getField(!0).map(n=>Ct(TS,n,R)),R.value&&E.scene.queueMessage(D.t("moveTriggers:cannotUseMove",{pokemonName:ee(E),moveName:s.name})),!R.value},"failIfDampCondition"),Wb=L((E,A,s)=>{var R;return((R=E.status)==null?void 0:R.effect)===Re.SLEEP||E.hasAbility(O.COMATOSE)},"userSleptOrComatoseCondition"),Fh=L((E,A,s)=>{var R;return((R=A.status)==null?void 0:R.effect)===Re.SLEEP||A.hasAbility(O.COMATOSE)},"targetSleptOrComatoseCondition"),lR=L((E,A,s)=>E.scene.phaseQueue.find(R=>R instanceof HA)!==void 0,"failIfLastCondition"),Yb=L((E,A,s)=>(E.isPlayer()?E.scene.getPlayerParty():E.scene.getEnemyParty()).some(n=>n.isActive()&&!n.isOnField()),"failIfLastInPartyCondition"),Ol=L((E,A,s)=>!A.isOfType(i.GHOST),"failIfGhostTypeCondition");function n8(E,A,s,R,n){return new Promise(I=>{const a=[],r=R.attrs.filter(S=>E(S));for(const S of r){const o=S.apply(A,s,R,n);o instanceof Promise&&a.push(o)}Promise.allSettled(a).then(()=>I())})}L(n8,"applyMoveAttrsInternal");function NJ(E,A,s,R,n){return new Promise(I=>{const a=[],r=R.chargeAttrs.filter(S=>E(S));for(const S of r){const o=S.apply(A,s,R,n);o instanceof Promise&&a.push(o)}Promise.allSettled(a).then(()=>I())})}L(NJ,"applyMoveChargeAttrsInternal");function MA(E,A,s,R,...n){return n8(I=>I instanceof E,A,s,R,n)}L(MA,"applyMoveAttrs");function CL(E,A,s,R,...n){return n8(E,A,s,R,n)}L(CL,"applyFilteredMoveAttrs");function yb(E,A,s,R,...n){return NJ(I=>I instanceof E,A,s,R,n)}L(yb,"applyMoveChargeAttrs");const fv=class fv{constructor(A){this.func=A}apply(A,s,R){return this.func(A,s,R)}getUserBenefitScore(A,s,R){return 0}};L(fv,"MoveCondition");let vI=fv;const Bv=class Bv extends vI{constructor(){super((A,s,R)=>{var n;return((n=A.battleSummonData)==null?void 0:n.waveTurnCount)===1})}getUserBenefitScore(A,s,R){return this.apply(A,s,R)?10:-20}};L(Bv,"FirstMoveCondition");let RN=Bv;const gv=class gv extends vI{constructor(){super((A,s,R)=>{var I;const n=A.scene.currentBattle.turnCommands[s.getBattlerIndex()];return!!n&&n.command===NA.FIGHT&&!s.turnData.acted&&!!((I=n.move)!=null&&I.move)&&ye[n.move.move].category!==2&&ye[n.move.move].getPriority(s)>0})}};L(gv,"UpperHandCondition");let vd=gv;const Kv=class Kv extends Ia{apply(A,s,R,n){const I=n[0];return A.getTypes().some(a=>s.getTypes().includes(a))?!1:(I.value=0,!0)}};L(Kv,"hitsSameTypeAttr");let Vd=Kv;const mv=class mv extends Ut{constructor(){super(!0)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const[I]=s.getLastXMoves(1);if(!I)return!1;const a=ye[I.move];if(a.type===i.STELLAR||a.type===i.UNKNOWN)return!1;const r=A.getTypes(),S=this.getTypeResistances(A.scene.gameMode,a.type).filter(l=>!r.includes(l));if(!S.length)return!1;const o=S[A.randSeedInt(S.length)];return A.summonData.types=[o],A.scene.queueMessage(D.t("battle:transformedIntoType",{pokemonName:ee(A),type:wn(i[o])})),A.updateInfo(),!0}getTypeResistances(A,s){const R=[];for(let n=0;n<Object.keys(i).length;n++){const I=new Rt(1);I.value=wh(s,n),Fs(A,Us.TYPE_EFFECTIVENESS,I),I.value<1&&R.push(n)}return R}getCondition(){return(A,s,R)=>s.getLastXMoves().length!==0}};L(mv,"ResistLastMoveTypeAttr");let xd=mv;const Fv=class Fv extends Gt{constructor(A){super(A,!1,!0)}apply(A,s,R,n){return super.apply(A,s,R,n)?(A.scene.queueMessage(D.t("moveTriggers:exposedMove",{pokemonName:ee(A),targetPokemonName:ee(s)})),!0):!1}};L(Fv,"ExposedMoveAttr");let ON=Fv;const TJ=L((E,A,s)=>!E.getTypes().includes(i.UNKNOWN),"unknownTypeCondition");function Cn(E,A){const s=new Rt(0);E.getOpponents().forEach(r=>MA(aa,E,r,ye[A],s));const R=ye[A].hasAttr(aa)?s.value:A?ye[A].moveTarget:A===void 0?5:[],n=E.getOpponents();let I=[],a=!1;switch(R){case 0:case 18:I=[E];break;case 3:case 1:case 4:case 2:I=n.concat([E.getAlly()]),a=R===4||R===2;break;case 5:case 6:case 8:case 16:I=n,a=R!==5;break;case 7:I=[n[E.randSeedInt(n.length)]];break;case 9:return{targets:[-1],multiple:!1};case 10:case 11:I=[E.getAlly()];break;case 12:case 13:case 15:I=[E,E.getAlly()],a=R!==12;break;case 14:case 17:I=[E,E.getAlly()].concat(n),a=!0;break;case 19:I=E.getTypes(!0).includes(i.GHOST)?n.concat([E.getAlly()]):[E];break}return{targets:I.filter(r=>r==null?void 0:r.isActive(!0)).map(r=>r.getBattlerIndex()).filter(r=>r!==void 0),multiple:a}}L(Cn,"getMoveTargets");const ye=[new ze(t.NONE,i.NORMAL,2,-1,-1,0,1)],i8=[];function SJ(){ye.push(new B(t.POUND,i.NORMAL,0,40,100,35,-1,0,1),new B(t.KARATE_CHOP,i.FIGHTING,0,50,100,25,-1,0,1).attr(qA),new B(t.DOUBLE_SLAP,i.NORMAL,0,15,85,10,-1,0,1).attr(TA),new B(t.COMET_PUNCH,i.NORMAL,0,18,85,15,-1,0,1).attr(TA).punchingMove(),new B(t.MEGA_PUNCH,i.NORMAL,0,80,85,20,-1,0,1).punchingMove(),new B(t.PAY_DAY,i.NORMAL,0,40,100,20,-1,0,1).attr(iD).makesContact(!1),new B(t.FIRE_PUNCH,i.FIRE,0,75,100,15,10,0,1).attr(nt,Re.BURN).punchingMove(),new B(t.ICE_PUNCH,i.ICE,0,75,100,15,10,0,1).attr(nt,Re.FREEZE).punchingMove(),new B(t.THUNDER_PUNCH,i.ELECTRIC,0,75,100,15,10,0,1).attr(nt,Re.PARALYSIS).punchingMove(),new B(t.SCRATCH,i.NORMAL,0,40,100,35,-1,0,1),new B(t.VISE_GRIP,i.NORMAL,0,55,100,30,-1,0,1),new B(t.GUILLOTINE,i.NORMAL,0,200,30,5,-1,0,1).attr(vO).attr(mi),new Ns(t.RAZOR_WIND,i.NORMAL,1,80,100,10,-1,0,1).chargeText(D.t("moveTriggers:whippedUpAWhirlwind",{pokemonName:"{USER}"})).attr(qA).windMove().ignoresVirtual().target(6),new ze(t.SWORDS_DANCE,i.NORMAL,-1,20,-1,0,1).attr(De,[g.ATK],2,!0).danceMove(),new B(t.CUT,i.NORMAL,0,50,95,30,-1,0,1).slicingMove(),new B(t.GUST,i.FLYING,1,40,100,35,-1,0,1).attr(AR,Y.FLYING).windMove(),new B(t.WING_ATTACK,i.FLYING,0,60,100,35,-1,0,1),new ce(t.WHIRLWIND,i.NORMAL,-1,20,-1,-6,1).attr(ks,!1,aA.FORCE_SWITCH).ignoresSubstitute().hidesTarget().windMove(),new Ns(t.FLY,i.FLYING,0,90,95,15,-1,0,1).chargeText(D.t("moveTriggers:flewUpHigh",{pokemonName:"{USER}"})).chargeAttr(fn,Y.FLYING).condition(ii).ignoresVirtual(),new B(t.BIND,i.NORMAL,0,15,85,20,-1,0,1).attr(AO,Y.BIND),new B(t.SLAM,i.NORMAL,0,80,75,20,-1,0,1),new B(t.VINE_WHIP,i.GRASS,0,45,100,25,-1,0,1),new B(t.STOMP,i.NORMAL,0,65,100,20,30,0,1).attr(en).attr(AR,Y.MINIMIZED).attr(LA),new B(t.DOUBLE_KICK,i.FIGHTING,0,30,100,30,-1,0,1).attr(TA,0),new B(t.MEGA_KICK,i.NORMAL,0,120,75,5,-1,0,1),new B(t.JUMP_KICK,i.FIGHTING,0,100,95,10,-1,0,1).attr(sO,ni).attr(gO,ni).condition(ii).recklessMove(),new B(t.ROLLING_KICK,i.FIGHTING,0,60,85,15,30,0,1).attr(LA),new ce(t.SAND_ATTACK,i.GROUND,100,15,-1,0,1).attr(De,[g.ACC],-1),new B(t.HEADBUTT,i.NORMAL,0,70,100,15,30,0,1).attr(LA),new B(t.HORN_ATTACK,i.NORMAL,0,65,100,25,-1,0,1),new B(t.FURY_ATTACK,i.NORMAL,0,15,85,20,-1,0,1).attr(TA),new B(t.HORN_DRILL,i.NORMAL,0,200,30,5,-1,0,1).attr(vO).attr(mi),new B(t.TACKLE,i.NORMAL,0,40,100,35,-1,0,1),new B(t.BODY_SLAM,i.NORMAL,0,85,100,15,30,0,1).attr(en).attr(AR,Y.MINIMIZED).attr(nt,Re.PARALYSIS),new B(t.WRAP,i.NORMAL,0,15,90,20,-1,0,1).attr(AO,Y.WRAP),new B(t.TAKE_DOWN,i.NORMAL,0,90,85,20,-1,0,1).attr(bs).recklessMove(),new B(t.THRASH,i.NORMAL,0,120,100,10,-1,0,1).attr(ka).attr(sO,_n).attr(gO,_n).target(7),new B(t.DOUBLE_EDGE,i.NORMAL,0,120,100,15,-1,0,1).attr(bs,!1,.33).recklessMove(),new ce(t.TAIL_WHIP,i.NORMAL,100,30,-1,0,1).attr(De,[g.DEF],-1).target(6),new B(t.POISON_STING,i.POISON,0,15,100,35,30,0,1).attr(nt,Re.POISON).makesContact(!1),new B(t.TWINEEDLE,i.BUG,0,25,100,20,20,0,1).attr(TA,0).attr(nt,Re.POISON).makesContact(!1),new B(t.PIN_MISSILE,i.BUG,0,25,95,20,-1,0,1).attr(TA).makesContact(!1),new ce(t.LEER,i.NORMAL,100,30,-1,0,1).attr(De,[g.DEF],-1).target(6),new B(t.BITE,i.DARK,0,60,100,25,30,0,1).attr(LA).bitingMove(),new ce(t.GROWL,i.NORMAL,100,40,-1,0,1).attr(De,[g.ATK],-1).soundBased().target(6),new ce(t.ROAR,i.NORMAL,-1,20,-1,-6,1).attr(ks,!1,aA.FORCE_SWITCH).soundBased().hidesTarget(),new ce(t.SING,i.NORMAL,55,15,-1,0,1).attr(nt,Re.SLEEP).soundBased(),new ce(t.SUPERSONIC,i.NORMAL,55,20,-1,0,1).attr(kE).soundBased(),new B(t.SONIC_BOOM,i.NORMAL,1,-1,90,20,-1,0,1).attr(DO,20),new ce(t.DISABLE,i.NORMAL,100,20,-1,0,1).attr(Gt,Y.DISABLED,!1,!0).condition((E,A,s)=>A.getMoveHistory().reverse().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual)!==void 0).ignoresSubstitute(),new B(t.ACID,i.POISON,1,40,100,30,10,0,1).attr(De,[g.SPDEF],-1).target(6),new B(t.EMBER,i.FIRE,1,40,100,25,10,0,1).attr(nt,Re.BURN),new B(t.FLAMETHROWER,i.FIRE,1,90,100,15,10,0,1).attr(nt,Re.BURN),new ce(t.MIST,i.ICE,-1,30,-1,0,1).attr(eE,ge.MIST,5,!0).target(15),new B(t.WATER_GUN,i.WATER,1,40,100,25,-1,0,1),new B(t.HYDRO_PUMP,i.WATER,1,110,80,5,-1,0,1),new B(t.SURF,i.WATER,1,90,100,15,-1,0,1).target(4).attr(AR,Y.UNDERWATER).attr(Ju),new B(t.ICE_BEAM,i.ICE,1,90,100,10,10,0,1).attr(nt,Re.FREEZE),new B(t.BLIZZARD,i.ICE,1,110,70,5,10,0,1).attr(JH).attr(nt,Re.FREEZE).windMove().target(6),new B(t.PSYBEAM,i.PSYCHIC,1,65,100,20,10,0,1).attr(kE),new B(t.BUBBLE_BEAM,i.WATER,1,65,100,20,10,0,1).attr(De,[g.SPD],-1),new B(t.AURORA_BEAM,i.ICE,1,65,100,20,10,0,1).attr(De,[g.ATK],-1),new B(t.HYPER_BEAM,i.NORMAL,1,150,90,5,-1,0,1).attr(wR),new B(t.PECK,i.FLYING,0,35,100,35,-1,0,1),new B(t.DRILL_PECK,i.FLYING,0,80,100,20,-1,0,1),new B(t.SUBMISSION,i.FIGHTING,0,80,80,20,-1,0,1).attr(bs).recklessMove(),new B(t.LOW_KICK,i.FIGHTING,0,-1,100,20,-1,0,1).attr(fu),new B(t.COUNTER,i.FIGHTING,0,-1,100,20,-1,-5,1).attr(BI,E=>E.category===0,2).target(9),new B(t.SEISMIC_TOSS,i.FIGHTING,0,-1,100,20,-1,0,1).attr(au),new B(t.STRENGTH,i.NORMAL,0,80,100,15,-1,0,1),new B(t.ABSORB,i.GRASS,1,20,100,25,-1,0,1).attr(Ks).triageMove(),new B(t.MEGA_DRAIN,i.GRASS,1,40,100,15,-1,0,1).attr(Ks).triageMove(),new ce(t.LEECH_SEED,i.GRASS,90,10,-1,0,1).attr(Qu).condition((E,A,s)=>!A.getTag(Y.SEEDED)&&!A.isOfType(i.GRASS)),new ze(t.GROWTH,i.NORMAL,-1,20,-1,0,1).attr(GH),new B(t.RAZOR_LEAF,i.GRASS,0,55,95,25,-1,0,1).attr(qA).makesContact(!1).slicingMove().target(6),new Ns(t.SOLAR_BEAM,i.GRASS,1,120,100,10,-1,0,1).chargeText(D.t("moveTriggers:tookInSunlight",{pokemonName:"{USER}"})).chargeAttr(QL,[se.SUNNY,se.HARSH_SUN]).attr(Fu).ignoresVirtual(),new ce(t.POISON_POWDER,i.POISON,75,35,-1,0,1).attr(nt,Re.POISON).powderMove(),new ce(t.STUN_SPORE,i.GRASS,75,30,-1,0,1).attr(nt,Re.PARALYSIS).powderMove(),new ce(t.SLEEP_POWDER,i.GRASS,75,15,-1,0,1).attr(nt,Re.SLEEP).powderMove(),new B(t.PETAL_DANCE,i.GRASS,1,120,100,10,-1,0,1).attr(ka).attr(sO,_n).attr(gO,_n).makesContact().danceMove().target(7),new ce(t.STRING_SHOT,i.BUG,95,40,-1,0,1).attr(De,[g.SPD],-2).target(6),new B(t.DRAGON_RAGE,i.DRAGON,1,-1,100,10,-1,0,1).attr(DO,40),new B(t.FIRE_SPIN,i.FIRE,1,35,85,15,-1,0,1).attr(AO,Y.FIRE_SPIN),new B(t.THUNDER_SHOCK,i.ELECTRIC,1,40,100,30,10,0,1).attr(nt,Re.PARALYSIS),new B(t.THUNDERBOLT,i.ELECTRIC,1,90,100,15,10,0,1).attr(nt,Re.PARALYSIS),new ce(t.THUNDER_WAVE,i.ELECTRIC,90,20,-1,0,1).attr(nt,Re.PARALYSIS).attr(Iu),new B(t.THUNDER,i.ELECTRIC,1,110,70,10,30,0,1).attr(nt,Re.PARALYSIS).attr(wu).attr(_R,Y.FLYING),new B(t.ROCK_THROW,i.ROCK,0,50,90,15,-1,0,1).makesContact(!1),new B(t.EARTHQUAKE,i.GROUND,0,100,100,10,-1,0,1).attr(AR,Y.UNDERGROUND).attr(GA,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.GRASSY&&A.isGrounded()?.5:1).makesContact(!1).target(4),new B(t.FISSURE,i.GROUND,0,200,30,5,-1,0,1).attr(vO).attr(mi).attr(_R,Y.UNDERGROUND).makesContact(!1),new Ns(t.DIG,i.GROUND,0,80,100,10,-1,0,1).chargeText(D.t("moveTriggers:dugAHole",{pokemonName:"{USER}"})).chargeAttr(fn,Y.UNDERGROUND).ignoresVirtual(),new ce(t.TOXIC,i.POISON,90,10,-1,0,1).attr(nt,Re.TOXIC).attr(vu),new B(t.CONFUSION,i.PSYCHIC,1,50,100,25,10,0,1).attr(kE),new B(t.PSYCHIC,i.PSYCHIC,1,90,100,10,10,0,1).attr(De,[g.SPDEF],-1),new ce(t.HYPNOSIS,i.PSYCHIC,60,20,-1,0,1).attr(nt,Re.SLEEP),new ze(t.MEDITATE,i.PSYCHIC,-1,40,-1,0,1).attr(De,[g.ATK],1,!0),new ze(t.AGILITY,i.PSYCHIC,-1,30,-1,0,1).attr(De,[g.SPD],2,!0),new B(t.QUICK_ATTACK,i.NORMAL,0,40,100,30,-1,1,1),new B(t.RAGE,i.NORMAL,0,20,100,20,-1,0,1).partial(),new ze(t.TELEPORT,i.PSYCHIC,-1,20,-1,-6,1).attr(ks,!0).hidesUser(),new B(t.NIGHT_SHADE,i.GHOST,1,-1,100,15,-1,0,1).attr(au),new ce(t.MIMIC,i.NORMAL,-1,10,-1,0,1).attr(Pd).ignoresSubstitute().ignoresVirtual(),new ce(t.SCREECH,i.NORMAL,85,40,-1,0,1).attr(De,[g.DEF],-2).soundBased(),new ze(t.DOUBLE_TEAM,i.NORMAL,-1,15,-1,0,1).attr(De,[g.EVA],1,!0),new ze(t.RECOVER,i.NORMAL,-1,5,-1,0,1).attr(os,.5).triageMove(),new ze(t.HARDEN,i.NORMAL,-1,30,-1,0,1).attr(De,[g.DEF],1,!0),new ze(t.MINIMIZE,i.NORMAL,-1,10,-1,0,1).attr(Gt,Y.MINIMIZED,!0,!1).attr(De,[g.EVA],2,!0),new ce(t.SMOKESCREEN,i.NORMAL,100,20,-1,0,1).attr(De,[g.ACC],-1),new ce(t.CONFUSE_RAY,i.GHOST,100,10,-1,0,1).attr(kE),new ze(t.WITHDRAW,i.WATER,-1,40,-1,0,1).attr(De,[g.DEF],1,!0),new ze(t.DEFENSE_CURL,i.NORMAL,-1,40,-1,0,1).attr(De,[g.DEF],1,!0),new ze(t.BARRIER,i.PSYCHIC,-1,20,-1,0,1).attr(De,[g.DEF],2,!0),new ce(t.LIGHT_SCREEN,i.PSYCHIC,-1,30,-1,0,1).attr(eE,ge.LIGHT_SCREEN,5,!0).target(15),new ze(t.HAZE,i.ICE,-1,30,-1,0,1).ignoresSubstitute().attr(zL,!0),new ce(t.REFLECT,i.PSYCHIC,-1,20,-1,0,1).attr(eE,ge.REFLECT,5,!0).target(15),new ze(t.FOCUS_ENERGY,i.NORMAL,-1,30,-1,0,1).attr(Gt,Y.CRIT_BOOST,!0,!0),new B(t.BIDE,i.NORMAL,0,-1,-1,10,-1,1,1).ignoresVirtual().target(0).unimplemented(),new ze(t.METRONOME,i.NORMAL,-1,10,-1,0,1).attr(tD).ignoresVirtual(),new ce(t.MIRROR_MOVE,i.FLYING,-1,20,-1,0,1).attr(Xr).ignoresVirtual(),new B(t.SELF_DESTRUCT,i.NORMAL,0,200,100,5,-1,0,1).attr(yn).makesContact(!1).condition(Rl).target(4),new B(t.EGG_BOMB,i.NORMAL,0,100,75,10,-1,0,1).makesContact(!1).ballBombMove(),new B(t.LICK,i.GHOST,0,30,100,30,30,0,1).attr(nt,Re.PARALYSIS),new B(t.SMOG,i.POISON,1,30,70,20,40,0,1).attr(nt,Re.POISON),new B(t.SLUDGE,i.POISON,1,65,100,20,30,0,1).attr(nt,Re.POISON),new B(t.BONE_CLUB,i.GROUND,0,65,85,20,10,0,1).attr(LA).makesContact(!1),new B(t.FIRE_BLAST,i.FIRE,1,110,85,5,10,0,1).attr(nt,Re.BURN),new B(t.WATERFALL,i.WATER,0,80,100,15,20,0,1).attr(LA),new B(t.CLAMP,i.WATER,0,35,85,15,-1,0,1).attr(AO,Y.CLAMP),new B(t.SWIFT,i.NORMAL,1,60,-1,20,-1,0,1).target(6),new Ns(t.SKULL_BASH,i.NORMAL,0,130,100,10,-1,0,1).chargeText(D.t("moveTriggers:loweredItsHead",{pokemonName:"{USER}"})).chargeAttr(De,[g.DEF],1,!0).ignoresVirtual(),new B(t.SPIKE_CANNON,i.NORMAL,0,20,100,15,-1,0,1).attr(TA).makesContact(!1),new B(t.CONSTRICT,i.NORMAL,0,10,100,35,10,0,1).attr(De,[g.SPD],-1),new ze(t.AMNESIA,i.PSYCHIC,-1,20,-1,0,1).attr(De,[g.SPDEF],2,!0),new ce(t.KINESIS,i.PSYCHIC,80,15,-1,0,1).attr(De,[g.ACC],-1),new ze(t.SOFT_BOILED,i.NORMAL,-1,5,-1,0,1).attr(os,.5).triageMove(),new B(t.HIGH_JUMP_KICK,i.FIGHTING,0,130,90,10,-1,0,1).attr(sO,ni).attr(gO,ni).condition(ii).recklessMove(),new ce(t.GLARE,i.NORMAL,100,30,-1,0,1).attr(nt,Re.PARALYSIS),new B(t.DREAM_EATER,i.PSYCHIC,1,100,100,15,-1,0,1).attr(Ks).condition(Fh).triageMove(),new ce(t.POISON_GAS,i.POISON,90,40,-1,0,1).attr(nt,Re.POISON).target(6),new B(t.BARRAGE,i.NORMAL,0,15,85,20,-1,0,1).attr(TA).makesContact(!1).ballBombMove(),new B(t.LEECH_LIFE,i.BUG,0,80,100,10,-1,0,1).attr(Ks).triageMove(),new ce(t.LOVELY_KISS,i.NORMAL,75,10,-1,0,1).attr(nt,Re.SLEEP),new Ns(t.SKY_ATTACK,i.FLYING,0,140,90,5,30,0,1).chargeText(D.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).attr(qA).attr(LA).makesContact(!1).ignoresVirtual(),new ce(t.TRANSFORM,i.NORMAL,-1,10,-1,0,1).attr(Bd).condition((E,A,s)=>!A.getTag(Y.SUBSTITUTE)&&!E.fusionSpecies&&!A.fusionSpecies).ignoresProtect(),new B(t.BUBBLE,i.WATER,1,40,100,30,10,0,1).attr(De,[g.SPD],-1).target(6),new B(t.DIZZY_PUNCH,i.NORMAL,0,70,100,10,20,0,1).attr(kE).punchingMove(),new ce(t.SPORE,i.GRASS,100,15,-1,0,1).attr(nt,Re.SLEEP).powderMove(),new ce(t.FLASH,i.NORMAL,100,20,-1,0,1).attr(De,[g.ACC],-1),new B(t.PSYWAVE,i.PSYCHIC,1,-1,100,15,-1,0,1).attr(UH),new ze(t.SPLASH,i.NORMAL,-1,40,-1,0,1).condition(ii),new ze(t.ACID_ARMOR,i.POISON,-1,20,-1,0,1).attr(De,[g.DEF],2,!0),new B(t.CRABHAMMER,i.WATER,0,100,90,10,-1,0,1).attr(qA),new B(t.EXPLOSION,i.NORMAL,0,250,100,5,-1,0,1).condition(Rl).attr(yn).makesContact(!1).target(4),new B(t.FURY_SWIPES,i.NORMAL,0,18,80,15,-1,0,1).attr(TA),new B(t.BONEMERANG,i.GROUND,0,50,90,10,-1,0,1).attr(TA,0).makesContact(!1),new ze(t.REST,i.PSYCHIC,-1,5,-1,0,1).attr(nt,Re.SLEEP,!0,3,!0).attr(os,1,!0).condition((E,A,s)=>!E.isFullHp()&&E.canSetStatus(Re.SLEEP,!0,!0)).triageMove(),new B(t.ROCK_SLIDE,i.ROCK,0,75,90,10,30,0,1).attr(LA).makesContact(!1).target(6),new B(t.HYPER_FANG,i.NORMAL,0,80,90,15,10,0,1).attr(LA).bitingMove(),new ze(t.SHARPEN,i.NORMAL,-1,30,-1,0,1).attr(De,[g.ATK],1,!0),new ze(t.CONVERSION,i.NORMAL,-1,30,-1,0,1).attr(hd),new B(t.TRI_ATTACK,i.NORMAL,1,80,100,10,20,0,1).attr(Du,[Re.BURN,Re.FREEZE,Re.PARALYSIS]),new B(t.SUPER_FANG,i.NORMAL,0,-1,90,10,-1,0,1).attr(kL),new B(t.SLASH,i.NORMAL,0,70,100,20,-1,0,1).attr(qA).slicingMove(),new ze(t.SUBSTITUTE,i.NORMAL,-1,10,-1,0,1).attr(Tu),new B(t.STRUGGLE,i.NORMAL,0,50,-1,1,-1,0,1).attr(bs,!0,.25,!0).attr(xS).ignoresVirtual().target(7),new ce(t.SKETCH,i.NORMAL,-1,1,-1,0,2).ignoresSubstitute().attr(Gd).ignoresVirtual(),new B(t.TRIPLE_KICK,i.FIGHTING,0,10,90,10,-1,0,2).attr(TA,2).attr(Wu,3).checkAllHits(),new B(t.THIEF,i.DARK,0,60,100,25,-1,0,2).attr(Mu,.3),new ce(t.SPIDER_WEB,i.BUG,-1,10,-1,0,2).condition(Ol).attr(Gt,Y.TRAPPED,!1,!0,1),new ce(t.MIND_READER,i.NORMAL,-1,5,-1,0,2).attr($u),new ce(t.NIGHTMARE,i.GHOST,100,15,-1,0,2).attr(Gt,Y.NIGHTMARE).condition(Fh),new B(t.FLAME_WHEEL,i.FIRE,0,60,100,25,10,0,2).attr(jA,!0,Re.FREEZE).attr(nt,Re.BURN),new B(t.SNORE,i.NORMAL,1,50,100,15,30,0,2).attr(VS).attr(LA).condition(Wb).soundBased(),new ce(t.CURSE,i.GHOST,-1,10,-1,0,2).attr(Nd).ignoresSubstitute().ignoresProtect().target(19),new B(t.FLAIL,i.NORMAL,0,-1,100,15,-1,0,2).attr(Bu),new ce(t.CONVERSION_2,i.NORMAL,-1,30,-1,0,2).attr(xd).ignoresSubstitute().partial(),new B(t.AEROBLAST,i.FLYING,1,100,95,5,-1,0,2).windMove().attr(qA),new ce(t.COTTON_SPORE,i.GRASS,100,40,-1,0,2).attr(De,[g.SPD],-2).powderMove().target(6),new B(t.REVERSAL,i.FIGHTING,0,-1,100,15,-1,0,2).attr(Bu),new ce(t.SPITE,i.GHOST,100,10,-1,0,2).ignoresSubstitute().attr(ED,4),new B(t.POWDER_SNOW,i.ICE,1,40,100,25,10,0,2).attr(nt,Re.FREEZE).target(6),new ze(t.PROTECT,i.NORMAL,-1,10,-1,4,2).attr(vR).condition(lR),new B(t.MACH_PUNCH,i.FIGHTING,0,40,100,30,-1,1,2).punchingMove(),new ce(t.SCARY_FACE,i.NORMAL,100,10,-1,0,2).attr(De,[g.SPD],-2),new B(t.FEINT_ATTACK,i.DARK,0,60,-1,20,-1,0,2),new ce(t.SWEET_KISS,i.FAIRY,75,10,-1,0,2).attr(kE),new ze(t.BELLY_DRUM,i.NORMAL,-1,10,-1,0,2).attr($L,[g.ATK],12,2,E=>{E.scene.queueMessage(D.t("moveTriggers:cutOwnHpAndMaximizedStat",{pokemonName:ee(E),statName:D.t(_E(g.ATK))}))}),new B(t.SLUDGE_BOMB,i.POISON,1,90,100,10,30,0,2).attr(nt,Re.POISON).ballBombMove(),new B(t.MUD_SLAP,i.GROUND,1,20,100,10,100,0,2).attr(De,[g.ACC],-1),new B(t.OCTAZOOKA,i.WATER,1,65,85,10,50,0,2).attr(De,[g.ACC],-1).ballBombMove(),new ce(t.SPIKES,i.GROUND,-1,20,-1,0,2).attr(Za,ge.SPIKES).target(16),new B(t.ZAP_CANNON,i.ELECTRIC,1,120,50,5,100,0,2).attr(nt,Re.PARALYSIS).ballBombMove(),new ce(t.FORESIGHT,i.NORMAL,-1,40,-1,0,2).attr(ON,Y.IGNORE_GHOST).ignoresSubstitute(),new ze(t.DESTINY_BOND,i.GHOST,-1,5,-1,0,2).ignoresProtect().attr(Fd).condition((E,A,s)=>{const R=E.getLastXMoves(1);return R.length===0||R[0].move!==s.id||R[0].result!==CA.SUCCESS}),new ce(t.PERISH_SONG,i.NORMAL,-1,5,-1,0,2).attr(Sd).ignoresProtect().soundBased().condition(mh).target(14),new B(t.ICY_WIND,i.ICE,1,55,95,15,100,0,2).attr(De,[g.SPD],-1).windMove().target(6),new ze(t.DETECT,i.FIGHTING,-1,5,-1,4,2).attr(vR).condition(lR),new B(t.BONE_RUSH,i.GROUND,0,25,90,10,-1,0,2).attr(TA).makesContact(!1),new ce(t.LOCK_ON,i.NORMAL,-1,5,-1,0,2).attr($u),new B(t.OUTRAGE,i.DRAGON,0,120,100,10,-1,0,2).attr(ka).attr(sO,_n).attr(gO,_n).target(7),new ce(t.SANDSTORM,i.ROCK,-1,10,-1,0,2).attr(TI,se.SANDSTORM).target(17),new B(t.GIGA_DRAIN,i.GRASS,1,75,100,10,-1,0,2).attr(Ks).triageMove(),new ze(t.ENDURE,i.NORMAL,-1,10,-1,4,2).attr(vR,Y.ENDURING).condition(lR),new ce(t.CHARM,i.FAIRY,100,20,-1,0,2).attr(De,[g.ATK],-2),new B(t.ROLLOUT,i.ROCK,0,30,90,20,-1,0,2).partial().attr(Lr,5,!0,!0,t.DEFENSE_CURL),new B(t.FALSE_SWIPE,i.NORMAL,0,40,100,40,-1,0,2).attr(Lu),new ce(t.SWAGGER,i.NORMAL,85,15,-1,0,2).attr(De,[g.ATK],2).attr(kE),new ze(t.MILK_DRINK,i.NORMAL,-1,5,-1,0,2).attr(os,.5).triageMove(),new B(t.SPARK,i.ELECTRIC,0,65,100,20,30,0,2).attr(nt,Re.PARALYSIS),new B(t.FURY_CUTTER,i.BUG,0,40,95,20,-1,0,2).attr(Lr,3,!0).slicingMove(),new B(t.STEEL_WING,i.STEEL,0,70,90,25,10,0,2).attr(De,[g.DEF],1,!0),new ce(t.MEAN_LOOK,i.NORMAL,-1,5,-1,0,2).condition(Ol).attr(Gt,Y.TRAPPED,!1,!0,1),new ce(t.ATTRACT,i.NORMAL,100,15,-1,0,2).attr(Gt,Y.INFATUATED).ignoresSubstitute().condition((E,A,s)=>E.isOppositeGender(A)),new ze(t.SLEEP_TALK,i.NORMAL,-1,10,-1,0,2).attr(VS).attr(bS).condition(Wb).target(8).ignoresVirtual(),new ce(t.HEAL_BELL,i.NORMAL,-1,5,-1,0,2).attr(ZL,D.t("moveTriggers:bellChimed"),O.SOUNDPROOF).soundBased().target(18),new B(t.RETURN,i.NORMAL,0,-1,100,20,-1,0,2).attr(ba),new B(t.PRESENT,i.NORMAL,0,-1,90,15,-1,0,2).attr(vH).makesContact(!1),new B(t.FRUSTRATION,i.NORMAL,0,-1,100,20,-1,0,2).attr(ba,!0),new ce(t.SAFEGUARD,i.NORMAL,-1,25,-1,0,2).target(15).attr(eE,ge.SAFEGUARD,5,!0,!0),new ce(t.PAIN_SPLIT,i.NORMAL,-1,20,-1,0,2).attr(BH).condition(mh),new B(t.SACRED_FIRE,i.FIRE,0,100,95,5,50,0,2).attr(jA,!0,Re.FREEZE).attr(nt,Re.BURN).makesContact(!1),new B(t.MAGNITUDE,i.GROUND,0,-1,100,30,-1,0,2).attr(rr,rJ).attr(YH).attr(GA,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.GRASSY&&A.isGrounded()?.5:1).attr(AR,Y.UNDERGROUND).makesContact(!1).target(4),new B(t.DYNAMIC_PUNCH,i.FIGHTING,0,100,50,5,100,0,2).attr(kE).punchingMove(),new B(t.MEGAHORN,i.BUG,0,120,85,10,-1,0,2),new B(t.DRAGON_BREATH,i.DRAGON,1,60,100,20,30,0,2).attr(nt,Re.PARALYSIS),new ze(t.BATON_PASS,i.NORMAL,-1,40,-1,0,2).attr(ks,!0,aA.BATON_PASS).condition(Yb).hidesUser(),new ce(t.ENCORE,i.NORMAL,100,5,-1,0,2).attr(Gt,Y.ENCORE,!1,!0).ignoresSubstitute().condition((E,A,s)=>new BS(E.id).canAdd(A)),new B(t.PURSUIT,i.DARK,0,40,100,20,-1,0,2).partial(),new B(t.RAPID_SPIN,i.NORMAL,0,50,100,40,100,0,2).attr(De,[g.SPD],1,!0).attr(Bn,[Y.BIND,Y.WRAP,Y.FIRE_SPIN,Y.WHIRLPOOL,Y.CLAMP,Y.SAND_TOMB,Y.MAGMA_STORM,Y.SNAP_TRAP,Y.THUNDER_CAGE,Y.SEEDED,Y.INFESTATION],!0).attr(Xa),new ce(t.SWEET_SCENT,i.NORMAL,100,20,-1,0,2).attr(De,[g.EVA],-2).target(6),new B(t.IRON_TAIL,i.STEEL,0,100,75,15,30,0,2).attr(De,[g.DEF],-1),new B(t.METAL_CLAW,i.STEEL,0,50,95,35,10,0,2).attr(De,[g.ATK],1,!0),new B(t.VITAL_THROW,i.FIGHTING,0,70,-1,10,-1,-1,2),new ze(t.MORNING_SUN,i.NORMAL,-1,5,-1,0,2).attr(XL).triageMove(),new ze(t.SYNTHESIS,i.GRASS,-1,5,-1,0,2).attr(XL).triageMove(),new ze(t.MOONLIGHT,i.FAIRY,-1,5,-1,0,2).attr(XL).triageMove(),new B(t.HIDDEN_POWER,i.NORMAL,1,60,100,15,-1,0,2).attr(Rd),new B(t.CROSS_CHOP,i.FIGHTING,0,100,80,5,-1,0,2).attr(qA),new B(t.TWISTER,i.DRAGON,1,40,100,20,20,0,2).attr(AR,Y.FLYING).attr(LA).windMove().target(6),new ce(t.RAIN_DANCE,i.WATER,-1,5,-1,0,2).attr(TI,se.RAIN).target(17),new ce(t.SUNNY_DAY,i.FIRE,-1,5,-1,0,2).attr(TI,se.SUNNY).target(17),new B(t.CRUNCH,i.DARK,0,80,100,15,20,0,2).attr(De,[g.DEF],-1).bitingMove(),new B(t.MIRROR_COAT,i.PSYCHIC,1,-1,100,20,-1,-5,2).attr(BI,E=>E.category===1,2).target(9),new ce(t.PSYCH_UP,i.NORMAL,-1,10,-1,0,2).ignoresSubstitute().attr(dH),new B(t.EXTREME_SPEED,i.NORMAL,0,80,100,5,-1,2,2),new B(t.ANCIENT_POWER,i.ROCK,1,60,100,5,10,0,2).attr(De,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],1,!0),new B(t.SHADOW_BALL,i.GHOST,1,80,100,15,20,0,2).attr(De,[g.SPDEF],-1).ballBombMove(),new B(t.FUTURE_SIGHT,i.PSYCHIC,1,120,100,10,-1,0,2).partial().ignoresProtect().attr(Xn,ge.FUTURE_SIGHT,Zn.FUTURE_SIGHT_CHARGING,D.t("moveTriggers:foresawAnAttack",{pokemonName:"{USER}"})),new B(t.ROCK_SMASH,i.FIGHTING,0,40,100,15,50,0,2).attr(De,[g.DEF],-1),new B(t.WHIRLPOOL,i.WATER,1,35,85,15,-1,0,2).attr(AO,Y.WHIRLPOOL).attr(AR,Y.UNDERWATER),new B(t.BEAT_UP,i.DARK,0,-1,100,10,-1,0,2).attr(TA,4).attr(KH).makesContact(!1),new B(t.FAKE_OUT,i.NORMAL,0,40,100,10,100,3,3).attr(LA).condition(new RN),new B(t.UPROAR,i.NORMAL,1,90,100,10,-1,0,3).ignoresVirtual().soundBased().target(7).partial(),new ze(t.STOCKPILE,i.NORMAL,-1,20,-1,0,3).condition(E=>{var A;return(((A=E.getTag(Oa))==null?void 0:A.stockpiledCount)??0)<3}).attr(Gt,Y.STOCKPILING,!0),new B(t.SPIT_UP,i.NORMAL,1,-1,-1,10,-1,0,3).condition(pb).attr(xH,100).attr(Bn,[Y.STOCKPILING],!0),new ze(t.SWALLOW,i.NORMAL,-1,10,-1,0,3).condition(pb).attr(bH).attr(Bn,[Y.STOCKPILING],!0).triageMove(),new B(t.HEAT_WAVE,i.FIRE,1,95,90,10,10,0,3).attr(jA,!0,Re.FREEZE).attr(nt,Re.BURN).windMove().target(6),new ce(t.HAIL,i.ICE,-1,10,-1,0,3).attr(TI,se.HAIL).target(17),new ce(t.TORMENT,i.DARK,100,15,-1,0,3).ignoresSubstitute().edgeCase().attr(Gt,Y.TORMENT,!1,!0,1),new ce(t.FLATTER,i.DARK,100,15,-1,0,3).attr(De,[g.SPATK],1).attr(kE),new ce(t.WILL_O_WISP,i.FIRE,85,15,-1,0,3).attr(nt,Re.BURN),new ce(t.MEMENTO,i.DARK,100,10,-1,0,3).attr(na).attr(De,[g.ATK,g.SPATK],-2),new B(t.FACADE,i.NORMAL,0,70,100,20,-1,0,3).attr(GA,(E,A,s)=>E.status&&(E.status.effect===Re.BURN||E.status.effect===Re.POISON||E.status.effect===Re.TOXIC||E.status.effect===Re.PARALYSIS)?2:1).attr(_u),new B(t.FOCUS_PUNCH,i.FIGHTING,0,150,100,20,-1,-3,3).attr(oH,(E,A)=>D.t("moveTriggers:isTighteningFocus",{pokemonName:ee(E)})).punchingMove().ignoresVirtual().condition((E,A,s)=>!E.turnData.attacksReceived.find(R=>R.damage)),new B(t.SMELLING_SALTS,i.NORMAL,0,70,100,10,-1,0,3).attr(GA,(E,A,s)=>{var R;return((R=A.status)==null?void 0:R.effect)===Re.PARALYSIS?2:1}).attr(jA,!0,Re.PARALYSIS),new ze(t.FOLLOW_ME,i.NORMAL,-1,20,-1,2,3).attr(Gt,Y.CENTER_OF_ATTENTION,!0),new ce(t.NATURE_POWER,i.NORMAL,-1,20,-1,0,3).attr(AD).ignoresVirtual(),new ze(t.CHARGE,i.ELECTRIC,-1,20,-1,0,3).attr(De,[g.SPDEF],1,!0).attr(Gt,Y.CHARGED,!0,!1),new ce(t.TAUNT,i.DARK,100,20,-1,0,3).ignoresSubstitute().attr(Gt,Y.TAUNT,!1,!0,4),new ce(t.HELPING_HAND,i.NORMAL,-1,20,-1,5,3).attr(Gt,Y.HELPING_HAND).ignoresSubstitute().target(10).condition(Ba),new ce(t.TRICK,i.PSYCHIC,100,10,-1,0,3).unimplemented(),new ce(t.ROLE_PLAY,i.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(RD),new ze(t.WISH,i.NORMAL,-1,10,-1,0,3).triageMove().attr(eE,ge.WISH,2,!0),new ze(t.ASSIST,i.NORMAL,-1,20,-1,0,3).attr(bS,!0).ignoresVirtual(),new ze(t.INGRAIN,i.GRASS,-1,20,-1,0,3).attr(Gt,Y.INGRAIN,!0,!0).attr(Gt,Y.IGNORE_FLYING,!0,!0).attr(Bn,[Y.FLOATING],!0),new B(t.SUPERPOWER,i.FIGHTING,0,120,100,5,-1,0,3).attr(De,[g.ATK,g.DEF],-1,!0),new ze(t.MAGIC_COAT,i.PSYCHIC,-1,15,-1,4,3).unimplemented(),new ze(t.RECYCLE,i.NORMAL,-1,10,-1,0,3).unimplemented(),new B(t.REVENGE,i.FIGHTING,0,60,100,10,-1,-4,3).attr(mu),new B(t.BRICK_BREAK,i.FIGHTING,0,75,100,15,-1,0,3).attr(Qa),new ce(t.YAWN,i.NORMAL,-1,10,-1,0,3).attr(Gt,Y.DROWSY,!1,!0).condition((E,A,s)=>!A.status&&!A.isSafeguarded(E)),new B(t.KNOCK_OFF,i.DARK,0,65,100,20,-1,0,3).attr(GA,(E,A,s)=>A.getHeldItems().filter(R=>R.isTransferable).length>0?1.5:1).attr(hu,!1),new B(t.ENDEAVOR,i.NORMAL,0,-1,100,5,-1,0,3).attr(CH).condition(mh),new B(t.ERUPTION,i.FIRE,1,150,100,5,-1,0,3).attr(jL).target(6),new ce(t.SKILL_SWAP,i.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(dd),new ce(t.IMPRISON,i.PSYCHIC,100,10,-1,0,3).ignoresSubstitute().attr(eE,ge.IMPRISON,1,!0,!1).target(16),new ze(t.REFRESH,i.NORMAL,-1,20,-1,0,3).attr(jA,!0,[Re.PARALYSIS,Re.POISON,Re.TOXIC,Re.BURN]).condition((E,A,s)=>!!E.status&&(E.status.effect===Re.PARALYSIS||E.status.effect===Re.POISON||E.status.effect===Re.TOXIC||E.status.effect===Re.BURN)),new ze(t.GRUDGE,i.GHOST,-1,5,-1,0,3).attr(Gt,Y.GRUDGE,!0,void 0,1),new ze(t.SNATCH,i.DARK,-1,10,-1,4,3).unimplemented(),new B(t.SECRET_POWER,i.NORMAL,0,70,100,20,30,0,3).makesContact(!1).attr(Gu),new Ns(t.DIVE,i.WATER,0,80,100,10,-1,0,3).chargeText(D.t("moveTriggers:hidUnderwater",{pokemonName:"{USER}"})).chargeAttr(fn,Y.UNDERWATER).chargeAttr(Ju).ignoresVirtual(),new B(t.ARM_THRUST,i.FIGHTING,0,15,100,20,-1,0,3).attr(TA),new ze(t.CAMOUFLAGE,i.NORMAL,-1,20,-1,0,3).attr(Md),new ze(t.TAIL_GLOW,i.BUG,-1,20,-1,0,3).attr(De,[g.SPATK],3,!0),new B(t.LUSTER_PURGE,i.PSYCHIC,1,95,100,5,50,0,3).attr(De,[g.SPDEF],-1),new B(t.MIST_BALL,i.PSYCHIC,1,95,100,5,50,0,3).attr(De,[g.SPATK],-1).ballBombMove(),new ce(t.FEATHER_DANCE,i.FLYING,100,15,-1,0,3).attr(De,[g.ATK],-2).danceMove(),new ce(t.TEETER_DANCE,i.NORMAL,100,20,-1,0,3).attr(kE).danceMove().target(4),new B(t.BLAZE_KICK,i.FIRE,0,85,90,10,10,0,3).attr(qA).attr(nt,Re.BURN),new ce(t.MUD_SPORT,i.GROUND,-1,15,-1,0,3).ignoresProtect().attr(eE,ge.MUD_SPORT,5).target(17),new B(t.ICE_BALL,i.ICE,0,30,90,20,-1,0,3).partial().attr(Lr,5,!0,!0,t.DEFENSE_CURL).ballBombMove(),new B(t.NEEDLE_ARM,i.GRASS,0,60,100,15,30,0,3).attr(LA),new ze(t.SLACK_OFF,i.NORMAL,-1,5,-1,0,3).attr(os,.5).triageMove(),new B(t.HYPER_VOICE,i.NORMAL,1,90,100,10,-1,0,3).soundBased().target(6),new B(t.POISON_FANG,i.POISON,0,50,100,15,50,0,3).attr(nt,Re.TOXIC).bitingMove(),new B(t.CRUSH_CLAW,i.NORMAL,0,75,95,10,50,0,3).attr(De,[g.DEF],-1),new B(t.BLAST_BURN,i.FIRE,1,150,90,5,-1,0,3).attr(wR),new B(t.HYDRO_CANNON,i.WATER,1,150,90,5,-1,0,3).attr(wR),new B(t.METEOR_MASH,i.STEEL,0,90,90,10,20,0,3).attr(De,[g.ATK],1,!0).punchingMove(),new B(t.ASTONISH,i.GHOST,0,30,100,15,30,0,3).attr(LA),new B(t.WEATHER_BALL,i.NORMAL,1,50,100,10,-1,0,3).attr(Ed).attr(GA,(E,A,s)=>{var R,n;return[se.SUNNY,se.RAIN,se.SANDSTORM,se.HAIL,se.SNOW,se.FOG,se.HEAVY_RAIN,se.HARSH_SUN].includes((R=E.scene.arena.weather)==null?void 0:R.weatherType)&&!((n=E.scene.arena.weather)!=null&&n.isEffectSuppressed(E.scene))?2:1}).ballBombMove(),new ce(t.AROMATHERAPY,i.GRASS,-1,5,-1,0,3).attr(ZL,D.t("moveTriggers:soothingAromaWaftedThroughArea"),O.SAP_SIPPER).target(18),new ce(t.FAKE_TEARS,i.DARK,100,20,-1,0,3).attr(De,[g.SPDEF],-2),new B(t.AIR_CUTTER,i.FLYING,1,60,95,25,-1,0,3).attr(qA).slicingMove().windMove().target(6),new B(t.OVERHEAT,i.FIRE,1,130,90,5,-1,0,3).attr(De,[g.SPATK],-2,!0).attr(jA,!0,Re.FREEZE),new ce(t.ODOR_SLEUTH,i.NORMAL,-1,40,-1,0,3).attr(ON,Y.IGNORE_GHOST).ignoresSubstitute(),new B(t.ROCK_TOMB,i.ROCK,0,60,95,15,100,0,3).attr(De,[g.SPD],-1).makesContact(!1),new B(t.SILVER_WIND,i.BUG,1,60,100,5,10,0,3).attr(De,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],1,!0).windMove(),new ce(t.METAL_SOUND,i.STEEL,85,40,-1,0,3).attr(De,[g.SPDEF],-2).soundBased(),new ce(t.GRASS_WHISTLE,i.GRASS,55,15,-1,0,3).attr(nt,Re.SLEEP).soundBased(),new ce(t.TICKLE,i.NORMAL,100,20,-1,0,3).attr(De,[g.ATK,g.DEF],-1),new ze(t.COSMIC_POWER,i.PSYCHIC,-1,20,-1,0,3).attr(De,[g.DEF,g.SPDEF],1,!0),new B(t.WATER_SPOUT,i.WATER,1,150,100,5,-1,0,3).attr(jL).target(6),new B(t.SIGNAL_BEAM,i.BUG,1,75,100,15,10,0,3).attr(kE),new B(t.SHADOW_PUNCH,i.GHOST,0,60,-1,20,-1,0,3).punchingMove(),new B(t.EXTRASENSORY,i.PSYCHIC,1,80,100,20,10,0,3).attr(LA),new B(t.SKY_UPPERCUT,i.FIGHTING,0,85,90,15,-1,0,3).attr(_R,Y.FLYING).punchingMove(),new B(t.SAND_TOMB,i.GROUND,0,35,85,15,-1,0,3).attr(AO,Y.SAND_TOMB).makesContact(!1),new B(t.SHEER_COLD,i.ICE,1,200,20,5,-1,0,3).attr(id).attr(vO).attr(rd),new B(t.MUDDY_WATER,i.WATER,1,90,85,10,30,0,3).attr(De,[g.ACC],-1).target(6),new B(t.BULLET_SEED,i.GRASS,0,25,100,30,-1,0,3).attr(TA).makesContact(!1).ballBombMove(),new B(t.AERIAL_ACE,i.FLYING,0,60,-1,20,-1,0,3).slicingMove(),new B(t.ICICLE_SPEAR,i.ICE,0,25,100,30,-1,0,3).attr(TA).makesContact(!1),new ze(t.IRON_DEFENSE,i.STEEL,-1,15,-1,0,3).attr(De,[g.DEF],2,!0),new ce(t.BLOCK,i.NORMAL,-1,5,-1,0,3).condition(Ol).attr(Gt,Y.TRAPPED,!1,!0,1),new ce(t.HOWL,i.NORMAL,-1,40,-1,0,3).attr(De,[g.ATK],1).soundBased().target(13),new B(t.DRAGON_CLAW,i.DRAGON,0,80,100,15,-1,0,3),new B(t.FRENZY_PLANT,i.GRASS,1,150,90,5,-1,0,3).attr(wR),new ze(t.BULK_UP,i.FIGHTING,-1,20,-1,0,3).attr(De,[g.ATK,g.DEF],1,!0),new Ns(t.BOUNCE,i.FLYING,0,85,85,5,30,0,3).chargeText(D.t("moveTriggers:sprangUp",{pokemonName:"{USER}"})).chargeAttr(fn,Y.FLYING).attr(nt,Re.PARALYSIS).condition(ii).ignoresVirtual(),new B(t.MUD_SHOT,i.GROUND,1,55,95,15,100,0,3).attr(De,[g.SPD],-1),new B(t.POISON_TAIL,i.POISON,0,50,100,25,10,0,3).attr(qA).attr(nt,Re.POISON),new B(t.COVET,i.NORMAL,0,60,100,25,-1,0,3).attr(Mu,.3),new B(t.VOLT_TACKLE,i.ELECTRIC,0,120,100,15,10,0,3).attr(bs,!1,.33).attr(nt,Re.PARALYSIS).recklessMove(),new B(t.MAGICAL_LEAF,i.GRASS,1,60,-1,20,-1,0,3),new ce(t.WATER_SPORT,i.WATER,-1,15,-1,0,3).ignoresProtect().attr(eE,ge.WATER_SPORT,5).target(17),new ze(t.CALM_MIND,i.PSYCHIC,-1,20,-1,0,3).attr(De,[g.SPATK,g.SPDEF],1,!0),new B(t.LEAF_BLADE,i.GRASS,0,90,100,15,-1,0,3).attr(qA).slicingMove(),new ze(t.DRAGON_DANCE,i.DRAGON,-1,20,-1,0,3).attr(De,[g.ATK,g.SPD],1,!0).danceMove(),new B(t.ROCK_BLAST,i.ROCK,0,25,90,10,-1,0,3).attr(TA).makesContact(!1).ballBombMove(),new B(t.SHOCK_WAVE,i.ELECTRIC,1,60,-1,20,-1,0,3),new B(t.WATER_PULSE,i.WATER,1,60,100,20,20,0,3).attr(kE).pulseMove(),new B(t.DOOM_DESIRE,i.STEEL,1,140,100,5,-1,0,3).partial().ignoresProtect().attr(Xn,ge.DOOM_DESIRE,Zn.DOOM_DESIRE_CHARGING,D.t("moveTriggers:choseDoomDesireAsDestiny",{pokemonName:"{USER}"})),new B(t.PSYCHO_BOOST,i.PSYCHIC,1,140,90,5,-1,0,3).attr(De,[g.SPATK],-2,!0),new ze(t.ROOST,i.FLYING,-1,5,-1,0,4).attr(os,.5).attr(Gt,Y.ROOSTED,!0,!1).triageMove(),new ce(t.GRAVITY,i.PSYCHIC,-1,5,-1,0,4).ignoresProtect().attr(eE,ge.GRAVITY,5).target(17),new ce(t.MIRACLE_EYE,i.PSYCHIC,-1,40,-1,0,4).attr(ON,Y.IGNORE_DARK).ignoresSubstitute(),new B(t.WAKE_UP_SLAP,i.FIGHTING,0,70,100,10,-1,0,4).attr(GA,(E,A,s)=>Fh(E,A)?2:1).attr(jA,!1,Re.SLEEP),new B(t.HAMMER_ARM,i.FIGHTING,0,100,90,10,-1,0,4).attr(De,[g.SPD],-1,!0).punchingMove(),new B(t.GYRO_BALL,i.STEEL,0,-1,100,5,-1,0,4).attr(WH).ballBombMove(),new ze(t.HEALING_WISH,i.PSYCHIC,-1,10,-1,0,4).attr(Su,!1,"moveTriggers:sacrificialFullRestore").triageMove(),new B(t.BRINE,i.WATER,1,65,100,10,-1,0,4).attr(GA,(E,A,s)=>A.getHpRatio()<.5?2:1),new B(t.NATURAL_GIFT,i.NORMAL,0,-1,100,15,-1,0,4).makesContact(!1).unimplemented(),new B(t.FEINT,i.NORMAL,0,30,100,10,-1,2,4).attr(Bn,[Y.PROTECTED]).attr(ld,[ge.QUICK_GUARD,ge.WIDE_GUARD,ge.MAT_BLOCK,ge.CRAFTY_SHIELD],!1).makesContact(!1).ignoresProtect(),new B(t.PLUCK,i.FLYING,0,60,100,20,-1,0,4).attr(cu),new ce(t.TAILWIND,i.FLYING,-1,15,-1,0,4).windMove().attr(eE,ge.TAILWIND,4,!0).target(15),new ce(t.ACUPRESSURE,i.NORMAL,-1,30,-1,0,4).attr(PH).target(12),new B(t.METAL_BURST,i.STEEL,0,-1,100,10,-1,0,4).attr(BI,E=>E.category===0||E.category===1,1.5).redirectCounter().makesContact(!1).target(9),new B(t.U_TURN,i.BUG,0,70,100,20,-1,0,4).attr(ks,!0),new B(t.CLOSE_COMBAT,i.FIGHTING,0,120,100,5,-1,0,4).attr(De,[g.DEF,g.SPDEF],-1,!0),new B(t.PAYBACK,i.DARK,0,50,100,10,-1,0,4).attr(GA,(E,A,s)=>{var R;return A.getLastXMoves(1).find(n=>n.turn===A.scene.currentBattle.turn)||((R=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===NA.BALL?2:1}),new B(t.ASSURANCE,i.DARK,0,60,100,10,-1,0,4).attr(GA,(E,A,s)=>A.turnData.damageTaken>0?2:1),new ce(t.EMBARGO,i.DARK,100,15,-1,0,4).unimplemented(),new B(t.FLING,i.DARK,0,-1,100,10,-1,0,4).makesContact(!1).unimplemented(),new ce(t.PSYCHO_SHIFT,i.PSYCHIC,100,10,-1,0,4).attr(cH).condition((E,A,s)=>{var n;let R=E.hasAbility(O.COMATOSE)?Re.SLEEP:void 0;return(n=E.status)!=null&&n.effect&&mV(E.status.effect)&&(R=E.status.effect),!!R&&A.canSetStatus(R,!1,!1,E)}),new B(t.TRUMP_CARD,i.NORMAL,1,-1,-1,5,-1,0,4).makesContact().attr(gH),new ce(t.HEAL_BLOCK,i.PSYCHIC,100,15,-1,0,4).attr(Gt,Y.HEAL_BLOCK,!1,!0,5).target(6),new B(t.WRING_OUT,i.NORMAL,1,-1,100,5,-1,0,4).attr(eN,120).makesContact(),new ze(t.POWER_TRICK,i.PSYCHIC,-1,10,-1,0,4).attr(Gt,Y.POWER_TRICK,!0),new ce(t.GASTRO_ACID,i.POISON,100,10,-1,0,4).attr(OD),new ce(t.LUCKY_CHANT,i.NORMAL,-1,30,-1,0,4).attr(eE,ge.NO_CRIT,5,!0,!0).target(15),new ce(t.ME_FIRST,i.NORMAL,-1,20,-1,0,4).ignoresSubstitute().ignoresVirtual().target(5).unimplemented(),new ze(t.COPYCAT,i.NORMAL,-1,20,-1,0,4).attr(Xr).ignoresVirtual(),new ce(t.POWER_SWAP,i.PSYCHIC,-1,10,100,0,4).attr(qL,[g.ATK,g.SPATK]).ignoresSubstitute(),new ce(t.GUARD_SWAP,i.PSYCHIC,-1,10,100,0,4).attr(qL,[g.DEF,g.SPDEF]).ignoresSubstitute(),new B(t.PUNISHMENT,i.DARK,0,-1,100,5,-1,0,4).makesContact(!0).attr(wH),new B(t.LAST_RESORT,i.NORMAL,0,140,100,5,-1,0,4).attr(Yd),new ce(t.WORRY_SEED,i.GRASS,100,10,-1,0,4).attr(sD,O.INSOMNIA),new B(t.SUCKER_PUNCH,i.DARK,0,70,100,5,-1,1,4).condition((E,A,s)=>{var R,n,I;return((R=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===NA.FIGHT&&!A.turnData.acted&&ye[(I=(n=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:n.move)==null?void 0:I.move].category!==2}),new ce(t.TOXIC_SPIKES,i.POISON,-1,20,-1,0,4).attr(Za,ge.TOXIC_SPIKES).target(16),new ce(t.HEART_SWAP,i.PSYCHIC,-1,10,-1,0,4).attr(qL,MO).ignoresSubstitute(),new ze(t.AQUA_RING,i.WATER,-1,20,-1,0,4).attr(Gt,Y.AQUA_RING,!0,!0),new ze(t.MAGNET_RISE,i.ELECTRIC,-1,10,-1,0,4).attr(Gt,Y.FLOATING,!0,!0,5).condition((E,A,s)=>!E.scene.arena.getTag(ge.GRAVITY)&&[Y.FLOATING,Y.IGNORE_FLYING,Y.INGRAIN].every(R=>!E.getTag(R))),new B(t.FLARE_BLITZ,i.FIRE,0,120,100,15,10,0,4).attr(bs,!1,.33).attr(jA,!0,Re.FREEZE).attr(nt,Re.BURN).recklessMove(),new B(t.FORCE_PALM,i.FIGHTING,0,60,100,10,30,0,4).attr(nt,Re.PARALYSIS),new B(t.AURA_SPHERE,i.FIGHTING,1,80,-1,20,-1,0,4).pulseMove().ballBombMove(),new ze(t.ROCK_POLISH,i.ROCK,-1,20,-1,0,4).attr(De,[g.SPD],2,!0),new B(t.POISON_JAB,i.POISON,0,80,100,20,30,0,4).attr(nt,Re.POISON),new B(t.DARK_PULSE,i.DARK,1,80,100,15,20,0,4).attr(LA).pulseMove(),new B(t.NIGHT_SLASH,i.DARK,0,70,100,15,-1,0,4).attr(qA).slicingMove(),new B(t.AQUA_TAIL,i.WATER,0,90,90,10,-1,0,4),new B(t.SEED_BOMB,i.GRASS,0,80,100,15,-1,0,4).makesContact(!1).ballBombMove(),new B(t.AIR_SLASH,i.FLYING,1,75,95,15,30,0,4).attr(LA).slicingMove(),new B(t.X_SCISSOR,i.BUG,0,80,100,15,-1,0,4).slicingMove(),new B(t.BUG_BUZZ,i.BUG,1,90,100,10,10,0,4).attr(De,[g.SPDEF],-1).soundBased(),new B(t.DRAGON_PULSE,i.DRAGON,1,85,100,10,-1,0,4).pulseMove(),new B(t.DRAGON_RUSH,i.DRAGON,0,100,75,10,20,0,4).attr(en).attr(AR,Y.MINIMIZED).attr(LA),new B(t.POWER_GEM,i.ROCK,1,80,100,20,-1,0,4),new B(t.DRAIN_PUNCH,i.FIGHTING,0,75,100,10,-1,0,4).attr(Ks).punchingMove().triageMove(),new B(t.VACUUM_WAVE,i.FIGHTING,1,40,100,30,-1,1,4),new B(t.FOCUS_BLAST,i.FIGHTING,1,120,70,5,10,0,4).attr(De,[g.SPDEF],-1).ballBombMove(),new B(t.ENERGY_BALL,i.GRASS,1,90,100,10,10,0,4).attr(De,[g.SPDEF],-1).ballBombMove(),new B(t.BRAVE_BIRD,i.FLYING,0,120,100,15,-1,0,4).attr(bs,!1,.33).recklessMove(),new B(t.EARTH_POWER,i.GROUND,1,90,100,10,10,0,4).attr(De,[g.SPDEF],-1),new ce(t.SWITCHEROO,i.DARK,100,10,-1,0,4).unimplemented(),new B(t.GIGA_IMPACT,i.NORMAL,0,150,90,5,-1,0,4).attr(wR),new ze(t.NASTY_PLOT,i.DARK,-1,20,-1,0,4).attr(De,[g.SPATK],2,!0),new B(t.BULLET_PUNCH,i.STEEL,0,40,100,30,-1,1,4).punchingMove(),new B(t.AVALANCHE,i.ICE,0,60,100,10,-1,-4,4).attr(mu),new B(t.ICE_SHARD,i.ICE,0,40,100,30,-1,1,4).makesContact(!1),new B(t.SHADOW_CLAW,i.GHOST,0,70,100,15,-1,0,4).attr(qA),new B(t.THUNDER_FANG,i.ELECTRIC,0,65,95,15,10,0,4).attr(LA).attr(nt,Re.PARALYSIS).bitingMove(),new B(t.ICE_FANG,i.ICE,0,65,95,15,10,0,4).attr(LA).attr(nt,Re.FREEZE).bitingMove(),new B(t.FIRE_FANG,i.FIRE,0,65,95,15,10,0,4).attr(LA).attr(nt,Re.BURN).bitingMove(),new B(t.SHADOW_SNEAK,i.GHOST,0,40,100,30,-1,1,4),new B(t.MUD_BOMB,i.GROUND,1,65,85,10,30,0,4).attr(De,[g.ACC],-1).ballBombMove(),new B(t.PSYCHO_CUT,i.PSYCHIC,0,70,100,20,-1,0,4).attr(qA).slicingMove().makesContact(!1),new B(t.ZEN_HEADBUTT,i.PSYCHIC,0,80,90,15,20,0,4).attr(LA),new B(t.MIRROR_SHOT,i.STEEL,1,65,85,10,30,0,4).attr(De,[g.ACC],-1),new B(t.FLASH_CANNON,i.STEEL,1,80,100,10,10,0,4).attr(De,[g.SPDEF],-1),new B(t.ROCK_CLIMB,i.NORMAL,0,90,85,20,20,0,4).attr(kE),new ce(t.DEFOG,i.FLYING,-1,15,-1,0,4).attr(De,[g.EVA],-1).attr(_H,se.FOG).attr(xa).attr(Qa,!1).attr(Xa,!0),new ce(t.TRICK_ROOM,i.PSYCHIC,-1,5,-1,-7,4).attr(eE,ge.TRICK_ROOM,5).ignoresProtect().target(17),new B(t.DRACO_METEOR,i.DRAGON,1,130,90,5,-1,0,4).attr(De,[g.SPATK],-2,!0),new B(t.DISCHARGE,i.ELECTRIC,1,80,100,15,30,0,4).attr(nt,Re.PARALYSIS).target(4),new B(t.LAVA_PLUME,i.FIRE,1,80,100,15,30,0,4).attr(nt,Re.BURN).target(4),new B(t.LEAF_STORM,i.GRASS,1,130,90,5,-1,0,4).attr(De,[g.SPATK],-2,!0),new B(t.POWER_WHIP,i.GRASS,0,120,85,10,-1,0,4),new B(t.ROCK_WRECKER,i.ROCK,0,150,90,5,-1,0,4).attr(wR).makesContact(!1).ballBombMove(),new B(t.CROSS_POISON,i.POISON,0,70,100,20,10,0,4).attr(qA).attr(nt,Re.POISON).slicingMove(),new B(t.GUNK_SHOT,i.POISON,0,120,80,5,30,0,4).attr(nt,Re.POISON).makesContact(!1),new B(t.IRON_HEAD,i.STEEL,0,80,100,15,30,0,4).attr(LA),new B(t.MAGNET_BOMB,i.STEEL,0,60,-1,20,-1,0,4).makesContact(!1).ballBombMove(),new B(t.STONE_EDGE,i.ROCK,0,100,80,5,-1,0,4).attr(qA).makesContact(!1),new ce(t.CAPTIVATE,i.NORMAL,100,20,-1,0,4).attr(De,[g.SPATK],-2).condition((E,A,s)=>A.isOppositeGender(E)).target(6),new ce(t.STEALTH_ROCK,i.ROCK,-1,20,-1,0,4).attr(Za,ge.STEALTH_ROCK).target(16),new B(t.GRASS_KNOT,i.GRASS,1,-1,100,20,-1,0,4).attr(fu).makesContact(),new B(t.CHATTER,i.FLYING,1,65,100,20,100,0,4).attr(kE).soundBased(),new B(t.JUDGMENT,i.NORMAL,1,100,100,10,-1,0,4).attr(ku),new B(t.BUG_BITE,i.BUG,0,60,100,20,-1,0,4).attr(cu),new B(t.CHARGE_BEAM,i.ELECTRIC,1,50,90,10,70,0,4).attr(De,[g.SPATK],1,!0),new B(t.WOOD_HAMMER,i.GRASS,0,120,100,15,-1,0,4).attr(bs,!1,.33).recklessMove(),new B(t.AQUA_JET,i.WATER,0,40,100,20,-1,1,4),new B(t.ATTACK_ORDER,i.BUG,0,90,100,15,-1,0,4).attr(qA).makesContact(!1),new ze(t.DEFEND_ORDER,i.BUG,-1,10,-1,0,4).attr(De,[g.DEF,g.SPDEF],1,!0),new ze(t.HEAL_ORDER,i.BUG,-1,5,-1,0,4).attr(os,.5).triageMove(),new B(t.HEAD_SMASH,i.ROCK,0,150,80,5,-1,0,4).attr(bs,!1,.5).recklessMove(),new B(t.DOUBLE_HIT,i.NORMAL,0,35,90,10,-1,0,4).attr(TA,0),new B(t.ROAR_OF_TIME,i.DRAGON,1,150,90,5,-1,0,4).attr(wR),new B(t.SPACIAL_REND,i.DRAGON,1,100,95,5,-1,0,4).attr(qA),new ze(t.LUNAR_DANCE,i.PSYCHIC,-1,10,-1,0,4).attr(Su,!0,"moveTriggers:lunarDanceRestore").danceMove().triageMove(),new B(t.CRUSH_GRIP,i.NORMAL,0,-1,100,5,-1,0,4).attr(eN,120),new B(t.MAGMA_STORM,i.FIRE,1,100,75,5,-1,0,4).attr(AO,Y.MAGMA_STORM),new ce(t.DARK_VOID,i.DARK,80,10,-1,0,4).attr(nt,Re.SLEEP).target(6),new B(t.SEED_FLARE,i.GRASS,1,120,85,5,40,0,4).attr(De,[g.SPDEF],-2),new B(t.OMINOUS_WIND,i.GHOST,1,60,100,5,10,0,4).attr(De,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],1,!0).windMove(),new Ns(t.SHADOW_FORCE,i.GHOST,0,120,100,5,-1,0,4).chargeText(D.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(fn,Y.HIDDEN).ignoresProtect().ignoresVirtual(),new ze(t.HONE_CLAWS,i.DARK,-1,15,-1,0,5).attr(De,[g.ATK,g.ACC],1,!0),new ce(t.WIDE_GUARD,i.ROCK,-1,10,-1,3,5).target(15).attr(eE,ge.WIDE_GUARD,1,!0,!0).condition(lR),new ce(t.GUARD_SPLIT,i.PSYCHIC,-1,10,-1,0,5).attr(nD,[g.DEF,g.SPDEF],"moveTriggers:sharedGuard"),new ce(t.POWER_SPLIT,i.PSYCHIC,-1,10,-1,0,5).attr(nD,[g.ATK,g.SPATK],"moveTriggers:sharedPower"),new ce(t.WONDER_ROOM,i.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(17).unimplemented(),new B(t.PSYSHOCK,i.PSYCHIC,1,80,100,10,-1,0,5).attr(AN),new B(t.VENOSHOCK,i.POISON,1,65,100,10,-1,0,5).attr(GA,(E,A,s)=>A.status&&(A.status.effect===Re.POISON||A.status.effect===Re.TOXIC)?2:1),new ze(t.AUTOTOMIZE,i.STEEL,-1,15,-1,0,5).attr(De,[g.SPD],2,!0).attr(Gt,Y.AUTOTOMIZED,!0),new ze(t.RAGE_POWDER,i.BUG,-1,20,-1,2,5).powderMove().attr(Gt,Y.CENTER_OF_ATTENTION,!0),new ce(t.TELEKINESIS,i.PSYCHIC,-1,15,-1,0,5).condition(ii).condition((E,A,s)=>![e.DIGLETT,e.DUGTRIO,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.SANDYGAST,e.PALOSSAND,e.WIGLETT,e.WUGTRIO].includes(A.species.speciesId)).condition((E,A,s)=>!(A.species.speciesId===e.GENGAR&&A.getFormKey()==="mega")).condition((E,A,s)=>Ve(A.getTag(Y.INGRAIN))&&Ve(A.getTag(Y.IGNORE_FLYING))).attr(Gt,Y.TELEKINESIS,!1,!0,3).attr(Gt,Y.FLOATING,!1,!0,3),new ce(t.MAGIC_ROOM,i.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(17).unimplemented(),new B(t.SMACK_DOWN,i.ROCK,0,50,100,15,100,0,5).attr(Gt,Y.IGNORE_FLYING,!1,!1,1,1,!0).attr(Gt,Y.INTERRUPTED).attr(Bn,[Y.FLYING,Y.FLOATING,Y.TELEKINESIS]).attr(_R,Y.FLYING).makesContact(!1),new B(t.STORM_THROW,i.FIGHTING,0,60,100,10,-1,0,5).attr(nn),new B(t.FLAME_BURST,i.FIRE,1,70,100,15,-1,0,5).attr(uH),new B(t.SLUDGE_WAVE,i.POISON,1,95,100,10,10,0,5).attr(nt,Re.POISON).target(4),new ze(t.QUIVER_DANCE,i.BUG,-1,20,-1,0,5).attr(De,[g.SPATK,g.SPDEF,g.SPD],1,!0).danceMove(),new B(t.HEAVY_SLAM,i.STEEL,0,-1,100,10,-1,0,5).attr(en).attr(gu).attr(AR,Y.MINIMIZED),new B(t.SYNCHRONOISE,i.PSYCHIC,1,120,100,10,-1,0,5).target(4).condition(TJ).attr(Vd),new B(t.ELECTRO_BALL,i.ELECTRIC,1,-1,100,10,-1,0,5).attr(pH).ballBombMove(),new ce(t.SOAK,i.WATER,100,20,-1,0,5).attr(ju,i.WATER),new B(t.FLAME_CHARGE,i.FIRE,0,50,100,20,100,0,5).attr(De,[g.SPD],1,!0),new ze(t.COIL,i.POISON,-1,20,-1,0,5).attr(De,[g.ATK,g.DEF,g.ACC],1,!0),new B(t.LOW_SWEEP,i.FIGHTING,0,65,100,20,100,0,5).attr(De,[g.SPD],-1),new B(t.ACID_SPRAY,i.POISON,1,40,100,20,100,0,5).attr(De,[g.SPDEF],-2).ballBombMove(),new B(t.FOUL_PLAY,i.DARK,0,95,100,15,-1,0,5).attr(XH),new ce(t.SIMPLE_BEAM,i.NORMAL,100,15,-1,0,5).attr(sD,O.SIMPLE),new ce(t.ENTRAINMENT,i.NORMAL,100,15,-1,0,5).attr(Hd),new ce(t.AFTER_YOU,i.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().target(3).condition(Ba).condition((E,A,s)=>!A.turnData.acted).attr(wd),new B(t.ROUND,i.NORMAL,1,60,100,15,-1,0,5).attr(ZH).attr(kH).soundBased(),new B(t.ECHOED_VOICE,i.NORMAL,1,40,100,15,-1,0,5).attr(FH,5,!1).soundBased(),new B(t.CHIP_AWAY,i.NORMAL,0,70,100,20,-1,0,5).attr(wI),new B(t.CLEAR_SMOG,i.POISON,1,50,-1,15,-1,0,5).attr(zL,!1),new B(t.STORED_POWER,i.PSYCHIC,1,20,100,10,-1,0,5).attr(pu),new ce(t.QUICK_GUARD,i.FIGHTING,-1,15,-1,3,5).target(15).attr(eE,ge.QUICK_GUARD,1,!0,!0).condition(lR),new ze(t.ALLY_SWITCH,i.PSYCHIC,-1,15,-1,2,5).ignoresProtect().unimplemented(),new B(t.SCALD,i.WATER,1,80,100,15,30,0,5).attr(jA,!1,Re.FREEZE).attr(jA,!0,Re.FREEZE).attr(nt,Re.BURN),new ze(t.SHELL_SMASH,i.NORMAL,-1,15,-1,0,5).attr(De,[g.ATK,g.SPATK,g.SPD],2,!0).attr(De,[g.DEF,g.SPDEF],-1,!0),new ce(t.HEAL_PULSE,i.PSYCHIC,-1,10,-1,0,5).attr(os,.5,!1,!1).pulseMove().triageMove(),new B(t.HEX,i.GHOST,1,65,100,10,-1,0,5).attr(GA,(E,A,s)=>A.status||A.hasAbility(O.COMATOSE)?2:1),new Ns(t.SKY_DROP,i.FLYING,0,60,100,10,-1,0,5).chargeText(D.t("moveTriggers:tookTargetIntoSky",{pokemonName:"{USER}",targetName:"{TARGET}"})).chargeAttr(fn,Y.FLYING).condition(ii).condition((E,A,s)=>!A.getTag(Y.SUBSTITUTE)).ignoresVirtual().partial(),new ze(t.SHIFT_GEAR,i.STEEL,-1,10,-1,0,5).attr(De,[g.ATK],1,!0).attr(De,[g.SPD],2,!0),new B(t.CIRCLE_THROW,i.FIGHTING,0,60,90,10,-1,-6,5).attr(ks,!1,aA.FORCE_SWITCH).hidesTarget(),new B(t.INCINERATE,i.FIRE,1,60,100,15,-1,0,5).target(6).attr(hu,!0),new ce(t.QUASH,i.DARK,100,15,-1,0,5).condition(Ba).unimplemented(),new B(t.ACROBATICS,i.FLYING,0,55,100,15,-1,0,5).attr(GA,(E,A,s)=>Math.max(1,2-.2*E.getHeldItems().filter(R=>R.isTransferable).reduce((R,n)=>R+n.stackCount,0))),new ce(t.REFLECT_TYPE,i.NORMAL,-1,15,-1,0,5).ignoresSubstitute().attr(Dd),new B(t.RETALIATE,i.NORMAL,0,70,100,5,-1,0,5).attr(GA,(E,A,s)=>{const R=E.scene.currentBattle.turn,n=E.scene.currentBattle.playerFaintsHistory[E.scene.currentBattle.playerFaintsHistory.length-1],I=E.scene.currentBattle.enemyFaintsHistory[E.scene.currentBattle.enemyFaintsHistory.length-1];return n!==void 0&&R-n.turn===1&&E.isPlayer()||I!==void 0&&R-I.turn===1&&!E.isPlayer()?2:1}),new B(t.FINAL_GAMBIT,i.FIGHTING,1,-1,100,5,-1,0,5).attr(lH).attr(na),new ce(t.BESTOW,i.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().unimplemented(),new B(t.INFERNO,i.FIRE,1,100,50,5,100,0,5).attr(nt,Re.BURN),new B(t.WATER_PLEDGE,i.WATER,1,80,100,10,-1,0,5).attr(JL).attr(sN).attr(tN).attr(Nr).attr(Ci,ge.WATER_FIRE_PLEDGE,t.FIRE_PLEDGE,!0).attr(Ci,ge.GRASS_WATER_PLEDGE,t.GRASS_PLEDGE).attr(gI,!0),new B(t.FIRE_PLEDGE,i.FIRE,1,80,100,10,-1,0,5).attr(JL).attr(sN).attr(tN).attr(Nr).attr(Ci,ge.FIRE_GRASS_PLEDGE,t.GRASS_PLEDGE).attr(Ci,ge.WATER_FIRE_PLEDGE,t.WATER_PLEDGE,!0).attr(gI,!0),new B(t.GRASS_PLEDGE,i.GRASS,1,80,100,10,-1,0,5).attr(JL).attr(sN).attr(tN).attr(Nr).attr(Ci,ge.GRASS_WATER_PLEDGE,t.WATER_PLEDGE).attr(Ci,ge.FIRE_GRASS_PLEDGE,t.FIRE_PLEDGE).attr(gI,!0),new B(t.VOLT_SWITCH,i.ELECTRIC,1,70,100,20,-1,0,5).attr(ks,!0),new B(t.STRUGGLE_BUG,i.BUG,1,50,100,20,100,0,5).attr(De,[g.SPATK],-1).target(6),new B(t.BULLDOZE,i.GROUND,0,60,100,20,100,0,5).attr(De,[g.SPD],-1).attr(GA,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.GRASSY&&A.isGrounded()?.5:1).makesContact(!1).target(4),new B(t.FROST_BREATH,i.ICE,1,60,90,10,100,0,5).attr(nn),new B(t.DRAGON_TAIL,i.DRAGON,0,60,90,10,-1,-6,5).attr(ks,!1,aA.FORCE_SWITCH).hidesTarget(),new ze(t.WORK_UP,i.NORMAL,-1,30,-1,0,5).attr(De,[g.ATK,g.SPATK],1,!0),new B(t.ELECTROWEB,i.ELECTRIC,1,55,95,15,100,0,5).attr(De,[g.SPD],-1).target(6),new B(t.WILD_CHARGE,i.ELECTRIC,0,90,100,15,-1,0,5).attr(bs).recklessMove(),new B(t.DRILL_RUN,i.GROUND,0,80,95,10,-1,0,5).attr(qA),new B(t.DUAL_CHOP,i.DRAGON,0,40,90,15,-1,0,5).attr(TA,0),new B(t.HEART_STAMP,i.PSYCHIC,0,60,100,25,30,0,5).attr(LA),new B(t.HORN_LEECH,i.GRASS,0,75,100,10,-1,0,5).attr(Ks).triageMove(),new B(t.SACRED_SWORD,i.FIGHTING,0,90,100,15,-1,0,5).attr(wI).slicingMove(),new B(t.RAZOR_SHELL,i.WATER,0,75,95,10,50,0,5).attr(De,[g.DEF],-1).slicingMove(),new B(t.HEAT_CRASH,i.FIRE,0,-1,100,10,-1,0,5).attr(en).attr(gu).attr(AR,Y.MINIMIZED),new B(t.LEAF_TORNADO,i.GRASS,1,65,90,10,50,0,5).attr(De,[g.ACC],-1),new B(t.STEAMROLLER,i.BUG,0,65,100,20,30,0,5).attr(en).attr(AR,Y.MINIMIZED).attr(LA),new ze(t.COTTON_GUARD,i.GRASS,-1,10,-1,0,5).attr(De,[g.DEF],3,!0),new B(t.NIGHT_DAZE,i.DARK,1,85,95,10,40,0,5).attr(De,[g.ACC],-1),new B(t.PSYSTRIKE,i.PSYCHIC,1,100,100,10,-1,0,5).attr(AN),new B(t.TAIL_SLAP,i.NORMAL,0,25,85,10,-1,0,5).attr(TA),new B(t.HURRICANE,i.FLYING,1,110,70,10,30,0,5).attr(wu).attr(kE).attr(_R,Y.FLYING).windMove(),new B(t.HEAD_CHARGE,i.NORMAL,0,120,100,15,-1,0,5).attr(bs).recklessMove(),new B(t.GEAR_GRIND,i.STEEL,0,50,85,15,-1,0,5).attr(TA,0),new B(t.SEARING_SHOT,i.FIRE,1,100,100,5,30,0,5).attr(nt,Re.BURN).ballBombMove().target(4),new B(t.TECHNO_BLAST,i.NORMAL,1,120,100,5,-1,0,5).attr(jH),new B(t.RELIC_SONG,i.NORMAL,1,75,100,10,10,0,5).attr(nt,Re.SLEEP).soundBased().target(6),new B(t.SECRET_SWORD,i.FIGHTING,1,85,100,10,-1,0,5).attr(AN).slicingMove(),new B(t.GLACIATE,i.ICE,1,65,95,10,100,0,5).attr(De,[g.SPD],-1).target(6),new B(t.BOLT_STRIKE,i.ELECTRIC,0,130,85,5,20,0,5).attr(nt,Re.PARALYSIS),new B(t.BLUE_FLARE,i.FIRE,1,130,85,5,20,0,5).attr(nt,Re.BURN),new B(t.FIERY_DANCE,i.FIRE,1,80,100,10,50,0,5).attr(De,[g.SPATK],1,!0).danceMove(),new Ns(t.FREEZE_SHOCK,i.ICE,0,140,90,5,30,0,5).chargeText(D.t("moveTriggers:becameCloakedInFreezingLight",{pokemonName:"{USER}"})).attr(nt,Re.PARALYSIS).makesContact(!1),new Ns(t.ICE_BURN,i.ICE,1,140,90,5,30,0,5).chargeText(D.t("moveTriggers:becameCloakedInFreezingAir",{pokemonName:"{USER}"})).attr(nt,Re.BURN).ignoresVirtual(),new B(t.SNARL,i.DARK,1,55,95,15,100,0,5).attr(De,[g.SPATK],-1).soundBased().target(6),new B(t.ICICLE_CRASH,i.ICE,0,85,90,10,30,0,5).attr(LA).makesContact(!1),new B(t.V_CREATE,i.FIRE,0,180,95,5,-1,0,5).attr(De,[g.DEF,g.SPDEF,g.SPD],-1,!0),new B(t.FUSION_FLARE,i.FIRE,1,100,100,5,-1,0,5).attr(jA,!0,Re.FREEZE).attr(Yu,t.FUSION_BOLT),new B(t.FUSION_BOLT,i.ELECTRIC,0,100,100,5,-1,0,5).attr(Yu,t.FUSION_FLARE).makesContact(!1),new B(t.FLYING_PRESS,i.FIGHTING,0,100,95,10,-1,0,6).attr(en).attr(Id).attr(AR,Y.MINIMIZED).condition(ii),new ce(t.MAT_BLOCK,i.FIGHTING,-1,10,-1,0,6).target(15).attr(eE,ge.MAT_BLOCK,1,!0,!0).condition(new RN).condition(lR),new B(t.BELCH,i.POISON,1,120,90,10,-1,0,6).condition((E,A,s)=>E.battleData.berriesEaten.length>0),new ce(t.ROTOTILLER,i.GROUND,-1,10,-1,0,6).target(14).condition((E,A,s)=>[...E.scene.getEnemyParty(),...E.scene.getPlayerParty()].some(R=>R.isOfType(i.GRASS)&&R.isGrounded())).attr(De,[g.ATK,g.SPATK],1,!1,{condition:L((E,A,s)=>A.isOfType(i.GRASS)&&A.isGrounded(),"condition")}),new ce(t.STICKY_WEB,i.BUG,-1,20,-1,0,6).attr(Za,ge.STICKY_WEB).target(16),new B(t.FELL_STINGER,i.BUG,0,50,100,25,-1,0,6).attr(Hu,[g.ATK],3,!0),new Ns(t.PHANTOM_FORCE,i.GHOST,0,90,100,10,-1,0,6).chargeText(D.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(fn,Y.HIDDEN).ignoresProtect().ignoresVirtual(),new ce(t.TRICK_OR_TREAT,i.GHOST,100,20,-1,0,6).attr(eD,i.GHOST),new ce(t.NOBLE_ROAR,i.NORMAL,100,30,-1,0,6).attr(De,[g.ATK,g.SPATK],-1).soundBased(),new ce(t.ION_DELUGE,i.ELECTRIC,-1,25,-1,1,6).attr(eE,ge.ION_DELUGE).target(17),new B(t.PARABOLIC_CHARGE,i.ELECTRIC,1,65,100,20,-1,0,6).attr(Ks).target(4).triageMove(),new ce(t.FORESTS_CURSE,i.GRASS,100,20,-1,0,6).attr(eD,i.GRASS),new B(t.PETAL_BLIZZARD,i.GRASS,0,90,100,15,-1,0,6).windMove().makesContact(!1).target(4),new B(t.FREEZE_DRY,i.ICE,1,70,100,20,10,0,6).attr(nt,Re.FREEZE).attr(ad),new B(t.DISARMING_VOICE,i.FAIRY,1,40,-1,15,-1,0,6).soundBased().target(6),new ce(t.PARTING_SHOT,i.DARK,100,20,-1,0,6).attr(De,[g.ATK,g.SPATK],-1,!1,{trigger:0}).attr(ks,!0).soundBased(),new ce(t.TOPSY_TURVY,i.DARK,-1,20,-1,0,6).attr(fH),new B(t.DRAINING_KISS,i.FAIRY,1,50,100,10,-1,0,6).attr(Ks,.75).makesContact().triageMove(),new ce(t.CRAFTY_SHIELD,i.FAIRY,-1,10,-1,3,6).target(15).attr(eE,ge.CRAFTY_SHIELD,1,!0,!0).condition(lR),new ce(t.FLOWER_SHIELD,i.FAIRY,-1,10,-1,0,6).target(14).attr(De,[g.DEF],1,!1,{condition:L((E,A,s)=>A.getTypes().includes(i.GRASS)&&!A.getTag(Tn),"condition")}),new ce(t.GRASSY_TERRAIN,i.GRASS,-1,10,-1,0,6).attr(SI,Nt.GRASSY).target(17),new ce(t.MISTY_TERRAIN,i.FAIRY,-1,10,-1,0,6).attr(SI,Nt.MISTY).target(17),new ce(t.ELECTRIFY,i.ELECTRIC,-1,20,-1,0,6).attr(Gt,Y.ELECTRIFIED,!1,!0),new B(t.PLAY_ROUGH,i.FAIRY,0,90,90,10,10,0,6).attr(De,[g.ATK],-1),new B(t.FAIRY_WIND,i.FAIRY,1,40,100,30,-1,0,6).windMove(),new B(t.MOONBLAST,i.FAIRY,1,95,100,15,30,0,6).attr(De,[g.SPATK],-1),new B(t.BOOMBURST,i.NORMAL,1,140,100,10,-1,0,6).soundBased().target(4),new ce(t.FAIRY_LOCK,i.FAIRY,-1,10,-1,0,6).ignoresSubstitute().ignoresProtect().target(17).attr(eE,ge.FAIRY_LOCK,2,!0),new ze(t.KINGS_SHIELD,i.STEEL,-1,10,-1,4,6).attr(vR,Y.KINGS_SHIELD).condition(lR),new ce(t.PLAY_NICE,i.NORMAL,-1,20,-1,0,6).attr(De,[g.ATK],-1).ignoresSubstitute(),new ce(t.CONFIDE,i.NORMAL,-1,20,-1,0,6).attr(De,[g.SPATK],-1).soundBased(),new B(t.DIAMOND_STORM,i.ROCK,0,100,95,5,50,0,6).attr(De,[g.DEF],2,!0,{firstTargetOnly:!0}).makesContact(!1).target(6),new B(t.STEAM_ERUPTION,i.WATER,1,110,95,5,30,0,6).attr(jA,!0,Re.FREEZE).attr(jA,!1,Re.FREEZE).attr(nt,Re.BURN),new B(t.HYPERSPACE_HOLE,i.PSYCHIC,1,80,-1,5,-1,0,6).ignoresProtect().ignoresSubstitute(),new B(t.WATER_SHURIKEN,i.WATER,1,15,100,20,-1,1,6).attr(TA).attr(VH).attr(hH),new B(t.MYSTICAL_FIRE,i.FIRE,1,75,100,10,100,0,6).attr(De,[g.SPATK],-1),new ze(t.SPIKY_SHIELD,i.GRASS,-1,10,-1,4,6).attr(vR,Y.SPIKY_SHIELD).condition(lR),new ce(t.AROMATIC_MIST,i.FAIRY,-1,20,-1,0,6).attr(De,[g.SPDEF],1).ignoresSubstitute().condition(Ba).target(10),new ce(t.EERIE_IMPULSE,i.ELECTRIC,100,15,-1,0,6).attr(De,[g.SPATK],-2),new ce(t.VENOM_DRENCH,i.POISON,100,20,-1,0,6).attr(De,[g.ATK,g.SPATK,g.SPD],-1,!1,{condition:L((E,A,s)=>{var R,n;return((R=A.status)==null?void 0:R.effect)===Re.POISON||((n=A.status)==null?void 0:n.effect)===Re.TOXIC},"condition")}).target(6),new ce(t.POWDER,i.BUG,100,20,-1,1,6).attr(Gt,Y.POWDER,!1,!0).ignoresSubstitute().powderMove(),new SH(t.GEOMANCY,i.FAIRY,-1,10,-1,0,6).chargeText(D.t("moveTriggers:isChargingPower",{pokemonName:"{USER}"})).attr(De,[g.SPATK,g.SPDEF,g.SPD],2,!0).ignoresVirtual(),new ce(t.MAGNETIC_FLUX,i.ELECTRIC,-1,20,-1,0,6).attr(De,[g.DEF,g.SPDEF],1,!1,{condition:L((E,A,s)=>!![O.PLUS,O.MINUS].find(R=>A.hasAbility(R,!1)),"condition")}).ignoresSubstitute().target(13).condition((E,A,s)=>!![E,E.getAlly()].filter(R=>R==null?void 0:R.isActive()).find(R=>!![O.PLUS,O.MINUS].find(n=>R.hasAbility(n,!1)))),new ce(t.HAPPY_HOUR,i.NORMAL,-1,30,-1,0,6).attr(eE,ge.HAPPY_HOUR,null,!0).target(15),new ce(t.ELECTRIC_TERRAIN,i.ELECTRIC,-1,10,-1,0,6).attr(SI,Nt.ELECTRIC).target(17),new B(t.DAZZLING_GLEAM,i.FAIRY,1,80,100,10,-1,0,6).target(6),new ze(t.CELEBRATE,i.NORMAL,-1,40,-1,0,6),new ce(t.HOLD_HANDS,i.NORMAL,-1,40,-1,0,6).ignoresSubstitute().target(10),new ce(t.BABY_DOLL_EYES,i.FAIRY,100,30,-1,1,6).attr(De,[g.ATK],-1),new B(t.NUZZLE,i.ELECTRIC,0,20,100,20,100,0,6).attr(nt,Re.PARALYSIS),new B(t.HOLD_BACK,i.NORMAL,0,40,100,40,-1,0,6).attr(Lu),new B(t.INFESTATION,i.BUG,1,20,100,20,-1,0,6).makesContact().attr(AO,Y.INFESTATION),new B(t.POWER_UP_PUNCH,i.FIGHTING,0,40,100,20,100,0,6).attr(De,[g.ATK],1,!0).punchingMove(),new B(t.OBLIVION_WING,i.FLYING,1,80,100,10,-1,0,6).attr(Ks,.75).triageMove(),new B(t.THOUSAND_ARROWS,i.GROUND,0,90,100,10,-1,0,6).attr(Zu).attr(Gt,Y.IGNORE_FLYING,!1,!1,1,1,!0).attr(_R,Y.FLYING).attr(_R,Y.FLOATING).attr(Gt,Y.INTERRUPTED).attr(Bn,[Y.FLYING,Y.FLOATING,Y.TELEKINESIS]).makesContact(!1).target(6),new B(t.THOUSAND_WAVES,i.GROUND,0,90,100,10,-1,0,6).attr(Gt,Y.TRAPPED,!1,!1,1,1,!0).makesContact(!1).target(6),new B(t.LANDS_WRATH,i.GROUND,0,90,100,10,-1,0,6).makesContact(!1).target(6),new B(t.LIGHT_OF_RUIN,i.FAIRY,1,140,90,5,-1,0,6).attr(bs,!1,.5).recklessMove(),new B(t.ORIGIN_PULSE,i.WATER,1,110,85,10,-1,0,6).pulseMove().target(6),new B(t.PRECIPICE_BLADES,i.GROUND,0,120,85,10,-1,0,6).makesContact(!1).target(6),new B(t.DRAGON_ASCENT,i.FLYING,0,120,100,5,-1,0,6).attr(De,[g.DEF,g.SPDEF],-1,!0),new B(t.HYPERSPACE_FURY,i.DARK,0,100,-1,5,-1,0,6).attr(De,[g.DEF],-1,!0).ignoresSubstitute().makesContact(!1).ignoresProtect(),new B(t.BREAKNECK_BLITZ__PHYSICAL,i.NORMAL,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.BREAKNECK_BLITZ__SPECIAL,i.NORMAL,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.ALL_OUT_PUMMELING__PHYSICAL,i.FIGHTING,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.ALL_OUT_PUMMELING__SPECIAL,i.FIGHTING,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SUPERSONIC_SKYSTRIKE__PHYSICAL,i.FLYING,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SUPERSONIC_SKYSTRIKE__SPECIAL,i.FLYING,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.ACID_DOWNPOUR__PHYSICAL,i.POISON,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.ACID_DOWNPOUR__SPECIAL,i.POISON,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.TECTONIC_RAGE__PHYSICAL,i.GROUND,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.TECTONIC_RAGE__SPECIAL,i.GROUND,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.CONTINENTAL_CRUSH__PHYSICAL,i.ROCK,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.CONTINENTAL_CRUSH__SPECIAL,i.ROCK,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SAVAGE_SPIN_OUT__PHYSICAL,i.BUG,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SAVAGE_SPIN_OUT__SPECIAL,i.BUG,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.NEVER_ENDING_NIGHTMARE__PHYSICAL,i.GHOST,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.NEVER_ENDING_NIGHTMARE__SPECIAL,i.GHOST,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.CORKSCREW_CRASH__PHYSICAL,i.STEEL,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.CORKSCREW_CRASH__SPECIAL,i.STEEL,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.INFERNO_OVERDRIVE__PHYSICAL,i.FIRE,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.INFERNO_OVERDRIVE__SPECIAL,i.FIRE,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.HYDRO_VORTEX__PHYSICAL,i.WATER,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.HYDRO_VORTEX__SPECIAL,i.WATER,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.BLOOM_DOOM__PHYSICAL,i.GRASS,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.BLOOM_DOOM__SPECIAL,i.GRASS,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.GIGAVOLT_HAVOC__PHYSICAL,i.ELECTRIC,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.GIGAVOLT_HAVOC__SPECIAL,i.ELECTRIC,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SHATTERED_PSYCHE__PHYSICAL,i.PSYCHIC,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SHATTERED_PSYCHE__SPECIAL,i.PSYCHIC,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SUBZERO_SLAMMER__PHYSICAL,i.ICE,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SUBZERO_SLAMMER__SPECIAL,i.ICE,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.DEVASTATING_DRAKE__PHYSICAL,i.DRAGON,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.DEVASTATING_DRAKE__SPECIAL,i.DRAGON,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.BLACK_HOLE_ECLIPSE__PHYSICAL,i.DARK,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.BLACK_HOLE_ECLIPSE__SPECIAL,i.DARK,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.TWINKLE_TACKLE__PHYSICAL,i.FAIRY,0,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.TWINKLE_TACKLE__SPECIAL,i.FAIRY,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.CATASTROPIKA,i.ELECTRIC,0,210,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new ze(t.SHORE_UP,i.GROUND,-1,5,-1,0,7).attr(DH).triageMove(),new B(t.FIRST_IMPRESSION,i.BUG,0,90,100,10,-1,2,7).condition(new RN),new ze(t.BANEFUL_BUNKER,i.POISON,-1,10,-1,4,7).attr(vR,Y.BANEFUL_BUNKER).condition(lR),new B(t.SPIRIT_SHACKLE,i.GHOST,0,80,100,10,100,0,7).attr(Gt,Y.TRAPPED,!1,!1,1,1,!0).makesContact(!1),new B(t.DARKEST_LARIAT,i.DARK,0,85,100,10,-1,0,7).attr(wI),new B(t.SPARKLING_ARIA,i.WATER,1,90,100,10,100,0,7).attr(jA,!1,Re.BURN).soundBased().target(4),new B(t.ICE_HAMMER,i.ICE,0,100,90,10,-1,0,7).attr(De,[g.SPD],-1,!0).punchingMove(),new ce(t.FLORAL_HEALING,i.FAIRY,-1,10,-1,0,7).attr(MH,.5,2/3,!0,!1,(E,A,s)=>{var R;return((R=E.scene.arena.terrain)==null?void 0:R.terrainType)===Nt.GRASSY}).triageMove(),new B(t.HIGH_HORSEPOWER,i.GROUND,0,95,95,10,-1,0,7),new ce(t.STRENGTH_SAP,i.GRASS,100,10,-1,0,7).attr(Ks,null,g.ATK).attr(De,[g.ATK],-1).condition((E,A,s)=>A.getStatStage(g.ATK)>-6).triageMove(),new Ns(t.SOLAR_BLADE,i.GRASS,0,125,100,10,-1,0,7).chargeText(D.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).chargeAttr(QL,[se.SUNNY,se.HARSH_SUN]).attr(Fu).slicingMove(),new B(t.LEAFAGE,i.GRASS,0,40,100,40,-1,0,7).makesContact(!1),new ce(t.SPOTLIGHT,i.NORMAL,-1,15,-1,3,7).attr(Gt,Y.CENTER_OF_ATTENTION,!1).condition(Ba),new ce(t.TOXIC_THREAD,i.POISON,100,20,-1,0,7).attr(nt,Re.POISON).attr(De,[g.SPD],-1),new ze(t.LASER_FOCUS,i.NORMAL,-1,30,-1,0,7).attr(Gt,Y.ALWAYS_CRIT,!0,!1),new ce(t.GEAR_UP,i.STEEL,-1,20,-1,0,7).attr(De,[g.ATK,g.SPATK],1,!1,{condition:L((E,A,s)=>!![O.PLUS,O.MINUS].find(R=>A.hasAbility(R,!1)),"condition")}).ignoresSubstitute().target(13).condition((E,A,s)=>!![E,E.getAlly()].filter(R=>R==null?void 0:R.isActive()).find(R=>!![O.PLUS,O.MINUS].find(n=>R.hasAbility(n,!1)))),new B(t.THROAT_CHOP,i.DARK,0,80,100,15,100,0,7).attr(Gt,Y.THROAT_CHOPPED),new B(t.POLLEN_PUFF,i.BUG,1,90,100,15,-1,0,7).attr(bu).attr(Cu,.5,!0,!1).ballBombMove(),new B(t.ANCHOR_SHOT,i.STEEL,0,80,100,20,100,0,7).attr(Gt,Y.TRAPPED,!1,!1,1,1,!0),new ce(t.PSYCHIC_TERRAIN,i.PSYCHIC,-1,10,-1,0,7).attr(SI,Nt.PSYCHIC).target(17),new B(t.LUNGE,i.BUG,0,80,100,15,100,0,7).attr(De,[g.ATK],-1),new B(t.FIRE_LASH,i.FIRE,0,80,100,15,100,0,7).attr(De,[g.DEF],-1),new B(t.POWER_TRIP,i.DARK,0,20,100,10,-1,0,7).attr(pu),new B(t.BURN_UP,i.FIRE,1,130,100,5,-1,0,7).condition(E=>E.getTypes(!0).includes(i.FIRE)).attr(jA,!0,Re.FREEZE).attr(Gt,Y.BURNED_UP,!0,!1).attr(qu,i.FIRE,E=>{E.scene.queueMessage(D.t("moveTriggers:burnedItselfOut",{pokemonName:ee(E)}))}),new ce(t.SPEED_SWAP,i.PSYCHIC,-1,10,-1,0,7).attr(gd,g.SPD).ignoresSubstitute(),new B(t.SMART_STRIKE,i.STEEL,0,70,-1,10,-1,0,7),new ce(t.PURIFY,i.POISON,-1,20,-1,0,7).condition((E,A,s)=>{var R;return mV((R=A.status)==null?void 0:R.effect)}).attr(os,.5).attr(jA,!1,cL()).triageMove(),new B(t.REVELATION_DANCE,i.NORMAL,1,90,100,15,-1,0,7).danceMove().attr(nd),new B(t.CORE_ENFORCER,i.DRAGON,1,100,100,10,-1,0,7).target(6).attr(fd),new B(t.TROP_KICK,i.GRASS,0,70,100,15,100,0,7).attr(De,[g.ATK],-1),new ce(t.INSTRUCT,i.PSYCHIC,-1,15,-1,0,7).ignoresSubstitute().attr(cd).edgeCase(),new B(t.BEAK_BLAST,i.FLYING,0,100,100,15,-1,-3,7).attr(Zr).ballBombMove().makesContact(!1),new B(t.CLANGING_SCALES,i.DRAGON,1,110,100,5,-1,0,7).attr(De,[g.DEF],-1,!0,{firstTargetOnly:!0}).soundBased().target(6),new B(t.DRAGON_HAMMER,i.DRAGON,0,90,100,15,-1,0,7),new B(t.BRUTAL_SWING,i.DARK,0,60,100,20,-1,0,7).target(4),new ce(t.AURORA_VEIL,i.ICE,-1,20,-1,0,7).condition((E,A,s)=>{var R,n,I;return(((R=E.scene.arena.weather)==null?void 0:R.weatherType)===se.HAIL||((n=E.scene.arena.weather)==null?void 0:n.weatherType)===se.SNOW)&&!((I=E.scene.arena.weather)!=null&&I.isEffectSuppressed(E.scene))}).attr(eE,ge.AURORA_VEIL,5,!0).target(15),new B(t.SINISTER_ARROW_RAID,i.GHOST,0,180,-1,1,-1,0,7).makesContact(!1).edgeCase().ignoresVirtual(),new B(t.MALICIOUS_MOONSAULT,i.DARK,0,180,-1,1,-1,0,7).attr(en).attr(_R,Y.MINIMIZED,!0).edgeCase().ignoresVirtual(),new B(t.OCEANIC_OPERETTA,i.WATER,1,195,-1,1,-1,0,7).edgeCase().ignoresVirtual(),new B(t.GUARDIAN_OF_ALOLA,i.FAIRY,1,-1,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.SOUL_STEALING_7_STAR_STRIKE,i.GHOST,0,195,-1,1,-1,0,7).unimplemented().ignoresVirtual(),new B(t.STOKED_SPARKSURFER,i.ELECTRIC,1,175,-1,1,100,0,7).edgeCase().ignoresVirtual(),new B(t.PULVERIZING_PANCAKE,i.NORMAL,0,210,-1,1,-1,0,7).edgeCase().ignoresVirtual(),new ze(t.EXTREME_EVOBOOST,i.NORMAL,-1,1,-1,0,7).attr(De,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],2,!0).ignoresVirtual(),new B(t.GENESIS_SUPERNOVA,i.PSYCHIC,1,185,-1,1,100,0,7).attr(SI,Nt.PSYCHIC).ignoresVirtual(),new B(t.SHELL_TRAP,i.FIRE,1,150,100,5,-1,-3,7).attr(iu,Y.SHELL_TRAP).target(6).condition((E,A,s)=>{var R;return((R=E.getTag(xU))==null?void 0:R.activated)===!0}),new B(t.FLEUR_CANNON,i.FAIRY,1,130,90,5,-1,0,7).attr(De,[g.SPATK],-2,!0),new B(t.PSYCHIC_FANGS,i.PSYCHIC,0,85,100,10,-1,0,7).bitingMove().attr(Qa),new B(t.STOMPING_TANTRUM,i.GROUND,0,75,100,10,-1,0,7).attr(GA,(E,A,s)=>{var R,n;return((R=E.getLastXMoves(2)[1])==null?void 0:R.result)===CA.MISS||((n=E.getLastXMoves(2)[1])==null?void 0:n.result)===CA.FAIL?2:1}),new B(t.SHADOW_BONE,i.GHOST,0,85,100,10,20,0,7).attr(De,[g.DEF],-1).makesContact(!1),new B(t.ACCELEROCK,i.ROCK,0,40,100,20,-1,1,7),new B(t.LIQUIDATION,i.WATER,0,85,100,10,20,0,7).attr(De,[g.DEF],-1),new B(t.PRISMATIC_LASER,i.PSYCHIC,1,160,100,10,-1,0,7).attr(wR),new B(t.SPECTRAL_THIEF,i.GHOST,0,90,100,10,-1,0,7).ignoresSubstitute().partial(),new B(t.SUNSTEEL_STRIKE,i.STEEL,0,100,100,5,-1,0,7).ignoresAbilities(),new B(t.MOONGEIST_BEAM,i.GHOST,1,100,100,5,-1,0,7).ignoresAbilities(),new ce(t.TEARFUL_LOOK,i.NORMAL,-1,20,-1,0,7).attr(De,[g.ATK,g.SPATK],-1),new B(t.ZING_ZAP,i.ELECTRIC,0,80,100,10,30,0,7).attr(LA),new B(t.NATURES_MADNESS,i.FAIRY,1,-1,90,10,-1,0,7).attr(kL),new B(t.MULTI_ATTACK,i.NORMAL,0,120,100,10,-1,0,7).attr(ku),new B(t.TEN_MILLION_VOLT_THUNDERBOLT,i.ELECTRIC,1,195,-1,1,-1,0,7).edgeCase().ignoresVirtual(),new B(t.MIND_BLOWN,i.FIRE,1,150,100,5,-1,0,7).condition(Rl).attr(Nu).target(4),new B(t.PLASMA_FISTS,i.ELECTRIC,0,100,100,15,-1,0,7).attr(eE,ge.ION_DELUGE,1).punchingMove(),new B(t.PHOTON_GEYSER,i.PSYCHIC,1,100,100,5,-1,0,7).attr(Vu).ignoresAbilities(),new B(t.LIGHT_THAT_BURNS_THE_SKY,i.PSYCHIC,1,200,-1,1,-1,0,7).attr(Vu).ignoresAbilities().ignoresVirtual(),new B(t.SEARING_SUNRAZE_SMASH,i.STEEL,0,200,-1,1,-1,0,7).ignoresAbilities().ignoresVirtual(),new B(t.MENACING_MOONRAZE_MAELSTROM,i.GHOST,1,200,-1,1,-1,0,7).ignoresAbilities().ignoresVirtual(),new B(t.LETS_SNUGGLE_FOREVER,i.FAIRY,0,190,-1,1,-1,0,7).edgeCase().ignoresVirtual(),new B(t.SPLINTERED_STORMSHARDS,i.ROCK,0,190,-1,1,-1,0,7).attr(xa).makesContact(!1).ignoresVirtual(),new B(t.CLANGOROUS_SOULBLAZE,i.DRAGON,1,185,-1,1,100,0,7).attr(De,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],1,!0,{firstTargetOnly:!0}).soundBased().target(6).edgeCase().ignoresVirtual(),new B(t.ZIPPY_ZAP,i.ELECTRIC,0,50,100,15,-1,2,7).attr(nn),new B(t.SPLISHY_SPLASH,i.WATER,1,90,100,15,30,0,7).attr(nt,Re.PARALYSIS).target(6),new B(t.FLOATY_FALL,i.FLYING,0,90,95,15,30,0,7).attr(LA),new B(t.PIKA_PAPOW,i.ELECTRIC,1,-1,-1,20,-1,0,7).attr(ba),new B(t.BOUNCY_BUBBLE,i.WATER,1,60,100,20,-1,0,7).attr(Ks).triageMove().target(6),new B(t.BUZZY_BUZZ,i.ELECTRIC,1,60,100,20,100,0,7).attr(nt,Re.PARALYSIS),new B(t.SIZZLY_SLIDE,i.FIRE,0,60,100,20,100,0,7).attr(nt,Re.BURN),new B(t.GLITZY_GLOW,i.PSYCHIC,1,80,95,15,-1,0,7).attr(eE,ge.LIGHT_SCREEN,5,!1,!0),new B(t.BADDY_BAD,i.DARK,1,80,95,15,-1,0,7).attr(eE,ge.REFLECT,5,!1,!0),new B(t.SAPPY_SEED,i.GRASS,0,100,90,10,100,0,7).attr(Qu).makesContact(!1),new B(t.FREEZY_FROST,i.ICE,1,100,90,10,-1,0,7).attr(zL,!0),new B(t.SPARKLY_SWIRL,i.FAIRY,1,120,85,5,-1,0,7).attr(ZL,null,O.NONE),new B(t.VEEVEE_VOLLEY,i.NORMAL,0,-1,-1,20,-1,0,7).attr(ba),new B(t.DOUBLE_IRON_BASH,i.STEEL,0,60,100,5,30,0,7).attr(TA,0).attr(LA).punchingMove(),new ze(t.MAX_GUARD,i.NORMAL,-1,10,-1,4,8).attr(vR).condition(lR).ignoresVirtual(),new B(t.DYNAMAX_CANNON,i.DRAGON,1,100,100,5,-1,0,8).attr(GA,(E,A,s)=>A.level>A.scene.getMaxExpLevel()?1+Math.min(1,(A.level-A.scene.getMaxExpLevel())/(A.scene.getMaxExpLevel()*.05)):1).attr(md).ignoresVirtual(),new B(t.SNIPE_SHOT,i.WATER,1,80,100,15,-1,0,8).attr(qA).attr(gI),new B(t.JAW_LOCK,i.DARK,0,80,100,10,-1,0,8).attr(Ld).bitingMove(),new ze(t.STUFF_CHEEKS,i.NORMAL,-1,10,-1,0,8).attr(vS).attr(De,[g.DEF],2,!0).condition(E=>E.scene.findModifiers(s=>s instanceof lE,E.isPlayer()).length>0).edgeCase(),new ze(t.NO_RETREAT,i.FIGHTING,-1,5,-1,0,8).attr(De,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],1,!0).attr(Gt,Y.NO_RETREAT,!0,!1).condition((E,A,s)=>{var R;return((R=E.getTag(gR))==null?void 0:R.sourceMove)!==t.NO_RETREAT}),new ce(t.TAR_SHOT,i.ROCK,100,15,-1,0,8).attr(De,[g.SPD],-1).attr(Gt,Y.TAR_SHOT,!1),new ce(t.MAGIC_POWDER,i.PSYCHIC,100,20,-1,0,8).attr(ju,i.PSYCHIC).powderMove(),new B(t.DRAGON_DARTS,i.DRAGON,0,50,100,10,-1,0,8).attr(TA,0).makesContact(!1).partial(),new ce(t.TEATIME,i.NORMAL,-1,10,-1,0,8).attr(vS).target(14),new ce(t.OCTOLOCK,i.FIGHTING,100,15,-1,0,8).condition(Ol).attr(Gt,Y.OCTOLOCK,!1,!0,1),new B(t.BOLT_BEAK,i.ELECTRIC,0,85,100,10,-1,0,8).attr(Ku),new B(t.FISHIOUS_REND,i.WATER,0,85,100,10,-1,0,8).attr(Ku).bitingMove(),new ce(t.COURT_CHANGE,i.NORMAL,100,10,-1,0,8).attr(Cd,[ge.AURORA_VEIL,ge.LIGHT_SCREEN,ge.MIST,ge.REFLECT,ge.SPIKES,ge.STEALTH_ROCK,ge.STICKY_WEB,ge.TAILWIND,ge.TOXIC_SPIKES]),new B(t.MAX_FLARE,i.FIRE,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_FLUTTERBY,i.BUG,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_LIGHTNING,i.ELECTRIC,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_STRIKE,i.NORMAL,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_KNUCKLE,i.FIGHTING,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_PHANTASM,i.GHOST,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_HAILSTORM,i.ICE,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_OOZE,i.POISON,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_GEYSER,i.WATER,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_AIRSTREAM,i.FLYING,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_STARFALL,i.FAIRY,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_WYRMWIND,i.DRAGON,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_MINDSTORM,i.PSYCHIC,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_ROCKFALL,i.ROCK,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_QUAKE,i.GROUND,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_DARKNESS,i.DARK,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_OVERGROWTH,i.GRASS,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new B(t.MAX_STEELSPIKE,i.STEEL,0,10,-1,10,-1,0,8).target(5).unimplemented().ignoresVirtual(),new ze(t.CLANGOROUS_SOUL,i.DRAGON,100,5,-1,0,8).attr($L,[g.ATK,g.DEF,g.SPATK,g.SPDEF,g.SPD],1,3).soundBased().danceMove(),new B(t.BODY_PRESS,i.FIGHTING,0,80,100,10,-1,0,8).attr(QH),new ce(t.DECORATE,i.FAIRY,-1,15,-1,0,8).attr(De,[g.ATK,g.SPATK],2).ignoresProtect(),new B(t.DRUM_BEATING,i.GRASS,0,80,100,10,100,0,8).attr(De,[g.SPD],-1).makesContact(!1),new B(t.SNAP_TRAP,i.GRASS,0,35,100,15,-1,0,8).attr(AO,Y.SNAP_TRAP),new B(t.PYRO_BALL,i.FIRE,0,120,90,5,10,0,8).attr(jA,!0,Re.FREEZE).attr(nt,Re.BURN).ballBombMove().makesContact(!1),new B(t.BEHEMOTH_BLADE,i.STEEL,0,100,100,5,-1,0,8).slicingMove(),new B(t.BEHEMOTH_BASH,i.STEEL,0,100,100,5,-1,0,8),new B(t.AURA_WHEEL,i.ELECTRIC,0,110,100,10,100,0,8).attr(De,[g.SPD],1,!0).makesContact(!1).attr(ed),new B(t.BREAKING_SWIPE,i.DRAGON,0,60,100,15,100,0,8).target(6).attr(De,[g.ATK],-1),new B(t.BRANCH_POKE,i.GRASS,0,40,100,40,-1,0,8),new B(t.OVERDRIVE,i.ELECTRIC,1,80,100,10,-1,0,8).soundBased().target(6),new B(t.APPLE_ACID,i.GRASS,1,80,100,10,100,0,8).attr(De,[g.SPDEF],-1),new B(t.GRAV_APPLE,i.GRASS,0,80,100,10,100,0,8).attr(De,[g.DEF],-1).attr(GA,(E,A,s)=>E.scene.arena.getTag(ge.GRAVITY)?1.5:1).makesContact(!1),new B(t.SPIRIT_BREAK,i.FAIRY,0,75,100,15,100,0,8).attr(De,[g.SPATK],-1),new B(t.STRANGE_STEAM,i.FAIRY,1,90,95,10,20,0,8).attr(kE),new ce(t.LIFE_DEW,i.WATER,-1,10,-1,0,8).attr(os,.25,!0,!1).target(13).ignoresProtect(),new ze(t.OBSTRUCT,i.DARK,100,10,-1,4,8).attr(vR,Y.OBSTRUCT).condition(lR),new B(t.FALSE_SURRENDER,i.DARK,0,80,-1,10,-1,0,8),new B(t.METEOR_ASSAULT,i.FIGHTING,0,150,100,5,-1,0,8).attr(wR).makesContact(!1),new B(t.ETERNABEAM,i.DRAGON,1,160,90,5,-1,0,8).attr(wR),new B(t.STEEL_BEAM,i.STEEL,1,140,95,5,-1,0,8).attr(Nu),new B(t.EXPANDING_FORCE,i.PSYCHIC,1,80,100,10,-1,0,8).attr(GA,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.PSYCHIC&&E.isGrounded()?1.5:1).attr(aa,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.PSYCHIC&&E.isGrounded()?6:3),new B(t.STEEL_ROLLER,i.STEEL,0,130,100,5,-1,0,8).attr(xa).condition((E,A,s)=>!!E.scene.arena.terrain),new B(t.SCALE_SHOT,i.DRAGON,0,25,90,20,-1,0,8).attr(De,[g.SPD],1,!0,{lastHitOnly:!0}).attr(De,[g.DEF],-1,!0,{lastHitOnly:!0}).attr(TA).makesContact(!1),new Ns(t.METEOR_BEAM,i.ROCK,1,120,90,10,-1,0,8).chargeText(D.t("moveTriggers:isOverflowingWithSpacePower",{pokemonName:"{USER}"})).chargeAttr(De,[g.SPATK],1,!0).ignoresVirtual(),new B(t.SHELL_SIDE_ARM,i.POISON,1,90,100,10,20,0,8).attr(zH).attr(nt,Re.POISON).partial(),new B(t.MISTY_EXPLOSION,i.FAIRY,1,100,100,5,-1,0,8).attr(yn).target(4).attr(GA,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.MISTY&&E.isGrounded()?1.5:1).condition(Rl).makesContact(!1),new B(t.GRASSY_GLIDE,i.GRASS,0,55,100,20,-1,0,8).attr(Uu,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.GRASSY&&E.isGrounded()),new B(t.RISING_VOLTAGE,i.ELECTRIC,1,70,100,20,-1,0,8).attr(GA,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.ELECTRIC&&A.isGrounded()?2:1),new B(t.TERRAIN_PULSE,i.NORMAL,1,50,100,10,-1,0,8).attr(sd).attr(GA,(E,A,s)=>E.scene.arena.getTerrainType()!==Nt.NONE&&E.isGrounded()?2:1).pulseMove(),new B(t.SKITTER_SMACK,i.BUG,0,70,90,10,100,0,8).attr(De,[g.SPATK],-1),new B(t.BURNING_JEALOUSY,i.FIRE,1,70,100,5,100,0,8).attr(Wd,Re.BURN).target(6),new B(t.LASH_OUT,i.DARK,0,75,100,5,-1,0,8).attr(GA,(E,A,s)=>E.turnData.statStagesDecreased?2:1),new B(t.POLTERGEIST,i.GHOST,0,110,90,5,-1,0,8).attr(yd).makesContact(!1),new ce(t.CORROSIVE_GAS,i.POISON,100,40,-1,0,8).target(4).unimplemented(),new ce(t.COACHING,i.FIGHTING,-1,10,-1,0,8).attr(De,[g.ATK,g.DEF],1).target(10).condition(Ba),new B(t.FLIP_TURN,i.WATER,0,60,100,20,-1,0,8).attr(ks,!0),new B(t.TRIPLE_AXEL,i.ICE,0,20,90,10,-1,0,8).attr(TA,2).attr(Wu,3).checkAllHits(),new B(t.DUAL_WINGBEAT,i.FLYING,0,40,90,10,-1,0,8).attr(TA,0),new B(t.SCORCHING_SANDS,i.GROUND,1,70,100,10,30,0,8).attr(jA,!0,Re.FREEZE).attr(jA,!1,Re.FREEZE).attr(nt,Re.BURN),new ce(t.JUNGLE_HEALING,i.GRASS,-1,10,-1,0,8).attr(os,.25,!0,!1).attr(jA,!1,cL()).target(13),new B(t.WICKED_BLOW,i.DARK,0,75,100,5,-1,0,8).attr(nn).punchingMove(),new B(t.SURGING_STRIKES,i.WATER,0,25,100,5,-1,0,8).attr(TA,2).attr(nn).punchingMove(),new B(t.THUNDER_CAGE,i.ELECTRIC,1,80,90,15,-1,0,8).attr(AO,Y.THUNDER_CAGE),new B(t.DRAGON_ENERGY,i.DRAGON,1,150,100,5,-1,0,8).attr(jL).target(6),new B(t.FREEZING_GLARE,i.PSYCHIC,1,90,100,10,10,0,8).attr(nt,Re.FREEZE),new B(t.FIERY_WRATH,i.DARK,1,90,100,10,20,0,8).attr(LA).target(6),new B(t.THUNDEROUS_KICK,i.FIGHTING,0,90,100,10,100,0,8).attr(De,[g.DEF],-1),new B(t.GLACIAL_LANCE,i.ICE,0,120,100,5,-1,0,8).target(6).makesContact(!1),new B(t.ASTRAL_BARRAGE,i.GHOST,1,120,100,5,-1,0,8).target(6),new B(t.EERIE_SPELL,i.PSYCHIC,1,80,100,5,100,0,8).attr(_d,3).soundBased(),new B(t.DIRE_CLAW,i.POISON,0,80,100,15,50,0,8).attr(Du,[Re.POISON,Re.PARALYSIS,Re.SLEEP]),new B(t.PSYSHIELD_BASH,i.PSYCHIC,0,70,90,10,100,0,8).attr(De,[g.DEF],1,!0),new ze(t.POWER_SHIFT,i.NORMAL,-1,10,-1,0,8).target(0).attr(Kd,g.ATK,g.DEF),new B(t.STONE_AXE,i.ROCK,0,65,90,15,100,0,8).attr(zu,ge.STEALTH_ROCK).slicingMove(),new B(t.SPRINGTIDE_STORM,i.FAIRY,1,100,80,5,30,0,8).attr(De,[g.ATK],-1).windMove().target(6),new B(t.MYSTICAL_POWER,i.PSYCHIC,1,70,90,10,100,0,8).attr(De,[g.SPATK],1,!0),new B(t.RAGING_FURY,i.FIRE,0,120,100,10,-1,0,8).makesContact(!1).attr(ka).attr(sO,_n).attr(gO,_n).target(7),new B(t.WAVE_CRASH,i.WATER,0,120,100,10,-1,0,8).attr(bs,!1,.33).recklessMove(),new B(t.CHLOROBLAST,i.GRASS,1,150,95,5,-1,0,8).attr(bs,!0,.5),new B(t.MOUNTAIN_GALE,i.ICE,0,100,85,10,30,0,8).makesContact(!1).attr(LA),new ze(t.VICTORY_DANCE,i.FIGHTING,-1,10,-1,0,8).attr(De,[g.ATK,g.DEF,g.SPD],1,!0).danceMove(),new B(t.HEADLONG_RUSH,i.GROUND,0,120,100,5,-1,0,8).attr(De,[g.DEF,g.SPDEF],-1,!0).punchingMove(),new B(t.BARB_BARRAGE,i.POISON,0,60,100,10,50,0,8).makesContact(!1).attr(GA,(E,A,s)=>A.status&&(A.status.effect===Re.POISON||A.status.effect===Re.TOXIC)?2:1).attr(nt,Re.POISON),new B(t.ESPER_WING,i.PSYCHIC,1,80,100,10,100,0,8).attr(qA).attr(De,[g.SPD],1,!0),new B(t.BITTER_MALICE,i.GHOST,1,75,100,10,100,0,8).attr(De,[g.ATK],-1),new ze(t.SHELTER,i.STEEL,-1,10,100,0,8).attr(De,[g.DEF],2,!0),new B(t.TRIPLE_ARROWS,i.FIGHTING,0,90,100,10,30,0,8).makesContact(!1).attr(qA).attr(De,[g.DEF],-1,!1,{effectChanceOverride:50}).attr(LA),new B(t.INFERNAL_PARADE,i.GHOST,1,60,100,15,30,0,8).attr(nt,Re.BURN).attr(GA,(E,A,s)=>A.status?2:1),new B(t.CEASELESS_EDGE,i.DARK,0,65,90,15,100,0,8).attr(zu,ge.SPIKES).slicingMove(),new B(t.BLEAKWIND_STORM,i.FLYING,1,100,80,10,30,0,8).attr(EN).attr(De,[g.SPD],-1).windMove().target(6),new B(t.WILDBOLT_STORM,i.ELECTRIC,1,100,80,10,20,0,8).attr(EN).attr(nt,Re.PARALYSIS).windMove().target(6),new B(t.SANDSEAR_STORM,i.GROUND,1,100,80,10,20,0,8).attr(EN).attr(nt,Re.BURN).windMove().target(6),new ce(t.LUNAR_BLESSING,i.PSYCHIC,-1,5,-1,0,8).attr(os,.25,!0,!1).attr(jA,!1,cL()).target(13).triageMove(),new ze(t.TAKE_HEART,i.PSYCHIC,-1,10,-1,0,8).attr(De,[g.SPATK,g.SPDEF],1,!0).attr(jA,!0,[Re.PARALYSIS,Re.POISON,Re.TOXIC,Re.BURN,Re.SLEEP]),new B(t.TERA_BLAST,i.NORMAL,1,80,100,10,-1,0,9).attr(xu).attr(Od).attr($H).attr(De,[g.ATK,g.SPATK],-1,!0,{condition:L((E,A,s)=>E.isTerastallized()&&E.isOfType(i.STELLAR),"condition")}).partial(),new ze(t.SILK_TRAP,i.BUG,-1,10,-1,4,9).attr(vR,Y.SILK_TRAP).condition(lR),new B(t.AXE_KICK,i.FIGHTING,0,120,90,10,30,0,9).attr(sO,ni).attr(gO,ni).attr(kE).recklessMove(),new B(t.LAST_RESPECTS,i.GHOST,0,50,100,10,-1,0,9).partial().attr(GA,(E,A,s)=>1+Math.min(E.isPlayer()?E.scene.currentBattle.playerFaints:E.scene.currentBattle.enemyFaints,100)).makesContact(!1),new B(t.LUMINA_CRASH,i.PSYCHIC,1,80,100,10,100,0,9).attr(De,[g.SPDEF],-2),new B(t.ORDER_UP,i.DRAGON,0,80,100,10,100,0,9).attr(HH).makesContact(!1),new B(t.JET_PUNCH,i.WATER,0,60,100,15,-1,1,9).punchingMove(),new ce(t.SPICY_EXTRACT,i.GRASS,-1,15,-1,0,9).attr(De,[g.ATK],2).attr(De,[g.DEF],-2),new B(t.SPIN_OUT,i.STEEL,0,100,100,5,-1,0,9).attr(De,[g.SPD],-2,!0),new B(t.POPULATION_BOMB,i.NORMAL,0,20,90,10,-1,0,9).attr(TA,3).slicingMove().checkAllHits(),new B(t.ICE_SPINNER,i.ICE,0,80,100,15,-1,0,9).attr(xa),new B(t.GLAIVE_RUSH,i.DRAGON,0,120,100,5,-1,0,9).attr(Gt,Y.ALWAYS_GET_HIT,!0,!1,0,0,!0).attr(Gt,Y.RECEIVE_DOUBLE_DAMAGE,!0,!1,0,0,!0).condition((E,A,s)=>{var R,n;return!(((R=A.getTag(Y.PROTECTED))==null?void 0:R.tagType)==="PROTECTED"||((n=A.scene.arena.getTag(ge.MAT_BLOCK))==null?void 0:n.tagType)==="MAT_BLOCK")}),new ce(t.REVIVAL_BLESSING,i.NORMAL,-1,1,-1,0,9).triageMove().attr(Ud).target(0),new B(t.SALT_CURE,i.ROCK,0,40,100,15,100,0,9).attr(Gt,Y.SALT_CURED).makesContact(!1),new B(t.TRIPLE_DIVE,i.WATER,0,30,95,10,-1,0,9).attr(TA,2),new B(t.MORTAL_SPIN,i.POISON,0,30,100,15,100,0,9).attr(Td,[Y.BIND,Y.WRAP,Y.FIRE_SPIN,Y.WHIRLPOOL,Y.CLAMP,Y.SAND_TOMB,Y.MAGMA_STORM,Y.SNAP_TRAP,Y.THUNDER_CAGE,Y.SEEDED,Y.INFESTATION],!0).attr(nt,Re.POISON).attr(Xa).target(6),new ce(t.DOODLE,i.NORMAL,100,10,-1,0,9).attr(RD,!0),new ze(t.FILLET_AWAY,i.NORMAL,-1,10,-1,0,9).attr($L,[g.ATK,g.SPATK,g.SPD],2,2),new B(t.KOWTOW_CLEAVE,i.DARK,0,85,-1,10,-1,0,9).slicingMove(),new B(t.FLOWER_TRICK,i.GRASS,0,70,-1,10,100,0,9).attr(nn).makesContact(!1),new B(t.TORCH_SONG,i.FIRE,1,80,100,10,100,0,9).attr(De,[g.SPATK],1,!0).soundBased(),new B(t.AQUA_STEP,i.WATER,0,80,100,10,100,0,9).attr(De,[g.SPD],1,!0).danceMove(),new B(t.RAGING_BULL,i.NORMAL,0,90,100,10,-1,0,9).attr(td).attr(Qa),new B(t.MAKE_IT_RAIN,i.STEEL,1,120,100,5,-1,0,9).attr(iD).attr(De,[g.SPATK],-1,!0,{firstTargetOnly:!0}).target(6),new B(t.PSYBLADE,i.PSYCHIC,0,80,100,15,-1,0,9).attr(GA,(E,A,s)=>E.scene.arena.getTerrainType()===Nt.ELECTRIC&&E.isGrounded()?1.5:1).slicingMove(),new B(t.HYDRO_STEAM,i.WATER,1,80,100,15,-1,0,9).attr(ou,se.SUNNY).attr(GA,(E,A,s)=>{var R,n;return[se.SUNNY,se.HARSH_SUN].includes((R=E.scene.arena.weather)==null?void 0:R.weatherType)&&!((n=E.scene.arena.weather)!=null&&n.isEffectSuppressed(E.scene))?1.5:1}),new B(t.RUINATION,i.DARK,1,-1,90,10,-1,0,9).attr(kL),new B(t.COLLISION_COURSE,i.FIGHTING,0,100,100,5,-1,0,9).attr(GA,(E,A,s)=>A.getAttackTypeEffectiveness(s.type,E)>=2?5461/4096:1),new B(t.ELECTRO_DRIFT,i.ELECTRIC,1,100,100,5,-1,0,9).attr(GA,(E,A,s)=>A.getAttackTypeEffectiveness(s.type,E)>=2?5461/4096:1).makesContact(),new ze(t.SHED_TAIL,i.NORMAL,-1,10,-1,0,9).attr(Tu,.5).attr(ks,!0,aA.SHED_TAIL).condition(Yb),new ze(t.CHILLY_RECEPTION,i.ICE,-1,10,-1,0,9).attr(rr,(E,A)=>D.t("moveTriggers:chillyReception",{pokemonName:ee(E)})).attr(ud,!0),new ze(t.TIDY_UP,i.NORMAL,-1,10,-1,0,9).attr(De,[g.ATK,g.SPD],1,!0).attr(Xa,!0).attr(od),new ce(t.SNOWSCAPE,i.ICE,-1,10,-1,0,9).attr(TI,se.SNOW).target(17),new B(t.POUNCE,i.BUG,0,50,100,20,100,0,9).attr(De,[g.SPD],-1),new B(t.TRAILBLAZE,i.GRASS,0,50,100,20,100,0,9).attr(De,[g.SPD],1,!0),new B(t.CHILLING_WATER,i.WATER,1,50,100,20,100,0,9).attr(De,[g.ATK],-1),new B(t.HYPER_DRILL,i.NORMAL,0,100,100,5,-1,0,9).ignoresProtect(),new B(t.TWIN_BEAM,i.PSYCHIC,1,40,100,10,-1,0,9).attr(TA,0),new B(t.RAGE_FIST,i.GHOST,0,50,100,10,-1,0,9).partial().attr(yH).punchingMove(),new B(t.ARMOR_CANNON,i.FIRE,1,120,100,5,-1,0,9).attr(De,[g.DEF,g.SPDEF],-1,!0),new B(t.BITTER_BLADE,i.FIRE,0,90,100,10,-1,0,9).attr(Ks).slicingMove().triageMove(),new B(t.DOUBLE_SHOCK,i.ELECTRIC,0,120,100,5,-1,0,9).condition(E=>E.getTypes(!0).includes(i.ELECTRIC)).attr(Gt,Y.DOUBLE_SHOCKED,!0,!1).attr(qu,i.ELECTRIC,E=>{E.scene.queueMessage(D.t("moveTriggers:usedUpAllElectricity",{pokemonName:ee(E)}))}),new B(t.GIGATON_HAMMER,i.STEEL,0,160,100,5,-1,0,9).makesContact(!1).condition((E,A,s)=>{const R=E.getLastXMoves(1);return!R.length||R[0].move!==s.id||R[0].result!==CA.SUCCESS}),new B(t.COMEUPPANCE,i.DARK,0,-1,100,10,-1,0,9).attr(BI,E=>E.category===0||E.category===1,1.5).redirectCounter().target(9),new B(t.AQUA_CUTTER,i.WATER,0,70,100,20,-1,0,9).attr(qA).slicingMove().makesContact(!1),new B(t.BLAZING_TORQUE,i.FIRE,0,80,100,10,30,0,9).attr(nt,Re.BURN).makesContact(!1),new B(t.WICKED_TORQUE,i.DARK,0,80,100,10,10,0,9).attr(nt,Re.SLEEP).makesContact(!1),new B(t.NOXIOUS_TORQUE,i.POISON,0,100,100,10,30,0,9).attr(nt,Re.POISON).makesContact(!1),new B(t.COMBAT_TORQUE,i.FIGHTING,0,100,100,10,30,0,9).attr(nt,Re.PARALYSIS).makesContact(!1),new B(t.MAGICAL_TORQUE,i.FAIRY,0,100,100,10,30,0,9).attr(kE).makesContact(!1),new B(t.BLOOD_MOON,i.NORMAL,1,140,100,5,-1,0,9).condition((E,A,s)=>{const R=E.getLastXMoves(1);return!R.length||R[0].move!==s.id||R[0].result!==CA.SUCCESS}),new B(t.MATCHA_GOTCHA,i.GRASS,1,80,90,15,20,0,9).attr(Ks).attr(jA,!0,Re.FREEZE).attr(jA,!1,Re.FREEZE).attr(nt,Re.BURN).target(6).triageMove(),new B(t.SYRUP_BOMB,i.GRASS,1,60,85,10,-1,0,9).attr(Gt,Y.SYRUP_BOMB,!1,!1,3).ballBombMove(),new B(t.IVY_CUDGEL,i.GRASS,0,100,100,10,-1,0,9).attr(Ad).attr(qA).makesContact(!1),new Ns(t.ELECTRO_SHOT,i.ELECTRIC,1,130,100,10,100,0,9).chargeText(D.t("moveTriggers:absorbedElectricity",{pokemonName:"{USER}"})).chargeAttr(De,[g.SPATK],1,!0).chargeAttr(QL,[se.RAIN,se.HEAVY_RAIN]).ignoresVirtual(),new B(t.TERA_STARSTORM,i.NORMAL,1,120,100,5,-1,0,9).attr(xu).attr(qH).attr(aa,(E,A,s)=>(E.hasFusionSpecies(e.TERAPAGOS)||E.species.speciesId===e.TERAPAGOS)&&E.isTerastallized()?6:3).partial(),new B(t.FICKLE_BEAM,i.DRAGON,1,80,100,5,30,0,9).attr(rr,aJ).attr(mH),new ze(t.BURNING_BULWARK,i.FIRE,-1,10,-1,4,9).attr(vR,Y.BURNING_BULWARK).condition(lR),new B(t.THUNDERCLAP,i.ELECTRIC,1,70,100,5,-1,1,9).condition((E,A,s)=>{var R,n,I;return((R=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===NA.FIGHT&&!A.turnData.acted&&ye[(I=(n=E.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:n.move)==null?void 0:I.move].category!==2}),new B(t.MIGHTY_CLEAVE,i.ROCK,0,95,100,5,-1,0,9).slicingMove().ignoresProtect(),new B(t.TACHYON_CUTTER,i.STEEL,1,50,-1,10,-1,0,9).attr(TA,0).slicingMove(),new B(t.HARD_PRESS,i.STEEL,0,-1,100,10,-1,0,9).attr(eN,100),new ce(t.DRAGON_CHEER,i.DRAGON,-1,15,-1,0,9).attr(Gt,Y.DRAGON_CHEER,!1,!0).target(10),new B(t.ALLURING_VOICE,i.FAIRY,1,80,100,10,-1,0,9).attr(pd,Y.CONFUSED).soundBased(),new B(t.TEMPER_FLARE,i.FIRE,0,75,100,10,-1,0,9).attr(GA,(E,A,s)=>{var R,n;return((R=E.getLastXMoves(2)[1])==null?void 0:R.result)===CA.MISS||((n=E.getLastXMoves(2)[1])==null?void 0:n.result)===CA.FAIL?2:1}),new B(t.SUPERCELL_SLAM,i.ELECTRIC,0,100,95,15,-1,0,9).attr(sO,ni).attr(gO,ni).recklessMove(),new B(t.PSYCHIC_NOISE,i.PSYCHIC,1,75,100,10,-1,0,9).soundBased().attr(Gt,Y.HEAL_BLOCK,!1,!1,2),new B(t.UPPER_HAND,i.FIGHTING,0,65,100,15,100,3,9).attr(LA).condition(new vd),new B(t.MALIGNANT_CHAIN,i.POISON,1,100,100,5,50,0,9).attr(nt,Re.TOXIC)),ye.map(E=>{E.getAttrs(De).some(A=>A.selfTarget&&A.stages<0)&&i8.push(E.id)})}L(SJ,"initMoves");const pv=class pv extends as{constructor(A,s,R,n,I=!1){super(A,s),this.amount=R,this.damageResult=n||wt.EFFECTIVE,this.critical=I}start(){if(super.start(),this.damageResult===wt.ONE_HIT_KO){this.scene.moveAnimations&&this.scene.toggleInvert(!0),this.scene.time.delayedCall(Et(1e3),()=>{this.scene.toggleInvert(!1),this.applyDamage()});return}this.applyDamage()}updateAmount(A){this.amount=A}applyDamage(){switch(this.damageResult){case wt.EFFECTIVE:this.scene.playSound("se/hit");break;case wt.SUPER_EFFECTIVE:case wt.ONE_HIT_KO:this.scene.playSound("se/hit_strong");break;case wt.NOT_VERY_EFFECTIVE:this.scene.playSound("se/hit_weak");break}if(this.amount&&this.scene.damageNumberHandler.add(this.getPokemon(),this.amount,this.damageResult,this.critical),this.damageResult!==wt.OTHER&&this.amount>0){const A=this.scene.time.addEvent({delay:100,repeat:5,startAt:200,callback:L(()=>{this.getPokemon().getSprite().setVisible(A.repeatCount%2===0),A.repeatCount||this.getPokemon().updateInfo().then(()=>this.end())},"callback")})}else this.getPokemon().updateInfo().then(()=>this.end())}end(){this.scene.currentBattle.battleSpec===TE.FINAL_BOSS?this.scene.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};L(pv,"DamageAnimPhase");let ID=pv;const Wv=class Wv extends as{constructor(A,s,R=!1,n,I,a){super(A,s),this.preventEndure=R,this.destinyTag=n,this.grudgeTag=I,this.source=a}start(){super.start();const A=this.getPokemon();if(!Ve(this.destinyTag)&&!Ve(this.source)&&this.destinyTag.lapse(this.source,QE.CUSTOM),!Ve(this.grudgeTag)&&!Ve(this.source)&&this.grudgeTag.lapse(A,QE.CUSTOM,this.source),!this.preventEndure){const s=this.scene.applyModifier(tL,this.player,A);if(s)return A.loseHeldItem(s),this.scene.updateModifiers(this.player),this.end()}this.scene.getPlayerField().forEach((s,R)=>{s!=null&&s.isActive(!0)&&s.isPlayer()&&this.scene.currentBattle.addParticipant(s)}),this.tryOverrideForBattleSpec()||this.doFaint()}doFaint(){var R,n,I,a;const A=this.getPokemon();if(A.isPlayer()?(this.scene.currentBattle.playerFaints+=1,this.scene.currentBattle.playerFaintsHistory.push({pokemon:A,turn:this.scene.currentBattle.turn})):(this.scene.currentBattle.enemyFaints+=1,this.scene.currentBattle.enemyFaintsHistory.push({pokemon:A,turn:this.scene.currentBattle.turn})),this.scene.queueMessage(D.t("battle:fainted",{pokemonNameWithAffix:ee(A)}),null,!0),this.scene.triggerPokemonFormChange(A,ls,!0),(n=(R=A.turnData)==null?void 0:R.attacksReceived)!=null&&n.length){const r=A.turnData.attacksReceived[0];Kb(ki,A,this.scene.getPokemonById(r.sourceId),new Ot(r.move).getMove(),r.result)}else Kb(ki,A);if(this.scene.getField(!0).forEach(r=>yQ(CS,r,A)),(a=(I=A.turnData)==null?void 0:I.attacksReceived)!=null&&a.length){const r=this.scene.getPokemonById(A.turnData.attacksReceived[0].sourceId);if(r!=null&&r.isOnField()){wQ(lS,r);const S=ye[A.turnData.attacksReceived[0].move],o=S.getAttrs(Hu);if(o.length)for(const l of o)l.applyPostVictory(r,r,S)}}if(this.player){const r=this.scene.getPokemonAllowedInBattle(),S=r.filter(o=>!o.isActive(!0));r.length?this.scene.currentBattle.double&&r.length===1&&S.length===0?this.scene.unshiftPhase(new lO(this.scene,!0)):S.length>0&&this.scene.pushPhase(new Yi(this.scene,aA.SWITCH,this.fieldIndex,!0,!1)):this.scene.unshiftPhase(new CO(this.scene))}else this.scene.unshiftPhase(new JT(this.scene,this.battlerIndex)),[ht.TRAINER,ht.MYSTERY_ENCOUNTER].includes(this.scene.currentBattle.battleType)&&this.scene.getEnemyParty().filter(S=>S.isActive()&&!S.isOnField()&&S.trainerSlot===A.trainerSlot).length&&this.scene.pushPhase(new aR(this.scene,aA.SWITCH,this.fieldIndex,-1,!1,!1));if(this.scene.currentBattle.double){const r=A.getAlly();this.scene.redirectPokemonMoves(A,r)}A.faintCry(()=>{A instanceof wE&&A.addFriendship(-U7),A.hideInfo(),this.scene.playSound("se/faint"),this.scene.tweens.add({targets:A,duration:500,y:A.y+150,ease:"Sine.easeIn",onComplete:L(()=>{A.resetSprite(),A.lapseTags(QE.FAINT),this.scene.getField(!0).filter(r=>r!==A).forEach(r=>r.removeTagsBySourceId(A.id)),A.y-=150,A.trySetStatus(Re.FAINT),A.isPlayer()?this.scene.currentBattle.removeFaintedParticipant(A):(this.scene.addFaintedEnemyScore(A),this.scene.currentBattle.addPostBattleLoot(A)),this.scene.field.remove(A),this.end()},"onComplete")})})}tryOverrideForBattleSpec(){switch(this.scene.currentBattle.battleSpec){case TE.FINAL_BOSS:if(!this.player){const A=this.getPokemon();return A.formIndex?this.scene.ui.showDialogue(D6[TE.FINAL_BOSS].secondStageWin,A.species.name,null,()=>this.doFaint()):(A.hp++,this.scene.unshiftPhase(new ID(this.scene,A.getBattlerIndex(),0,wt.OTHER)),this.end()),!0}}return!1}};L(Wv,"FaintPhase");let aD=Wv;const Yv=class Yv extends as{constructor(A,s,R,n,I,a){super(A,s),this.statusEffect=R,this.turnsRemaining=n,this.sourceText=I,this.sourcePokemon=a}start(){var s;const A=this.getPokemon();if(A&&!A.status){if(A.trySetStatus(this.statusEffect,!1,this.sourcePokemon)){this.turnsRemaining&&(A.status.sleepTurnsRemaining=this.turnsRemaining),A.updateInfo(!0),new Qi(oA.POISON+(this.statusEffect-1),A).play(this.scene,!1,()=>{this.scene.queueMessage(t7(this.statusEffect,ee(A),this.sourceText??void 0)),this.end()});return}}else((s=A.status)==null?void 0:s.effect)===this.statusEffect&&this.scene.queueMessage(A7(this.statusEffect??Re.NONE,ee(A)));this.end()}};L(Yv,"ObtainStatusEffectPhase");let bd=Yv;var ol=(E=>(E[E.MISC=0]="MISC",E[E.LEVEL_UP=1]="LEVEL_UP",E[E.RELEARN=2]="RELEARN",E[E.EVOLUTION=3]="EVOLUTION",E[E.EVOLUTION_FUSED=4]="EVOLUTION_FUSED",E[E.EVOLUTION_FUSED_BASE=5]="EVOLUTION_FUSED_BASE",E))(ol||{}),nR=(E=>(E[E.CENTER=0]="CENTER",E[E.LEFT=1]="LEFT",E[E.RIGHT=2]="RIGHT",E))(nR||{});const yv=class yv extends EE.GameObjects.Container{constructor(A,s,R,n,I,a,r,S,o,l,C,M,u){if(super(A,s,R),!n.isObtainable()&&this.isPlayer())throw`Cannot create a player Pokemon for species '${n.getName(r)}'`;const h=new ZE(VV);if(this.hasTrainer()||this.scene.applyModifiers(zn,!0,h),this.species=n,this.pokeball=(u==null?void 0:u.pokeball)||be.POKEBALL,this.level=I,this.switchOutStatus=!1,a!==void 0)this.abilityIndex=a;else{const P=!_e(h.value),G=_e(2);n.abilityHidden&&P?this.abilityIndex=2:this.abilityIndex=n.ability2!==n.ability1?G:0}if(r!==void 0&&(this.formIndex=r),S!==void 0&&(this.gender=S),o!==void 0&&(this.shiny=o),l!==void 0&&(this.variant=l),this.exp=(u==null?void 0:u.exp)||ZR(this.level,n.growthRate),this.levelExp=(u==null?void 0:u.levelExp)||0,u)this.id=u.id,this.hp=u.hp,this.stats=u.stats,this.ivs=u.ivs,this.passive=!!u.passive,this.variant===void 0&&(this.variant=0),this.nature=u.nature||0,this.nickname=u.nickname,this.moveset=u.moveset,this.status=u.status,this.friendship=u.friendship!==void 0?u.friendship:this.species.baseFriendship,this.metLevel=u.metLevel||5,this.luck=u.luck,this.metBiome=u.metBiome,this.metSpecies=u.metSpecies??(this.metBiome!==-1?this.species.speciesId:this.species.getRootSpeciesId(!0)),this.metWave=u.metWave??(this.metBiome===-1?-1:0),this.pauseEvolutions=u.pauseEvolutions,this.pokerus=!!u.pokerus,this.evoCounter=u.evoCounter??0,this.fusionSpecies=u.fusionSpecies instanceof c?u.fusionSpecies:u.fusionSpecies?xe(u.fusionSpecies):null,this.fusionFormIndex=u.fusionFormIndex,this.fusionAbilityIndex=u.fusionAbilityIndex,this.fusionShiny=u.fusionShiny,this.fusionVariant=u.fusionVariant||0,this.fusionGender=u.fusionGender,this.fusionLuck=u.fusionLuck,this.fusionCustomPokemonData=u.fusionCustomPokemonData,this.usedTMs=u.usedTMs??[],this.customPokemonData=new ns(u.customPokemonData);else{if(this.id=_e(4294967296),this.ivs=C||$d(this.id),this.gender===void 0&&this.generateGender(),this.formIndex===void 0&&(this.formIndex=this.scene.getSpeciesFormIndex(n,this.gender,this.nature,this.isPlayer())),this.shiny===void 0&&this.trySetShiny(),this.variant===void 0&&(this.variant=this.shiny?this.generateShinyVariant():0),this.customPokemonData=new ns,M!==void 0?this.setNature(M):this.generateNature(),this.friendship=n.baseFriendship,this.metLevel=I,this.metBiome=A.currentBattle?A.arena.biomeType:-1,this.metSpecies=n.speciesId,this.metWave=A.currentBattle?A.currentBattle.waveIndex:-1,this.pokerus=!1,I>1){const P=new Lt(A.gameMode.isSplicedOnly);!P.value&&!this.isPlayer()&&!this.hasTrainer()&&this.scene.applyModifier(Po,!1,P),P.value&&(this.calculateStats(),this.generateFusionSpecies())}this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0),this.fusionLuck=this.luck}this.generateName(),n.isObtainable()||(this.shiny=!1),u||this.calculateStats()}getNameToRender(){try{return this.nickname?decodeURIComponent(escape(atob(this.nickname))):this.name}catch(A){return console.error(`Failed to decode nickname for ${this.name}`,A),this.name}}init(){this.fieldPosition=0,this.initBattleInfo(),this.scene.fieldUI.addAt(this.battleInfo,0);const A=L(n=>{const I=this.scene.addPokemonSprite(this,0,0,`pkmn__${this.isPlayer()?"back__":""}sub`,void 0,!0);return I.setOrigin(.5,1),I.setPipeline(this.scene.spritePipeline,{tone:[0,0,0,0],hasShadow:!!n,teraColor:dR(this.getTeraType())}),I},"getSprite");this.setScale(this.getSpriteScale());const s=A(!0),R=A();R.setVisible(!1),this.addAt(s,0),this.addAt(R,1),this.isShiny()&&!this.shinySparkle&&this.initShinySparkle()}isOnField(){return!this.scene||this.switchOutStatus?!1:this.scene.field.getIndex(this)>-1}isFainted(A=!1){var s;return this.hp<=0&&(!A||((s=this.status)==null?void 0:s.effect)===Re.FAINT)}isAllowedInBattle(){return!this.isFainted()&&this.isAllowedInChallenge()}isAllowedInChallenge(){const A=new Lt(!0);return Fs(this.scene.gameMode,Us.POKEMON_IN_BATTLE,this,A),A.value}isActive(A=!1){return this.scene?this.isAllowedInBattle()&&(!A||this.isOnField()):!1}getDexAttr(){let A=0n;return A|=this.gender!==je.FEMALE?Ze.MALE:Ze.FEMALE,A|=this.shiny?Ze.SHINY:Ze.NON_SHINY,A|=this.variant>=2?Ze.VARIANT_3:this.variant===1?Ze.VARIANT_2:Ze.DEFAULT_VARIANT,A|=this.scene.gameData.getFormAttr(this.formIndex),A}generateName(){if(!this.fusionSpecies){this.name=this.species.getName(this.formIndex);return}this.name=u7(this.species.getName(this.formIndex),this.fusionSpecies.getName(this.fusionFormIndex)),this.battleInfo&&this.updateInfo(!0)}loadAssets(A=!0){return new Promise(s=>{const R=this.getMoveset().map(n=>n.getMove().id);Promise.allSettled(R.map(n=>iL(this.scene,n))).then(()=>{IL(this.scene,R),this.getSpeciesForm().loadAssets(this.scene,this.getGender()===je.FEMALE,this.formIndex,this.shiny,this.variant),(this.isPlayer()||this.getFusionSpeciesForm())&&this.scene.loadPokemonAtlas(this.getBattleSpriteKey(!0,A),this.getBattleSpriteAtlasPath(!0,A)),this.getFusionSpeciesForm()&&(this.getFusionSpeciesForm().loadAssets(this.scene,this.getFusionGender()===je.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant),this.scene.loadPokemonAtlas(this.getFusionBattleSpriteKey(!0,A),this.getFusionBattleSpriteAtlasPath(!0,A))),this.scene.load.once(EE.Loader.Events.COMPLETE,()=>{if(this.isPlayer()){const I=console.warn;console.warn=()=>{};const a=this.scene.anims.generateFrameNames(this.getBattleSpriteKey(),{zeroPad:4,suffix:".png",start:1,end:400});console.warn=I,this.scene.anims.exists(this.getBattleSpriteKey())||this.scene.anims.create({key:this.getBattleSpriteKey(),frames:a,frameRate:10,repeat:-1})}this.playAnim();const n=L(()=>{var I;this.updateFusionPalette(),(I=this.summonData)!=null&&I.speciesForm&&this.updateFusionPalette(!0),s()},"updateFusionPaletteAndResolve");if(this.shiny){const I=L((a=!1)=>new Promise(async r=>{const S=this.getBattleSpriteAtlasPath(a,A).replace("variant/","").replace(/_[1-3]$/,"");let o=Zs;const l=this.scene.experimentalSprites&&this.scene.hasExpSprite(this.getBattleSpriteKey(a,A));S.split("/").map(M=>o?o=o[M]:null);const C=o;if(C&&C[this.variant]===1){const M=this.getBattleSpriteKey(a);CI.hasOwnProperty(M)||await this.populateVariantColorCache(M,l,S)}r()}),"populateVariantColors");this.isPlayer()?Promise.all([I(!1),I(!0)]).then(()=>n()):I(!1).then(()=>n())}else n()}),this.scene.load.isLoading()||this.scene.load.start()})})}async fallbackVariantColor(A,s,R,n,...I){console.warn(`Could not load ${s}!`,...I),R&&await this.populateVariantColorCache(A,!1,n)}async populateVariantColorCache(A,s,R){const n=`./images/pokemon/variant/${s?"exp/":""}${R}.json`;return this.scene.cachedFetch(n).then(I=>I.ok?I.json():this.fallbackVariantColor(A,I.url,s,R,I.status,I.statusText)).catch(I=>this.fallbackVariantColor(A,n,s,R,I)).then(I=>{Ve(I)||(CI[A]=I)})}getFormKey(){return!this.species.forms.length||this.species.forms.length<=this.formIndex?"":this.species.forms[this.formIndex].formKey}getFusionFormKey(){return this.fusionSpecies?!this.fusionSpecies.forms.length||this.fusionSpecies.forms.length<=this.fusionFormIndex?"":this.fusionSpecies.forms[this.fusionFormIndex].formKey:null}getSpriteAtlasPath(A){const s=this.getSpriteId(A).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(s)?"variant/":""}${s}`}getBattleSpriteAtlasPath(A,s){const R=this.getBattleSpriteId(A,s).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(R)?"variant/":""}${R}`}getSpriteId(A){return this.getSpeciesForm(A).getSpriteId(this.getGender(A)===je.FEMALE,this.formIndex,this.shiny,this.variant)}getBattleSpriteId(A,s){return A===void 0&&(A=this.isPlayer()),this.getSpeciesForm(s).getSpriteId(this.getGender(s)===je.FEMALE,this.formIndex,this.shiny,this.variant,A)}getSpriteKey(A){return this.getSpeciesForm(A).getSpriteKey(this.getGender(A)===je.FEMALE,this.formIndex,this.shiny,this.variant)}getBattleSpriteKey(A,s){return`pkmn__${this.getBattleSpriteId(A,s)}`}getFusionSpriteId(A){return this.getFusionSpeciesForm(A).getSpriteId(this.getFusionGender(A)===je.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getFusionBattleSpriteId(A,s){return A===void 0&&(A=this.isPlayer()),this.getFusionSpeciesForm(s).getSpriteId(this.getFusionGender(s)===je.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant,A)}getFusionBattleSpriteKey(A,s){return`pkmn__${this.getFusionBattleSpriteId(A,s)}`}getFusionBattleSpriteAtlasPath(A,s){return this.getFusionBattleSpriteId(A,s).replace(/\_{2}/g,"/")}getIconAtlasKey(A){return this.getSpeciesForm(A).getIconAtlasKey(this.formIndex,this.shiny,this.variant)}getFusionIconAtlasKey(A){return this.getFusionSpeciesForm(A).getIconAtlasKey(this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getIconId(A){return this.getSpeciesForm(A).getIconId(this.getGender(A)===je.FEMALE,this.formIndex,this.shiny,this.variant)}getFusionIconId(A){return this.getFusionSpeciesForm(A).getIconId(this.getFusionGender(A)===je.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getSpeciesForm(A){var s;return!A&&((s=this.summonData)!=null&&s.speciesForm)?this.summonData.speciesForm:this.species.forms&&this.species.forms.length>0?this.species.forms[this.formIndex]:this.species}getFusionSpeciesForm(A){var s,R,n,I,a;return!A&&((s=this.summonData)!=null&&s.speciesForm)?this.summonData.fusionSpeciesForm:!((n=(R=this.fusionSpecies)==null?void 0:R.forms)!=null&&n.length)||this.fusionFormIndex>=((I=this.fusionSpecies)==null?void 0:I.forms.length)?this.fusionSpecies:(a=this.fusionSpecies)==null?void 0:a.forms[this.fusionFormIndex]}getSprite(){return this.getAt(0)}getTintSprite(){return this.maskEnabled?this.maskSprite:this.getAt(1)}getSpriteScale(){const A=this.getFormKey();return this.isMax()===!0||A==="segin-starmobile"||A==="schedar-starmobile"||A==="navi-starmobile"||A==="ruchbah-starmobile"||A==="caph-starmobile"?1.5:this.customPokemonData.spriteScale>0?this.customPokemonData.spriteScale:1}resetSprite(){this.setVisible(!1),this.isOffsetBySubstitute()&&(this.x-=this.getSubstituteOffset()[0],this.y-=this.getSubstituteOffset()[1]),this.setAlpha(1),this.setScale(this.getSpriteScale())}getHeldItems(){return this.scene?this.scene.findModifiers(A=>A instanceof Ht&&A.pokemonId===this.id,this.isPlayer()):[]}updateScale(){this.setScale(this.getSpriteScale())}updateSpritePipelineData(){[this.getSprite(),this.getTintSprite()].filter(A=>!!A).map(A=>A.pipelineData.teraColor=dR(this.getTeraType())),this.updateInfo(!0)}initShinySparkle(){const A=this.scene.addFieldSprite(0,0,"shiny");A.setVisible(!1),A.setOrigin(.5,1),this.add(A),this.shinySparkle=A}tryPlaySprite(A,s,R){try{A.play(R),s.play(R)}catch(n){return console.error(`Couldn't play animation for '${R}'!
Is the image for this Pokemon missing?
`,n),!1}return!0}playAnim(){this.tryPlaySprite(this.getSprite(),this.getTintSprite(),this.getBattleSpriteKey())}getFieldPositionOffset(){switch(this.fieldPosition){case 0:return[0,0];case 1:return[-32,-8];case 2:return[32,0]}}getSubstituteOffset(){return this.isPlayer()?[-30,10]:[30,-10]}isOffsetBySubstitute(){const A=this.getTag(KE);if(A){if(A.sprite===void 0)return!1;const s=this.scene.getCurrentPhase();return!(s instanceof NR&&s.getPokemon()===this)}else return!1}destroySubstitute(){const A=this.getTag(KE);A&&A.sprite&&A.sprite.destroy()}setFieldPosition(A,s){return new Promise(R=>{if(A===this.fieldPosition){R();return}const n=this.getFieldPositionOffset();this.fieldPosition=A,this.battleInfo.setMini(A!==0),this.battleInfo.setOffset(A===2);const I=this.getFieldPositionOffset(),a=I[0]-n[0],r=I[1]-n[1],S=this.getTag(KE);if(s){const o=[this];S!=null&&S.sprite&&o.push(S.sprite),this.scene.tweens.add({targets:o,x:L((l,C,M)=>M+a,"x"),y:L((l,C,M)=>M+r,"y"),duration:s,ease:"Sine.easeOut",onComplete:L(()=>R(),"onComplete")})}else this.x+=a,this.y+=r,S!=null&&S.sprite&&(S.sprite.x+=a,S.sprite.y+=r)})}getStats(A=!0){var s;return!A&&((s=this.summonData)!=null&&s.stats)?this.summonData.stats:this.stats}getStat(A,s=!0){return!s&&this.summonData&&this.summonData.stats[A]!==0?this.summonData.stats[A]:this.stats[A]}setStat(A,s,R=!0){s>=0&&(!R&&this.summonData?this.summonData.stats[A]=s:this.stats[A]=s)}getStatStages(){return this.summonData?this.summonData.statStages:[0,0,0,0,0,0,0]}getStatStage(A){return this.summonData?this.summonData.statStages[A-1]:0}setStatStage(A,s){this.summonData&&(s>=-6?this.summonData.statStages[A-1]=Math.min(s,6):this.summonData.statStages[A-1]=Math.max(s,-6))}getCritStage(A,s){const R=new ZE(0);MA(qA,A,this,s,R),this.scene.applyModifiers(eL,A.isPlayer(),A,R),this.scene.applyModifiers(JS,A.isPlayer(),R);const n=new Lt(!1);Ct(LU,A,null,!1,n)&&n.value&&(R.value+=1);const I=A.getTag(KS);return I&&(I instanceof JU?R.value+=I.typesOnAdd.includes(i.DRAGON)?2:1:R.value+=2),console.log(`crit stage: +${R.value}`),R.value}getEffectiveStat(A,s,R,n=!1,I=!1,a=!1,r=!0){var M,u;const S=new Rt(this.getStat(A,!1));this.scene.applyModifiers(jr,this.isPlayer(),this,A,S);const o=new Lt(!1);for(const h of this.scene.getField(!0))if(YQ(PI,h,A,S,this,o,r),o.value)break;n||Hh(fA,this,A,S,r);let l=S.value*this.getStatStageMultiplier(A,s,R,I,a,r);switch(A){case g.ATK:this.getTag(Y.SLOW_START)&&(l>>=1);break;case g.DEF:this.isOfType(i.ICE)&&((M=this.scene.arena.weather)==null?void 0:M.weatherType)===se.SNOW&&(l*=1.5);break;case g.SPATK:break;case g.SPDEF:this.isOfType(i.ROCK)&&((u=this.scene.arena.weather)==null?void 0:u.weatherType)===se.SANDSTORM&&(l*=1.5);break;case g.SPD:const h=this.isPlayer()?St.PLAYER:St.ENEMY;this.scene.arena.getTagOnSide(ge.TAILWIND,h)&&(l*=2),this.scene.arena.getTagOnSide(ge.GRASS_WATER_PLEDGE,h)&&(l>>=2),this.getTag(Y.SLOW_START)&&(l>>=1),this.status&&this.status.effect===Re.PARALYSIS&&(l>>=1),this.getTag(Y.UNBURDEN)&&this.hasAbility(O.UNBURDEN)&&(l*=2);break}const C=this.findTag(h=>h instanceof gS&&h.stat===A);return C&&(l*=C.multiplier),Math.floor(l)}calculateStats(){this.stats||(this.stats=[0,0,0,0,0,0]);const A=this.calculateBaseStats();for(const s of FO){const R=new ZE(Math.floor((2*A[s]+this.ivs[s])*this.level*.01));if(s===g.HP){if(R.value=R.value+this.level+10,this.scene.applyModifier(ra,this.isPlayer(),this,s,R),this.hasAbility(O.WONDER_GUARD,!1,!0)&&(R.value=1),this.hp>R.value||this.hp===void 0)this.hp=R.value;else if(this.hp){const n=this.getMaxHp();n&&R.value>n&&(this.hp+=R.value-n)}}else{R.value+=5;const n=new Rt(fo(this.getNature(),s));this.scene.applyModifier(To,this.isPlayer(),this,n),n.value!==1&&(R.value=Math.max(Math[n.value>1?"ceil":"floor"](R.value*n.value),1)),this.scene.applyModifier(ra,this.isPlayer(),this,s,R)}R.value=EE.Math.Clamp(R.value,1,Number.MAX_SAFE_INTEGER),this.setStat(s,R.value)}}calculateBaseStats(){const A=this.getSpeciesForm(!0).baseStats.slice(0);if(this.scene.applyModifiers(eo,this.isPlayer(),this,A),this.scene.applyModifiers(to,this.isPlayer(),this,A),this.isFusion()){const s=this.getFusionSpeciesForm(!0).baseStats;for(const R of FO)A[R]=Math.ceil((A[R]+s[R])/2)}else if(this.scene.gameMode.isSplicedOnly)for(const s of FO)A[s]=Math.ceil(A[s]/2);return this.scene.applyModifiers(qS,this.isPlayer(),this,A),A}getNature(){return this.customPokemonData.nature!==-1?this.customPokemonData.nature:this.nature}setNature(A){this.nature=A,this.calculateStats()}setCustomNature(A){this.customPokemonData.nature=A,this.calculateStats()}generateNature(A){A===void 0&&(A=uE(At));const s=A[_e(A.length)];this.setNature(s)}isFullHp(){return this.hp>=this.getMaxHp()}getMaxHp(){return this.getStat(g.HP)}getInverseHp(){return this.getMaxHp()-this.hp}getHpRatio(A=!1){return A?this.hp/this.getMaxHp():Math.round(this.hp/this.getMaxHp()*100)/100}generateGender(){this.species.malePercent===null?this.gender=je.GENDERLESS:this.id%256*.390625<this.species.malePercent?this.gender=je.MALE:this.gender=je.FEMALE}getGender(A){var s;return!A&&((s=this.summonData)==null?void 0:s.gender)!==void 0?this.summonData.gender:this.gender}getFusionGender(A){var s;return!A&&((s=this.summonData)==null?void 0:s.fusionGender)!==void 0?this.summonData.fusionGender:this.fusionGender}isShiny(){return this.shiny||this.isFusion()&&this.fusionShiny}getVariant(){return this.isFusion()?Math.max(this.variant,this.fusionVariant):this.variant}getLuck(){return this.luck+(this.isFusion()?this.fusionLuck:0)}isFusion(){return!!this.fusionSpecies}hasFusionSpecies(A){var s;return((s=this.fusionSpecies)==null?void 0:s.speciesId)===A}getMoveset(A){var n;const s=!A&&((n=this.summonData)!=null&&n.moveset)?this.summonData.moveset:this.moveset;let R=this.isPlayer()?Ye.MOVESET_OVERRIDE:Ye.OPP_MOVESET_OVERRIDE;return Array.isArray(R)||(R=[R]),R.length>0&&(this.isPlayer()||(this.moveset=[]),R.forEach((I,a)=>{var S;const r=((S=this.moveset[a])==null?void 0:S.ppUsed)??0;this.moveset[a]=new Ot(I,Math.min(r,ye[I].pp))})),s}getUnlockedEggMoves(){const A=[],s=this.metSpecies in BE?this.metSpecies:this.getSpeciesForm(!0).getRootSpeciesId(!0);if(s in BE)for(let R=0;R<4;R++)this.scene.gameData.starterData[s].eggMoves&1<<R&&A.push(BE[s][R]);return A}getLearnableLevelMoves(){let A=this.getLevelMoves(1,!0,!1,!0).map(s=>s[1]);return this.metBiome===-1&&!this.scene.gameMode.isFreshStartChallenge()&&!this.scene.gameMode.isDaily&&(A=this.getUnlockedEggMoves().concat(A)),Array.isArray(this.usedTMs)&&this.usedTMs.length>0&&(A=this.usedTMs.filter(s=>!A.includes(s)).concat(A)),A=A.filter(s=>!this.moveset.some(R=>(R==null?void 0:R.moveId)===s)),A}getTypes(A=!1,s=!1,R=!1){var I,a,r;const n=[];if(A){const S=this.getTeraType();if(S!==i.UNKNOWN&&(n.push(S),s))return n}if(!n.length||!A)if(!R&&((I=this.summonData)!=null&&I.types)&&this.summonData.types.length>0)this.summonData.types.forEach(S=>n.push(S));else if(this.customPokemonData.types&&this.customPokemonData.types.length>0){n.push(this.customPokemonData.types[0]);const S=this.getFusionSpeciesForm(R);if(S){const o=(a=this.fusionCustomPokemonData)==null?void 0:a.types;o&&o.length>=2&&o[1]!==n[0]?n.push(o[1]):o&&o.length===1&&o[0]!==n[0]?n.push(o[0]):S.type2!==null&&S.type2!==n[0]?n.push(S.type2):S.type1!==n[0]&&n.push(S.type1)}n.length===1&&this.customPokemonData.types.length>=2&&n.push(this.customPokemonData.types[1])}else{const S=this.getSpeciesForm(R);n.push(S.type1);const o=this.getFusionSpeciesForm(R);if(o){const l=(r=this.fusionCustomPokemonData)==null?void 0:r.types;l&&l.length>=2&&l[1]!==n[0]?n.push(l[1]):l&&l.length===1&&l[0]!==n[0]?n.push(l[0]):o.type2!==null&&o.type2!==S.type1?n.push(o.type2):o.type1!==S.type1&&n.push(o.type1)}n.length===1&&S.type2!==null&&n.push(S.type2)}if(n.length||n.push(i.UNKNOWN),n.length>1&&n.includes(i.UNKNOWN)){const S=n.indexOf(i.UNKNOWN);S!==-1&&n.splice(S,1)}return!R&&this.summonData&&this.summonData.addedType&&!n.includes(this.summonData.addedType)&&n.push(this.summonData.addedType),n.length>1&&n[0]===n[1]&&n.splice(0,1),n}isOfType(A,s=!0,R=!1,n=!1){return this.getTypes(s,R,n).some(I=>I===A)}getAbility(A=!1){var R,n;if(!A&&((R=this.summonData)!=null&&R.ability))return LE[this.summonData.ability];if(Ye.ABILITY_OVERRIDE&&this.isPlayer())return LE[Ye.ABILITY_OVERRIDE];if(Ye.OPP_ABILITY_OVERRIDE&&!this.isPlayer())return LE[Ye.OPP_ABILITY_OVERRIDE];if(this.isFusion())return!Ve((n=this.fusionCustomPokemonData)==null?void 0:n.ability)&&this.fusionCustomPokemonData.ability!==-1?LE[this.fusionCustomPokemonData.ability]:LE[this.getFusionSpeciesForm(A).getAbility(this.fusionAbilityIndex)];if(!Ve(this.customPokemonData.ability)&&this.customPokemonData.ability!==-1)return LE[this.customPokemonData.ability];let s=this.getSpeciesForm(A).getAbility(this.abilityIndex);return s===O.NONE&&(s=this.species.ability1),LE[s]}getPassiveAbility(){if(Ye.PASSIVE_ABILITY_OVERRIDE&&this.isPlayer())return LE[Ye.PASSIVE_ABILITY_OVERRIDE];if(Ye.OPP_PASSIVE_ABILITY_OVERRIDE&&!this.isPlayer())return LE[Ye.OPP_PASSIVE_ABILITY_OVERRIDE];if(!Ve(this.customPokemonData.passive)&&this.customPokemonData.passive!==-1)return LE[this.customPokemonData.passive];let A=this.species.speciesId;for(;QA.hasOwnProperty(A);)A=QA[A];return LE[u0[A]]}getAbilityAttrs(A,s=!0,R=!1){const n=[];return(!s||this.canApplyAbility())&&n.push(...this.getAbility(R).getAttrs(A)),(!s||this.canApplyAbility(!0))&&n.push(...this.getPassiveAbility().getAttrs(A)),n}hasPassive(){if(Ye.PASSIVE_ABILITY_OVERRIDE!==O.NONE&&this.isPlayer()||Ye.OPP_PASSIVE_ABILITY_OVERRIDE!==O.NONE&&!this.isPlayer())return!0;const{currentBattle:A,gameMode:s}=this.scene,R=A==null?void 0:A.waveIndex;return this instanceof rs&&((A==null?void 0:A.battleSpec)===TE.FINAL_BOSS||s.isEndlessMinorBoss(R)||s.isEndlessMajorBoss(R))?!1:this.passive||this.isBoss()}canApplyAbility(A=!1){var n,I;if(A&&!this.hasPassive())return!1;const s=A?this.getPassiveAbility():this.getAbility();if(this.isFusion()&&s.hasAttr(ss))return!1;const R=(n=this.scene)==null?void 0:n.arena;if(R.ignoreAbilities&&R.ignoringEffectSource!==this.getBattlerIndex()&&s.isIgnorable||(I=this.summonData)!=null&&I.abilitySuppressed&&!s.hasAttr(rE))return!1;if(this.isOnField()&&!s.hasAttr(Pi)){const a=new Lt(!1);if(this.scene.getField(!0).filter(r=>r!==this).map(r=>{r.getAbility().hasAttr(Pi)&&r.canApplyAbility()&&r.getAbility().getAttrs(Pi).map(S=>S.apply(this,!1,!1,a,[s])),r.getPassiveAbility().hasAttr(Pi)&&r.canApplyAbility(!0)&&r.getPassiveAbility().getAttrs(Pi).map(S=>S.apply(this,!0,!1,a,[s]))}),a.value)return!1}return(this.hp>0||s.isBypassFaint)&&!s.conditions.find(a=>!a(this))}hasAbility(A,s=!0,R){return!!(this.getAbility(R).id===A&&(!s||this.canApplyAbility())||this.getPassiveAbility().id===A&&this.hasPassive()&&(!s||this.canApplyAbility(!0)))}hasAbilityWithAttr(A,s=!0,R){return!!((!s||this.canApplyAbility())&&this.getAbility(R).hasAttr(A)||this.hasPassive()&&(!s||this.canApplyAbility(!0))&&this.getPassiveAbility().hasAttr(A))}getWeight(){const A=this.getTag(eu);let s=0;Ve(A)||(s=100*A.autotomizeCount);const R=.1,n=new Rt(this.species.weight-s);return Ct(dS,this,null,!1,n),Math.max(R,n.value)}getTeraType(){if(this.scene!==void 0){const A=this.scene.findModifier(s=>s instanceof OR&&s.pokemonId===this.id&&!!s.getBattlesLeft(),this.isPlayer());if(A)return A.teraType}return i.UNKNOWN}isTerastallized(){return this.getTeraType()!==i.UNKNOWN}isGrounded(){return!!this.getTag(FS)||!this.isOfType(i.FLYING,!0,!0)&&!this.hasAbility(O.LEVITATE)&&!this.getTag(Y.FLOATING)&&!this.getTag(Tn)}isTrapped(A=[],s=!0){var S;const R=this.getTag(Y.COMMANDED);if((S=R==null?void 0:R.getSourcePokemon(this.scene))!=null&&S.isActive(!0))return!0;if(this.isOfType(i.GHOST))return!1;const n=new Lt(!1);(this.isPlayer()?this.scene.getEnemyField():this.scene.getPlayerField()).filter(o=>o.switchOutStatus===!1).forEach(o=>JQ(dU,o,n,this,A,s));const r=this.isPlayer()?St.PLAYER:St.ENEMY;return n.value||!!this.getTag(gR)||!!this.scene.arena.getTagOnSide(ge.FAIRY_LOCK,r)}getMoveType(A,s=!0){const R=new Rt(A.type);return MA(is,this,null,A,R),wO(sn,this,null,A,s,R),this.scene.arena.applyTags(ge.ION_DELUGE,s,R),this.getTag(Y.ELECTRIFIED)&&(R.value=i.ELECTRIC),R.value}getMoveEffectiveness(A,s,R=!1,n=!0,I){var l,C;if(!Ve((l=this.turnData)==null?void 0:l.moveEffectiveness))return(C=this.turnData)==null?void 0:C.moveEffectiveness;if(s.hasAttr(xS))return 1;const a=A.getMoveType(s),r=new Rt(s.category!==Mt.STATUS||s.hasAttr(Iu)?this.getAttackTypeEffectiveness(a,A,!1,n,s):1);MA(Ia,A,this,s,r),this.getTypes(!0,!0).find(M=>s.isTypeImmune(A,this,M))&&(r.value=0),this.getTag(jU)&&this.getMoveType(s)===i.FIRE&&(r.value*=2);const S=I??new Lt(!1);R||(dn(iO,this,A,s,S,n,r),S.value||dn(Kn,this,A,s,S,n,r),S.value||(this.isPlayer()?this.scene.getPlayerField():this.scene.getEnemyField()).forEach(u=>dn(nr,u,A,s,S)));const o=this.findTags(M=>M instanceof QU&&M.immuneType===a);for(const M of o)if(s&&!s.getAttrs(_R).some(u=>u.tagType===M.tagType)){r.value=0;break}return!R&&s.category!==Mt.STATUS&&dn(ZC,this,A,s,S,n,r),s.category===Mt.STATUS&&s.hitsSubstitute(A,this)&&(r.value=0),S.value?0:r.value}getAttackTypeEffectiveness(A,s,R=!1,n=!0,I){var l;if(A===i.STELLAR)return this.isTerastallized()?2:1;const a=this.getTypes(!0,!0),r=this.scene.arena;if(A===i.GROUND&&(this.isGrounded()||r.hasTag(ge.GRAVITY))){const C=a.indexOf(i.FLYING);C>-1&&a.splice(C,1)}let S=a.map(C=>{const M=new Rt(wh(A,C));if(Fs(this.scene.gameMode,Us.TYPE_EFFECTIVENESS,M),I&&MA(Xu,null,this,I,M,C),s){const u=new Lt(!1);if(s.isActive(!0)&&s.hasAbilityWithAttr(yr)&&Ct(yr,s,u,n,A,C),u.value&&M.value===0||this.findTags(P=>P instanceof br).some(P=>P.ignoreImmunity(C,A))&&M.value===0)return 1}return M.value}).reduce((C,M)=>C*M,1);const o=new Rt(wh(A,i.FLYING));return Fs(this.scene.gameMode,Us.TYPE_EFFECTIVENESS,o),!R&&((l=r.weather)==null?void 0:l.weatherType)===se.STRONG_WINDS&&!r.weather.isEffectSuppressed(this.scene)&&this.isOfType(i.FLYING)&&o.value===2&&(S/=2,n||this.scene.queueMessage(D.t("weather:strongWindsEffectMessage"))),S}getMatchupScore(A){const s=this.getTypes(!0),R=A.getTypes(!0,!0),n=(this.isActive(!0)?this.getEffectiveStat(g.SPD,A):this.getStat(g.SPD,!1))>=A.getEffectiveStat(g.SPD,this);let I=A.getAttackTypeEffectiveness(s[0],this)*(n?1.25:1),a=1/Math.max(this.getAttackTypeEffectiveness(R[0],A),.25);s.length>1&&(I*=A.getAttackTypeEffectiveness(s[1],this)),R.length>1&&(a*=1/Math.max(this.getAttackTypeEffectiveness(R[1],A),.25));let r=this.getHpRatio()+(1-A.getHpRatio());return n&&(r=Math.min(r*1.5,1)),(I+a)*r}getEvolution(){if(kt.hasOwnProperty(this.species.speciesId)){const A=kt[this.species.speciesId];for(const s of A)if(!s.item&&this.level>=s.level&&(Ve(s.preFormKey)||this.getFormKey()===s.preFormKey)&&(s.condition===null||s.condition.predicate(this)))return s}if(this.isFusion()&&this.fusionSpecies&&kt.hasOwnProperty(this.fusionSpecies.speciesId)){const A=kt[this.fusionSpecies.speciesId].map(s=>new pn(this.species.speciesId,s));for(const s of A)if(!s.item&&this.level>=s.level&&(Ve(s.preFormKey)||this.getFusionFormKey()===s.preFormKey)&&(s.condition===null||s.condition.predicate(this)))return s}return null}getLevelMoves(A,s=!1,R=!1,n=!1,I=0){const a=[];let r=[];if(A||(A=this.level),I===4&&this.fusionSpecies)r=this.getFusionSpeciesForm(!0).getLevelMoves().filter(S=>s&&S[0]===Ae||n&&S[0]===Z||S[0]>0);else{if(R){const S=this.species.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let o=0;o<S.length;o++){const l=Bi(S[o][0],this.formIndex).getLevelMoves();n?r.push(...l):r.push(...l.filter(C=>s&&C[0]===Ae||(!o||C[0]>1)&&(o===S.length-1||C[0]<=S[o+1][1])))}}else r=this.getSpeciesForm(!0).getLevelMoves().filter(S=>s&&S[0]===Ae||n&&S[0]===Z||S[0]>0);if(this.fusionSpecies&&I!==5)if(R){const S=this.fusionSpecies.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let o=0;o<S.length;o++){const l=Bi(S[o][0],this.fusionFormIndex).getLevelMoves();n?r.push(...l.filter(C=>s&&C[0]===Ae||C[0]!==Ae)):r.push(...l.filter(C=>s&&C[0]===Ae||(!o||C[0]>1)&&(o===S.length-1||C[0]<=S[o+1][1])))}}else r.push(...this.getFusionSpeciesForm(!0).getLevelMoves().filter(S=>s&&S[0]===Ae||n&&S[0]===Z||S[0]>0))}return r.sort((S,o)=>S[0]>o[0]?1:S[0]<o[0]?-1:0),r=r.filter(S=>{const o=S[0],l=o<A,C=o===0&&s;return!(o>this.level)&&(n||!l||C)}),r&&this.getUniqueMoves(r,a),a}getUniqueMoves(A,s){const R=[];for(const n of A)R.find(I=>I===n[1])||(R.push(n[1]),s.push(n))}getEggMoves(){return BE[this.getSpeciesForm().getRootSpeciesId()]}setMove(A,s){var n;const R=s?new Ot(s):null;this.moveset[A]=R,(n=this.summonData)!=null&&n.moveset&&(this.summonData.moveset[A]=R)}trySetShiny(A){if(this.scene.gameMode.isEndless&&this.scene.arena.biomeType===N.END)return!1;const s=(this.id&4294901760)>>>16,R=this.id&65535,n=this.scene.gameData.trainerId^this.scene.gameData.secretId,I=s^R,a=new ZE(vV);return A===void 0?(this.scene.eventManager.isEventActive()&&(a.value*=this.scene.eventManager.getShinyMultiplier()),this.hasTrainer()||this.scene.applyModifiers(la,!0,a)):a.value=A,this.shiny=(n^I)<a.value,this.shiny&&this.initShinySparkle(),this.shiny}trySetShinySeed(A,s){const R=new Rt(vV);return A===void 0||s?(A!==void 0&&s&&(R.value=A),this.scene.eventManager.isEventActive()&&(R.value*=this.scene.eventManager.getShinyMultiplier()),this.hasTrainer()||this.scene.applyModifiers(la,!0,R)):R.value=A,this.shiny=_e(65536)<R.value,this.shiny&&(this.variant=this.generateShinyVariant(),this.luck=this.variant+1+(this.fusionShiny?this.fusionVariant+1:0),this.initShinySparkle()),this.shiny}generateShinyVariant(){var n;const A=this.formIndex;let s=this.species.speciesId;if(this.species.forms.length>0){const I=(n=this.species.forms[A])==null?void 0:n.formKey;I&&(s=`${s}-${I}`)}if(!this.shiny||!Zs.hasOwnProperty(s)&&!Zs.hasOwnProperty(this.species.speciesId))return 0;const R=new Rt(0);return this.scene.executeWithSeedOffset(()=>{R.value=_e(10)},this.id,this.scene.waveSeed),R.value>=r6?0:R.value>=L6?1:2}generateFusionSpecies(A){var r;const s=new Rt(VV);this.hasTrainer()||this.scene.applyModifiers(zn,!0,s);const R=!_e(s.value),n=_e(2),I=A?S=>kt.hasOwnProperty(S.speciesId)&&!QA.hasOwnProperty(S.speciesId)&&!S.subLegendary&&!S.legendary&&!S.mythical&&!S.isTrainerForbidden()&&S.speciesId!==this.species.speciesId&&S.speciesId!==e.DITTO:this.species.getCompatibleFusionSpeciesFilter();let a;A&&this instanceof wE&&Ye.STARTER_FUSION_SPECIES_OVERRIDE?a=xe(Ye.STARTER_FUSION_SPECIES_OVERRIDE):this instanceof rs&&Ye.OPP_FUSION_SPECIES_OVERRIDE&&(a=xe(Ye.OPP_FUSION_SPECIES_OVERRIDE)),this.fusionSpecies=a??this.scene.randomSpecies(((r=this.scene.currentBattle)==null?void 0:r.waveIndex)||0,this.level,!1,I,!0),this.fusionAbilityIndex=this.fusionSpecies.abilityHidden&&R?2:this.fusionSpecies.ability2!==this.fusionSpecies.ability1?n:0,this.fusionShiny=this.shiny,this.fusionVariant=this.variant,this.fusionSpecies.malePercent===null?this.fusionGender=je.GENDERLESS:this.id%256*.390625<this.fusionSpecies.malePercent?this.fusionGender=je.MALE:this.fusionGender=je.FEMALE,this.fusionFormIndex=this.scene.getSpeciesFormIndex(this.fusionSpecies,this.fusionGender,this.getNature(),!0),this.fusionLuck=this.luck,this.generateName()}clearFusionSpecies(){this.fusionSpecies=null,this.fusionFormIndex=0,this.fusionAbilityIndex=0,this.fusionShiny=!1,this.fusionVariant=0,this.fusionGender=0,this.fusionLuck=0,this.fusionCustomPokemonData=null,this.generateName(),this.calculateStats()}generateAndPopulateMoveset(){var l,C;this.moveset=[];let A=[];const s=this.getLevelMoves(1,!0,!0);if(!s){console.warn("Error encountered trying to generate moveset for:",this.species.name);return}for(let M=0;M<s.length;M++){const u=s[M];if(this.level<u[0])break;let h=u[0];h===0&&(h=50),h===1&&ye[u[1]].power>=80&&(h=40),!A.some(P=>P[0]===u[1])&&!ye[u[1]].name.endsWith(" (N)")&&A.push([u[1],h])}if(this.hasTrainer()){const M=Object.keys(bI);for(const u of M){const h=parseInt(u);let P=!1;for(const G of bI[u])if(Array.isArray(G)){if(G[0]===this.species.speciesId||this.fusionSpecies&&G[0]===this.fusionSpecies.speciesId&&G.slice(1).indexOf(this.species.forms[this.formIndex])>-1){P=!0;break}}else if(G===this.species.speciesId||this.fusionSpecies&&G===this.fusionSpecies.speciesId){P=!0;break}P&&!A.some(G=>G[0]===h)&&!ye[h].name.endsWith(" (N)")&&(Ll[h]===v.COMMON&&this.level>=15?A.push([h,4]):Ll[h]===v.GREAT&&this.level>=30?A.push([h,8]):Ll[h]===v.ULTRA&&this.level>=50&&A.push([h,14]))}if(this.level>=60){for(let h=0;h<3;h++){const P=BE[this.species.getRootSpeciesId()][h];!A.some(G=>G[0]===P)&&!ye[P].name.endsWith(" (N)")&&A.push([P,40])}const u=BE[this.species.getRootSpeciesId()][3];if(this.level>=170&&!A.some(h=>h[0]===u)&&!ye[u].name.endsWith(" (N)")&&!this.isBoss()&&A.push([u,30]),this.fusionSpecies){for(let P=0;P<3;P++){const G=BE[this.fusionSpecies.getRootSpeciesId()][P];!A.some(d=>d[0]===G)&&!ye[G].name.endsWith(" (N)")&&A.push([G,40])}const h=BE[this.fusionSpecies.getRootSpeciesId()][3];this.level>=170&&!A.some(P=>P[0]===h)&&!ye[h].name.endsWith(" (N)")&&!this.isBoss()&&A.push([h,30])}}}this.isBoss()&&(A=A.filter(M=>!ye[M[0]].hasAttr(yn))),A=A.filter(M=>!ye[M[0]].hasAttr(na)),this.hasTrainer()&&(A=A.filter(M=>!ye[M[0]].hasAttr(vO)),A=A.map(M=>[M[0],M[1]*(ye[M[0]].hasAttr(yn)?.5:1)]),A=A.map(M=>[M[0],M[1]*(ye[M[0]].hasAttr(na)?.5:1)]),A=A.map(M=>[M[0],M[1]*(ye[M[0]].getAttrs(De).some(u=>u.stages>1&&u.selfTarget)?1.25:1)]),A=A.map(M=>[M[0],M[1]*(ye[M[0]].isChargingMove()||ye[M[0]].hasAttr(wR)?.7:1)]));const R=Math.min(A.reduce((M,u)=>Math.max(ye[u[0]].power,M),40),90);A=A.map(M=>[M[0],M[1]*(ye[M[0]].category===Mt.STATUS?1:Math.max(Math.min(ye[M[0]].power/R,1),.5))]);const n=this.getStat(g.ATK),I=this.getStat(g.SPATK),a=n>I?Mt.SPECIAL:Mt.PHYSICAL,r=a===Mt.PHYSICAL?n/I:I/n;A=A.map(M=>[M[0],M[1]*(ye[M[0]].category===a?r:1)]);let S=.9;this.hasTrainer()&&(S+=.7),this.isBoss()&&(S+=.4);const o=A.map(M=>[M[0],Math.ceil(Math.pow(M[1],S)*100)]);if(this.hasTrainer()||this.isBoss()){const M=o.filter(u=>ye[u[0]].category!==Mt.STATUS&&this.isOfType(ye[u[0]].type));if(M.length){const u=M.reduce((G,d)=>G+d[1],0);let h=_e(u),P=0;for(;h>M[P][1];)h-=M[P++][1];this.moveset.push(new Ot(M[P][0],0,0))}}else{const M=o.filter(u=>ye[u[0]].category!==Mt.STATUS);if(M.length){const u=M.reduce((G,d)=>G+d[1],0);let h=_e(u),P=0;for(;h>M[P][1];)h-=M[P++][1];this.moveset.push(new Ot(M[P][0],0,0))}}for(;o.length>this.moveset.length&&this.moveset.length<4;){this.hasTrainer()?A=o.filter(P=>!this.moveset.some(G=>P[0]===(G==null?void 0:G.moveId))).map(P=>{let G;return this.moveset.some(d=>(d==null?void 0:d.getMove().category)!==Mt.STATUS&&(d==null?void 0:d.getMove().type)===ye[P[0]].type)?G=Math.ceil(Math.sqrt(P[1])):ye[P[0]].category!==Mt.STATUS?G=Math.ceil(P[1]/Math.max(Math.pow(4,this.moveset.filter(d=>((d==null?void 0:d.getMove().power)??0)>1).length)/8,.5)*(this.isOfType(ye[P[0]].type)?2:1)):G=P[1],[P[0],G]}):A=o.filter(P=>!this.moveset.some(G=>P[0]===(G==null?void 0:G.moveId)));const M=A.reduce((P,G)=>P+G[1],0);let u=_e(M),h=0;for(;u>A[h][1];)u-=A[h++][1];this.moveset.push(new Ot(A[h][0],0,0))}(this.isPlayer()||!((l=this.scene.currentBattle)!=null&&l.isBattleMysteryEncounter())||!((C=this.scene.currentBattle)!=null&&C.mysteryEncounter))&&this.scene.triggerPokemonFormChange(this,xI)}trySelectMove(A,s){const R=this.getMoveset().length>A?this.getMoveset()[A]:null;return(R==null?void 0:R.isUsable(this,s))??!1}showInfo(){if(!this.battleInfo.visible){const A=this.scene.fieldUI.getAll().slice(0,4).filter(s=>s instanceof MT&&s instanceof Dl===this.isPlayer()).find(()=>!0);!A||!this.getFieldIndex()?(this.scene.fieldUI.sendToBack(this.battleInfo),this.scene.sendTextToBack()):this.scene.fieldUI.moveAbove(this.battleInfo,A),this.battleInfo.setX(this.battleInfo.x+(this.isPlayer()?150:this.isBoss()?-198:-150)),this.battleInfo.setVisible(!0),this.isPlayer()&&(this.battleInfo.expMaskRect.x+=150),this.scene.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"-=150":`+=${this.isBoss()?246:150}`,duration:1e3,ease:"Cubic.easeOut"})}}hideInfo(){return new Promise(A=>{this.battleInfo&&this.battleInfo.visible?this.scene.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"+=150":`-=${this.isBoss()?246:150}`,duration:500,ease:"Cubic.easeIn",onComplete:L(()=>{this.isPlayer()&&(this.battleInfo.expMaskRect.x-=150),this.battleInfo.setVisible(!1),this.battleInfo.setX(this.battleInfo.x-(this.isPlayer()?150:this.isBoss()?-198:-150)),A()},"onComplete")}):A()})}setSwitchOutStatus(A){this.switchOutStatus=A}updateInfo(A){return this.battleInfo.updateInfo(this,A)}updateEffectiveness(A){this.battleInfo.updateEffectiveness(A)}toggleStats(A){this.battleInfo.toggleStats(A)}toggleFlyout(A){this.battleInfo.toggleFlyout(A)}addExp(A){const s=this.scene.getMaxExpLevel(),R=this.exp;for(this.exp+=A;this.level<s&&this.exp>=ZR(this.level+1,this.species.growthRate);)this.level++;this.level>=s&&(console.log(R,this.exp,ZR(this.level,this.species.growthRate)),this.exp=Math.max(ZR(this.level,this.species.growthRate),R)),this.levelExp=this.exp-ZR(this.level,this.species.growthRate)}isOpponent(A){return this.isPlayer()!==A.isPlayer()}getOpponent(A){const s=this.getOpponents()[A];return s.summonData?s:null}getOpponents(){return(this.isPlayer()?this.scene.getEnemyField():this.scene.getPlayerField()).filter(A=>A.isActive())}getOpponentDescriptor(){const A=this.getOpponents();return A.length===1?A[0].name:this.isPlayer()?D.t("arenaTag:opposingTeam"):D.t("arenaTag:yourTeam")}getAlly(){return(this.isPlayer()?this.scene.getPlayerField():this.scene.getEnemyField())[this.getFieldIndex()?0:1]}getAlliedField(){return this instanceof wE?this.scene.getPlayerField():this.scene.getEnemyField()}getStatStageMultiplier(A,s,R,n=!1,I=!1,a=!0){const r=new ZE(this.getStatStage(A)),S=new Lt(!1);if(s){if(I)switch(A){case g.ATK:case g.SPATK:r.value=Math.max(r.value,0);break;case g.DEF:case g.SPDEF:r.value=Math.min(r.value,0);break}n||Ct(Ki,s,null,a,A,S),R&&MA(wI,this,s,R,S)}if(!S.value){const o=new Rt(Math.max(2,2+r.value)/Math.max(2,2-r.value));return this.scene.applyModifiers(Jr,this.isPlayer(),A,o),Math.min(o.value,4)}return 1}getAccuracyMultiplier(A,s){if(s.hasAttr(mi))return 1;const n=new ZE(this.getStatStage(g.ACC)),I=new ZE(A.getStatStage(g.EVA)),a=new Lt(!1),r=new Lt(!1);Ct(Ki,A,null,!1,g.ACC,a),Ct(Ki,this,null,!1,g.EVA,r),MA(wI,this,A,s,r),this.scene.applyModifiers(Jr,this.isPlayer(),g.ACC,n),n.value=a.value?0:Math.min(n.value,6),I.value=r.value?0:I.value,A.findTag(l=>l instanceof br)&&(I.value=Math.min(0,I.value));const S=new Rt(1);n.value!==I.value&&(S.value=n.value>I.value?(3+Math.min(n.value-I.value,6))/3:3/(3+Math.min(I.value-n.value,6))),Hh(fA,this,g.ACC,S,!1,s);const o=new Rt(1);return Hh(fA,A,g.EVA,o),S.value/o.value}getBaseDamage(A,s,R,n=!1,I=!1,a=!1,r=!0){const S=R===Mt.PHYSICAL,o=2*A.level/5+2,l=s.calculateBattlePower(A,this,r),C=new Rt(A.getEffectiveStat(S?g.ATK:g.SPATK,this,void 0,I,n,a,r));MA(ia,A,this,s,C);const M=new Rt(this.getEffectiveStat(S?g.DEF:g.SPDEF,A,s,n,I,a,r));MA(yu,A,this,s,M);const u=o*l*C.value/M.value/50+2;return r||console.log("base damage",u,s.name,l,C.value,M.value),u}getAttackDamage(A,s,R=!1,n=!1,I=!1,a=!0){var z,te;const r=new Rt(0),S=this.isPlayer()?St.PLAYER:St.ENEMY,o=new Rt(s.category);MA(Ji,A,this,s,o);const l=o.value,C=A.getMoveType(s),M=new Lt(!1),u=this.getMoveEffectiveness(A,s,R,a,M),h=l===Mt.PHYSICAL,P=new Rt(this.scene.arena.getAttackTypeMultiplier(C,A.isGrounded()));MA(ou,A,this,s,P);const G=u*P.value===0;if(M.value||G)return{cancelled:M.value,result:s.id===t.SHEER_COLD?11:5,damage:0};const d=new Rt(0);if(MA(DO,A,this,s,d),d.value){const Le=new Rt(1);return A.scene.applyModifiers(Jn,A.isPlayer(),A,s.id,null,Le),d.value=Yt(d.value*Le.value),{cancelled:!1,result:1,damage:d.value}}const H=new Lt(!1);if(MA(vO,A,this,s,H),H.value)return{cancelled:!1,result:4,damage:this.hp};const f=this.getBaseDamage(A,s,l,R,n,I,a),{targets:K,multiple:W}=Cn(A,s.id),k=(W?K.length:1)>1?.75:1,Q=new Rt(1);A.scene.applyModifiers(Jn,A.isPlayer(),A,s.id,null,Q),n||wO(SS,A,this,s,a,null,Q);const j=new ZE(1);this.getTag(Y.RECEIVE_DOUBLE_DAMAGE)&&(j.value=2);const J=new Rt(I?1.5:1);Ct(NU,A,null,a,J);const ne=a?1:this.randSeedIntRange(85,100)/100,x=A.getTypes(),q=A.getTeraType(),F=x.includes(C),Te=new Rt(1);F&&(Te.value+=.5),MA(Nr,A,this,s,Te),q!==i.UNKNOWN&&q===C&&(Te.value+=.5),n||Ct(bC,A,null,a,Te),Te.value=Math.min(Te.value,2.25);const He=new Rt(1);if(h&&A.status&&A.status.effect===Re.BURN&&!s.hasAttr(_u)){const Le=new Lt(!1);n||Ct(PU,A,Le,a),Le.value||(He.value=.5)}const ue=new Rt(1);this.scene.arena.applyTagsForSide(Kr,S,a,A,l,ue);const me=new Rt(1);s.getAttrs(_R).filter(Le=>Le.doubleDamage).forEach(Le=>{this.getTag(Le.tagType)&&(me.value*=2)});const Me=((z=this.scene.arena.terrain)==null?void 0:z.terrainType)===Nt.MISTY&&this.isGrounded()&&C===i.DRAGON?.5:1;r.value=Yt(f*k*Q.value*P.value*j.value*J.value*ne*Te.value*u*He.value*ue.value*me.value*Me),n||wO(jC,A,this,s,a,r),A.isPlayer()||this.scene.applyModifiers(Do,!1,r),this.isPlayer()||this.scene.applyModifiers(Mo,!1,r),R||(dn(sR,this,A,s,M,a,r),this.scene.currentBattle.double&&((te=this.getAlly())!=null&&te.isActive(!0))&&dn(kC,this.getAlly(),A,s,M,a,r)),MA(ru,A,this,s,r),this.isFullHp()&&!R&&dn(xC,this,A,s,M,!1,r),a||console.log("damage",r.value,s.name);let Ie;return u<1?Ie=3:u>1?Ie=2:Ie=1,{cancelled:M.value,result:Ie,damage:r.value}}apply(A,s){const R=this.isPlayer()?St.PLAYER:St.ENEMY,n=new Rt(s.category);if(MA(Ji,A,this,s,n),n.value===Mt.STATUS){const I=new Lt(!1),a=this.getMoveEffectiveness(A,s,!1,!1,I);return!I.value&&a===0&&this.scene.queueMessage(D.t("battle:hitResultNoEffect",{pokemonName:ee(this)})),a===0?5:6}else{let I;const a=new Lt(!1),r=A.getTag(Y.ALWAYS_CRIT);if(MA(nn,A,this,s,a),Ct(TU,A,null,!1,a,this,s),a.value||r)I=!0;else{const d=[24,8,2,1][Math.max(0,Math.min(this.getCritStage(A,s),3))];I=d===1||!this.scene.randBattleSeedInt(d)}const S=this.scene.arena.getTagOnSide(wC,R),o=new Lt(!1);Ct(DS,this,null,!1,o),(S||o.value||Ye.NEVER_CRIT_OVERRIDE)&&(I=!1);const{cancelled:l,result:C,damage:M}=this.getAttackDamage(A,s,!1,!1,I,!1),u=A.findTag(d=>d instanceof xr&&d.boostedType===A.getMoveType(s));if(u!=null&&u.oneUse&&A.removeTag(u.tagType),l||C===11||C===5)return A.stopMultiHit(this),l||(C===11?this.scene.queueMessage(D.t("battle:hitResultImmune",{pokemonName:ee(this)})):this.scene.queueMessage(D.t("battle:hitResultNoEffect",{pokemonName:ee(this)}))),C;const h=this.getTag(Y.DESTINY_BOND),P=this.getTag(Y.GRUDGE),G=C===4;if(M){this.lapseTags(QE.HIT);const d=this.getTag(KE),H=!!d&&s.hitsSubstitute(A,this);H&&(d.hp-=M),!this.isPlayer()&&M>=this.hp&&this.scene.applyModifiers(_o,!1,this);const f=this.damageAndUpdate(H?0:M,C,I,G,G,!0,A);if(f>0){A.isPlayer()&&(this.scene.validateAchvs(DI,new Rt(f)),f>this.scene.gameData.gameStats.highestDamage&&(this.scene.gameData.gameStats.highestDamage=f)),A.turnData.totalDamageDealt+=f,A.turnData.singleHitDamageDealt=f,this.turnData.damageTaken+=f,this.battleData.hitCount++;const K={move:s.id,result:C,damage:f,critical:I,sourceId:A.id,sourceBattlerIndex:A.getBattlerIndex()};this.turnData.attacksReceived.unshift(K),A.isPlayer()&&!this.isPlayer()&&this.scene.applyModifiers($n,!0,A,new Rt(f))}}if(I&&this.scene.queueMessage(D.t("battle:hitResultCriticalHit")),A.turnData.hitsLeft===1||this.isFainted())switch(C){case 2:this.scene.queueMessage(D.t("battle:hitResultSuperEffective"));break;case 3:this.scene.queueMessage(D.t("battle:hitResultNotVeryEffective"));break;case 4:this.scene.queueMessage(D.t("battle:hitResultOneHitKO"));break}return this.isFainted()&&(this.scene.setPhaseQueueSplice(),this.scene.unshiftPhase(new aD(this.scene,this.getBattlerIndex(),G,h,P,A)),this.destroySubstitute(),this.lapseTag(Y.COMMANDED),this.resetSummonData()),C}}damage(A,s=!1,R=!1,n=!1){if(this.isFainted())return 0;const I=new Lt(!1);return!R&&this.hp-A<=0&&(this.hp>=1&&this.getTag(Y.ENDURING)?I.value=this.lapseTag(Y.ENDURING):this.hp>1&&this.getTag(Y.STURDY)?I.value=this.lapseTag(Y.STURDY):this.hp>=1&&this.getTag(Y.ENDURE_TOKEN)&&(I.value=this.lapseTag(Y.ENDURE_TOKEN)),I.value||this.scene.applyModifiers(Eo,this.isPlayer(),this,I),I.value&&(A=this.hp-1)),A=Math.min(A,this.hp),this.hp=this.hp-A,this.isFainted()&&!n&&(this.scene.setPhaseQueueSplice(),this.scene.unshiftPhase(new aD(this.scene,this.getBattlerIndex(),R)),this.destroySubstitute(),this.lapseTag(Y.COMMANDED),this.resetSummonData()),A}damageAndUpdate(A,s,R=!1,n=!1,I=!1,a=!1,r){const S=new ID(this.scene,this.getBattlerIndex(),A,s,R);return this.scene.unshiftPhase(S),this.switchOutStatus&&r&&(A=0),A=this.damage(A,n,I,a),S.updateAmount(A),(!r||r.turnData.hitCount<=1)&&C1(wr,this,A,this.hasPassive(),!1,[],r),A}heal(A){const s=Math.min(A,this.getMaxHp()-this.hp);return this.hp+=s,s}isBossImmune(){return this.isBoss()}isMax(){const A=[oe.GIGANTAMAX,oe.GIGANTAMAX_RAPID,oe.GIGANTAMAX_SINGLE,oe.ETERNAMAX];return A.includes(this.getFormKey())||!!this.getFusionFormKey()&&A.includes(this.getFusionFormKey())}canAddTag(A){if(this.getTag(A))return!1;const s=new Wt(A,0,0),R=new Lt(!1);return sl(Rn,this,s,R,!0),this.getAlliedField().forEach(I=>sl(Wr,I,s,R,!0)),!R.value}addTag(A,s=0,R,n){const I=this.getTag(A);if(I)return I.onOverlap(this),!1;const a=A8(A,s,R,n),r=new Lt(!1);return sl(Rn,this,a,r),this.getAlliedField().forEach(o=>sl(Wr,o,a,r)),!r.value&&a.canAdd(this)?(this.summonData.tags.push(a),a.onAdd(this),!0):!1}getTag(A){return this.summonData?A instanceof Function?this.summonData.tags.find(s=>s instanceof A):this.summonData.tags.find(s=>s.tagType===A):null}findTag(A){return this.summonData?this.summonData.tags.find(s=>A(s)):null}findTags(A){return this.summonData?this.summonData.tags.filter(s=>A(s)):[]}lapseTag(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.find(n=>n.tagType===A);return R&&!R.lapse(this,QE.CUSTOM)&&(R.onRemove(this),s.splice(s.indexOf(R),1)),!!R}lapseTags(A){if(!this.summonData)return;const s=this.summonData.tags;s.filter(R=>A===QE.FAINT||R.lapseTypes.some(n=>n===A)&&!R.lapse(this,A)).forEach(R=>{R.onRemove(this),s.splice(s.indexOf(R),1)})}removeTag(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.find(n=>n.tagType===A);return R&&(R.onRemove(this),s.splice(s.indexOf(R),1)),!!R}findAndRemoveTags(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.filter(n=>A(n));for(const n of R)n.turnCount=0,n.onRemove(this),s.splice(s.indexOf(n),1);return!0}removeTagsBySourceId(A){this.findAndRemoveTags(s=>s.isSourceLinked()&&s.sourceId===A)}transferTagsBySourceId(A,s){if(!this.summonData)return;this.summonData.tags.filter(n=>n.sourceId===A).forEach(n=>n.sourceId=s)}transferSummon(A){for(const s of MO){const R=A.getStatStage(s);this instanceof wE&&R===6&&this.scene.validateAchv(lt.TRANSFER_MAX_STAT_STAGE),this.setStatStage(s,R)}for(const s of A.summonData.tags)s.isBatonPassable&&(s instanceof Au&&s.swapStat(this),this.summonData.tags.push(s));this.updateInfo()}isMoveRestricted(A,s){return this.getRestrictingTag(A,s)!==null}isMoveTargetRestricted(A,s,R){for(const n of this.findTags(I=>I instanceof UO))if(n.isMoveTargetRestricted(A,s,R))return n!==null;return!1}getRestrictingTag(A,s,R){for(const n of this.findTags(I=>I instanceof UO)){if(n.isMoveRestricted(A,s))return n;if(s&&R&&n.isMoveTargetRestricted(A,s,R))return n}return null}getMoveHistory(){return this.battleSummonData.moveHistory}pushMoveHistory(A){var s;this.isOnField()&&(A.turn=(s=this.scene.currentBattle)==null?void 0:s.turn,this.getMoveHistory().push(A))}getLastXMoves(A=1){const s=this.getMoveHistory();return A>=0?s.slice(Math.max(s.length-A,0)).reverse():s.slice(0).reverse()}getMoveQueue(){return this.summonData.moveQueue}stopMultiHit(A){const s=this.scene.getCurrentPhase();s instanceof NR&&s.getUserPokemon()===this&&s.stopMultiHit(A)}changeForm(A){return new Promise(s=>{this.formIndex=Math.max(this.species.forms.findIndex(n=>n.formKey===A.formKey),0),this.generateName();const R=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=R&&(this.abilityIndex=R-1),this.scene.gameData.setPokemonSeen(this,!1),this.setScale(this.getSpriteScale()),this.loadAssets().then(()=>{this.calculateStats(),this.scene.updateModifiers(this.isPlayer(),!0),Promise.all([this.updateInfo(),this.scene.updateFieldScale()]).then(()=>s())})})}cry(A,s){const R=s||this.scene,n=this.getSpeciesForm().cry(R,A);let I=n.totalDuration*1e3;if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm()){let a=this.getFusionSpeciesForm().cry(R,A,!0);I=Math.min(I,a.totalDuration*1e3),a.destroy(),R.time.delayedCall(Et(Math.ceil(I*.4)),()=>{try{$R.fadeOut(R,n,Et(Math.ceil(I*.2))),a=this.getFusionSpeciesForm().cry(R,Object.assign({seek:Math.max(a.totalDuration*.4,0)},A)),$R.fadeIn(R,a,Et(Math.ceil(I*.2)),R.masterVolume*R.fieldVolume,0)}catch(r){console.error(r)}})}return n}faintCry(A){if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm())return this.fusionFaintCry(A);const s=this.species.getCryKey(this.formIndex);let R=.85;const n=this.scene.playSound(s,{rate:R});if(!n||this.scene.fieldVolume===0)return A();const I=this.getSprite(),a=this.getTintSprite(),r=Math.max(this.scene.sound.get(s).totalDuration*50,25);let S=0,o;I.anims.pause(),a==null||a.anims.pause();let l=this.scene.time.addEvent({delay:Et(r),repeat:-1,callback:L(()=>{for(o=I.anims.msPerFrame/R,S+=r;S>o;)I.anims.duration&&(I.anims.nextFrame(),a==null||a.anims.nextFrame()),S-=o;n&&!n.pendingRemove?(R*=.99,n.setRate(R)):(l==null||l.destroy(),l=null,A&&A())},"callback")});this.scene.time.delayedCall(Et(3e3),()=>{!l||!this.scene||(n!=null&&n.isPlaying&&n.stop(),l.destroy(),A&&A())})}fusionFaintCry(A){const s=this.species.getCryKey(this.formIndex);let R=0,n=.85;const I=this.scene.playSound(s,{rate:n}),a=this.getSprite(),r=this.getTintSprite();let S=I.totalDuration*1e3;const o=this.fusionSpecies.getCryKey(this.fusionFormIndex);let l=this.scene.playSound(o,{rate:n});if(!I||!l||this.scene.fieldVolume===0)return A();l.stop(),S=Math.min(S,l.totalDuration*1e3),l.destroy();const C=Math.max(S*.05,25);let M=0,u=0;const h=Math.ceil(S*.4);for(;u<h;)++R,u+=C*n,n*=.99;M=R,R=0,n=.85;let P=0,G;a.anims.pause(),r==null||r.anims.pause();let d=this.scene.time.addEvent({delay:Et(C),repeat:-1,callback:L(()=>{for(++R,G=a.anims.msPerFrame/n,P+=C;P>G;)a.anims.duration&&(a.anims.nextFrame(),r==null||r.anims.nextFrame()),P-=G;R===M&&o&&($R.fadeOut(this.scene,I,Et(Math.ceil(S/n*.2))),l=this.scene.playSound(o,Object.assign({seek:Math.max(l.totalDuration*.4,0),rate:n})),$R.fadeIn(this.scene,l,Et(Math.ceil(S/n*.2)),this.scene.masterVolume*this.scene.fieldVolume,0)),n*=.99,I&&!I.pendingRemove&&I.setRate(n),l&&!l.pendingRemove&&l.setRate(n),(!I||I.pendingRemove)&&(!l||l.pendingRemove)&&(d==null||d.destroy(),d=null,A&&A())},"callback")});this.scene.time.delayedCall(Et(3e3),()=>{!d||!this.scene||(I!=null&&I.isPlaying&&I.stop(),l!=null&&l.isPlaying&&l.stop(),d.destroy(),A&&A())})}isOppositeGender(A){return this.gender!==je.GENDERLESS&&A.gender===(this.gender===je.MALE?je.FEMALE:je.MALE)}canSetStatus(A,s=!1,R=!1,n=null,I=!1){var o,l,C,M,u,h;if(A!==Re.FAINT&&((R?((o=this.status)==null?void 0:o.effect)===A:this.status)||this.isGrounded()&&!I&&((l=this.scene.arena.terrain)==null?void 0:l.terrainType)===Nt.MISTY)||n&&n!==this&&this.isSafeguarded(n))return!1;const a=this.getTypes(!0,!0);switch(A){case Re.POISON:case Re.TOXIC:const P=a.map(G=>{if(G!==i.POISON&&G!==i.STEEL)return!1;const d=new Lt(!1);return!(n&&(Ct(YU,n,d,!1,A,G),d.value))});if((this.isOfType(i.POISON)||this.isOfType(i.STEEL))&&P.includes(!0))return!1;break;case Re.PARALYSIS:if(this.isOfType(i.ELECTRIC))return!1;break;case Re.SLEEP:if(this.isGrounded()&&((C=this.scene.arena.terrain)==null?void 0:C.terrainType)===Nt.ELECTRIC)return!1;break;case Re.FREEZE:if(this.isOfType(i.ICE)||!I&&((h=(u=(M=this.scene)==null?void 0:M.arena)==null?void 0:u.weather)!=null&&h.weatherType)&&[se.SUNNY,se.HARSH_SUN].includes(this.scene.arena.weather.weatherType))return!1;break;case Re.BURN:if(this.isOfType(i.FIRE))return!1;break}const r=new Lt(!1);return Bb(MR,this,A,r,s),this.getAlliedField().forEach(P=>Bb(uS,P,A,r,s)),!r.value}trySetStatus(A,s=!1,R=null,n=0,I=null){if(!this.canSetStatus(A,s,!1,R))return!1;if((A===Re.SLEEP||A===Re.FREEZE)&&this.stopMultiHit(),s)return this.scene.unshiftPhase(new bd(this.scene,this.getBattlerIndex(),A,n,I,R)),!0;let a;if(A===Re.SLEEP){a=new Rt(this.randSeedIntRange(2,4)),this.setFrameRate(4);const S=[Y.UNDERGROUND,Y.UNDERWATER,Y.HIDDEN,Y.FLYING].find(o=>this.getTag(o));S&&(this.removeTag(S),this.getMoveQueue().pop())}return a=a,A=A,this.status=new VI(A,0,a==null?void 0:a.value),A!==Re.FAINT&&(this.scene.triggerPokemonFormChange(this,ac,!0),WQ(sU,this,A,R)),!0}resetStatus(A=!0,s=!1,R=!1){var I;const n=(I=this.status)==null?void 0:I.effect;!A&&n===Re.FAINT||(this.status=null,n===Re.SLEEP&&(this.setFrameRate(10),this.getTag(Y.NIGHTMARE)&&this.lapseTag(Y.NIGHTMARE)),s&&this.getTag(Y.CONFUSED)&&this.lapseTag(Y.CONFUSED),R&&this.loadAssets(!1).then(()=>this.playAnim()))}isSafeguarded(A){const s=this.isPlayer()?St.PLAYER:St.ENEMY;if(this.scene.arena.getTagOnSide(ge.SAFEGUARD,s)){const R=new Lt(!1);return A&&Ct(sa,A,null,!1,R),!R.value}return!1}primeSummonData(A){this.summonDataPrimer=A}resetSummonData(){var A,s;if((A=this.summonData)!=null&&A.speciesForm&&(this.summonData.speciesForm=null,this.updateFusionPalette()),this.summonData=new kS,this.setSwitchOutStatus(!1),this.battleData||this.resetBattleData(),this.resetBattleSummonData(),this.summonDataPrimer){for(const R of Object.keys(this.summonData))this.summonDataPrimer[R]&&(this.summonData[R]=this.summonDataPrimer[R]);this.getTag(KE)&&(this.scene.triggerPokemonBattleAnim(this,PR.SUBSTITUTE_ADD),this.getTag(KE).sourceInFocus=!1),this.hasAbilityWithAttr(pr)&&this.scene.currentBattle.double&&((s=this.getAlly())==null?void 0:s.species.speciesId)===e.DONDOZO&&this.setVisible(!1),this.summonDataPrimer=null}this.updateInfo()}resetBattleData(){this.battleData=new kd}resetBattleSummonData(){this.battleSummonData=new Zd,this.getTag(Y.SEEDED)&&this.lapseTag(Y.SEEDED),this.scene&&this.scene.triggerPokemonFormChange(this,HT,!0)}resetTurnData(){this.turnData=new Xd}getExpValue(){return this.getSpeciesForm().getBaseExp()*this.level/5+1}setFrameRate(A){var s;this.scene.anims.get(this.getBattleSpriteKey()).frameRate=A;try{this.getSprite().play(this.getBattleSpriteKey())}catch(R){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,R)}try{(s=this.getTintSprite())==null||s.play(this.getBattleSpriteKey())}catch(R){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,R)}}tint(A,s,R,n){const I=this.getTintSprite();I==null||I.setTintFill(A),I==null||I.setVisible(!0),R?(I==null||I.setAlpha(0),this.scene.tweens.add({targets:I,alpha:s||1,duration:R,ease:n||"Linear"})):I==null||I.setAlpha(s)}untint(A,s){const R=this.getTintSprite();A?this.scene.tweens.add({targets:R,alpha:0,duration:A,ease:s||"Linear",onComplete:L(()=>{R==null||R.setVisible(!1),R==null||R.setAlpha(1)},"onComplete")}):(R==null||R.setVisible(!1),R==null||R.setAlpha(1))}enableMask(){var A,s,R;this.maskEnabled||(this.maskSprite=this.getTintSprite(),(A=this.maskSprite)==null||A.setVisible(!0),(s=this.maskSprite)==null||s.setPosition(this.x*this.parentContainer.scale+this.parentContainer.x,this.y*this.parentContainer.scale+this.parentContainer.y),(R=this.maskSprite)==null||R.setScale(this.getSpriteScale()*this.parentContainer.scale),this.maskEnabled=!0)}disableMask(){var A,s,R;this.maskEnabled&&((A=this.maskSprite)==null||A.setVisible(!1),(s=this.maskSprite)==null||s.setPosition(0,0),(R=this.maskSprite)==null||R.setScale(this.getSpriteScale()),this.maskSprite=null,this.maskEnabled=!1)}sparkle(){this.shinySparkle&&IM(this.scene,this.shinySparkle,this.variant)}updateFusionPalette(A){if(!this.getFusionSpeciesForm(A)){[this.getSprite(),this.getTintSprite()].filter(Ie=>!!Ie).map(Ie=>{var z,te;Ie.pipelineData[`spriteColors${A&&((z=this.summonData)!=null&&z.speciesForm)?"Base":""}`]=[],Ie.pipelineData[`fusionSpriteColors${A&&((te=this.summonData)!=null&&te.speciesForm)?"Base":""}`]=[]});return}const s=this.getSpeciesForm(A),R=this.getFusionSpeciesForm(A),n=s.getSpriteKey(this.getGender(A)===je.FEMALE,s.formIndex,this.shiny,this.variant),I=s.getSpriteKey(this.getGender(A)===je.FEMALE,s.formIndex,this.shiny,this.variant).replace("pkmn__","pkmn__back__"),a=R.getSpriteKey(this.getFusionGender(A)===je.FEMALE,R.formIndex,this.fusionShiny,this.fusionVariant),r=R.getSpriteKey(this.getFusionGender(A)===je.FEMALE,R.formIndex,this.fusionShiny,this.fusionVariant).replace("pkmn__","pkmn__back__"),S=this.scene.textures.get(n),o=this.scene.textures.get(I),l=this.scene.textures.get(a),C=this.scene.textures.get(r),[M,u,h,P]=[S,o,l,C].map(Ie=>Ie.frames[Ie.firstFrame]),[G,d,H,f]=[S,o,l,C].map(Ie=>Ie.getSourceImage()),K=document.createElement("canvas"),W=document.createElement("canvas"),V=document.createElement("canvas"),k=document.createElement("canvas"),Q=[],j=[];[K,W,V,k].forEach((Ie,z)=>{const te=Ie.getContext("2d"),Le=[M,u,h,P][z];if(Ie.width=Le.width,Ie.height=Le.height,te){te.drawImage([G,d,H,f][z],Le.cutX,Le.cutY,Le.width,Le.height,0,0,Le.width,Le.height);const Ue=te.getImageData(Le.cutX,Le.cutY,Le.width,Le.height);j.push(Ue.data)}});for(let Ie=0;Ie<2;Ie++){const z=CI[Ie?I:n],te=new Map;this.shiny&&z&&z[this.variant]&&Object.keys(z[this.variant]).forEach(Le=>{te.set(wo(Array.from(Object.values(hs(Le)))),Array.from(Object.values(hs(z[this.variant][Le]))))});for(let Le=0;Le<j[Ie].length;Le+=4)if(j[Ie][Le+3]){const Ue=j[Ie].slice(Le,Le+4);let[Be,st,ft,tt]=Ue;if(z){const Pt=wo([Be,st,ft,tt]);if(te.has(Pt)){const eA=te.get(Pt);eA&&([Be,st,ft,tt]=eA)}}Q.find(Pt=>Pt[0]===Be&&Pt[1]===st&&Pt[2]===ft)||Q.push([Be,st,ft,tt])}}const J=JSON.parse(JSON.stringify(Q)),ne=[];for(let Ie=0;Ie<2;Ie++)for(let z=0;z<j[Ie].length;z+=4)j[Ie].slice(z,z+3).reduce((Le,Ue)=>Le+Ue,0)&&ne.push(Xs({r:j[Ie][z],g:j[Ie][z+1],b:j[Ie][z+2],a:j[Ie][z+3]}));const x=[];for(let Ie=0;Ie<2;Ie++){const z=CI[Ie?r:a],te=new Map;this.fusionShiny&&z&&z[this.fusionVariant]&&Object.keys(z[this.fusionVariant]).forEach(Le=>{te.set(wo(Array.from(Object.values(hs(Le)))),Array.from(Object.values(hs(z[this.fusionVariant][Le]))))});for(let Le=0;Le<j[2+Ie].length;Le+=4){if(!j[2+Ie].slice(Le,Le+3).reduce((Pt,eA)=>Pt+eA,0))continue;let[Be,st,ft,tt]=[j[2+Ie][Le],j[2+Ie][Le+1],j[2+Ie][Le+2],j[2+Ie][Le+3]];if(z){const Pt=wo([Be,st,ft,tt]);if(te.has(Pt)){const eA=te.get(Pt);eA&&([Be,st,ft,tt]=eA)}}x.push(Xs({r:Be,g:st,b:ft,a:tt}))}}let q,F;const Te=Math.random;Math.random=()=>EE.Math.RND.realInRange(0,1),this.scene.executeWithSeedOffset(()=>{q=_T.quantize(ne,4),F=_T.quantize(x,4)},0,"This result should not vary"),Math.random=Te,q=q,F=F;const[He,ue]=[q,F].map(Ie=>{let z=Array.from(Ie.keys()).sort((Be,st)=>Ie.get(Be)<Ie.get(st)?1:-1),te,Le;const Ue=new Map;do{Ue.clear(),te=z.reduce((Be,st)=>(Be.set(st,Object.values(zh(st))),Be),new Map),Le=Array.from(te.keys()).reduce((Be,st)=>{const ft=te.get(st).slice(0,3);return Be.set(st,w8(ft[0],ft[1],ft[2])),Be},new Map);for(let Be=z.length-1;Be>=0;Be--){const st=Le.get(z[Be]);for(let ft=0;ft<Be;ft++){const tt=Le.get(z[ft]),Pt=Math.abs(st[0]-tt[0]);if(Pt<30||Pt>=330){Ue.has(z[Be])?Ue.get(z[Be]).push(z[ft]):Ue.set(z[Be],[z[ft]]);break}}}Ue.forEach((Be,st)=>{const ft=te.get(st),tt=Be.map(Xt=>te.get(Xt)),Pt=ft.slice(0);let eA=Ie.get(st);for(const Xt of Be){const bA=Ie.get(Xt);bA&&(eA+=bA)}for(let Xt=0;Xt<3;Xt++)Pt[Xt]*=Ie.get(st)/eA,Be.forEach((bA,YA)=>{if(Ie.has(bA)){const y=Ie.get(bA);Pt[Xt]+=tt[YA][Xt]*(y/eA)}}),Pt[Xt]=Math.round(Pt[Xt]);Ie.delete(st);for(const Xt of Be)Ie.delete(Xt),Ue.has(Xt)&&Ue.delete(Xt);Ie.set(Xs({r:Pt[0],g:Pt[1],b:Pt[2],a:Pt[3]}),eA)}),z=Array.from(Ie.keys()).sort((Be,st)=>Ie.get(Be)<Ie.get(st)?1:-1)}while(Ue.size);return z.map(Be=>Object.values(zh(Be)))}),me=[];Q.forEach((Ie,z)=>{me.push([]);for(let te=0;te<He.length;te++)me[z].push(v8(Ie,He[te]))});const Me=EE.Tweens.Builders.GetEaseFunction("Cubic.easeIn");for(let Ie=0;Ie<Q.length;Ie++){const z=Math.min(...me[Ie]),te=Math.min(me[Ie].findIndex(Le=>Le===z),ue.length-1);if(z<255){const Le=Me(z/255),Ue=[0,0,0,J[Ie][3]];for(let Be=0;Be<3;Be++)Ue[Be]=Math.round(J[Ie][Be]*Le+ue[te][Be]*(1-Le));J[Ie]=Ue}}[this.getSprite(),this.getTintSprite()].filter(Ie=>!!Ie).map(Ie=>{var z,te;Ie.pipelineData[`spriteColors${A&&((z=this.summonData)!=null&&z.speciesForm)?"Base":""}`]=Q,Ie.pipelineData[`fusionSpriteColors${A&&((te=this.summonData)!=null&&te.speciesForm)?"Base":""}`]=J}),K.remove(),V.remove()}randSeedInt(A,s=0){return this.scene.currentBattle?this.scene.randBattleSeedInt(A,s):_e(A,s)}randSeedIntRange(A,s){return this.randSeedInt(s-A+1,A)}leaveField(A=!0,s=!0){this.resetSprite(),this.resetTurnData(),A&&(this.destroySubstitute(),this.resetSummonData()),s&&this.hideInfo(),this.scene.field.remove(this),this.setSwitchOutStatus(!0),this.scene.triggerPokemonFormChange(this,ls,!0)}destroy(){var A;(A=this.battleInfo)==null||A.destroy(),this.destroySubstitute(),super.destroy()}getBattleInfo(){return this.battleInfo}hasSameAbilityInRootForm(A){const s=this.abilityIndex,R=xe(this.species.getRootSpeciesId());return R.getAbility(A)===R.getAbility(s)}checkIfPlayerHasAbilityOfStarter(A){return!!((A&1)>0&&this.hasSameAbilityInRootForm(0)||(A&2)>0&&this.hasSameAbilityInRootForm(1)||(A&4)>0&&this.hasSameAbilityInRootForm(2))}loseHeldItem(A,s=!0){return A.pokemonId===-1||A.pokemonId===this.id?(A.stackCount--,A.stackCount<=0&&this.scene.removeModifier(A,!this.isPlayer()),s&&On(kR,this,!1),!0):!1}};L(yv,"Pokemon");let QR=yv;const wv=class wv extends QR{constructor(A,s,R,n,I,a,r,S,o,l,C){super(A,106,148,s,R,n,I,a,r,S,o,l,C),Ye.STATUS_OVERRIDE&&(this.status=new VI(Ye.STATUS_OVERRIDE,0,4)),Ye.SHINY_OVERRIDE?(this.shiny=!0,this.initShinySparkle()):Ye.SHINY_OVERRIDE===!1&&(this.shiny=!1),Ye.VARIANT_OVERRIDE!==null&&this.shiny&&(this.variant=Ye.VARIANT_OVERRIDE),C||(this.scene.gameMode.isDaily?this.generateAndPopulateMoveset():this.moveset=[]),this.generateCompatibleTms()}initBattleInfo(){this.battleInfo=new Dl(this.scene),this.battleInfo.initInfo(this)}isPlayer(){return!0}hasTrainer(){return!0}isBoss(){return!1}getFieldIndex(){return this.scene.getPlayerField().indexOf(this)}getBattlerIndex(){return this.getFieldIndex()}generateCompatibleTms(){this.compatibleTms=[];const A=Object.keys(bI);for(const s of A){const R=parseInt(s);let n=!1;for(const I of bI[s])if(Array.isArray(I)){const[a,r]=I;if((a===this.species.speciesId||this.fusionSpecies&&a===this.fusionSpecies.speciesId)&&r===this.getFormKey()){n=!0;break}}else if(I===this.species.speciesId||this.fusionSpecies&&I===this.fusionSpecies.speciesId){n=!0;break}G7.indexOf(R)>-1&&(n=!n),n&&this.compatibleTms.push(R)}}tryPopulateMoveset(A){return this.getSpeciesForm().validateStarterMoveset(A,this.scene.gameData.starterData[this.species.getRootSpeciesId()].eggMoves)?(this.moveset=A.map(s=>new Ot(s)),!0):!1}switchOut(A=aA.SWITCH){return new Promise(s=>{this.leaveField(A===aA.SWITCH),this.scene.ui.setMode(Oe.PARTY,us.FAINT_SWITCH,this.getFieldIndex(),(R,n)=>{R>=this.scene.currentBattle.getBattlerCount()&&R<6&&this.scene.prependToPhase(new aR(this.scene,A,this.getFieldIndex(),R,!1),nO),this.scene.ui.setMode(Oe.MESSAGE).then(s)},vE.FilterNonFainted)})}addFriendship(A){if(A>0){const s=this.species.getRootSpeciesId(),R=this.isFusion()&&this.fusionSpecies?this.fusionSpecies.getRootSpeciesId():0,n=[this.scene.gameData.starterData[s],R?this.scene.gameData.starterData[R]:null].filter(S=>!!S),I=new Rt(A);this.scene.applyModifier(No,!0,this,I);let a=o7;this.scene.eventManager.isEventActive()&&(a*=this.scene.eventManager.getFriendshipMultiplier());const r=new Rt(Math.floor(I.value*(this.scene.gameMode.isClassic?a:1)/(R?2:1)));this.friendship=Math.min(this.friendship+I.value,255),this.friendship===255&&this.scene.validateAchv(lt.MAX_FRIENDSHIP),n.forEach((S,o)=>{const l=o?R:s;S.friendship=(S.friendship||0)+r.value,S.friendship>=A1(KA[l])&&(this.scene.gameData.addStarterCandy(xe(l),1),S.friendship=0)})}else this.friendship=Math.max(this.friendship+A,0)}revivalBlessing(){return new Promise(A=>{this.scene.ui.setMode(Oe.PARTY,us.REVIVAL_BLESSING,this.getFieldIndex(),(s,R)=>{if(s>=0&&s<6){const n=this.scene.getPlayerParty()[s];if((!n||!n.isFainted())&&A(),n.resetTurnData(),n.resetStatus(),n.heal(Math.min(Yt(.5*n.getMaxHp()),n.getMaxHp())),this.scene.queueMessage(D.t("moveTriggers:revivalBlessing",{pokemonName:n.name}),0,!0),this.scene.currentBattle.double&&this.scene.getPlayerParty().length>1){const I=this.getAlly();s<=1?(this.scene.unshiftPhase(new aR(this.scene,aA.SWITCH,n.getFieldIndex(),s,!1,!0)),this.scene.unshiftPhase(new lO(this.scene,!0))):I.isFainted()&&(this.scene.unshiftPhase(new aR(this.scene,aA.SWITCH,I.getFieldIndex(),s,!1,!0)),this.scene.unshiftPhase(new lO(this.scene,!0)))}}this.scene.ui.setMode(Oe.MESSAGE).then(()=>A())},vE.FilterFainted)})}getPossibleEvolution(A){return A?new Promise(s=>{const R=xe(A.speciesId),n=A instanceof pn;let I;if(n){const a=this.fusionSpecies,r=this.fusionFormIndex;this.fusionSpecies=R,this.fusionFormIndex=A.evoFormKey!==null?Math.max(R.forms.findIndex(S=>S.formKey===A.evoFormKey),0):this.fusionFormIndex,I=this.scene.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this),this.fusionSpecies=a,this.fusionFormIndex=r}else{const a=A.evoFormKey!==null&&!n?Math.max(R.forms.findIndex(r=>r.formKey===A.evoFormKey),0):this.formIndex;I=this.scene.addPlayerPokemon(n?this.species:R,this.level,this.abilityIndex,a,this.gender,this.shiny,this.variant,this.ivs,this.nature,this)}I.loadAssets().then(()=>s(I))}):new Promise(s=>s(this))}evolve(A,s){return A?new Promise(R=>{this.pauseEvolutions=!1,this.handleSpecialEvolutions(A);const n=A instanceof pn;if(n?this.fusionSpecies=xe(A.speciesId):this.species=xe(A.speciesId),A.preFormKey!==null){const a=Math.max((!n||!this.fusionSpecies?this.species:this.fusionSpecies).forms.findIndex(r=>r.formKey===A.evoFormKey),0);n?this.fusionFormIndex=a:this.formIndex=a}if(this.generateName(),n){const a=this.getFusionSpeciesForm().getAbilityCount(),r=s.getAbilityCount();[0,1,2].includes(this.fusionAbilityIndex)?this.fusionAbilityIndex===2&&r===3&&a===2&&(this.fusionAbilityIndex=1):(console.warn("this.fusionAbilityIndex is somehow an illegal value, please report this"),console.warn(this.fusionAbilityIndex),this.fusionAbilityIndex=0)}else{const a=this.getSpeciesForm().getAbilityCount(),r=s.getAbilityCount();[0,1,2].includes(this.abilityIndex)?this.abilityIndex===2&&r===3&&a===2&&(this.abilityIndex=1):(console.warn("this.abilityIndex is somehow an illegal value, please report this"),console.warn(this.abilityIndex),this.abilityIndex=0)}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const I=L(()=>{this.loadAssets().then(()=>{this.calculateStats(),this.updateInfo(!0).then(()=>R())})},"updateAndResolve");if(s.speciesId===e.GIMMIGHOUL){const a=this.getHeldItems().filter(r=>r instanceof jS)[0]??null;a&&this.scene.removeModifier(a)}!this.scene.gameMode.isDaily||this.metBiome>-1?(this.scene.gameData.updateSpeciesDexIvs(this.species.speciesId,this.ivs),this.scene.gameData.setPokemonSeen(this,!1),this.scene.gameData.setPokemonCaught(this,!1).then(()=>I())):I()}):new Promise(R=>R())}handleSpecialEvolutions(A){var n;const s=A instanceof pn,R=s?this.fusionSpecies:this.species;if((R==null?void 0:R.speciesId)===e.NINCADA&&A.speciesId===e.NINJASK){const I=kt[R.speciesId][1];if((n=I.condition)!=null&&n.predicate(this)){const a=this.scene.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,void 0,this.shiny,this.variant,this.ivs,this.nature);a.passive=this.passive,a.moveset=this.moveset.slice(),a.moveset=this.copyMoveset(),a.luck=this.luck,a.metLevel=this.metLevel,a.metBiome=this.metBiome,a.metSpecies=this.metSpecies,a.metWave=this.metWave,a.fusionSpecies=this.fusionSpecies,a.fusionFormIndex=this.fusionFormIndex,a.fusionAbilityIndex=this.fusionAbilityIndex,a.fusionShiny=this.fusionShiny,a.fusionVariant=this.fusionVariant,a.fusionGender=this.fusionGender,a.fusionLuck=this.fusionLuck,a.usedTMs=this.usedTMs,this.scene.getPlayerParty().push(a),a.evolve(s?new pn(this.id,I):I,R),this.scene.findModifiers(S=>S instanceof Ht&&S.pokemonId===this.id,!0).forEach(S=>{const o=S.clone();o.pokemonId=a.id,this.scene.addModifier(o,!0)}),this.scene.updateModifiers(!0)}}}getPossibleForm(A){return new Promise(s=>{const R=Math.max(this.species.forms.findIndex(I=>I.formKey===A.formKey),0),n=this.scene.addPlayerPokemon(this.species,this.level,this.abilityIndex,R,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);n.loadAssets().then(()=>s(n))})}changeForm(A){return new Promise(s=>{const R=this.formIndex;this.formIndex=Math.max(this.species.forms.findIndex(S=>S.formKey===A.formKey),0),this.generateName();const n=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=n&&(this.abilityIndex=n-1);const I=this.species.forms[R],a=[I.type1,I.type2];if(this.customPokemonData.types.length>0){this.getSpeciesForm().type1!==a[0]&&(this.customPokemonData.types[0]=this.getSpeciesForm().type1);const S=this.getSpeciesForm().type2;!Ve(S)&&S!==a[1]&&(this.customPokemonData.types.length>1?this.customPokemonData.types[1]=S:this.customPokemonData.types.push(S))}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const r=L(()=>{this.loadAssets().then(()=>{this.calculateStats(),this.scene.updateModifiers(!0,!0),this.updateInfo(!0).then(()=>s())})},"updateAndResolve");!this.scene.gameMode.isDaily||this.metBiome>-1?(this.scene.gameData.setPokemonSeen(this,!1),this.scene.gameData.setPokemonCaught(this,!1).then(()=>r())):r()})}clearFusionSpecies(){super.clearFusionSpecies(),this.generateCompatibleTms()}fuse(A){return new Promise(s=>{this.fusionSpecies=A.species,this.fusionFormIndex=A.formIndex,this.fusionAbilityIndex=A.abilityIndex,this.fusionShiny=A.shiny,this.fusionVariant=A.variant,this.fusionGender=A.gender,this.fusionLuck=A.luck,this.fusionCustomPokemonData=A.customPokemonData,(A.pauseEvolutions||this.pauseEvolutions)&&(this.pauseEvolutions=!0),this.scene.validateAchv(lt.SPLICE),this.scene.gameData.gameStats.pokemonFused++;const R=this.getMaxHp(),n=(A.hp/A.getMaxHp()+this.hp/R)/2;this.generateName(),this.calculateStats(),this.hp=Math.round(R*n),this.isFainted()?A.isFainted()||(this.hp=Math.max(this.hp,1),this.status=A.status):(this.hp=Math.min(this.hp,R),this.status=E7(this.status,A.status)),this.generateCompatibleTms(),this.updateInfo(!0);const I=this.scene.getPlayerParty().indexOf(A);this.scene.getPlayerParty().indexOf(this);const a=this.scene.findModifiers(S=>S instanceof Ht&&S.pokemonId===A.id,!0),r=[];for(const S of a)r.push(this.scene.tryTransferHeldItemModifier(S,this,!1,S.getStackCount(),!0,!0,!1));Promise.allSettled(r).then(()=>{this.scene.updateModifiers(!0,!0).then(()=>{this.scene.removePartyMemberModifiers(I),this.scene.getPlayerParty().splice(I,1)[0];const S=this.scene.getPlayerParty().indexOf(this);A.getMoveset(!0).map(o=>this.scene.unshiftPhase(new kn(this.scene,S,o.getMove().id))),A.destroy(),this.updateFusionPalette(),s()})})})}unfuse(){return new Promise(A=>{this.clearFusionSpecies(),this.updateInfo(!0).then(()=>A()),this.updateFusionPalette()})}copyMoveset(){const A=[];return this.moveset.forEach(s=>{s&&A.push(new Ot(s.moveId,0,s.ppUp,s.virtual,s.maxPpOverride))}),A}};L(wv,"PlayerPokemon");let wE=wv;const vv=class vv extends QR{constructor(A,s,R,n,I,a=!1,r){var o;super(A,236,84,s,R,r==null?void 0:r.abilityIndex,r==null?void 0:r.formIndex,r==null?void 0:r.gender,!a&&r?r.shiny:!1,!a&&r?r.variant:void 0,void 0,r?r.nature:void 0,r),this.trainerSlot=n,this.isPopulatedFromDataSource=!!r,I&&this.setBoss(I,r==null?void 0:r.bossSegments),Ye.OPP_STATUS_OVERRIDE&&(this.status=new VI(Ye.OPP_STATUS_OVERRIDE,0,4)),Ye.OPP_GENDER_OVERRIDE&&(this.gender=Ye.OPP_GENDER_OVERRIDE);const S=this.species.speciesId;if(S in Ye.OPP_FORM_OVERRIDES&&Ye.OPP_FORM_OVERRIDES[S]&&this.species.forms[Ye.OPP_FORM_OVERRIDES[S]]&&(this.formIndex=Ye.OPP_FORM_OVERRIDES[S]??0),!r){this.generateAndPopulateMoveset(),a||Ye.OPP_SHINY_OVERRIDE===!1?this.shiny=!1:this.trySetShiny(),!this.shiny&&Ye.OPP_SHINY_OVERRIDE&&(this.shiny=!0,this.initShinySparkle()),this.shiny&&(this.variant=this.generateShinyVariant(),Ye.OPP_VARIANT_OVERRIDE!==null&&(this.variant=Ye.OPP_VARIANT_OVERRIDE)),this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0);let l,C=s.speciesId;for(;l=QA[C];){const M=kt[l].find(u=>u.speciesId===C&&(!u.evoFormKey||u.evoFormKey===this.getFormKey()));(o=M==null?void 0:M.condition)!=null&&o.enforceFunc&&M.condition.enforceFunc(this),C=l}}this.aiType=I||this.hasTrainer()?2:1}initBattleInfo(){this.battleInfo?this.battleInfo.updateBossSegments(this):(this.battleInfo=new Qh(this.scene),this.battleInfo.updateBossSegments(this),this.battleInfo.initInfo(this))}setBoss(A=!0,s=0){A?(this.bossSegments=s||this.scene.getEncounterBossSegments(this.scene.currentBattle.waveIndex,this.level,this.species,!0),this.bossSegmentIndex=this.bossSegments-1):(this.bossSegments=0,this.bossSegmentIndex=0)}generateAndPopulateMoveset(A){switch(!0){case this.species.speciesId===e.SMEARGLE:this.moveset=[new Ot(t.SKETCH),new Ot(t.SKETCH),new Ot(t.SKETCH),new Ot(t.SKETCH)];break;case this.species.speciesId===e.ETERNATUS:this.moveset=(A!==void 0?A:this.formIndex)?[new Ot(t.DYNAMAX_CANNON),new Ot(t.CROSS_POISON),new Ot(t.FLAMETHROWER),new Ot(t.RECOVER,0,-4)]:[new Ot(t.ETERNABEAM),new Ot(t.SLUDGE_BOMB),new Ot(t.FLAMETHROWER),new Ot(t.COSMIC_POWER)],this.scene.gameMode.hasChallenge(yt.INVERSE_BATTLE)&&(this.moveset[2]=new Ot(t.THUNDERBOLT));break;default:super.generateAndPopulateMoveset();break}}getNextMove(){var R;const A=this.getMoveQueue().length?this.getMoveset().find(n=>(n==null?void 0:n.moveId)===this.getMoveQueue()[0].move):null;if(A)return A.isUsable(this,this.getMoveQueue()[0].ignorePP)?{move:A.moveId,targets:this.getMoveQueue()[0].targets,ignorePP:this.getMoveQueue()[0].ignorePP}:(this.getMoveQueue().shift(),this.getNextMove());let s=this.getMoveset().filter(n=>n==null?void 0:n.isUsable(this));if(s.length){if(s.length===1)return{move:s[0].moveId,targets:this.getNextTargets(s[0].moveId)};const n=this.getTag(BS);if(n){const I=s.find(a=>(a==null?void 0:a.moveId)===n.moveId);if(I)return{move:I.moveId,targets:this.getNextTargets(I.moveId)}}switch(this.aiType){case 0:const I=s[this.scene.randBattleSeedInt(s.length)].moveId;return{move:I,targets:this.getNextTargets(I)};case 1:case 2:const a=s.filter(C=>{if(!C)return!1;const M=C.getMove();if(M.moveTarget===JE.ATTACKER)return!1;const u=this.scene.getField(),h=Cn(this,M.id).targets.map(G=>u[G]).filter(G=>this.isPlayer()!==G.isPlayer()),P=M.hasAttr(nn)||!!this.getTag(Y.ALWAYS_CRIT);return M.category!==Mt.STATUS&&h.some(G=>(M.applyConditions(this,G,M)||[t.SUCKER_PUNCH,t.UPPER_HAND,t.THUNDERCLAP].includes(M.id))&&G.getAttackDamage(this,M,!G.battleData.abilityRevealed,!1,P).damage>=G.hp)},this);a.length>0&&(s=a);const r=s.map(()=>0),S=Object.fromEntries(s.map(C=>[C.moveId,this.getNextTargets(C.moveId)]));for(const C in s){const u=s[C].getMove();let h=r[C];const P=[];for(const G of S[u.id]){if(G===Bt.ATTACKER)break;const d=this.scene.getField()[G];let H=u.getUserBenefitScore(this,d,u)+u.getTargetBenefitScore(this,d,u)*(G<Bt.ENEMY===this.isPlayer()?1:-1);if(Number.isNaN(H)&&(console.error(`Move ${u.name} returned score of NaN`),H=0),(u.name.endsWith(" (N)")||!u.applyConditions(this,d,u))&&![t.SUCKER_PUNCH,t.UPPER_HAND,t.THUNDERCLAP].includes(u.id))H=-20;else if(u instanceof B){const f=d.getMoveEffectiveness(this,u,!((R=d.battleData)!=null&&R.abilityRevealed));d.isPlayer()!==this.isPlayer()?(H*=f,this.isOfType(u.type)&&(H*=1.5)):f&&(H/=f,this.isOfType(u.type)&&(H/=1.5)),H||(H=-20)}P.push(H)}h+=Math.max(...P),r[C]=h}console.log(r);const o=s.slice(0);o.sort((C,M)=>{const u=r[s.indexOf(C)],h=r[s.indexOf(M)];return u<h?1:u>h?-1:0});let l=0;if(this.aiType===1)for(;l<o.length-1&&this.scene.randBattleSeedInt(8)>=5;)l++;else if(this.aiType===2)for(;l<o.length-1&&r[s.indexOf(o[l+1])]/r[s.indexOf(o[l])]>=0&&this.scene.randBattleSeedInt(100)<Math.round(r[s.indexOf(o[l+1])]/r[s.indexOf(o[l])]*50);)l++;return console.log(s.map(C=>C.getName()),r,l,o.map(C=>C.getName())),{move:o[l].moveId,targets:S[o[l].moveId]}}}return{move:t.STRUGGLE,targets:this.getNextTargets(t.STRUGGLE)}}getNextTargets(A){const s=Cn(this,A),R=this.scene.getField(!0).filter(h=>s.targets.indexOf(h.getBattlerIndex())>-1);if(s.multiple)return R.map(h=>h.getBattlerIndex());const n=ye[A],a=R.map(h=>[h.getBattlerIndex(),n.getTargetBenefitScore(this,h,n)*(h.isPlayer()===this.isPlayer()?1:-1)]).slice(0);if(a.sort((h,P)=>{const G=h[1],d=P[1];return G<d?1:G>d?-1:0}),!a.length)return n.hasAttr(BI)?[Bt.ATTACKER]:[];let r=a.map(h=>h[1]);const S=r[r.length-1];if(S<1)for(let h=0;h<r.length;h++)r[h]+=Math.abs(S-1);const o=r.findIndex(h=>h<r[0]/2);o>-1&&(r=r.slice(0,o));const l=[];let C=0;r.reduce((h,P)=>(h+=P,l.push(h),C=h,h),0);const M=this.scene.randBattleSeedInt(C);let u=0;return l.every((h,P)=>M>=h?!0:(u=P,!1)),[a[u][0]]}isPlayer(){return!1}hasTrainer(){return!!this.trainerSlot}isBoss(){return!!this.bossSegments}getBossSegmentIndex(){const A=this.bossSegments,s=this.getMaxHp()/A;for(let R=A-1;R>0;R--){const n=Math.round(s*R);if(this.hp>n)return R}return 0}damage(A,s=!1,R=!1,n=!1){if(this.isFainted())return 0;let I=this.isBoss()?this.bossSegmentIndex+1:0;if(this.isBoss()&&!s){const r=this.getMaxHp()/this.bossSegments;for(let S=this.bossSegmentIndex;S>0;S--){const o=r*S,l=Math.round(o);if(this.hp>=l){if(this.hp-A<=l){const C=this.hp-l;let M=0;for(;M<this.bossSegmentIndex&&this.canBypassBossSegments(M+1)&&A-C>=Math.round(r*Math.pow(2,M+1));)M++;A=Yt(this.hp-o+r*M),I=S-M}break}}}switch(this.scene.currentBattle.battleSpec){case TE.FINAL_BOSS:!this.formIndex&&this.bossSegmentIndex<1&&(A=Math.min(A,this.hp-1))}const a=super.damage(A,s,R,n);if(this.isBoss()){if(s){const r=this.getMaxHp()/this.bossSegments;I=Math.ceil(this.hp/r)}I<=this.bossSegmentIndex&&this.handleBossSegmentCleared(I),this.battleInfo.updateBossSegments(this)}return a}canBypassBossSegments(A=1){return!(this.scene.currentBattle.battleSpec===TE.FINAL_BOSS&&!this.formIndex&&this.bossSegmentIndex-A<1)}handleBossSegmentCleared(A){for(;this.bossSegmentIndex>0&&A-1<this.bossSegmentIndex;){const s=Vn.filter(o=>this.getStatStage(o)<6),R=s.map(o=>this.getStat(o,!1));let n;const I=[];let a=0;for(const o in R)a+=R[o],I.push(a);const r=_e(a);for(const o in I)if(r<I[o]){n=s[o];break}let S=1;this.bossSegments>=3&&this.bossSegmentIndex===1&&S++,this.bossSegments>=5&&this.bossSegmentIndex===2&&S++,this.scene.unshiftPhase(new Jt(this.scene,this.getBattlerIndex(),!0,[n],S,!0,!0)),this.bossSegmentIndex--}}getFieldIndex(){return this.scene.getEnemyField().indexOf(this)}getBattlerIndex(){return Bt.ENEMY+this.getFieldIndex()}addToParty(A,s=-1){const R=this.scene.getPlayerParty();let n=null;if(R.length<or){this.pokeball=A,this.metLevel=this.level,this.metBiome=this.scene.arena.biomeType,this.metWave=this.scene.currentBattle.waveIndex,this.metSpecies=this.species.speciesId;const I=this.scene.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);V8(s,0,or-1)?R.splice(s,0,I):R.push(I),I.setVisible(!1),n=I,this.scene.triggerPokemonFormChange(I,ls,!0)}return n}};L(vv,"EnemyPokemon");let rs=vv;const Vv=class Vv{constructor(){this.statStages=[0,0,0,0,0,0,0],this.moveQueue=[],this.tags=[],this.abilitySuppressed=!1,this.abilitiesApplied=[],this.ability=O.NONE,this.passiveAbility=O.NONE,this.stats=[0,0,0,0,0,0],this.types=[],this.addedType=null}};L(Vv,"PokemonSummonData");let kS=Vv;const xv=class xv{constructor(){this.hitCount=0,this.endured=!1,this.berriesEaten=[],this.abilitiesApplied=[],this.abilityRevealed=!1}};L(xv,"PokemonBattleData");let kd=xv;const bv=class bv{constructor(){this.turnCount=1,this.waveTurnCount=1,this.moveHistory=[]}};L(bv,"PokemonBattleSummonData");let Zd=bv;const kv=class kv{constructor(){this.flinched=!1,this.acted=!1,this.hitCount=0,this.hitsLeft=-1,this.totalDamageDealt=0,this.singleHitDamageDealt=0,this.damageTaken=0,this.attacksReceived=[],this.statStagesIncreased=!1,this.statStagesDecreased=!1,this.moveEffectiveness=null,this.switchedInThisTurn=!1,this.failedRunAway=!1,this.joinedRound=!1,this.extraTurns=0}};L(kv,"PokemonTurnData");let Xd=kv;var I8=(E=>(E[E.RANDOM=0]="RANDOM",E[E.SMART_RANDOM=1]="SMART_RANDOM",E[E.SMART=2]="SMART",E))(I8||{}),CA=(E=>(E[E.PENDING=0]="PENDING",E[E.SUCCESS=1]="SUCCESS",E[E.FAIL=2]="FAIL",E[E.MISS=3]="MISS",E[E.OTHER=4]="OTHER",E))(CA||{}),wt=(E=>(E[E.EFFECTIVE=1]="EFFECTIVE",E[E.SUPER_EFFECTIVE=2]="SUPER_EFFECTIVE",E[E.NOT_VERY_EFFECTIVE=3]="NOT_VERY_EFFECTIVE",E[E.ONE_HIT_KO=4]="ONE_HIT_KO",E[E.NO_EFFECT=5]="NO_EFFECT",E[E.STATUS=6]="STATUS",E[E.HEAL=7]="HEAL",E[E.FAIL=8]="FAIL",E[E.MISS=9]="MISS",E[E.OTHER=10]="OTHER",E[E.IMMUNE=11]="IMMUNE",E))(wt||{});const JD=class JD{constructor(A,s=0,R=0,n=!1,I){this.moveId=A,this.ppUsed=s,this.ppUp=R,this.virtual=n,this.maxPpOverride=I}isUsable(A,s=!1,R=!1){return this.moveId&&!R&&A.isMoveRestricted(this.moveId,A)||this.getMove().name.endsWith(" (N)")?!1:s||this.ppUsed<this.getMovePp()||this.getMove().pp===-1}getMove(){return ye[this.moveId]}usePp(A=1){this.ppUsed=Math.min(this.ppUsed+A,this.getMovePp())}getMovePp(){return this.maxPpOverride||this.getMove().pp+this.ppUp*Yt(this.getMove().pp/5)}getPpRatio(){return 1-this.ppUsed/this.getMovePp()}getName(){return this.getMove().name}static loadMove(A){return new JD(A.moveId,A.ppUsed,A.ppUp,A.virtual,A.maxPpOverride)}};L(JD,"PokemonMove");let Ot=JD;function Qd(E){return D.t(`berry:${Dt[E]}.name`)}L(Qd,"getBerryName");function oJ(E){return D.t(`berry:${Dt[E]}.effect`)}L(oJ,"getBerryEffectDescription");function lJ(E){switch(E){case Dt.SITRUS:return A=>A.getHpRatio()<.5;case Dt.LUM:return A=>!!A.status||!!A.getTag(Y.CONFUSED);case Dt.ENIGMA:return A=>!!A.turnData.attacksReceived.filter(s=>s.result===wt.SUPER_EFFECTIVE).length;case Dt.LIECHI:case Dt.GANLON:case Dt.PETAYA:case Dt.APICOT:case Dt.SALAC:return A=>{const s=new Rt(.25),R=E-Dt.ENIGMA;return Ct(fI,A,null,!1,s),A.getHpRatio()<s.value&&A.getStatStage(R)<6};case Dt.LANSAT:return A=>{const s=new Rt(.25);return Ct(fI,A,null,!1,s),A.getHpRatio()<.25&&!A.getTag(Y.CRIT_BOOST)};case Dt.STARF:return A=>{const s=new Rt(.25);return Ct(fI,A,null,!1,s),A.getHpRatio()<.25};case Dt.LEPPA:return A=>{const s=new Rt(.25);return Ct(fI,A,null,!1,s),!!A.getMoveset().find(R=>!(R!=null&&R.getPpRatio()))}}}L(lJ,"getBerryPredicate");function a8(E){switch(E){case Dt.SITRUS:case Dt.ENIGMA:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=new Rt(Yt(A.getMaxHp()/4));Ct(Ir,A,null,!1,R),A.scene.unshiftPhase(new mE(A.scene,A.getBattlerIndex(),R.value,D.t("battle:hpHealBerry",{pokemonNameWithAffix:ee(A),berryName:Qd(E)}),!0)),On(kR,s??A,!1)};case Dt.LUM:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E),A.status&&A.scene.queueMessage(EI(A.status.effect,ee(A))),A.resetStatus(!0,!0),A.updateInfo(),On(kR,s??A,!1)};case Dt.LIECHI:case Dt.GANLON:case Dt.PETAYA:case Dt.APICOT:case Dt.SALAC:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=E-Dt.ENIGMA,n=new Rt(1);Ct(Ir,A,null,!1,n),A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[R],n.value)),On(kR,s??A,!1)};case Dt.LANSAT:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E),A.addTag(Y.CRIT_BOOST),On(kR,s??A,!1)};case Dt.STARF:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=_e(g.SPD,g.ATK),n=new Rt(2);Ct(Ir,A,null,!1,n),A.scene.unshiftPhase(new Jt(A.scene,A.getBattlerIndex(),!0,[R],n.value)),On(kR,s??A,!1)};case Dt.LEPPA:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=A.getMoveset().find(n=>!(n!=null&&n.getPpRatio()))?A.getMoveset().find(n=>!(n!=null&&n.getPpRatio())):A.getMoveset().find(n=>n.getPpRatio()<1);R!==void 0&&(R.ppUsed=Math.max(R.ppUsed-10,0),A.scene.queueMessage(D.t("battle:ppHealBerry",{pokemonNameWithAffix:ee(A),moveName:R.getName(),berryName:Qd(E)})),On(kR,s??A,!1))}}}L(a8,"getBerryEffectFunc");const nl=24,ZS=L((E,A)=>{const s=E.type.name.localeCompare(A.type.name),R=E.constructor.name.localeCompare(A.constructor.name),n=E instanceof Ht&&E.pokemonId?E.pokemonId:4294967295,I=A instanceof Ht&&A.pokemonId?A.pokemonId:4294967295;return n<I?1:n>I?-1:n===I?R===0?s:R:0},"modifierSortFunc"),Zv=class Zv extends Phaser.GameObjects.Container{constructor(A,s){super(A,1+(s?302:0),2),this.player=!s,this.setScale(.5)}updateModifiers(A,s=!1){this.removeAll(!0);const R=A.filter(S=>S.isIconVisible(this.scene)),n=R.filter(S=>!S.pokemonId).sort(ZS),I=R.filter(S=>S.pokemonId).sort(ZS),a=s?n:n.concat(I),r=this;a.forEach((S,o)=>{const l=S.getIcon(this.scene);o>=nl&&l.setVisible(!1),this.add(l),this.setModifierIconPosition(l,a.length),l.setInteractive(new Phaser.Geom.Rectangle(0,0,32,24),Phaser.Geom.Rectangle.Contains),l.on("pointerover",()=>{this.scene.ui.showTooltip(S.type.name,S.type.getDescription(this.scene)),this.modifierCache&&this.modifierCache.length>nl&&r.updateModifierOverflowVisibility(!0)}),l.on("pointerout",()=>{this.scene.ui.hideTooltip(),this.modifierCache&&this.modifierCache.length>nl&&r.updateModifierOverflowVisibility(!1)})});for(const S of this.getAll())this.sendToBack(S);this.modifierCache=A}updateModifierOverflowVisibility(A){const s=this.getAll().reverse();for(const R of s.map(n=>n).slice(nl))R.setVisible(A)}setModifierIconPosition(A,s){const R=12+6*Math.max(Math.ceil(Math.min(s,24)/12)-2,0),n=this.getIndex(A)%R*26/(R/12),I=Math.floor(this.getIndex(A)/R)*20;A.setPosition(this.player?n:-n,I)}};L(Zv,"ModifierBar");let XS=Zv;const Xv=class Xv{constructor(A){this.type=A}match(A){return!1}shouldApply(...A){return!0}};L(Xv,"Modifier");let QS=Xv;const Qv=class Qv extends QS{constructor(A,s){super(A),this.stackCount=s===void 0?1:s,this.virtualStackCount=0}add(A,s,R){for(const n of A)if(this.match(n))return n.incrementStack(R,this.stackCount,s);return s&&(this.virtualStackCount+=this.stackCount,this.stackCount=0),A.push(this),!0}getArgs(){return[]}incrementStack(A,s,R){return this.getStackCount()+s<=this.getMaxStackCount(A)?(R?this.virtualStackCount+=s:this.stackCount+=s,!0):!1}getStackCount(){return this.stackCount+this.virtualStackCount}isIconVisible(A){return!0}getIcon(A,s){const R=A.add.container(0,0),n=A.add.sprite(0,12,"items");n.setFrame(this.type.iconImage),n.setOrigin(0,.5),R.add(n);const I=this.getIconStackText(A);I&&R.add(I);const a=this.getIconStackText(A,!0);return a&&R.add(a),R}getIconStackText(A,s){if(this.getMaxStackCount(A)===1||s&&!this.virtualStackCount)return null;const R=A.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return R.letterSpacing=-.5,this.getStackCount()>=this.getMaxStackCount(A)&&R.setTint(16291984),R.setOrigin(0,0),R}};L(Qv,"PersistentModifier");let VA=Qv;const Jv=class Jv extends QS{constructor(A){super(A)}add(A){return!0}};L(Jv,"ConsumableModifier");let $i=Jv;const $v=class $v extends $i{constructor(A,s,R){super(A),this.pokeballType=s,this.count=R}apply(A){const s=A.pokeballCounts;return s[this.pokeballType]=Math.min(s[this.pokeballType]+this.count,jb),!0}};L($v,"AddPokeballModifier");let rD=$v;const zv=class zv extends $i{constructor(A,s,R){super(A),this.voucherType=s,this.count=R}apply(A){const s=A.gameData.voucherCounts;return s[this.voucherType]+=this.count,!0}};L(zv,"AddVoucherModifier");let LD=zv;const qv=class qv extends VA{constructor(A,s,R,n){super(A,n),this.maxBattles=s,this.battleCount=R??this.maxBattles}add(A,s,R){for(const n of A)if(this.match(n)){const I=n;return I.getBattleCount()<I.getMaxBattles()?(I.resetBattleCount(),R.playSound("se/restore"),!0):!1}return A.push(this),!0}lapse(...A){return this.battleCount--,this.battleCount>0}getIcon(A){const s=super.getIcon(A),R=Math.floor(120*(this.battleCount/this.maxBattles)+5),n=BV(R,.5,.9),I=BV(R,.7,.3),a=le(A,27,0,this.battleCount.toString(),X.PARTY,{fontSize:"66px",color:n});return a.setShadow(0,0),a.setStroke(I,16),a.setOrigin(1,0),s.add(a),s}getIconStackText(A,s){return null}getBattleCount(){return this.battleCount}resetBattleCount(){this.battleCount=this.maxBattles}setNewBattleCount(A){this.maxBattles=A,this.battleCount=A}getMaxBattles(){return this.maxBattles}getArgs(){return[this.maxBattles,this.battleCount]}getMaxStackCount(A,s){return 2}};L(qv,"LapsingPersistentModifier");let zi=qv;const lN=class lN extends zi{constructor(A,s,R,n){super(A,s,R,n)}match(A){return A instanceof lN&&A.getMaxBattles()===this.getMaxBattles()}clone(){return new lN(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}apply(A){return A.value=A.value/4,!0}};L(lN,"DoubleBattleChanceBoosterModifier");let Qr=lN;const CN=class CN extends zi{constructor(A,s,R,n,I){super(A,R,n,I),this.stat=s,this.boost=s!==g.ACC?.3:1}match(A){return A instanceof CN?A.stat===this.stat:!1}clone(){return new CN(this.type,this.stat,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}getArgs(){return[this.stat,...super.getArgs()]}shouldApply(A,s){return!!A&&!!s&&kb.includes(A)&&A===this.stat}apply(A,s){return s.value+=this.boost,!0}};L(CN,"TempStatStageBoosterModifier");let Jr=CN;const UN=class UN extends zi{constructor(A,s,R,n){super(A,s,R,n)}clone(){return new UN(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(A){return A instanceof UN}shouldApply(A){return!!A}apply(A){return A.value++,!0}};L(UN,"TempCritBoosterModifier");let JS=UN;const $D=class $D extends VA{constructor(A,s){super(A,s)}clone(){return new $D(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(A){return 1}};L($D,"MapModifier");let $S=$D;const zD=class zD extends VA{constructor(A,s){super(A,s)}clone(){return new zD(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(A){return 1}};L(zD,"MegaEvolutionAccessModifier");let $r=zD;const qD=class qD extends VA{constructor(A,s){super(A,s)}clone(){return new qD(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(A){return 1}};L(qD,"GigantamaxAccessModifier");let zr=qD;const jD=class jD extends VA{constructor(A,s){super(A,s)}clone(){return new jD(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(A){return 1}};L(jD,"TerastallizeAccessModifier");let zS=jD;const jv=class jv extends VA{constructor(A,s,R){super(A,R),this.isTransferable=!0,this.pokemonId=s}match(A){return this.matchType(A)&&A.pokemonId===this.pokemonId}getArgs(){return[this.pokemonId]}shouldApply(A,...s){return!!A&&(this.pokemonId===-1||A.id===this.pokemonId)}isIconVisible(A){var s;return!!((s=this.getPokemon(A))!=null&&s.isOnField())}getIcon(A,s){const R=s?super.getIcon(A):A.add.container(0,0);if(s)R.setScale(.5);else{const n=this.getPokemon(A);if(n){const S=A.addPokemonIcon(n,-2,10,0,.5);R.add(S),R.setName(n.id.toString())}const I=A.add.sprite(16,this.virtualStackCount?8:16,"items");I.setScale(.5),I.setOrigin(0,.5),I.setTexture("items",this.type.iconImage),R.add(I);const a=this.getIconStackText(A);a&&R.add(a);const r=this.getIconStackText(A,!0);r&&R.add(r)}return R}getPokemon(A){return this.pokemonId?A.getPokemonById(this.pokemonId)??void 0:void 0}getScoreMultiplier(){return 1}getMaxStackCount(A,s){const R=this.getPokemon(A);return R?R.isPlayer()&&s?A.getPlayerParty().map(n=>this.getMaxHeldItemCount(n)).reduce((n,I)=>Math.max(n,I),0):this.getMaxHeldItemCount(R):0}};L(jv,"PokemonHeldItemModifier");let Ht=jv;const eV=class eV extends Ht{constructor(A,s,R,n){super(A,s,n),this.isTransferable=!1,this.battlesLeft=R}lapse(...A){return!!--this.battlesLeft}getIcon(A,s){var n;const R=super.getIcon(A,s);if((n=this.getPokemon(A))!=null&&n.isPlayer()){const I=le(A,27,0,this.battlesLeft.toString(),X.PARTY,{fontSize:"66px",color:jl.PINK});I.setShadow(0,0),I.setStroke(eC.RED,16),I.setOrigin(1,0),R.add(I)}return R}getBattlesLeft(){return this.battlesLeft}getMaxStackCount(A,s){return 1}};L(eV,"LapsingPokemonHeldItemModifier");let qr=eV;const uN=class uN extends qr{constructor(A,s,R,n,I){super(A,s,n||10,I),this.isTransferable=!1,this.teraType=R}matchType(A){return A instanceof uN&&A.teraType===this.teraType}clone(){return new uN(this.type,this.pokemonId,this.teraType,this.battlesLeft,this.stackCount)}getArgs(){return[this.pokemonId,this.teraType,this.battlesLeft]}apply(A){return A.isPlayer()&&(A.scene.triggerPokemonFormChange(A,Mi),A.scene.validateAchv(lt.TERASTALLIZE),this.teraType===i.STELLAR&&A.scene.validateAchv(lt.STELLAR_TERASTALLIZE)),A.updateSpritePipelineData(),!0}lapse(A){const s=super.lapse(A);return s||(A.scene.triggerPokemonFormChange(A,hi),A.updateSpritePipelineData()),s}getScoreMultiplier(){return 1.25}getMaxHeldItemCount(A){return 1}};L(uN,"TerastallizeModifier");let OR=uN;const DN=class DN extends Ht{constructor(A,s,R,n){super(A,s,n),this.isTransferable=!1,this.stat=R}matchType(A){return A instanceof DN?A.stat===this.stat:!1}clone(){return new DN(this.type,this.pokemonId,this.stat,this.stackCount)}getArgs(){return super.getArgs().concat(this.stat)}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s[this.stat]=Math.floor(s[this.stat]*(1+this.getStackCount()*.1)),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(A){return A.ivs[this.stat]}};L(DN,"BaseStatModifier");let qS=DN;const MN=class MN extends Ht{constructor(A,s,R,n,I){super(A,s,I),this.isTransferable=!1,this.species=R,this.required=n}matchType(A){return A instanceof MN&&A.species===this.species&&A.required===this.required}clone(){return new MN(this.type,this.pokemonId,this.species,this.required,this.stackCount)}getArgs(){return super.getArgs().concat([this.species,this.required])}apply(){return!0}getIconStackText(A,s){if(this.getMaxStackCount(A)===1||s&&!this.virtualStackCount)return null;const R=A.getPokemonById(this.pokemonId);this.stackCount=R?R.evoCounter+R.getHeldItems().filter(I=>I instanceof $n).length+R.scene.findModifiers(I=>I instanceof mR||I instanceof qn||I instanceof jn).length:this.stackCount;const n=A.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return n.letterSpacing=-.5,this.getStackCount()>=this.required&&n.setTint(16291984),n.setOrigin(0,0),n}getMaxHeldItemCount(A){return this.stackCount=A.evoCounter+A.getHeldItems().filter(s=>s instanceof $n).length+A.scene.findModifiers(s=>s instanceof mR||s instanceof qn||s instanceof jn).length,999}};L(MN,"EvoTrackerModifier");let jS=MN;const hN=class hN extends Ht{constructor(A,s,R,n){super(A,s,n),this.isTransferable=!1,this.statModifier=R}matchType(A){return A instanceof hN&&this.statModifier===A.statModifier}clone(){return new hN(this.type,this.pokemonId,this.statModifier,this.stackCount)}getArgs(){return super.getArgs().concat(this.statModifier)}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s.forEach((R,n)=>{const I=Math.floor(n===0?R+this.statModifier/2:R+this.statModifier);s[n]=Math.min(Math.max(I,1),999999)}),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 2}};L(hN,"PokemonBaseStatTotalModifier");let eo=hN;const cN=class cN extends Ht{constructor(A,s,R,n,I){super(A,s,I),this.isTransferable=!1,this.statModifier=R,this.stats=n}matchType(A){return A instanceof cN&&A.statModifier===this.statModifier&&this.stats.every(s=>A.stats.some(R=>s===R))}clone(){return new cN(this.type,this.pokemonId,this.statModifier,this.stats,this.stackCount)}getArgs(){return[...super.getArgs(),this.statModifier,this.stats]}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s.forEach((R,n)=>{if(this.stats.includes(n)){const I=Math.floor(R+this.statModifier);s[n]=Math.min(Math.max(I,1),999999)}}),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(A){return 1}};L(cN,"PokemonBaseStatFlatModifier");let to=cN;const _N=class _N extends Ht{constructor(A,s,R){super(A,s,R),this.isTransferable=!1}matchType(A){return A instanceof _N}clone(){return new _N(this.type,this.pokemonId,this.stackCount)}getArgs(){return super.getArgs()}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&!!R}apply(A,s,R){return s===g.HP?(R.value+=this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(R.value=Math.floor(R.value*1.05))):(R.value+=2*this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(R.value=Math.floor(R.value*1.1))),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 50}};L(_N,"PokemonIncrementingStatModifier");let ra=_N;const PN=class PN extends Ht{constructor(A,s,R,n,I){super(A,s,I),this.stats=R,this.multiplier=n}clone(){return new PN(this.type,this.pokemonId,this.stats,this.multiplier,this.stackCount)}getArgs(){return[...super.getArgs(),this.stats,this.multiplier]}matchType(A){if(A instanceof PN){const s=A;if(s.multiplier===this.multiplier&&s.stats.length===this.stats.length)return s.stats.every((R,n)=>R===this.stats[n])}return!1}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&this.stats.includes(s)}apply(A,s,R){return R.value*=this.multiplier,!0}getMaxHeldItemCount(A){return 1}};L(PN,"StatBoosterModifier");let jr=PN;const eM=class eM extends jr{clone(){return super.clone()}matchType(A){return A instanceof eM}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&!A.isMax()}apply(A,s,R){const n=A.getSpeciesForm(!0).speciesId in kt;return A.isFusion()&&A.getFusionSpeciesForm(!0).speciesId in kt!==n?(R.value*=1+(this.multiplier-1)/2,!0):n?super.apply(A,s,R):!1}};L(eM,"EvolutionStatBoosterModifier");let ND=eM;const GN=class GN extends jr{constructor(A,s,R,n,I,a){super(A,s,R,n,a),this.species=I}clone(){return new GN(this.type,this.pokemonId,this.stats,this.multiplier,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(A){if(A instanceof GN){const s=A;if(s.species.length===this.species.length)return super.matchType(A)&&s.species.every((R,n)=>R===this.species[n])}return!1}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&(this.species.includes(A.getSpeciesForm(!0).speciesId)||A.isFusion()&&this.species.includes(A.getFusionSpeciesForm(!0).speciesId))}contains(A,s){return this.species.includes(A)&&this.stats.includes(s)}};L(GN,"SpeciesStatBoosterModifier");let La=GN;const HN=class HN extends Ht{constructor(A,s,R,n){super(A,s,n),this.stageIncrement=R}clone(){return new HN(this.type,this.pokemonId,this.stageIncrement,this.stackCount)}getArgs(){return super.getArgs().concat(this.stageIncrement)}matchType(A){return A instanceof HN?A.stageIncrement===this.stageIncrement:!1}apply(A,s){return s.value+=this.stageIncrement,!0}getMaxHeldItemCount(A){return 1}};L(HN,"CritBoosterModifier");let eL=HN;const dN=class dN extends eL{constructor(A,s,R,n,I){super(A,s,R,I),this.species=n}clone(){return new dN(this.type,this.pokemonId,this.stageIncrement,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(A){return A instanceof dN}shouldApply(A,s){return super.shouldApply(A,s)&&(this.species.includes(A.getSpeciesForm(!0).speciesId)||A.isFusion()&&this.species.includes(A.getFusionSpeciesForm(!0).speciesId))}};L(dN,"SpeciesCritBoosterModifier");let Ao=dN;const fN=class fN extends Ht{constructor(A,s,R,n,I){super(A,s,I),this.moveType=R,this.boostMultiplier=n*.01}matchType(A){if(A instanceof fN){const s=A;return s.moveType===this.moveType&&s.boostMultiplier===this.boostMultiplier}return!1}clone(){return new fN(this.type,this.pokemonId,this.moveType,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat([this.moveType,this.boostMultiplier*100])}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&typeof s=="number"&&R instanceof Rt}apply(A,s,R){return s===this.moveType&&R.value>=1?(R.value=Math.floor(R.value*(1+this.getStackCount()*this.boostMultiplier)),!0):!1}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 99}};L(fN,"AttackTypeBoosterModifier");let Sn=fN;const BN=class BN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof BN}clone(){return new BN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return!s.value&&A.randSeedInt(10)<this.getStackCount()?(s.value=!0,A.scene.queueMessage(D.t("modifier:surviveDamageApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name})),!0):!1}getMaxHeldItemCount(A){return 5}};L(BN,"SurviveDamageModifier");let Eo=BN;const gN=class gN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof gN}clone(){return new gN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){var R;if(!s.value&&A.randSeedInt(10)<this.getStackCount()){s.value=!0;const n=((R=A.scene.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===NA.FIGHT,I=this.type instanceof DA&&this.type.id==="QUICK_CLAW";return n&&I&&A.scene.queueMessage(D.t("modifier:bypassSpeedChanceApply",{pokemonName:ee(A),itemName:D.t("modifierType:ModifierType.QUICK_CLAW.name")})),!0}return!1}getMaxHeldItemCount(A){return 3}};L(gN,"BypassSpeedChanceModifier");let Na=gN;const KN=class KN extends Ht{constructor(A,s,R){super(A,s,R),this.chance=10}matchType(A){return A instanceof KN}clone(){return new KN(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return A.battleSummonData&&!s.value&&A.randSeedInt(100)<this.getStackCount()*this.chance?(s.value=!0,!0):!1}getMaxHeldItemCount(A){return 3}};L(KN,"FlinchChanceModifier");let so=KN;const mN=class mN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof mN}clone(){return new mN(this.type,this.pokemonId,this.stackCount)}apply(A){if(!A.isFullHp()){const s=A.scene;return s.unshiftPhase(new mE(s,A.getBattlerIndex(),Yt(A.getMaxHp()/16)*this.stackCount,D.t("modifier:turnHealApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name}),!0)),!0}return!1}getMaxHeldItemCount(A){return 4}};L(mN,"TurnHealModifier");let Ta=mN;const FN=class FN extends Ht{constructor(A,s,R){switch(super(A,s,R),A.id){case"TOXIC_ORB":this.effect=Re.TOXIC;break;case"FLAME_ORB":this.effect=Re.BURN;break}}matchType(A){return A instanceof FN}clone(){return new FN(this.type,this.pokemonId,this.stackCount)}apply(A){return A.trySetStatus(this.effect,!0,void 0,void 0,this.type.name)}getMaxHeldItemCount(A){return 1}getStatusEffect(){return this.effect}};L(FN,"TurnStatusEffectModifier");let qi=FN;const pN=class pN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof pN}clone(){return new pN(this.type,this.pokemonId,this.stackCount)}apply(A){if(A.turnData.totalDamageDealt&&!A.isFullHp()){const s=A.scene;s.unshiftPhase(new mE(s,A.getBattlerIndex(),Yt(A.turnData.totalDamageDealt/8)*this.stackCount,D.t("modifier:hitHealApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name}),!0))}return!0}getMaxHeldItemCount(A){return 4}};L(pN,"HitHealModifier");let ji=pN;const WN=class WN extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof WN}clone(){return new WN(this.type,this.stackCount)}shouldApply(A){return!!A}apply(A){return A.value+=this.getStackCount(),!0}getMaxStackCount(A,s){return 99}};L(WN,"LevelIncrementBoosterModifier");let eI=WN;const YN=class YN extends Ht{constructor(A,s,R,n){super(A,s,n),this.berryType=R,this.consumed=!1}matchType(A){return A instanceof YN&&A.berryType===this.berryType}clone(){return new YN(this.type,this.pokemonId,this.berryType,this.stackCount)}getArgs(){return super.getArgs().concat(this.berryType)}shouldApply(A){return!this.consumed&&super.shouldApply(A)&&lJ(this.berryType)(A)}apply(A){const s=new Lt(!1);return A.scene.applyModifiers(Sa,A.isPlayer(),A,s),a8(this.berryType)(A),s.value||(this.consumed=!0),!0}getMaxHeldItemCount(A){return[Dt.LUM,Dt.LEPPA,Dt.SITRUS,Dt.ENIGMA].includes(this.berryType)?2:3}};L(YN,"BerryModifier");let lE=YN;const yN=class yN extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof yN}clone(){return new yN(this.type,this.stackCount)}shouldApply(A,s){return!!A&&!!s}apply(A,s){return s.value||(s.value=A.randSeedInt(10)<this.getStackCount()*3),!0}getMaxStackCount(A){return 3}};L(yN,"PreserveBerryModifier");let Sa=yN;const wN=class wN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof wN}clone(){return new wN(this.type,this.pokemonId,this.stackCount)}apply(A){return A.scene.unshiftPhase(new mE(A.scene,A.getBattlerIndex(),Yt(A.getMaxHp()/2),D.t("modifier:pokemonInstantReviveApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name}),!1,!1,!0)),A.resetStatus(!0,!1,!0),(A.isPlayer()?A.scene.getPlayerField():A.scene.getEnemyField()).forEach(R=>Ct(pr,R,null,!1)),!0}getMaxHeldItemCount(A){return 1}};L(wN,"PokemonInstantReviveModifier");let tL=wN;const vN=class vN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof vN}clone(){return new vN(this.type,this.pokemonId,this.stackCount)}apply(A){let s=!1;for(const R of MO)A.getStatStage(R)<0&&(A.setStatStage(R,0),s=!0);return s&&A.scene.queueMessage(D.t("modifier:resetNegativeStatStageApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name})),s}getMaxHeldItemCount(A){return 2}};L(vN,"ResetNegativeStatStageModifier");let AL=vN;const tV=class tV extends $i{constructor(A,s){super(A),this.pokemonId=s}shouldApply(A,...s){return!!A&&(this.pokemonId===-1||A.id===this.pokemonId)}getPokemon(A){return A.getPlayerParty().find(s=>s.id===this.pokemonId)}};L(tV,"ConsumablePokemonModifier");let KR=tV;const AV=class AV extends KR{constructor(A,s,R,n,I,a){super(A,s),this.restorePoints=R,this.restorePercent=n,this.healStatus=I,this.fainted=!!a}shouldApply(A,s){return super.shouldApply(A)&&(this.fainted||!Ve(s)&&typeof s=="number")}apply(A,s){if(!A.hp===this.fainted){let R=this.restorePoints;return this.fainted||(R=Math.floor(R*s)),(this.fainted||this.healStatus)&&A.resetStatus(!0,!0),A.hp=Math.min(A.hp+Math.max(Math.ceil(Math.max(Math.floor(this.restorePercent*.01*A.getMaxHp()),R)),1),A.getMaxHp()),!0}return!1}};L(AV,"PokemonHpRestoreModifier");let tI=AV;const EV=class EV extends KR{constructor(A,s){super(A,s)}apply(A){return A.resetStatus(!0,!0),!0}};L(EV,"PokemonStatusHealModifier");let TD=EV;const sV=class sV extends KR{constructor(A,s,R){super(A,s),this.moveIndex=R}};L(sV,"ConsumablePokemonMoveModifier");let Ro=sV;const RV=class RV extends Ro{constructor(A,s,R,n){super(A,s,R),this.restorePoints=n}apply(A){const s=A.getMoveset()[this.moveIndex];return s&&(s.ppUsed=this.restorePoints>-1?Math.max(s.ppUsed-this.restorePoints,0):0),!0}};L(RV,"PokemonPpRestoreModifier");let SD=RV;const OV=class OV extends KR{constructor(A,s,R){super(A,s),this.restorePoints=R}apply(A){for(const s of A.getMoveset())s&&(s.ppUsed=this.restorePoints>-1?Math.max(s.ppUsed-this.restorePoints,0):0);return!0}};L(OV,"PokemonAllMovePpRestoreModifier");let oD=OV;const nV=class nV extends Ro{constructor(A,s,R,n){super(A,s,R),this.upPoints=n}apply(A){const s=A.getMoveset()[this.moveIndex];return s&&!s.maxPpOverride&&(s.ppUp=Math.min(s.ppUp+this.upPoints,3)),!0}};L(nV,"PokemonPpUpModifier");let lD=nV;const iV=class iV extends KR{constructor(A,s,R){super(A,s),this.nature=R}apply(A){return A.setCustomNature(this.nature),A.scene.gameData.unlockSpeciesNature(A.species,this.nature),!0}};L(iV,"PokemonNatureChangeModifier");let CD=iV;const IV=class IV extends KR{constructor(A,s){super(A,s)}apply(A,s=new Rt(1)){return A.scene.applyModifiers(eI,!0,s),A.level+=s.value,A.level<=A.scene.getMaxExpLevel(!0)&&(A.exp=ZR(A.level,A.species.growthRate),A.levelExp=0),A.addFriendship(C7),A.scene.unshiftPhase(new IS(A.scene,A.scene.getPlayerParty().indexOf(A),A.level-s.value,A.level)),!0}};L(IV,"PokemonLevelIncrementModifier");let Oo=IV;const aV=class aV extends KR{constructor(A,s){super(A,s)}apply(A){return A.scene.unshiftPhase(new kn(A.scene,A.scene.getPlayerParty().indexOf(A),this.type.moveId,o1.TM)),!0}};L(aV,"TmModifier");let UD=aV;const rV=class rV extends KR{constructor(A,s,R){super(A,s),this.levelMoveIndex=R}apply(A,s){return A.scene.unshiftPhase(new kn(A.scene,A.scene.getPlayerParty().indexOf(A),A.getLearnableLevelMoves()[this.levelMoveIndex],o1.MEMORY,s)),!0}};L(rV,"RememberMoveModifier");let no=rV;const LV=class LV extends KR{constructor(A,s){super(A,s)}apply(A){let s=kt.hasOwnProperty(A.species.speciesId)?kt[A.species.speciesId].find(R=>R.item===this.type.evolutionItem&&(R.evoFormKey===null||(R.preFormKey||"")===A.getFormKey())&&(!R.condition||R.condition.predicate(A))):null;return!s&&A.isFusion()&&(s=kt[A.fusionSpecies.speciesId].find(R=>R.item===this.type.evolutionItem&&(R.evoFormKey===null||(R.preFormKey||"")===A.getFusionFormKey())&&(!R.condition||R.condition.predicate(A))),s&&(s=new pn(A.species.speciesId,s))),s?(A.scene.unshiftPhase(new iS(A.scene,A,s,A.level-1)),!0):!1}};L(LV,"EvolutionItemModifier");let uD=LV;const NV=class NV extends KR{constructor(A,s,R){super(A,s),this.fusePokemonId=R}shouldApply(A,s){return super.shouldApply(A,s)&&!!s&&this.fusePokemonId===s.id}async apply(A,s){return await A.fuse(s),!0}};L(NV,"FusePokemonModifier");let io=NV;const VN=class VN extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof VN}apply(){return!0}clone(){return new VN(this.type,this.stackCount)}getMaxStackCount(A){return 5}};L(VN,"MultipleParticipantExpBonusModifier");let Io=VN;const xN=class xN extends VA{constructor(A,s,R){super(A,R),this.multiplier=s}match(A){return A instanceof xN}clone(){return new xN(this.type,this.multiplier,this.stackCount)}getArgs(){return[this.multiplier]}apply(A){return A.value*=1+(this.multiplier-1)*this.getStackCount(),!0}getMaxStackCount(A){return 5}};L(xN,"HealingBoosterModifier");let oa=xN;const bN=class bN extends VA{constructor(A,s,R){super(A,R),this.boostMultiplier=s*.01}match(A){return A instanceof bN?A.boostMultiplier===this.boostMultiplier:!1}clone(){return new bN(this.type,this.boostMultiplier*100,this.stackCount)}getArgs(){return[this.boostMultiplier*100]}apply(A){return A.value=Math.floor(A.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxStackCount(A,s){return this.boostMultiplier<1?this.boostMultiplier<.6?99:30:10}};L(bN,"ExpBoosterModifier");let EL=bN;const kN=class kN extends Ht{constructor(A,s,R,n){super(A,s,n),this.boostMultiplier=R*.01}matchType(A){return A instanceof kN?A.boostMultiplier===this.boostMultiplier:!1}clone(){return new kN(this.type,this.pokemonId,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.boostMultiplier*100)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return s.value=Math.floor(s.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxHeldItemCount(A){return 99}};L(kN,"PokemonExpBoosterModifier");let ao=kN;const ZN=class ZN extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof ZN}clone(){return new ZN(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(A){return 5}};L(ZN,"ExpShareModifier");let ro=ZN;const XN=class XN extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof XN}clone(){return new XN(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(A){return 4}};L(XN,"ExpBalanceModifier");let Lo=XN;const QN=class QN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof QN}clone(){return new QN(this.type,this.pokemonId,this.stackCount)}apply(A,s){return s.value=Math.floor(s.value*(1+.5*this.getStackCount())),!0}getMaxHeldItemCount(A){return 3}};L(QN,"PokemonFriendshipBoosterModifier");let No=QN;const JN=class JN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof JN}clone(){return new JN(this.type,this.pokemonId,this.stackCount)}apply(A,s){return s.value!==1?(s.value+=.1*this.getStackCount()*(s.value>1?1:-1),!0):!1}getMaxHeldItemCount(A){return 10}};L(JN,"PokemonNatureWeightModifier");let To=JN;const $N=class $N extends Ht{constructor(A,s,R,n){super(A,s,n),this.accuracyAmount=R}matchType(A){return A instanceof $N?A.accuracyAmount===this.accuracyAmount:!1}clone(){return new $N(this.type,this.pokemonId,this.accuracyAmount,this.stackCount)}getArgs(){return super.getArgs().concat(this.accuracyAmount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return s.value=Math.min(s.value+this.accuracyAmount*this.getStackCount(),100),!0}getMaxHeldItemCount(A){return 3}};L($N,"PokemonMoveAccuracyBoosterModifier");let So=$N;const zN=class zN extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof zN}clone(){return new zN(this.type,this.pokemonId,this.stackCount)}apply(A,s,R=null,n=null){if(!ye[s].canBeMultiStrikeEnhanced(A))return!1;if(Ve(R)){if(!Ve(n))return this.applyDamageModifier(A,n)}else return this.applyHitCountBoost(R);return!1}applyHitCountBoost(A){return A.value+=this.getStackCount(),!0}applyDamageModifier(A,s){return A.turnData.hitsLeft===A.turnData.hitCount?(s.value*=1-.25*this.getStackCount(),!0):A.turnData.hitCount-A.turnData.hitsLeft!==this.getStackCount()+1?(s.value*=.25,!0):!1}getMaxHeldItemCount(A){return 2}};L(zN,"PokemonMultiHitModifier");let Jn=zN;const qN=class qN extends Ht{constructor(A,s,R,n,I){super(A,s,I),this.isTransferable=!1,this.formChangeItem=R,this.active=n}matchType(A){return A instanceof qN&&A.formChangeItem===this.formChangeItem}clone(){return new qN(this.type,this.pokemonId,this.formChangeItem,this.active,this.stackCount)}getArgs(){return super.getArgs().concat(this.formChangeItem,this.active)}apply(A,s){const R=this.active&&!s;R&&(this.active=!1);const n=A.scene.triggerPokemonFormChange(A,Pe);return R&&(this.active=!0),n}getMaxHeldItemCount(A){return 1}};L(qN,"PokemonFormChangeItemModifier");let IR=qN;const TV=class TV extends $i{constructor(A,s){super(A),this.moneyMultiplier=s}apply(A){const s=new Rt(A.getWaveMoneyAmount(this.moneyMultiplier));return A.applyModifiers(mR,!0,s),A.addMoney(s.value),A.getPlayerParty().map(R=>{var n,I;if(((n=R.species)==null?void 0:n.speciesId)===e.GIMMIGHOUL||((I=R.fusionSpecies)==null?void 0:I.speciesId)===e.GIMMIGHOUL){R.evoCounter?R.evoCounter+=Math.min(Math.floor(this.moneyMultiplier),3):R.evoCounter=Math.min(Math.floor(this.moneyMultiplier),3);const a=RM($.EVOLUTION_TRACKER_GIMMIGHOUL).newModifier(R);A.addModifier(a)}}),!0}};L(TV,"MoneyRewardModifier");let DD=TV;const jN=class jN extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof jN}clone(){return new jN(this.type,this.stackCount)}apply(A){return A.value+=Math.floor(A.value*.2*this.getStackCount()),!0}getMaxStackCount(A){return 5}};L(jN,"MoneyMultiplierModifier");let mR=jN;const eT=class eT extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof eT}clone(){return new eT(this.type,this.pokemonId,this.stackCount)}apply(A,s){const R=A.scene,n=new Rt(Math.floor(s.value*(.5*this.getStackCount())));return R.applyModifiers(mR,!0,n),R.addMoney(n.value),!0}getMaxHeldItemCount(A){return 5}};L(eT,"DamageMoneyRewardModifier");let $n=eT;const tT=class tT extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof tT}apply(A){const s=Math.floor(A.money*.1*this.getStackCount());A.addMoney(s);const R=navigator.language||"en-US",n=s.toLocaleString(R),I=D.t("modifier:moneyInterestApply",{moneyAmount:n,typeName:this.type.name});return A.queueMessage(I,void 0,!0),!0}clone(){return new tT(this.type,this.stackCount)}getMaxStackCount(A){return 5}};L(tT,"MoneyInterestModifier");let oo=tT;const AT=class AT extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof AT}clone(){return new AT(this.type,this.stackCount)}apply(A){return A.value*=Math.pow(2,-1-this.getStackCount()),!0}getMaxStackCount(A){return 4}};L(AT,"HiddenAbilityRateBoosterModifier");let zn=AT;const ET=class ET extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof ET}clone(){return new ET(this.type,this.stackCount)}apply(A){return A.value*=Math.pow(2,1+this.getStackCount()),!0}getMaxStackCount(A){return 4}};L(ET,"ShinyRateBoosterModifier");let la=ET;const sT=class sT extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof sT}clone(){return new sT(this.type,this.stackCount)}apply(A){return A.value*=1.5+this.getStackCount()/2,!0}getMaxStackCount(A){return 3}};L(sT,"CriticalCatchChanceBoosterModifier");let lo=sT;const RT=class RT extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof RT}apply(){return!0}clone(){return new RT(this.type,this.stackCount)}getMaxStackCount(A){return 1}};L(RT,"LockModifierTiersModifier");let Co=RT;const OT=class OT extends VA{constructor(A,s,R){super(A,R),this.shopMultiplier=s??2.5}match(A){return A instanceof OT}clone(){return new OT(this.type,this.shopMultiplier,this.stackCount)}apply(A){return A.value=Math.floor(A.value*this.shopMultiplier),!0}getArgs(){return super.getArgs().concat(this.shopMultiplier)}getMaxStackCount(A){return 1}};L(OT,"HealShopCostModifier");let AI=OT;const nT=class nT extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof nT}clone(){return new nT(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(A){return 1}};L(nT,"BoostBugSpawnModifier");let Uo=nT;const iT=class iT extends Ht{constructor(A,s,R){super(A,s,R)}matchType(A){return A instanceof iT}clone(){return new iT(this.type,this.pokemonId,this.stackCount)}apply(){return!0}getMaxHeldItemCount(A){return 1}};L(iT,"SwitchEffectTransferModifier");let Fi=iT;const SV=class SV extends Ht{constructor(A,s,R){super(A,s,R)}getTargets(A,...s){return A instanceof QR?A.getOpponents():[]}apply(A,s,...R){const n=this.getTargets(A,s);if(!n.length)return!1;const I=n[A.randSeedInt(n.length)],a=this.getTransferredItemCount();if(!a)return!1;const r=A.isPlayer()?PE.PLAYER:A.hasTrainer()?PE.TRAINER:PE.WILD,S=[],o=A.scene.findModifiers(u=>u instanceof Ht&&u.pokemonId===I.id&&u.isTransferable,I.isPlayer());let l=o.map(u=>u.type.getOrInferTier(r)).reduce((u,h)=>Math.max(h,u),0),C=o.filter(u=>u.type.getOrInferTier(r)===l);const M=[];for(let u=0;u<a;u++){if(!C.length){for(;l--&&!C.length;)C=o.filter(G=>G.type.tier===l);if(!C.length)break}const h=A.randSeedInt(o.length),P=o[h];M.push(A.scene.tryTransferHeldItemModifier(P,A,!1).then(G=>{G&&(S.push(P.type),o.splice(h,1))}))}return Promise.all(M).then(()=>{for(const u of S)A.scene.queueMessage(this.getTransferMessage(A,I,u))}),!!S.length}};L(SV,"HeldItemTransferModifier");let uo=SV;const IT=class IT extends uo{constructor(A,s,R){super(A,s,R),this.isTransferable=!0}matchType(A){return A instanceof IT}clone(){return new IT(this.type,this.pokemonId,this.stackCount)}getTransferredItemCount(){return this.getStackCount()}getTransferMessage(A,s,R){return D.t("modifier:turnHeldItemTransferApply",{pokemonNameWithAffix:ee(s),itemName:R.name,pokemonName:A.getNameToRender(),typeName:this.type.name})}getMaxHeldItemCount(A){return 1}setTransferrableFalse(){this.isTransferable=!1}};L(IT,"TurnHeldItemTransferModifier");let Ca=IT;const aT=class aT extends uo{constructor(A,s,R,n){super(A,s,n),this.chance=R/100}getTargets(A,s){return s?[s]:[]}matchType(A){return A instanceof aT}clone(){return new aT(this.type,this.pokemonId,this.chance*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.chance*100)}getTransferredItemCount(){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?1:0}getTransferMessage(A,s,R){return D.t("modifier:contactHeldItemTransferApply",{pokemonNameWithAffix:ee(s),itemName:R.name,pokemonName:ee(A),typeName:this.type.name})}getMaxHeldItemCount(A){return 5}};L(aT,"ContactHeldItemTransferChanceModifier");let Ua=aT;const rT=class rT extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof rT}clone(){return new rT(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(A){return 3}};L(rT,"IvScannerModifier");let ua=rT;const LT=class LT extends VA{constructor(A,s){super(A,s)}match(A){return A instanceof LT}clone(){return new LT(this.type,this.stackCount)}apply(A){return A.value+=this.getStackCount(),!0}getMaxStackCount(A){return 3}};L(LT,"ExtraModifierModifier");let qn=LT;const NT=class NT extends zi{constructor(A,s,R,n){super(A,s,R,n)}add(A,s,R){for(const n of A)if(this.match(n)){const I=n,a=this.getMaxBattles()+I.getBattleCount();return I.setNewBattleCount(a),R.playSound("se/restore"),!0}return A.push(this),!0}clone(){return new NT(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(A){return A instanceof NT}apply(A){return A.value+=this.getStackCount(),!0}};L(NT,"TempExtraModifierModifier");let jn=NT;const oV=class oV extends VA{constructor(A,s){super(A,s)}getMaxStackCount(A){return 5}};L(oV,"EnemyPersistentModifier");let Un=oV;const lV=class lV extends Un{constructor(A,s,R){super(A,R),this.damageMultiplier=s}apply(A){return A.value=Math.floor(A.value*Math.pow(this.damageMultiplier,this.getStackCount())),!0}getMaxStackCount(A){return 99}};L(lV,"EnemyDamageMultiplierModifier");let MD=lV;const TT=class TT extends MD{constructor(A,s,R){super(A,1.05,R)}match(A){return A instanceof TT}clone(){return new TT(this.type,(this.damageMultiplier-1)*100,this.stackCount)}getArgs(){return[(this.damageMultiplier-1)*100]}getMaxStackCount(A){return 999}};L(TT,"EnemyDamageBoosterModifier");let Do=TT;const ST=class ST extends MD{constructor(A,s,R){super(A,.975,R)}match(A){return A instanceof ST}clone(){return new ST(this.type,(1-this.damageMultiplier)*100,this.stackCount)}getArgs(){return[(1-this.damageMultiplier)*100]}getMaxStackCount(A){return A.currentBattle.waveIndex<2e3?super.getMaxStackCount(A):999}};L(ST,"EnemyDamageReducerModifier");let Mo=ST;const oT=class oT extends Un{constructor(A,s,R){super(A,R),this.healPercent=2}match(A){return A instanceof oT}clone(){return new oT(this.type,this.healPercent,this.stackCount)}getArgs(){return[this.healPercent]}apply(A){if(!A.isFullHp()){const s=A.scene;return s.unshiftPhase(new mE(s,A.getBattlerIndex(),Math.max(Math.floor(A.getMaxHp()/(100/this.healPercent))*this.stackCount,1),D.t("modifier:enemyTurnHealApply",{pokemonNameWithAffix:ee(A)}),!0,!1,!1,!1,!0)),!0}return!1}getMaxStackCount(A){return 10}};L(oT,"EnemyTurnHealModifier");let ho=oT;const lT=class lT extends Un{constructor(A,s,R,n){super(A,n),this.effect=s,this.chance=.025*(this.effect===Re.BURN||this.effect===Re.POISON?2:1)}match(A){return A instanceof lT&&A.effect===this.effect}clone(){return new lT(this.type,this.effect,this.chance*100,this.stackCount)}getArgs(){return[this.effect,this.chance*100]}apply(A){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?A.trySetStatus(this.effect,!0):!1}getMaxStackCount(A){return 10}};L(lT,"EnemyAttackStatusEffectChanceModifier");let sL=lT;const CT=class CT extends Un{constructor(A,s,R){super(A,R),this.chance=.025}match(A){return A instanceof CT}clone(){return new CT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return A.status&&Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?(A.scene.queueMessage(EI(A.status.effect,ee(A))),A.resetStatus(),A.updateInfo(),!0):!1}getMaxStackCount(A){return 10}};L(CT,"EnemyStatusEffectHealChanceModifier");let co=CT;const UT=class UT extends Un{constructor(A,s,R){super(A,R||10),this.chance=2}match(A){return A instanceof UT}clone(){return new UT(this.type,this.chance,this.stackCount)}getArgs(){return[this.chance]}apply(A){return A.battleData.endured||A.randSeedInt(100)>=this.chance*this.getStackCount()?!1:(A.addTag(Y.ENDURE_TOKEN,1),A.battleData.endured=!0,!0)}getMaxStackCount(A){return 10}};L(UT,"EnemyEndureChanceModifier");let _o=UT;const uT=class uT extends Un{constructor(A,s,R){super(A,R),this.chance=s/100}match(A){return A instanceof uT&&A.chance===this.chance}clone(){return new uT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return Phaser.Math.RND.realInRange(0,1)>=this.chance*this.getStackCount()?!1:(A.value=!0,!0)}getMaxStackCount(A){return 10}};L(uT,"EnemyFusionChanceModifier");let Po=uT;function D1(E,A=!0){const s=A?Ye.STARTING_MODIFIER_OVERRIDE:Ye.OPP_MODIFIER_OVERRIDE;!s||s.length===0||!E||(A||E.clearEnemyModifiers(),s.forEach(R=>{const n=$[R.name];let I=n();if(I instanceof cE){const r="type"in R&&R.type!==null?[R.type]:void 0;I=I.generateType([],r)}const a=I&&I.withIdFromFunc(n).newModifier();a&&(a.stackCount=R.count||1,A?E.addModifier(a,!0,!1,!1,!0):E.addEnemyModifier(a,!0,!0))}))}L(D1,"overrideModifiers");function M1(E,A,s=!0){const R=s?Ye.STARTING_HELD_ITEMS_OVERRIDE:Ye.OPP_HELD_ITEMS_OVERRIDE;!R||R.length===0||!E||(s||E.clearEnemyHeldItemModifiers(A),R.forEach(n=>{const I=$[n.name];let a=I();const r=n.count||1;if(a instanceof cE){const o="type"in n&&n.type!==null?[n.type]:void 0;a=a.generateType([],o)}const S=a&&a.withIdFromFunc(I).newModifier(A);S&&(S.pokemonId=A.id,S.stackCount=r,s?E.addModifier(S,!0,!1,!1,!0):E.addEnemyModifier(S,!0,!0))}))}L(M1,"overrideHeldItems");var r8=(E=>(E[E.NONE=0]="NONE",E[E.SHORT=1]="SHORT",E[E.MEDIUM=2]="MEDIUM",E[E.LONG=3]="LONG",E[E.VERY_LONG=4]="VERY_LONG",E[E.NEVER=5]="NEVER",E))(r8||{}),Tr=(E=>(E[E.NONE=0]="NONE",E[E.LINKING_CORD=1]="LINKING_CORD",E[E.SUN_STONE=2]="SUN_STONE",E[E.MOON_STONE=3]="MOON_STONE",E[E.LEAF_STONE=4]="LEAF_STONE",E[E.FIRE_STONE=5]="FIRE_STONE",E[E.WATER_STONE=6]="WATER_STONE",E[E.THUNDER_STONE=7]="THUNDER_STONE",E[E.ICE_STONE=8]="ICE_STONE",E[E.DUSK_STONE=9]="DUSK_STONE",E[E.DAWN_STONE=10]="DAWN_STONE",E[E.SHINY_STONE=11]="SHINY_STONE",E[E.CRACKED_POT=12]="CRACKED_POT",E[E.SWEET_APPLE=13]="SWEET_APPLE",E[E.TART_APPLE=14]="TART_APPLE",E[E.STRAWBERRY_SWEET=15]="STRAWBERRY_SWEET",E[E.UNREMARKABLE_TEACUP=16]="UNREMARKABLE_TEACUP",E[E.UPGRADE=17]="UPGRADE",E[E.DUBIOUS_DISC=18]="DUBIOUS_DISC",E[E.DRAGON_SCALE=19]="DRAGON_SCALE",E[E.PRISM_SCALE=20]="PRISM_SCALE",E[E.RAZOR_CLAW=21]="RAZOR_CLAW",E[E.RAZOR_FANG=22]="RAZOR_FANG",E[E.REAPER_CLOTH=23]="REAPER_CLOTH",E[E.ELECTIRIZER=24]="ELECTIRIZER",E[E.MAGMARIZER=25]="MAGMARIZER",E[E.PROTECTOR=26]="PROTECTOR",E[E.SACHET=27]="SACHET",E[E.WHIPPED_DREAM=28]="WHIPPED_DREAM",E[E.SYRUPY_APPLE=29]="SYRUPY_APPLE",E[E.CHIPPED_POT=30]="CHIPPED_POT",E[E.GALARICA_CUFF=31]="GALARICA_CUFF",E[E.GALARICA_WREATH=32]="GALARICA_WREATH",E[E.AUSPICIOUS_ARMOR=33]="AUSPICIOUS_ARMOR",E[E.MALICIOUS_ARMOR=34]="MALICIOUS_ARMOR",E[E.MASTERPIECE_TEACUP=35]="MASTERPIECE_TEACUP",E[E.SUN_FLUTE=36]="SUN_FLUTE",E[E.MOON_FLUTE=37]="MOON_FLUTE",E[E.BLACK_AUGURITE=51]="BLACK_AUGURITE",E[E.PEAT_BLOCK=52]="PEAT_BLOCK",E[E.METAL_ALLOY=53]="METAL_ALLOY",E[E.SCROLL_OF_DARKNESS=54]="SCROLL_OF_DARKNESS",E[E.SCROLL_OF_WATERS=55]="SCROLL_OF_WATERS",E[E.LEADERS_CREST=56]="LEADERS_CREST",E))(Tr||{});const CV=class CV{constructor(A,s,R,n,I,a,r){this.speciesId=A,this.preFormKey=s,this.evoFormKey=R,this.level=n,this.item=I||0,this.condition=a,this.wildDelay=r??0}};L(CV,"SpeciesFormEvolution");let pt=CV;const UV=class UV extends pt{constructor(A,s,R,n,I){super(A,null,null,s,R,n,I)}};L(UV,"SpeciesEvolution");let w=UV;const uV=class uV extends pt{constructor(A,s){super(s.speciesId,s.preFormKey,s.evoFormKey,s.level,s.item,s.condition,s.wildDelay),this.primarySpeciesId=A}};L(uV,"FusionSpeciesFormEvolution");let pn=uV;const DV=class DV{constructor(A,s){this.predicate=A,this.enforceFunc=s}};L(DV,"SpeciesEvolutionCondition");let it=DV;const MV=class MV extends it{constructor(A,s,R){super(n=>n.friendship>=A&&(!s||s(n)),R)}};L(MV,"SpeciesFriendshipEvolutionCondition");let OE=MV;const kt={[e.BULBASAUR]:[new w(e.IVYSAUR,16,null,null)],[e.IVYSAUR]:[new w(e.VENUSAUR,32,null,null)],[e.CHARMANDER]:[new w(e.CHARMELEON,16,null,null)],[e.CHARMELEON]:[new w(e.CHARIZARD,36,null,null)],[e.SQUIRTLE]:[new w(e.WARTORTLE,16,null,null)],[e.WARTORTLE]:[new w(e.BLASTOISE,36,null,null)],[e.CATERPIE]:[new w(e.METAPOD,7,null,null)],[e.METAPOD]:[new w(e.BUTTERFREE,10,null,null)],[e.WEEDLE]:[new w(e.KAKUNA,7,null,null)],[e.KAKUNA]:[new w(e.BEEDRILL,10,null,null)],[e.PIDGEY]:[new w(e.PIDGEOTTO,18,null,null)],[e.PIDGEOTTO]:[new w(e.PIDGEOT,36,null,null)],[e.RATTATA]:[new w(e.RATICATE,20,null,null)],[e.SPEAROW]:[new w(e.FEAROW,20,null,null)],[e.EKANS]:[new w(e.ARBOK,22,null,null)],[e.SANDSHREW]:[new w(e.SANDSLASH,22,null,null)],[e.NIDORAN_F]:[new w(e.NIDORINA,16,null,null)],[e.NIDORAN_M]:[new w(e.NIDORINO,16,null,null)],[e.ZUBAT]:[new w(e.GOLBAT,22,null,null)],[e.ODDISH]:[new w(e.GLOOM,21,null,null)],[e.PARAS]:[new w(e.PARASECT,24,null,null)],[e.VENONAT]:[new w(e.VENOMOTH,31,null,null)],[e.DIGLETT]:[new w(e.DUGTRIO,26,null,null)],[e.MEOWTH]:[new pt(e.PERSIAN,"","",28,null,null)],[e.PSYDUCK]:[new w(e.GOLDUCK,33,null,null)],[e.MANKEY]:[new w(e.PRIMEAPE,28,null,null)],[e.POLIWAG]:[new w(e.POLIWHIRL,25,null,null)],[e.ABRA]:[new w(e.KADABRA,16,null,null)],[e.MACHOP]:[new w(e.MACHOKE,28,null,null)],[e.BELLSPROUT]:[new w(e.WEEPINBELL,21,null,null)],[e.TENTACOOL]:[new w(e.TENTACRUEL,30,null,null)],[e.GEODUDE]:[new w(e.GRAVELER,25,null,null)],[e.PONYTA]:[new w(e.RAPIDASH,40,null,null)],[e.SLOWPOKE]:[new w(e.SLOWBRO,37,null,null),new w(e.SLOWKING,1,1,null,4)],[e.MAGNEMITE]:[new w(e.MAGNETON,30,null,null)],[e.DODUO]:[new w(e.DODRIO,31,null,null)],[e.SEEL]:[new w(e.DEWGONG,34,null,null)],[e.GRIMER]:[new w(e.MUK,38,null,null)],[e.GASTLY]:[new w(e.HAUNTER,25,null,null)],[e.DROWZEE]:[new w(e.HYPNO,26,null,null)],[e.KRABBY]:[new w(e.KINGLER,28,null,null)],[e.VOLTORB]:[new w(e.ELECTRODE,30,null,null)],[e.CUBONE]:[new w(e.ALOLA_MAROWAK,28,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),new w(e.MAROWAK,28,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.TYROGUE]:[new w(e.HITMONLEE,20,null,new it(E=>{var A;return((A=E.getMoveset(!0).find(s=>s&&[t.LOW_SWEEP,t.MACH_PUNCH,t.RAPID_SPIN].includes(s==null?void 0:s.moveId)))==null?void 0:A.moveId)===t.LOW_SWEEP})),new w(e.HITMONCHAN,20,null,new it(E=>{var A;return((A=E.getMoveset(!0).find(s=>s&&[t.LOW_SWEEP,t.MACH_PUNCH,t.RAPID_SPIN].includes(s==null?void 0:s.moveId)))==null?void 0:A.moveId)===t.MACH_PUNCH})),new w(e.HITMONTOP,20,null,new it(E=>{var A;return((A=E.getMoveset(!0).find(s=>s&&[t.LOW_SWEEP,t.MACH_PUNCH,t.RAPID_SPIN].includes(s==null?void 0:s.moveId)))==null?void 0:A.moveId)===t.RAPID_SPIN}))],[e.KOFFING]:[new w(e.GALAR_WEEZING,35,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),new w(e.WEEZING,35,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.RHYHORN]:[new w(e.RHYDON,42,null,null)],[e.HORSEA]:[new w(e.SEADRA,32,null,null)],[e.GOLDEEN]:[new w(e.SEAKING,33,null,null)],[e.SMOOCHUM]:[new w(e.JYNX,30,null,null)],[e.ELEKID]:[new w(e.ELECTABUZZ,30,null,null)],[e.MAGBY]:[new w(e.MAGMAR,30,null,null)],[e.MAGIKARP]:[new w(e.GYARADOS,20,null,null)],[e.OMANYTE]:[new w(e.OMASTAR,40,null,null)],[e.KABUTO]:[new w(e.KABUTOPS,40,null,null)],[e.DRATINI]:[new w(e.DRAGONAIR,30,null,null)],[e.DRAGONAIR]:[new w(e.DRAGONITE,55,null,null)],[e.CHIKORITA]:[new w(e.BAYLEEF,16,null,null)],[e.BAYLEEF]:[new w(e.MEGANIUM,32,null,null)],[e.CYNDAQUIL]:[new w(e.QUILAVA,14,null,null)],[e.QUILAVA]:[new w(e.HISUI_TYPHLOSION,36,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),new w(e.TYPHLOSION,36,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.TOTODILE]:[new w(e.CROCONAW,18,null,null)],[e.CROCONAW]:[new w(e.FERALIGATR,30,null,null)],[e.SENTRET]:[new w(e.FURRET,15,null,null)],[e.HOOTHOOT]:[new w(e.NOCTOWL,20,null,null)],[e.LEDYBA]:[new w(e.LEDIAN,18,null,null)],[e.SPINARAK]:[new w(e.ARIADOS,22,null,null)],[e.CHINCHOU]:[new w(e.LANTURN,27,null,null)],[e.NATU]:[new w(e.XATU,25,null,null)],[e.MAREEP]:[new w(e.FLAAFFY,15,null,null)],[e.FLAAFFY]:[new w(e.AMPHAROS,30,null,null)],[e.MARILL]:[new w(e.AZUMARILL,18,null,null)],[e.HOPPIP]:[new w(e.SKIPLOOM,18,null,null)],[e.SKIPLOOM]:[new w(e.JUMPLUFF,27,null,null)],[e.WOOPER]:[new w(e.QUAGSIRE,20,null,null)],[e.WYNAUT]:[new w(e.WOBBUFFET,15,null,null)],[e.PINECO]:[new w(e.FORRETRESS,31,null,null)],[e.SNUBBULL]:[new w(e.GRANBULL,23,null,null)],[e.TEDDIURSA]:[new w(e.URSARING,30,null,null)],[e.SLUGMA]:[new w(e.MAGCARGO,38,null,null)],[e.SWINUB]:[new w(e.PILOSWINE,33,null,null)],[e.REMORAID]:[new w(e.OCTILLERY,25,null,null)],[e.HOUNDOUR]:[new w(e.HOUNDOOM,24,null,null)],[e.PHANPY]:[new w(e.DONPHAN,25,null,null)],[e.LARVITAR]:[new w(e.PUPITAR,30,null,null)],[e.PUPITAR]:[new w(e.TYRANITAR,55,null,null)],[e.TREECKO]:[new w(e.GROVYLE,16,null,null)],[e.GROVYLE]:[new w(e.SCEPTILE,36,null,null)],[e.TORCHIC]:[new w(e.COMBUSKEN,16,null,null)],[e.COMBUSKEN]:[new w(e.BLAZIKEN,36,null,null)],[e.MUDKIP]:[new w(e.MARSHTOMP,16,null,null)],[e.MARSHTOMP]:[new w(e.SWAMPERT,36,null,null)],[e.POOCHYENA]:[new w(e.MIGHTYENA,18,null,null)],[e.ZIGZAGOON]:[new w(e.LINOONE,20,null,null)],[e.WURMPLE]:[new w(e.SILCOON,7,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY)),new w(e.CASCOON,7,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT))],[e.SILCOON]:[new w(e.BEAUTIFLY,10,null,null)],[e.CASCOON]:[new w(e.DUSTOX,10,null,null)],[e.LOTAD]:[new w(e.LOMBRE,14,null,null)],[e.SEEDOT]:[new w(e.NUZLEAF,14,null,null)],[e.TAILLOW]:[new w(e.SWELLOW,22,null,null)],[e.WINGULL]:[new w(e.PELIPPER,25,null,null)],[e.RALTS]:[new w(e.KIRLIA,20,null,null)],[e.KIRLIA]:[new w(e.GARDEVOIR,30,null,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE)),new w(e.GALLADE,30,null,new it(E=>E.gender===je.MALE,E=>E.gender=je.MALE))],[e.SURSKIT]:[new w(e.MASQUERAIN,22,null,null)],[e.SHROOMISH]:[new w(e.BRELOOM,23,null,null)],[e.SLAKOTH]:[new w(e.VIGOROTH,18,null,null)],[e.VIGOROTH]:[new w(e.SLAKING,36,null,null)],[e.NINCADA]:[new w(e.NINJASK,20,null,null),new w(e.SHEDINJA,20,null,new it(E=>E.scene.getPlayerParty().length<6&&E.scene.pokeballCounts[be.POKEBALL]>0))],[e.WHISMUR]:[new w(e.LOUDRED,20,null,null)],[e.LOUDRED]:[new w(e.EXPLOUD,40,null,null)],[e.MAKUHITA]:[new w(e.HARIYAMA,24,null,null)],[e.ARON]:[new w(e.LAIRON,32,null,null)],[e.LAIRON]:[new w(e.AGGRON,42,null,null)],[e.MEDITITE]:[new w(e.MEDICHAM,37,null,null)],[e.ELECTRIKE]:[new w(e.MANECTRIC,26,null,null)],[e.GULPIN]:[new w(e.SWALOT,26,null,null)],[e.CARVANHA]:[new w(e.SHARPEDO,30,null,null)],[e.WAILMER]:[new w(e.WAILORD,40,null,null)],[e.NUMEL]:[new w(e.CAMERUPT,33,null,null)],[e.SPOINK]:[new w(e.GRUMPIG,32,null,null)],[e.TRAPINCH]:[new w(e.VIBRAVA,35,null,null)],[e.VIBRAVA]:[new w(e.FLYGON,45,null,null)],[e.CACNEA]:[new w(e.CACTURNE,32,null,null)],[e.SWABLU]:[new w(e.ALTARIA,35,null,null)],[e.BARBOACH]:[new w(e.WHISCASH,30,null,null)],[e.CORPHISH]:[new w(e.CRAWDAUNT,30,null,null)],[e.BALTOY]:[new w(e.CLAYDOL,36,null,null)],[e.LILEEP]:[new w(e.CRADILY,40,null,null)],[e.ANORITH]:[new w(e.ARMALDO,40,null,null)],[e.SHUPPET]:[new w(e.BANETTE,37,null,null)],[e.DUSKULL]:[new w(e.DUSCLOPS,37,null,null)],[e.SNORUNT]:[new w(e.GLALIE,42,null,new it(E=>E.gender===je.MALE,E=>E.gender=je.MALE)),new w(e.FROSLASS,42,null,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE))],[e.SPHEAL]:[new w(e.SEALEO,32,null,null)],[e.SEALEO]:[new w(e.WALREIN,44,null,null)],[e.BAGON]:[new w(e.SHELGON,30,null,null)],[e.SHELGON]:[new w(e.SALAMENCE,50,null,null)],[e.BELDUM]:[new w(e.METANG,20,null,null)],[e.METANG]:[new w(e.METAGROSS,45,null,null)],[e.TURTWIG]:[new w(e.GROTLE,18,null,null)],[e.GROTLE]:[new w(e.TORTERRA,32,null,null)],[e.CHIMCHAR]:[new w(e.MONFERNO,14,null,null)],[e.MONFERNO]:[new w(e.INFERNAPE,36,null,null)],[e.PIPLUP]:[new w(e.PRINPLUP,16,null,null)],[e.PRINPLUP]:[new w(e.EMPOLEON,36,null,null)],[e.STARLY]:[new w(e.STARAVIA,14,null,null)],[e.STARAVIA]:[new w(e.STARAPTOR,34,null,null)],[e.BIDOOF]:[new w(e.BIBAREL,15,null,null)],[e.KRICKETOT]:[new w(e.KRICKETUNE,10,null,null)],[e.SHINX]:[new w(e.LUXIO,15,null,null)],[e.LUXIO]:[new w(e.LUXRAY,30,null,null)],[e.CRANIDOS]:[new w(e.RAMPARDOS,30,null,null)],[e.SHIELDON]:[new w(e.BASTIODON,30,null,null)],[e.BURMY]:[new w(e.MOTHIM,20,null,new it(E=>E.gender===je.MALE,E=>E.gender=je.MALE)),new w(e.WORMADAM,20,null,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE))],[e.COMBEE]:[new w(e.VESPIQUEN,21,null,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE))],[e.BUIZEL]:[new w(e.FLOATZEL,26,null,null)],[e.CHERUBI]:[new w(e.CHERRIM,25,null,null)],[e.SHELLOS]:[new w(e.GASTRODON,30,null,null)],[e.DRIFLOON]:[new w(e.DRIFBLIM,28,null,null)],[e.GLAMEOW]:[new w(e.PURUGLY,38,null,null)],[e.STUNKY]:[new w(e.SKUNTANK,34,null,null)],[e.BRONZOR]:[new w(e.BRONZONG,33,null,null)],[e.GIBLE]:[new w(e.GABITE,24,null,null)],[e.GABITE]:[new w(e.GARCHOMP,48,null,null)],[e.HIPPOPOTAS]:[new w(e.HIPPOWDON,34,null,null)],[e.SKORUPI]:[new w(e.DRAPION,40,null,null)],[e.CROAGUNK]:[new w(e.TOXICROAK,37,null,null)],[e.FINNEON]:[new w(e.LUMINEON,31,null,null)],[e.MANTYKE]:[new w(e.MANTINE,32,null,new it(E=>!!E.scene.gameData.dexData[e.REMORAID].caughtAttr),2)],[e.SNOVER]:[new w(e.ABOMASNOW,40,null,null)],[e.SNIVY]:[new w(e.SERVINE,17,null,null)],[e.SERVINE]:[new w(e.SERPERIOR,36,null,null)],[e.TEPIG]:[new w(e.PIGNITE,17,null,null)],[e.PIGNITE]:[new w(e.EMBOAR,36,null,null)],[e.OSHAWOTT]:[new w(e.DEWOTT,17,null,null)],[e.DEWOTT]:[new w(e.HISUI_SAMUROTT,36,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),new w(e.SAMUROTT,36,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.PATRAT]:[new w(e.WATCHOG,20,null,null)],[e.LILLIPUP]:[new w(e.HERDIER,16,null,null)],[e.HERDIER]:[new w(e.STOUTLAND,32,null,null)],[e.PURRLOIN]:[new w(e.LIEPARD,20,null,null)],[e.PIDOVE]:[new w(e.TRANQUILL,21,null,null)],[e.TRANQUILL]:[new w(e.UNFEZANT,32,null,null)],[e.BLITZLE]:[new w(e.ZEBSTRIKA,27,null,null)],[e.ROGGENROLA]:[new w(e.BOLDORE,25,null,null)],[e.DRILBUR]:[new w(e.EXCADRILL,31,null,null)],[e.TIMBURR]:[new w(e.GURDURR,25,null,null)],[e.TYMPOLE]:[new w(e.PALPITOAD,25,null,null)],[e.PALPITOAD]:[new w(e.SEISMITOAD,36,null,null)],[e.SEWADDLE]:[new w(e.SWADLOON,20,null,null)],[e.VENIPEDE]:[new w(e.WHIRLIPEDE,22,null,null)],[e.WHIRLIPEDE]:[new w(e.SCOLIPEDE,30,null,null)],[e.SANDILE]:[new w(e.KROKOROK,29,null,null)],[e.KROKOROK]:[new w(e.KROOKODILE,40,null,null)],[e.DARUMAKA]:[new w(e.DARMANITAN,35,null,null)],[e.DWEBBLE]:[new w(e.CRUSTLE,34,null,null)],[e.SCRAGGY]:[new w(e.SCRAFTY,39,null,null)],[e.YAMASK]:[new w(e.COFAGRIGUS,34,null,null)],[e.TIRTOUGA]:[new w(e.CARRACOSTA,37,null,null)],[e.ARCHEN]:[new w(e.ARCHEOPS,37,null,null)],[e.TRUBBISH]:[new w(e.GARBODOR,36,null,null)],[e.ZORUA]:[new w(e.ZOROARK,30,null,null)],[e.GOTHITA]:[new w(e.GOTHORITA,32,null,null)],[e.GOTHORITA]:[new w(e.GOTHITELLE,41,null,null)],[e.SOLOSIS]:[new w(e.DUOSION,32,null,null)],[e.DUOSION]:[new w(e.REUNICLUS,41,null,null)],[e.DUCKLETT]:[new w(e.SWANNA,35,null,null)],[e.VANILLITE]:[new w(e.VANILLISH,35,null,null)],[e.VANILLISH]:[new w(e.VANILLUXE,47,null,null)],[e.DEERLING]:[new w(e.SAWSBUCK,34,null,null)],[e.FOONGUS]:[new w(e.AMOONGUSS,39,null,null)],[e.FRILLISH]:[new w(e.JELLICENT,40,null,null)],[e.JOLTIK]:[new w(e.GALVANTULA,36,null,null)],[e.FERROSEED]:[new w(e.FERROTHORN,40,null,null)],[e.KLINK]:[new w(e.KLANG,38,null,null)],[e.KLANG]:[new w(e.KLINKLANG,49,null,null)],[e.TYNAMO]:[new w(e.EELEKTRIK,39,null,null)],[e.ELGYEM]:[new w(e.BEHEEYEM,42,null,null)],[e.LITWICK]:[new w(e.LAMPENT,41,null,null)],[e.AXEW]:[new w(e.FRAXURE,38,null,null)],[e.FRAXURE]:[new w(e.HAXORUS,48,null,null)],[e.CUBCHOO]:[new w(e.BEARTIC,37,null,null)],[e.MIENFOO]:[new w(e.MIENSHAO,50,null,null)],[e.GOLETT]:[new w(e.GOLURK,43,null,null)],[e.PAWNIARD]:[new w(e.BISHARP,52,null,null)],[e.BISHARP]:[new w(e.KINGAMBIT,1,56,null,4)],[e.RUFFLET]:[new w(e.HISUI_BRAVIARY,54,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),new w(e.BRAVIARY,54,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.VULLABY]:[new w(e.MANDIBUZZ,54,null,null)],[e.DEINO]:[new w(e.ZWEILOUS,50,null,null)],[e.ZWEILOUS]:[new w(e.HYDREIGON,64,null,null)],[e.LARVESTA]:[new w(e.VOLCARONA,59,null,null)],[e.CHESPIN]:[new w(e.QUILLADIN,16,null,null)],[e.QUILLADIN]:[new w(e.CHESNAUGHT,36,null,null)],[e.FENNEKIN]:[new w(e.BRAIXEN,16,null,null)],[e.BRAIXEN]:[new w(e.DELPHOX,36,null,null)],[e.FROAKIE]:[new w(e.FROGADIER,16,null,null)],[e.FROGADIER]:[new w(e.GRENINJA,36,null,null)],[e.BUNNELBY]:[new w(e.DIGGERSBY,20,null,null)],[e.FLETCHLING]:[new w(e.FLETCHINDER,17,null,null)],[e.FLETCHINDER]:[new w(e.TALONFLAME,35,null,null)],[e.SCATTERBUG]:[new w(e.SPEWPA,9,null,null)],[e.SPEWPA]:[new w(e.VIVILLON,12,null,null)],[e.LITLEO]:[new w(e.PYROAR,35,null,null)],[e.FLABEBE]:[new w(e.FLOETTE,19,null,null)],[e.SKIDDO]:[new w(e.GOGOAT,32,null,null)],[e.PANCHAM]:[new w(e.PANGORO,32,null,new it(E=>!!E.scene.getPlayerParty().find(A=>A.getTypes(!1,!1,!0).indexOf(i.DARK)>-1)),2)],[e.ESPURR]:[new pt(e.MEOWSTIC,"","female",25,null,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE)),new pt(e.MEOWSTIC,"","",25,null,new it(E=>E.gender===je.MALE,E=>E.gender=je.MALE))],[e.HONEDGE]:[new w(e.DOUBLADE,35,null,null)],[e.INKAY]:[new w(e.MALAMAR,30,null,null)],[e.BINACLE]:[new w(e.BARBARACLE,39,null,null)],[e.SKRELP]:[new w(e.DRAGALGE,48,null,null)],[e.CLAUNCHER]:[new w(e.CLAWITZER,37,null,null)],[e.TYRUNT]:[new w(e.TYRANTRUM,39,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.AMAURA]:[new w(e.AURORUS,39,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT))],[e.GOOMY]:[new w(e.HISUI_SLIGGOO,40,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),new w(e.SLIGGOO,40,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.SLIGGOO]:[new w(e.GOODRA,50,null,new it(E=>{var A;return[se.RAIN,se.FOG,se.HEAVY_RAIN].indexOf(((A=E.scene.arena.weather)==null?void 0:A.weatherType)||se.NONE)>-1}),3)],[e.BERGMITE]:[new w(e.HISUI_AVALUGG,37,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),new w(e.AVALUGG,37,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.NOIBAT]:[new w(e.NOIVERN,48,null,null)],[e.ROWLET]:[new w(e.DARTRIX,17,null,null)],[e.DARTRIX]:[new w(e.HISUI_DECIDUEYE,36,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),new w(e.DECIDUEYE,34,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.LITTEN]:[new w(e.TORRACAT,17,null,null)],[e.TORRACAT]:[new w(e.INCINEROAR,34,null,null)],[e.POPPLIO]:[new w(e.BRIONNE,17,null,null)],[e.BRIONNE]:[new w(e.PRIMARINA,34,null,null)],[e.PIKIPEK]:[new w(e.TRUMBEAK,14,null,null)],[e.TRUMBEAK]:[new w(e.TOUCANNON,28,null,null)],[e.YUNGOOS]:[new w(e.GUMSHOOS,20,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.GRUBBIN]:[new w(e.CHARJABUG,20,null,null)],[e.CUTIEFLY]:[new w(e.RIBOMBEE,25,null,null)],[e.MAREANIE]:[new w(e.TOXAPEX,38,null,null)],[e.MUDBRAY]:[new w(e.MUDSDALE,30,null,null)],[e.DEWPIDER]:[new w(e.ARAQUANID,22,null,null)],[e.FOMANTIS]:[new w(e.LURANTIS,34,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY))],[e.MORELULL]:[new w(e.SHIINOTIC,24,null,null)],[e.SALANDIT]:[new w(e.SALAZZLE,33,null,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE))],[e.STUFFUL]:[new w(e.BEWEAR,27,null,null)],[e.BOUNSWEET]:[new w(e.STEENEE,18,null,null)],[e.WIMPOD]:[new w(e.GOLISOPOD,30,null,null)],[e.SANDYGAST]:[new w(e.PALOSSAND,42,null,null)],[e.JANGMO_O]:[new w(e.HAKAMO_O,35,null,null)],[e.HAKAMO_O]:[new w(e.KOMMO_O,45,null,null)],[e.COSMOG]:[new w(e.COSMOEM,23,null,null)],[e.COSMOEM]:[new w(e.SOLGALEO,1,36,null,4),new w(e.LUNALA,1,37,null,4)],[e.MELTAN]:[new w(e.MELMETAL,48,null,null)],[e.ALOLA_RATTATA]:[new w(e.ALOLA_RATICATE,20,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT))],[e.ALOLA_DIGLETT]:[new w(e.ALOLA_DUGTRIO,26,null,null)],[e.ALOLA_GEODUDE]:[new w(e.ALOLA_GRAVELER,25,null,null)],[e.ALOLA_GRIMER]:[new w(e.ALOLA_MUK,38,null,null)],[e.GROOKEY]:[new w(e.THWACKEY,16,null,null)],[e.THWACKEY]:[new w(e.RILLABOOM,35,null,null)],[e.SCORBUNNY]:[new w(e.RABOOT,16,null,null)],[e.RABOOT]:[new w(e.CINDERACE,35,null,null)],[e.SOBBLE]:[new w(e.DRIZZILE,16,null,null)],[e.DRIZZILE]:[new w(e.INTELEON,35,null,null)],[e.SKWOVET]:[new w(e.GREEDENT,24,null,null)],[e.ROOKIDEE]:[new w(e.CORVISQUIRE,18,null,null)],[e.CORVISQUIRE]:[new w(e.CORVIKNIGHT,38,null,null)],[e.BLIPBUG]:[new w(e.DOTTLER,10,null,null)],[e.DOTTLER]:[new w(e.ORBEETLE,30,null,null)],[e.NICKIT]:[new w(e.THIEVUL,18,null,null)],[e.GOSSIFLEUR]:[new w(e.ELDEGOSS,20,null,null)],[e.WOOLOO]:[new w(e.DUBWOOL,24,null,null)],[e.CHEWTLE]:[new w(e.DREDNAW,22,null,null)],[e.YAMPER]:[new w(e.BOLTUND,25,null,null)],[e.ROLYCOLY]:[new w(e.CARKOL,18,null,null)],[e.CARKOL]:[new w(e.COALOSSAL,34,null,null)],[e.SILICOBRA]:[new w(e.SANDACONDA,36,null,null)],[e.ARROKUDA]:[new w(e.BARRASKEWDA,26,null,null)],[e.TOXEL]:[new pt(e.TOXTRICITY,"","lowkey",30,null,new it(E=>[At.LONELY,At.BOLD,At.RELAXED,At.TIMID,At.SERIOUS,At.MODEST,At.MILD,At.QUIET,At.BASHFUL,At.CALM,At.GENTLE,At.CAREFUL].indexOf(E.getNature())>-1)),new pt(e.TOXTRICITY,"","amped",30,null,null)],[e.SIZZLIPEDE]:[new w(e.CENTISKORCH,28,null,null)],[e.HATENNA]:[new w(e.HATTREM,32,null,null)],[e.HATTREM]:[new w(e.HATTERENE,42,null,null)],[e.IMPIDIMP]:[new w(e.MORGREM,32,null,null)],[e.MORGREM]:[new w(e.GRIMMSNARL,42,null,null)],[e.CUFANT]:[new w(e.COPPERAJAH,34,null,null)],[e.DREEPY]:[new w(e.DRAKLOAK,50,null,null)],[e.DRAKLOAK]:[new w(e.DRAGAPULT,60,null,null)],[e.GALAR_MEOWTH]:[new w(e.PERRSERKER,28,null,null)],[e.GALAR_PONYTA]:[new w(e.GALAR_RAPIDASH,40,null,null)],[e.GALAR_FARFETCHD]:[new w(e.SIRFETCHD,30,null,null,3)],[e.GALAR_SLOWPOKE]:[new w(e.GALAR_SLOWBRO,1,31,null,4),new w(e.GALAR_SLOWKING,1,32,null,4)],[e.GALAR_MR_MIME]:[new w(e.MR_RIME,42,null,null)],[e.GALAR_CORSOLA]:[new w(e.CURSOLA,38,null,null)],[e.GALAR_ZIGZAGOON]:[new w(e.GALAR_LINOONE,20,null,null)],[e.GALAR_LINOONE]:[new w(e.OBSTAGOON,35,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT))],[e.GALAR_YAMASK]:[new w(e.RUNERIGUS,34,null,null)],[e.HISUI_ZORUA]:[new w(e.HISUI_ZOROARK,30,null,null)],[e.HISUI_SLIGGOO]:[new w(e.HISUI_GOODRA,50,null,new it(E=>{var A;return[se.RAIN,se.FOG,se.HEAVY_RAIN].indexOf(((A=E.scene.arena.weather)==null?void 0:A.weatherType)||se.NONE)>-1}),3)],[e.SPRIGATITO]:[new w(e.FLORAGATO,16,null,null)],[e.FLORAGATO]:[new w(e.MEOWSCARADA,36,null,null)],[e.FUECOCO]:[new w(e.CROCALOR,16,null,null)],[e.CROCALOR]:[new w(e.SKELEDIRGE,36,null,null)],[e.QUAXLY]:[new w(e.QUAXWELL,16,null,null)],[e.QUAXWELL]:[new w(e.QUAQUAVAL,36,null,null)],[e.LECHONK]:[new pt(e.OINKOLOGNE,"","female",18,null,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE)),new pt(e.OINKOLOGNE,"","",18,null,new it(E=>E.gender===je.MALE,E=>E.gender=je.MALE))],[e.TAROUNTULA]:[new w(e.SPIDOPS,15,null,null)],[e.NYMBLE]:[new w(e.LOKIX,24,null,null)],[e.PAWMI]:[new w(e.PAWMO,18,null,null)],[e.PAWMO]:[new w(e.PAWMOT,32,null,null)],[e.TANDEMAUS]:[new pt(e.MAUSHOLD,"","three",25,null,new it(E=>{let A=!1;return E.scene.executeWithSeedOffset(()=>A=!_e(4),E.id),A})),new w(e.MAUSHOLD,25,null,null)],[e.FIDOUGH]:[new w(e.DACHSBUN,26,null,null)],[e.SMOLIV]:[new w(e.DOLLIV,25,null,null)],[e.DOLLIV]:[new w(e.ARBOLIVA,35,null,null)],[e.NACLI]:[new w(e.NACLSTACK,24,null,null)],[e.NACLSTACK]:[new w(e.GARGANACL,38,null,null)],[e.WATTREL]:[new w(e.KILOWATTREL,25,null,null)],[e.MASCHIFF]:[new w(e.MABOSSTIFF,30,null,null)],[e.SHROODLE]:[new w(e.GRAFAIAI,28,null,null)],[e.BRAMBLIN]:[new w(e.BRAMBLEGHAST,30,null,null)],[e.TOEDSCOOL]:[new w(e.TOEDSCRUEL,30,null,null)],[e.RELLOR]:[new w(e.RABSCA,29,null,null)],[e.FLITTLE]:[new w(e.ESPATHRA,35,null,null)],[e.TINKATINK]:[new w(e.TINKATUFF,24,null,null)],[e.TINKATUFF]:[new w(e.TINKATON,38,null,null)],[e.WIGLETT]:[new w(e.WUGTRIO,26,null,null)],[e.FINIZEN]:[new w(e.PALAFIN,38,null,null)],[e.VAROOM]:[new w(e.REVAVROOM,40,null,null)],[e.GLIMMET]:[new w(e.GLIMMORA,35,null,null)],[e.GREAVARD]:[new w(e.HOUNDSTONE,30,null,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT))],[e.FRIGIBAX]:[new w(e.ARCTIBAX,35,null,null)],[e.ARCTIBAX]:[new w(e.BAXCALIBUR,54,null,null)],[e.PALDEA_WOOPER]:[new w(e.CLODSIRE,20,null,null)],[e.PIKACHU]:[new pt(e.ALOLA_RAICHU,"","",1,11,null,3),new pt(e.ALOLA_RAICHU,"partner","",1,11,null,3),new pt(e.RAICHU,"","",1,7,null,3),new pt(e.RAICHU,"partner","",1,7,null,3)],[e.NIDORINA]:[new w(e.NIDOQUEEN,1,3,null,3)],[e.NIDORINO]:[new w(e.NIDOKING,1,3,null,3)],[e.CLEFAIRY]:[new w(e.CLEFABLE,1,3,null,3)],[e.VULPIX]:[new w(e.NINETALES,1,5,null,3)],[e.JIGGLYPUFF]:[new w(e.WIGGLYTUFF,1,3,null,3)],[e.GLOOM]:[new w(e.VILEPLUME,1,4,null,3),new w(e.BELLOSSOM,1,2,null,3)],[e.GROWLITHE]:[new w(e.ARCANINE,1,5,null,3)],[e.POLIWHIRL]:[new w(e.POLIWRATH,1,6,null,3),new w(e.POLITOED,1,1,null,4)],[e.WEEPINBELL]:[new w(e.VICTREEBEL,1,4,null,3)],[e.MAGNETON]:[new w(e.MAGNEZONE,1,7,null,3)],[e.SHELLDER]:[new w(e.CLOYSTER,1,6,null,3)],[e.EXEGGCUTE]:[new w(e.ALOLA_EXEGGUTOR,1,2,null,3),new w(e.EXEGGUTOR,1,4,null,3)],[e.TANGELA]:[new w(e.TANGROWTH,34,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.ANCIENT_POWER).length>0),3)],[e.LICKITUNG]:[new w(e.LICKILICKY,32,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.ROLLOUT).length>0),3)],[e.STARYU]:[new w(e.STARMIE,1,6,null,3)],[e.EEVEE]:[new pt(e.SYLVEON,"","",1,null,new OE(120,E=>!!E.getMoveset().find(A=>(A==null?void 0:A.getMove().type)===i.FAIRY)),3),new pt(e.SYLVEON,"partner","",1,null,new OE(120,E=>!!E.getMoveset().find(A=>(A==null?void 0:A.getMove().type)===i.FAIRY)),3),new pt(e.ESPEON,"","",1,null,new OE(120,E=>E.scene.arena.getTimeOfDay()===T.DAY),3),new pt(e.ESPEON,"partner","",1,null,new OE(120,E=>E.scene.arena.getTimeOfDay()===T.DAY),3),new pt(e.UMBREON,"","",1,null,new OE(120,E=>E.scene.arena.getTimeOfDay()===T.NIGHT),3),new pt(e.UMBREON,"partner","",1,null,new OE(120,E=>E.scene.arena.getTimeOfDay()===T.NIGHT),3),new pt(e.VAPOREON,"","",1,6,null,3),new pt(e.VAPOREON,"partner","",1,6,null,3),new pt(e.JOLTEON,"","",1,7,null,3),new pt(e.JOLTEON,"partner","",1,7,null,3),new pt(e.FLAREON,"","",1,5,null,3),new pt(e.FLAREON,"partner","",1,5,null,3),new pt(e.LEAFEON,"","",1,4,null,3),new pt(e.LEAFEON,"partner","",1,4,null,3),new pt(e.GLACEON,"","",1,8,null,3),new pt(e.GLACEON,"partner","",1,8,null,3)],[e.TOGETIC]:[new w(e.TOGEKISS,1,11,null,4)],[e.AIPOM]:[new w(e.AMBIPOM,32,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.DOUBLE_HIT).length>0),3)],[e.SUNKERN]:[new w(e.SUNFLORA,1,2,null,3)],[e.YANMA]:[new w(e.YANMEGA,33,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.ANCIENT_POWER).length>0),3)],[e.MURKROW]:[new w(e.HONCHKROW,1,9,null,4)],[e.MISDREAVUS]:[new w(e.MISMAGIUS,1,9,null,4)],[e.GIRAFARIG]:[new w(e.FARIGIRAF,32,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.TWIN_BEAM).length>0),3)],[e.DUNSPARCE]:[new pt(e.DUDUNSPARCE,"","three-segment",32,null,new it(E=>{let A=!1;return E.moveset.filter(s=>(s==null?void 0:s.moveId)===t.HYPER_DRILL).length>0&&E.scene.executeWithSeedOffset(()=>A=!_e(4),E.id),A}),3),new w(e.DUDUNSPARCE,32,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.HYPER_DRILL).length>0),3)],[e.GLIGAR]:[new w(e.GLISCOR,1,22,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT),4)],[e.SNEASEL]:[new w(e.WEAVILE,1,21,new it(E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT),4)],[e.URSARING]:[new w(e.URSALUNA,1,52,null,4)],[e.PILOSWINE]:[new w(e.MAMOSWINE,1,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.ANCIENT_POWER).length>0),4)],[e.STANTLER]:[new w(e.WYRDEER,25,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.PSYSHIELD_BASH).length>0),4)],[e.LOMBRE]:[new w(e.LUDICOLO,1,6,null,3)],[e.NUZLEAF]:[new w(e.SHIFTRY,1,4,null,3)],[e.NOSEPASS]:[new w(e.PROBOPASS,1,7,null,3)],[e.SKITTY]:[new w(e.DELCATTY,1,3,null,3)],[e.ROSELIA]:[new w(e.ROSERADE,1,11,null,4)],[e.BONSLY]:[new w(e.SUDOWOODO,1,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.MIMIC).length>0),2)],[e.MIME_JR]:[new w(e.GALAR_MR_MIME,1,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.MIMIC).length>0&&(E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)),2),new w(e.MR_MIME,1,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.MIMIC).length>0&&(E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY)),2)],[e.PANSAGE]:[new w(e.SIMISAGE,1,4,null,3)],[e.PANSEAR]:[new w(e.SIMISEAR,1,5,null,3)],[e.PANPOUR]:[new w(e.SIMIPOUR,1,6,null,3)],[e.MUNNA]:[new w(e.MUSHARNA,1,3,null,3)],[e.COTTONEE]:[new w(e.WHIMSICOTT,1,2,null,3)],[e.PETILIL]:[new w(e.HISUI_LILLIGANT,1,11,null,3),new w(e.LILLIGANT,1,2,null,3)],[e.BASCULIN]:[new pt(e.BASCULEGION,"white-striped","female",40,null,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE),4),new pt(e.BASCULEGION,"white-striped","male",40,null,new it(E=>E.gender===je.MALE,E=>E.gender=je.MALE),4)],[e.MINCCINO]:[new w(e.CINCCINO,1,11,null,3)],[e.EELEKTRIK]:[new w(e.EELEKTROSS,1,7,null,4)],[e.LAMPENT]:[new w(e.CHANDELURE,1,9,null,4)],[e.FLOETTE]:[new w(e.FLORGES,1,11,null,3)],[e.DOUBLADE]:[new w(e.AEGISLASH,1,9,null,3)],[e.HELIOPTILE]:[new w(e.HELIOLISK,1,2,null,3)],[e.CHARJABUG]:[new w(e.VIKAVOLT,1,7,null,3)],[e.CRABRAWLER]:[new w(e.CRABOMINABLE,1,8,null,3)],[e.ROCKRUFF]:[new pt(e.LYCANROC,"","midday",25,null,new it(E=>(E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY)&&E.formIndex===0)),new pt(e.LYCANROC,"own-tempo","dusk",25,null,new it(E=>E.formIndex===1)),new pt(e.LYCANROC,"","midnight",25,null,new it(E=>(E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT)&&E.formIndex===0))],[e.STEENEE]:[new w(e.TSAREENA,28,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.STOMP).length>0),3)],[e.POIPOLE]:[new w(e.NAGANADEL,1,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.DRAGON_PULSE).length>0),3)],[e.ALOLA_SANDSHREW]:[new w(e.ALOLA_SANDSLASH,1,8,null,3)],[e.ALOLA_VULPIX]:[new w(e.ALOLA_NINETALES,1,8,null,3)],[e.APPLIN]:[new w(e.DIPPLIN,1,29,null,3),new w(e.FLAPPLE,1,14,null,3),new w(e.APPLETUN,1,13,null,3)],[e.CLOBBOPUS]:[new w(e.GRAPPLOCT,35,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.TAUNT).length>0))],[e.SINISTEA]:[new pt(e.POLTEAGEIST,"phony","phony",1,12,null,3),new pt(e.POLTEAGEIST,"antique","antique",1,30,null,3)],[e.MILCERY]:[new pt(e.ALCREMIE,"","vanilla-cream",1,15,new it(E=>E.scene.arena.biomeType===N.TOWN||E.scene.arena.biomeType===N.PLAINS||E.scene.arena.biomeType===N.GRASS||E.scene.arena.biomeType===N.TALL_GRASS||E.scene.arena.biomeType===N.METROPOLIS),3),new pt(e.ALCREMIE,"","ruby-cream",1,15,new it(E=>E.scene.arena.biomeType===N.BADLANDS||E.scene.arena.biomeType===N.VOLCANO||E.scene.arena.biomeType===N.GRAVEYARD||E.scene.arena.biomeType===N.FACTORY||E.scene.arena.biomeType===N.SLUM),3),new pt(e.ALCREMIE,"","matcha-cream",1,15,new it(E=>E.scene.arena.biomeType===N.FOREST||E.scene.arena.biomeType===N.SWAMP||E.scene.arena.biomeType===N.MEADOW||E.scene.arena.biomeType===N.JUNGLE),3),new pt(e.ALCREMIE,"","mint-cream",1,15,new it(E=>E.scene.arena.biomeType===N.SEA||E.scene.arena.biomeType===N.BEACH||E.scene.arena.biomeType===N.LAKE||E.scene.arena.biomeType===N.SEABED),3),new pt(e.ALCREMIE,"","lemon-cream",1,15,new it(E=>E.scene.arena.biomeType===N.DESERT||E.scene.arena.biomeType===N.POWER_PLANT||E.scene.arena.biomeType===N.DOJO||E.scene.arena.biomeType===N.RUINS||E.scene.arena.biomeType===N.CONSTRUCTION_SITE),3),new pt(e.ALCREMIE,"","salted-cream",1,15,new it(E=>E.scene.arena.biomeType===N.MOUNTAIN||E.scene.arena.biomeType===N.CAVE||E.scene.arena.biomeType===N.ICE_CAVE||E.scene.arena.biomeType===N.FAIRY_CAVE||E.scene.arena.biomeType===N.SNOWY_FOREST),3),new pt(e.ALCREMIE,"","ruby-swirl",1,15,new it(E=>E.scene.arena.biomeType===N.WASTELAND||E.scene.arena.biomeType===N.LABORATORY),3),new pt(e.ALCREMIE,"","caramel-swirl",1,15,new it(E=>E.scene.arena.biomeType===N.TEMPLE||E.scene.arena.biomeType===N.ISLAND),3),new pt(e.ALCREMIE,"","rainbow-swirl",1,15,new it(E=>E.scene.arena.biomeType===N.ABYSS||E.scene.arena.biomeType===N.SPACE||E.scene.arena.biomeType===N.END),3)],[e.DURALUDON]:[new pt(e.ARCHALUDON,"","",1,53,null,4)],[e.KUBFU]:[new pt(e.URSHIFU,"","single-strike",1,54,null,4),new pt(e.URSHIFU,"","rapid-strike",1,55,null,4)],[e.GALAR_DARUMAKA]:[new w(e.GALAR_DARMANITAN,1,8,null,3)],[e.HISUI_GROWLITHE]:[new w(e.HISUI_ARCANINE,1,5,null,3)],[e.HISUI_VOLTORB]:[new w(e.HISUI_ELECTRODE,1,4,null,3)],[e.HISUI_QWILFISH]:[new w(e.OVERQWIL,28,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.BARB_BARRAGE).length>0),3)],[e.HISUI_SNEASEL]:[new w(e.SNEASLER,1,21,new it(E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY),4)],[e.CHARCADET]:[new w(e.ARMAROUGE,1,33,null,3),new w(e.CERULEDGE,1,34,null,3)],[e.TADBULB]:[new w(e.BELLIBOLT,1,7,null,3)],[e.CAPSAKID]:[new w(e.SCOVILLAIN,1,5,null,3)],[e.CETODDLE]:[new w(e.CETITAN,1,8,null,3)],[e.POLTCHAGEIST]:[new pt(e.SINISTCHA,"counterfeit","unremarkable",1,16,null,3),new pt(e.SINISTCHA,"artisan","masterpiece",1,35,null,3)],[e.DIPPLIN]:[new w(e.HYDRAPPLE,1,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.DRAGON_CHEER).length>0),4)],[e.KADABRA]:[new w(e.ALAKAZAM,1,1,null,4)],[e.MACHOKE]:[new w(e.MACHAMP,1,1,null,4)],[e.GRAVELER]:[new w(e.GOLEM,1,1,null,4)],[e.HAUNTER]:[new w(e.GENGAR,1,1,null,4)],[e.ONIX]:[new w(e.STEELIX,1,1,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.getMove().type)===i.STEEL).length>0),4)],[e.RHYDON]:[new w(e.RHYPERIOR,1,26,null,4)],[e.SEADRA]:[new w(e.KINGDRA,1,19,null,4)],[e.SCYTHER]:[new w(e.SCIZOR,1,1,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.getMove().type)===i.STEEL).length>0),4),new w(e.KLEAVOR,1,51,null,4)],[e.ELECTABUZZ]:[new w(e.ELECTIVIRE,1,24,null,4)],[e.MAGMAR]:[new w(e.MAGMORTAR,1,25,null,4)],[e.PORYGON]:[new w(e.PORYGON2,1,17,null,3)],[e.PORYGON2]:[new w(e.PORYGON_Z,1,18,null,4)],[e.FEEBAS]:[new w(e.MILOTIC,1,20,null,4)],[e.DUSCLOPS]:[new w(e.DUSKNOIR,1,23,null,4)],[e.CLAMPERL]:[new w(e.HUNTAIL,1,1,new it(E=>E.gender===je.MALE,E=>E.gender=je.MALE),4),new w(e.GOREBYSS,1,1,new it(E=>E.gender===je.FEMALE,E=>E.gender=je.FEMALE),4)],[e.BOLDORE]:[new w(e.GIGALITH,1,1,null,4)],[e.GURDURR]:[new w(e.CONKELDURR,1,1,null,4)],[e.KARRABLAST]:[new w(e.ESCAVALIER,1,1,new it(E=>!!E.scene.gameData.dexData[e.SHELMET].caughtAttr),4)],[e.SHELMET]:[new w(e.ACCELGOR,1,1,new it(E=>!!E.scene.gameData.dexData[e.KARRABLAST].caughtAttr),4)],[e.SPRITZEE]:[new w(e.AROMATISSE,1,27,null,4)],[e.SWIRLIX]:[new w(e.SLURPUFF,1,28,null,4)],[e.PHANTUMP]:[new w(e.TREVENANT,1,1,null,4)],[e.PUMPKABOO]:[new w(e.GOURGEIST,1,1,null,4)],[e.ALOLA_GRAVELER]:[new w(e.ALOLA_GOLEM,1,1,null,4)],[e.PRIMEAPE]:[new w(e.ANNIHILAPE,35,null,new it(E=>E.moveset.filter(A=>(A==null?void 0:A.moveId)===t.RAGE_FIST).length>0),4)],[e.GOLBAT]:[new w(e.CROBAT,1,null,new OE(120),4)],[e.CHANSEY]:[new w(e.BLISSEY,1,null,new OE(200),3)],[e.PICHU]:[new pt(e.PIKACHU,"spiky","partner",1,null,new OE(90),1),new pt(e.PIKACHU,"","",1,null,new OE(90),1)],[e.CLEFFA]:[new w(e.CLEFAIRY,1,null,new OE(160),1)],[e.IGGLYBUFF]:[new w(e.JIGGLYPUFF,1,null,new OE(70),1)],[e.TOGEPI]:[new w(e.TOGETIC,1,null,new OE(70),1)],[e.AZURILL]:[new w(e.MARILL,1,null,new OE(70),1)],[e.BUDEW]:[new w(e.ROSELIA,1,null,new OE(70,E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY),1)],[e.BUNEARY]:[new w(e.LOPUNNY,1,null,new OE(70),2)],[e.CHINGLING]:[new w(e.CHIMECHO,1,null,new OE(90,E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT),2)],[e.HAPPINY]:[new w(e.CHANSEY,1,null,new OE(160),1)],[e.MUNCHLAX]:[new w(e.SNORLAX,1,null,new OE(120),3)],[e.RIOLU]:[new w(e.LUCARIO,1,null,new OE(120,E=>E.scene.arena.getTimeOfDay()===T.DAWN||E.scene.arena.getTimeOfDay()===T.DAY),3)],[e.WOOBAT]:[new w(e.SWOOBAT,1,null,new OE(90),2)],[e.SWADLOON]:[new w(e.LEAVANNY,1,null,new OE(120),3)],[e.TYPE_NULL]:[new w(e.SILVALLY,1,null,new OE(100),3)],[e.ALOLA_MEOWTH]:[new w(e.ALOLA_PERSIAN,1,null,new OE(120),3)],[e.SNOM]:[new w(e.FROSMOTH,1,null,new OE(90,E=>E.scene.arena.getTimeOfDay()===T.DUSK||E.scene.arena.getTimeOfDay()===T.NIGHT),2)],[e.GIMMIGHOUL]:[new pt(e.GHOLDENGO,"chest","",1,null,new it(E=>E.evoCounter+E.getHeldItems().filter(A=>A instanceof $n).length+E.scene.findModifiers(A=>A instanceof mR||A instanceof qn||A instanceof jn).length>9),4),new pt(e.GHOLDENGO,"roaming","",1,null,new it(E=>E.evoCounter+E.getHeldItems().filter(A=>A instanceof $n).length+E.scene.findModifiers(A=>A instanceof mR||A instanceof qn||A instanceof jn).length>9),4)]},QA={};function CJ(){const E=[oe.MEGA,"",oe.MEGA_X,"",oe.MEGA_Y].map(s=>s);Object.keys(kt).forEach(s=>{const R=kt[s];for(const n of R)n.evoFormKey&&E.indexOf(n.evoFormKey)>-1||(QA[n.speciesId]=parseInt(s))})}L(CJ,"initPokemonPrevolutions");function RL(E){if(E===-1)return D.t("biome:unknownLocation");switch(E){case N.GRASS:return D.t("biome:GRASS");case N.RUINS:return D.t("biome:RUINS");case N.END:return D.t("biome:END");default:return D.t(`biome:${N[E].toUpperCase()}`)}}L(RL,"getBiomeName");const An={[N.TOWN]:N.PLAINS,[N.PLAINS]:[N.GRASS,N.METROPOLIS,N.LAKE],[N.GRASS]:N.TALL_GRASS,[N.TALL_GRASS]:[N.FOREST,N.CAVE],[N.SLUM]:[N.CONSTRUCTION_SITE,[N.SWAMP,2]],[N.FOREST]:[N.JUNGLE,N.MEADOW],[N.SEA]:[N.SEABED,N.ICE_CAVE],[N.SWAMP]:[N.GRAVEYARD,N.TALL_GRASS],[N.BEACH]:[N.SEA,[N.ISLAND,2]],[N.LAKE]:[N.BEACH,N.SWAMP,N.CONSTRUCTION_SITE],[N.SEABED]:[N.CAVE,[N.VOLCANO,3]],[N.MOUNTAIN]:[N.VOLCANO,[N.WASTELAND,2],[N.SPACE,3]],[N.BADLANDS]:[N.DESERT,N.MOUNTAIN],[N.CAVE]:[N.BADLANDS,N.LAKE,[N.LABORATORY,2]],[N.DESERT]:[N.RUINS,[N.CONSTRUCTION_SITE,2]],[N.ICE_CAVE]:N.SNOWY_FOREST,[N.MEADOW]:[N.PLAINS,N.FAIRY_CAVE],[N.POWER_PLANT]:N.FACTORY,[N.VOLCANO]:[N.BEACH,[N.ICE_CAVE,3]],[N.GRAVEYARD]:N.ABYSS,[N.DOJO]:[N.PLAINS,[N.JUNGLE,2],[N.TEMPLE,2]],[N.FACTORY]:[N.PLAINS,[N.LABORATORY,2]],[N.RUINS]:[N.MOUNTAIN,[N.FOREST,2]],[N.WASTELAND]:N.BADLANDS,[N.ABYSS]:[N.CAVE,[N.SPACE,2],[N.WASTELAND,2]],[N.SPACE]:N.RUINS,[N.CONSTRUCTION_SITE]:[N.POWER_PLANT,[N.DOJO,2]],[N.JUNGLE]:[N.TEMPLE],[N.FAIRY_CAVE]:[N.ICE_CAVE,[N.SPACE,2]],[N.TEMPLE]:[N.DESERT,[N.SWAMP,2],[N.RUINS,2]],[N.METROPOLIS]:N.SLUM,[N.SNOWY_FOREST]:[N.FOREST,[N.MOUNTAIN,2],[N.LAKE,2]],[N.ISLAND]:N.SEA,[N.LABORATORY]:N.CONSTRUCTION_SITE},KO={};var zA=(E=>(E[E.COMMON=0]="COMMON",E[E.UNCOMMON=1]="UNCOMMON",E[E.RARE=2]="RARE",E[E.SUPER_RARE=3]="SUPER_RARE",E[E.ULTRA_RARE=4]="ULTRA_RARE",E[E.BOSS=5]="BOSS",E[E.BOSS_RARE=6]="BOSS_RARE",E[E.BOSS_SUPER_RARE=7]="BOSS_SUPER_RARE",E[E.BOSS_ULTRA_RARE=8]="BOSS_ULTRA_RARE",E))(zA||{});const L8=[],hR={[N.TOWN]:{0:{[T.DAWN]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.LEDYBA,e.HOPPIP,e.SUNKERN,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[T.DAY]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.HOPPIP,e.SUNKERN,e.SILCOON,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[T.DUSK]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.POOCHYENA,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[T.NIGHT]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.HOOTHOOT,e.SPINARAK,e.POOCHYENA,e.CASCOON,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[T.ALL]:[e.PIDGEY,e.RATTATA,e.SPEAROW,e.ZIGZAGOON,e.WURMPLE,e.TAILLOW,e.BIDOOF,e.LILLIPUP,e.FLETCHLING,e.WOOLOO,e.LECHONK]},1:{[T.DAWN]:[e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[T.DAY]:[e.NIDORAN_F,e.NIDORAN_M,e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[T.DUSK]:[e.EKANS,e.ODDISH,e.MEOWTH,e.SPINARAK,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[T.NIGHT]:[e.EKANS,e.ODDISH,e.PARAS,e.VENONAT,e.MEOWTH,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[T.ALL]:[e.NINCADA,e.WHISMUR,e.FIDOUGH]},2:{[T.DAWN]:[e.TANDEMAUS],[T.DAY]:[e.TANDEMAUS],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ABRA,e.SURSKIT,e.ROOKIDEE]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.EEVEE,e.RALTS]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DITTO]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.PLAINS]:{0:{[T.DAWN]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[T.DAY]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[T.DUSK]:[{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[T.NIGHT]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[T.ALL]:[{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.BIDOOF],15:[e.BIBAREL]},{1:[e.LECHONK],18:[e.OINKOLOGNE]}]},1:{[T.DAWN]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[T.DAY]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[T.DUSK]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[T.NIGHT]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[T.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},e.PIKACHU,{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}]},2:{[T.DAWN]:[e.PALDEA_TAUROS],[T.DAY]:[e.PALDEA_TAUROS],[T.DUSK]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[T.NIGHT]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[T.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},{1:[e.BUNEARY],20:[e.LOPUNNY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.FARFETCHD,e.LICKITUNG,e.CHANSEY,e.EEVEE,e.SNORLAX,{1:[e.DUNSPARCE],62:[e.DUDUNSPARCE]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DITTO,e.LATIAS,e.LATIOS]},5:{[T.DAWN]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[T.DAY]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[T.DUSK]:[e.PERSIAN,e.MIGHTYENA],[T.NIGHT]:[e.PERSIAN,e.MIGHTYENA],[T.ALL]:[e.LINOONE,e.BIBAREL,e.LOPUNNY,e.OINKOLOGNE]},6:{[T.DAWN]:[e.PAWMOT,e.PALDEA_TAUROS],[T.DAY]:[e.LYCANROC,e.PAWMOT,e.PALDEA_TAUROS],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.FARFETCHD,e.SNORLAX,e.LICKILICKY,e.DUDUNSPARCE]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.LATIAS,e.LATIOS]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.GRASS]:{0:{[T.DAWN]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[T.DAY]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[T.DUSK]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[T.NIGHT]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[T.ALL]:[]},1:{[T.DAWN]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[T.DAY]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[T.DUSK]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[T.NIGHT]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[T.ALL]:[]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.BULBASAUR],16:[e.IVYSAUR],32:[e.VENUSAUR]},e.GROWLITHE,{1:[e.TURTWIG],18:[e.GROTLE],32:[e.TORTERRA]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SUDOWOODO]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.VIRIZION]},5:{[T.DAWN]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[T.DAY]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.VENUSAUR,e.SUDOWOODO,e.TORTERRA]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.VIRIZION]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.TALL_GRASS]:{0:{[T.DAWN]:[{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[T.DAY]:[{1:[e.NIDORAN_F],16:[e.NIDORINA]},{1:[e.NIDORAN_M],16:[e.NIDORINO]},{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[T.DUSK]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[T.NIGHT]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[T.ALL]:[{1:[e.NINCADA],20:[e.NINJASK]},{1:[e.FOMANTIS],44:[e.LURANTIS]},{1:[e.NYMBLE],24:[e.LOKIX]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[{1:[e.PARAS],24:[e.PARASECT]},{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]}],[T.ALL]:[e.VULPIX]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.PINSIR,{1:[e.CHIKORITA],16:[e.BAYLEEF],32:[e.MEGANIUM]},{1:[e.GIRAFARIG],62:[e.FARIGIRAF]},e.ZANGOOSE,e.KECLEON,e.TROPIUS]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SCYTHER,e.SHEDINJA,e.ROTOM]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},5:{[T.DAWN]:[e.TSAREENA],[T.DAY]:[e.NIDOQUEEN,e.NIDOKING,e.TSAREENA],[T.DUSK]:[e.VILEPLUME,e.KRICKETUNE],[T.NIGHT]:[e.VILEPLUME,e.KRICKETUNE],[T.ALL]:[e.NINJASK,e.ZANGOOSE,e.KECLEON,e.LURANTIS,e.LOKIX]},6:{[T.DAWN]:[e.BELLOSSOM],[T.DAY]:[e.BELLOSSOM],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.PINSIR,e.MEGANIUM,e.FARIGIRAF]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ROTOM]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.METROPOLIS]:{0:{[T.DAWN]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[T.DAY]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[T.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[T.NIGHT]:[{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},{1:[e.PATRAT],20:[e.WATCHOG]}],[T.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.LILLIPUP],16:[e.HERDIER],32:[e.STOUTLAND]}]},1:{[T.DAWN]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[T.DAY]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[T.DUSK]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[T.NIGHT]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[T.ALL]:[e.PIKACHU,{1:[e.GLAMEOW],38:[e.PURUGLY]},e.FURFROU,{1:[e.FIDOUGH],26:[e.DACHSBUN]},e.SQUAWKABILLY]},2:{[T.DAWN]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[T.DAY]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[T.DUSK]:[e.MORPEKO],[T.NIGHT]:[e.MORPEKO],[T.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DITTO,e.EEVEE,e.SMEARGLE]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CASTFORM]},5:{[T.DAWN]:[e.BOLTUND],[T.DAY]:[e.BOLTUND],[T.DUSK]:[e.MEOWSTIC],[T.NIGHT]:[e.MEOWSTIC],[T.ALL]:[e.STOUTLAND,e.FURFROU,e.DACHSBUN]},6:{[T.DAWN]:[e.MAUSHOLD],[T.DAY]:[e.MAUSHOLD],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CASTFORM,e.REVAVROOM]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.FOREST]:{0:{[T.DAWN]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[T.DAY]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},e.BEAUTIFLY,{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[T.DUSK]:[e.BEEDRILL,{1:[e.PINECO],31:[e.FORRETRESS]},{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[T.NIGHT]:[e.BEEDRILL,{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PINECO],31:[e.FORRETRESS]},e.DUSTOX,{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[T.ALL]:[{1:[e.TAROUNTULA],15:[e.SPIDOPS]},{1:[e.NYMBLE],24:[e.LOKIX]},{1:[e.SHROODLE],28:[e.GRAFAIAI]}]},1:{[T.DAWN]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[T.DAY]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[T.DUSK]:[{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[T.NIGHT]:[{1:[e.HOOTHOOT],20:[e.NOCTOWL]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[T.ALL]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.PANSAGE],30:[e.SIMISAGE]}]},2:{[T.DAWN]:[e.EXEGGCUTE,e.STANTLER],[T.DAY]:[e.EXEGGCUTE,e.STANTLER],[T.DUSK]:[e.SCYTHER],[T.NIGHT]:[e.SCYTHER],[T.ALL]:[e.HERACROSS,{1:[e.TREECKO],16:[e.GROVYLE],36:[e.SCEPTILE]},e.TROPIUS,e.KARRABLAST,e.SHELMET,{1:[e.CHESPIN],16:[e.QUILLADIN],36:[e.CHESNAUGHT]},{1:[e.ROWLET],17:[e.DARTRIX],34:[e.DECIDUEYE]},e.SQUAWKABILLY,{1:[e.TOEDSCOOL],30:[e.TOEDSCRUEL]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[e.BLOODMOON_URSALUNA],[T.ALL]:[e.DURANT]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KARTANA,e.WO_CHIEN]},5:{[T.DAWN]:[e.VICTREEBEL,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[T.DAY]:[e.VICTREEBEL,e.BEAUTIFLY,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[T.DUSK]:[e.ARIADOS,e.FORRETRESS,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[T.NIGHT]:[e.VENOMOTH,e.NOCTOWL,e.ARIADOS,e.FORRETRESS,e.DUSTOX,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[T.ALL]:[e.WORMADAM,e.SIMISAGE,e.SPIDOPS,e.LOKIX,e.GRAFAIAI]},6:{[T.DAWN]:[e.STANTLER],[T.DAY]:[e.STANTLER],[T.DUSK]:[],[T.NIGHT]:[e.LYCANROC,e.BLOODMOON_URSALUNA],[T.ALL]:[e.HERACROSS,e.SCEPTILE,e.ESCAVALIER,e.ACCELGOR,e.DURANT,e.CHESNAUGHT,e.DECIDUEYE,e.TOEDSCRUEL]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KARTANA,e.WO_CHIEN]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CALYREX]}},[N.SEA]:{0:{[T.DAWN]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[T.DAY]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[T.DUSK]:[{1:[e.INKAY],30:[e.MALAMAR]}],[T.NIGHT]:[{1:[e.FINNEON],31:[e.LUMINEON]},{1:[e.INKAY],30:[e.MALAMAR]}],[T.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.BUIZEL],26:[e.FLOATZEL]}]},1:{[T.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[T.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[T.DUSK]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CARVANHA],30:[e.SHARPEDO]}],[T.NIGHT]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CHINCHOU],27:[e.LANTURN]},{1:[e.CARVANHA],30:[e.SHARPEDO]}],[T.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.HORSEA],32:[e.SEADRA]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.WAILMER],40:[e.WAILORD]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.WATTREL],25:[e.KILOWATTREL]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.LAPRAS,{1:[e.PIPLUP],16:[e.PRINPLUP],36:[e.EMPOLEON]},{1:[e.POPPLIO],17:[e.BRIONNE],34:[e.PRIMARINA]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KINGDRA,e.ROTOM,{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},5:{[T.DAWN]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[T.DAY]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[T.DUSK]:[e.SHARPEDO,e.MALAMAR],[T.NIGHT]:[e.SHARPEDO,e.LUMINEON,e.MALAMAR],[T.ALL]:[e.TENTACRUEL,e.FLOATZEL,e.SIMIPOUR,e.KILOWATTREL]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KINGDRA,e.EMPOLEON,e.PRIMARINA]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ROTOM]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.LUGIA]}},[N.SWAMP]:{0:{[T.DAWN]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[T.DAY]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[T.DUSK]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[T.NIGHT]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[T.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.GULPIN],26:[e.SWALOT]},{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.TYMPOLE],25:[e.PALPITOAD],36:[e.SEISMITOAD]}]},1:{[T.DAWN]:[{1:[e.EKANS],22:[e.ARBOK]}],[T.DAY]:[{1:[e.EKANS],22:[e.ARBOK]}],[T.DUSK]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[T.NIGHT]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[T.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.BARBOACH],30:[e.WHISCASH]},{1:[e.SKORUPI],40:[e.DRAPION]},e.STUNFISK,{1:[e.MAREANIE],38:[e.TOXAPEX]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.TOTODILE],18:[e.CROCONAW],30:[e.FERALIGATR]},{1:[e.MUDKIP],16:[e.MARSHTOMP],36:[e.SWAMPERT]}]},3:{[T.DAWN]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[T.DAY]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.POLITOED,e.GALAR_STUNFISK]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.AZELF,e.POIPOLE]},5:{[T.DAWN]:[e.QUAGSIRE,e.LUDICOLO],[T.DAY]:[e.QUAGSIRE,e.LUDICOLO],[T.DUSK]:[e.ARBOK,e.CLODSIRE],[T.NIGHT]:[e.ARBOK,e.CLODSIRE],[T.ALL]:[e.POLIWRATH,e.SWALOT,e.WHISCASH,e.GASTRODON,e.SEISMITOAD,e.STUNFISK,e.TOXAPEX]},6:{[T.DAWN]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[T.DAY]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.FERALIGATR,e.POLITOED,e.SWAMPERT,e.GALAR_STUNFISK]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.AZELF,e.NAGANADEL]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.BEACH]:{0:{[T.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[T.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[T.DUSK]:[e.SHELLDER],[T.NIGHT]:[e.SHELLDER],[T.ALL]:[{1:[e.KRABBY],28:[e.KINGLER]},{1:[e.CORPHISH],30:[e.CRAWDAUNT]},{1:[e.DWEBBLE],34:[e.CRUSTLE]},{1:[e.BINACLE],39:[e.BARBARACLE]},{1:[e.MAREANIE],38:[e.TOXAPEX]},{1:[e.WIGLETT],26:[e.WUGTRIO]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.CLAUNCHER],37:[e.CLAWITZER]},{1:[e.SANDYGAST],42:[e.PALOSSAND]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.QUAXLY],16:[e.QUAXWELL],36:[e.QUAQUAVAL]},e.TATSUGIRI]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},5:{[T.DAWN]:[e.STARMIE],[T.DAY]:[e.STARMIE],[T.DUSK]:[e.CLOYSTER],[T.NIGHT]:[e.CLOYSTER],[T.ALL]:[e.KINGLER,e.CRAWDAUNT,e.WORMADAM,e.CRUSTLE,e.BARBARACLE,e.CLAWITZER,e.TOXAPEX,e.PALOSSAND]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CARRACOSTA,e.QUAQUAVAL]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.LAKE]:{0:{[T.DAWN]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[T.DAY]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[T.DUSK]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[T.NIGHT]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[T.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.CHEWTLE],22:[e.DREDNAW]}]},1:{[T.DAWN]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[T.DAY]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.SURSKIT],22:[e.MASQUERAIN]},e.WISHIWASHI,e.FLAMIGO]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.SQUIRTLE],16:[e.WARTORTLE],36:[e.BLASTOISE]},{1:[e.OSHAWOTT],17:[e.DEWOTT],36:[e.SAMUROTT]},{1:[e.FROAKIE],16:[e.FROGADIER],36:[e.GRENINJA]},{1:[e.SOBBLE],16:[e.DRIZZILE],35:[e.INTELEON]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.VAPOREON,e.SLOWKING]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SUICUNE,e.MESPRIT]},5:{[T.DAWN]:[e.SWANNA,e.ARAQUANID],[T.DAY]:[e.SWANNA,e.ARAQUANID],[T.DUSK]:[e.AZUMARILL],[T.NIGHT]:[e.AZUMARILL],[T.ALL]:[e.GOLDUCK,e.SLOWBRO,e.SEAKING,e.GYARADOS,e.MASQUERAIN,e.WISHIWASHI,e.DREDNAW]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.BLASTOISE,e.VAPOREON,e.SLOWKING,e.SAMUROTT,e.GRENINJA,e.INTELEON]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SUICUNE,e.MESPRIT]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.SEABED]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.CHINCHOU],27:[e.LANTURN]},e.REMORAID,e.CLAMPERL,e.BASCULIN,{1:[e.FRILLISH],40:[e.JELLICENT]},{1:[e.ARROKUDA],26:[e.BARRASKEWDA]},e.VELUZA]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},e.SHELLDER,{1:[e.WAILMER],40:[e.WAILORD]},e.LUVDISC,{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.SKRELP],48:[e.DRAGALGE]},e.PINCURCHIN,e.DONDOZO]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.QWILFISH,e.CORSOLA,e.OCTILLERY,{1:[e.MANTYKE],52:[e.MANTINE]},e.ALOMOMOLA,{1:[e.TYNAMO],39:[e.EELEKTRIK]},e.DHELMISE]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.OMANYTE],40:[e.OMASTAR]},{1:[e.KABUTO],40:[e.KABUTOPS]},e.RELICANTH,e.PYUKUMUKU,{1:[e.GALAR_CORSOLA],38:[e.CURSOLA]},e.ARCTOVISH,e.HISUI_QWILFISH]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.FEEBAS,e.NIHILEGO]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.LANTURN,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.WAILORD,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.JELLICENT,e.ALOMOMOLA,e.DRAGALGE,e.BARRASKEWDA,e.DONDOZO]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.OMASTAR,e.KABUTOPS,e.RELICANTH,e.EELEKTROSS,e.PYUKUMUKU,e.DHELMISE,e.CURSOLA,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MILOTIC,e.NIHILEGO]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KYOGRE]}},[N.MOUNTAIN]:{0:{[T.DAWN]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[T.DAY]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[T.DUSK]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[T.NIGHT]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[T.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},{1:[e.SKIDDO],32:[e.GOGOAT]}]},1:{[T.DAWN]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[T.DAY]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[T.DUSK]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[T.NIGHT]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[T.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.NATU],25:[e.XATU]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[e.MURKROW],[T.ALL]:[e.SKARMORY,{1:[e.TORCHIC],16:[e.COMBUSKEN],36:[e.BLAZIKEN]},{1:[e.SPOINK],32:[e.GRUMPIG]},e.HAWLUCHA,e.KLAWF]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.LARVITAR],30:[e.PUPITAR]},{1:[e.CRANIDOS],30:[e.RAMPARDOS]},{1:[e.SHIELDON],30:[e.BASTIODON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},e.ROTOM,e.ARCHEOPS,{1:[e.AXEW],38:[e.FRAXURE]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.TORNADUS,e.TING_LU,e.OGERPON]},5:{[T.DAWN]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[T.DAY]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[T.DUSK]:[e.MANDIBUZZ],[T.NIGHT]:[e.MANDIBUZZ],[T.ALL]:[e.PIDGEOT,e.FEAROW,e.SKARMORY,e.AGGRON,e.GOGOAT,e.GARGANACL]},6:{[T.DAWN]:[e.HISUI_BRAVIARY],[T.DAY]:[e.HISUI_BRAVIARY],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.BLAZIKEN,e.RAMPARDOS,e.BASTIODON,e.HAWLUCHA]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ROTOM,e.TORNADUS,e.TING_LU,e.OGERPON]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.HO_OH]}},[N.BADLANDS]:{0:{[T.DAWN]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[T.DAY]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[T.DUSK]:[],[T.NIGHT]:[{1:[e.CUBONE],28:[e.MAROWAK]}],[T.ALL]:[{1:[e.DIGLETT],26:[e.DUGTRIO]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.MUDBRAY],30:[e.MUDSDALE]}]},1:{[T.DAWN]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[T.DAY]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.CUFANT],34:[e.COPPERAJAH]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ONIX,e.GLIGAR,{1:[e.POLTCHAGEIST],30:[e.SINISTCHA]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.LANDORUS,e.OKIDOGI]},5:{[T.DAWN]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[T.DAY]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[T.DUSK]:[],[T.NIGHT]:[e.MAROWAK],[T.ALL]:[e.DUGTRIO,e.GOLEM,e.RHYPERIOR,e.GLISCOR,e.EXCADRILL,e.MUDSDALE,e.COPPERAJAH]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.STEELIX,e.SINISTCHA]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.LANDORUS,e.OKIDOGI]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GROUDON]}},[N.CAVE]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.PARAS],24:[e.PARASECT]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.WHISMUR],20:[e.LOUDRED],40:[e.EXPLOUD]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.WOOBAT],20:[e.SWOOBAT]},{1:[e.BUNNELBY],20:[e.DIGGERSBY]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[{1:[e.ROCKRUFF],25:[e.LYCANROC]}],[T.NIGHT]:[],[T.ALL]:[{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},e.NOSEPASS,{1:[e.NOIBAT],48:[e.NOIVERN]},{1:[e.WIMPOD],30:[e.GOLISOPOD]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ONIX,{1:[e.FERROSEED],40:[e.FERROTHORN]},e.CARBINK,{1:[e.GLIMMET],35:[e.GLIMMORA]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SHUCKLE]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.UXIE]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.PARASECT,e.ONIX,e.CROBAT,e.URSARING,e.EXPLOUD,e.PROBOPASS,e.GIGALITH,e.SWOOBAT,e.DIGGERSBY,e.NOIVERN,e.GOLISOPOD,e.GARGANACL]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[e.LYCANROC],[T.NIGHT]:[],[T.ALL]:[e.SHUCKLE,e.FERROTHORN,e.GLIMMORA]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.UXIE]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.TERAPAGOS]}},[N.DESERT]:{0:{[T.DAWN]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[T.DAY]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[T.DUSK]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[T.NIGHT]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[T.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.SILICOBRA],36:[e.SANDACONDA]}]},1:{[T.DAWN]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[T.DAY]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MARACTUS,{1:[e.BRAMBLIN],30:[e.BRAMBLEGHAST]},e.ORTHWORM]},2:{[T.DAWN]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[T.DAY]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.DARUMAKA],35:[e.DARMANITAN]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.LILEEP],40:[e.CRADILY]},{1:[e.ANORITH],40:[e.ARMALDO]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},5:{[T.DAWN]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[T.DAY]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[T.DUSK]:[e.CACTURNE,e.KROOKODILE],[T.NIGHT]:[e.CACTURNE,e.KROOKODILE],[T.ALL]:[e.SANDSLASH,e.DRAPION,e.DARMANITAN,e.MARACTUS,e.SANDACONDA,e.BRAMBLEGHAST]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CRADILY,e.ARMALDO]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.ICE_CAVE]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.SEEL],34:[e.DEWGONG]},{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},{1:[e.VANILLITE],35:[e.VANILLISH],47:[e.VANILLUXE]},{1:[e.CUBCHOO],37:[e.BEARTIC]},{1:[e.BERGMITE],37:[e.AVALUGG]},e.CRABRAWLER,{1:[e.SNOM],20:[e.FROSMOTH]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SNEASEL,{1:[e.SNORUNT],42:[e.GLALIE]},{1:[e.SPHEAL],32:[e.SEALEO],44:[e.WALREIN]},e.EISCUE,{1:[e.CETODDLE],30:[e.CETITAN]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.JYNX,e.LAPRAS,e.FROSLASS,e.CRYOGONAL]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DELIBIRD,e.ROTOM,{1:[e.AMAURA],59:[e.AURORUS]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ARTICUNO,e.REGICE]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DEWGONG,e.GLALIE,e.WALREIN,e.WEAVILE,e.MAMOSWINE,e.FROSLASS,e.VANILLUXE,e.BEARTIC,e.CRYOGONAL,e.AVALUGG,e.CRABOMINABLE,e.CETITAN]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.JYNX,e.LAPRAS,e.GLACEON,e.AURORUS]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ARTICUNO,e.REGICE,e.ROTOM]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KYUREM]}},[N.MEADOW]:{0:{[T.DAWN]:[{1:[e.LEDYBA],18:[e.LEDIAN]},e.ROSELIA,e.COTTONEE,e.MINCCINO],[T.DAY]:[e.ROSELIA,e.COTTONEE,e.MINCCINO],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.FLABEBE],19:[e.FLOETTE]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.GOSSIFLEUR],20:[e.ELDEGOSS]},{1:[e.WOOLOO],24:[e.DUBWOOL]}]},1:{[T.DAWN]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[T.DAY]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MAREEP],15:[e.FLAAFFY],30:[e.AMPHAROS]},{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},{1:[e.GLAMEOW],38:[e.PURUGLY]},e.ORICORIO]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[e.VOLBEAT,e.ILLUMISE],[T.ALL]:[e.TAUROS,e.EEVEE,e.MILTANK,e.SPINDA,{1:[e.APPLIN],30:[e.DIPPLIN]},{1:[e.SPRIGATITO],16:[e.FLORAGATO],36:[e.MEOWSCARADA]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CHANSEY,e.SYLVEON]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MELOETTA]},5:{[T.DAWN]:[e.LEDIAN,e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[T.DAY]:[e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.TAUROS,e.MILTANK,e.GARDEVOIR,e.PURUGLY,e.ZEBSTRIKA,e.FLORGES,e.RIBOMBEE,e.DUBWOOL]},6:{[T.DAWN]:[e.HISUI_LILLIGANT],[T.DAY]:[e.HISUI_LILLIGANT],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.BLISSEY,e.SYLVEON,e.FLAPPLE,e.APPLETUN,e.MEOWSCARADA,e.HYDRAPPLE]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MELOETTA]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SHAYMIN]}},[N.POWER_PLANT]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.PIKACHU,{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.ELECTRIKE],26:[e.MANECTRIC]},{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]},e.DEDENNE,{1:[e.GRUBBIN],20:[e.CHARJABUG]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]},{1:[e.TADBULB],30:[e.BELLIBOLT]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ELECTABUZZ,e.PLUSLE,e.MINUN,e.PACHIRISU,e.EMOLGA,e.TOGEDEMARU]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.MAREEP],15:[e.FLAAFFY]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.JOLTEON,e.HISUI_VOLTORB]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.RAICHU,e.MANECTRIC,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.DEDENNE,e.VIKAVOLT,e.TOGEDEMARU,e.PAWMOT,e.BELLIBOLT]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.JOLTEON,e.AMPHAROS,e.HISUI_ELECTRODE]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ZAPDOS,e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ZEKROM]}},[N.VOLCANO]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.VULPIX,e.GROWLITHE,{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.SALANDIT],33:[e.SALAZZLE]},{1:[e.ROLYCOLY],18:[e.CARKOL],34:[e.COALOSSAL]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MAGMAR,e.TORKOAL,{1:[e.PANSEAR],30:[e.SIMISEAR]},e.HEATMOR,e.TURTONATOR]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.CHARMANDER],16:[e.CHARMELEON],36:[e.CHARIZARD]},{1:[e.CYNDAQUIL],14:[e.QUILAVA],36:[e.TYPHLOSION]},{1:[e.CHIMCHAR],14:[e.MONFERNO],36:[e.INFERNAPE]},{1:[e.TEPIG],17:[e.PIGNITE],36:[e.EMBOAR]},{1:[e.FENNEKIN],16:[e.BRAIXEN],36:[e.DELPHOX]},{1:[e.LITTEN],17:[e.TORRACAT],34:[e.INCINEROAR]},{1:[e.SCORBUNNY],16:[e.RABOOT],35:[e.CINDERACE]},{1:[e.CHARCADET],30:[e.ARMAROUGE]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.FLAREON,e.ROTOM,{1:[e.LARVESTA],59:[e.VOLCARONA]},e.HISUI_GROWLITHE]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ENTEI,e.HEATRAN,e.VOLCANION,e.CHI_YU]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.NINETALES,e.ARCANINE,e.RAPIDASH,e.MAGCARGO,e.CAMERUPT,e.TORKOAL,e.MAGMORTAR,e.SIMISEAR,e.HEATMOR,e.SALAZZLE,e.TURTONATOR,e.COALOSSAL]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CHARIZARD,e.FLAREON,e.TYPHLOSION,e.INFERNAPE,e.EMBOAR,e.VOLCARONA,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.ARMAROUGE,e.HISUI_ARCANINE]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MOLTRES,e.ENTEI,e.ROTOM,e.HEATRAN,e.VOLCANION,e.CHI_YU]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.RESHIRAM]}},[N.GRAVEYARD]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.SHUPPET],37:[e.BANETTE]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.DRIFLOON],28:[e.DRIFBLIM]},{1:[e.LITWICK],41:[e.LAMPENT]},e.PHANTUMP,e.PUMPKABOO,{1:[e.GREAVARD],60:[e.HOUNDSTONE]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.SINISTEA],30:[e.POLTEAGEIST]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MISDREAVUS,e.MIMIKYU,{1:[e.FUECOCO],16:[e.CROCALOR],36:[e.SKELEDIRGE]},e.CERULEDGE]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SPIRITOMB]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MARSHADOW,e.SPECTRIER]},5:{[T.DAWN]:[e.MAROWAK],[T.DAY]:[e.MAROWAK],[T.DUSK]:[e.MAROWAK],[T.NIGHT]:[],[T.ALL]:[e.GENGAR,e.BANETTE,e.DRIFBLIM,e.MISMAGIUS,e.DUSKNOIR,e.CHANDELURE,e.TREVENANT,e.GOURGEIST,e.MIMIKYU,e.POLTEAGEIST,e.HOUNDSTONE]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.SKELEDIRGE,e.CERULEDGE,e.HISUI_TYPHLOSION]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MARSHADOW,e.SPECTRIER]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GIRATINA]}},[N.DOJO]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},{1:[e.MEDITITE],37:[e.MEDICHAM]},{1:[e.STUFFUL],27:[e.BEWEAR]},{1:[e.CLOBBOPUS],55:[e.GRAPPLOCT]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]},{1:[e.SCRAGGY],39:[e.SCRAFTY]},{1:[e.MIENFOO],50:[e.MIENSHAO]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.LUCARIO,e.THROH,e.SAWK,{1:[e.PANCHAM],52:[e.PANGORO]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.HITMONTOP,e.GALLADE,e.GALAR_FARFETCHD]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.TERRAKION,e.KUBFU,e.GALAR_ZAPDOS]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.HARIYAMA,e.MEDICHAM,e.LUCARIO,e.TOXICROAK,e.THROH,e.SAWK,e.SCRAFTY,e.MIENSHAO,e.BEWEAR,e.GRAPPLOCT,e.ANNIHILAPE]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.HITMONTOP,e.GALLADE,e.PANGORO,e.SIRFETCHD,e.HISUI_DECIDUEYE]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.TERRAKION,e.URSHIFU]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ZAMAZENTA,e.GALAR_ZAPDOS]}},[N.FACTORY]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.TIMBURR],25:[e.GURDURR]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.BRONZOR],33:[e.BRONZONG]},e.KLEFKI]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GENESECT,e.MAGEARNA]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KLINKLANG,e.KLEFKI]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GENESECT,e.MAGEARNA]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.RUINS]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.DROWZEE],26:[e.HYPNO]},{1:[e.NATU],25:[e.XATU]},e.UNOWN,{1:[e.SPOINK],32:[e.GRUMPIG]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},e.SIGILYPH,{1:[e.TINKATINK],24:[e.TINKATUFF],38:[e.TINKATON]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MR_MIME,e.WOBBUFFET,{1:[e.GOTHITA],32:[e.GOTHORITA],41:[e.GOTHITELLE]},e.STONJOURNER]},3:{[T.DAWN]:[],[T.DAY]:[e.ESPEON],[T.DUSK]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[T.NIGHT]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[T.ALL]:[{1:[e.ARCHEN],37:[e.ARCHEOPS]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ALAKAZAM,e.HYPNO,e.XATU,e.GRUMPIG,e.CLAYDOL,e.SIGILYPH,e.GOTHITELLE,e.BEHEEYEM,e.TINKATON]},6:{[T.DAWN]:[],[T.DAY]:[e.ESPEON],[T.DUSK]:[e.RUNERIGUS],[T.NIGHT]:[e.RUNERIGUS],[T.ALL]:[e.MR_MIME,e.WOBBUFFET,e.ARCHEOPS]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KORAIDON]}},[N.WASTELAND]:{0:{[T.DAWN]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[T.DAY]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[T.DUSK]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[T.NIGHT]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[T.ALL]:[{1:[e.VIBRAVA],45:[e.FLYGON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},{1:[e.AXEW],38:[e.FRAXURE],48:[e.HAXORUS]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[T.NIGHT]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[T.ALL]:[{1:[e.SWABLU],35:[e.ALTARIA]},e.DRAMPA,e.CYCLIZAR]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[T.NIGHT]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[T.ALL]:[{1:[e.DRATINI],30:[e.DRAGONAIR],55:[e.DRAGONITE]},{1:[e.FRIGIBAX],35:[e.ARCTIBAX],54:[e.BAXCALIBUR]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.AERODACTYL,e.DRUDDIGON,{1:[e.TYRUNT],59:[e.TYRANTRUM]},e.DRACOZOLT,e.DRACOVISH]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.REGIDRAGO]},5:{[T.DAWN]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[T.DAY]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[T.DUSK]:[e.TYRANITAR,e.DRAGAPULT],[T.NIGHT]:[e.TYRANITAR,e.DRAGAPULT],[T.ALL]:[e.DRAGONITE,e.FLYGON,e.GARCHOMP,e.HAXORUS,e.DRAMPA,e.BAXCALIBUR]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.AERODACTYL,e.DRUDDIGON,e.TYRANTRUM,e.DRACOZOLT,e.DRACOVISH]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.REGIDRAGO]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DIALGA]}},[N.ABYSS]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MURKROW,{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},e.SABLEYE,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.PAWNIARD],52:[e.BISHARP],64:[e.KINGAMBIT]},{1:[e.NICKIT],18:[e.THIEVUL]},{1:[e.IMPIDIMP],32:[e.MORGREM],42:[e.GRIMMSNARL]},{1:[e.MASCHIFF],30:[e.MABOSSTIFF]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ABSOL,e.SPIRITOMB,{1:[e.ZORUA],30:[e.ZOROARK]},{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.UMBREON]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DARKRAI,e.GALAR_MOLTRES]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.HOUNDOOM,e.SABLEYE,e.ABSOL,e.HONCHKROW,e.SPIRITOMB,e.LIEPARD,e.ZOROARK,e.HYDREIGON,e.THIEVUL,e.GRIMMSNARL,e.MABOSSTIFF,e.KINGAMBIT]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.UMBREON,e.HISUI_SAMUROTT]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DARKRAI]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.PALKIA,e.YVELTAL,e.GALAR_MOLTRES]}},[N.SPACE]:{0:{[T.DAWN]:[],[T.DAY]:[e.SOLROCK],[T.DUSK]:[],[T.NIGHT]:[e.LUNATONE],[T.ALL]:[e.CLEFAIRY,{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.MUNNA],30:[e.MUSHARNA]},e.MINIOR]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]},e.SIGILYPH,{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.COSMOG],43:[e.COSMOEM]},e.CELESTEELA]},5:{[T.DAWN]:[],[T.DAY]:[e.SOLROCK],[T.DUSK]:[],[T.NIGHT]:[e.LUNATONE],[T.ALL]:[e.CLEFABLE,e.BRONZONG,e.MUSHARNA,e.REUNICLUS,e.MINIOR]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.METAGROSS,e.PORYGON_Z]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CELESTEELA]},8:{[T.DAWN]:[],[T.DAY]:[e.SOLGALEO],[T.DUSK]:[],[T.NIGHT]:[e.LUNALA],[T.ALL]:[e.RAYQUAZA,e.NECROZMA]}},[N.CONSTRUCTION_SITE]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.TIMBURR],25:[e.GURDURR]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.SCRAGGY],39:[e.SCRAFTY]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[{1:[e.GALAR_MEOWTH],28:[e.PERRSERKER]}],[T.NIGHT]:[],[T.ALL]:[e.ONIX,e.HITMONLEE,e.HITMONCHAN,e.DURALUDON]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DITTO,e.HITMONTOP]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.COBALION,e.STAKATAKA]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MACHAMP,e.CONKELDURR]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[e.PERRSERKER],[T.NIGHT]:[],[T.ALL]:[e.ARCHALUDON]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.COBALION,e.STAKATAKA]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.JUNGLE]:{0:{[T.DAWN]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[T.DAY]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[T.DUSK]:[e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[T.NIGHT]:[{1:[e.SPINARAK],22:[e.ARIADOS]},e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[T.ALL]:[e.AIPOM,{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.PIKIPEK],14:[e.TRUMBEAK],28:[e.TOUCANNON]}]},1:{[T.DAWN]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[T.DAY]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[T.DUSK]:[e.TANGELA,{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PANCHAM],52:[e.PANGORO]}],[T.NIGHT]:[e.TANGELA,{1:[e.PANCHAM],52:[e.PANGORO]}],[T.ALL]:[{1:[e.PANSAGE],30:[e.SIMISAGE]},{1:[e.PANSEAR],30:[e.SIMISEAR]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.JOLTIK],36:[e.GALVANTULA]},{1:[e.LITLEO],35:[e.PYROAR]},{1:[e.FOMANTIS],44:[e.LURANTIS]},e.FALINKS]},2:{[T.DAWN]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN,{1:[e.GALAR_PONYTA],40:[e.GALAR_RAPIDASH]}],[T.DAY]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN],[T.DUSK]:[e.ORANGURU],[T.NIGHT]:[e.ORANGURU],[T.ALL]:[e.SCYTHER,e.YANMA,{1:[e.SLAKOTH],18:[e.VIGOROTH],36:[e.SLAKING]},e.SEVIPER,e.CARNIVINE,{1:[e.SNIVY],17:[e.SERVINE],36:[e.SERPERIOR]},{1:[e.GROOKEY],16:[e.THWACKEY],35:[e.RILLABOOM]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KANGASKHAN,e.CHATOT,e.KLEAVOR]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},5:{[T.DAWN]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[T.DAY]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[T.DUSK]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[T.NIGHT]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[T.ALL]:[e.SEVIPER,e.AMBIPOM,e.CARNIVINE,e.YANMEGA,e.GALVANTULA,e.PYROAR,e.TOUCANNON,e.LURANTIS,e.FALINKS]},6:{[T.DAWN]:[e.AMOONGUSS,e.GALAR_RAPIDASH],[T.DAY]:[e.AMOONGUSS],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KANGASKHAN,e.SCIZOR,e.SLAKING,e.LEAFEON,e.SERPERIOR,e.RILLABOOM]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.KLEAVOR]}},[N.FAIRY_CAVE]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MARILL],18:[e.AZUMARILL]},e.MAWILE,{1:[e.SPRITZEE],40:[e.AROMATISSE]},{1:[e.SWIRLIX],40:[e.SLURPUFF]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.MORELULL],24:[e.SHIINOTIC]},{1:[e.MILCERY],30:[e.ALCREMIE]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CLEFAIRY,e.TOGETIC,{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},e.CARBINK,e.COMFEY,{1:[e.HATENNA],32:[e.HATTREM],42:[e.HATTERENE]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.AUDINO,e.ETERNAL_FLOETTE]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DIANCIE,e.ENAMORUS]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.WIGGLYTUFF,e.MAWILE,e.TOGEKISS,e.AUDINO,e.AROMATISSE,e.SLURPUFF,e.CARBINK,e.RIBOMBEE,e.SHIINOTIC,e.COMFEY,e.HATTERENE,e.ALCREMIE]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ETERNAL_FLOETTE]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DIANCIE,e.ENAMORUS]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.XERNEAS]}},[N.TEMPLE]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.NATU],25:[e.XATU]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.GOLETT],43:[e.GOLURK]},{1:[e.HONEDGE],35:[e.DOUBLADE]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.CHINGLING],20:[e.CHIMECHO]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.LITWICK],41:[e.LAMPENT]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.GIMMIGHOUL],40:[e.GHOLDENGO]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.HOOPA,e.TAPU_KOKO]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.CHIMECHO,e.COFAGRIGUS,e.GOLURK,e.AEGISLASH]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GHOLDENGO]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.HOOPA,e.TAPU_KOKO]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.REGIGIGAS]}},[N.SLUM]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[T.NIGHT]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[T.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.TRUBBISH],36:[e.GARBODOR]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[T.NIGHT]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[T.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[T.NIGHT]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[T.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GUZZLORD]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[e.SKUNTANK,e.WATCHOG],[T.NIGHT]:[e.SKUNTANK,e.WATCHOG],[T.ALL]:[e.MUK,e.WEEZING,e.WORMADAM,e.GARBODOR]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[e.TOXTRICITY,e.OBSTAGOON],[T.NIGHT]:[e.TOXTRICITY,e.OBSTAGOON],[T.ALL]:[e.REVAVROOM,e.GALAR_WEEZING]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GUZZLORD]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.SNOWY_FOREST]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[T.NIGHT]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[T.ALL]:[{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},e.EISCUE]},1:{[T.DAWN]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[T.DAY]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},2:{[T.DAWN]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[T.DAY]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DELIBIRD,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]}]},3:{[T.DAWN]:[e.HISUI_SNEASEL],[T.DAY]:[e.HISUI_SNEASEL],[T.DUSK]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[T.NIGHT]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[T.ALL]:[{1:[e.GALAR_MR_MIME],42:[e.MR_RIME]},e.ARCTOZOLT,e.HISUI_AVALUGG]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GLASTRIER,e.CHIEN_PAO,e.GALAR_ARTICUNO]},5:{[T.DAWN]:[e.WYRDEER],[T.DAY]:[e.WYRDEER],[T.DUSK]:[e.FROSMOTH],[T.NIGHT]:[e.FROSMOTH],[T.ALL]:[e.ABOMASNOW,e.URSALUNA]},6:{[T.DAWN]:[e.SNEASLER,e.GALAR_DARMANITAN],[T.DAY]:[e.SNEASLER,e.GALAR_DARMANITAN],[T.DUSK]:[e.HISUI_ZOROARK],[T.NIGHT]:[e.HISUI_ZOROARK],[T.ALL]:[e.MR_RIME,e.ARCTOZOLT,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GLASTRIER,e.CHIEN_PAO]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ZACIAN,e.GALAR_ARTICUNO]}},[N.ISLAND]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[T.NIGHT]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[T.ALL]:[e.ORICORIO,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]},{1:[e.ALOLA_DIGLETT],26:[e.ALOLA_DUGTRIO]},{1:[e.ALOLA_GEODUDE],25:[e.ALOLA_GRAVELER],40:[e.ALOLA_GOLEM]},{1:[e.ALOLA_GRIMER],38:[e.ALOLA_MUK]}]},1:{[T.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[T.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[T.DUSK]:[e.ALOLA_MAROWAK],[T.NIGHT]:[e.ALOLA_MAROWAK],[T.ALL]:[e.BRUXISH]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.BLACEPHALON]},5:{[T.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[T.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[T.DUSK]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[T.NIGHT]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[T.ALL]:[e.ORICORIO,e.BRUXISH,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_MUK]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.BLACEPHALON]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}},[N.LABORATORY]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.DITTO,{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ROTOM]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.TYPE_NULL]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MUK,e.ELECTRODE,e.BRONZONG,e.MAGNEZONE,e.PORYGON_Z,e.REUNICLUS,e.KLINKLANG]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ROTOM,e.ZYGARDE,e.SILVALLY]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.MEWTWO,e.MIRAIDON]}},[N.END]:{0:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS]},1:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ROARING_MOON,e.IRON_VALIANT]},2:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.WALKING_WAKE,e.IRON_LEAVES,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN]},3:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},4:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},5:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[e.ETERNATUS]},6:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},7:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]},8:{[T.DAWN]:[],[T.DAY]:[],[T.DUSK]:[],[T.NIGHT]:[],[T.ALL]:[]}}},ma={[N.TOWN]:{0:[U.YOUNGSTER],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]},[N.PLAINS]:{0:[U.BREEDER,U.TWINS],1:[U.ACE_TRAINER,U.CYCLIST],2:[U.BLACK_BELT],3:[],4:[],5:[U.CILAN,U.CHILI,U.CRESS,U.CHEREN],6:[],7:[],8:[]},[N.GRASS]:{0:[U.BREEDER,U.SCHOOL_KID],1:[U.ACE_TRAINER],2:[U.BLACK_BELT],3:[],4:[],5:[U.ERIKA],6:[],7:[],8:[]},[N.TALL_GRASS]:{0:[],1:[U.ACE_TRAINER,U.BREEDER,U.RANGER],2:[],3:[],4:[],5:[U.GARDENIA,U.VIOLA,U.BRASSIUS],6:[],7:[],8:[]},[N.METROPOLIS]:{0:[U.CLERK,U.CYCLIST,U.OFFICER,U.WAITER],1:[U.BREEDER,U.DEPOT_AGENT,U.GUITARIST],2:[U.ARTIST],3:[],4:[],5:[U.WHITNEY,U.NORMAN,U.IONO,U.LARRY],6:[],7:[],8:[]},[N.FOREST]:{0:[U.RANGER],1:[],2:[],3:[],4:[],5:[U.BUGSY,U.BURGH,U.KATY],6:[],7:[],8:[]},[N.SEA]:{0:[U.SWIMMER,U.SAILOR],1:[],2:[],3:[],4:[],5:[U.MARLON],6:[],7:[],8:[]},[N.SWAMP]:{0:[],1:[U.ACE_TRAINER],2:[U.BLACK_BELT],3:[],4:[],5:[U.JANINE,U.ROXIE],6:[],7:[],8:[]},[N.BEACH]:{0:[U.FISHERMAN,U.PARASOL_LADY,U.SAILOR],1:[U.ACE_TRAINER,U.BREEDER],2:[U.BLACK_BELT],3:[],4:[],5:[U.MISTY,U.KOFU],6:[],7:[],8:[]},[N.LAKE]:{0:[U.BREEDER,U.FISHERMAN],1:[U.ACE_TRAINER],2:[U.BLACK_BELT],3:[],4:[],5:[U.CRASHER_WAKE],6:[],7:[],8:[]},[N.SEABED]:{0:[],1:[],2:[],3:[],4:[],5:[U.JUAN],6:[],7:[],8:[]},[N.MOUNTAIN]:{0:[U.BACKPACKER,U.BLACK_BELT,U.HIKER],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.FALKNER,U.WINONA,U.SKYLA],6:[],7:[],8:[]},[N.BADLANDS]:{0:[U.BACKPACKER,U.HIKER],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.CLAY,U.GRANT],6:[],7:[],8:[]},[N.CAVE]:{0:[U.BACKPACKER,U.HIKER],1:[U.ACE_TRAINER,U.BLACK_BELT],2:[],3:[],4:[],5:[U.BROCK,U.ROXANNE,U.ROARK],6:[],7:[],8:[]},[N.DESERT]:{0:[U.SCIENTIST],1:[],2:[],3:[],4:[],5:[U.GORDIE],6:[],7:[],8:[]},[N.ICE_CAVE]:{0:[U.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[U.PRYCE,U.BRYCEN,U.WULFRIC,U.GRUSHA],6:[],7:[],8:[]},[N.MEADOW]:{0:[U.PARASOL_LADY],1:[U.ACE_TRAINER,U.BREEDER],2:[],3:[],4:[],5:[U.LENORA,U.MILO],6:[],7:[],8:[]},[N.POWER_PLANT]:{0:[U.GUITARIST,U.WORKER],1:[],2:[],3:[],4:[],5:[U.VOLKNER,U.ELESA,U.CLEMONT],6:[],7:[],8:[]},[N.VOLCANO]:{0:[U.FIREBREATHER],1:[],2:[],3:[],4:[],5:[U.BLAINE,U.FLANNERY,U.KABU],6:[],7:[],8:[]},[N.GRAVEYARD]:{0:[U.PSYCHIC],1:[U.HEX_MANIAC],2:[],3:[],4:[],5:[U.MORTY,U.ALLISTER,U.RYME],6:[],7:[],8:[]},[N.DOJO]:{0:[U.BLACK_BELT],1:[],2:[],3:[],4:[],5:[U.BRAWLY,U.MAYLENE,U.KORRINA,U.BEA],6:[],7:[],8:[]},[N.FACTORY]:{0:[U.WORKER],1:[],2:[],3:[],4:[],5:[U.JASMINE,U.BYRON],6:[],7:[],8:[]},[N.RUINS]:{0:[U.PSYCHIC,U.SCIENTIST],1:[U.ACE_TRAINER,U.BLACK_BELT],2:[],3:[],4:[],5:[U.SABRINA,U.TATE,U.LIZA,U.TULIP],6:[],7:[],8:[]},[N.WASTELAND]:{0:[U.VETERAN],1:[],2:[],3:[],4:[],5:[U.CLAIR,U.DRAYDEN,U.RAIHAN],6:[],7:[],8:[]},[N.ABYSS]:{0:[],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.MARNIE],6:[],7:[],8:[]},[N.SPACE]:{0:[],1:[],2:[],3:[],4:[],5:[U.OLYMPIA],6:[],7:[],8:[]},[N.CONSTRUCTION_SITE]:{0:[U.OFFICER,U.WORKER],1:[],2:[],3:[],4:[],5:[U.LT_SURGE,U.CHUCK,U.WATTSON],6:[],7:[],8:[]},[N.JUNGLE]:{0:[U.BACKPACKER,U.RANGER],1:[],2:[],3:[],4:[],5:[U.RAMOS],6:[],7:[],8:[]},[N.FAIRY_CAVE]:{0:[U.BEAUTY],1:[U.ACE_TRAINER,U.BREEDER],2:[],3:[],4:[],5:[U.VALERIE,U.OPAL,U.BEDE],6:[],7:[],8:[]},[N.TEMPLE]:{0:[],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.FANTINA],6:[],7:[],8:[]},[N.SLUM]:{0:[U.BIKER,U.OFFICER,U.ROUGHNECK],1:[U.BAKER],2:[],3:[],4:[],5:[U.PIERS],6:[],7:[],8:[]},[N.SNOWY_FOREST]:{0:[U.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[U.CANDICE,U.MELONY],6:[],7:[],8:[]},[N.ISLAND]:{0:[],1:[],2:[],3:[],4:[],5:[U.NESSA],6:[],7:[],8:[]},[N.LABORATORY]:{0:[],1:[],2:[],3:[],4:[],5:[U.GIOVANNI],6:[],7:[],8:[]},[N.END]:{0:[],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]}};function UJ(){const E=[[e.BULBASAUR,i.GRASS,i.POISON,[[N.GRASS,2]]],[e.IVYSAUR,i.GRASS,i.POISON,[[N.GRASS,2]]],[e.VENUSAUR,i.GRASS,i.POISON,[[N.GRASS,2],[N.GRASS,6]]],[e.CHARMANDER,i.FIRE,-1,[[N.VOLCANO,2]]],[e.CHARMELEON,i.FIRE,-1,[[N.VOLCANO,2]]],[e.CHARIZARD,i.FIRE,i.FLYING,[[N.VOLCANO,2],[N.VOLCANO,6]]],[e.SQUIRTLE,i.WATER,-1,[[N.LAKE,2]]],[e.WARTORTLE,i.WATER,-1,[[N.LAKE,2]]],[e.BLASTOISE,i.WATER,-1,[[N.LAKE,2],[N.LAKE,6]]],[e.CATERPIE,i.BUG,-1,[[N.TOWN,0,[T.DAWN,T.DAY]]]],[e.METAPOD,i.BUG,-1,[[N.TOWN,0,[T.DAWN,T.DAY]]]],[e.BUTTERFREE,i.BUG,i.FLYING,[[N.FOREST,0,[T.DAWN,T.DAY]]]],[e.WEEDLE,i.BUG,i.POISON,[[N.TOWN,0,[T.DUSK,T.NIGHT]]]],[e.KAKUNA,i.BUG,i.POISON,[[N.TOWN,0,[T.DUSK,T.NIGHT]]]],[e.BEEDRILL,i.BUG,i.POISON,[[N.FOREST,0,[T.DUSK,T.NIGHT]]]],[e.PIDGEY,i.NORMAL,i.FLYING,[[N.TOWN,0],[N.PLAINS,1],[N.MOUNTAIN,0]]],[e.PIDGEOTTO,i.NORMAL,i.FLYING,[[N.PLAINS,1],[N.MOUNTAIN,0]]],[e.PIDGEOT,i.NORMAL,i.FLYING,[[N.PLAINS,1],[N.MOUNTAIN,0],[N.MOUNTAIN,5]]],[e.RATTATA,i.NORMAL,-1,[[N.TOWN,0],[N.METROPOLIS,0],[N.SLUM,0]]],[e.RATICATE,i.NORMAL,-1,[[N.METROPOLIS,0],[N.SLUM,0]]],[e.SPEAROW,i.NORMAL,i.FLYING,[[N.TOWN,0],[N.PLAINS,1],[N.MOUNTAIN,0]]],[e.FEAROW,i.NORMAL,i.FLYING,[[N.PLAINS,1],[N.MOUNTAIN,0],[N.MOUNTAIN,5]]],[e.EKANS,i.POISON,-1,[[N.TOWN,1,[T.DUSK,T.NIGHT]],[N.FOREST,1],[N.SWAMP,1,[T.DAWN,T.DAY]],[N.SWAMP,0,[T.DUSK,T.NIGHT]]]],[e.ARBOK,i.POISON,-1,[[N.FOREST,1],[N.SWAMP,1,[T.DAWN,T.DAY]],[N.SWAMP,0,[T.DUSK,T.NIGHT]],[N.SWAMP,5,[T.DUSK,T.NIGHT]]]],[e.PIKACHU,i.ELECTRIC,-1,[[N.PLAINS,1],[N.METROPOLIS,1],[N.POWER_PLANT,0]]],[e.RAICHU,i.ELECTRIC,-1,[[N.POWER_PLANT,5]]],[e.SANDSHREW,i.GROUND,-1,[[N.BADLANDS,1],[N.DESERT,0]]],[e.SANDSLASH,i.GROUND,-1,[[N.BADLANDS,1],[N.DESERT,0],[N.DESERT,5]]],[e.NIDORAN_F,i.POISON,-1,[[N.TOWN,1,T.DAY],[N.TALL_GRASS,0,T.DAY]]],[e.NIDORINA,i.POISON,-1,[[N.TALL_GRASS,0,T.DAY]]],[e.NIDOQUEEN,i.POISON,i.GROUND,[[N.TALL_GRASS,5,T.DAY]]],[e.NIDORAN_M,i.POISON,-1,[[N.TOWN,1,T.DAY],[N.TALL_GRASS,0,T.DAY]]],[e.NIDORINO,i.POISON,-1,[[N.TALL_GRASS,0,T.DAY]]],[e.NIDOKING,i.POISON,i.GROUND,[[N.TALL_GRASS,5,T.DAY]]],[e.CLEFAIRY,i.FAIRY,-1,[[N.FAIRY_CAVE,1],[N.SPACE,0]]],[e.CLEFABLE,i.FAIRY,-1,[[N.SPACE,5]]],[e.VULPIX,i.FIRE,-1,[[N.TALL_GRASS,1],[N.VOLCANO,0]]],[e.NINETALES,i.FIRE,-1,[[N.VOLCANO,5]]],[e.JIGGLYPUFF,i.NORMAL,i.FAIRY,[[N.MEADOW,1],[N.FAIRY_CAVE,0]]],[e.WIGGLYTUFF,i.NORMAL,i.FAIRY,[[N.MEADOW,1],[N.FAIRY_CAVE,0],[N.FAIRY_CAVE,5]]],[e.ZUBAT,i.POISON,i.FLYING,[[N.PLAINS,0,T.NIGHT],[N.CAVE,0]]],[e.GOLBAT,i.POISON,i.FLYING,[[N.PLAINS,0,T.NIGHT],[N.CAVE,0]]],[e.ODDISH,i.GRASS,i.POISON,[[N.TOWN,1,[T.DUSK,T.NIGHT]],[N.TALL_GRASS,0,[T.DUSK,T.NIGHT]]]],[e.GLOOM,i.GRASS,i.POISON,[[N.TALL_GRASS,0,[T.DUSK,T.NIGHT]]]],[e.VILEPLUME,i.GRASS,i.POISON,[[N.TALL_GRASS,5,[T.DUSK,T.NIGHT]]]],[e.PARAS,i.BUG,i.GRASS,[[N.TOWN,1,T.NIGHT],[N.TALL_GRASS,1,T.NIGHT],[N.CAVE,0]]],[e.PARASECT,i.BUG,i.GRASS,[[N.TALL_GRASS,1,T.NIGHT],[N.CAVE,0],[N.CAVE,5]]],[e.VENONAT,i.BUG,i.POISON,[[N.TOWN,1,T.NIGHT],[N.TALL_GRASS,1,T.NIGHT],[N.FOREST,0,T.NIGHT]]],[e.VENOMOTH,i.BUG,i.POISON,[[N.TALL_GRASS,1,T.NIGHT],[N.FOREST,0,T.NIGHT],[N.FOREST,5,T.NIGHT]]],[e.DIGLETT,i.GROUND,-1,[[N.BADLANDS,0]]],[e.DUGTRIO,i.GROUND,-1,[[N.BADLANDS,0],[N.BADLANDS,5]]],[e.MEOWTH,i.NORMAL,-1,[[N.TOWN,1,[T.DUSK,T.NIGHT]],[N.PLAINS,0,[T.DUSK,T.NIGHT]]]],[e.PERSIAN,i.NORMAL,-1,[[N.PLAINS,0,[T.DUSK,T.NIGHT]],[N.PLAINS,5,[T.DUSK,T.NIGHT]]]],[e.PSYDUCK,i.WATER,-1,[[N.SWAMP,1],[N.LAKE,0]]],[e.GOLDUCK,i.WATER,-1,[[N.SWAMP,1],[N.LAKE,0],[N.LAKE,5]]],[e.MANKEY,i.FIGHTING,-1,[[N.PLAINS,1,[T.DUSK,T.NIGHT]],[N.DOJO,0]]],[e.PRIMEAPE,i.FIGHTING,-1,[[N.PLAINS,1,[T.DUSK,T.NIGHT]],[N.DOJO,0]]],[e.GROWLITHE,i.FIRE,-1,[[N.GRASS,2],[N.VOLCANO,0]]],[e.ARCANINE,i.FIRE,-1,[[N.VOLCANO,5]]],[e.POLIWAG,i.WATER,-1,[[N.SEA,1],[N.SWAMP,0]]],[e.POLIWHIRL,i.WATER,-1,[[N.SEA,1],[N.SWAMP,0]]],[e.POLIWRATH,i.WATER,i.FIGHTING,[[N.SWAMP,5]]],[e.ABRA,i.PSYCHIC,-1,[[N.TOWN,2],[N.PLAINS,2],[N.RUINS,1]]],[e.KADABRA,i.PSYCHIC,-1,[[N.PLAINS,2],[N.RUINS,1]]],[e.ALAKAZAM,i.PSYCHIC,-1,[[N.RUINS,5]]],[e.MACHOP,i.FIGHTING,-1,[[N.MOUNTAIN,1],[N.FACTORY,0],[N.CONSTRUCTION_SITE,0]]],[e.MACHOKE,i.FIGHTING,-1,[[N.MOUNTAIN,1],[N.FACTORY,0],[N.CONSTRUCTION_SITE,0]]],[e.MACHAMP,i.FIGHTING,-1,[[N.CONSTRUCTION_SITE,5]]],[e.BELLSPROUT,i.GRASS,i.POISON,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.FOREST,0,[T.DAWN,T.DAY]]]],[e.WEEPINBELL,i.GRASS,i.POISON,[[N.FOREST,0,[T.DAWN,T.DAY]]]],[e.VICTREEBEL,i.GRASS,i.POISON,[[N.FOREST,5,[T.DAWN,T.DAY]]]],[e.TENTACOOL,i.WATER,i.POISON,[[N.SEA,0],[N.SEABED,1]]],[e.TENTACRUEL,i.WATER,i.POISON,[[N.SEA,0],[N.SEA,5],[N.SEABED,1]]],[e.GEODUDE,i.ROCK,i.GROUND,[[N.MOUNTAIN,1],[N.BADLANDS,0],[N.CAVE,1]]],[e.GRAVELER,i.ROCK,i.GROUND,[[N.MOUNTAIN,1],[N.BADLANDS,0],[N.CAVE,1]]],[e.GOLEM,i.ROCK,i.GROUND,[[N.BADLANDS,5]]],[e.PONYTA,i.FIRE,-1,[[N.MEADOW,1,[T.DAWN,T.DAY]],[N.VOLCANO,0]]],[e.RAPIDASH,i.FIRE,-1,[[N.MEADOW,1,[T.DAWN,T.DAY]],[N.VOLCANO,0],[N.VOLCANO,5]]],[e.SLOWPOKE,i.WATER,i.PSYCHIC,[[N.SEA,0,[T.DAWN,T.DAY]],[N.SEA,1,[T.DUSK,T.NIGHT]],[N.LAKE,1]]],[e.SLOWBRO,i.WATER,i.PSYCHIC,[[N.SEA,0,[T.DAWN,T.DAY]],[N.SEA,1,[T.DUSK,T.NIGHT]],[N.LAKE,1],[N.LAKE,5]]],[e.MAGNEMITE,i.ELECTRIC,i.STEEL,[[N.POWER_PLANT,0],[N.FACTORY,0],[N.CONSTRUCTION_SITE,0],[N.LABORATORY,0]]],[e.MAGNETON,i.ELECTRIC,i.STEEL,[[N.POWER_PLANT,0],[N.FACTORY,0],[N.CONSTRUCTION_SITE,0],[N.LABORATORY,0]]],[e.FARFETCHD,i.NORMAL,i.FLYING,[[N.PLAINS,3],[N.PLAINS,6]]],[e.DODUO,i.NORMAL,i.FLYING,[[N.PLAINS,1,[T.DAWN,T.DAY]]]],[e.DODRIO,i.NORMAL,i.FLYING,[[N.PLAINS,1,[T.DAWN,T.DAY]],[N.PLAINS,5,[T.DAWN,T.DAY]]]],[e.SEEL,i.WATER,-1,[[N.ICE_CAVE,0]]],[e.DEWGONG,i.WATER,i.ICE,[[N.ICE_CAVE,0],[N.ICE_CAVE,5]]],[e.GRIMER,i.POISON,-1,[[N.SLUM,0],[N.CONSTRUCTION_SITE,1],[N.LABORATORY,0]]],[e.MUK,i.POISON,-1,[[N.CONSTRUCTION_SITE,1],[N.SLUM,0],[N.SLUM,5],[N.LABORATORY,0],[N.LABORATORY,5]]],[e.SHELLDER,i.WATER,-1,[[N.SEA,1,[T.DUSK,T.NIGHT]],[N.BEACH,0,[T.DUSK,T.NIGHT]],[N.SEABED,1]]],[e.CLOYSTER,i.WATER,i.ICE,[[N.BEACH,5,[T.DUSK,T.NIGHT]]]],[e.GASTLY,i.GHOST,i.POISON,[[N.GRAVEYARD,0],[N.TEMPLE,0]]],[e.HAUNTER,i.GHOST,i.POISON,[[N.GRAVEYARD,0],[N.TEMPLE,0]]],[e.GENGAR,i.GHOST,i.POISON,[[N.GRAVEYARD,5]]],[e.ONIX,i.ROCK,i.GROUND,[[N.BADLANDS,2],[N.CAVE,2],[N.CAVE,5],[N.CONSTRUCTION_SITE,2]]],[e.DROWZEE,i.PSYCHIC,-1,[[N.RUINS,0]]],[e.HYPNO,i.PSYCHIC,-1,[[N.RUINS,0],[N.RUINS,5]]],[e.KRABBY,i.WATER,-1,[[N.BEACH,0]]],[e.KINGLER,i.WATER,-1,[[N.BEACH,0],[N.BEACH,5]]],[e.VOLTORB,i.ELECTRIC,-1,[[N.POWER_PLANT,0],[N.FACTORY,0],[N.LABORATORY,0]]],[e.ELECTRODE,i.ELECTRIC,-1,[[N.POWER_PLANT,0],[N.FACTORY,0],[N.LABORATORY,0],[N.LABORATORY,5]]],[e.EXEGGCUTE,i.GRASS,i.PSYCHIC,[[N.FOREST,2,[T.DAWN,T.DAY]],[N.JUNGLE,1,[T.DAWN,T.DAY]]]],[e.EXEGGUTOR,i.GRASS,i.PSYCHIC,[[N.JUNGLE,5,[T.DAWN,T.DAY]]]],[e.CUBONE,i.GROUND,-1,[[N.BADLANDS,0,T.NIGHT],[N.GRAVEYARD,1],[N.TEMPLE,1]]],[e.MAROWAK,i.GROUND,-1,[[N.BADLANDS,0,T.NIGHT],[N.GRAVEYARD,1],[N.TEMPLE,1],[N.BADLANDS,5,T.NIGHT],[N.GRAVEYARD,5,[T.DAWN,T.DAY,T.DUSK]]]],[e.HITMONLEE,i.FIGHTING,-1,[[N.DOJO,2],[N.DOJO,5],[N.CONSTRUCTION_SITE,2]]],[e.HITMONCHAN,i.FIGHTING,-1,[[N.DOJO,2],[N.DOJO,5],[N.CONSTRUCTION_SITE,2]]],[e.LICKITUNG,i.NORMAL,-1,[[N.PLAINS,3]]],[e.KOFFING,i.POISON,-1,[[N.SLUM,0],[N.CONSTRUCTION_SITE,1]]],[e.WEEZING,i.POISON,-1,[[N.SLUM,0],[N.SLUM,5],[N.CONSTRUCTION_SITE,1]]],[e.RHYHORN,i.GROUND,i.ROCK,[[N.MOUNTAIN,0,[T.DUSK,T.NIGHT]],[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.BADLANDS,0],[N.CONSTRUCTION_SITE,1]]],[e.RHYDON,i.GROUND,i.ROCK,[[N.MOUNTAIN,0,[T.DUSK,T.NIGHT]],[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.BADLANDS,0],[N.CONSTRUCTION_SITE,1]]],[e.CHANSEY,i.NORMAL,-1,[[N.PLAINS,3],[N.MEADOW,3]]],[e.TANGELA,i.GRASS,-1,[[N.JUNGLE,1,[T.DUSK,T.NIGHT]]]],[e.KANGASKHAN,i.NORMAL,-1,[[N.JUNGLE,3],[N.JUNGLE,6]]],[e.HORSEA,i.WATER,-1,[[N.SEA,1]]],[e.SEADRA,i.WATER,-1,[[N.SEA,1]]],[e.GOLDEEN,i.WATER,-1,[[N.LAKE,0],[N.SEA,1]]],[e.SEAKING,i.WATER,-1,[[N.LAKE,0],[N.LAKE,5],[N.SEA,1]]],[e.STARYU,i.WATER,-1,[[N.BEACH,0,[T.DAWN,T.DAY]],[N.SEA,1,[T.DAWN,T.DAY]]]],[e.STARMIE,i.WATER,i.PSYCHIC,[[N.BEACH,0,[T.DAWN,T.DAY]],[N.BEACH,5,[T.DAWN,T.DAY]],[N.SEA,1,[T.DAWN,T.DAY]]]],[e.MR_MIME,i.PSYCHIC,i.FAIRY,[[N.RUINS,2],[N.RUINS,6]]],[e.SCYTHER,i.BUG,i.FLYING,[[N.TALL_GRASS,3],[N.FOREST,2,[T.DUSK,T.NIGHT]],[N.JUNGLE,2]]],[e.JYNX,i.ICE,i.PSYCHIC,[[N.ICE_CAVE,2],[N.ICE_CAVE,6]]],[e.ELECTABUZZ,i.ELECTRIC,-1,[[N.POWER_PLANT,1]]],[e.MAGMAR,i.FIRE,-1,[[N.VOLCANO,1]]],[e.PINSIR,i.BUG,-1,[[N.TALL_GRASS,2],[N.TALL_GRASS,6]]],[e.TAUROS,i.NORMAL,-1,[[N.MEADOW,2],[N.MEADOW,5]]],[e.MAGIKARP,i.WATER,-1,[[N.SEA,0],[N.LAKE,0]]],[e.GYARADOS,i.WATER,i.FLYING,[[N.SEA,0],[N.LAKE,0],[N.LAKE,5]]],[e.LAPRAS,i.WATER,i.ICE,[[N.SEA,2],[N.ICE_CAVE,2],[N.ICE_CAVE,6]]],[e.DITTO,i.NORMAL,-1,[[N.TOWN,4],[N.PLAINS,4],[N.METROPOLIS,3],[N.CONSTRUCTION_SITE,3],[N.LABORATORY,2]]],[e.EEVEE,i.NORMAL,-1,[[N.TOWN,3],[N.PLAINS,3],[N.METROPOLIS,3],[N.MEADOW,2]]],[e.VAPOREON,i.WATER,-1,[[N.LAKE,3],[N.LAKE,6]]],[e.JOLTEON,i.ELECTRIC,-1,[[N.POWER_PLANT,3],[N.POWER_PLANT,6]]],[e.FLAREON,i.FIRE,-1,[[N.VOLCANO,3],[N.VOLCANO,6]]],[e.PORYGON,i.NORMAL,-1,[[N.FACTORY,2],[N.SPACE,3],[N.LABORATORY,2]]],[e.OMANYTE,i.ROCK,i.WATER,[[N.SEABED,3]]],[e.OMASTAR,i.ROCK,i.WATER,[[N.SEABED,3],[N.SEABED,6]]],[e.KABUTO,i.ROCK,i.WATER,[[N.SEABED,3]]],[e.KABUTOPS,i.ROCK,i.WATER,[[N.SEABED,3],[N.SEABED,6]]],[e.AERODACTYL,i.ROCK,i.FLYING,[[N.WASTELAND,3],[N.WASTELAND,6]]],[e.SNORLAX,i.NORMAL,-1,[[N.PLAINS,3],[N.PLAINS,6]]],[e.ARTICUNO,i.ICE,i.FLYING,[[N.ICE_CAVE,4],[N.ICE_CAVE,7]]],[e.ZAPDOS,i.ELECTRIC,i.FLYING,[[N.POWER_PLANT,7]]],[e.MOLTRES,i.FIRE,i.FLYING,[[N.VOLCANO,7]]],[e.DRATINI,i.DRAGON,-1,[[N.WASTELAND,2]]],[e.DRAGONAIR,i.DRAGON,-1,[[N.WASTELAND,2]]],[e.DRAGONITE,i.DRAGON,i.FLYING,[[N.WASTELAND,2],[N.WASTELAND,5]]],[e.MEWTWO,i.PSYCHIC,-1,[[N.LABORATORY,8]]],[e.MEW,i.PSYCHIC,-1,[]],[e.CHIKORITA,i.GRASS,-1,[[N.TALL_GRASS,2]]],[e.BAYLEEF,i.GRASS,-1,[[N.TALL_GRASS,2]]],[e.MEGANIUM,i.GRASS,-1,[[N.TALL_GRASS,2],[N.TALL_GRASS,6]]],[e.CYNDAQUIL,i.FIRE,-1,[[N.VOLCANO,2]]],[e.QUILAVA,i.FIRE,-1,[[N.VOLCANO,2]]],[e.TYPHLOSION,i.FIRE,-1,[[N.VOLCANO,2],[N.VOLCANO,6]]],[e.TOTODILE,i.WATER,-1,[[N.SWAMP,2]]],[e.CROCONAW,i.WATER,-1,[[N.SWAMP,2]]],[e.FERALIGATR,i.WATER,-1,[[N.SWAMP,2],[N.SWAMP,6]]],[e.SENTRET,i.NORMAL,-1,[[N.TOWN,0,[T.DAWN,T.DAY]],[N.PLAINS,0,[T.DAWN,T.DAY]]]],[e.FURRET,i.NORMAL,-1,[[N.PLAINS,0,[T.DAWN,T.DAY]],[N.PLAINS,5,[T.DAWN,T.DAY]]]],[e.HOOTHOOT,i.NORMAL,i.FLYING,[[N.TOWN,0,T.NIGHT],[N.FOREST,1,T.NIGHT]]],[e.NOCTOWL,i.NORMAL,i.FLYING,[[N.FOREST,1,T.NIGHT],[N.FOREST,5,T.NIGHT]]],[e.LEDYBA,i.BUG,i.FLYING,[[N.TOWN,0,T.DAWN],[N.MEADOW,0,T.DAWN]]],[e.LEDIAN,i.BUG,i.FLYING,[[N.MEADOW,0,T.DAWN],[N.MEADOW,5,T.DAWN]]],[e.SPINARAK,i.BUG,i.POISON,[[N.TOWN,1,T.DUSK],[N.TOWN,0,T.NIGHT],[N.TALL_GRASS,1,T.NIGHT],[N.FOREST,1,T.DUSK],[N.FOREST,0,T.NIGHT],[N.JUNGLE,1,T.DUSK],[N.JUNGLE,0,T.NIGHT]]],[e.ARIADOS,i.BUG,i.POISON,[[N.TALL_GRASS,1,T.NIGHT],[N.FOREST,1,T.DUSK],[N.FOREST,0,T.NIGHT],[N.FOREST,5,[T.DUSK,T.NIGHT]],[N.JUNGLE,1,T.DUSK],[N.JUNGLE,0,T.NIGHT]]],[e.CROBAT,i.POISON,i.FLYING,[[N.CAVE,5]]],[e.CHINCHOU,i.WATER,i.ELECTRIC,[[N.SEA,1,T.NIGHT],[N.SEABED,0]]],[e.LANTURN,i.WATER,i.ELECTRIC,[[N.SEA,1,T.NIGHT],[N.SEABED,0],[N.SEABED,5]]],[e.PICHU,i.ELECTRIC,-1,[]],[e.CLEFFA,i.FAIRY,-1,[]],[e.IGGLYBUFF,i.NORMAL,i.FAIRY,[]],[e.TOGEPI,i.FAIRY,-1,[]],[e.TOGETIC,i.FAIRY,i.FLYING,[[N.FAIRY_CAVE,1]]],[e.NATU,i.PSYCHIC,i.FLYING,[[N.MOUNTAIN,1],[N.RUINS,0],[N.TEMPLE,0]]],[e.XATU,i.PSYCHIC,i.FLYING,[[N.MOUNTAIN,1],[N.RUINS,0],[N.RUINS,5],[N.TEMPLE,0]]],[e.MAREEP,i.ELECTRIC,-1,[[N.MEADOW,1],[N.POWER_PLANT,2]]],[e.FLAAFFY,i.ELECTRIC,-1,[[N.MEADOW,1],[N.POWER_PLANT,2]]],[e.AMPHAROS,i.ELECTRIC,-1,[[N.MEADOW,1],[N.POWER_PLANT,6]]],[e.BELLOSSOM,i.GRASS,-1,[[N.TALL_GRASS,6,[T.DAWN,T.DAY]]]],[e.MARILL,i.WATER,i.FAIRY,[[N.LAKE,0,[T.DUSK,T.NIGHT]],[N.FAIRY_CAVE,0]]],[e.AZUMARILL,i.WATER,i.FAIRY,[[N.LAKE,0,[T.DUSK,T.NIGHT]],[N.LAKE,5,[T.DUSK,T.NIGHT]],[N.FAIRY_CAVE,0]]],[e.SUDOWOODO,i.ROCK,-1,[[N.GRASS,3],[N.GRASS,6]]],[e.POLITOED,i.WATER,-1,[[N.SWAMP,3],[N.SWAMP,6]]],[e.HOPPIP,i.GRASS,i.FLYING,[[N.TOWN,0,[T.DAWN,T.DAY]],[N.GRASS,0,[T.DAWN,T.DAY]]]],[e.SKIPLOOM,i.GRASS,i.FLYING,[[N.GRASS,0,[T.DAWN,T.DAY]]]],[e.JUMPLUFF,i.GRASS,i.FLYING,[[N.GRASS,5,[T.DAWN,T.DAY]]]],[e.AIPOM,i.NORMAL,-1,[[N.JUNGLE,0]]],[e.SUNKERN,i.GRASS,-1,[[N.TOWN,0,[T.DAWN,T.DAY]],[N.GRASS,0,[T.DAWN,T.DAY]]]],[e.SUNFLORA,i.GRASS,-1,[[N.GRASS,5,[T.DAWN,T.DAY]]]],[e.YANMA,i.BUG,i.FLYING,[[N.JUNGLE,2]]],[e.WOOPER,i.WATER,i.GROUND,[[N.LAKE,1],[N.SWAMP,0,[T.DAWN,T.DAY]]]],[e.QUAGSIRE,i.WATER,i.GROUND,[[N.LAKE,1],[N.SWAMP,0,[T.DAWN,T.DAY]],[N.SWAMP,5,[T.DAWN,T.DAY]]]],[e.ESPEON,i.PSYCHIC,-1,[[N.RUINS,3,T.DAY],[N.RUINS,6,T.DAY]]],[e.UMBREON,i.DARK,-1,[[N.ABYSS,3],[N.ABYSS,6]]],[e.MURKROW,i.DARK,i.FLYING,[[N.MOUNTAIN,2,T.NIGHT],[N.ABYSS,0]]],[e.SLOWKING,i.WATER,i.PSYCHIC,[[N.LAKE,3],[N.LAKE,6]]],[e.MISDREAVUS,i.GHOST,-1,[[N.GRAVEYARD,2]]],[e.UNOWN,i.PSYCHIC,-1,[[N.RUINS,0]]],[e.WOBBUFFET,i.PSYCHIC,-1,[[N.RUINS,2],[N.RUINS,6]]],[e.GIRAFARIG,i.NORMAL,i.PSYCHIC,[[N.TALL_GRASS,2]]],[e.PINECO,i.BUG,-1,[[N.FOREST,0,[T.DUSK,T.NIGHT]]]],[e.FORRETRESS,i.BUG,i.STEEL,[[N.FOREST,0,[T.DUSK,T.NIGHT]],[N.FOREST,5,[T.DUSK,T.NIGHT]]]],[e.DUNSPARCE,i.NORMAL,-1,[[N.PLAINS,3]]],[e.GLIGAR,i.GROUND,i.FLYING,[[N.BADLANDS,2]]],[e.STEELIX,i.STEEL,i.GROUND,[[N.BADLANDS,6]]],[e.SNUBBULL,i.FAIRY,-1,[[N.MEADOW,1,[T.DAWN,T.DAY]]]],[e.GRANBULL,i.FAIRY,-1,[[N.MEADOW,1,[T.DAWN,T.DAY]],[N.MEADOW,5,[T.DAWN,T.DAY]]]],[e.QWILFISH,i.WATER,i.POISON,[[N.SEABED,2],[N.SEABED,5]]],[e.SCIZOR,i.BUG,i.STEEL,[[N.JUNGLE,6]]],[e.SHUCKLE,i.BUG,i.ROCK,[[N.CAVE,3],[N.CAVE,6]]],[e.HERACROSS,i.BUG,i.FIGHTING,[[N.FOREST,2],[N.FOREST,6]]],[e.SNEASEL,i.DARK,i.ICE,[[N.ICE_CAVE,1],[N.SNOWY_FOREST,0,[T.DUSK,T.NIGHT]],[N.SNOWY_FOREST,1,[T.DAWN,T.DAY]]]],[e.TEDDIURSA,i.NORMAL,-1,[[N.FOREST,1],[N.CAVE,0],[N.SNOWY_FOREST,0,[T.DUSK,T.NIGHT]],[N.SNOWY_FOREST,1,[T.DAWN,T.DAY]]]],[e.URSARING,i.NORMAL,-1,[[N.FOREST,1],[N.CAVE,0],[N.CAVE,5],[N.SNOWY_FOREST,0,[T.DUSK,T.NIGHT]],[N.SNOWY_FOREST,1,[T.DAWN,T.DAY]]]],[e.SLUGMA,i.FIRE,-1,[[N.MOUNTAIN,1],[N.VOLCANO,0]]],[e.MAGCARGO,i.FIRE,i.ROCK,[[N.MOUNTAIN,1],[N.VOLCANO,0],[N.VOLCANO,5]]],[e.SWINUB,i.ICE,i.GROUND,[[N.ICE_CAVE,0],[N.SNOWY_FOREST,0]]],[e.PILOSWINE,i.ICE,i.GROUND,[[N.ICE_CAVE,0],[N.SNOWY_FOREST,0]]],[e.CORSOLA,i.WATER,i.ROCK,[[N.SEABED,2],[N.SEABED,5]]],[e.REMORAID,i.WATER,-1,[[N.SEABED,0]]],[e.OCTILLERY,i.WATER,-1,[[N.SEABED,2],[N.SEABED,5]]],[e.DELIBIRD,i.ICE,i.FLYING,[[N.ICE_CAVE,3],[N.SNOWY_FOREST,2]]],[e.MANTINE,i.WATER,i.FLYING,[[N.SEABED,2],[N.SEABED,5]]],[e.SKARMORY,i.STEEL,i.FLYING,[[N.MOUNTAIN,2],[N.MOUNTAIN,5]]],[e.HOUNDOUR,i.DARK,i.FIRE,[[N.METROPOLIS,0,T.NIGHT],[N.ABYSS,0]]],[e.HOUNDOOM,i.DARK,i.FIRE,[[N.METROPOLIS,0,T.NIGHT],[N.ABYSS,0],[N.ABYSS,5]]],[e.KINGDRA,i.WATER,i.DRAGON,[[N.SEA,3],[N.SEA,6]]],[e.PHANPY,i.GROUND,-1,[[N.BADLANDS,0,[T.DAWN,T.DAY]]]],[e.DONPHAN,i.GROUND,-1,[[N.BADLANDS,0,[T.DAWN,T.DAY]],[N.BADLANDS,5,[T.DAWN,T.DAY]]]],[e.PORYGON2,i.NORMAL,-1,[[N.FACTORY,2],[N.SPACE,3],[N.LABORATORY,2]]],[e.STANTLER,i.NORMAL,-1,[[N.FOREST,2,[T.DAWN,T.DAY]],[N.FOREST,6,[T.DAWN,T.DAY]],[N.SNOWY_FOREST,1,[T.DAWN,T.DAY]]]],[e.SMEARGLE,i.NORMAL,-1,[[N.METROPOLIS,3]]],[e.TYROGUE,i.FIGHTING,-1,[]],[e.HITMONTOP,i.FIGHTING,-1,[[N.DOJO,3],[N.DOJO,6],[N.CONSTRUCTION_SITE,3]]],[e.SMOOCHUM,i.ICE,i.PSYCHIC,[]],[e.ELEKID,i.ELECTRIC,-1,[]],[e.MAGBY,i.FIRE,-1,[]],[e.MILTANK,i.NORMAL,-1,[[N.MEADOW,2],[N.MEADOW,5]]],[e.BLISSEY,i.NORMAL,-1,[[N.MEADOW,6]]],[e.RAIKOU,i.ELECTRIC,-1,[[N.POWER_PLANT,4],[N.POWER_PLANT,7]]],[e.ENTEI,i.FIRE,-1,[[N.VOLCANO,4],[N.VOLCANO,7]]],[e.SUICUNE,i.WATER,-1,[[N.LAKE,4],[N.LAKE,7]]],[e.LARVITAR,i.ROCK,i.GROUND,[[N.MOUNTAIN,3],[N.WASTELAND,0,[T.DUSK,T.NIGHT]]]],[e.PUPITAR,i.ROCK,i.GROUND,[[N.MOUNTAIN,3],[N.WASTELAND,0,[T.DUSK,T.NIGHT]]]],[e.TYRANITAR,i.ROCK,i.DARK,[[N.WASTELAND,0,[T.DUSK,T.NIGHT]],[N.WASTELAND,5,[T.DUSK,T.NIGHT]]]],[e.LUGIA,i.PSYCHIC,i.FLYING,[[N.SEA,8]]],[e.HO_OH,i.FIRE,i.FLYING,[[N.MOUNTAIN,8]]],[e.CELEBI,i.PSYCHIC,i.GRASS,[]],[e.TREECKO,i.GRASS,-1,[[N.FOREST,2]]],[e.GROVYLE,i.GRASS,-1,[[N.FOREST,2]]],[e.SCEPTILE,i.GRASS,-1,[[N.FOREST,2],[N.FOREST,6]]],[e.TORCHIC,i.FIRE,-1,[[N.MOUNTAIN,2]]],[e.COMBUSKEN,i.FIRE,i.FIGHTING,[[N.MOUNTAIN,2]]],[e.BLAZIKEN,i.FIRE,i.FIGHTING,[[N.MOUNTAIN,2],[N.MOUNTAIN,6]]],[e.MUDKIP,i.WATER,-1,[[N.SWAMP,2]]],[e.MARSHTOMP,i.WATER,i.GROUND,[[N.SWAMP,2]]],[e.SWAMPERT,i.WATER,i.GROUND,[[N.SWAMP,2],[N.SWAMP,6]]],[e.POOCHYENA,i.DARK,-1,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.TOWN,0,[T.DUSK,T.NIGHT]],[N.PLAINS,1,[T.DAWN,T.DAY]],[N.PLAINS,0,[T.DUSK,T.NIGHT]]]],[e.MIGHTYENA,i.DARK,-1,[[N.PLAINS,1,[T.DAWN,T.DAY]],[N.PLAINS,0,[T.DUSK,T.NIGHT]],[N.PLAINS,5,[T.DUSK,T.NIGHT]]]],[e.ZIGZAGOON,i.NORMAL,-1,[[N.TOWN,0],[N.PLAINS,0],[N.METROPOLIS,0]]],[e.LINOONE,i.NORMAL,-1,[[N.PLAINS,0],[N.PLAINS,5],[N.METROPOLIS,0]]],[e.WURMPLE,i.BUG,-1,[[N.TOWN,0]]],[e.SILCOON,i.BUG,-1,[[N.TOWN,0,T.DAY]]],[e.BEAUTIFLY,i.BUG,i.FLYING,[[N.FOREST,0,T.DAY],[N.FOREST,5,T.DAY]]],[e.CASCOON,i.BUG,-1,[[N.TOWN,0,T.NIGHT]]],[e.DUSTOX,i.BUG,i.POISON,[[N.FOREST,0,T.NIGHT],[N.FOREST,5,T.NIGHT]]],[e.LOTAD,i.WATER,i.GRASS,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.LAKE,0,[T.DAWN,T.DAY]],[N.SWAMP,0,[T.DAWN,T.DAY]]]],[e.LOMBRE,i.WATER,i.GRASS,[[N.LAKE,0,[T.DAWN,T.DAY]],[N.SWAMP,0,[T.DAWN,T.DAY]]]],[e.LUDICOLO,i.WATER,i.GRASS,[[N.SWAMP,5,[T.DAWN,T.DAY]]]],[e.SEEDOT,i.GRASS,-1,[[N.TOWN,1,[T.DUSK,T.NIGHT]],[N.GRASS,0,[T.DUSK,T.NIGHT]],[N.FOREST,0,[T.DUSK,T.NIGHT]]]],[e.NUZLEAF,i.GRASS,i.DARK,[[N.GRASS,0,[T.DUSK,T.NIGHT]],[N.FOREST,0,[T.DUSK,T.NIGHT]]]],[e.SHIFTRY,i.GRASS,i.DARK,[[N.FOREST,5,[T.DUSK,T.NIGHT]]]],[e.TAILLOW,i.NORMAL,i.FLYING,[[N.TOWN,0],[N.MOUNTAIN,0,[T.DAWN,T.DAY]]]],[e.SWELLOW,i.NORMAL,i.FLYING,[[N.MOUNTAIN,0,[T.DAWN,T.DAY]],[N.MOUNTAIN,5,[T.DAWN,T.DAY]]]],[e.WINGULL,i.WATER,i.FLYING,[[N.SEA,0,[T.DAWN,T.DAY]]]],[e.PELIPPER,i.WATER,i.FLYING,[[N.SEA,0,[T.DAWN,T.DAY]],[N.SEA,5,[T.DAWN,T.DAY]]]],[e.RALTS,i.PSYCHIC,i.FAIRY,[[N.TOWN,3],[N.MEADOW,1],[N.FAIRY_CAVE,1]]],[e.KIRLIA,i.PSYCHIC,i.FAIRY,[[N.MEADOW,1],[N.FAIRY_CAVE,1]]],[e.GARDEVOIR,i.PSYCHIC,i.FAIRY,[[N.MEADOW,1],[N.MEADOW,5],[N.FAIRY_CAVE,1]]],[e.SURSKIT,i.BUG,i.WATER,[[N.TOWN,2],[N.LAKE,1]]],[e.MASQUERAIN,i.BUG,i.FLYING,[[N.LAKE,1],[N.LAKE,5]]],[e.SHROOMISH,i.GRASS,-1,[[N.TOWN,1,[T.DUSK,T.NIGHT]],[N.GRASS,0,[T.DUSK,T.NIGHT]],[N.FOREST,0,[T.DUSK,T.NIGHT]],[N.JUNGLE,0,[T.DUSK,T.NIGHT]]]],[e.BRELOOM,i.GRASS,i.FIGHTING,[[N.GRASS,0,[T.DUSK,T.NIGHT]],[N.FOREST,0,[T.DUSK,T.NIGHT]],[N.FOREST,5,[T.DUSK,T.NIGHT]],[N.JUNGLE,5,[T.DUSK,T.NIGHT]]]],[e.SLAKOTH,i.NORMAL,-1,[[N.JUNGLE,2]]],[e.VIGOROTH,i.NORMAL,-1,[[N.JUNGLE,2]]],[e.SLAKING,i.NORMAL,-1,[[N.JUNGLE,2],[N.JUNGLE,6]]],[e.NINCADA,i.BUG,i.GROUND,[[N.TOWN,1],[N.TALL_GRASS,0]]],[e.NINJASK,i.BUG,i.FLYING,[[N.TALL_GRASS,0],[N.TALL_GRASS,5]]],[e.SHEDINJA,i.BUG,i.GHOST,[[N.TALL_GRASS,3]]],[e.WHISMUR,i.NORMAL,-1,[[N.TOWN,1],[N.CAVE,0]]],[e.LOUDRED,i.NORMAL,-1,[[N.CAVE,0]]],[e.EXPLOUD,i.NORMAL,-1,[[N.CAVE,0],[N.CAVE,5]]],[e.MAKUHITA,i.FIGHTING,-1,[[N.CAVE,1],[N.DOJO,0]]],[e.HARIYAMA,i.FIGHTING,-1,[[N.CAVE,1],[N.DOJO,0],[N.DOJO,5]]],[e.AZURILL,i.NORMAL,i.FAIRY,[]],[e.NOSEPASS,i.ROCK,-1,[[N.CAVE,1]]],[e.SKITTY,i.NORMAL,-1,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.MEADOW,1,[T.DAWN,T.DAY]]]],[e.DELCATTY,i.NORMAL,-1,[[N.MEADOW,1,[T.DAWN,T.DAY]],[N.MEADOW,5,[T.DAWN,T.DAY]]]],[e.SABLEYE,i.DARK,i.GHOST,[[N.ABYSS,0],[N.ABYSS,5]]],[e.MAWILE,i.STEEL,i.FAIRY,[[N.FAIRY_CAVE,0],[N.FAIRY_CAVE,5]]],[e.ARON,i.STEEL,i.ROCK,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DUSK,T.NIGHT]]]],[e.LAIRON,i.STEEL,i.ROCK,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DUSK,T.NIGHT]]]],[e.AGGRON,i.STEEL,i.ROCK,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DUSK,T.NIGHT]],[N.MOUNTAIN,5]]],[e.MEDITITE,i.FIGHTING,i.PSYCHIC,[[N.DOJO,0]]],[e.MEDICHAM,i.FIGHTING,i.PSYCHIC,[[N.DOJO,0],[N.DOJO,5]]],[e.ELECTRIKE,i.ELECTRIC,-1,[[N.POWER_PLANT,0]]],[e.MANECTRIC,i.ELECTRIC,-1,[[N.POWER_PLANT,0],[N.POWER_PLANT,5]]],[e.PLUSLE,i.ELECTRIC,-1,[[N.POWER_PLANT,1]]],[e.MINUN,i.ELECTRIC,-1,[[N.POWER_PLANT,1]]],[e.VOLBEAT,i.BUG,-1,[[N.MEADOW,2,T.NIGHT]]],[e.ILLUMISE,i.BUG,-1,[[N.MEADOW,2,T.NIGHT]]],[e.ROSELIA,i.GRASS,i.POISON,[[N.FOREST,1,[T.DAWN,T.DAY]],[N.MEADOW,0,[T.DAWN,T.DAY]]]],[e.GULPIN,i.POISON,-1,[[N.SWAMP,0]]],[e.SWALOT,i.POISON,-1,[[N.SWAMP,0],[N.SWAMP,5]]],[e.CARVANHA,i.WATER,i.DARK,[[N.SEA,1,[T.DUSK,T.NIGHT]]]],[e.SHARPEDO,i.WATER,i.DARK,[[N.SEA,1,[T.DUSK,T.NIGHT]],[N.SEA,5,[T.DUSK,T.NIGHT]]]],[e.WAILMER,i.WATER,-1,[[N.SEA,1],[N.SEABED,1]]],[e.WAILORD,i.WATER,-1,[[N.SEA,1],[N.SEABED,1],[N.SEABED,5]]],[e.NUMEL,i.FIRE,i.GROUND,[[N.BADLANDS,1],[N.VOLCANO,0]]],[e.CAMERUPT,i.FIRE,i.GROUND,[[N.BADLANDS,1],[N.VOLCANO,0],[N.VOLCANO,5]]],[e.TORKOAL,i.FIRE,-1,[[N.VOLCANO,1],[N.VOLCANO,5]]],[e.SPOINK,i.PSYCHIC,-1,[[N.MOUNTAIN,2],[N.RUINS,0]]],[e.GRUMPIG,i.PSYCHIC,-1,[[N.MOUNTAIN,2],[N.RUINS,0],[N.RUINS,5]]],[e.SPINDA,i.NORMAL,-1,[[N.MEADOW,2]]],[e.TRAPINCH,i.GROUND,-1,[[N.DESERT,0,[T.DAWN,T.DAY]]]],[e.VIBRAVA,i.GROUND,i.DRAGON,[[N.DESERT,2,[T.DAWN,T.DAY]],[N.WASTELAND,0]]],[e.FLYGON,i.GROUND,i.DRAGON,[[N.DESERT,2,[T.DAWN,T.DAY]],[N.WASTELAND,0],[N.WASTELAND,5]]],[e.CACNEA,i.GRASS,-1,[[N.DESERT,0,[T.DUSK,T.NIGHT]]]],[e.CACTURNE,i.GRASS,i.DARK,[[N.DESERT,0,[T.DUSK,T.NIGHT]],[N.DESERT,5,[T.DUSK,T.NIGHT]]]],[e.SWABLU,i.NORMAL,i.FLYING,[[N.MOUNTAIN,0,[T.DAWN,T.DAY]],[N.WASTELAND,1]]],[e.ALTARIA,i.DRAGON,i.FLYING,[[N.MOUNTAIN,0,[T.DAWN,T.DAY]],[N.MOUNTAIN,5,[T.DAWN,T.DAY]],[N.WASTELAND,1]]],[e.ZANGOOSE,i.NORMAL,-1,[[N.TALL_GRASS,2],[N.TALL_GRASS,5]]],[e.SEVIPER,i.POISON,-1,[[N.JUNGLE,2],[N.JUNGLE,5]]],[e.LUNATONE,i.ROCK,i.PSYCHIC,[[N.SPACE,0,T.NIGHT],[N.SPACE,5,T.NIGHT]]],[e.SOLROCK,i.ROCK,i.PSYCHIC,[[N.SPACE,0,T.DAY],[N.SPACE,5,T.DAY]]],[e.BARBOACH,i.WATER,i.GROUND,[[N.SWAMP,1]]],[e.WHISCASH,i.WATER,i.GROUND,[[N.SWAMP,1],[N.SWAMP,5]]],[e.CORPHISH,i.WATER,-1,[[N.BEACH,0]]],[e.CRAWDAUNT,i.WATER,i.DARK,[[N.BEACH,0],[N.BEACH,5]]],[e.BALTOY,i.GROUND,i.PSYCHIC,[[N.RUINS,0],[N.SPACE,1],[N.TEMPLE,1]]],[e.CLAYDOL,i.GROUND,i.PSYCHIC,[[N.RUINS,0],[N.RUINS,5],[N.SPACE,1],[N.TEMPLE,1]]],[e.LILEEP,i.ROCK,i.GRASS,[[N.DESERT,3]]],[e.CRADILY,i.ROCK,i.GRASS,[[N.DESERT,3],[N.DESERT,6]]],[e.ANORITH,i.ROCK,i.BUG,[[N.DESERT,3]]],[e.ARMALDO,i.ROCK,i.BUG,[[N.DESERT,3],[N.DESERT,6]]],[e.FEEBAS,i.WATER,-1,[[N.SEABED,4]]],[e.MILOTIC,i.WATER,-1,[[N.SEABED,7]]],[e.CASTFORM,i.NORMAL,-1,[[N.METROPOLIS,4],[N.METROPOLIS,6]]],[e.KECLEON,i.NORMAL,-1,[[N.TALL_GRASS,2],[N.TALL_GRASS,5]]],[e.SHUPPET,i.GHOST,-1,[[N.GRAVEYARD,0]]],[e.BANETTE,i.GHOST,-1,[[N.GRAVEYARD,0],[N.GRAVEYARD,5]]],[e.DUSKULL,i.GHOST,-1,[[N.GRAVEYARD,0],[N.TEMPLE,0]]],[e.DUSCLOPS,i.GHOST,-1,[[N.GRAVEYARD,0],[N.TEMPLE,0]]],[e.TROPIUS,i.GRASS,i.FLYING,[[N.TALL_GRASS,2],[N.FOREST,2],[N.JUNGLE,1,[T.DAWN,T.DAY]],[N.JUNGLE,5,[T.DAWN,T.DAY]]]],[e.CHIMECHO,i.PSYCHIC,-1,[[N.TEMPLE,1],[N.TEMPLE,5]]],[e.ABSOL,i.DARK,-1,[[N.ABYSS,2],[N.ABYSS,5]]],[e.WYNAUT,i.PSYCHIC,-1,[]],[e.SNORUNT,i.ICE,-1,[[N.ICE_CAVE,1]]],[e.GLALIE,i.ICE,-1,[[N.ICE_CAVE,1],[N.ICE_CAVE,5]]],[e.SPHEAL,i.ICE,i.WATER,[[N.ICE_CAVE,1]]],[e.SEALEO,i.ICE,i.WATER,[[N.ICE_CAVE,1]]],[e.WALREIN,i.ICE,i.WATER,[[N.ICE_CAVE,1],[N.ICE_CAVE,5]]],[e.CLAMPERL,i.WATER,-1,[[N.SEABED,0]]],[e.HUNTAIL,i.WATER,-1,[[N.SEABED,5]]],[e.GOREBYSS,i.WATER,-1,[[N.SEABED,5]]],[e.RELICANTH,i.WATER,i.ROCK,[[N.SEABED,3],[N.SEABED,6]]],[e.LUVDISC,i.WATER,-1,[[N.SEABED,1],[N.SEABED,5]]],[e.BAGON,i.DRAGON,-1,[[N.WASTELAND,0,[T.DAWN,T.DAY]]]],[e.SHELGON,i.DRAGON,-1,[[N.WASTELAND,0,[T.DAWN,T.DAY]]]],[e.SALAMENCE,i.DRAGON,i.FLYING,[[N.WASTELAND,0,[T.DAWN,T.DAY]],[N.WASTELAND,5,[T.DAWN,T.DAY]]]],[e.BELDUM,i.STEEL,i.PSYCHIC,[[N.FACTORY,3],[N.SPACE,2]]],[e.METANG,i.STEEL,i.PSYCHIC,[[N.FACTORY,3],[N.SPACE,2]]],[e.METAGROSS,i.STEEL,i.PSYCHIC,[[N.FACTORY,3],[N.SPACE,2],[N.SPACE,6]]],[e.REGIROCK,i.ROCK,-1,[[N.DESERT,4],[N.DESERT,7]]],[e.REGICE,i.ICE,-1,[[N.ICE_CAVE,4],[N.ICE_CAVE,7]]],[e.REGISTEEL,i.STEEL,-1,[[N.RUINS,4],[N.RUINS,7]]],[e.LATIAS,i.DRAGON,i.PSYCHIC,[[N.PLAINS,4],[N.PLAINS,7]]],[e.LATIOS,i.DRAGON,i.PSYCHIC,[[N.PLAINS,4],[N.PLAINS,7]]],[e.KYOGRE,i.WATER,-1,[[N.SEABED,8]]],[e.GROUDON,i.GROUND,-1,[[N.BADLANDS,8]]],[e.RAYQUAZA,i.DRAGON,i.FLYING,[[N.SPACE,8]]],[e.JIRACHI,i.STEEL,i.PSYCHIC,[]],[e.DEOXYS,i.PSYCHIC,-1,[]],[e.TURTWIG,i.GRASS,-1,[[N.GRASS,2]]],[e.GROTLE,i.GRASS,-1,[[N.GRASS,2]]],[e.TORTERRA,i.GRASS,i.GROUND,[[N.GRASS,2],[N.GRASS,6]]],[e.CHIMCHAR,i.FIRE,-1,[[N.VOLCANO,2]]],[e.MONFERNO,i.FIRE,i.FIGHTING,[[N.VOLCANO,2]]],[e.INFERNAPE,i.FIRE,i.FIGHTING,[[N.VOLCANO,2],[N.VOLCANO,6]]],[e.PIPLUP,i.WATER,-1,[[N.SEA,2]]],[e.PRINPLUP,i.WATER,-1,[[N.SEA,2]]],[e.EMPOLEON,i.WATER,i.STEEL,[[N.SEA,2],[N.SEA,6]]],[e.STARLY,i.NORMAL,i.FLYING,[[N.TOWN,0,[T.DAWN,T.DAY]],[N.PLAINS,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DAWN,T.DAY]]]],[e.STARAVIA,i.NORMAL,i.FLYING,[[N.PLAINS,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DAWN,T.DAY]]]],[e.STARAPTOR,i.NORMAL,i.FLYING,[[N.PLAINS,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DAWN,T.DAY]],[N.MOUNTAIN,5,[T.DAWN,T.DAY]]]],[e.BIDOOF,i.NORMAL,-1,[[N.TOWN,0],[N.PLAINS,0]]],[e.BIBAREL,i.NORMAL,i.WATER,[[N.PLAINS,0],[N.PLAINS,5]]],[e.KRICKETOT,i.BUG,-1,[[N.TOWN,1,[T.DUSK,T.NIGHT]],[N.TALL_GRASS,0,[T.DUSK,T.NIGHT]]]],[e.KRICKETUNE,i.BUG,-1,[[N.TALL_GRASS,0,[T.DUSK,T.NIGHT]],[N.TALL_GRASS,5,[T.DUSK,T.NIGHT]]]],[e.SHINX,i.ELECTRIC,-1,[[N.PLAINS,2,[T.DUSK,T.NIGHT]],[N.POWER_PLANT,0]]],[e.LUXIO,i.ELECTRIC,-1,[[N.PLAINS,2,[T.DUSK,T.NIGHT]],[N.POWER_PLANT,0]]],[e.LUXRAY,i.ELECTRIC,-1,[[N.PLAINS,2,[T.DUSK,T.NIGHT]],[N.POWER_PLANT,0],[N.POWER_PLANT,5]]],[e.BUDEW,i.GRASS,i.POISON,[]],[e.ROSERADE,i.GRASS,i.POISON,[[N.MEADOW,5,[T.DAWN,T.DAY]]]],[e.CRANIDOS,i.ROCK,-1,[[N.MOUNTAIN,3]]],[e.RAMPARDOS,i.ROCK,-1,[[N.MOUNTAIN,3],[N.MOUNTAIN,6]]],[e.SHIELDON,i.ROCK,i.STEEL,[[N.MOUNTAIN,3]]],[e.BASTIODON,i.ROCK,i.STEEL,[[N.MOUNTAIN,3],[N.MOUNTAIN,6]]],[e.BURMY,i.BUG,-1,[[N.FOREST,1],[N.BEACH,1],[N.SLUM,1]]],[e.WORMADAM,i.BUG,i.GRASS,[[N.FOREST,1],[N.FOREST,5],[N.BEACH,1],[N.BEACH,5],[N.SLUM,1],[N.SLUM,5]]],[e.MOTHIM,i.BUG,i.FLYING,[[N.FOREST,1,[T.DAWN,T.DAY]],[N.FOREST,5,[T.DAWN,T.DAY]]]],[e.COMBEE,i.BUG,i.FLYING,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.GRASS,1,[T.DAWN,T.DAY]],[N.FOREST,0,[T.DAWN,T.DAY]],[N.JUNGLE,1,[T.DAWN,T.DAY]]]],[e.VESPIQUEN,i.BUG,i.FLYING,[[N.GRASS,1,[T.DAWN,T.DAY]],[N.FOREST,0,[T.DAWN,T.DAY]],[N.FOREST,5,[T.DAWN,T.DAY]],[N.JUNGLE,0,[T.DAWN,T.DAY]]]],[e.PACHIRISU,i.ELECTRIC,-1,[[N.POWER_PLANT,1]]],[e.BUIZEL,i.WATER,-1,[[N.SEA,0]]],[e.FLOATZEL,i.WATER,-1,[[N.SEA,0],[N.SEA,5]]],[e.CHERUBI,i.GRASS,-1,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.GRASS,1,[T.DAWN,T.DAY]],[N.JUNGLE,0,[T.DAWN,T.DAY]]]],[e.CHERRIM,i.GRASS,-1,[[N.GRASS,1,[T.DAWN,T.DAY]],[N.JUNGLE,0,[T.DAWN,T.DAY]],[N.JUNGLE,5,[T.DAWN,T.DAY]]]],[e.SHELLOS,i.WATER,-1,[[N.SWAMP,0],[N.SEABED,1]]],[e.GASTRODON,i.WATER,i.GROUND,[[N.SWAMP,0],[N.SWAMP,5],[N.SEABED,1]]],[e.AMBIPOM,i.NORMAL,-1,[[N.JUNGLE,5]]],[e.DRIFLOON,i.GHOST,i.FLYING,[[N.GRAVEYARD,0]]],[e.DRIFBLIM,i.GHOST,i.FLYING,[[N.GRAVEYARD,0],[N.GRAVEYARD,5]]],[e.BUNEARY,i.NORMAL,-1,[[N.PLAINS,2]]],[e.LOPUNNY,i.NORMAL,-1,[[N.PLAINS,2],[N.PLAINS,5]]],[e.MISMAGIUS,i.GHOST,-1,[[N.GRAVEYARD,5]]],[e.HONCHKROW,i.DARK,i.FLYING,[[N.ABYSS,5]]],[e.GLAMEOW,i.NORMAL,-1,[[N.METROPOLIS,1],[N.MEADOW,1]]],[e.PURUGLY,i.NORMAL,-1,[[N.METROPOLIS,1],[N.MEADOW,1],[N.MEADOW,5]]],[e.CHINGLING,i.PSYCHIC,-1,[[N.TEMPLE,1]]],[e.STUNKY,i.POISON,i.DARK,[[N.SLUM,1,[T.DUSK,T.NIGHT]]]],[e.SKUNTANK,i.POISON,i.DARK,[[N.SLUM,1,[T.DUSK,T.NIGHT]],[N.SLUM,5,[T.DUSK,T.NIGHT]]]],[e.BRONZOR,i.STEEL,i.PSYCHIC,[[N.FACTORY,1],[N.SPACE,0],[N.LABORATORY,0]]],[e.BRONZONG,i.STEEL,i.PSYCHIC,[[N.FACTORY,1],[N.SPACE,0],[N.SPACE,5],[N.LABORATORY,0],[N.LABORATORY,5]]],[e.BONSLY,i.ROCK,-1,[]],[e.MIME_JR,i.PSYCHIC,i.FAIRY,[]],[e.HAPPINY,i.NORMAL,-1,[]],[e.CHATOT,i.NORMAL,i.FLYING,[[N.JUNGLE,3]]],[e.SPIRITOMB,i.GHOST,i.DARK,[[N.GRAVEYARD,3],[N.ABYSS,2],[N.ABYSS,5]]],[e.GIBLE,i.DRAGON,i.GROUND,[[N.MOUNTAIN,3],[N.WASTELAND,0]]],[e.GABITE,i.DRAGON,i.GROUND,[[N.MOUNTAIN,3],[N.WASTELAND,0]]],[e.GARCHOMP,i.DRAGON,i.GROUND,[[N.MOUNTAIN,3],[N.WASTELAND,0],[N.WASTELAND,5]]],[e.MUNCHLAX,i.NORMAL,-1,[]],[e.RIOLU,i.FIGHTING,-1,[]],[e.LUCARIO,i.FIGHTING,i.STEEL,[[N.DOJO,2],[N.DOJO,5]]],[e.HIPPOPOTAS,i.GROUND,-1,[[N.DESERT,0,[T.DAWN,T.DAY]]]],[e.HIPPOWDON,i.GROUND,-1,[[N.DESERT,0,[T.DAWN,T.DAY]],[N.DESERT,5,[T.DAWN,T.DAY]]]],[e.SKORUPI,i.POISON,i.BUG,[[N.SWAMP,1],[N.DESERT,0],[N.TEMPLE,1]]],[e.DRAPION,i.POISON,i.DARK,[[N.SWAMP,1],[N.DESERT,0],[N.DESERT,5],[N.TEMPLE,1]]],[e.CROAGUNK,i.POISON,i.FIGHTING,[[N.SWAMP,1,[T.DUSK,T.NIGHT]],[N.DOJO,1]]],[e.TOXICROAK,i.POISON,i.FIGHTING,[[N.SWAMP,1,[T.DUSK,T.NIGHT]],[N.DOJO,1],[N.DOJO,5]]],[e.CARNIVINE,i.GRASS,-1,[[N.JUNGLE,2],[N.JUNGLE,5]]],[e.FINNEON,i.WATER,-1,[[N.SEA,0,T.NIGHT]]],[e.LUMINEON,i.WATER,-1,[[N.SEA,0,T.NIGHT],[N.SEA,5,T.NIGHT]]],[e.MANTYKE,i.WATER,i.FLYING,[[N.SEABED,2]]],[e.SNOVER,i.GRASS,i.ICE,[[N.ICE_CAVE,0],[N.SNOWY_FOREST,0]]],[e.ABOMASNOW,i.GRASS,i.ICE,[[N.ICE_CAVE,0],[N.SNOWY_FOREST,0],[N.SNOWY_FOREST,5]]],[e.WEAVILE,i.DARK,i.ICE,[[N.ICE_CAVE,5]]],[e.MAGNEZONE,i.ELECTRIC,i.STEEL,[[N.POWER_PLANT,5],[N.LABORATORY,5]]],[e.LICKILICKY,i.NORMAL,-1,[[N.PLAINS,6]]],[e.RHYPERIOR,i.GROUND,i.ROCK,[[N.BADLANDS,5]]],[e.TANGROWTH,i.GRASS,-1,[[N.JUNGLE,5,[T.DUSK,T.NIGHT]]]],[e.ELECTIVIRE,i.ELECTRIC,-1,[[N.POWER_PLANT,5]]],[e.MAGMORTAR,i.FIRE,-1,[[N.VOLCANO,5]]],[e.TOGEKISS,i.FAIRY,i.FLYING,[[N.FAIRY_CAVE,5]]],[e.YANMEGA,i.BUG,i.FLYING,[[N.JUNGLE,5]]],[e.LEAFEON,i.GRASS,-1,[[N.JUNGLE,6]]],[e.GLACEON,i.ICE,-1,[[N.ICE_CAVE,6]]],[e.GLISCOR,i.GROUND,i.FLYING,[[N.BADLANDS,5]]],[e.MAMOSWINE,i.ICE,i.GROUND,[[N.ICE_CAVE,5]]],[e.PORYGON_Z,i.NORMAL,-1,[[N.SPACE,6],[N.LABORATORY,5]]],[e.GALLADE,i.PSYCHIC,i.FIGHTING,[[N.DOJO,3],[N.DOJO,6]]],[e.PROBOPASS,i.ROCK,i.STEEL,[[N.CAVE,5]]],[e.DUSKNOIR,i.GHOST,-1,[[N.GRAVEYARD,5]]],[e.FROSLASS,i.ICE,i.GHOST,[[N.ICE_CAVE,2],[N.ICE_CAVE,5]]],[e.ROTOM,i.ELECTRIC,i.GHOST,[[N.LABORATORY,3],[N.LABORATORY,7],[N.VOLCANO,3],[N.VOLCANO,7],[N.SEA,3],[N.SEA,7],[N.ICE_CAVE,3],[N.ICE_CAVE,7],[N.MOUNTAIN,3],[N.MOUNTAIN,7],[N.TALL_GRASS,3],[N.TALL_GRASS,7]]],[e.UXIE,i.PSYCHIC,-1,[[N.CAVE,4],[N.CAVE,7]]],[e.MESPRIT,i.PSYCHIC,-1,[[N.LAKE,4],[N.LAKE,7]]],[e.AZELF,i.PSYCHIC,-1,[[N.SWAMP,4],[N.SWAMP,7]]],[e.DIALGA,i.STEEL,i.DRAGON,[[N.WASTELAND,8]]],[e.PALKIA,i.WATER,i.DRAGON,[[N.ABYSS,8]]],[e.HEATRAN,i.FIRE,i.STEEL,[[N.VOLCANO,4],[N.VOLCANO,7]]],[e.REGIGIGAS,i.NORMAL,-1,[[N.TEMPLE,8]]],[e.GIRATINA,i.GHOST,i.DRAGON,[[N.GRAVEYARD,8]]],[e.CRESSELIA,i.PSYCHIC,-1,[[N.BEACH,4],[N.BEACH,7]]],[e.PHIONE,i.WATER,-1,[]],[e.MANAPHY,i.WATER,-1,[]],[e.DARKRAI,i.DARK,-1,[[N.ABYSS,4],[N.ABYSS,7]]],[e.SHAYMIN,i.GRASS,-1,[[N.MEADOW,8]]],[e.ARCEUS,i.NORMAL,-1,[]],[e.VICTINI,i.PSYCHIC,i.FIRE,[]],[e.SNIVY,i.GRASS,-1,[[N.JUNGLE,2]]],[e.SERVINE,i.GRASS,-1,[[N.JUNGLE,2]]],[e.SERPERIOR,i.GRASS,-1,[[N.JUNGLE,2],[N.JUNGLE,6]]],[e.TEPIG,i.FIRE,-1,[[N.VOLCANO,2]]],[e.PIGNITE,i.FIRE,i.FIGHTING,[[N.VOLCANO,2]]],[e.EMBOAR,i.FIRE,i.FIGHTING,[[N.VOLCANO,2],[N.VOLCANO,6]]],[e.OSHAWOTT,i.WATER,-1,[[N.LAKE,2]]],[e.DEWOTT,i.WATER,-1,[[N.LAKE,2]]],[e.SAMUROTT,i.WATER,-1,[[N.LAKE,2],[N.LAKE,6]]],[e.PATRAT,i.NORMAL,-1,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.TOWN,0,[T.DUSK,T.NIGHT]],[N.METROPOLIS,1,[T.DAWN,T.DAY]],[N.METROPOLIS,0,[T.DUSK,T.NIGHT]],[N.SLUM,0,[T.DUSK,T.NIGHT]]]],[e.WATCHOG,i.NORMAL,-1,[[N.METROPOLIS,1,[T.DAWN,T.DAY]],[N.METROPOLIS,0,[T.DUSK,T.NIGHT]],[N.SLUM,0,[T.DUSK,T.NIGHT]],[N.SLUM,5,[T.DUSK,T.NIGHT]]]],[e.LILLIPUP,i.NORMAL,-1,[[N.TOWN,0],[N.METROPOLIS,0]]],[e.HERDIER,i.NORMAL,-1,[[N.METROPOLIS,0]]],[e.STOUTLAND,i.NORMAL,-1,[[N.METROPOLIS,0],[N.METROPOLIS,5]]],[e.PURRLOIN,i.DARK,-1,[[N.TOWN,0,[T.DUSK,T.NIGHT]],[N.ABYSS,0],[N.JUNGLE,0,[T.DUSK,T.NIGHT]]]],[e.LIEPARD,i.DARK,-1,[[N.ABYSS,0],[N.ABYSS,5],[N.JUNGLE,0,[T.DUSK,T.NIGHT]]]],[e.PANSAGE,i.GRASS,-1,[[N.FOREST,1],[N.JUNGLE,1]]],[e.SIMISAGE,i.GRASS,-1,[[N.FOREST,1],[N.FOREST,5],[N.JUNGLE,1]]],[e.PANSEAR,i.FIRE,-1,[[N.VOLCANO,1],[N.JUNGLE,1]]],[e.SIMISEAR,i.FIRE,-1,[[N.VOLCANO,1],[N.VOLCANO,5],[N.JUNGLE,1]]],[e.PANPOUR,i.WATER,-1,[[N.SEA,1],[N.JUNGLE,1]]],[e.SIMIPOUR,i.WATER,-1,[[N.SEA,1],[N.SEA,5],[N.JUNGLE,1]]],[e.MUNNA,i.PSYCHIC,-1,[[N.SPACE,0]]],[e.MUSHARNA,i.PSYCHIC,-1,[[N.SPACE,0],[N.SPACE,5]]],[e.PIDOVE,i.NORMAL,i.FLYING,[[N.TOWN,0,[T.DAWN,T.DAY]],[N.PLAINS,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DAWN,T.DAY]]]],[e.TRANQUILL,i.NORMAL,i.FLYING,[[N.PLAINS,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DAWN,T.DAY]]]],[e.UNFEZANT,i.NORMAL,i.FLYING,[[N.PLAINS,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DAWN,T.DAY]],[N.MOUNTAIN,5,[T.DAWN,T.DAY]]]],[e.BLITZLE,i.ELECTRIC,-1,[[N.MEADOW,0],[N.JUNGLE,0]]],[e.ZEBSTRIKA,i.ELECTRIC,-1,[[N.MEADOW,0],[N.MEADOW,5],[N.JUNGLE,0]]],[e.ROGGENROLA,i.ROCK,-1,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DUSK,T.NIGHT]],[N.BADLANDS,1],[N.CAVE,0]]],[e.BOLDORE,i.ROCK,-1,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,0,[T.DUSK,T.NIGHT]],[N.BADLANDS,1],[N.CAVE,0]]],[e.GIGALITH,i.ROCK,-1,[[N.CAVE,5]]],[e.WOOBAT,i.PSYCHIC,i.FLYING,[[N.CAVE,0]]],[e.SWOOBAT,i.PSYCHIC,i.FLYING,[[N.CAVE,0],[N.CAVE,5]]],[e.DRILBUR,i.GROUND,-1,[[N.BADLANDS,0],[N.CONSTRUCTION_SITE,0]]],[e.EXCADRILL,i.GROUND,i.STEEL,[[N.BADLANDS,0],[N.BADLANDS,5],[N.CONSTRUCTION_SITE,0]]],[e.AUDINO,i.NORMAL,-1,[[N.FAIRY_CAVE,2],[N.FAIRY_CAVE,5]]],[e.TIMBURR,i.FIGHTING,-1,[[N.FACTORY,0],[N.CONSTRUCTION_SITE,0]]],[e.GURDURR,i.FIGHTING,-1,[[N.FACTORY,0],[N.CONSTRUCTION_SITE,0]]],[e.CONKELDURR,i.FIGHTING,-1,[[N.CONSTRUCTION_SITE,5]]],[e.TYMPOLE,i.WATER,-1,[[N.SWAMP,0]]],[e.PALPITOAD,i.WATER,i.GROUND,[[N.SWAMP,0]]],[e.SEISMITOAD,i.WATER,i.GROUND,[[N.SWAMP,0],[N.SWAMP,5]]],[e.THROH,i.FIGHTING,-1,[[N.DOJO,2],[N.DOJO,5]]],[e.SAWK,i.FIGHTING,-1,[[N.DOJO,2],[N.DOJO,5]]],[e.SEWADDLE,i.BUG,i.GRASS,[[N.FOREST,1,[T.DAWN,T.DAY]],[N.JUNGLE,0,[T.DAWN,T.DAY]]]],[e.SWADLOON,i.BUG,i.GRASS,[[N.FOREST,1,[T.DAWN,T.DAY]],[N.JUNGLE,0,[T.DAWN,T.DAY]]]],[e.LEAVANNY,i.BUG,i.GRASS,[[N.FOREST,1,[T.DAWN,T.DAY]],[N.JUNGLE,0,[T.DAWN,T.DAY]],[N.JUNGLE,5,[T.DAWN,T.DAY]]]],[e.VENIPEDE,i.BUG,i.POISON,[[N.TOWN,1,[T.DUSK,T.NIGHT]],[N.FOREST,0,[T.DUSK,T.NIGHT]]]],[e.WHIRLIPEDE,i.BUG,i.POISON,[[N.FOREST,0,[T.DUSK,T.NIGHT]]]],[e.SCOLIPEDE,i.BUG,i.POISON,[[N.FOREST,0,[T.DUSK,T.NIGHT]],[N.FOREST,5,[T.DUSK,T.NIGHT]]]],[e.COTTONEE,i.GRASS,i.FAIRY,[[N.TOWN,0,[T.DAWN,T.DAY]],[N.GRASS,0,[T.DAWN,T.DAY]],[N.MEADOW,0,[T.DAWN,T.DAY]]]],[e.WHIMSICOTT,i.GRASS,i.FAIRY,[[N.GRASS,5,[T.DAWN,T.DAY]]]],[e.PETILIL,i.GRASS,-1,[[N.GRASS,0,[T.DAWN,T.DAY]],[N.FOREST,0,[T.DAWN,T.DAY]]]],[e.LILLIGANT,i.GRASS,-1,[[N.FOREST,5,[T.DAWN,T.DAY]]]],[e.BASCULIN,i.WATER,-1,[[N.SEABED,0]]],[e.SANDILE,i.GROUND,i.DARK,[[N.DESERT,1,[T.DAWN,T.DAY]],[N.DESERT,0,[T.DUSK,T.NIGHT]]]],[e.KROKOROK,i.GROUND,i.DARK,[[N.DESERT,1,[T.DAWN,T.DAY]],[N.DESERT,0,[T.DUSK,T.NIGHT]]]],[e.KROOKODILE,i.GROUND,i.DARK,[[N.DESERT,1,[T.DAWN,T.DAY]],[N.DESERT,0,[T.DUSK,T.NIGHT]],[N.DESERT,5,[T.DUSK,T.NIGHT]]]],[e.DARUMAKA,i.FIRE,-1,[[N.DESERT,2]]],[e.DARMANITAN,i.FIRE,-1,[[N.DESERT,2],[N.DESERT,5]]],[e.MARACTUS,i.GRASS,-1,[[N.DESERT,1],[N.DESERT,5]]],[e.DWEBBLE,i.BUG,i.ROCK,[[N.BEACH,0]]],[e.CRUSTLE,i.BUG,i.ROCK,[[N.BEACH,0],[N.BEACH,5]]],[e.SCRAGGY,i.DARK,i.FIGHTING,[[N.DOJO,1],[N.CONSTRUCTION_SITE,1]]],[e.SCRAFTY,i.DARK,i.FIGHTING,[[N.DOJO,1],[N.DOJO,5],[N.CONSTRUCTION_SITE,1]]],[e.SIGILYPH,i.PSYCHIC,i.FLYING,[[N.RUINS,1],[N.RUINS,5],[N.SPACE,2]]],[e.YAMASK,i.GHOST,-1,[[N.GRAVEYARD,1],[N.TEMPLE,0]]],[e.COFAGRIGUS,i.GHOST,-1,[[N.GRAVEYARD,1],[N.TEMPLE,0],[N.TEMPLE,5]]],[e.TIRTOUGA,i.WATER,i.ROCK,[[N.SEA,3],[N.BEACH,3]]],[e.CARRACOSTA,i.WATER,i.ROCK,[[N.SEA,3],[N.BEACH,3],[N.BEACH,6]]],[e.ARCHEN,i.ROCK,i.FLYING,[[N.RUINS,3]]],[e.ARCHEOPS,i.ROCK,i.FLYING,[[N.MOUNTAIN,3],[N.RUINS,3],[N.RUINS,6]]],[e.TRUBBISH,i.POISON,-1,[[N.SLUM,0]]],[e.GARBODOR,i.POISON,-1,[[N.SLUM,0],[N.SLUM,5]]],[e.ZORUA,i.DARK,-1,[[N.ABYSS,2]]],[e.ZOROARK,i.DARK,-1,[[N.ABYSS,2],[N.ABYSS,5]]],[e.MINCCINO,i.NORMAL,-1,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.MEADOW,0,[T.DAWN,T.DAY]]]],[e.CINCCINO,i.NORMAL,-1,[[N.MEADOW,5,[T.DAWN,T.DAY]]]],[e.GOTHITA,i.PSYCHIC,-1,[[N.RUINS,2]]],[e.GOTHORITA,i.PSYCHIC,-1,[[N.RUINS,2]]],[e.GOTHITELLE,i.PSYCHIC,-1,[[N.RUINS,2],[N.RUINS,5]]],[e.SOLOSIS,i.PSYCHIC,-1,[[N.SPACE,2],[N.LABORATORY,1]]],[e.DUOSION,i.PSYCHIC,-1,[[N.SPACE,2],[N.LABORATORY,1]]],[e.REUNICLUS,i.PSYCHIC,-1,[[N.SPACE,2],[N.SPACE,5],[N.LABORATORY,1],[N.LABORATORY,5]]],[e.DUCKLETT,i.WATER,i.FLYING,[[N.LAKE,0,[T.DAWN,T.DAY]]]],[e.SWANNA,i.WATER,i.FLYING,[[N.LAKE,0,[T.DAWN,T.DAY]],[N.LAKE,5,[T.DAWN,T.DAY]]]],[e.VANILLITE,i.ICE,-1,[[N.ICE_CAVE,0]]],[e.VANILLISH,i.ICE,-1,[[N.ICE_CAVE,0]]],[e.VANILLUXE,i.ICE,-1,[[N.ICE_CAVE,0],[N.ICE_CAVE,5]]],[e.DEERLING,i.NORMAL,i.GRASS,[[N.FOREST,0,[T.DAWN,T.DAY]]]],[e.SAWSBUCK,i.NORMAL,i.GRASS,[[N.FOREST,0,[T.DAWN,T.DAY]],[N.FOREST,5,[T.DAWN,T.DAY]]]],[e.EMOLGA,i.ELECTRIC,i.FLYING,[[N.POWER_PLANT,1]]],[e.KARRABLAST,i.BUG,-1,[[N.FOREST,2]]],[e.ESCAVALIER,i.BUG,i.STEEL,[[N.FOREST,6]]],[e.FOONGUS,i.GRASS,i.POISON,[[N.GRASS,1,[T.DUSK,T.NIGHT]],[N.JUNGLE,2,[T.DAWN,T.DAY]],[N.JUNGLE,0,[T.DUSK,T.NIGHT]]]],[e.AMOONGUSS,i.GRASS,i.POISON,[[N.GRASS,1,[T.DUSK,T.NIGHT]],[N.JUNGLE,2,[T.DAWN,T.DAY]],[N.JUNGLE,0,[T.DUSK,T.NIGHT]],[N.JUNGLE,6,[T.DAWN,T.DAY]],[N.JUNGLE,5,[T.DUSK,T.NIGHT]]]],[e.FRILLISH,i.WATER,i.GHOST,[[N.SEABED,0]]],[e.JELLICENT,i.WATER,i.GHOST,[[N.SEABED,0],[N.SEABED,5]]],[e.ALOMOMOLA,i.WATER,-1,[[N.SEABED,2],[N.SEABED,5]]],[e.JOLTIK,i.BUG,i.ELECTRIC,[[N.JUNGLE,1]]],[e.GALVANTULA,i.BUG,i.ELECTRIC,[[N.JUNGLE,1],[N.JUNGLE,5]]],[e.FERROSEED,i.GRASS,i.STEEL,[[N.CAVE,2]]],[e.FERROTHORN,i.GRASS,i.STEEL,[[N.CAVE,2],[N.CAVE,6]]],[e.KLINK,i.STEEL,-1,[[N.FACTORY,0],[N.LABORATORY,0]]],[e.KLANG,i.STEEL,-1,[[N.FACTORY,0],[N.LABORATORY,0]]],[e.KLINKLANG,i.STEEL,-1,[[N.FACTORY,0],[N.FACTORY,5],[N.LABORATORY,0],[N.LABORATORY,5]]],[e.TYNAMO,i.ELECTRIC,-1,[[N.SEABED,2]]],[e.EELEKTRIK,i.ELECTRIC,-1,[[N.SEABED,2]]],[e.EELEKTROSS,i.ELECTRIC,-1,[[N.SEABED,6]]],[e.ELGYEM,i.PSYCHIC,-1,[[N.RUINS,0],[N.SPACE,1]]],[e.BEHEEYEM,i.PSYCHIC,-1,[[N.RUINS,0],[N.RUINS,5],[N.SPACE,1]]],[e.LITWICK,i.GHOST,i.FIRE,[[N.GRAVEYARD,0],[N.TEMPLE,1]]],[e.LAMPENT,i.GHOST,i.FIRE,[[N.GRAVEYARD,0],[N.TEMPLE,1]]],[e.CHANDELURE,i.GHOST,i.FIRE,[[N.GRAVEYARD,5]]],[e.AXEW,i.DRAGON,-1,[[N.MOUNTAIN,3],[N.WASTELAND,0]]],[e.FRAXURE,i.DRAGON,-1,[[N.MOUNTAIN,3],[N.WASTELAND,0]]],[e.HAXORUS,i.DRAGON,-1,[[N.WASTELAND,0],[N.WASTELAND,5]]],[e.CUBCHOO,i.ICE,-1,[[N.ICE_CAVE,0]]],[e.BEARTIC,i.ICE,-1,[[N.ICE_CAVE,0],[N.ICE_CAVE,5]]],[e.CRYOGONAL,i.ICE,-1,[[N.ICE_CAVE,2],[N.ICE_CAVE,5]]],[e.SHELMET,i.BUG,-1,[[N.FOREST,2]]],[e.ACCELGOR,i.BUG,-1,[[N.FOREST,6]]],[e.STUNFISK,i.GROUND,i.ELECTRIC,[[N.SWAMP,1],[N.SWAMP,5]]],[e.MIENFOO,i.FIGHTING,-1,[[N.DOJO,1]]],[e.MIENSHAO,i.FIGHTING,-1,[[N.DOJO,1],[N.DOJO,5]]],[e.DRUDDIGON,i.DRAGON,-1,[[N.WASTELAND,3],[N.WASTELAND,6]]],[e.GOLETT,i.GROUND,i.GHOST,[[N.TEMPLE,0]]],[e.GOLURK,i.GROUND,i.GHOST,[[N.TEMPLE,0],[N.TEMPLE,5]]],[e.PAWNIARD,i.DARK,i.STEEL,[[N.ABYSS,0]]],[e.BISHARP,i.DARK,i.STEEL,[[N.ABYSS,0]]],[e.BOUFFALANT,i.NORMAL,-1,[[N.MEADOW,1,[T.DAWN,T.DAY]],[N.MEADOW,5,[T.DAWN,T.DAY]]]],[e.RUFFLET,i.NORMAL,i.FLYING,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]]]],[e.BRAVIARY,i.NORMAL,i.FLYING,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,5,[T.DAWN,T.DAY]]]],[e.VULLABY,i.DARK,i.FLYING,[[N.MOUNTAIN,1,[T.DUSK,T.NIGHT]]]],[e.MANDIBUZZ,i.DARK,i.FLYING,[[N.MOUNTAIN,1,[T.DUSK,T.NIGHT]],[N.MOUNTAIN,5,[T.DUSK,T.NIGHT]]]],[e.HEATMOR,i.FIRE,-1,[[N.VOLCANO,1],[N.VOLCANO,5]]],[e.DURANT,i.BUG,i.STEEL,[[N.FOREST,3],[N.FOREST,6]]],[e.DEINO,i.DARK,i.DRAGON,[[N.WASTELAND,1,[T.DUSK,T.NIGHT]],[N.ABYSS,2]]],[e.ZWEILOUS,i.DARK,i.DRAGON,[[N.WASTELAND,1,[T.DUSK,T.NIGHT]],[N.ABYSS,2]]],[e.HYDREIGON,i.DARK,i.DRAGON,[[N.WASTELAND,1,[T.DUSK,T.NIGHT]],[N.ABYSS,2],[N.ABYSS,5]]],[e.LARVESTA,i.BUG,i.FIRE,[[N.VOLCANO,3]]],[e.VOLCARONA,i.BUG,i.FIRE,[[N.VOLCANO,3],[N.VOLCANO,6]]],[e.COBALION,i.STEEL,i.FIGHTING,[[N.CONSTRUCTION_SITE,4],[N.CONSTRUCTION_SITE,7]]],[e.TERRAKION,i.ROCK,i.FIGHTING,[[N.DOJO,4],[N.DOJO,7]]],[e.VIRIZION,i.GRASS,i.FIGHTING,[[N.GRASS,4],[N.GRASS,7]]],[e.TORNADUS,i.FLYING,-1,[[N.MOUNTAIN,4],[N.MOUNTAIN,7]]],[e.THUNDURUS,i.ELECTRIC,i.FLYING,[[N.POWER_PLANT,4],[N.POWER_PLANT,7]]],[e.RESHIRAM,i.DRAGON,i.FIRE,[[N.VOLCANO,8]]],[e.ZEKROM,i.DRAGON,i.ELECTRIC,[[N.POWER_PLANT,8]]],[e.LANDORUS,i.GROUND,i.FLYING,[[N.BADLANDS,4],[N.BADLANDS,7]]],[e.KYUREM,i.DRAGON,i.ICE,[[N.ICE_CAVE,8]]],[e.KELDEO,i.WATER,i.FIGHTING,[[N.BEACH,4],[N.BEACH,7]]],[e.MELOETTA,i.NORMAL,i.PSYCHIC,[[N.MEADOW,4],[N.MEADOW,7]]],[e.GENESECT,i.BUG,i.STEEL,[[N.FACTORY,4],[N.FACTORY,7]]],[e.CHESPIN,i.GRASS,-1,[[N.FOREST,2]]],[e.QUILLADIN,i.GRASS,-1,[[N.FOREST,2]]],[e.CHESNAUGHT,i.GRASS,i.FIGHTING,[[N.FOREST,2],[N.FOREST,6]]],[e.FENNEKIN,i.FIRE,-1,[[N.VOLCANO,2]]],[e.BRAIXEN,i.FIRE,-1,[[N.VOLCANO,2]]],[e.DELPHOX,i.FIRE,i.PSYCHIC,[[N.VOLCANO,2],[N.VOLCANO,6]]],[e.FROAKIE,i.WATER,-1,[[N.LAKE,2]]],[e.FROGADIER,i.WATER,-1,[[N.LAKE,2]]],[e.GRENINJA,i.WATER,i.DARK,[[N.LAKE,2],[N.LAKE,6]]],[e.BUNNELBY,i.NORMAL,-1,[[N.CAVE,0]]],[e.DIGGERSBY,i.NORMAL,i.GROUND,[[N.CAVE,0],[N.CAVE,5]]],[e.FLETCHLING,i.NORMAL,i.FLYING,[[N.TOWN,0],[N.PLAINS,1],[N.MOUNTAIN,0,[T.DAWN,T.DAY]]]],[e.FLETCHINDER,i.FIRE,i.FLYING,[[N.PLAINS,1],[N.MOUNTAIN,0,[T.DAWN,T.DAY]]]],[e.TALONFLAME,i.FIRE,i.FLYING,[[N.PLAINS,1],[N.MOUNTAIN,0,[T.DAWN,T.DAY]],[N.MOUNTAIN,5,[T.DAWN,T.DAY]]]],[e.SCATTERBUG,i.BUG,-1,[[N.TOWN,0,[T.DAWN,T.DAY]]]],[e.SPEWPA,i.BUG,-1,[[N.TOWN,0,[T.DAWN,T.DAY]]]],[e.VIVILLON,i.BUG,i.FLYING,[[N.FOREST,0,[T.DAWN,T.DAY]]]],[e.LITLEO,i.FIRE,i.NORMAL,[[N.JUNGLE,1]]],[e.PYROAR,i.FIRE,i.NORMAL,[[N.JUNGLE,1],[N.JUNGLE,5]]],[e.FLABEBE,i.FAIRY,-1,[[N.MEADOW,0]]],[e.FLOETTE,i.FAIRY,-1,[[N.MEADOW,0]]],[e.FLORGES,i.FAIRY,-1,[[N.MEADOW,5]]],[e.SKIDDO,i.GRASS,-1,[[N.MOUNTAIN,0]]],[e.GOGOAT,i.GRASS,-1,[[N.MOUNTAIN,0],[N.MOUNTAIN,5]]],[e.PANCHAM,i.FIGHTING,-1,[[N.DOJO,2],[N.JUNGLE,1,[T.DUSK,T.NIGHT]]]],[e.PANGORO,i.FIGHTING,i.DARK,[[N.DOJO,2],[N.DOJO,6],[N.JUNGLE,1,[T.DUSK,T.NIGHT]],[N.JUNGLE,5,[T.DUSK,T.NIGHT]]]],[e.FURFROU,i.NORMAL,-1,[[N.METROPOLIS,1],[N.METROPOLIS,5]]],[e.ESPURR,i.PSYCHIC,-1,[[N.METROPOLIS,1,[T.DUSK,T.NIGHT]]]],[e.MEOWSTIC,i.PSYCHIC,-1,[[N.METROPOLIS,1,[T.DUSK,T.NIGHT]],[N.METROPOLIS,5,[T.DUSK,T.NIGHT]]]],[e.HONEDGE,i.STEEL,i.GHOST,[[N.TEMPLE,0]]],[e.DOUBLADE,i.STEEL,i.GHOST,[[N.TEMPLE,0]]],[e.AEGISLASH,i.STEEL,i.GHOST,[[N.TEMPLE,5]]],[e.SPRITZEE,i.FAIRY,-1,[[N.FAIRY_CAVE,0]]],[e.AROMATISSE,i.FAIRY,-1,[[N.FAIRY_CAVE,0],[N.FAIRY_CAVE,5]]],[e.SWIRLIX,i.FAIRY,-1,[[N.FAIRY_CAVE,0]]],[e.SLURPUFF,i.FAIRY,-1,[[N.FAIRY_CAVE,0],[N.FAIRY_CAVE,5]]],[e.INKAY,i.DARK,i.PSYCHIC,[[N.SEA,0,[T.DUSK,T.NIGHT]]]],[e.MALAMAR,i.DARK,i.PSYCHIC,[[N.SEA,0,[T.DUSK,T.NIGHT]],[N.SEA,5,[T.DUSK,T.NIGHT]]]],[e.BINACLE,i.ROCK,i.WATER,[[N.BEACH,0]]],[e.BARBARACLE,i.ROCK,i.WATER,[[N.BEACH,0],[N.BEACH,5]]],[e.SKRELP,i.POISON,i.WATER,[[N.SEABED,1]]],[e.DRAGALGE,i.POISON,i.DRAGON,[[N.SEABED,1],[N.SEABED,5]]],[e.CLAUNCHER,i.WATER,-1,[[N.BEACH,1]]],[e.CLAWITZER,i.WATER,-1,[[N.BEACH,1],[N.BEACH,5]]],[e.HELIOPTILE,i.ELECTRIC,i.NORMAL,[[N.DESERT,1,[T.DAWN,T.DAY]]]],[e.HELIOLISK,i.ELECTRIC,i.NORMAL,[[N.DESERT,5,[T.DAWN,T.DAY]]]],[e.TYRUNT,i.ROCK,i.DRAGON,[[N.WASTELAND,3]]],[e.TYRANTRUM,i.ROCK,i.DRAGON,[[N.WASTELAND,3],[N.WASTELAND,6]]],[e.AMAURA,i.ROCK,i.ICE,[[N.ICE_CAVE,3]]],[e.AURORUS,i.ROCK,i.ICE,[[N.ICE_CAVE,3],[N.ICE_CAVE,6]]],[e.SYLVEON,i.FAIRY,-1,[[N.MEADOW,3],[N.MEADOW,6]]],[e.HAWLUCHA,i.FIGHTING,i.FLYING,[[N.MOUNTAIN,2],[N.MOUNTAIN,6]]],[e.DEDENNE,i.ELECTRIC,i.FAIRY,[[N.POWER_PLANT,0],[N.POWER_PLANT,5]]],[e.CARBINK,i.ROCK,i.FAIRY,[[N.CAVE,2],[N.FAIRY_CAVE,1],[N.FAIRY_CAVE,5]]],[e.GOOMY,i.DRAGON,-1,[[N.WASTELAND,0,[T.DAWN,T.DAY]]]],[e.SLIGGOO,i.DRAGON,-1,[[N.WASTELAND,0,[T.DAWN,T.DAY]]]],[e.GOODRA,i.DRAGON,-1,[[N.WASTELAND,0,[T.DAWN,T.DAY]],[N.WASTELAND,5,[T.DAWN,T.DAY]]]],[e.KLEFKI,i.STEEL,i.FAIRY,[[N.FACTORY,1],[N.FACTORY,5]]],[e.PHANTUMP,i.GHOST,i.GRASS,[[N.GRAVEYARD,0]]],[e.TREVENANT,i.GHOST,i.GRASS,[[N.GRAVEYARD,5]]],[e.PUMPKABOO,i.GHOST,i.GRASS,[[N.GRAVEYARD,0]]],[e.GOURGEIST,i.GHOST,i.GRASS,[[N.GRAVEYARD,5]]],[e.BERGMITE,i.ICE,-1,[[N.ICE_CAVE,0]]],[e.AVALUGG,i.ICE,-1,[[N.ICE_CAVE,0],[N.ICE_CAVE,5]]],[e.NOIBAT,i.FLYING,i.DRAGON,[[N.CAVE,1]]],[e.NOIVERN,i.FLYING,i.DRAGON,[[N.CAVE,1],[N.CAVE,5]]],[e.XERNEAS,i.FAIRY,-1,[[N.FAIRY_CAVE,8]]],[e.YVELTAL,i.DARK,i.FLYING,[[N.ABYSS,8]]],[e.ZYGARDE,i.DRAGON,i.GROUND,[[N.LABORATORY,7]]],[e.DIANCIE,i.ROCK,i.FAIRY,[[N.FAIRY_CAVE,4],[N.FAIRY_CAVE,7]]],[e.HOOPA,i.PSYCHIC,i.GHOST,[[N.TEMPLE,4],[N.TEMPLE,7]]],[e.VOLCANION,i.FIRE,i.WATER,[[N.VOLCANO,4],[N.VOLCANO,7]]],[e.ROWLET,i.GRASS,i.FLYING,[[N.FOREST,2]]],[e.DARTRIX,i.GRASS,i.FLYING,[[N.FOREST,2]]],[e.DECIDUEYE,i.GRASS,i.GHOST,[[N.FOREST,2],[N.FOREST,6]]],[e.LITTEN,i.FIRE,-1,[[N.VOLCANO,2]]],[e.TORRACAT,i.FIRE,-1,[[N.VOLCANO,2]]],[e.INCINEROAR,i.FIRE,i.DARK,[[N.VOLCANO,2],[N.VOLCANO,6]]],[e.POPPLIO,i.WATER,-1,[[N.SEA,2]]],[e.BRIONNE,i.WATER,-1,[[N.SEA,2]]],[e.PRIMARINA,i.WATER,i.FAIRY,[[N.SEA,2],[N.SEA,6]]],[e.PIKIPEK,i.NORMAL,i.FLYING,[[N.JUNGLE,0]]],[e.TRUMBEAK,i.NORMAL,i.FLYING,[[N.JUNGLE,0]]],[e.TOUCANNON,i.NORMAL,i.FLYING,[[N.JUNGLE,0],[N.JUNGLE,5]]],[e.YUNGOOS,i.NORMAL,-1,[[N.TOWN,0,[T.DAWN,T.DAY]],[N.PLAINS,0,[T.DAWN,T.DAY]]]],[e.GUMSHOOS,i.NORMAL,-1,[[N.PLAINS,0,[T.DAWN,T.DAY]],[N.PLAINS,5,[T.DAWN,T.DAY]]]],[e.GRUBBIN,i.BUG,-1,[[N.POWER_PLANT,0]]],[e.CHARJABUG,i.BUG,i.ELECTRIC,[[N.POWER_PLANT,0]]],[e.VIKAVOLT,i.BUG,i.ELECTRIC,[[N.POWER_PLANT,5]]],[e.CRABRAWLER,i.FIGHTING,-1,[[N.ICE_CAVE,0]]],[e.CRABOMINABLE,i.FIGHTING,i.ICE,[[N.ICE_CAVE,5]]],[e.ORICORIO,i.FIRE,i.FLYING,[[N.MEADOW,1],[N.ISLAND,0],[N.ISLAND,5]]],[e.CUTIEFLY,i.BUG,i.FAIRY,[[N.MEADOW,0],[N.FAIRY_CAVE,0]]],[e.RIBOMBEE,i.BUG,i.FAIRY,[[N.MEADOW,0],[N.MEADOW,5],[N.FAIRY_CAVE,0],[N.FAIRY_CAVE,5]]],[e.ROCKRUFF,i.ROCK,-1,[[N.PLAINS,1,T.DAY],[N.FOREST,1,T.NIGHT],[N.CAVE,1,T.DUSK]]],[e.LYCANROC,i.ROCK,-1,[[N.PLAINS,1,T.DAY],[N.PLAINS,6,T.DAY],[N.FOREST,1,T.NIGHT],[N.FOREST,6,T.NIGHT],[N.CAVE,1,T.DUSK],[N.CAVE,6,T.DUSK]]],[e.WISHIWASHI,i.WATER,-1,[[N.LAKE,1],[N.LAKE,5]]],[e.MAREANIE,i.POISON,i.WATER,[[N.BEACH,0],[N.SWAMP,1]]],[e.TOXAPEX,i.POISON,i.WATER,[[N.BEACH,0],[N.BEACH,5],[N.SWAMP,1],[N.SWAMP,5]]],[e.MUDBRAY,i.GROUND,-1,[[N.BADLANDS,0]]],[e.MUDSDALE,i.GROUND,-1,[[N.BADLANDS,0],[N.BADLANDS,5]]],[e.DEWPIDER,i.WATER,i.BUG,[[N.LAKE,1,[T.DAWN,T.DAY]]]],[e.ARAQUANID,i.WATER,i.BUG,[[N.LAKE,1,[T.DAWN,T.DAY]],[N.LAKE,5,[T.DAWN,T.DAY]]]],[e.FOMANTIS,i.GRASS,-1,[[N.TALL_GRASS,0],[N.JUNGLE,1]]],[e.LURANTIS,i.GRASS,-1,[[N.TALL_GRASS,0],[N.TALL_GRASS,5],[N.JUNGLE,1],[N.JUNGLE,5]]],[e.MORELULL,i.GRASS,i.FAIRY,[[N.FAIRY_CAVE,0]]],[e.SHIINOTIC,i.GRASS,i.FAIRY,[[N.FAIRY_CAVE,0],[N.FAIRY_CAVE,5]]],[e.SALANDIT,i.POISON,i.FIRE,[[N.VOLCANO,0]]],[e.SALAZZLE,i.POISON,i.FIRE,[[N.VOLCANO,0],[N.VOLCANO,5]]],[e.STUFFUL,i.NORMAL,i.FIGHTING,[[N.DOJO,0]]],[e.BEWEAR,i.NORMAL,i.FIGHTING,[[N.DOJO,0],[N.DOJO,5]]],[e.BOUNSWEET,i.GRASS,-1,[[N.TALL_GRASS,0,[T.DAWN,T.DAY]]]],[e.STEENEE,i.GRASS,-1,[[N.TALL_GRASS,0,[T.DAWN,T.DAY]]]],[e.TSAREENA,i.GRASS,-1,[[N.TALL_GRASS,0,[T.DAWN,T.DAY]],[N.TALL_GRASS,5,[T.DAWN,T.DAY]]]],[e.COMFEY,i.FAIRY,-1,[[N.FAIRY_CAVE,1],[N.FAIRY_CAVE,5]]],[e.ORANGURU,i.NORMAL,i.PSYCHIC,[[N.JUNGLE,2,[T.DUSK,T.NIGHT]]]],[e.PASSIMIAN,i.FIGHTING,-1,[[N.JUNGLE,2,[T.DAWN,T.DAY]]]],[e.WIMPOD,i.BUG,i.WATER,[[N.CAVE,1]]],[e.GOLISOPOD,i.BUG,i.WATER,[[N.CAVE,1],[N.CAVE,5]]],[e.SANDYGAST,i.GHOST,i.GROUND,[[N.BEACH,1]]],[e.PALOSSAND,i.GHOST,i.GROUND,[[N.BEACH,1],[N.BEACH,5]]],[e.PYUKUMUKU,i.WATER,-1,[[N.SEABED,3],[N.SEABED,6]]],[e.TYPE_NULL,i.NORMAL,-1,[[N.LABORATORY,4]]],[e.SILVALLY,i.NORMAL,-1,[[N.LABORATORY,7]]],[e.MINIOR,i.ROCK,i.FLYING,[[N.SPACE,0],[N.SPACE,5]]],[e.KOMALA,i.NORMAL,-1,[[N.JUNGLE,1,[T.DAWN,T.DAY]],[N.JUNGLE,5,[T.DAWN,T.DAY]]]],[e.TURTONATOR,i.FIRE,i.DRAGON,[[N.VOLCANO,1],[N.VOLCANO,5]]],[e.TOGEDEMARU,i.ELECTRIC,i.STEEL,[[N.POWER_PLANT,1],[N.POWER_PLANT,5]]],[e.MIMIKYU,i.GHOST,i.FAIRY,[[N.GRAVEYARD,2],[N.GRAVEYARD,5]]],[e.BRUXISH,i.WATER,i.PSYCHIC,[[N.ISLAND,1],[N.ISLAND,5]]],[e.DRAMPA,i.NORMAL,i.DRAGON,[[N.WASTELAND,1],[N.WASTELAND,5]]],[e.DHELMISE,i.GHOST,i.GRASS,[[N.SEABED,2],[N.SEABED,6]]],[e.JANGMO_O,i.DRAGON,-1,[[N.WASTELAND,0,[T.DAWN,T.DAY]]]],[e.HAKAMO_O,i.DRAGON,i.FIGHTING,[[N.WASTELAND,0,[T.DAWN,T.DAY]]]],[e.KOMMO_O,i.DRAGON,i.FIGHTING,[[N.WASTELAND,0,[T.DAWN,T.DAY]],[N.WASTELAND,5,[T.DAWN,T.DAY]]]],[e.TAPU_KOKO,i.ELECTRIC,i.FAIRY,[[N.TEMPLE,4],[N.TEMPLE,7]]],[e.TAPU_LELE,i.PSYCHIC,i.FAIRY,[[N.JUNGLE,4],[N.JUNGLE,7]]],[e.TAPU_BULU,i.GRASS,i.FAIRY,[[N.DESERT,4],[N.DESERT,7]]],[e.TAPU_FINI,i.WATER,i.FAIRY,[[N.BEACH,4],[N.BEACH,7]]],[e.COSMOG,i.PSYCHIC,-1,[[N.SPACE,4]]],[e.COSMOEM,i.PSYCHIC,-1,[[N.SPACE,4]]],[e.SOLGALEO,i.PSYCHIC,i.STEEL,[[N.SPACE,8,T.DAY]]],[e.LUNALA,i.PSYCHIC,i.GHOST,[[N.SPACE,8,T.NIGHT]]],[e.NIHILEGO,i.ROCK,i.POISON,[[N.SEABED,4],[N.SEABED,7]]],[e.BUZZWOLE,i.BUG,i.FIGHTING,[[N.JUNGLE,4],[N.JUNGLE,7]]],[e.PHEROMOSA,i.BUG,i.FIGHTING,[[N.DESERT,4],[N.DESERT,7]]],[e.XURKITREE,i.ELECTRIC,-1,[[N.POWER_PLANT,4],[N.POWER_PLANT,7]]],[e.CELESTEELA,i.STEEL,i.FLYING,[[N.SPACE,4],[N.SPACE,7]]],[e.KARTANA,i.GRASS,i.STEEL,[[N.FOREST,4],[N.FOREST,7]]],[e.GUZZLORD,i.DARK,i.DRAGON,[[N.SLUM,4],[N.SLUM,7]]],[e.NECROZMA,i.PSYCHIC,-1,[[N.SPACE,8]]],[e.MAGEARNA,i.STEEL,i.FAIRY,[[N.FACTORY,4],[N.FACTORY,7]]],[e.MARSHADOW,i.FIGHTING,i.GHOST,[[N.GRAVEYARD,4],[N.GRAVEYARD,7]]],[e.POIPOLE,i.POISON,-1,[[N.SWAMP,4]]],[e.NAGANADEL,i.POISON,i.DRAGON,[[N.SWAMP,7]]],[e.STAKATAKA,i.ROCK,i.STEEL,[[N.CONSTRUCTION_SITE,4],[N.CONSTRUCTION_SITE,7]]],[e.BLACEPHALON,i.FIRE,i.GHOST,[[N.ISLAND,4],[N.ISLAND,7]]],[e.ZERAORA,i.ELECTRIC,-1,[[N.POWER_PLANT,4],[N.POWER_PLANT,7]]],[e.MELTAN,i.STEEL,-1,[]],[e.MELMETAL,i.STEEL,-1,[]],[e.GROOKEY,i.GRASS,-1,[[N.JUNGLE,2]]],[e.THWACKEY,i.GRASS,-1,[[N.JUNGLE,2]]],[e.RILLABOOM,i.GRASS,-1,[[N.JUNGLE,2],[N.JUNGLE,6]]],[e.SCORBUNNY,i.FIRE,-1,[[N.VOLCANO,2]]],[e.RABOOT,i.FIRE,-1,[[N.VOLCANO,2]]],[e.CINDERACE,i.FIRE,-1,[[N.VOLCANO,2],[N.VOLCANO,6]]],[e.SOBBLE,i.WATER,-1,[[N.LAKE,2]]],[e.DRIZZILE,i.WATER,-1,[[N.LAKE,2]]],[e.INTELEON,i.WATER,-1,[[N.LAKE,2],[N.LAKE,6]]],[e.SKWOVET,i.NORMAL,-1,[[N.TOWN,0,[T.DAWN,T.DAY]],[N.PLAINS,0,[T.DAWN,T.DAY]]]],[e.GREEDENT,i.NORMAL,-1,[[N.PLAINS,0,[T.DAWN,T.DAY]],[N.PLAINS,5,[T.DAWN,T.DAY]]]],[e.ROOKIDEE,i.FLYING,-1,[[N.TOWN,2],[N.PLAINS,2],[N.MOUNTAIN,1,[T.DAWN,T.DAY]]]],[e.CORVISQUIRE,i.FLYING,-1,[[N.PLAINS,2],[N.MOUNTAIN,1,[T.DAWN,T.DAY]]]],[e.CORVIKNIGHT,i.FLYING,i.STEEL,[[N.PLAINS,2],[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,5,[T.DAWN,T.DAY]]]],[e.BLIPBUG,i.BUG,-1,[[N.TOWN,0,[T.DUSK,T.NIGHT]]]],[e.DOTTLER,i.BUG,i.PSYCHIC,[[N.FOREST,1,[T.DUSK,T.NIGHT]]]],[e.ORBEETLE,i.BUG,i.PSYCHIC,[[N.FOREST,1,[T.DUSK,T.NIGHT]],[N.FOREST,5,[T.DUSK,T.NIGHT]]]],[e.NICKIT,i.DARK,-1,[[N.ABYSS,0]]],[e.THIEVUL,i.DARK,-1,[[N.ABYSS,0],[N.ABYSS,5]]],[e.GOSSIFLEUR,i.GRASS,-1,[[N.MEADOW,0]]],[e.ELDEGOSS,i.GRASS,-1,[[N.MEADOW,0]]],[e.WOOLOO,i.NORMAL,-1,[[N.TOWN,0],[N.MEADOW,0]]],[e.DUBWOOL,i.NORMAL,-1,[[N.MEADOW,0],[N.MEADOW,5]]],[e.CHEWTLE,i.WATER,-1,[[N.LAKE,0]]],[e.DREDNAW,i.WATER,i.ROCK,[[N.LAKE,0],[N.LAKE,5]]],[e.YAMPER,i.ELECTRIC,-1,[[N.METROPOLIS,0,[T.DAWN,T.DAY]]]],[e.BOLTUND,i.ELECTRIC,-1,[[N.METROPOLIS,0,[T.DAWN,T.DAY]],[N.METROPOLIS,5,[T.DAWN,T.DAY]]]],[e.ROLYCOLY,i.ROCK,-1,[[N.VOLCANO,0]]],[e.CARKOL,i.ROCK,i.FIRE,[[N.VOLCANO,0]]],[e.COALOSSAL,i.ROCK,i.FIRE,[[N.VOLCANO,0],[N.VOLCANO,5]]],[e.APPLIN,i.GRASS,i.DRAGON,[[N.MEADOW,2]]],[e.FLAPPLE,i.GRASS,i.DRAGON,[[N.MEADOW,6]]],[e.APPLETUN,i.GRASS,i.DRAGON,[[N.MEADOW,6]]],[e.SILICOBRA,i.GROUND,-1,[[N.DESERT,0]]],[e.SANDACONDA,i.GROUND,-1,[[N.DESERT,0],[N.DESERT,5]]],[e.CRAMORANT,i.FLYING,i.WATER,[[N.SEA,0,[T.DAWN,T.DAY]],[N.SEA,5,[T.DAWN,T.DAY]]]],[e.ARROKUDA,i.WATER,-1,[[N.SEABED,0]]],[e.BARRASKEWDA,i.WATER,-1,[[N.SEABED,0],[N.SEABED,5]]],[e.TOXEL,i.ELECTRIC,i.POISON,[]],[e.TOXTRICITY,i.ELECTRIC,i.POISON,[[N.SLUM,2,[T.DUSK,T.NIGHT]],[N.SLUM,6,[T.DUSK,T.NIGHT]]]],[e.SIZZLIPEDE,i.FIRE,i.BUG,[[N.BADLANDS,1,[T.DAWN,T.DAY]]]],[e.CENTISKORCH,i.FIRE,i.BUG,[[N.BADLANDS,1,[T.DAWN,T.DAY]],[N.BADLANDS,5,[T.DAWN,T.DAY]]]],[e.CLOBBOPUS,i.FIGHTING,-1,[[N.DOJO,0]]],[e.GRAPPLOCT,i.FIGHTING,-1,[[N.DOJO,0],[N.DOJO,5]]],[e.SINISTEA,i.GHOST,-1,[[N.GRAVEYARD,1]]],[e.POLTEAGEIST,i.GHOST,-1,[[N.GRAVEYARD,1],[N.GRAVEYARD,5]]],[e.HATENNA,i.PSYCHIC,-1,[[N.FAIRY_CAVE,1]]],[e.HATTREM,i.PSYCHIC,-1,[[N.FAIRY_CAVE,1]]],[e.HATTERENE,i.PSYCHIC,i.FAIRY,[[N.FAIRY_CAVE,1],[N.FAIRY_CAVE,5]]],[e.IMPIDIMP,i.DARK,i.FAIRY,[[N.ABYSS,0]]],[e.MORGREM,i.DARK,i.FAIRY,[[N.ABYSS,0]]],[e.GRIMMSNARL,i.DARK,i.FAIRY,[[N.ABYSS,0],[N.ABYSS,5]]],[e.OBSTAGOON,i.DARK,i.NORMAL,[[N.SLUM,2,[T.DUSK,T.NIGHT]],[N.SLUM,6,[T.DUSK,T.NIGHT]]]],[e.PERRSERKER,i.STEEL,-1,[[N.CONSTRUCTION_SITE,2,T.DUSK],[N.CONSTRUCTION_SITE,6,T.DUSK]]],[e.CURSOLA,i.GHOST,-1,[[N.SEABED,3],[N.SEABED,6]]],[e.SIRFETCHD,i.FIGHTING,-1,[[N.DOJO,6]]],[e.MR_RIME,i.ICE,i.PSYCHIC,[[N.SNOWY_FOREST,3],[N.SNOWY_FOREST,6]]],[e.RUNERIGUS,i.GROUND,i.GHOST,[[N.RUINS,3,[T.DUSK,T.NIGHT]],[N.RUINS,6,[T.DUSK,T.NIGHT]]]],[e.MILCERY,i.FAIRY,-1,[[N.FAIRY_CAVE,0]]],[e.ALCREMIE,i.FAIRY,-1,[[N.FAIRY_CAVE,0],[N.FAIRY_CAVE,5]]],[e.FALINKS,i.FIGHTING,-1,[[N.JUNGLE,1],[N.JUNGLE,5]]],[e.PINCURCHIN,i.ELECTRIC,-1,[[N.SEABED,1]]],[e.SNOM,i.ICE,i.BUG,[[N.ICE_CAVE,0],[N.SNOWY_FOREST,0,[T.DUSK,T.NIGHT]]]],[e.FROSMOTH,i.ICE,i.BUG,[[N.ICE_CAVE,0],[N.SNOWY_FOREST,0,[T.DUSK,T.NIGHT]],[N.SNOWY_FOREST,5,[T.DUSK,T.NIGHT]]]],[e.STONJOURNER,i.ROCK,-1,[[N.RUINS,2]]],[e.EISCUE,i.ICE,-1,[[N.ICE_CAVE,1],[N.SNOWY_FOREST,0]]],[e.INDEEDEE,i.PSYCHIC,i.NORMAL,[[N.METROPOLIS,1,[T.DAWN,T.DAY]]]],[e.MORPEKO,i.ELECTRIC,i.DARK,[[N.METROPOLIS,2,[T.DUSK,T.NIGHT]]]],[e.CUFANT,i.STEEL,-1,[[N.BADLANDS,1]]],[e.COPPERAJAH,i.STEEL,-1,[[N.BADLANDS,1],[N.BADLANDS,5]]],[e.DRACOZOLT,i.ELECTRIC,i.DRAGON,[[N.WASTELAND,3],[N.WASTELAND,6]]],[e.ARCTOZOLT,i.ELECTRIC,i.ICE,[[N.SNOWY_FOREST,3],[N.SNOWY_FOREST,6]]],[e.DRACOVISH,i.WATER,i.DRAGON,[[N.WASTELAND,3],[N.WASTELAND,6]]],[e.ARCTOVISH,i.WATER,i.ICE,[[N.SEABED,3],[N.SEABED,6]]],[e.DURALUDON,i.STEEL,i.DRAGON,[[N.CONSTRUCTION_SITE,2]]],[e.DREEPY,i.DRAGON,i.GHOST,[[N.WASTELAND,2,[T.DUSK,T.NIGHT]]]],[e.DRAKLOAK,i.DRAGON,i.GHOST,[[N.WASTELAND,2,[T.DUSK,T.NIGHT]]]],[e.DRAGAPULT,i.DRAGON,i.GHOST,[[N.WASTELAND,2,[T.DUSK,T.NIGHT]],[N.WASTELAND,5,[T.DUSK,T.NIGHT]]]],[e.ZACIAN,i.FAIRY,-1,[[N.SNOWY_FOREST,8]]],[e.ZAMAZENTA,i.FIGHTING,-1,[[N.DOJO,8]]],[e.ETERNATUS,i.POISON,i.DRAGON,[[N.END,5]]],[e.KUBFU,i.FIGHTING,-1,[[N.DOJO,4]]],[e.URSHIFU,i.FIGHTING,i.DARK,[[N.DOJO,7]]],[e.ZARUDE,i.DARK,i.GRASS,[[N.JUNGLE,4],[N.JUNGLE,7]]],[e.REGIELEKI,i.ELECTRIC,-1,[[N.POWER_PLANT,4],[N.POWER_PLANT,7]]],[e.REGIDRAGO,i.DRAGON,-1,[[N.WASTELAND,4],[N.WASTELAND,7]]],[e.GLASTRIER,i.ICE,-1,[[N.SNOWY_FOREST,4],[N.SNOWY_FOREST,7]]],[e.SPECTRIER,i.GHOST,-1,[[N.GRAVEYARD,4],[N.GRAVEYARD,7]]],[e.CALYREX,i.PSYCHIC,i.GRASS,[[N.FOREST,8]]],[e.WYRDEER,i.NORMAL,i.PSYCHIC,[[N.SNOWY_FOREST,5,[T.DAWN,T.DAY]]]],[e.KLEAVOR,i.BUG,i.ROCK,[[N.JUNGLE,3],[N.JUNGLE,8]]],[e.URSALUNA,i.GROUND,i.NORMAL,[[N.SNOWY_FOREST,5]]],[e.BASCULEGION,i.WATER,i.GHOST,[[N.SEABED,6]]],[e.SNEASLER,i.FIGHTING,i.POISON,[[N.SNOWY_FOREST,6,[T.DAWN,T.DAY]]]],[e.OVERQWIL,i.DARK,i.POISON,[[N.SEABED,6]]],[e.ENAMORUS,i.FAIRY,i.FLYING,[[N.FAIRY_CAVE,4],[N.FAIRY_CAVE,7]]],[e.SPRIGATITO,i.GRASS,-1,[[N.MEADOW,2]]],[e.FLORAGATO,i.GRASS,-1,[[N.MEADOW,2]]],[e.MEOWSCARADA,i.GRASS,i.DARK,[[N.MEADOW,2],[N.MEADOW,6]]],[e.FUECOCO,i.FIRE,-1,[[N.GRAVEYARD,2]]],[e.CROCALOR,i.FIRE,-1,[[N.GRAVEYARD,2]]],[e.SKELEDIRGE,i.FIRE,i.GHOST,[[N.GRAVEYARD,2],[N.GRAVEYARD,6]]],[e.QUAXLY,i.WATER,-1,[[N.BEACH,2]]],[e.QUAXWELL,i.WATER,-1,[[N.BEACH,2]]],[e.QUAQUAVAL,i.WATER,i.FIGHTING,[[N.BEACH,2],[N.BEACH,6]]],[e.LECHONK,i.NORMAL,-1,[[N.TOWN,0],[N.PLAINS,0]]],[e.OINKOLOGNE,i.NORMAL,-1,[[N.PLAINS,0],[N.PLAINS,5]]],[e.TAROUNTULA,i.BUG,-1,[[N.FOREST,0]]],[e.SPIDOPS,i.BUG,-1,[[N.FOREST,0],[N.FOREST,5]]],[e.NYMBLE,i.BUG,-1,[[N.TALL_GRASS,0],[N.FOREST,0]]],[e.LOKIX,i.BUG,i.DARK,[[N.TALL_GRASS,0],[N.TALL_GRASS,5],[N.FOREST,0],[N.FOREST,5]]],[e.PAWMI,i.ELECTRIC,-1,[[N.TOWN,1,[T.DAWN,T.DAY]],[N.PLAINS,1,[T.DAWN,T.DAY]],[N.POWER_PLANT,0]]],[e.PAWMO,i.ELECTRIC,i.FIGHTING,[[N.PLAINS,1,[T.DAWN,T.DAY]],[N.POWER_PLANT,0]]],[e.PAWMOT,i.ELECTRIC,i.FIGHTING,[[N.PLAINS,1,[T.DAWN,T.DAY]],[N.PLAINS,6,[T.DAWN,T.DAY]],[N.POWER_PLANT,0],[N.POWER_PLANT,5]]],[e.TANDEMAUS,i.NORMAL,-1,[[N.TOWN,2,[T.DAWN,T.DAY]],[N.METROPOLIS,2,[T.DAWN,T.DAY]]]],[e.MAUSHOLD,i.NORMAL,-1,[[N.METROPOLIS,2,[T.DAWN,T.DAY]],[N.METROPOLIS,6,[T.DAWN,T.DAY]]]],[e.FIDOUGH,i.FAIRY,-1,[[N.TOWN,1],[N.METROPOLIS,1]]],[e.DACHSBUN,i.FAIRY,-1,[[N.METROPOLIS,1],[N.METROPOLIS,5]]],[e.SMOLIV,i.GRASS,i.NORMAL,[[N.MEADOW,1,[T.DAWN,T.DAY]]]],[e.DOLLIV,i.GRASS,i.NORMAL,[[N.MEADOW,1,[T.DAWN,T.DAY]]]],[e.ARBOLIVA,i.GRASS,i.NORMAL,[[N.MEADOW,1,[T.DAWN,T.DAY]],[N.MEADOW,5,[T.DAWN,T.DAY]]]],[e.SQUAWKABILLY,i.NORMAL,i.FLYING,[[N.METROPOLIS,1],[N.FOREST,2]]],[e.NACLI,i.ROCK,-1,[[N.MOUNTAIN,1],[N.CAVE,0]]],[e.NACLSTACK,i.ROCK,-1,[[N.MOUNTAIN,1],[N.CAVE,0]]],[e.GARGANACL,i.ROCK,-1,[[N.MOUNTAIN,1],[N.MOUNTAIN,5],[N.CAVE,0],[N.CAVE,5]]],[e.CHARCADET,i.FIRE,-1,[[N.VOLCANO,2]]],[e.ARMAROUGE,i.FIRE,i.PSYCHIC,[[N.VOLCANO,2],[N.VOLCANO,6]]],[e.CERULEDGE,i.FIRE,i.GHOST,[[N.GRAVEYARD,2],[N.GRAVEYARD,6]]],[e.TADBULB,i.ELECTRIC,-1,[[N.POWER_PLANT,0]]],[e.BELLIBOLT,i.ELECTRIC,-1,[[N.POWER_PLANT,0],[N.POWER_PLANT,5]]],[e.WATTREL,i.ELECTRIC,i.FLYING,[[N.SEA,1]]],[e.KILOWATTREL,i.ELECTRIC,i.FLYING,[[N.SEA,1],[N.SEA,5]]],[e.MASCHIFF,i.DARK,-1,[[N.ABYSS,0]]],[e.MABOSSTIFF,i.DARK,-1,[[N.ABYSS,0],[N.ABYSS,5]]],[e.SHROODLE,i.POISON,i.NORMAL,[[N.FOREST,0]]],[e.GRAFAIAI,i.POISON,i.NORMAL,[[N.FOREST,0],[N.FOREST,5]]],[e.BRAMBLIN,i.GRASS,i.GHOST,[[N.DESERT,1]]],[e.BRAMBLEGHAST,i.GRASS,i.GHOST,[[N.DESERT,1],[N.DESERT,5]]],[e.TOEDSCOOL,i.GROUND,i.GRASS,[[N.FOREST,2]]],[e.TOEDSCRUEL,i.GROUND,i.GRASS,[[N.FOREST,2],[N.FOREST,6]]],[e.KLAWF,i.ROCK,-1,[[N.MOUNTAIN,2]]],[e.CAPSAKID,i.GRASS,-1,[[N.BADLANDS,1,[T.DAWN,T.DAY]]]],[e.SCOVILLAIN,i.GRASS,i.FIRE,[[N.BADLANDS,1,[T.DAWN,T.DAY]],[N.BADLANDS,5,[T.DAWN,T.DAY]]]],[e.RELLOR,i.BUG,-1,[[N.DESERT,0,[T.DAWN,T.DAY]]]],[e.RABSCA,i.BUG,i.PSYCHIC,[[N.DESERT,0,[T.DAWN,T.DAY]],[N.DESERT,5,[T.DAWN,T.DAY]]]],[e.FLITTLE,i.PSYCHIC,-1,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]]]],[e.ESPATHRA,i.PSYCHIC,-1,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]],[N.MOUNTAIN,5,[T.DAWN,T.DAY]]]],[e.TINKATINK,i.FAIRY,i.STEEL,[[N.RUINS,1]]],[e.TINKATUFF,i.FAIRY,i.STEEL,[[N.RUINS,1]]],[e.TINKATON,i.FAIRY,i.STEEL,[[N.RUINS,1],[N.RUINS,5]]],[e.WIGLETT,i.WATER,-1,[[N.BEACH,0]]],[e.WUGTRIO,i.WATER,-1,[[N.BEACH,0]]],[e.BOMBIRDIER,i.FLYING,i.DARK,[[N.MOUNTAIN,1,[T.DAWN,T.DAY]]]],[e.FINIZEN,i.WATER,-1,[[N.SEA,0,[T.DAWN,T.DAY]]]],[e.PALAFIN,i.WATER,-1,[[N.SEA,0,[T.DAWN,T.DAY]],[N.SEA,5,[T.DAWN,T.DAY]]]],[e.VAROOM,i.STEEL,i.POISON,[[N.METROPOLIS,2],[N.SLUM,2]]],[e.REVAVROOM,i.STEEL,i.POISON,[[N.METROPOLIS,2],[N.METROPOLIS,6],[N.SLUM,2],[N.SLUM,6]]],[e.CYCLIZAR,i.DRAGON,i.NORMAL,[[N.WASTELAND,1]]],[e.ORTHWORM,i.STEEL,-1,[[N.DESERT,1]]],[e.GLIMMET,i.ROCK,i.POISON,[[N.CAVE,2]]],[e.GLIMMORA,i.ROCK,i.POISON,[[N.CAVE,2],[N.CAVE,6]]],[e.GREAVARD,i.GHOST,-1,[[N.GRAVEYARD,0]]],[e.HOUNDSTONE,i.GHOST,-1,[[N.GRAVEYARD,0],[N.GRAVEYARD,5]]],[e.FLAMIGO,i.FLYING,i.FIGHTING,[[N.LAKE,1]]],[e.CETODDLE,i.ICE,-1,[[N.ICE_CAVE,1]]],[e.CETITAN,i.ICE,-1,[[N.ICE_CAVE,1],[N.ICE_CAVE,5]]],[e.VELUZA,i.WATER,i.PSYCHIC,[[N.SEABED,0]]],[e.DONDOZO,i.WATER,-1,[[N.SEABED,1],[N.SEABED,5]]],[e.TATSUGIRI,i.DRAGON,i.WATER,[[N.BEACH,2]]],[e.ANNIHILAPE,i.FIGHTING,i.GHOST,[[N.PLAINS,1,[T.DUSK,T.NIGHT]],[N.DOJO,0],[N.DOJO,5]]],[e.CLODSIRE,i.POISON,i.GROUND,[[N.SWAMP,0,[T.DUSK,T.NIGHT]],[N.SWAMP,5,[T.DUSK,T.NIGHT]]]],[e.FARIGIRAF,i.NORMAL,i.PSYCHIC,[[N.TALL_GRASS,2],[N.TALL_GRASS,6]]],[e.DUDUNSPARCE,i.NORMAL,-1,[[N.PLAINS,3],[N.PLAINS,6]]],[e.KINGAMBIT,i.DARK,i.STEEL,[[N.ABYSS,0],[N.ABYSS,5]]],[e.GREAT_TUSK,i.GROUND,i.FIGHTING,[[N.END,0]]],[e.SCREAM_TAIL,i.FAIRY,i.PSYCHIC,[[N.END,0]]],[e.BRUTE_BONNET,i.GRASS,i.DARK,[[N.END,0]]],[e.FLUTTER_MANE,i.GHOST,i.FAIRY,[[N.END,0]]],[e.SLITHER_WING,i.BUG,i.FIGHTING,[[N.END,0]]],[e.SANDY_SHOCKS,i.ELECTRIC,i.GROUND,[[N.END,0]]],[e.IRON_TREADS,i.GROUND,i.STEEL,[[N.END,0]]],[e.IRON_BUNDLE,i.ICE,i.WATER,[[N.END,0]]],[e.IRON_HANDS,i.FIGHTING,i.ELECTRIC,[[N.END,0]]],[e.IRON_JUGULIS,i.DARK,i.FLYING,[[N.END,0]]],[e.IRON_MOTH,i.FIRE,i.POISON,[[N.END,0]]],[e.IRON_THORNS,i.ROCK,i.ELECTRIC,[[N.END,0]]],[e.FRIGIBAX,i.DRAGON,i.ICE,[[N.WASTELAND,2]]],[e.ARCTIBAX,i.DRAGON,i.ICE,[[N.WASTELAND,2]]],[e.BAXCALIBUR,i.DRAGON,i.ICE,[[N.WASTELAND,2],[N.WASTELAND,5]]],[e.GIMMIGHOUL,i.GHOST,-1,[[N.TEMPLE,2]]],[e.GHOLDENGO,i.STEEL,i.GHOST,[[N.TEMPLE,2],[N.TEMPLE,6]]],[e.WO_CHIEN,i.DARK,i.GRASS,[[N.FOREST,4],[N.FOREST,7]]],[e.CHIEN_PAO,i.DARK,i.ICE,[[N.SNOWY_FOREST,4],[N.SNOWY_FOREST,7]]],[e.TING_LU,i.DARK,i.GROUND,[[N.MOUNTAIN,4],[N.MOUNTAIN,7]]],[e.CHI_YU,i.DARK,i.FIRE,[[N.VOLCANO,4],[N.VOLCANO,7]]],[e.ROARING_MOON,i.DRAGON,i.DARK,[[N.END,1]]],[e.IRON_VALIANT,i.FAIRY,i.FIGHTING,[[N.END,1]]],[e.KORAIDON,i.FIGHTING,i.DRAGON,[[N.RUINS,8]]],[e.MIRAIDON,i.ELECTRIC,i.DRAGON,[[N.LABORATORY,8]]],[e.WALKING_WAKE,i.WATER,i.DRAGON,[[N.END,2]]],[e.IRON_LEAVES,i.GRASS,i.PSYCHIC,[[N.END,2]]],[e.DIPPLIN,i.GRASS,i.DRAGON,[[N.MEADOW,2]]],[e.POLTCHAGEIST,i.GRASS,i.GHOST,[[N.BADLANDS,2]]],[e.SINISTCHA,i.GRASS,i.GHOST,[[N.BADLANDS,2],[N.BADLANDS,6]]],[e.OKIDOGI,i.POISON,i.FIGHTING,[[N.BADLANDS,4],[N.BADLANDS,7]]],[e.MUNKIDORI,i.POISON,i.PSYCHIC,[[N.JUNGLE,4],[N.JUNGLE,7]]],[e.FEZANDIPITI,i.POISON,i.FAIRY,[[N.RUINS,4],[N.RUINS,7]]],[e.OGERPON,i.GRASS,-1,[[N.MOUNTAIN,4],[N.MOUNTAIN,7]]],[e.ARCHALUDON,i.STEEL,i.DRAGON,[[N.CONSTRUCTION_SITE,6]]],[e.HYDRAPPLE,i.GRASS,i.DRAGON,[[N.MEADOW,6]]],[e.GOUGING_FIRE,i.FIRE,i.DRAGON,[[N.END,2]]],[e.RAGING_BOLT,i.ELECTRIC,i.DRAGON,[[N.END,2]]],[e.IRON_BOULDER,i.ROCK,i.PSYCHIC,[[N.END,2]]],[e.IRON_CROWN,i.STEEL,i.PSYCHIC,[[N.END,2]]],[e.TERAPAGOS,i.NORMAL,-1,[[N.CAVE,8]]],[e.PECHARUNT,i.POISON,i.GHOST,[]],[e.ALOLA_RATTATA,i.DARK,i.NORMAL,[[N.ISLAND,0,[T.DUSK,T.NIGHT]]]],[e.ALOLA_RATICATE,i.DARK,i.NORMAL,[[N.ISLAND,0,[T.DUSK,T.NIGHT]],[N.ISLAND,5,[T.DUSK,T.NIGHT]]]],[e.ALOLA_RAICHU,i.ELECTRIC,i.PSYCHIC,[[N.ISLAND,1,[T.DAWN,T.DAY]],[N.ISLAND,5,[T.DAWN,T.DAY]]]],[e.ALOLA_SANDSHREW,i.ICE,i.STEEL,[[N.ISLAND,0],[N.SNOWY_FOREST,2]]],[e.ALOLA_SANDSLASH,i.ICE,i.STEEL,[[N.ISLAND,0],[N.ISLAND,5],[N.SNOWY_FOREST,2],[N.SNOWY_FOREST,6]]],[e.ALOLA_VULPIX,i.ICE,-1,[[N.ISLAND,0],[N.SNOWY_FOREST,2]]],[e.ALOLA_NINETALES,i.ICE,i.FAIRY,[[N.ISLAND,0],[N.ISLAND,5],[N.SNOWY_FOREST,2],[N.SNOWY_FOREST,6]]],[e.ALOLA_DIGLETT,i.GROUND,i.STEEL,[[N.ISLAND,0]]],[e.ALOLA_DUGTRIO,i.GROUND,i.STEEL,[[N.ISLAND,0],[N.ISLAND,5]]],[e.ALOLA_MEOWTH,i.DARK,-1,[[N.ISLAND,0,[T.DUSK,T.NIGHT]]]],[e.ALOLA_PERSIAN,i.DARK,-1,[[N.ISLAND,0,[T.DUSK,T.NIGHT]],[N.ISLAND,5,[T.DUSK,T.NIGHT]]]],[e.ALOLA_GEODUDE,i.ROCK,i.ELECTRIC,[[N.ISLAND,0]]],[e.ALOLA_GRAVELER,i.ROCK,i.ELECTRIC,[[N.ISLAND,0]]],[e.ALOLA_GOLEM,i.ROCK,i.ELECTRIC,[[N.ISLAND,0],[N.ISLAND,5]]],[e.ALOLA_GRIMER,i.POISON,i.DARK,[[N.ISLAND,0]]],[e.ALOLA_MUK,i.POISON,i.DARK,[[N.ISLAND,0],[N.ISLAND,5]]],[e.ALOLA_EXEGGUTOR,i.GRASS,i.DRAGON,[[N.ISLAND,1,[T.DAWN,T.DAY]],[N.ISLAND,5,[T.DAWN,T.DAY]]]],[e.ALOLA_MAROWAK,i.FIRE,i.GHOST,[[N.ISLAND,1,[T.DUSK,T.NIGHT]],[N.ISLAND,5,[T.DUSK,T.NIGHT]]]],[e.ETERNAL_FLOETTE,i.FAIRY,-1,[[N.FAIRY_CAVE,2],[N.FAIRY_CAVE,6]]],[e.GALAR_MEOWTH,i.STEEL,-1,[[N.CONSTRUCTION_SITE,2,T.DUSK]]],[e.GALAR_PONYTA,i.PSYCHIC,-1,[[N.JUNGLE,2,T.DAWN]]],[e.GALAR_RAPIDASH,i.PSYCHIC,i.FAIRY,[[N.JUNGLE,2,T.DAWN],[N.JUNGLE,6,T.DAWN]]],[e.GALAR_SLOWPOKE,i.PSYCHIC,-1,[[N.SWAMP,3,[T.DAWN,T.DAY]]]],[e.GALAR_SLOWBRO,i.POISON,i.PSYCHIC,[[N.SWAMP,3,[T.DAWN,T.DAY]],[N.SWAMP,6,[T.DAWN,T.DAY]]]],[e.GALAR_FARFETCHD,i.FIGHTING,-1,[[N.DOJO,3]]],[e.GALAR_WEEZING,i.POISON,i.FAIRY,[[N.SLUM,6]]],[e.GALAR_MR_MIME,i.ICE,i.PSYCHIC,[[N.SNOWY_FOREST,3]]],[e.GALAR_ARTICUNO,i.PSYCHIC,i.FLYING,[[N.SNOWY_FOREST,4],[N.SNOWY_FOREST,8]]],[e.GALAR_ZAPDOS,i.FIGHTING,i.FLYING,[[N.DOJO,4],[N.DOJO,8]]],[e.GALAR_MOLTRES,i.DARK,i.FLYING,[[N.ABYSS,4],[N.ABYSS,8]]],[e.GALAR_SLOWKING,i.POISON,i.PSYCHIC,[[N.SWAMP,6,[T.DAWN,T.DAY]]]],[e.GALAR_CORSOLA,i.GHOST,-1,[[N.SEABED,3]]],[e.GALAR_ZIGZAGOON,i.DARK,i.NORMAL,[[N.SLUM,2,[T.DUSK,T.NIGHT]]]],[e.GALAR_LINOONE,i.DARK,i.NORMAL,[[N.SLUM,2,[T.DUSK,T.NIGHT]]]],[e.GALAR_DARUMAKA,i.ICE,-1,[[N.SNOWY_FOREST,2,[T.DAWN,T.DAY]]]],[e.GALAR_DARMANITAN,i.ICE,-1,[[N.SNOWY_FOREST,2,[T.DAWN,T.DAY]],[N.SNOWY_FOREST,6,[T.DAWN,T.DAY]]]],[e.GALAR_YAMASK,i.GROUND,i.GHOST,[[N.RUINS,3,[T.DUSK,T.NIGHT]]]],[e.GALAR_STUNFISK,i.GROUND,i.STEEL,[[N.SWAMP,3],[N.SWAMP,6]]],[e.HISUI_GROWLITHE,i.FIRE,i.ROCK,[[N.VOLCANO,3]]],[e.HISUI_ARCANINE,i.FIRE,i.ROCK,[[N.VOLCANO,6]]],[e.HISUI_VOLTORB,i.ELECTRIC,i.GRASS,[[N.POWER_PLANT,3]]],[e.HISUI_ELECTRODE,i.ELECTRIC,i.GRASS,[[N.POWER_PLANT,6]]],[e.HISUI_TYPHLOSION,i.FIRE,i.GHOST,[[N.GRAVEYARD,6]]],[e.HISUI_QWILFISH,i.DARK,i.POISON,[[N.SEABED,3]]],[e.HISUI_SNEASEL,i.FIGHTING,i.POISON,[[N.SNOWY_FOREST,3,[T.DAWN,T.DAY]]]],[e.HISUI_SAMUROTT,i.WATER,i.DARK,[[N.ABYSS,6]]],[e.HISUI_LILLIGANT,i.GRASS,i.FIGHTING,[[N.MEADOW,6,[T.DAWN,T.DAY]]]],[e.HISUI_ZORUA,i.NORMAL,i.GHOST,[[N.SNOWY_FOREST,3,[T.DUSK,T.NIGHT]]]],[e.HISUI_ZOROARK,i.NORMAL,i.GHOST,[[N.SNOWY_FOREST,3,[T.DUSK,T.NIGHT]],[N.SNOWY_FOREST,6,[T.DUSK,T.NIGHT]]]],[e.HISUI_BRAVIARY,i.PSYCHIC,i.FLYING,[[N.MOUNTAIN,6,[T.DAWN,T.DAY]]]],[e.HISUI_SLIGGOO,i.STEEL,i.DRAGON,[[N.SWAMP,3,[T.DAWN,T.DAY]]]],[e.HISUI_GOODRA,i.STEEL,i.DRAGON,[[N.SWAMP,3,[T.DAWN,T.DAY]],[N.SWAMP,6,[T.DAWN,T.DAY]]]],[e.HISUI_AVALUGG,i.ICE,i.ROCK,[[N.SNOWY_FOREST,3]]],[e.HISUI_DECIDUEYE,i.GRASS,i.FIGHTING,[[N.DOJO,6]]],[e.PALDEA_TAUROS,i.FIGHTING,-1,[[N.PLAINS,2,[T.DAWN,T.DAY]],[N.PLAINS,6,[T.DAWN,T.DAY]]]],[e.PALDEA_WOOPER,i.POISON,i.GROUND,[[N.SWAMP,0,[T.DUSK,T.NIGHT]]]],[e.BLOODMOON_URSALUNA,i.GROUND,i.NORMAL,[[N.FOREST,3,T.NIGHT],[N.FOREST,6,T.NIGHT]]]],A=[[U.ACE_TRAINER,[[N.PLAINS,1],[N.GRASS,1],[N.TALL_GRASS,1],[N.SWAMP,1],[N.BEACH,1],[N.LAKE,1],[N.MOUNTAIN,1],[N.BADLANDS,1],[N.CAVE,1],[N.MEADOW,1],[N.RUINS,1],[N.ABYSS,1],[N.FAIRY_CAVE,1],[N.TEMPLE,1]]],[U.ARTIST,[[N.METROPOLIS,2]]],[U.BACKERS,[]],[U.BACKPACKER,[[N.MOUNTAIN,0],[N.CAVE,0],[N.BADLANDS,0],[N.JUNGLE,0]]],[U.BAKER,[[N.SLUM,1]]],[U.BEAUTY,[[N.FAIRY_CAVE,0]]],[U.BIKER,[[N.SLUM,0]]],[U.BLACK_BELT,[[N.DOJO,0],[N.PLAINS,2],[N.GRASS,2],[N.SWAMP,2],[N.BEACH,2],[N.LAKE,2],[N.MOUNTAIN,0],[N.CAVE,1],[N.RUINS,1]]],[U.BREEDER,[[N.PLAINS,0],[N.GRASS,0],[N.TALL_GRASS,1],[N.METROPOLIS,1],[N.BEACH,1],[N.LAKE,0],[N.MEADOW,1],[N.FAIRY_CAVE,1]]],[U.CLERK,[[N.METROPOLIS,0]]],[U.CYCLIST,[[N.PLAINS,1],[N.METROPOLIS,0]]],[U.DANCER,[]],[U.DEPOT_AGENT,[[N.METROPOLIS,1]]],[U.DOCTOR,[]],[U.FISHERMAN,[[N.LAKE,0],[N.BEACH,0]]],[U.RICH,[]],[U.GUITARIST,[[N.METROPOLIS,1],[N.POWER_PLANT,0]]],[U.HARLEQUIN,[]],[U.HIKER,[[N.MOUNTAIN,0],[N.CAVE,0],[N.BADLANDS,0]]],[U.HOOLIGANS,[]],[U.HOOPSTER,[]],[U.INFIELDER,[]],[U.JANITOR,[]],[U.LINEBACKER,[]],[U.MAID,[]],[U.MUSICIAN,[]],[U.NURSERY_AIDE,[]],[U.OFFICER,[[N.METROPOLIS,0],[N.CONSTRUCTION_SITE,0],[N.SLUM,0]]],[U.PARASOL_LADY,[[N.BEACH,0],[N.MEADOW,0]]],[U.PILOT,[]],[U.POKEFAN,[]],[U.PRESCHOOLER,[]],[U.PSYCHIC,[[N.GRAVEYARD,0],[N.RUINS,0]]],[U.RANGER,[[N.TALL_GRASS,1],[N.FOREST,0],[N.JUNGLE,0]]],[U.RICH_KID,[]],[U.ROUGHNECK,[[N.SLUM,0]]],[U.SCIENTIST,[[N.DESERT,0],[N.RUINS,0]]],[U.SMASHER,[]],[U.SNOW_WORKER,[[N.ICE_CAVE,0],[N.SNOWY_FOREST,0]]],[U.STRIKER,[]],[U.SCHOOL_KID,[[N.GRASS,0]]],[U.SWIMMER,[[N.SEA,0]]],[U.TWINS,[[N.PLAINS,0]]],[U.VETERAN,[[N.WASTELAND,0]]],[U.WAITER,[[N.METROPOLIS,0]]],[U.WORKER,[[N.POWER_PLANT,0],[N.FACTORY,0],[N.CONSTRUCTION_SITE,0]]],[U.YOUNGSTER,[[N.TOWN,0]]],[U.HEX_MANIAC,[[N.GRAVEYARD,1]]],[U.FIREBREATHER,[[N.VOLCANO,0]]],[U.SAILOR,[[N.SEA,0],[N.BEACH,0]]],[U.BROCK,[[N.CAVE,5]]],[U.MISTY,[[N.BEACH,5]]],[U.LT_SURGE,[[N.CONSTRUCTION_SITE,5]]],[U.ERIKA,[[N.GRASS,5]]],[U.JANINE,[[N.SWAMP,5]]],[U.SABRINA,[[N.RUINS,5]]],[U.GIOVANNI,[[N.LABORATORY,5]]],[U.BLAINE,[[N.VOLCANO,5]]],[U.FALKNER,[[N.MOUNTAIN,5]]],[U.BUGSY,[[N.FOREST,5]]],[U.WHITNEY,[[N.METROPOLIS,5]]],[U.MORTY,[[N.GRAVEYARD,5]]],[U.CHUCK,[[N.CONSTRUCTION_SITE,5]]],[U.JASMINE,[[N.FACTORY,5]]],[U.PRYCE,[[N.ICE_CAVE,5]]],[U.CLAIR,[[N.WASTELAND,5]]],[U.ROXANNE,[[N.CAVE,5]]],[U.BRAWLY,[[N.DOJO,5]]],[U.WATTSON,[[N.CONSTRUCTION_SITE,5]]],[U.FLANNERY,[[N.VOLCANO,5]]],[U.NORMAN,[[N.METROPOLIS,5]]],[U.WINONA,[[N.MOUNTAIN,5]]],[U.TATE,[[N.RUINS,5]]],[U.LIZA,[[N.RUINS,5]]],[U.JUAN,[[N.SEABED,5]]],[U.ROARK,[[N.CAVE,5]]],[U.GARDENIA,[[N.TALL_GRASS,5]]],[U.CRASHER_WAKE,[[N.LAKE,5]]],[U.MAYLENE,[[N.DOJO,5]]],[U.FANTINA,[[N.TEMPLE,5]]],[U.BYRON,[[N.FACTORY,5]]],[U.CANDICE,[[N.SNOWY_FOREST,5]]],[U.VOLKNER,[[N.POWER_PLANT,5]]],[U.CILAN,[[N.PLAINS,5]]],[U.CHILI,[[N.PLAINS,5]]],[U.CRESS,[[N.PLAINS,5]]],[U.CHEREN,[[N.PLAINS,5]]],[U.LENORA,[[N.MEADOW,5]]],[U.ROXIE,[[N.SWAMP,5]]],[U.BURGH,[[N.FOREST,5]]],[U.ELESA,[[N.POWER_PLANT,5]]],[U.CLAY,[[N.BADLANDS,5]]],[U.SKYLA,[[N.MOUNTAIN,5]]],[U.BRYCEN,[[N.ICE_CAVE,5]]],[U.DRAYDEN,[[N.WASTELAND,5]]],[U.MARLON,[[N.SEA,5]]],[U.VIOLA,[[N.TALL_GRASS,5]]],[U.GRANT,[[N.BADLANDS,5]]],[U.KORRINA,[[N.DOJO,5]]],[U.RAMOS,[[N.JUNGLE,5]]],[U.CLEMONT,[[N.POWER_PLANT,5]]],[U.VALERIE,[[N.FAIRY_CAVE,5]]],[U.OLYMPIA,[[N.SPACE,5]]],[U.WULFRIC,[[N.ICE_CAVE,5]]],[U.MILO,[[N.MEADOW,5]]],[U.NESSA,[[N.ISLAND,5]]],[U.KABU,[[N.VOLCANO,5]]],[U.BEA,[[N.DOJO,5]]],[U.ALLISTER,[[N.GRAVEYARD,5]]],[U.OPAL,[[N.FAIRY_CAVE,5]]],[U.BEDE,[[N.FAIRY_CAVE,5]]],[U.GORDIE,[[N.DESERT,5]]],[U.MELONY,[[N.SNOWY_FOREST,5]]],[U.PIERS,[[N.SLUM,5]]],[U.MARNIE,[[N.ABYSS,5]]],[U.RAIHAN,[[N.WASTELAND,5]]],[U.KATY,[[N.FOREST,5]]],[U.BRASSIUS,[[N.TALL_GRASS,5]]],[U.IONO,[[N.METROPOLIS,5]]],[U.KOFU,[[N.BEACH,5]]],[U.LARRY,[[N.METROPOLIS,5]]],[U.RYME,[[N.GRAVEYARD,5]]],[U.TULIP,[[N.RUINS,5]]],[U.GRUSHA,[[N.ICE_CAVE,5]]],[U.LORELEI,[]],[U.BRUNO,[]],[U.AGATHA,[]],[U.LANCE,[]],[U.WILL,[]],[U.KOGA,[]],[U.KAREN,[]],[U.SIDNEY,[]],[U.PHOEBE,[]],[U.GLACIA,[]],[U.DRAKE,[]],[U.AARON,[]],[U.BERTHA,[]],[U.FLINT,[]],[U.LUCIAN,[]],[U.SHAUNTAL,[]],[U.MARSHAL,[]],[U.GRIMSLEY,[]],[U.CAITLIN,[]],[U.MALVA,[]],[U.SIEBOLD,[]],[U.WIKSTROM,[]],[U.DRASNA,[]],[U.HALA,[]],[U.MOLAYNE,[]],[U.OLIVIA,[]],[U.ACEROLA,[]],[U.KAHILI,[]],[U.RIKA,[]],[U.POPPY,[]],[U.LARRY_ELITE,[]],[U.HASSEL,[]],[U.CRISPIN,[]],[U.AMARYS,[]],[U.LACEY,[]],[U.DRAYTON,[]],[U.BLUE,[]],[U.RED,[]],[U.LANCE_CHAMPION,[]],[U.STEVEN,[]],[U.WALLACE,[]],[U.CYNTHIA,[]],[U.ALDER,[]],[U.IRIS,[]],[U.DIANTHA,[]],[U.HAU,[]],[U.GEETA,[]],[U.NEMONA,[]],[U.KIERAN,[]],[U.LEON,[]],[U.RIVAL,[]]];KO[N.TOWN]=[0,1];const s=L((R,n)=>{if(R===N.END){const a=Object.keys(N).filter(S=>!isNaN(Number(S)));a.pop();const r=_e(a.length,1);R=N[a[r]]}const I=Array.isArray(An[R])?An[R]:[An[R]];for(const a of I){const r=Array.isArray(a)?a[0]:a,S=Array.isArray(a)?a[1]:1;(!KO.hasOwnProperty(r)||S<KO[r][1]||n<KO[r][0]&&S===KO[r][1])&&(KO[r]=[n+1,S],s(r,n+1))}},"traverseBiome");s(N.TOWN,0),KO[N.END]=[Object.values(KO).map(R=>R[0]).reduce((R,n)=>Math.max(R,n),0)+1,1];for(const R of uE(N)){hR[R]={},ma[R]={};for(const n of uE(zA)){hR[R][n]={},ma[R][n]=[];for(const I of uE(T))hR[R][n][I]=[]}}for(const R of E){const n=R[0],I=R[3],a=kt.hasOwnProperty(n)?kt[n]:[];!I.filter(r=>r[0]!==N.END).length&&!a.filter(r=>!!E.find(S=>S[0]===r.speciesId)[3].filter(S=>S[0]!==N.END).length).length&&L8.push(n);for(const r of I){const S=r[0],o=r[1],l=r.length>2?Array.isArray(r[2])?r[2]:[r[2]]:[T.ALL];for(const C of l){if(!hR.hasOwnProperty(S)||!hR[S].hasOwnProperty(o)||!hR[S][o].hasOwnProperty(C))continue;const M=hR[S][o][C];let u=-1,h=0;for(let P=0;P<M.length;P++){const G=M[P];for(let d=0;d<G.length;d++){const H=G[d];if(kt.hasOwnProperty(H)&&kt[H].find(f=>f.speciesId===n)){u=P,h=d+1;break}else if(a&&a.find(f=>f.speciesId===H)){u=P,h=d;break}}if(u>-1)break}u>-1?M[u].splice(h,0,n):M.push([n])}}}for(const R of Object.keys(hR))for(const n of Object.keys(hR[R])){const I=parseInt(n);for(const a of Object.keys(hR[R][n])){const r=hR[R][n][a];for(let S=0;S<r.length;S++){const o=r[S];if(o.length===1)r[S]=o[0];else{const l={1:[o[0]]};for(let C=1;C<o.length;C++){const M=o[C],u=o.map(P=>kt[P]).flat().find(P=>P&&P.speciesId===M),h=u.level-(u.level===1?1:0)+u.wildDelay*10-(I>=5?10:0);l.hasOwnProperty(h)?l[h].push(M):l[h]=[M]}r[S]=l}}}}for(const R of A){const n=R[0],I=R[1];for(const a of I){const r=a[0],S=a[1];if(!ma.hasOwnProperty(r)||!ma[r].hasOwnProperty(S))continue;ma[r][S].push(n)}}}L(UJ,"initBiomes");const hV=class hV{constructor(A,s,R){this.eventTarget=new EventTarget,this.scene=A,this.biomeType=s,this.tags=[],this.bgm=R,this.trainerPool=ma[s],this.updatePoolsForTimeOfDay()}init(){const A=Fo(this.biomeType);this.scene.arenaPlayer.setBiome(this.biomeType),this.scene.arenaPlayerTransition.setBiome(this.biomeType),this.scene.arenaEnemy.setBiome(this.biomeType),this.scene.arenaNextEnemy.setBiome(this.biomeType),this.scene.arenaBg.setTexture(`${A}_bg`),this.scene.arenaBgTransition.setTexture(`${A}_bg`),this.updatePoolsForTimeOfDay()}updatePoolsForTimeOfDay(){const A=this.getTimeOfDay();if(A!==this.lastTimeOfDay){this.pokemonPool={};for(const s of Object.keys(hR[this.biomeType]))this.pokemonPool[s]=Object.assign([],hR[this.biomeType][s][T.ALL]).concat(hR[this.biomeType][s][A]);this.lastTimeOfDay=A}}randomSpecies(A,s,R,n,I){const a=this.scene.gameMode.getOverrideSpecies(A);if(a)return a;const r=!!this.scene.getEncounterBossSegments(A,s)&&!!this.pokemonPool[zA.BOSS].length&&(this.biomeType!==N.END||this.scene.gameMode.isClassic||this.scene.gameMode.isWaveFinal(A)),S=r?64:512;let o=0;typeof n<"u"&&(o=n*(r?.5:2));const l=_e(S-o);let C=r?l>=20?zA.BOSS:l>=6?zA.BOSS_RARE:l>=1?zA.BOSS_SUPER_RARE:zA.BOSS_ULTRA_RARE:l>=156?zA.COMMON:l>=32?zA.UNCOMMON:l>=6?zA.RARE:l>=1?zA.SUPER_RARE:zA.ULTRA_RARE;for(console.log(zA[C]);!this.pokemonPool[C].length;)console.log(`Downgraded rarity tier from ${zA[C]} to ${zA[C-1]}`),C--;const M=this.pokemonPool[C];let u,h=!1;if(!M.length)u=this.scene.randomSpecies(A,s);else{const G=M[_e(M.length)];let d;if(typeof G=="number")d=G;else{const H=Object.keys(G);for(let f=H.length-1;f>=0;f--){const K=parseInt(H[f]);if(s>=K){const W=G[K];W.length>1?d=W[_e(W.length)]:d=W[0];break}}}if(u=xe(d),u.subLegendary||u.legendary||u.mythical)switch(!0){case u.baseTotal>=720:h=s<90;break;case u.baseTotal>=670:h=s<70;break;case u.baseTotal>=580:h=s<50;break;default:h=s<30;break}}if(h&&(R||0)<10)return console.log("Incompatible level: regenerating..."),this.randomSpecies(A,s,(R||0)+1);const P=u.getWildSpeciesForLevel(s,!0,I??r,this.scene.gameMode);return P!==u.speciesId&&(console.log("Replaced",e[u.speciesId],"with",e[P]),u=xe(P)),u}randomTrainerType(A,s=!1){const R=!!this.trainerPool[zA.BOSS].length&&(this.scene.gameMode.isTrainerBoss(A,this.biomeType,this.scene.offsetGym)||s);console.log(s,this.trainerPool);const n=_e(R?64:512);let I=R?n>=20?zA.BOSS:n>=6?zA.BOSS_RARE:n>=1?zA.BOSS_SUPER_RARE:zA.BOSS_ULTRA_RARE:n>=156?zA.COMMON:n>=32?zA.UNCOMMON:n>=6?zA.RARE:n>=1?zA.SUPER_RARE:zA.ULTRA_RARE;for(console.log(zA[I]);I&&!this.trainerPool[I].length;)console.log(`Downgraded trainer rarity tier from ${zA[I]} to ${zA[I-1]}`),I--;const a=this.trainerPool[I]||[];return a.length?a[_e(a.length)]:U.BREEDER}getSpeciesFormIndex(A){switch(A.speciesId){case e.BURMY:case e.WORMADAM:switch(this.biomeType){case N.BEACH:return 1;case N.SLUM:return 2}break;case e.ROTOM:switch(this.biomeType){case N.VOLCANO:return 1;case N.SEA:return 2;case N.ICE_CAVE:return 3;case N.MOUNTAIN:return 4;case N.TALL_GRASS:return 5}break;case e.LYCANROC:switch(this.getTimeOfDay()){case T.DAY:case T.DAWN:return 0;case T.DUSK:return 2;case T.NIGHT:return 1}break}return 0}getBgTerrainColorRatioForBiome(){switch(this.biomeType){case N.SPACE:return 1;case N.END:return 0}return 131/180}trySetWeatherOverride(A){return this.weather=new FT(A,0),this.scene.unshiftPhase(new Is(this.scene,void 0,void 0,oA.SUNNY+(A-1))),this.scene.queueMessage(wV(A)),!0}trySetWeather(A,s){var n,I,a,r;if(Ye.WEATHER_OVERRIDE)return this.trySetWeatherOverride(Ye.WEATHER_OVERRIDE);if(((n=this.weather)==null?void 0:n.weatherType)===(A||void 0))return!1;const R=((I=this.weather)==null?void 0:I.weatherType)||se.NONE;return this.weather=A?new FT(A,s?5:0):null,this.eventTarget.dispatchEvent(new Hi(R,(a=this.weather)==null?void 0:a.weatherType,(r=this.weather)==null?void 0:r.turnsLeft)),this.weather?(this.scene.unshiftPhase(new Is(this.scene,void 0,void 0,oA.SUNNY+(A-1),!0)),this.scene.queueMessage(wV(A))):this.scene.queueMessage(Q7(R)),this.scene.getField(!0).filter(S=>S.isOnField()).map(S=>{S.findAndRemoveTags(o=>"weatherTypes"in o&&!o.weatherTypes.find(l=>l===A)),ZQ(MS,S,A)}),!0}triggerWeatherBasedFormChanges(){this.scene.getField(!0).forEach(A=>{const s=A.hasAbility(O.FORECAST)&&A.species.speciesId===e.CASTFORM,R=A.hasAbility(O.FLOWER_GIFT)&&A.species.speciesId===e.CHERRIM;(s||R)&&(new bn(this.scene,A.getBattlerIndex()),this.scene.triggerPokemonFormChange(A,cR))})}triggerWeatherBasedFormChangesToNormal(){this.scene.getField(!0).forEach(A=>{const s=A.hasAbility(O.FORECAST,!1,!0)&&A.species.speciesId===e.CASTFORM,R=A.hasAbility(O.FLOWER_GIFT,!1,!0)&&A.species.speciesId===e.CHERRIM;if(s||R)return new bn(this.scene,A.getBattlerIndex()),this.scene.triggerPokemonFormChange(A,mn)})}trySetTerrain(A,s,R=!1){var I,a,r,S;if(((I=this.terrain)==null?void 0:I.terrainType)===(A||void 0))return!1;const n=((a=this.terrain)==null?void 0:a.terrainType)||Nt.NONE;return this.terrain=A?new $l(A,s?5:0):null,this.eventTarget.dispatchEvent(new yT(n,(r=this.terrain)==null?void 0:r.terrainType,(S=this.terrain)==null?void 0:S.turnsLeft)),this.terrain?(R||this.scene.unshiftPhase(new Is(this.scene,void 0,void 0,oA.MISTY_TERRAIN+(A-1))),this.scene.queueMessage(J7(A))):this.scene.queueMessage($7(n)),this.scene.getField(!0).filter(o=>o.isOnField()).map(o=>{o.findAndRemoveTags(l=>"terrainTypes"in l&&!l.terrainTypes.find(C=>C===A)),QQ(hU,o,A),Ct(VU,o,null,!1)}),!0}isMoveWeatherCancelled(A,s){return!!this.weather&&!this.weather.isEffectSuppressed(this.scene)&&this.weather.isMoveWeatherCancelled(A,s)}isMoveTerrainCancelled(A,s,R){return!!this.terrain&&this.terrain.isMoveTerrainCancelled(A,s,R)}getTerrainType(){var A;return((A=this.terrain)==null?void 0:A.terrainType)??Nt.NONE}getAttackTypeMultiplier(A,s){let R=1;this.weather&&!this.weather.isEffectSuppressed(this.scene)&&(R=this.weather.getAttackTypeMultiplier(A));let n=1;return this.terrain&&s&&(n=this.terrain.getAttackTypeMultiplier(A)),R*n}getTrainerChance(){switch(this.biomeType){case N.METROPOLIS:return 2;case N.SLUM:case N.BEACH:case N.DOJO:case N.CONSTRUCTION_SITE:return 4;case N.PLAINS:case N.GRASS:case N.LAKE:case N.CAVE:return 6;case N.TALL_GRASS:case N.FOREST:case N.SEA:case N.SWAMP:case N.MOUNTAIN:case N.BADLANDS:case N.DESERT:case N.MEADOW:case N.POWER_PLANT:case N.GRAVEYARD:case N.FACTORY:case N.SNOWY_FOREST:return 8;case N.ICE_CAVE:case N.VOLCANO:case N.RUINS:case N.WASTELAND:case N.JUNGLE:case N.FAIRY_CAVE:return 12;case N.SEABED:case N.ABYSS:case N.SPACE:case N.TEMPLE:return 16;default:return 0}}getTimeOfDay(){var s;switch(this.biomeType){case N.ABYSS:return T.NIGHT}const A=((((s=this.scene.currentBattle)==null?void 0:s.waveIndex)||0)+this.scene.waveCycleOffset)%40;return A<15?T.DAY:A<20?T.DUSK:A<35?T.NIGHT:T.DAWN}isOutside(){switch(this.biomeType){case N.SEABED:case N.CAVE:case N.ICE_CAVE:case N.POWER_PLANT:case N.DOJO:case N.FACTORY:case N.ABYSS:case N.FAIRY_CAVE:case N.TEMPLE:case N.LABORATORY:return!1;default:return!0}}overrideTint(){switch(Ye.ARENA_TINT_OVERRIDE){case T.DUSK:return[98,48,73].map(A=>Math.round((A+128)/2));case T.NIGHT:return[64,64,64];case T.DAWN:case T.DAY:default:return[128,128,128]}}getDayTint(){if(Ye.ARENA_TINT_OVERRIDE!==null)return this.overrideTint();switch(this.biomeType){case N.ABYSS:return[64,64,64];default:return[128,128,128]}}getDuskTint(){if(Ye.ARENA_TINT_OVERRIDE)return this.overrideTint();if(!this.isOutside())return[0,0,0];switch(this.biomeType){default:return[98,48,73].map(A=>Math.round((A+128)/2))}}getNightTint(){if(Ye.ARENA_TINT_OVERRIDE)return this.overrideTint();switch(this.biomeType){case N.ABYSS:case N.SPACE:case N.END:return this.getDayTint()}if(!this.isOutside())return[64,64,64];switch(this.biomeType){default:return[48,48,98]}}setIgnoreAbilities(A,s=null){this.ignoreAbilities=A,this.ignoringEffectSource=A?s:null}applyTagsForSide(A,s,R,...n){let I=typeof A=="string"?this.tags.filter(a=>a.tagType===A):this.tags.filter(a=>a instanceof A);s!==St.BOTH&&(I=I.filter(a=>a.side===s)),I.forEach(a=>a.apply(this,R,...n))}applyTags(A,s,...R){this.applyTagsForSide(A,St.BOTH,s,...R)}addTag(A,s,R,n,I=St.BOTH,a=!1,r){const S=this.getTagOnSide(A,I);if(S){if(S.onOverlap(this),S instanceof eO){const{tagType:l,side:C,turnCount:M,layers:u,maxLayers:h}=S;this.eventTarget.dispatchEvent(new XI(l,C,M,u,h))}return!1}const o=z6(A,s||0,R,n,r,I);if(o){this.tags.push(o),o.onAdd(this,a);const{layers:l=0,maxLayers:C=0}=o instanceof eO?o:{};this.eventTarget.dispatchEvent(new XI(o.tagType,o.side,o.turnCount,l,C))}return!0}getTag(A){return this.getTagOnSide(A,St.BOTH)}hasTag(A){return!!this.getTag(A)}getTagOnSide(A,s){return typeof A=="string"?this.tags.find(R=>R.tagType===A&&(s===St.BOTH||R.side===St.BOTH||R.side===s)):this.tags.find(R=>R instanceof A&&(s===St.BOTH||R.side===St.BOTH||R.side===s))}findTags(A){return this.findTagsOnSide(A,St.BOTH)}findTagsOnSide(A,s){return this.tags.filter(R=>A(R)&&(s===St.BOTH||R.side===St.BOTH||R.side===s))}lapseTags(){this.tags.filter(A=>!A.lapse(this)).forEach(A=>{A.onRemove(this),this.tags.splice(this.tags.indexOf(A),1),this.eventTarget.dispatchEvent(new hI(A.tagType,A.side,A.turnCount))})}removeTag(A){const s=this.tags,R=s.find(n=>n.tagType===A);return R&&(R.onRemove(this),s.splice(s.indexOf(R),1),this.eventTarget.dispatchEvent(new hI(R.tagType,R.side,R.turnCount))),!!R}removeTagOnSide(A,s,R=!1){const n=this.getTagOnSide(A,s);return n&&(n.onRemove(this,R),this.tags.splice(this.tags.indexOf(n),1),this.eventTarget.dispatchEvent(new hI(n.tagType,n.side,n.turnCount))),!!n}removeAllTags(){for(;this.tags.length;)this.tags[0].onRemove(this),this.eventTarget.dispatchEvent(new hI(this.tags[0].tagType,this.tags[0].side,this.tags[0].turnCount)),this.tags.splice(0,1)}resetArenaEffects(){var A;((A=this.weather)==null?void 0:A.turnsLeft)!==0&&this.trySetWeather(se.NONE,!1),this.trySetTerrain(Nt.NONE,!1,!0),this.removeAllTags()}preloadBgm(){this.scene.loadBgm(this.bgm)}getBgmLoopPoint(){switch(this.biomeType){case N.TOWN:return 7.288;case N.PLAINS:return 17.485;case N.GRASS:return 1.995;case N.TALL_GRASS:return 9.608;case N.METROPOLIS:return 141.47;case N.FOREST:return .341;case N.SEA:return .024;case N.SWAMP:return 4.461;case N.BEACH:return 3.462;case N.LAKE:return 7.215;case N.SEABED:return 2.6;case N.MOUNTAIN:return 4.018;case N.BADLANDS:return 17.79;case N.CAVE:return 14.24;case N.DESERT:return 1.143;case N.ICE_CAVE:return 0;case N.MEADOW:return 3.891;case N.POWER_PLANT:return 9.447;case N.VOLCANO:return 17.637;case N.GRAVEYARD:return 13.711;case N.DOJO:return 6.205;case N.FACTORY:return 4.985;case N.RUINS:return 0;case N.WASTELAND:return 6.336;case N.ABYSS:return 5.13;case N.SPACE:return 20.036;case N.CONSTRUCTION_SITE:return 1.222;case N.JUNGLE:return 0;case N.FAIRY_CAVE:return 4.542;case N.TEMPLE:return 2.547;case N.ISLAND:return 2.751;case N.LABORATORY:return 114.862;case N.SLUM:return 0;case N.SNOWY_FOREST:return 3.047;default:return console.warn(`missing bgm loop-point for biome "${N[this.biomeType]}" (=${this.biomeType})`),0}}};L(hV,"Arena");let hD=hV;function Fo(E){return N[E].toLowerCase()}L(Fo,"getBiomeKey");function N8(E){switch(E){case N.METROPOLIS:case N.BEACH:case N.LAKE:case N.SEABED:case N.MOUNTAIN:case N.BADLANDS:case N.CAVE:case N.DESERT:case N.ICE_CAVE:case N.MEADOW:case N.POWER_PLANT:case N.VOLCANO:case N.GRAVEYARD:case N.FACTORY:case N.RUINS:case N.WASTELAND:case N.ABYSS:case N.CONSTRUCTION_SITE:case N.JUNGLE:case N.FAIRY_CAVE:case N.TEMPLE:case N.SNOWY_FOREST:case N.ISLAND:case N.LABORATORY:case N.END:return!0}return!1}L(N8,"getBiomeHasProps");const cV=class cV extends Phaser.GameObjects.Container{constructor(A,s){super(A,0,0),this.player=s,this.base=A.addFieldSprite(0,0,"plains_a",void 0,1),this.base.setOrigin(0,0),this.props=s?[]:new Array(3).fill(null).map(()=>{const R=A.addFieldSprite(0,0,"plains_b",void 0,1);return R.setOrigin(0,0),R.setVisible(!1),R})}setBiome(A,s){var a;const R=N8(A),n=Fo(A),I=`${n}_${this.player?"a":"b"}`;if(A!==this.biome){if(this.base.setTexture(I),this.base.texture.frameTotal>1){const r=this.scene.anims.generateFrameNames(I,{zeroPad:4,suffix:".png",start:1,end:this.base.texture.frameTotal-1});this.scene.anims.exists(I)||this.scene.anims.create({key:I,frames:r,frameRate:12,repeat:-1}),this.base.play(I)}else this.base.stop();this.add(this.base)}this.player||this.scene.executeWithSeedOffset(()=>{this.propValue=s===void 0?R?_e(8):0:s,this.props.forEach((r,S)=>{const o=`${n}_b${R?`_${S+1}`:""}`;if(r.setTexture(o),R&&r.texture.frameTotal>1){const l=this.scene.anims.generateFrameNames(o,{zeroPad:4,suffix:".png",start:1,end:r.texture.frameTotal-1});this.scene.anims.exists(o)||this.scene.anims.create({key:o,frames:l,frameRate:12,repeat:-1}),r.play(o)}else r.stop();r.setVisible(R&&!!(this.propValue&1<<S)),this.add(r)})},((a=this.scene.currentBattle)==null?void 0:a.waveIndex)||0,this.scene.waveSeed)}};L(cV,"ArenaBase");let Ja=cV,il;const _V=class _V extends Phaser.Loader.LoaderPlugin{constructor(A){super(A)}get manifest(){return il}set manifest(A){il=A}addFile(A){Array.isArray(A)||(A=[A]),A.forEach(s=>{if(il){const R=il[`/${s.url.replace(/\/\//g,"/")}`];R&&(s.url+=`?t=${R}`)}}),super.addFile(A)}};L(_V,"CacheBustedLoaderPlugin");let Jd=_V;const lI=class lI extends ul{constructor(){super(lI.KEY),this.LOAD_EVENTS=Phaser.Loader.Events,Phaser.Plugins.PluginCache.register("Loader",Jd,"load")}preload(){x8(),this.load.manifest=this.game.manifest,this.loadImage("loading_bg","arenas"),this.loadImage("logo",""),this.loadAtlas("bg","ui"),this.loadAtlas("prompt","ui"),this.loadImage("candy","ui"),this.loadImage("candy_overlay","ui"),this.loadImage("friendship","ui"),this.loadImage("friendship_overlay","ui"),this.loadImage("cursor","ui"),this.loadImage("cursor_reverse","ui");for(const R of uE(qR))for(let n=1;n<=5;n++)this.loadImage(`window_${n}${hL(R)}`,"ui/windows");this.loadAtlas("namebox","ui"),this.loadImage("pbinfo_player","ui"),this.loadImage("pbinfo_player_stats","ui"),this.loadImage("pbinfo_player_mini","ui"),this.loadImage("pbinfo_player_mini_stats","ui"),this.loadAtlas("pbinfo_player_type","ui"),this.loadAtlas("pbinfo_player_type1","ui"),this.loadAtlas("pbinfo_player_type2","ui"),this.loadImage("pbinfo_enemy_mini","ui"),this.loadImage("pbinfo_enemy_mini_stats","ui"),this.loadImage("pbinfo_enemy_boss","ui"),this.loadImage("pbinfo_enemy_boss_stats","ui"),this.loadAtlas("pbinfo_enemy_type","ui"),this.loadAtlas("pbinfo_enemy_type1","ui"),this.loadAtlas("pbinfo_enemy_type2","ui"),this.loadAtlas("pbinfo_stat","ui"),this.loadAtlas("pbinfo_stat_numbers","ui"),this.loadImage("overlay_lv","ui"),this.loadAtlas("numbers","ui"),this.loadAtlas("numbers_red","ui"),this.loadAtlas("overlay_hp","ui"),this.loadAtlas("overlay_hp_boss","ui"),this.loadImage("overlay_exp","ui"),this.loadImage("icon_owned","ui"),this.loadImage("icon_egg_move","ui"),this.loadImage("ability_bar_left","ui"),this.loadImage("bgm_bar","ui"),this.loadImage("party_exp_bar","ui"),this.loadImage("achv_bar","ui"),this.loadImage("achv_bar_2","ui"),this.loadImage("achv_bar_3","ui"),this.loadImage("achv_bar_4","ui"),this.loadImage("achv_bar_5","ui"),this.loadImage("shiny_star","ui","shiny.png"),this.loadImage("shiny_star_1","ui","shiny_1.png"),this.loadImage("shiny_star_2","ui","shiny_2.png"),this.loadImage("shiny_star_small","ui","shiny_small.png"),this.loadImage("shiny_star_small_1","ui","shiny_small_1.png"),this.loadImage("shiny_star_small_2","ui","shiny_small_2.png"),this.loadImage("favorite","ui","favorite.png"),this.loadImage("passive_bg","ui","passive_bg.png"),this.loadAtlas("shiny_icons","ui"),this.loadImage("ha_capsule","ui","ha_capsule.png"),this.loadImage("champion_ribbon","ui","champion_ribbon.png"),this.loadImage("icon_spliced","ui"),this.loadImage("icon_lock","ui","icon_lock.png"),this.loadImage("icon_stop","ui","icon_stop.png"),this.loadImage("icon_tera","ui"),this.loadImage("type_tera","ui"),this.loadAtlas("type_bgs","ui"),this.loadImage("dawn_icon_fg","ui"),this.loadImage("dawn_icon_mg","ui"),this.loadImage("dawn_icon_bg","ui"),this.loadImage("day_icon_fg","ui"),this.loadImage("day_icon_mg","ui"),this.loadImage("day_icon_bg","ui"),this.loadImage("dusk_icon_fg","ui"),this.loadImage("dusk_icon_mg","ui"),this.loadImage("dusk_icon_bg","ui"),this.loadImage("night_icon_fg","ui"),this.loadImage("night_icon_mg","ui"),this.loadImage("night_icon_bg","ui"),this.loadImage("pb_tray_overlay_player","ui"),this.loadImage("pb_tray_overlay_enemy","ui"),this.loadAtlas("pb_tray_ball","ui"),this.loadImage("party_bg","ui"),this.loadImage("party_bg_double","ui"),this.loadAtlas("party_slot_main","ui"),this.loadAtlas("party_slot","ui"),this.loadImage("party_slot_overlay_lv","ui"),this.loadImage("party_slot_hp_bar","ui"),this.loadAtlas("party_slot_hp_overlay","ui"),this.loadAtlas("party_pb","ui"),this.loadAtlas("party_cancel","ui"),this.loadImage("summary_bg","ui"),this.loadImage("summary_overlay_shiny","ui"),this.loadImage("summary_profile","ui"),this.loadImage("summary_profile_prompt_z","ui"),this.loadImage("summary_profile_prompt_a","ui"),this.loadImage("summary_profile_ability","ui"),this.loadImage("summary_profile_passive","ui"),this.loadImage("summary_status","ui"),this.loadImage("summary_stats","ui"),this.loadImage("summary_stats_overlay_exp","ui"),this.loadImage("summary_moves","ui"),this.loadImage("summary_moves_effect","ui"),this.loadImage("summary_moves_overlay_row","ui"),this.loadImage("summary_moves_overlay_pp","ui"),this.loadAtlas("summary_moves_cursor","ui");for(let R=1;R<=3;R++)this.loadImage(`summary_tabs_${R}`,"ui");this.loadImage("scroll_bar","ui"),this.loadImage("scroll_bar_handle","ui"),this.loadImage("starter_container_bg","ui"),this.loadImage("starter_select_bg","ui"),this.loadImage("select_cursor","ui"),this.loadImage("select_cursor_highlight","ui"),this.loadImage("select_cursor_highlight_thick","ui"),this.loadImage("select_cursor_pokerus","ui"),this.loadImage("select_gen_cursor","ui"),this.loadImage("select_gen_cursor_highlight","ui"),this.loadImage("saving_icon","ui"),this.loadImage("discord","ui"),this.loadImage("google","ui"),this.loadImage("settings_icon","ui"),this.loadImage("link_icon","ui"),this.loadImage("unlink_icon","ui"),this.loadImage("default_bg","arenas"),uE(N).map(R=>{const n=N[R].toLowerCase(),I=n==="end",a=`${n}_a`,r=`${n}_b`;if(this.loadImage(`${n}_bg`,"arenas"),I?this.loadAtlas(a,"arenas"):this.loadImage(a,"arenas"),I?this.loadAtlas(r,"arenas"):this.loadImage(r,"arenas"),N8(R))for(let S=1;S<=3;S++){const o=S===3&&["power_plant","end"].find(C=>C===n),l=`${n}_b_${S}`;o?this.loadAtlas(l,"arenas"):this.loadImage(l,"arenas")}}),this.load.bitmapFont("item-count","fonts/item-count.png","fonts/item-count.xml"),this.loadAtlas("trainer_m_back","trainer"),this.loadAtlas("trainer_m_back_pb","trainer"),this.loadAtlas("trainer_f_back","trainer"),this.loadAtlas("trainer_f_back_pb","trainer"),this.loadAtlas("c_rival_m","character","rival_m"),this.loadAtlas("c_rival_f","character","rival_f"),this.loadImage("pkmn__back__sub","pokemon/back","sub.png"),this.loadImage("pkmn__sub","pokemon","sub.png"),this.loadAtlas("battle_stats","effects"),this.loadAtlas("shiny","effects"),this.loadAtlas("shiny_2","effects"),this.loadAtlas("shiny_3","effects"),this.loadImage("tera","effects"),this.loadAtlas("pb_particles","effects"),this.loadImage("evo_sparkle","effects"),this.loadAtlas("tera_sparkle","effects"),this.load.video("evo_bg","images/effects/evo_bg.mp4",!0),this.loadAtlas("pb",""),this.loadAtlas("items",""),this.loadAtlas("types","");const A=D.resolvedLanguage;A!=="en"?b8(A)?(this.loadAtlas(`statuses_${A}`,""),this.loadAtlas(`types_${A}`,"")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")),A&&["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"].includes(A)?this.loadImage("winter_holidays2024-event-"+A,"events"):this.loadImage("winter_holidays2024-event-en","events"),this.loadAtlas("statuses",""),this.loadAtlas("categories",""),this.loadAtlas("egg","egg"),this.loadAtlas("egg_crack","egg"),this.loadAtlas("egg_icons","egg"),this.loadAtlas("egg_shard","egg"),this.loadAtlas("egg_lightrays","egg"),IO(Pn).forEach(R=>{const n=R.toLowerCase();this.loadImage(`gacha_${n}`,"egg"),this.loadAtlas(`gacha_underlay_${n}`,"egg")}),this.loadImage("gacha_glass","egg"),this.loadImage("gacha_eggs","egg"),this.loadAtlas("gacha_hatch","egg"),this.loadImage("gacha_knob","egg"),this.loadImage("egg_list_bg","ui"),this.loadImage("egg_summary_bg","ui"),this.loadImage("end_m","cg"),this.loadImage("end_f","cg");for(let R=0;R<10;R++)this.loadAtlas(`pokemon_icons_${R}`,""),R&&this.loadAtlas(`pokemon_icons_${R}v`,"");this.loadImage("encounter_radar","mystery-encounters"),this.loadAtlas("dualshock","inputs"),this.loadAtlas("xbox","inputs"),this.loadAtlas("keyboard","inputs"),this.loadSe("select","ui"),this.loadSe("menu_open","ui"),this.loadSe("error","ui"),this.loadSe("hit"),this.loadSe("hit_strong"),this.loadSe("hit_weak"),this.loadSe("stat_up"),this.loadSe("stat_down"),this.loadSe("faint"),this.loadSe("flee"),this.loadSe("low_hp"),this.loadSe("exp"),this.loadSe("level_up"),this.loadSe("sparkle"),this.loadSe("restore"),this.loadSe("shine"),this.loadSe("shing"),this.loadSe("charge"),this.loadSe("beam"),this.loadSe("upgrade"),this.loadSe("buy"),this.loadSe("achv"),this.loadSe("pb_rel"),this.loadSe("pb_throw"),this.loadSe("pb_bounce_1"),this.loadSe("pb_bounce_2"),this.loadSe("pb_move"),this.loadSe("pb_catch"),this.loadSe("pb_lock"),this.loadSe("pb_tray_enter"),this.loadSe("pb_tray_ball"),this.loadSe("pb_tray_empty"),this.loadSe("egg_crack"),this.loadSe("egg_hatch"),this.loadSe("gacha_dial"),this.loadSe("gacha_running"),this.loadSe("gacha_dispense"),this.loadSe("PRSFX- Transform","battle_anims"),this.loadBgm("menu"),this.loadBgm("level_up_fanfare","bw/level_up_fanfare.mp3"),this.loadBgm("item_fanfare","bw/item_fanfare.mp3"),this.loadBgm("minor_fanfare","bw/minor_fanfare.mp3"),this.loadBgm("heal","bw/heal.mp3"),this.loadBgm("victory_trainer","bw/victory_trainer.mp3"),this.loadBgm("victory_team_plasma","bw/victory_team_plasma.mp3"),this.loadBgm("victory_gym","bw/victory_gym.mp3"),this.loadBgm("victory_champion","bw/victory_champion.mp3"),this.loadBgm("evolution","bw/evolution.mp3"),this.loadBgm("evolution_fanfare","bw/evolution_fanfare.mp3"),this.load.plugin("rextexteditplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rextexteditplugin.min.js",!0),this.loadLoadingScreen(),B7(),g7(),IQ(),CJ(),UJ(),c7(),lZ(),h7(),SJ(),zQ(),XX(),ZX()}loadLoadingScreen(){const A=k8(),s=[],R=this.add.image(0,0,"");R.setOrigin(0,0),R.setScale(6),R.setVisible(!1);const n=this.add.graphics();n.lineStyle(4,16711935,1).setDepth(10);const I=this.add.graphics(),a=this.add.graphics();a.lineStyle(5,16711935,1),a.fillStyle(2236962,.8);const r=this.cameras.main.width,S=this.cameras.main.height,o=r/2,l=S/2,C=this.add.image(o,240,"");C.setVisible(!1),C.setOrigin(.5,.5),C.setScale(4);const M=this.make.text({x:o,y:l-24,text:"0%",style:{font:"72px emerald",color:"#ffffff"}});M.setOrigin(.5,.5);const u=this.make.text({x:o,y:l+48,text:"",style:{font:"48px emerald",color:"#ffffff"}});u.setOrigin(.5,.5);const h=this.make.text({x:o,y:u.y+152,text:D.t("menu:disclaimer"),style:{font:"72px emerald",color:"#DA3838"}});h.setOrigin(.5,.5);const P=this.make.text({x:o,y:h.y+120,text:D.t("menu:disclaimerDescription"),style:{font:"48px emerald",color:"#ffffff",align:"center"}});P.setOrigin(.5,.5),s.push(R,n,I,a,C,M,u,h,P),A||s.map(d=>d.setVisible(!1));const G=this.add.video(0,0);G.once(Phaser.GameObjects.Events.VIDEO_COMPLETE,d=>{this.tweens.add({targets:G,duration:500,alpha:0,ease:"Sine.easeIn",onComplete:L(()=>d.destroy(),"onComplete")}),s.forEach(H=>H.setVisible(!0))}),G.setOrigin(0,0),G.setScale(3),this.load.once(this.LOAD_EVENTS.START,()=>{var d,H;G.loadURL("images/intro_dark.mp4",!0),A&&((d=G.video)==null||d.setAttribute("webkit-playsinline","webkit-playsinline"),(H=G.video)==null||H.setAttribute("playsinline","playsinline")),G.play()}),this.load.on(this.LOAD_EVENTS.PROGRESS,d=>{M.setText(`${Math.floor(d*100)}%`),I.clear(),I.fillStyle(16777215,.8),I.fillRect(o-320,360,640*d,64)}),this.load.on(this.LOAD_EVENTS.FILE_COMPLETE,d=>{switch(u.setText(D.t("menu:loadingAsset",{assetName:d})),d){case"loading_bg":R.setTexture("loading_bg"),A&&R.setVisible(!0);break;case"logo":C.setTexture("logo"),A&&C.setVisible(!0);break}}),this.load.on(this.LOAD_EVENTS.COMPLETE,()=>{s.forEach(d=>d.destroy()),G.destroy()})}get gameHeight(){return this.game.config.height}get gameWidth(){return this.game.config.width}async create(){this.events.once(Phaser.Scenes.Events.DESTROY,()=>this.handleDestroy()),this.scene.start("battle")}handleDestroy(){console.debug(`Destroying ${lI.KEY} scene`),this.load.off(this.LOAD_EVENTS.PROGRESS),this.load.off(this.LOAD_EVENTS.FILE_COMPLETE),this.load.off(this.LOAD_EVENTS.COMPLETE),this.children.removeAll(!0),console.debug(`Destroyed ${lI.KEY} scene`)}};L(lI,"LoadingScene"),lI.KEY="loading";let cD=lI;const hJ=Object.freeze(Object.defineProperty({__proto__:null,LoadingScene:cD},Symbol.toStringTag,{value:"Module"}));export{MJ as b,hJ as l};
